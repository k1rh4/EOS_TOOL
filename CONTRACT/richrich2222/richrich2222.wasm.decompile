(data (i32.const 4) "pt\00\00")
(data (i32.const 32) "transfer\00")
(data (i32.const 48) "ecaf\00")
(data (i32.const 64) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 128) "invalid symbol name\00")
(data (i32.const 160) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 224) "attempt to add asset with different symbol\00")
(data (i32.const 272) "addition underflow\00")
(data (i32.const 304) "addition overflow\00")
(data (i32.const 336) "cannot pass end iterator to erase\00")
(data (i32.const 384) "cannot increment end iterator\00")
(data (i32.const 416) "\e6\af\8f\e5\a4\a9\e7\b4\af\e8\ae\a110000EOS\e6\b5\81\e6\b0\b4,\e5\a5\96\e5\8a\b130EOS\00")
(data (i32.const 464) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 528) "active\00")
(data (i32.const 544) "eosio.token\00")
(data (i32.const 560) "write\00")
(data (i32.const 576) "object passed to erase is not in multi_index\00")
(data (i32.const 624) "cannot erase objects in table of another contract\00")
(data (i32.const 688) "attempt to remove object that was not in multi_index\00")
(data (i32.const 752) "error reading iterator\00")
(data (i32.const 784) "read\00")
(data (i32.const 800) "firewall.x\00")
(data (i32.const 816) "misdirection\00")
(data (i32.const 832) "keyking\00")
(data (i32.const 848) "cannot pass end iterator to modify\00")
(data (i32.const 896) "cannot create objects in table of another contract\00")
(data (i32.const 960) "object passed to modify is not in multi_index\00")
(data (i32.const 1008) "cannot modify objects in table of another contract\00")
(data (i32.const 1072) "updater cannot change primary key when modifying an object\00")
(data (i32.const 1136) "richrich2222\00")
(data (i32.const 1152) "reveal\00")
(data (i32.const 1168) "game id\e4\b8\8d\e5\af\b9\00")
(data (i32.const 1184) "\e8\bf\98\e6\b2\a1\e6\9c\89\e5\88\b0\e5\bc\80\e5\a5\96\e6\97\b6\e9\97\b4\00")
(data (i32.const 1216) "result:::\00")
(data (i32.const 1232) "   \00")
(data (i32.const 1248) "richrichdevs\00")
(data (i32.const 1264) "\e6\8c\96\e7\9f\bf.\00")
(data (i32.const 1280) "attempt to subtract asset with different symbol\00")
(data (i32.const 1328) "subtraction underflow\00")
(data (i32.const 1360) "subtraction overflow\00")
(data (i32.const 1392) "\e5\b1\80\e7\8c\9c\e4\b8\ad\e4\ba\86.\00")
(data (i32.const 1408) "multiplication overflow\00")
(data (i32.const 1440) "multiplication underflow\00")
(data (i32.const 1472) "divide by zero\00")
(data (i32.const 1488) "signed division overflow\00")
(data (i32.const 1520) "receipt\00")
(data (i32.const 1536) "get\00")
(data (i32.const 1552) "richrichpoo1\00")
(data (i32.const 1568) "for pool\00")
(data (i32.const 1584) "unable to find key\00")
(data (i32.const 1616) "fund error\00")
(data (i32.const 1632) "fund pool overdraw\00")
(data (i32.const 1664) "richrich1111\00")
(data (i32.const 1680) "XXXXXXX\00")
(data (i32.const 1696) "eosio.ram\00")
(data (i32.const 1712) "\e4\bd\a0\e4\b8\8d\e5\9c\a8\e7\94\b3\e8\af\b7\e9\98\9f\e5\88\97\e5\86\85.\00")
(data (i32.const 1744) "\e5\bd\93\e5\89\8d\e4\bd\a0\e4\b8\8d\e6\98\af\e5\ba\84\00")
(data (i32.const 1776) "\e4\bd\a0\e5\b7\b2\e7\bb\8f\e6\98\af\e5\ba\84\e4\ba\86.\00")
(data (i32.const 1808) "\e4\bd\a0\e5\b7\b2\e7\bb\8f\e5\8a\a0\e5\85\a5\e9\98\9f\e5\88\97\e4\ba\86.\00")
(data (i32.const 1840) "\e9\9c\80\e8\a6\81\e5\a4\a7\e4\ba\8e200EOS\e4\bb\a5\e4\b8\8a\e6\89\8d\e8\83\bd\e4\b8\8a\e5\ba\84\00")
(data (i32.const 1888) "invalid quantity\00")
(data (i32.const 1920) "must issue positive quantity\00")
(data (i32.const 1952) "\e4\b8\8b\e5\ba\84\e5\90\8e\e6\89\8d\e5\8f\af\e4\bb\a5\e6\8f\90\e7\8e\b0\00")
(data (i32.const 1984) "\e6\8f\90\e5\8f\96\e6\8a\bc\e9\87\91.\00")
(data (i32.const 2000) "bug?\00")
(data (i32.const 2016) "\e6\8f\90\e7\8e\b0\e7\9a\84\e9\92\b1\e5\a4\a7\e4\ba\8e\e6\8a\bc\e9\87\91\e4\ba\86.\00")
(data (i32.const 2048) "\e4\bd\a0\e6\b2\a1\e6\9c\89\e8\af\a5\e9\81\93\e5\85\b7\00")
(data (i32.const 2080) "useproplog\00")
(data (i32.const 2096) ".\00")
(data (i32.const 2112) "for dev\00")
(data (i32.const 2128) "\e6\8f\90\e7\8e\b0\e7\9a\84\e6\8a\bc\e9\87\91\e9\9c\80\e8\a6\81\e5\a4\a7\e4\ba\8e0\00")
(data (i32.const 2160) "deposit\00")
(data (i32.const 2176) "\e6\8f\90\e5\8f\96\e9\87\91\e9\a2\9d\e9\9c\80\e8\a6\81\e5\a4\a7\e4\ba\8e0\00")
(data (i32.const 2208) "next primary key in table is at autoincrement limit\00")
(data (i32.const 2272) "diy123451234\00")
(data (i32.const 2288) "suweijie1234\00")
(data (i32.const 2304) "\e7\89\b9\e5\88\ab\e7\9a\84\e5\a4\87\e6\b3\a8.\00")
(data (i32.const 2336) "\e6\8f\90\e5\8f\96key\e5\a5\96\e9\87\91\00")
(data (i32.const 2352) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 2416) "cannot decrement iterator at beginning of table\00")
(data (i32.const 2464) "\e5\bd\93\e5\89\8d\e4\b8\8d\e9\9c\80\e8\a6\81\e6\94\af\e4\bb\98\e7\a7\9f\e9\87\91\00")
(data (i32.const 2496) "\e8\bf\99\e5\9d\97\e5\9c\b0\e6\98\af\e4\bd\a0\e7\9a\84,\e4\b8\8d\e9\9c\80\e8\a6\81\e6\94\af\e4\bb\98\e7\a7\9f\e9\87\91\00")
(data (i32.const 2544) "\e6\8a\bc\e9\87\91\e4\b8\8d\e5\a4\9f\ef\bc\8c\e6\97\a0\e6\b3\95\e6\94\af\e4\bb\98\e6\8a\bc\e9\87\91\00")
(data (i32.const 2592) "\e6\94\b6\e7\a7\9f.\00")
(data (i32.const 2608) "richrichlogs\00")
(data (i32.const 2624) "\e4\bb\a3\e5\b8\81\e9\94\80\e6\af\81.\00")
(data (i32.const 2640) "sorry\00")
(data (i32.const 2656) "\e6\99\9a\e4\b8\8a8\e7\82\b9\e5\bc\80\e5\a7\8b\00")
(data (i32.const 2688) "\e9\9c\80\e8\a6\81\e8\b4\a8\e6\8a\bc\e5\a4\a7\e4\ba\8e5000\e7\9a\84\e4\bb\a3\e5\b8\81\00")
(data (i32.const 2720) "\e8\af\b7\e5\85\88\e9\9a\8f\e6\9c\ba\e9\80\89\e6\8b\a9\e5\87\ba\e7\94\9f\e7\82\b9.\00")
(data (i32.const 2752) "\e9\9c\80\e8\a6\81\e5\85\88\e6\94\af\e4\bb\98\e6\8a\bc\e9\87\91\e6\88\96\e8\80\85\e8\b4\ad\e4\b9\b0\e5\9c\9f\e5\9c\b0\00")
(data (i32.const 2800) "\e5\b7\b2\e7\bb\8f\e5\88\9d\e5\a7\8b\e5\8c\96\e8\bf\87\e4\ba\86...\00")
(data (i32.const 2832) "reveal2\00")
(data (i32.const 2848) "reveal1\00")
(data (i32.const 2864) " \00")
(data (i32.const 2880) "result\00")
(data (i32.const 2896) "bet id:\00")
(data (i32.const 2912) " player: \00")
(data (i32.const 2928) " winner! eosrich.win\00")
(data (i32.const 2952) "\90\0b\00\00")
(data (i32.const 2960) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 3008) "bet not found\00")
(data (i32.const 3024) "richsecurity\00")
(data (i32.const 3040) "save\00")
(data (i32.const 3056) "auction\00")
(data (i32.const 3072) "buyland2010\00")
(data (i32.const 3088) "buyhostel2010\00")
(data (i32.const 3104) "buytoken\00")
(data (i32.const 3120) "playdice\00")
(data (i32.const 3136) "stop\00")
(data (i32.const 3152) "playcard\00")
(data (i32.const 3168) "mapauction\00")
(data (i32.const 3184) "addmapauction\00")
(data (i32.const 3200) "memo should >= 7\00")
(data (i32.const 3232) "\e6\9c\ac\e5\b1\80\e5\b7\b2\e7\bb\8f\e7\bb\93\e6\9d\9f\00")
(data (i32.const 3264) "\e6\b8\b8\e6\88\8f\e8\bf\98\e6\b2\a1\e6\9c\89\e5\bc\80\e5\a7\8b\00")
(data (i32.const 3296) "\e6\b8\b8\e6\88\8f\e5\b7\b2\e7\bb\8f\e5\81\9c\e6\ad\a2\e4\b8\8b\e6\b3\a8\00")
(data (i32.const 3328) "\e6\b8\b8\e6\88\8f\e4\b8\8b\e6\b3\a8\e9\87\91\e9\a2\9d\e5\b7\b2\e6\bb\a1\00")
(data (i32.const 3360) "\e4\b8\8b\e6\b3\a8\e9\87\91\e9\a2\9d\e4\b8\8d\e5\af\b9.\00")
(data (i32.const 3392) "\e6\9c\80\e5\b0\8f\e4\b8\8b\e6\b3\a8\e9\87\91\e9\a2\9d\e4\b8\ba0.1\00")
(data (i32.const 3424) "\e6\9c\80\e5\a4\a7\e4\b8\8b\e6\b3\a8\e9\87\91\e9\a2\9d\e4\b8\ba100\00")
(data (i32.const 3456) "\e4\b8\8b\e6\b3\a8\e9\87\91\e9\a2\9d\e4\b8\8d\e8\83\bd\e5\a4\a7\e4\ba\8e\e5\ba\84\e5\ae\b6\e9\87\91\e9\a2\9d.\00")
(data (i32.const 3504) "for refer\00")
(data (i32.const 3520) "\e6\8c\96\e7\9f\bf\00")
(data (i32.const 3536) "winner rank!\00")
(data (i32.const 3552) "Bets should not < 0.1\00")
(data (i32.const 3584) "Bets should not > 100\00")
(data (i32.const 3616) "\e6\8a\95\e6\b3\a8\e9\94\99\e8\af\af.\00")
(data (i32.const 3632) "referrer account does not exist\00")
(data (i32.const 3664) "referrer can not be self\00")
(data (i32.const 3696) "winninetysix\00")
(data (i32.const 3712) "proxy\00")
(data (i32.const 3728) "\e6\9c\80\e5\b0\8f\e6\8a\95\e6\b3\a8\e9\a2\9d\e4\b8\ba0.1\00")
(data (i32.const 3760) "\e6\9c\80\e5\a4\a7\e6\8a\95\e6\b3\a8\e9\a2\9d\e4\b8\ba300\00")
(data (i32.const 3792) "\e5\b0\8f\e4\ba\8e\e6\9c\80\e5\b0\8f\e6\8a\95\e6\b3\a8\e9\a2\9d\00")
(data (i32.const 3824) "\e6\9c\80\e5\a4\a7\e6\8a\95\e6\b3\a8\e9\a2\9d\e4\b8\ba1\00")
(data (i32.const 3856) "get rich token\00")
(data (i32.const 3872) " referral reward! eosrich.win\00")
(data (i32.const 3904) "roll under overflow, must be greater than 2 and less than 96\00")
(data (i32.const 3968) "offered overflow, expected earning is greater than the maximum bonus\00")
(data (i32.const 4048) "\e5\bd\93\e5\89\8d\e4\b8\8d\e5\85\81\e8\ae\b8\e8\b4\ad\e4\b9\b0token\00")
(data (i32.const 4080) "\e8\b4\ad\e4\b9\b0\e9\87\91\e9\a2\9d\e9\9c\80\e8\a6\81\e5\b0\8f\e4\ba\8e500EOS\00")
(data (i32.const 4112) "\e7\94\a8\e6\88\b7\e8\b4\ad\e4\b9\b0token\00")
(data (i32.const 4144) "\e5\bd\93\e5\89\8d\e4\b8\8d\e5\85\81\e8\ae\b8\e8\b4\ad\e4\b9\b0\e6\97\85\e9\a6\86\00")
(data (i32.const 4176) "\e4\b8\80\e6\ac\a1\e8\83\bd\e5\a4\9a\e8\83\bd\e8\b4\ad\e4\b9\b01\e9\97\b4\e6\97\85\e9\a6\86\00")
(data (i32.const 4208) "\e8\bf\99\e5\9d\97\e5\9c\b0\e4\b8\8d\e6\98\af\e4\bd\a0\e7\9a\84,\e6\97\a0\e6\b3\95\e8\b4\ad\e4\b9\b0\e6\97\85\e9\a6\86\00")
(data (i32.const 4256) "\e8\b4\ad\e4\b9\b0\e9\87\91\e9\a2\9d\e4\b8\8d\e5\af\b9\00")
(data (i32.const 4288) "\e5\bd\93\e5\89\8d\e4\b8\8d\e5\85\81\e8\ae\b8\e8\b4\ad\e4\b9\b0\e8\bf\99\e5\9d\97\e5\9c\b0\00")
(data (i32.const 4320) "\e8\bf\99\e5\9d\97\e5\9c\b0\e5\b7\b2\e7\bb\8f\e6\98\af\e4\bd\a0\e7\9a\84\e4\ba\86\00")
(data (i32.const 4352) "return\00")
(data (i32.const 4368) "next hold\00")
(data (i32.const 4384) "\e5\bd\93\e5\89\8d\e4\b8\8d\e5\85\81\e8\ae\b8\e6\8b\8d\e5\8d\96\00")
(data (i32.const 4416) "\e5\87\ba\e4\bb\b7\e9\9c\80\e8\a6\81\e5\a4\a7\e4\ba\8e\e5\bd\93\e5\89\8d\e6\8b\8d\e5\8d\96\e9\87\91\e9\a2\9d\e7\9a\841.1\e5\80\8d\00")
(data (i32.const 4464) "\e6\8b\8d\e5\8d\96\e8\bf\98\e6\b2\a1\e6\9c\89\e5\bc\80\e5\90\af\00")
(data (i32.const 4496) "destroy\00")
(data (i32.const 4512) "auction winner\00")
(data (i32.const 12928) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 13024) "stoi\00")
(data (i32.const 13040) ": no conversion\00")
(data (i32.const 13056) ": out of range\00")
(data (i32.const 13088) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00\f8?")
(data (i32.const 13104) "\00\00\00\00\00\00\00\00\06\d0\cfC\eb\fdL>")
(data (i32.const 13120) "\00\00\00\00\00\00\00\00\00\00\00@\03\b8\e2?")
(data (i32.const 13136) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\01\02\03\04\05\06\07\08\t\ff\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
(data (i32.const 13408) "\00\01\02\04\07\03\06\05\00")
(import "env" "__multi3" (func $fimport$0 (param i32 i64 i64 i64 i64)))
(import "env" "abort" (func $fimport$1))
(import "env" "action_data_size" (func $fimport$2 (result i32)))
(import "env" "current_receiver" (func $fimport$3 (result i64)))
(import "env" "current_time" (func $fimport$4 (result i64)))
(import "env" "db_end_i64" (func $fimport$5 (param i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$6 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$7 (param i32 i32 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$8 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$9 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$10 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$11 (param i32)))
(import "env" "db_store_i64" (func $fimport$12 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$13 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$14 (param i32 i32)))
(import "env" "eosio_exit" (func $fimport$15 (param i32)))
(import "env" "is_account" (func $fimport$16 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$17 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$18 (param i32 i32 i32) (result i32)))
(import "env" "memset" (func $fimport$19 (param i32 i32 i32) (result i32)))
(import "env" "prints" (func $fimport$20 (param i32)))
(import "env" "prints_l" (func $fimport$21 (param i32 i32)))
(import "env" "read_action_data" (func $fimport$22 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$23 (param i64)))
(import "env" "require_auth2" (func $fimport$24 (param i64 i64)))
(import "env" "send_deferred" (func $fimport$25 (param i32 i64 i32 i32 i32)))
(import "env" "send_inline" (func $fimport$26 (param i32 i32)))
(import "env" "sha256" (func $fimport$27 (param i32 i32 i32)))
(import "env" "tapos_block_num" (func $fimport$28 (result i32)))
(import "env" "tapos_block_prefix" (func $fimport$29 (result i32)))
(export "memory" (memory $0))
(export "now" (func $0))
(export "_ZeqRK11checksum256S1_" (func $1))
(export "_ZeqRK11checksum160S1_" (func $2))
(export "_ZneRK11checksum160S1_" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_Z13uint64_stringy" (func $5))
(export "_Z7canSelli" (func $7))
(export "_Z5splitRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKc" (func $8))
(export "_Z15string_to_priceNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE" (func $10))
(export "_Z7explodeRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKc" (func $11))
(export "_ZN12richrichrich5applyEyy" (func $12))
(export "_ZN12richrichrich10onTransferEyyN5eosio14extended_assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $14))
(export "_ZN12richrichrich6revealEy" (func $15))
(export "_ZN12richrichrich4initEv" (func $17))
(export "_ZN12richrichrich7reveal1Eyb" (func $19))
(export "_ZN12richrichrich4testEy" (func $21))
(export "_ZN12richrichrich5startEy" (func $22))
(export "_ZN12richrichrich8playdiceEyy" (func $23))
(export "_ZN12richrichrich7payrentEy" (func $25))
(export "_ZN12richrichrich8claimkeyEy" (func $26))
(export "_ZN12richrichrich10claimtokenEy" (func $27))
(export "_ZN12richrichrich12claimdepositEy" (func $28))
(export "_ZN12richrichrich8claimdevEv" (func $29))
(export "_ZN12richrichrich7addpropEyyh" (func $30))
(export "_ZN12richrichrich7usepropEyy" (func $32))
(export "_ZN12richrichrich9toauctionEv" (func $36))
(export "_ZN12richrichrich8claimeosEyN5eosio5assetE" (func $37))
(export "_ZN12richrichrich2upEy" (func $39))
(export "_ZN12richrichrich4downEy" (func $40))
(export "_ZN12richrichrich6cancelEy" (func $41))
(export "_ZN12richrichrich7reveal2Ey" (func $42))
(export "_ZN12richrichrich12claimkeykingEv" (func $43))
(export "_ZN12richrichrich7claimw1Ey" (func $44))
(export "apply" (func $304))
(export "malloc" (func $305))
(export "free" (func $308))
(export "_ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji" (func $320))
(export "__errno_location" (func $327))
(export "pow" (func $328))
(export "sqrt" (func $329))
(export "fabs" (func $330))
(export "scalbn" (func $331))
(export "llabs" (func $332))
(export "strtol" (func $333))
(export "__shlim" (func $334))
(export "__intscan" (func $335))
(export "__shgetc" (func $336))
(export "__uflow" (func $337))
(export "__toread" (func $338))
(export "memcmp" (func $339))
(export "strlen" (func $340))
(table $0 24 24 anyfunc)
(elem (i32.const 0) $341 $41 $21 $27 $19 $37 $32 $17 $23 $33 $30 $42 $22 $26 $43 $34 $15 $28 $29 $36 $39 $44 $40 $25)



int_32 .FUNC $121 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [80])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [752])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($8 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($7 + [12]) = $4
	*($7 + [8]) = $4
	*($7 + [16]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$5 = CALL $309([168])
	CALL $120($5)
	*($5 + [152]) = $0
	*($7 + [24]) = ($7 + [8])
	*($7 + [36]) = ($5 + [8])
	*($7 + [32]) = $5
	*($7 + [40]) = ($5 + [16])
	*($7 + [44]) = ($5 + [24])
	*($7 + [48]) = ($5 + [40])
	*($7 + [52]) = ($5 + [56])
	*($7 + [56]) = ($5 + [72])
	*($7 + [60]) = ($5 + [88])
	*($7 + [64]) = ($5 + [104])
	*($7 + [68]) = ($5 + [120])
	*($7 + [72]) = ($5 + [136])
	*($7 + [76]) = ($5 + [144])
	CALL $135(($7 + [32]), ($7 + [24]))
	*($5 + [156]) = $1
	*($7 + [24]) = $5
	*($7 + [32]) = (int_64)7235159537265672192
	$6 = *($5 + [156])
	*($7 + [4]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = (int_64)7235159537265672192
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $134(($0 + [24]), ($7 + [24]), ($7 + [32]), ($7 + [4]))
	
.LABEL $label$8
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $310($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [80])
	return $5
}

int_32 .FUNC $120 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [24]) = (int_64)0
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	CALL eosio_assert([1], [464])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [128])
	*(($2 = ($0 + [48]))) = (int_64)1398362884
	*($0 + [40]) = (int_64)0
	CALL eosio_assert([1], [464])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [128])
	*(($2 = ($0 + [64]))) = (int_64)1398362884
	*($0 + [56]) = (int_64)0
	CALL eosio_assert([1], [464])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [128])
	*(($2 = ($0 + [80]))) = (int_64)1398362884
	*($0 + [72]) = (int_64)0
	CALL eosio_assert([1], [464])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$3 = [0]
	
.LABEL $label$16
	CALL eosio_assert($3, [128])
	*(($2 = ($0 + [96]))) = (int_64)1398362884
	*($0 + [88]) = (int_64)0
	CALL eosio_assert([1], [464])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	
.LOOP $label$25:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$25 }
	
.LABEL $label$24
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$3 = [0]
	
.LABEL $label$21
	CALL eosio_assert($3, [128])
	*(($2 = ($0 + [112]))) = (int_64)1398362884
	*($0 + [104]) = (int_64)0
	CALL eosio_assert([1], [464])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$29 }
	
.LOOP $label$30:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$30 }
	
.LABEL $label$29
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$3 = [0]
	
.LABEL $label$26
	CALL eosio_assert($3, [128])
	*(($2 = ($0 + [128]))) = (int_64)1398362884
	*($0 + [120]) = (int_64)0
	CALL eosio_assert([1], [464])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$34 }
	
.LOOP $label$35:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$32 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$35 }
	
.LABEL $label$34
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$32
	$3 = [0]
	
.LABEL $label$31
	CALL eosio_assert($3, [128])
	return $0
}

void .FUNC $126 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$3()), [896])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $309([56])
	CALL $127($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	*($7 + [16]) = (int_64)-5069075955596378112
	$4 = *($3 + [44])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = (int_64)-5069075955596378112
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $128(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $310($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $189 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [64]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2416])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-9026118753610891264)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [2352])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2352])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $156(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $188 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $309(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $310($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $310($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $49 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [128])
	*([0] + [4]) = $11
	$4 = *($0)
	$7 = (int_64)0
	$6 = (int_64)59
	$0 = [528]
	$8 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$7 > (uint_64)(int_64)5) ){ goto $label$6 }
	$5 = *($0)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$5 = ($5 + [165])
	goto $label$4 
	
.LABEL $label$6
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$2
	$0 = ($0 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$1 }
	*($11 + [64]) = $8
	*($11 + [56]) = $4
	$7 = (int_64)0
	$6 = (int_64)59
	$0 = [544]
	$8 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$7 > (uint_64)(int_64)10) ){ goto $label$12 }
	$5 = *($0)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$5 = ($5 + [165])
	goto $label$10 
	
.LABEL $label$12
	$9 = (int_64)0
	if ( ((int_64)$7 == (int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$8
	$0 = ($0 + [1])
	$6 = ((int_64)$6 + (int_64)-5)
	$8 = ((int_64)$9 | (int_64)$8)
	$7 = ((int_64)$7 + (int_64)1)
	if ( ((int_64)$7 != (int_64)13) ){ goto $label$7 }
	$7 = (int_64)0
	$6 = (int_64)59
	$0 = [32]
	$10 = (int_64)0
	
.LOOP $label$13:
	if ( ((uint_64)$7 > (uint_64)(int_64)7) ){ goto $label$18 }
	$5 = *($0)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$5 = ($5 + [165])
	goto $label$16 
	
.LABEL $label$18
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$14
	$0 = ($0 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$10 = ((int_64)$9 | (int_64)$10)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$13 }
	*(($11 + [36])) = *(($2 + [12]))
	*(($11 + [32])) = *(($2 + [8]))
	*(($11 + [28])) = *(($2 + [4]))
	*($11 + [16]) = $1
	*($11 + [8]) = $4
	*($11 + [24]) = *($2)
	CALL $325(($11 + [40]), $3)
	$0 = CALL $50(($11 + [72]), ($11 + [56]), $8, $10, ($11 + [8]))
	CALL $51(($11 + [112]), $0)
	$5 = *($11 + [112])
	CALL send_inline($5, (*($11 + [116]) - $5))
	$5 = *($11 + [112])
	if ( ($5 == 0) ){ goto $label$19 }
	*($11 + [116]) = $5
	CALL $310($5)
	
.LABEL $label$19
	$5 = *($0 + [28])
	if ( ($5 == 0) ){ goto $label$20 }
	*(($0 + [32])) = $5
	CALL $310($5)
	
.LABEL $label$20
	$5 = *($0 + [16])
	if ( ($5 == 0) ){ goto $label$21 }
	*(($0 + [20])) = $5
	CALL $310($5)
	
.LABEL $label$21
	if ( ((*($11 + [40]) & [1]) == 0) ){ goto $label$22 }
	CALL $310(*(($11 + [48])))
	
.LABEL $label$22
	*([0] + [4]) = ($11 + [128])
}

void .FUNC $48 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [576])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [624])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [688])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $310($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $310($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
}

void .FUNC $264 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [960])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1008])
	*($1 + [8]) = *(*($3))
	$4 = *($1)
	CALL eosio_assert([1], [1072])
	CALL eosio_assert([1], [560])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy(($5 | [8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $5, [16])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

int_32 .FUNC $265 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	$10 = $11
	*([0] + [4]) = $11
	$3 = *($0 + [24])
	$8 = *(($0 + [28]))
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$1 }
	$4 = ([0] - $3)
	$7 = ($8 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$8 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$4 }
	$5 = *(($8 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$8 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($8 >> [31]) ^ (int_32)[1]), [752])
	if ( ((uint_32)$8 <= (uint_32)[512]) ){ goto $label$6 }
	$3 = CALL malloc($8)
	CALL db_get_i64($1, $3, $8)
	CALL free($3)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($11 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $3
	CALL db_get_i64($1, $3, $8)
	
.LABEL $label$5
	$2 = ($0 + [24])
	*(($5 = CALL $309([40])) + [16]) = (int_64)1397703940
	*($5 + [8]) = (int_64)0
	CALL eosio_assert([1], [464])
	$11 = ($5 + [16])
	$6 = ($5 + [8])
	$9 = (int_64)5459781
	$7 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$4 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$4 = [0]
	
.LABEL $label$7
	CALL eosio_assert($4, [128])
	*($5 + [24]) = $0
	CALL eosio_assert(((uint_32)$8 > (uint_32)[7]), [784])
	CALL memcpy($5, $3, [8])
	$7 = ($8 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [784])
	CALL memcpy($6, ($3 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [784])
	CALL memcpy($11, ($3 + [16]), [8])
	*($5 + [28]) = $1
	*($10 + [24]) = $5
	*($10 + [16]) = (int_64)-5069068143847014400
	$8 = *($5 + [28])
	*($10 + [12]) = $8
	$1 = ($0 + [28])
	$7 = *($1)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$13 }
	*($7 + [8]) = (int_64)-5069068143847014400
	*($7 + [16]) = $8
	*($10 + [24]) = [0]
	*($7) = $5
	*($1) = ($7 + [24])
	goto $label$12 
	
.LABEL $label$13
	CALL $269($2, ($10 + [24]), ($10 + [16]), ($10 + [12]))
	
.LABEL $label$12
	$7 = *($10 + [24])
	*($10 + [24]) = [0]
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $310($7)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [32])
	return $5
}

void .FUNC $266 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [960])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1008])
	$3 = *($3)
	*($1) = *($3)
	*(($4 = ($1 + [16]))) = *(($3 + [16]))
	*(($5 = ($1 + [8]))) = *(($3 + [8]))
	CALL eosio_assert([1], [1072])
	CALL eosio_assert([1], [560])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy(($6 | [8]), $5, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy(($6 + [16]), $4, [8])
	CALL db_update_i64(*($1 + [28]), $2, $6, [24])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-5069068143847014400) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)-5069068143847014399
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $267 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$3()), [896])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($4 = CALL $309([40])) + [16]) = (int_64)1397703940
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [464])
	$2 = (int_64)5459781
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [128])
	*($4 + [24]) = $1
	CALL $268(($7 + [16]), $4)
	*($7 + [32]) = $4
	*($7 + [16]) = (int_64)-5069068143847014400
	$6 = *($4 + [28])
	*($7 + [12]) = $6
	$5 = ($1 + [28])
	$3 = *($5)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$7 }
	*($3 + [8]) = (int_64)-5069068143847014400
	*($3 + [16]) = $6
	*($7 + [32]) = [0]
	*($3) = $4
	*($5) = ($3 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $269(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$6
	*($0 + [4]) = $4
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL $310($3)
	
.LABEL $label$8
	*([0] + [4]) = ($7 + [48])
}

void .FUNC _ZN12richrichrich12claimkeykingEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [128])
	*([0] + [4]) = $9
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [816]
	$6 = (int_64)0
	
.LOOP $label$1:
	$7 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$2 }
	$1 = *($3)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$1 = ($1 + [165])
	goto $label$3 
	
.LABEL $label$4
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$2
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($6)
	CALL memset(($9 + [48]), [0], [40])
	$3 = CALL $62(($9 + [48]))
	$2 = ($0 + [528])
	$1 = *(($0 + [556]))
	if ( ((int_32)$1 == (int_32)*(($0 + [552]))) ){ goto $label$7 }
	$1 = *(($1 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$2), [64])
	if ( $1 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$1 = CALL db_find_i64(*($2), *(($0 + [536])), (int_64)-9026050048739246080, (int_64)-9026050048739246080)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$5 }
	$1 = CALL $63($2, $1)
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$2), [64])
	
.LABEL $label$6
	$3 = $1
	
.LABEL $label$5
	CALL memcpy(($9 + [88]), $3, [40])
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [816]
	$6 = (int_64)0
	
.LOOP $label$8:
	$7 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$9 }
	$1 = *($3)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$1 = ($1 + [165])
	goto $label$10 
	
.LABEL $label$11
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$9
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$8 }
	*((($9 + [32]) + [8])) = *(($9 + [104]))
	$5 = *($9 + [96])
	*((($9 + [16]) + [8])) = [0]
	*($9 + [32]) = $5
	*($9 + [16]) = (int_64)0
	$1 = CALL strlen([832])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$15 }
	*($9 + [16]) = ($1 << [1])
	$8 = (($9 + [16]) | [1])
	if ( $1 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$3 = (($1 + [16]) & [-16])
	$8 = CALL $309($3)
	*($9 + [16]) = ($3 | [1])
	*($9 + [24]) = $8
	*($9 + [20]) = $1
	
.LABEL $label$14
	CALL memcpy($8, [832], $1)
	
.LABEL $label$13
	$3 = [0]
	*(($8 + $1)) = [0]
	*(($9 + [8])) = *((($9 + [32]) + [8]))
	*($9) = *($9 + [32])
	CALL $49($0, $6, $9, ($9 + [16]))
	if ( ((*($9 + [16]) & [1]) == 0) ){ goto $label$16 }
	CALL $310(*($9 + [24]))
	
.LABEL $label$16
	CALL eosio_assert([1], [464])
	$5 = (int_64)5459781
	
.LOOP $label$18:
	$1 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$1 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$18 }
	
.LABEL $label$17
	CALL eosio_assert($1, [128])
	*(($9 + [104])) = (int_64)1397703940
	*($9 + [96]) = (int_64)0
	CALL $64($2, ($9 + [88]), *($0))
	*([0] + [4]) = ($9 + [128])
	return (unreachable)
	
.LABEL $label$12
	CALL $311(($9 + [16]))
}

void .FUNC _ZN12richrichrich7reveal2Ey (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	float_64 $10
	int_64 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	int_32 $17
	int_64 $18
	int_32 $19
	int_32 $20
	int_32 $21
	$20 = (*([0] + [4]) - [544])
	*([0] + [4]) = $20
	$18 = (int_64)0
	$11 = (int_64)59
	$17 = [1136]
	$13 = (int_64)0
	
.LOOP $label$1:
	$14 = (int_64)0
	if ( ((uint_64)$18 > (uint_64)(int_64)11) ){ goto $label$2 }
	$6 = *($17)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$6 = ($6 + [165])
	goto $label$3 
	
.LABEL $label$4
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$2
	$17 = ($17 + [1])
	$18 = ((int_64)$18 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$1 }
	$18 = (int_64)0
	$14 = (int_64)59
	$17 = [1152]
	$15 = (int_64)0
	
.LOOP $label$5:
	if ( ((uint_64)$18 > (uint_64)(int_64)5) ){ goto $label$10 }
	$6 = *($17)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$6 = ($6 + [165])
	goto $label$8 
	
.LABEL $label$10
	$11 = (int_64)0
	if ( ((uint_64)$18 <= (uint_64)(int_64)11) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$7
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$6
	$17 = ($17 + [1])
	$18 = ((int_64)$18 + (int_64)1)
	$15 = ((int_64)$11 | (int_64)$15)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$5 }
	CALL require_auth2($13, $15)
	CALL memset(($20 + [272]), [0], [56])
	*(($20 + [288])) = (int_64)1398362884
	*($20 + [280]) = (int_64)0
	CALL eosio_assert([1], [464])
	$7 = ($0 + [568])
	$18 = (int_64)5462355
	$17 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$6 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$6 = [0]
	
.LABEL $label$11
	CALL eosio_assert($6, [128])
	*(($20 + [324])) = [0]
	$13 = (int_64)0
	*($20 + [316 align=4]) = (int_64)0
	CALL $70(($20 + [472]), $7, ($20 + [272]))
	$17 = *($20 + [316])
	if ( ($17 == 0) ){ goto $label$16 }
	*(($20 + [320])) = $17
	CALL $310($17)
	
.LABEL $label$16
	CALL eosio_assert(((int_64)*($20 + [472]) == (int_64)$1), [1168])
	CALL eosio_assert(((uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$4() / (uint_64)(int_64)1000000)) > (uint_32)*($20 + [500])), [1184])
	$18 = CALL $71($0, *($0))
	*($20 + [471]) = ((uint_64)$18 % (uint_64)(int_64)52)
	*($20 + [470]) = ((uint_64)((uint_64)$18 / (uint_64)(int_64)52) % (uint_64)(int_64)52)
	CALL $72(($20 + [456]), $0, ($20 + [471]), ($20 + [470]))
	CALL prints([1216])
	$17 = *($20 + [456])
	$6 = ($17 & [1])
	$19 = (($20 + [456]) | [1])
	CALL prints_l(( *($20 + [464]) ? $19 : $6 ), ( *($20 + [460]) ? uint_32($17 >> [1]) : $6 ))
	CALL prints([1232])
	*($20 + [448]) = [0]
	*($20 + [444]) = [0]
	$2 = (($20 + [440]) | [4])
	*($20 + [440]) = $2
	*($20 + [432]) = [0]
	*($20 + [424]) = (int_64)0
	$3 = ($0 + [448])
	$1 = (int_64)0
	$17 = CALL db_lowerbound_i64(*($0 + [448]), *(($0 + [456])), (int_64)-6030912142679474176, (int_64)0)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$17 }
	$16 = CALL $73($3, $17)
	$4 = (($20 + [424]) | [1])
	$1 = (int_64)0
	$13 = (int_64)0
	
.LOOP $label$18:
	$5 = ($16 + [8])
	CALL $74(($20 + [272]), $0, $5)
	if ( (*($20 + [424]) & [1]) ){ goto $label$20 }
	*($20 + [424]) = [0]
	goto $label$19 
	
.LABEL $label$20
	*(*((($20 + [424]) + [8]))) = [0]
	*($20 + [428]) = [0]
	
.LABEL $label$19
	$17 = [0]
	CALL $312(($20 + [424]), [0])
	$6 = *((($20 + [272]) + [8]))
	*((($20 + [424]) + [8])) = $6
	*($20 + [424]) = *($20 + [272])
	$7 = ( $6 ? $4 : (*($20 + [424]) & [1]) )
	$6 = ( *((($20 + [456]) + [8])) ? $19 : (*($20 + [456]) & [1]) )
	$14 = (int_64)0
	if ( ((uint_32)[0] <= (uint_32)[6]) ){ goto $label$22 }
	$21 = [4]
	goto $label$21 
	
.LABEL $label$22
	$21 = [0]
	
.LABEL $label$21
	
.LOOP $label$24:
	goto $label$101 
	
.LABEL $label$103
	$18 = *(*($5) + [24])
	$14 = ((int_64)((int_64)$18 * (int_64)12) + (int_64)$14)
	$13 = ((int_64)((int_64)((int_64)$18 * (int_64)36) / (int_64)100) + (int_64)$13)
	$1 = ((int_64)((int_64)((int_64)$18 * (int_64)1236) / (int_64)100) + (int_64)$1)
	$17 = [4]
	$21 = [3]
	goto $label$24 
	
.LABEL $label$102
	if ( ((uint_32)$17 > (uint_32)[6]) ){ goto $label$63 }
	$21 = [0]
	goto $label$24 
	
.LABEL $label$101
	goto $label$49 
	
.LABEL $label$104
	$21 = [1]
	goto $label$24 
	
.LABEL $label$100
	if ( ((int_32)*(($6 + [3])) != (int_32)[79]) ){ goto $label$44 }
	$21 = [24]
	goto $label$24 
	
.LABEL $label$99
	$17 = [4]
	if ( ((int_32)*(($7 + [3])) != (int_32)[79]) ){ goto $label$50 }
	goto $label$51 
	
.LABEL $label$98
	$17 = [4]
	if ( ((int_32)*(($7 + [3])) != (int_32)[79]) ){ goto $label$43 }
	$21 = [23]
	goto $label$24 
	
.LABEL $label$97
	$13 = ((int_64)((int_64)((int_64)*(*($5) + [24]) * (int_64)3) / (int_64)100) + (int_64)$13)
	$17 = [4]
	if ( ((uint_32)[4] <= (uint_32)[6]) ){ goto $label$45 }
	goto $label$46 
	
.LABEL $label$96
	$12 = *(($7 + $17))
	if ( ((int_32)*(($6 + $17)) != (int_32)[79]) ){ goto $label$27 }
	$21 = [29]
	goto $label$24 
	
.LABEL $label$95
	if ( ((int_32)($12 & [255]) != (int_32)[79]) ){ goto $label$54 }
	$21 = [30]
	goto $label$24 
	
.LABEL $label$94
	$10 = ((float_64)(CASTING float_64)(int_64 *((*($5) + ($17 << [3])))) * (float_64)(float_64)2.1)
	$14 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $14) + (float_64)$10))
	$13 = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 $13) + (float_64)((float_64)((float_64)$10 * (float_64)(float_64)3) / (float_64)(float_64)100)))
	$1 = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 $1) + (float_64)((float_64)((float_64)$10 * (float_64)(float_64)103) / (float_64)(float_64)100)))
	goto $label$55 
	
.LABEL $label$93
	$12 = *(($7 + $17))
	if ( ((int_32)*(($6 + $17)) != (int_32)[79]) ){ goto $label$25 }
	$21 = [39]
	goto $label$24 
	
.LABEL $label$92
	if ( ((int_32)($12 & [255]) != (int_32)[79]) ){ goto $label$61 }
	$21 = [40]
	goto $label$24 
	
.LABEL $label$91
	$10 = ((float_64)(CASTING float_64)(int_64 *((*($5) + ($17 << [3])))) * (float_64)(float_64)1.82)
	$14 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $14) + (float_64)$10))
	$13 = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 $13) + (float_64)((float_64)((float_64)$10 * (float_64)(float_64)3) / (float_64)(float_64)100)))
	$1 = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 $1) + (float_64)((float_64)((float_64)$10 * (float_64)(float_64)103) / (float_64)(float_64)100)))
	goto $label$62 
	
.LABEL $label$90
	$12 = *(($7 + $17))
	if ( ((int_32)*(($6 + $17)) != (int_32)[79]) ){ goto $label$26 }
	$21 = [34]
	goto $label$24 
	
.LABEL $label$89
	if ( ((int_32)($12 & [255]) != (int_32)[79]) ){ goto $label$57 }
	$21 = [35]
	goto $label$24 
	
.LABEL $label$88
	$10 = ((float_64)(CASTING float_64)(int_64 *((*($5) + ($17 << [3])))) * (float_64)(float_64)2.12)
	$14 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $14) + (float_64)$10))
	$13 = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 $13) + (float_64)((float_64)((float_64)$10 * (float_64)(float_64)3) / (float_64)(float_64)100)))
	$1 = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 $1) + (float_64)((float_64)((float_64)$10 * (float_64)(float_64)103) / (float_64)(float_64)100)))
	goto $label$58 
	
.LABEL $label$87
	if ( ((int_32)($12 & [255]) != (int_32)[79]) ){ goto $label$52 }
	$21 = [28]
	goto $label$24 
	
.LABEL $label$86
	$13 = ((int_64)((int_64)((int_64)*((*($5) + ($17 << [3]))) * (int_64)3) / (int_64)100) + (int_64)$13)
	goto $label$53 
	
.LABEL $label$85
	if ( ((int_32)($12 & [255]) != (int_32)[79]) ){ goto $label$59 }
	$21 = [38]
	goto $label$24 
	
.LABEL $label$84
	$13 = ((int_64)((int_64)((int_64)*((*($5) + ($17 << [3]))) * (int_64)3) / (int_64)100) + (int_64)$13)
	goto $label$60 
	
.LABEL $label$83
	if ( ((int_32)($12 & [255]) != (int_32)[79]) ){ goto $label$56 }
	$21 = [33]
	goto $label$24 
	
.LABEL $label$82
	$13 = ((int_64)((int_64)((int_64)*((*($5) + ($17 << [3]))) * (int_64)3) / (int_64)100) + (int_64)$13)
	$21 = [4]
	goto $label$24 
	
.LABEL $label$81
	$17 = ($17 + [1])
	if ( ((int_32)$17 != (int_32)[7]) ){ goto $label$42 }
	$21 = [5]
	goto $label$24 
	
.LABEL $label$80
	if ( ((int_64)$14 < (int_64)1) ){ goto $label$41 }
	$21 = [8]
	goto $label$24 
	
.LABEL $label$79
	$17 = *($20 + [444])
	if ( ($17 == 0) ){ goto $label$39 }
	$21 = [9]
	goto $label$24 
	
.LABEL $label$78
	$18 = *($16)
	$6 = $2
	goto $label$38 
	
.LABEL $label$77
	$6 = $17
	$17 = $7
	$21 = [10]
	goto $label$24 
	
.LABEL $label$76
	$11 = *($17 + [16])
	if ( ((uint_64)$18 >= (uint_64)$11) ){ goto $label$37 }
	$21 = [20]
	goto $label$24 
	
.LABEL $label$75
	$7 = *($17)
	if ( $7 ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$74
	if ( ((uint_64)$11 >= (uint_64)$18) ){ goto $label$35 }
	$21 = [17]
	goto $label$24 
	
.LABEL $label$73
	$6 = ($17 + [4])
	$7 = *($17 + [4])
	if ( ($7 == 0) ){ goto $label$36 }
	$21 = [18]
	goto $label$24 
	
.LABEL $label$72
	$17 = $6
	goto $label$28 
	
.LABEL $label$71
	$17 = $2
	$6 = $2
	$7 = *($6)
	if ( $7 ){ goto $label$32 }
	goto $label$33 
	
.LABEL $label$70
	$6 = $17
	$21 = [12]
	goto $label$24 
	
.LABEL $label$69
	$7 = *($6)
	if ( $7 ){ goto $label$34 }
	$21 = [14]
	goto $label$24 
	
.LABEL $label$68
	*(($7 = CALL $309([32]))) = (int_64)0
	*($7 + [8]) = $17
	*($6) = $7
	$18 = *($16)
	*($7 + [24]) = (int_64)0
	*($7 + [16]) = $18
	$17 = $7
	$5 = *(*($20 + [440]))
	if ( ($5 == 0) ){ goto $label$31 }
	$21 = [15]
	goto $label$24 
	
.LABEL $label$67
	*($20 + [440]) = $5
	$17 = *($6)
	$21 = [16]
	goto $label$24 
	
.LABEL $label$66
	CALL $75(*($20 + [444]), $17)
	*(($17 = (($20 + [440]) + [8]))) = (*($17) + [1])
	$21 = [13]
	goto $label$24 
	
.LABEL $label$65
	*(($7 + [24])) = $14
	$21 = [6]
	goto $label$24 
	
.LABEL $label$64
	CALL eosio_assert([1], [384])
	$17 = CALL db_next_i64(*($16 + [24]), ($20 + [272]))
	if ( ((int_32)$17 > (int_32)[-1]) ){ goto $label$40 }
	goto $label$17 
	
.LABEL $label$63
	$21 = [4]
	goto $label$24 
	
.LABEL $label$62
	$21 = [4]
	goto $label$24 
	
.LABEL $label$61
	$21 = [4]
	goto $label$24 
	
.LABEL $label$60
	$21 = [4]
	goto $label$24 
	
.LABEL $label$59
	$21 = [4]
	goto $label$24 
	
.LABEL $label$58
	$21 = [4]
	goto $label$24 
	
.LABEL $label$57
	$21 = [4]
	goto $label$24 
	
.LABEL $label$56
	$21 = [4]
	goto $label$24 
	
.LABEL $label$55
	$21 = [4]
	goto $label$24 
	
.LABEL $label$54
	$21 = [4]
	goto $label$24 
	
.LABEL $label$53
	$21 = [4]
	goto $label$24 
	
.LABEL $label$52
	$21 = [4]
	goto $label$24 
	
.LABEL $label$51
	$21 = [25]
	goto $label$24 
	
.LABEL $label$50
	$21 = [3]
	goto $label$24 
	
.LABEL $label$49
	$21 = [36]
	goto $label$24 
	
.LABEL $label$48
	$21 = [31]
	goto $label$24 
	
.LABEL $label$47
	$21 = [26]
	goto $label$24 
	
.LABEL $label$46
	$21 = [4]
	goto $label$24 
	
.LABEL $label$45
	$21 = [0]
	goto $label$24 
	
.LABEL $label$44
	$21 = [2]
	goto $label$24 
	
.LABEL $label$43
	$21 = [3]
	goto $label$24 
	
.LABEL $label$42
	$21 = [3]
	goto $label$24 
	
.LABEL $label$41
	$21 = [6]
	goto $label$24 
	
.LABEL $label$40
	$21 = [7]
	goto $label$24 
	
.LABEL $label$39
	$21 = [22]
	goto $label$24 
	
.LABEL $label$38
	$21 = [10]
	goto $label$24 
	
.LABEL $label$37
	$21 = [11]
	goto $label$24 
	
.LABEL $label$36
	$21 = [12]
	goto $label$24 
	
.LABEL $label$35
	$21 = [12]
	goto $label$24 
	
.LABEL $label$34
	$21 = [13]
	goto $label$24 
	
.LABEL $label$33
	$21 = [14]
	goto $label$24 
	
.LABEL $label$32
	$21 = [13]
	goto $label$24 
	
.LABEL $label$31
	$21 = [16]
	goto $label$24 
	
.LABEL $label$30
	$21 = [21]
	goto $label$24 
	
.LABEL $label$29
	$21 = [19]
	goto $label$24 
	
.LABEL $label$28
	$21 = [19]
	goto $label$24 
	
.LABEL $label$27
	$21 = [27]
	goto $label$24 
	
.LABEL $label$26
	$21 = [32]
	goto $label$24 
	
.LABEL $label$25
	$21 = [37]
	goto $label$24 
	
.LABEL $label$23
	$16 = CALL $73($3, $17)
	goto $label$18 
	
.LABEL $label$17
	$9 = (int_64)0
	$18 = *($20 + [480])
	if ( (int_64)($18 == 0) ){ goto $label$107 }
	$7 = ($20 + [480])
	$9 = (int_64))($18 - $1)
	$18 = (int_64)0
	$11 = (int_64)59
	$17 = [1248]
	$8 = *($20 + [504])
	$15 = (int_64)0
	
.LOOP $label$108:
	$14 = (int_64)0
	if ( ((uint_64)$18 > (uint_64)(int_64)11) ){ goto $label$109 }
	$6 = *($17)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$111 }
	$6 = ($6 + [165])
	goto $label$110 
	
.LABEL $label$111
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$110
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$109
	$17 = ($17 + [1])
	$18 = ((int_64)$18 + (int_64)1)
	$15 = ((int_64)$14 | (int_64)$15)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$108 }
	$10 = (float_64)1
	if ( ((int_64)$8 == (int_64)$15) ){ goto $label$112 }
	*((($20 + [408]) + [8])) = *(($7 + [8]))
	*((($20 + [392]) + [8])) = [0]
	*($20 + [408]) = *($7)
	*($20 + [392]) = (int_64)0
	$17 = CALL strlen([1264])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$105 }
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$115 }
	*($20 + [392]) = ($17 << [1])
	$7 = (($20 + [392]) | [1])
	if ( $17 ){ goto $label$114 }
	goto $label$113 
	
.LABEL $label$115
	$6 = (($17 + [16]) & [-16])
	$7 = CALL $309($6)
	*($20 + [392]) = ($6 | [1])
	*($20 + [400]) = $7
	*($20 + [396]) = $17
	
.LABEL $label$114
	CALL memcpy($7, [1264], $17)
	
.LABEL $label$113
	$6 = [0]
	*(($7 + $17)) = [0]
	*((($20 + [80]) + [8])) = *((($20 + [408]) + [8]))
	*($20 + [80]) = *($20 + [408])
	CALL $76($0, $8, ($20 + [80]), ($20 + [392]))
	if ( ((*($20 + [392]) & [1]) == 0) ){ goto $label$116 }
	CALL $310(*($20 + [400]))
	
.LABEL $label$116
	*($20 + [368]) = (int_64)-1
	*($20 + [376]) = [0]
	$11 = *($0)
	*($20 + [352]) = $11
	*($20 + [360]) = *((($20 + [472]) + [32]))
	*(($20 + [380])) = [0]
	*((($20 + [352]) + [32])) = [0]
	*(($17 = (($20 + [192]) + [32]))) = (int_64)310366523908
	*($20 + [200]) = [0]
	*($20 + [192]) = (int_64)0
	*($20 + [208]) = (int_64)0
	*($20 + [216]) = (int_64)0
	CALL eosio_assert([1], [464])
	$18 = (uint_64)*($17) >> (uint_64)(int_64)8)
	
.LOOP $label$119:
	$17 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$118 }
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$120 }
	
.LOOP $label$121:
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$118 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$121 }
	
.LABEL $label$120
	$7 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$119 }
	goto $label$117 
	
.LABEL $label$118
	$7 = [0]
	
.LABEL $label$117
	CALL eosio_assert($7, [128])
	*(($6 = ($20 + [240]))) = (int_64)310366523908
	*($20 + [232]) = (int_64)0
	CALL eosio_assert([1], [464])
	$18 = (uint_64)*($6) >> (uint_64)(int_64)8)
	
.LOOP $label$124:
	$6 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$123 }
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$125 }
	
.LOOP $label$126:
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$123 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$126 }
	
.LABEL $label$125
	$7 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$124 }
	goto $label$122 
	
.LABEL $label$123
	$7 = [0]
	
.LABEL $label$122
	CALL eosio_assert($7, [128])
	*(($17 = ($20 + [256]))) = (int_64)1397703940
	*($20 + [248]) = (int_64)0
	CALL eosio_assert([1], [464])
	$18 = (uint_64)*($17) >> (uint_64)(int_64)8)
	
.LOOP $label$129:
	$17 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$128 }
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$130 }
	
.LOOP $label$131:
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$128 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$131 }
	
.LABEL $label$130
	$7 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$129 }
	goto $label$127 
	
.LABEL $label$128
	$7 = [0]
	
.LABEL $label$127
	CALL eosio_assert($7, [128])
	*($20 + [264]) = [0]
	CALL $91(($20 + [272]), ($20 + [352]), $11, ($20 + [192]))
	*(($20 + [184])) = (int_64)1398362884
	*($20 + [176]) = (int_64)0
	*($20 + [168]) = (int_64)0
	CALL eosio_assert([1], [464])
	$7 = ($0 + [848])
	$18 = (int_64)5462355
	
.LOOP $label$133:
	$6 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$132 }
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$134 }
	
.LOOP $label$135:
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$132 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$135 }
	
.LABEL $label$134
	$6 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$133 }
	
.LABEL $label$132
	CALL eosio_assert($6, [128])
	$17 = *(($0 + [876]))
	if ( ((int_32)$17 == (int_32)*(($0 + [872]))) ){ goto $label$137 }
	$17 = *(($17 + [-24]))
	CALL eosio_assert(((int_32)*($17 + [24]) == (int_32)$7), [64])
	if ( $17 ){ goto $label$136 }
	$17 = ($20 + [168])
	goto $label$136 
	
.LABEL $label$137
	$17 = CALL db_find_i64(*(($0 + [848])), *(($0 + [856])), (int_64)4154289181272571904, (int_64)4154289181272571904)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$138 }
	$17 = CALL $77($7, $17)
	CALL eosio_assert(((int_32)*($17 + [24]) == (int_32)$7), [64])
	goto $label$136 
	
.LABEL $label$138
	$17 = ($20 + [168])
	
.LABEL $label$136
	*((($20 + [192]) + [16])) = *(($17 + [16]))
	*((($20 + [192]) + [8])) = *(($17 + [8]))
	*($20 + [192]) = *($17)
	if ( ((int_64)((int_64)*($20 + [328]) + (int_64)$9) <= (int_64)0) ){ goto $label$141 }
	$16 = (uint_64)(((int_64)$9 + (int_64)4611686018427387903) <= (int_64)9223372036854775807)
	CALL eosio_assert($16, [464])
	$18 = (int_64)5459781
	$17 = [0]
	
.LOOP $label$144:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$143 }
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$145 }
	
.LOOP $label$146:
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$143 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$146 }
	
.LABEL $label$145
	$6 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$144 }
	goto $label$142 
	
.LABEL $label$143
	$6 = [0]
	
.LABEL $label$142
	CALL eosio_assert($6, [128])
	CALL eosio_assert(((int_64)1397703940 == (int_64)*(($20 + [336]))), [224])
	$18 = ((int_64)*($17) + (int_64)$9)
	*(($17 = ($20 + [328]))) = $18
	CALL eosio_assert(((int_64)$18 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($17) < (int_64)4611686018427387904), [304])
	CALL eosio_assert($16, [464])
	$18 = (int_64)5459781
	$17 = [0]
	
.LOOP $label$149:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$148 }
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$150 }
	
.LOOP $label$151:
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$148 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$151 }
	
.LABEL $label$150
	$6 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$149 }
	goto $label$147 
	
.LABEL $label$148
	$6 = [0]
	
.LABEL $label$147
	CALL eosio_assert($6, [128])
	CALL eosio_assert(((int_64)1397703940 == (int_64)*(($20 + [208]))), [224])
	$18 = ((int_64)*($20 + [200]) + (int_64)$9)
	*($20 + [200]) = $18
	CALL eosio_assert(((int_64)$18 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($20 + [200]) < (int_64)4611686018427387904), [304])
	$10 = (float_64)1
	if ( ((int_64)*(($20 + [328])) <= (int_64)199999) ){ goto $label$140 }
	goto $label$139 
	
.LABEL $label$141
	$6 = ($20 + [328])
	*(($17 = (($20 + [152]) + [8]))) = *(($6 + [8]))
	*($20 + [152]) = *($6)
	$18 = *($0)
	$11 = *($17)
	*((($20 + [528]) + [8])) = $11
	*((($20 + [168]) + [8])) = $11
	$11 = *($20 + [152])
	*($20 + [528]) = $11
	*($20 + [168]) = $11
	*($20 + [184]) = $18
	*($20 + [144]) = $1
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [464])
	$18 = (int_64)5459781
	$17 = [0]
	
.LOOP $label$154:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$153 }
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$155 }
	
.LOOP $label$156:
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$153 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$156 }
	
.LABEL $label$155
	$6 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$154 }
	goto $label$152 
	
.LABEL $label$153
	$6 = [0]
	
.LABEL $label$152
	CALL eosio_assert($6, [128])
	CALL $79(($20 + [528]), $0, ($20 + [168]))
	CALL eosio_assert(((int_64)*($20 + [536]) == (int_64)1397703940), [160])
	$18 = *(( ($20 + [528]) ? ($20 + [144]) : ((int_64)*($20 + [528]) < (int_64)$1) ))
	$17 = ($20 + [328])
	$11 = *($17)
	CALL eosio_assert(((int_64)*(($20 + [336])) == (int_64)*(($20 + [208]))), [1280])
	$14 = (int_64)
	*($20 + [200]) = $14(*($20 + [200]) - *($17)))
	CALL eosio_assert(((int_64)$14 > (int_64)-4611686018427387904), [1328])
	CALL eosio_assert(((int_64)*($20 + [200]) < (int_64)4611686018427387904), [1360])
	CALL eosio_assert([1], [464])
	$10 = ((float_64)(CASTING float_64)(int_64 $11) / (float_64)(CASTING float_64)(int_64 $18))
	$18 = (int_64)5459781
	$17 = [0]
	
.LOOP $label$159:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$158 }
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$160 }
	
.LOOP $label$161:
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$158 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$161 }
	
.LABEL $label$160
	$6 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$159 }
	goto $label$157 
	
.LABEL $label$158
	$6 = [0]
	
.LABEL $label$157
	CALL eosio_assert($6, [128])
	*(($20 + [336])) = (int_64)1397703940
	*($20 + [328]) = (int_64)0
	
.LABEL $label$140
	CALL $78($0)
	
.LABEL $label$139
	CALL $80($7, ($20 + [192]), *($0))
	CALL $81(($20 + [352]), ($20 + [272]), *($0))
	$7 = *($20 + [376])
	if ( ($7 == 0) ){ goto $label$112 }
	$16 = ($20 + [380])
	$17 = *($16)
	if ( ((int_32)$17 == (int_32)$7) ){ goto $label$163 }
	
.LOOP $label$164:
	$17 = ($17 + [-24])
	$6 = *($17)
	*($17) = [0]
	if ( ($6 == 0) ){ goto $label$165 }
	CALL $310($6)
	
.LABEL $label$165
	if ( ((int_32)$7 != (int_32)$17) ){ goto $label$164 }
	$17 = *(($20 + [376]))
	goto $label$162 
	
.LABEL $label$163
	$17 = $7
	
.LABEL $label$162
	*($16) = $7
	CALL $310($17)
	
.LABEL $label$112
	$6 = *($20 + [440])
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$166 }
	$4 = (($20 + [272]) | [1])
	$5 = (($20 + [128]) + [8])
	
.LOOP $label$167:
	*($5) = (int_64)1397703940
	$16 = $6
	$18 = (Rounds 0)(((float_64)$10 * (float_64)(CASTING float_64)(uint_64 *($16 + [24]))))
	*($20 + [128]) = $18
	$14 = *($16 + [16])
	CALL eosio_assert((uint_64)(((int_64)$18 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [464])
	$18 = (uint_64)*($5) >> (uint_64)(int_64)8)
	$17 = [0]
	
.LOOP $label$169:
	$6 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$168 }
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$170 }
	
.LOOP $label$171:
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$168 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$171 }
	
.LABEL $label$170
	$6 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$169 }
	
.LABEL $label$168
	CALL eosio_assert($6, [128])
	*(($6 = (($20 + [192]) + [8]))) = [0]
	$18 = *($20 + [472])
	*($20 + [192]) = (int_64)0
	
.LOOP $label$172:
	$17 = (CASTING uint_32)(uint_64 ((uint_64)$18 % (uint_64)(int_64)10))
	CALL $6(($20 + [272]), ( ($17 | [48]) ? ($17 + [55]) : ($17 <= [10]) ), ($20 + [192]))
	$11 = ((uint_64)$18 / (uint_64)(int_64)10)
	if ( (*($20 + [192]) & [1]) ){ goto $label$174 }
	*($20 + [192]) = [0]
	goto $label$173 
	
.LABEL $label$174
	*(*($6)) = [0]
	*($20 + [196]) = [0]
	
.LABEL $label$173
	CALL $312(($20 + [192]), [0])
	$7 = (($20 + [272]) + [8])
	*($6) = *($7)
	*($20 + [192]) = *($20 + [272])
	$17 = ((uint_64)$18 > (uint_64)(int_64)9)
	$18 = $11
	if ( $17 ){ goto $label$172 }
	*($7) = [0]
	*($20 + [272]) = (int_64)0
	$17 = CALL strlen([1392])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$106 }
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$177 }
	*($20 + [272]) = ($17 << [1])
	$19 = $4
	if ( $17 ){ goto $label$176 }
	goto $label$175 
	
.LABEL $label$177
	$12 = (($17 + [16]) & [-16])
	$19 = CALL $309($12)
	*($7) = $19
	*($20 + [272]) = ($12 | [1])
	*($20 + [276]) = $17
	
.LABEL $label$176
	CALL memcpy($19, [1392], $17)
	
.LABEL $label$175
	*(($19 + $17)) = [0]
	$17 = *($20 + [272])
	$19 = ($17 & [1])
	$17 = CALL $315(($20 + [192]), ( *($7) ? $4 : $19 ), ( *($20 + [276]) ? uint_32($17 >> [1]) : $19 ))
	$19 = ($17 + [8])
	*(($12 = (($20 + [112]) + [8]))) = *($19)
	*($20 + [112]) = *($17)
	*($17) = [0]
	*(($17 + [4])) = [0]
	*($19) = [0]
	*((($20 + [64]) + [8])) = *($5)
	*($20 + [64]) = *($20 + [128])
	CALL $82($0, $14, ($20 + [64]), ($20 + [112]))
	if ( ((*($20 + [112]) & [1]) == 0) ){ goto $label$178 }
	CALL $310(*($12))
	
.LABEL $label$178
	if ( ((*($20 + [272]) & [1]) == 0) ){ goto $label$179 }
	CALL $310(*($7))
	
.LABEL $label$179
	if ( ((*($20 + [192]) & [1]) == 0) ){ goto $label$180 }
	CALL $310(*($6))
	
.LABEL $label$180
	$17 = *($16 + [4])
	if ( ($17 == 0) ){ goto $label$182 }
	
.LOOP $label$183:
	$6 = $17
	$17 = *($6)
	if ( $17 ){ goto $label$183 }
	goto $label$181 
	
.LABEL $label$182
	$6 = *($16 + [8])
	if ( ((int_32)*($6) == (int_32)$16) ){ goto $label$181 }
	$7 = ($16 + [8])
	
.LOOP $label$184:
	$17 = *($7)
	$7 = ($17 + [8])
	$6 = *($17 + [8])
	if ( ((int_32)$17 != (int_32)*($6)) ){ goto $label$184 }
	
.LABEL $label$181
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$167 }
	
.LABEL $label$166
	$11 = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 $13) * (float_64)$10))
	CALL eosio_assert((uint_64)(((int_64)$11 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [464])
	$18 = (int_64)5459781
	$17 = [0]
	
.LOOP $label$187:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$186 }
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$188 }
	
.LOOP $label$189:
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$186 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$189 }
	
.LABEL $label$188
	$6 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$187 }
	goto $label$185 
	
.LABEL $label$186
	$6 = [0]
	
.LABEL $label$185
	CALL eosio_assert($6, [128])
	$17 = ($20 + [488])
	$14 = *($17)
	$18 = *($20 + [480])
	CALL eosio_assert(((int_64)$18 < (int_64)4611686018427387904), [1408])
	CALL eosio_assert(((int_64)$18 > (int_64)-4611686018427387904), [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	CALL eosio_assert(((int_64)$14 == (int_64)1397703940), [160])
	if ( ((int_64)$11 <= (int_64)((int_64)$18 / (int_64)1000)) ){ goto $label$190 }
	$18 = *((($20 + [472]) + [8]))
	CALL __multi3(($20 + [32]), $18, (int_64)$18 >> (int_64)63), (int_64)22, (int_64)0)
	$13 = *($17)
	$18 = *((($20 + [32]) + [8]))
	$14 = *($20 + [32])
	CALL eosio_assert(( (uint_64)($14 <= (int_64)4611686018427387904) ? ((int_64)$18 < (int_64)0) : (int_64)($18 == 0) ), [1408])
	CALL eosio_assert(( ((uint_64)$14 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$18 > (int_64)-1) : ((int_64)$18 == (int_64)-1) ), [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	*($20 + [104]) = (int_64)1397703940
	CALL eosio_assert(((int_64)$13 == (int_64)1397703940), [1280])
	$18 = (int_64)
	*($20 + [96]) = $18($11 - ((int_64)$14 / (int_64)10000)))
	CALL eosio_assert(((int_64)$18 > (int_64)-4611686018427387904), [1328])
	CALL eosio_assert(((int_64)$18 < (int_64)4611686018427387904), [1360])
	*((($20 + [48]) + [8])) = *($20 + [104])
	*($20 + [48]) = *($20 + [96])
	CALL $83($0, ($20 + [48]))
	CALL memset(($20 + [192]), [0], [40])
	$6 = CALL $62(($20 + [192]))
	$17 = ($0 + [528])
	$7 = *(($0 + [556]))
	if ( ((int_32)$7 == (int_32)*(($0 + [552]))) ){ goto $label$193 }
	$7 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [40]) == (int_32)$17), [64])
	if ( $7 ){ goto $label$192 }
	goto $label$191 
	
.LABEL $label$193
	$7 = CALL db_find_i64(*($17), *(($0 + [536])), (int_64)-9026050048739246080, (int_64)-9026050048739246080)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$191 }
	$7 = CALL $63($17, $7)
	CALL eosio_assert(((int_32)*($7 + [40]) == (int_32)$17), [64])
	
.LABEL $label$192
	$6 = $7
	
.LABEL $label$191
	CALL memcpy(($20 + [272]), $6, [40])
	$6 = (($20 + [472]) + [8])
	$18 = *($6)
	CALL __multi3(($20 + [16]), $18, (int_64)$18 >> (int_64)63), (int_64)12, (int_64)0)
	$7 = (($20 + [472]) + [16])
	$14 = *($7)
	$18 = *((($20 + [16]) + [8]))
	$11 = *($20 + [16])
	CALL eosio_assert(( (uint_64)($11 <= (int_64)4611686018427387904) ? ((int_64)$18 < (int_64)0) : (int_64)($18 == 0) ), [1408])
	CALL eosio_assert(( ((uint_64)$11 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$18 > (int_64)-1) : ((int_64)$18 == (int_64)-1) ), [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	CALL eosio_assert(((int_64)$14 == (int_64)*((($20 + [272]) + [16]))), [224])
	$18 = ((int_64)*($20 + [280]) + (int_64)((int_64)$11 / (int_64)10000))
	*($20 + [280]) = $18
	CALL eosio_assert(((int_64)$18 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($20 + [280]) < (int_64)4611686018427387904), [304])
	$18 = *($6)
	CALL __multi3($20, $18, (int_64)$18 >> (int_64)63), (int_64)12, (int_64)0)
	$14 = *($7)
	$18 = *(($20 + [8]))
	$11 = *($20)
	CALL eosio_assert(( (uint_64)($11 <= (int_64)4611686018427387904) ? ((int_64)$18 < (int_64)0) : (int_64)($18 == 0) ), [1408])
	CALL eosio_assert(( ((uint_64)$11 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$18 > (int_64)-1) : ((int_64)$18 == (int_64)-1) ), [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	CALL eosio_assert(((int_64)$14 == (int_64)*(($20 + [304]))), [224])
	$18 = ((int_64)*($20 + [296]) + (int_64)((int_64)$11 / (int_64)10000))
	*($20 + [296]) = $18
	CALL eosio_assert(((int_64)$18 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($20 + [296]) < (int_64)4611686018427387904), [304])
	CALL $64($17, ($20 + [272]), *($0))
	
.LABEL $label$190
	$7 = ($0 + [456])
	$6 = ($0 + [448])
	$17 = CALL db_lowerbound_i64(*($6), *($7), (int_64)-6030912142679474176, (int_64)0)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$107 }
	
.LOOP $label$194:
	CALL $73($3, $17)
	$17 = [0]
	$16 = CALL db_lowerbound_i64(*($6), *($7), (int_64)-6030912142679474176, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$195 }
	$17 = CALL $73($3, $16)
	
.LABEL $label$195
	$16 = ((int_32)$17 != (int_32)[0])
	CALL eosio_assert($16, [336])
	CALL eosio_assert($16, [384])
	$16 = CALL db_next_i64(*($17 + [24]), ($20 + [272]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$196 }
	CALL $73($3, $16)
	
.LABEL $label$196
	CALL $84($3, $17)
	$17 = CALL db_lowerbound_i64(*($6), *($7), (int_64)-6030912142679474176, (int_64)0)
	if ( ((int_32)$17 >= (int_32)[0]) ){ goto $label$194 }
	
.LABEL $label$107
	*($20 + [272]) = *($20 + [471])
	*($20 + [273]) = *($20 + [470])
	*(($17 = ($20 + [288]))) = (int_64)1397703940
	$18 = CALL llabs($9)
	*($20 + [280]) = $18
	CALL eosio_assert((uint_64)(((int_64)$18 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [464])
	$7 = ((int_64)$9 > (int_64)0)
	$18 = (uint_64)*($17) >> (uint_64)(int_64)8)
	$17 = [0]
	
.LOOP $label$199:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $18) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$198 }
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$200 }
	
.LOOP $label$201:
	$18 = (uint_64)$18 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$18) & (int_64)255) != (int_64)0) ){ goto $label$198 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$201 }
	
.LABEL $label$200
	$6 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$199 }
	goto $label$197 
	
.LABEL $label$198
	$6 = [0]
	
.LABEL $label$197
	CALL eosio_assert($6, [128])
	*($20 + [296]) = $7
	*($20 + [304]) = *($20 + [472])
	*(($17 = (($20 + [192]) + [8]))) = (int_64)0
	*(($20 + [208])) = (int_64)0
	*($20 + [192]) = (int_64)0
	$7 = ($0 + [808])
	CALL $85(($20 + [352]), $7, ($20 + [192]))
	$17 = *($17)
	if ( ($17 == 0) ){ goto $label$202 }
	*(($20 + [204])) = $17
	CALL $310($17)
	
.LABEL $label$202
	$6 = *($20 + [360])
	$17 = *(($20 + [364]))
	if ( ((int_32)($17 - $6) != (int_32)[1120]) ){ goto $label$203 }
	$3 = ($6 + [40])
	$17 = ($17 - $3)
	$16 = ((int_32)$17 / (int_32)[40])
	if ( ($17 == 0) ){ goto $label$204 }
	CALL memmove($6, $3, $17)
	
.LABEL $label$204
	$17 = ($6 + ((int_32)$16 * (int_32)[40]))
	*(($20 + [364])) = $17
	
.LABEL $label$203
	if ( ((int_32)$17 == (int_32)*(($20 + [368]))) ){ goto $label$206 }
	*(($20 + [364])) = (CALL memcpy($17, ($20 + [272]), [40]) + [40])
	goto $label$205 
	
.LABEL $label$206
	CALL $86((($20 + [352]) + [8]), ($20 + [272]))
	
.LABEL $label$205
	CALL $87($7, ($20 + [352]), *($0))
	$1 = *($0)
	$18 = (int_64)0
	$14 = (int_64)59
	$17 = [528]
	$13 = (int_64)0
	
.LOOP $label$207:
	if ( ((uint_64)$18 > (uint_64)(int_64)5) ){ goto $label$212 }
	$6 = *($17)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$211 }
	$6 = ($6 + [165])
	goto $label$210 
	
.LABEL $label$212
	$11 = (int_64)0
	if ( ((uint_64)$18 <= (uint_64)(int_64)11) ){ goto $label$209 }
	goto $label$208 
	
.LABEL $label$211
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$210
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$209
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$208
	$17 = ($17 + [1])
	$18 = ((int_64)$18 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$207 }
	$18 = (int_64)0
	$14 = (int_64)59
	$17 = [1520]
	$15 = (int_64)0
	
.LOOP $label$213:
	if ( ((uint_64)$18 > (uint_64)(int_64)6) ){ goto $label$218 }
	$6 = *($17)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$217 }
	$6 = ($6 + [165])
	goto $label$216 
	
.LABEL $label$218
	$11 = (int_64)0
	if ( ((uint_64)$18 <= (uint_64)(int_64)11) ){ goto $label$215 }
	goto $label$214 
	
.LABEL $label$217
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$216
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$215
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$214
	$17 = ($17 + [1])
	$18 = ((int_64)$18 + (int_64)1)
	$15 = ((int_64)$11 | (int_64)$15)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$213 }
	*($20 + [200]) = $15
	*($20 + [192]) = $1
	*(($17 = CALL $309([16]))) = $1
	*($17 + [8]) = $13
	*(($6 = (($20 + [192]) + [32]))) = [0]
	$7 = ($17 + [16])
	*((($20 + [192]) + [24])) = $7
	*(($20 + [212])) = $7
	*($20 + [208]) = $17
	*($20 + [220]) = [0]
	*(($20 + [228])) = [0]
	CALL $52(($20 + [220]), [27])
	$17 = *($6)
	$6 = *($20 + [220])
	*($20 + [532]) = $6
	*($20 + [528]) = $6
	*($20 + [536]) = $17
	*($20 + [144]) = ($20 + [528])
	*($20 + [172]) = (($20 + [272]) | [1])
	*($20 + [176]) = ($20 + [280])
	*($20 + [180]) = (($20 + [272]) + [24])
	*($20 + [184]) = (($20 + [272]) + [32])
	*($20 + [168]) = ($20 + [272])
	CALL $88(($20 + [168]), ($20 + [144]))
	CALL $51(($20 + [168]), ($20 + [192]))
	$17 = *($20 + [168])
	CALL send_inline($17, (*($20 + [172]) - $17))
	$17 = *($20 + [168])
	if ( ($17 == 0) ){ goto $label$219 }
	*($20 + [172]) = $17
	CALL $310($17)
	
.LABEL $label$219
	$17 = *($20 + [220])
	if ( ($17 == 0) ){ goto $label$220 }
	*(($20 + [224])) = $17
	CALL $310($17)
	
.LABEL $label$220
	$17 = *($20 + [208])
	if ( ($17 == 0) ){ goto $label$221 }
	*(($20 + [212])) = $17
	CALL $310($17)
	
.LABEL $label$221
	CALL $89($0)
	$17 = *($20 + [360])
	if ( ($17 == 0) ){ goto $label$222 }
	*(($20 + [364])) = $17
	CALL $310($17)
	
.LABEL $label$222
	if ( ((*($20 + [424]) & [1]) == 0) ){ goto $label$223 }
	CALL $310(*(($20 + [432])))
	
.LABEL $label$223
	CALL $90(($20 + [440]), *($20 + [444]))
	if ( ((*($20 + [456]) & [1]) == 0) ){ goto $label$224 }
	CALL $310(*(($20 + [464])))
	
.LABEL $label$224
	$17 = *($20 + [516])
	if ( ($17 == 0) ){ goto $label$225 }
	*(($20 + [520])) = $17
	CALL $310($17)
	
.LABEL $label$225
	*([0] + [4]) = ($20 + [544])
	return (unreachable)
	
.LABEL $label$106
	CALL $311(($20 + [272]))
	
.LABEL $label$105
	CALL $311(($20 + [392]))
	$21
	$17
	(unreachable)
}

void .FUNC _ZN12richrichrich6cancelEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$4 = (*([0] + [4]) - [112])
	*([0] + [4]) = $4
	CALL require_auth($1)
	CALL eosio_assert(((int_32)CALL $45($0, $1) ^ (int_32)[1]), [48])
	$7 = [0]
	*((($2 = CALL memset($4, [0], [56])) + [16])) = (int_64)1398362884
	*($2 + [8]) = (int_64)0
	CALL eosio_assert([1], [464])
	$3 = ($0 + [568])
	$6 = (int_64)5462355
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [128])
	*(($2 + [52])) = [0]
	*($2 + [44 align=4]) = (int_64)0
	CALL $70(($2 + [56]), $3, $2)
	$7 = *($2 + [44])
	if ( ($7 == 0) ){ goto $label$6 }
	*(($2 + [48])) = $7
	CALL $310($7)
	
.LABEL $label$6
	$4 = *(($2 + [104]))
	$7 = *($2 + [100])
	
.LOOP $label$9:
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$8 }
	$6 = *($7)
	$5 = ($7 + [8])
	$7 = $5
	if ( ((int_64)$6 != (int_64)$1) ){ goto $label$9 }
	$4 = ($4 - $5)
	$7 = int_32($4 >> [3])
	if ( ($7 == 0) ){ goto $label$10 }
	CALL memmove(($5 + [-8]), $5, $4)
	
.LABEL $label$10
	*(($2 + [104])) = (($5 + ($7 << [3])) + [-8])
	CALL $98($3, ($2 + [56]), *($0))
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [1712])
	
.LABEL $label$7
	$7 = *(($2 + [100]))
	if ( ($7 == 0) ){ goto $label$11 }
	*(($2 + [104])) = $7
	CALL $310($7)
	
.LABEL $label$11
	*([0] + [4]) = ($2 + [112])
}

void .FUNC _ZN12richrichrich4downEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = (*([0] + [4]) - [112])
	*([0] + [4]) = $2
	CALL require_auth($1)
	CALL eosio_assert(((int_32)CALL $45($0, $1) ^ (int_32)[1]), [48])
	$5 = [0]
	*((($2 = CALL memset($2, [0], [56])) + [16])) = (int_64)1398362884
	*($2 + [8]) = (int_64)0
	CALL eosio_assert([1], [464])
	$3 = ($0 + [568])
	$4 = (int_64)5462355
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [128])
	*(($2 + [52])) = [0]
	*($2 + [44 align=4]) = (int_64)0
	CALL $70(($2 + [56]), $3, $2)
	$5 = *($2 + [44])
	if ( ($5 == 0) ){ goto $label$6 }
	*(($2 + [48])) = $5
	CALL $310($5)
	
.LABEL $label$6
	CALL eosio_assert(((int_64)*($2 + [88]) == (int_64)$1), [1744])
	CALL $78($0)
	$5 = *($2 + [100])
	if ( ($5 == 0) ){ goto $label$7 }
	*(($2 + [104])) = $5
	CALL $310($5)
	
.LABEL $label$7
	*([0] + [4]) = ($2 + [112])
}

int_32 .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [752])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $309([40])
	$6 = CALL $57($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = *($4)
	*($8 + [8]) = $5
	$1 = *($4 + [28])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $58(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $310($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [752])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$6 = CALL malloc($4)
	CALL db_get_i64($1, $6, $4)
	CALL free($6)
	goto $label$5 
	
.LABEL $label$6
	$6 = ($8 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $6
	CALL db_get_i64($1, $6, $4)
	
.LABEL $label$5
	*(($5 = CALL $309([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [784])
	CALL memcpy($5, $6, [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[8]), [784])
	CALL memcpy(($5 + [8]), ($6 + [8]), [4])
	*($5 + [20]) = $1
	*($7 + [24]) = $5
	*($7 + [16]) = (int_64)-2287828610704211968
	$6 = *($5 + [20])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = (int_64)-2287828610704211968
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $59(($0 + [24]), ($7 + [24]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$7
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $310($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [32])
	return $5
}

int_32 .FUNC $45 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [48])
	*([0] + [4]) = $12
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [800]
	$8 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$7 > (uint_64)(int_64)9) ){ goto $label$6 }
	$2 = *($5)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$2 = ($2 + [165])
	goto $label$4 
	
.LABEL $label$6
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$2
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$1 }
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [800]
	$10 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$7 > (uint_64)(int_64)9) ){ goto $label$12 }
	$2 = *($5)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$2 = ($2 + [165])
	goto $label$10 
	
.LABEL $label$12
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$8
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$10 = ((int_64)$9 | (int_64)$10)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$7 }
	$11 = [0]
	*(($12 + [40])) = [0]
	*($12 + [24]) = (int_64)-1
	*($12 + [32]) = (int_64)0
	*($12 + [16]) = $10
	*($12 + [8]) = $8
	$5 = CALL db_find_i64($8, $10, (int_64)4983122594569794048, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$13 }
	CALL eosio_assert(((int_32)*(CALL $60(($12 + [8]), $5) + [8]) == (int_32)($12 + [8])), [64])
	$11 = [1]
	$3 = *($12 + [32])
	if ( ($3 == 0) ){ goto $label$13 }
	$4 = ($12 + [36])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$15 }
	
.LOOP $label$16:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$17 }
	CALL $310($2)
	
.LABEL $label$17
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$16 }
	$5 = *(($12 + [32]))
	goto $label$14 
	
.LABEL $label$15
	$5 = $3
	
.LABEL $label$14
	*($4) = $3
	CALL $310($5)
	
.LABEL $label$13
	*([0] + [4]) = ($12 + [48])
	return $11
}

void .FUNC _ZN12richrichrich7claimw1Ey (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [96])
	*([0] + [4]) = $10
	CALL require_auth($1)
	CALL eosio_assert(((int_32)CALL $45($0, $1) ^ (int_32)[1]), [48])
	*(($10 + [56])) = (int_64)0
	*($10 + [48]) = (int_64)0
	$9 = ($0 + [688])
	$8 = *(($0 + [716]))
	if ( ((int_32)$8 == (int_32)*(($0 + [712]))) ){ goto $label$2 }
	$8 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)$9), [64])
	if ( $8 ){ goto $label$1 }
	$8 = ($10 + [48])
	goto $label$1 
	
.LABEL $label$2
	$8 = CALL db_find_i64(*($9), *(($0 + [696])), (int_64)-2287828610704211968, (int_64)-2287828610704211968)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $46($9, $8)
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)$9), [64])
	goto $label$1 
	
.LABEL $label$3
	$8 = ($10 + [48])
	
.LABEL $label$1
	$5 = *($8)
	*(($10 + [80])) = [0]
	*($10 + [56]) = $1
	*($10 + [64]) = (int_64)-1
	*($10 + [72]) = (int_64)0
	$3 = *($0)
	*($10 + [48]) = $3
	CALL eosio_assert([1], [464])
	$7 = (int_64)5459781
	$8 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$9 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$9 = [0]
	
.LABEL $label$4
	CALL eosio_assert($9, [128])
	$8 = CALL db_lowerbound_i64($3, $1, (int_64)-2272763793870159872, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$10 }
	$2 = ((int_64)1397703940 == (int_64)1397703940)
	$6 = ($10 + [56])
	$3 = (int_64)0
	
.LOOP $label$12:
	$4 = CALL $47(($10 + [48]), $8)
	if ( ((int_64)*($4) == (int_64)$5) ){ goto $label$11 }
	CALL eosio_assert([1], [464])
	$7 = (int_64)5459781
	$8 = [0]
	
.LOOP $label$15:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	$9 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	$9 = [0]
	
.LABEL $label$13
	CALL eosio_assert($9, [128])
	CALL eosio_assert(((int_64)*(($4 + [16])) == (int_64)1397703940), [160])
	if ( ((int_64)*($4 + [8]) <= (int_64)100000000) ){ goto $label$18 }
	CALL eosio_assert([1], [464])
	$7 = (int_64)5459781
	$8 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	
.LOOP $label$23:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$20 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$23 }
	
.LABEL $label$22
	$9 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	$9 = [0]
	
.LABEL $label$19
	CALL eosio_assert($9, [128])
	CALL eosio_assert($2, [224])
	$3 = ((int_64)$3 + (int_64)300000)
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [304])
	
.LABEL $label$18
	CALL eosio_assert([1], [336])
	CALL eosio_assert([1], [384])
	$8 = CALL db_next_i64(*($4 + [28]), ($10 + [88]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$24 }
	CALL $47(($10 + [48]), $8)
	
.LABEL $label$24
	CALL $48(($10 + [48]), $4)
	$8 = CALL db_lowerbound_i64(*($10 + [48]), *($6), (int_64)-2272763793870159872, (int_64)0)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ((int_64)$3 < (int_64)1) ){ goto $label$10 }
	*($10 + [40]) = (int_64)1397703940
	*(($10 + [24])) = [0]
	*($10 + [32]) = $3
	*($10 + [16]) = (int_64)0
	$8 = CALL strlen([416])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$27 }
	*($10 + [16]) = ($8 << [1])
	$9 = (($10 + [16]) | [1])
	if ( $8 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$4 = (($8 + [16]) & [-16])
	$9 = CALL $309($4)
	*($10 + [16]) = ($4 | [1])
	*($10 + [24]) = $9
	*($10 + [20]) = $8
	
.LABEL $label$26
	CALL memcpy($9, [416], $8)
	
.LABEL $label$25
	*(($9 + $8)) = [0]
	*(($10 + [8])) = *((($10 + [32]) + [8]))
	*($10) = *($10 + [32])
	CALL $49($0, $1, $10, ($10 + [16]))
	if ( ((*($10 + [16]) & [1]) == 0) ){ goto $label$10 }
	CALL $310(*($10 + [24]))
	
.LABEL $label$10
	$4 = *($10 + [72])
	if ( ($4 == 0) ){ goto $label$28 }
	$6 = ($10 + [76])
	$8 = *($6)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$30 }
	
.LOOP $label$31:
	$8 = ($8 + [-24])
	$9 = *($8)
	*($8) = [0]
	if ( ($9 == 0) ){ goto $label$32 }
	CALL $310($9)
	
.LABEL $label$32
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$31 }
	$8 = *(($10 + [72]))
	goto $label$29 
	
.LABEL $label$30
	$8 = $4
	
.LABEL $label$29
	*($6) = $4
	CALL $310($8)
	
.LABEL $label$28
	*([0] + [4]) = ($10 + [96])
	return (unreachable)
	
.LABEL $label$9
	CALL $311(($10 + [16]))
}

int_32 .FUNC $167 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [464])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [128])
	*($0 + [16]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [784])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [20]) = *(*($2 + [8]))
	return $0
}

int_32 .FUNC $166 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [752])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $309([32])
	$6 = CALL $167($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	*($8 + [8]) = $5)
	$1 = *($4 + [20])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $168(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $310($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $165 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $309(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $310($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $310($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $164 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$3()), [896])
	*(($4 = CALL $309([32])) + [8]) = (int_64)1398362884
	*($4) = (int_64)0
	CALL eosio_assert([1], [464])
	$5 = ($4 + [8])
	$6 = (int_64)5462355
	$7 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$8 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	
.LABEL $label$1
	CALL eosio_assert($8, [128])
	*($4 + [16]) = $1
	$7 = *($3)
	*($4) = *($7)
	*(($4 + [12])) = *(($7 + [12]))
	*(($4 + [8])) = *(($7 + [8]))
	*(($4 + [4])) = *(($7 + [4]))
	CALL eosio_assert([1], [560])
	CALL memcpy(($9 + [16]), $4, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy((($9 + [16]) | [8]), $5, [8])
	*($4 + [20]) = CALL db_store_i64(*($1 + [8]), (int_64)6820308914865700864, $2, (int_64)6820308914865700864, ($9 + [16]), [16])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)6820308914865700864) ){ goto $label$6 }
	*(($1 + [16])) = (int_64)6820308914865700865
	
.LABEL $label$6
	*($9 + [8]) = $4
	*($9 + [16]) = (int_64)6820308914865700864
	$8 = *($4 + [20])
	*($9 + [4]) = $8
	$3 = ($1 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$8 }
	*($7 + [8]) = (int_64)6820308914865700864
	*($7 + [16]) = $8
	*($9 + [8]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $165(($1 + [24]), ($9 + [8]), ($9 + [16]), ($9 + [4]))
	
.LABEL $label$7
	*($0 + [4]) = $4
	*($0) = $1
	$7 = *($9 + [8])
	*($9 + [8]) = [0]
	if ( ($7 == 0) ){ goto $label$9 }
	CALL $310($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [32])
}

int_32 .FUNC $163 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	$9 = $10
	*([0] + [4]) = $10
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$4 = ([0] - $3)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$5 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [752])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$3 = CALL malloc($7)
	CALL db_get_i64($1, $3, $7)
	CALL free($3)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($10 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $3
	CALL db_get_i64($1, $3, $7)
	
.LABEL $label$5
	$2 = ($0 + [24])
	*(($5 = CALL $309([32])) + [8]) = (int_64)1398362884
	*($5) = (int_64)0
	CALL eosio_assert([1], [464])
	$10 = ($5 + [8])
	$8 = (int_64)5462355
	$6 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$4 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$4 = [0]
	
.LABEL $label$7
	CALL eosio_assert($4, [128])
	*($5 + [16]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [784])
	CALL memcpy($5, $3, [8])
	CALL eosio_assert(((int_32)($7 & [-8]) != (int_32)[8]), [784])
	CALL memcpy($10, ($3 + [8]), [8])
	*($5 + [20]) = $1
	*($9 + [24]) = $5
	*($9 + [16]) = (int_64)6820308914865700864
	$7 = *($5 + [20])
	*($9 + [12]) = $7
	$1 = ($0 + [28])
	$6 = *($1)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$13 }
	*($6 + [8]) = (int_64)6820308914865700864
	*($6 + [16]) = $7
	*($9 + [24]) = [0]
	*($6) = $5
	*($1) = ($6 + [24])
	goto $label$12 
	
.LABEL $label$13
	CALL $165($2, ($9 + [24]), ($9 + [16]), ($9 + [12]))
	
.LABEL $label$12
	$6 = *($9 + [24])
	*($9 + [24]) = [0]
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $310($6)
	
.LABEL $label$3
	*([0] + [4]) = ($9 + [32])
	return $5
}

void .FUNC $162 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$4 = *(($1 + [28]))
	if ( ((int_32)$4 == (int_32)*($1 + [24])) ){ goto $label$4 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [16]) == (int_32)$1), [64])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)6820308914865700864, (int_64)6820308914865700864)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $163($1, $4)
	CALL eosio_assert(((int_32)*($4 + [16]) == (int_32)$1), [64])
	
.LABEL $label$3
	*($0) = *($4)
	*(($0 + [8])) = *(($4 + [8]))
	goto $label$1 
	
.LABEL $label$2
	*($5 + [8]) = $3
	CALL $164($5, $1, $2, ($5 + [8]))
	$1 = *($5 + [4])
	*($0) = *($1)
	*(($0 + [12])) = *(($1 + [12]))
	*(($0 + [8])) = *(($1 + [8]))
	*(($0 + [4])) = *(($1 + [4]))
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $161 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $309(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $310($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $310($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $160 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [784])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [784])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [784])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [784])
	CALL memcpy(($5 + [15]), *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	*($0) = ((int_32)*($5 + [15]) != (int_32)[0])
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $0, [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((int_32)(*($2 + [8]) - $1) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($0 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

int_32 .FUNC $169 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1536])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$3 = *($1 + [4])
	$7 = int_32(($3 - $4) >> [3])
	$5 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$5 <= (uint_32)$7) ){ goto $label$4 }
	CALL $171($1, ($5 - $7))
	$3 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$5 >= (uint_32)$7) ){ goto $label$5 }
	$3 = ($4 + ($5 << [3]))
	*(($1 + [4])) = $3
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = ($0 + [4])
	$7 = *($5)
	
.LOOP $label$6:
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $7) > (uint_32)[7]), [784])
	CALL memcpy($4, *($5), [8])
	$7 = (*($5) + [8])
	*($5) = $7
	$4 = ($4 + [8])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $168 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $309(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $310($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $310($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $66 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$3()), [896])
	$4 = CALL $309([56])
	CALL $62($4)
	*($4 + [40]) = $1
	CALL memcpy($4, *($3), [40])
	*($7 + [48]) = ($7 + [40])
	*($7 + [44]) = $7
	*($7 + [40]) = $7
	*($7 + [56]) = ($7 + [40])
	*($7 + [68]) = ($4 + [8])
	*($7 + [64]) = $4
	*($7 + [72]) = ($4 + [24])
	CALL $67(($7 + [64]), ($7 + [56]))
	*($4 + [44]) = CALL db_store_i64(*($1 + [8]), (int_64)-9026050048739246080, $2, (int_64)-9026050048739246080, $7, [40])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)-9026050048739246080) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)-9026050048739246079
	
.LABEL $label$1
	*($7 + [64]) = $4
	*($7) = (int_64)-9026050048739246080
	$5 = *($4 + [44])
	*($7 + [40]) = $5
	$6 = ($1 + [28])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = (int_64)-9026050048739246080
	*($3 + [16]) = $5
	*($7 + [64]) = [0]
	*($3) = $4
	*($6) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $68(($1 + [24]), ($7 + [64]), $7, ($7 + [40]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$1 = *($7 + [64])
	*($7 + [64]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $310($1)
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [80])
}

void .FUNC $61 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $309(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $310($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $310($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [752])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $309([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [784])
	CALL memcpy($6, $7, [8])
	*($6 + [12]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [12])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $61(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $310($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [752])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($8 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($7 + [12]) = $4
	*($7 + [8]) = $4
	*($7 + [16]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$5 = CALL $309([56])
	CALL $62($5)
	*($5 + [40]) = $0
	*($7 + [24]) = ($7 + [8])
	*($7 + [36]) = ($5 + [8])
	*($7 + [32]) = $5
	*($7 + [40]) = ($5 + [24])
	CALL $69(($7 + [32]), ($7 + [24]))
	*($5 + [44]) = $1
	*($7 + [24]) = $5
	*($7 + [32]) = (int_64)-9026050048739246080
	$6 = *($5 + [44])
	*($7 + [4]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = (int_64)-9026050048739246080
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $68(($0 + [24]), ($7 + [24]), ($7 + [32]), ($7 + [4]))
	
.LABEL $label$8
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $310($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
	return $5
}

void .FUNC $241 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [464])
	*([0] + [4]) = $12
	*($12 + [440]) = $1
	$11 = [0]
	*((($12 + [400]) + [32])) = [0]
	*($12 + [408]) = $1
	*($12 + [416]) = (int_64)-1
	*($12 + [424]) = (int_64)0
	$6 = *($0)
	*($12 + [400]) = $6
	*((($12 + [240]) + [32])) = (int_64)310366523908
	*($12 + [248]) = [0]
	*($12 + [240]) = (int_64)0
	*($12 + [256]) = (int_64)0
	*($12 + [264]) = (int_64)0
	CALL eosio_assert([1], [464])
	$1 = (int_64)1212369234
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$8 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	
.LABEL $label$1
	CALL eosio_assert($8, [128])
	*(($12 + [288])) = (int_64)310366523908
	*($12 + [280]) = (int_64)0
	CALL eosio_assert([1], [464])
	$1 = (int_64)1212369234
	$11 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$8 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	
.LABEL $label$6
	CALL eosio_assert($8, [128])
	*(($12 + [304])) = (int_64)1397703940
	*($12 + [296]) = (int_64)0
	CALL eosio_assert([1], [464])
	$1 = (int_64)5459781
	$11 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$8 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$8 = [0]
	
.LABEL $label$11
	CALL eosio_assert($8, [128])
	*($12 + [312]) = [0]
	CALL $91(($12 + [320]), ($12 + [400]), $6, ($12 + [240]))
	CALL eosio_assert(((int_32)((*($12 + [328]) | [4]) & [255]) == (int_32)[5]), [4288])
	$1 = *($12 + [336])
	$3 = ( [18] ? ( [12] ? (CASTING uint_32)(uint_64 $1) : ((int_64)$1 == (int_64)56) ) : ((int_64)$1 == (int_64)40) )
	$1 = ((int_64)(CASTING uint_64)(uint_32 $3) & (int_64)255)
	$4 = *(($0 + [912]))
	$7 = *(($0 + [916]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$16 }
	$11 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$17:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$16 }
	$7 = $11
	$8 = ($11 + [-24])
	$11 = $8
	if ( ((int_32)($8 + $5) != (int_32)[-24]) ){ goto $label$17 }
	
.LABEL $label$16
	$5 = ($0 + [888])
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$19 }
	$11 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*(($11 + [52])) == (int_32)$5), [64])
	goto $label$18 
	
.LABEL $label$19
	$11 = [0]
	$8 = CALL db_find_i64(*(($0 + [888])), *(($0 + [896])), (int_64)-7950542192169189376, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$18 }
	$11 = CALL $204($5, $8)
	CALL eosio_assert(((int_32)*($11 + [52]) == (int_32)$5), [64])
	
.LABEL $label$18
	CALL $284(($12 + [240]), $11)
	$6 = *($2 + [8])
	CALL eosio_assert(((int_64)$6 == (int_64)*($12 + [248])), [160])
	$1 = *($2)
	CALL eosio_assert(((int_64)$1 >= (int_64)*($12 + [240])), [4256])
	$10 = *($12 + [440])
	CALL eosio_assert(((int_64)*($11 + [40]) != (int_64)$10), [4320])
	CALL $284(($12 + [240]), $11)
	CALL eosio_assert(((int_64)$6 == (int_64)*($12 + [248])), [1280])
	$1 = (int_64)
	CALL eosio_assert(((int_64)$1($1 - *($12 + [240]))) > (int_64)-4611686018427387904), [1328])
	CALL eosio_assert(((int_64)$1 < (int_64)4611686018427387904), [1360])
	if ( ((int_64)$1 < (int_64)1) ){ goto $label$22 }
	*($12 + [232]) = $6
	*(($12 + [216])) = [0]
	*($12 + [224]) = $1
	*($12 + [208]) = (int_64)0
	$8 = CALL strlen([4352])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$21 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$25 }
	*($12 + [208]) = ($8 << [1])
	$7 = (($12 + [208]) | [1])
	if ( $8 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$4 = (($8 + [16]) & [-16])
	$7 = CALL $309($4)
	*($12 + [208]) = ($4 | [1])
	*($12 + [216]) = $7
	*($12 + [212]) = $8
	
.LABEL $label$24
	CALL memcpy($7, [4352], $8)
	
.LABEL $label$23
	*(($7 + $8)) = [0]
	*((($12 + [96]) + [8])) = *((($12 + [224]) + [8]))
	*($12 + [96]) = *($12 + [224])
	CALL $49($0, $10, ($12 + [96]), ($12 + [208]))
	if ( ((*($12 + [208]) & [1]) == 0) ){ goto $label$22 }
	CALL $310(*($12 + [216]))
	
.LABEL $label$22
	*((($12 + [320]) + [8])) = [2]
	CALL $81(($12 + [400]), ($12 + [320]), *($0))
	if ( (int_64)(*($11 + [32]) == 0) ){ goto $label$30 }
	CALL $283(($12 + [192]), $11)
	CALL $284(($12 + [240]), $11)
	CALL $283(($12 + [448]), $11)
	$1 = *($12 + [240])
	$10 = *($12 + [248])
	CALL eosio_assert(((int_64)*($12 + [456]) == (int_64)$10), [1280])
	$1 = (int_64)
	CALL __multi3(($12 + [80]), $1($1 - *($12 + [448]))), (int_64)$1 >> (int_64)63), (int_64)35, (int_64)0)
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [1328])
	CALL eosio_assert(((int_64)$1 < (int_64)4611686018427387904), [1360])
	$1 = *((($12 + [80]) + [8]))
	$6 = *($12 + [80])
	CALL eosio_assert(( (uint_64)($6 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ), [1408])
	CALL eosio_assert(( ((uint_64)$6 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ), [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	$1 = *($12 + [192])
	$9 = *($12 + [200])
	CALL eosio_assert(((int_64)$10 == (int_64)$9), [224])
	$1 = ((int_64)$1 + (int_64)((int_64)$6 / (int_64)100))
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)$1 < (int_64)4611686018427387904), [304])
	$6 = *(($11 + [40]))
	*($12 + [184]) = $9
	*((($12 + [160]) + [8])) = [0]
	*($12 + [176]) = $1
	*($12 + [160]) = (int_64)0
	$8 = CALL strlen([4368])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$20 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$29 }
	*($12 + [160]) = ($8 << [1])
	$7 = (($12 + [160]) | [1])
	if ( $8 ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$30
	$1 = *(($2 + [8]))
	*((($12 + [128]) + [8])) = $1
	$6 = *($2)
	*((($12 + [16]) + [8])) = $1
	*($12 + [128]) = $6
	*($12 + [20]) = *($12 + [132])
	*($12 + [16]) = *($12 + [128])
	CALL $83($0, ($12 + [16]))
	goto $label$26 
	
.LABEL $label$29
	$4 = (($8 + [16]) & [-16])
	$7 = CALL $309($4)
	*($12 + [160]) = ($4 | [1])
	*($12 + [168]) = $7
	*($12 + [164]) = $8
	
.LABEL $label$28
	CALL memcpy($7, [4368], $8)
	
.LABEL $label$27
	*(($7 + $8)) = [0]
	*((($12 + [64]) + [8])) = *((($12 + [176]) + [8]))
	*($12 + [64]) = *($12 + [176])
	CALL $82($0, $6, ($12 + [64]), ($12 + [160]))
	if ( ((*($12 + [160]) & [1]) == 0) ){ goto $label$31 }
	CALL $310(*($12 + [168]))
	
.LABEL $label$31
	CALL $284(($12 + [240]), $11)
	CALL $283(($12 + [448]), $11)
	$1 = *($12 + [240])
	$6 = *($12 + [248])
	CALL eosio_assert(((int_64)*($12 + [456]) == (int_64)$6), [1280])
	$1 = (int_64)
	CALL __multi3(($12 + [32]), $1($1 - *($12 + [448]))), (int_64)$1 >> (int_64)63), (int_64)65, (int_64)0)
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [1328])
	CALL eosio_assert(((int_64)$1 < (int_64)4611686018427387904), [1360])
	$1 = *((($12 + [32]) + [8]))
	$10 = *($12 + [32])
	CALL eosio_assert(( (uint_64)($10 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ), [1408])
	CALL eosio_assert(( ((uint_64)$10 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ), [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	*($12 + [152]) = $6
	*((($12 + [48]) + [8])) = $6
	$1 = ((int_64)$10 / (int_64)100)
	*($12 + [144]) = $1
	*($12 + [48]) = $1
	CALL $83($0, ($12 + [48]))
	
.LABEL $label$26
	CALL $285($0, *($12 + [440]), *(($11 + [40])))
	*($12 + [240]) = ($12 + [440])
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [848])
	CALL $286($5, $11, (int_64)0, ($12 + [240]))
	*((($12 + [112]) + [12])) = *(($2 + [12]))
	*(($11 = (($12 + [112]) + [8]))) = *(($2 + [8]))
	$1 = *($12 + [440])
	*($12 + [112]) = *($2)
	*(($12 + [8])) = *($11)
	*($12) = *($12 + [112])
	CALL $190($0, $1, $12)
	CALL $280($0)
	CALL $281($0, *($12 + [440]), ($3 & [255]))
	$7 = *($12 + [424])
	if ( ($7 == 0) ){ goto $label$32 }
	$0 = ($12 + [428])
	$11 = *($0)
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$34 }
	
.LOOP $label$35:
	$11 = ($11 + [-24])
	$8 = *($11)
	*($11) = [0]
	if ( ($8 == 0) ){ goto $label$36 }
	CALL $310($8)
	
.LABEL $label$36
	if ( ((int_32)$7 != (int_32)$11) ){ goto $label$35 }
	$11 = *(($12 + [424]))
	goto $label$33 
	
.LABEL $label$34
	$11 = $7
	
.LABEL $label$33
	*($0) = $7
	CALL $310($11)
	
.LABEL $label$32
	*([0] + [4]) = ($12 + [464])
	return (unreachable)
	
.LABEL $label$21
	CALL $311(($12 + [208]))
	
.LABEL $label$20
	CALL $311(($12 + [160]))
	(unreachable)
}

void .FUNC $87 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$0), [64])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)4853904214365044736, (int_64)4853904214365044736)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $111($0, $3)
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$0), [64])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [848])
	CALL $112($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $113($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $69 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [784])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($0, *($2 + [4]), [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $1) > (uint_32)[7]), [784])
	CALL memcpy(($0 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $68 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $309(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $310($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $310($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $248 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$3()), [896])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $309([32])) + [16]) = [0]
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [20]) = $1
	CALL $273(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [24])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $170(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	$1 = *($3 + [8])
	if ( ($1 == 0) ){ goto $label$4 }
	*(($3 + [12])) = $1
	CALL $310($1)
	
.LABEL $label$4
	CALL $310($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $249 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [16])
	$12 = $13
	*([0] + [4]) = $13
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [960])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1008])
	$4 = *($1)
	$10 = [0]
	$8 = *($3)
	if ( ((int_32)*($8 + [4]) == (int_32)*($8)) ){ goto $label$1 }
	$5 = *($1 + [8])
	$11 = (int_64)0
	$10 = [0]
	$9 = [0]
	
.LOOP $label$2:
	$7 = ((int_64)*($6) + (int_64)*((*($8) + $10)))
	*(($6 = ($5 + $10))) = $7
	$11 = ((int_64)$7 + (int_64)((int_64)$11 & (int_64)4294967295))
	$10 = ($10 + [8])
	$8 = *($3)
	$9 = ($9 + [1])
	if ( ($9 <= int_32((*($8 + [4]) - *($8)) >> [3])) ){ goto $label$2 }
	$10 = (CASTING uint_32)(uint_64 $11)
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$10 > (int_32)[999]), [3552])
	CALL eosio_assert(((int_32)$10 < (int_32)[1000001]), [3584])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1072])
	$10 = [8]
	$9 = ($1 + [8])
	$6 = *($1 + [8])
	$8 = *(($1 + [12]))
	$3 = ($8 - $6)
	$11 = (CASTING uint_64)(uint_32 int_32($3 >> [3]))
	
.LOOP $label$3:
	$10 = ($10 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$4 }
	$10 = (($3 & [-8]) + $10)
	
.LABEL $label$4
	if ( ($10 <= [513]) ){ goto $label$6 }
	$8 = CALL malloc($10)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($13 - (($10 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$5
	*($12) = $8
	*($12 + [8]) = ($8 + $10)
	CALL eosio_assert(((int_32)$10 > (int_32)[7]), [560])
	CALL memcpy($8, $1, [8])
	*($12 + [4]) = ($8 + [8])
	CALL $272($12, $9)
	CALL db_update_i64(*($1 + [24]), $2, $8, $10)
	if ( ($10 <= [513]) ){ goto $label$7 }
	CALL free($8)
	
.LABEL $label$7
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($12 + [16])
}

void .FUNC $246 (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [496])
	*([0] + [4]) = $15
	*($15 + [488]) = $1
	*($15 + [248]) = [44]
	CALL _Z5splitRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKc(($15 + [472]), $4, ($15 + [248]))
	CALL eosio_assert(((uint_32)((int_32)(*($15 + [476]) - *($15 + [472])) / (int_32)[12]) > (uint_32)[6]), [3200])
	$4 = [0]
	CALL memset(($15 + [248]), [0], [56])
	*(($14 = ($15 + [264]))) = (int_64)1398362884
	*($15 + [256]) = (int_64)0
	CALL eosio_assert([1], [464])
	$5 = ($0 + [568])
	$1 = (uint_64)*($14) >> (uint_64)(int_64)8)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$14 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$14 = [0]
	
.LABEL $label$1
	CALL eosio_assert($14, [128])
	$13 = [0]
	*(($15 + [300])) = [0]
	*($15 + [292 align=4]) = (int_64)0
	CALL $70(($15 + [416]), $5, ($15 + [248]))
	$4 = *($15 + [292])
	if ( ($4 == 0) ){ goto $label$6 }
	*(($15 + [296])) = $4
	CALL $310($4)
	
.LABEL $label$6
	CALL eosio_assert(((int_64)*($15 + [416]) == (int_64)$3), [3232])
	CALL eosio_assert(((uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$4() / (uint_64)(int_64)1000000)) > (uint_32)*($15 + [440])), [3264])
	CALL eosio_assert(((CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$4() / (uint_64)(int_64)1000000)) <= *($15 + [444])), [3296])
	CALL eosio_assert((*($15 + [456]) <= [30]), [3328])
	*($15 + [408]) = [0]
	*($15 + [400]) = (int_64)0
	$6 = (($15 + [384]) | [1])
	$9 = (($15 + [400]) + [8])
	
.LOOP $label$7:
	CALL $325(($15 + [384]), (*($15 + [472]) + ((int_32)$13 * (int_32)[12])))
	$4 = *($15 + [384])
	if ( ($4 & [1]) ){ goto $label$9 }
	$1 = (int_64)0
	$14 = uint_32($4 >> [1])
	if ( ($14 == 0) ){ goto $label$8 }
	$4 = $6
	
.LOOP $label$10:
	$8 = *($4)
	if ( ((uint_32)(($8 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$11 }
	$1 = ((int_64)((int_64)((int_64)$1 * (int_64)10) + (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)) + (int_64)-48)
	
.LABEL $label$11
	$4 = ($4 + [1])
	$14 = ($14 + [-1])
	if ( $14 ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$14 = *($15 + [388])
	if ( ($14 == 0) ){ goto $label$12 }
	$4 = *((($15 + [384]) + [8]))
	$1 = (int_64)0
	
.LOOP $label$13:
	$8 = *($4)
	if ( ((uint_32)(($8 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$14 }
	$1 = ((int_64)((int_64)((int_64)$1 * (int_64)10) + (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)) + (int_64)-48)
	
.LABEL $label$14
	$4 = ($4 + [1])
	$14 = ($14 + [-1])
	if ( $14 ){ goto $label$13 }
	goto $label$8 
	
.LABEL $label$12
	$1 = (int_64)0
	
.LABEL $label$8
	*($15 + [248]) = $1
	$4 = *($15 + [404])
	if ( ((uint_32)$4 >= (uint_32)*($9)) ){ goto $label$16 }
	*($4) = $1
	*($15 + [404]) = ($4 + [8])
	goto $label$15 
	
.LABEL $label$16
	CALL $247(($15 + [400]), ($15 + [248]))
	
.LABEL $label$15
	if ( ((*($15 + [384]) & [1]) == 0) ){ goto $label$17 }
	CALL $310(*((($15 + [384]) + [8])))
	
.LABEL $label$17
	$13 = ($13 + [1])
	if ( ((int_32)$13 != (int_32)[7]) ){ goto $label$7 }
	*($15 + [368]) = (int_64)0
	*($15 + [376]) = [0]
	$4 = (*($15 + [404]) - *($15 + [400]))
	$8 = int_32($4 >> [3])
	if ( ((uint_32)$8 >= (uint_32)[536870912]) ){ goto $label$20 }
	$14 = CALL $309($4)
	*(($15 + [376])) = ($14 + ($8 << [3]))
	*($15 + [368]) = $14
	*($15 + [372]) = $14
	$8 = *($15 + [400])
	$4 = (*($15 + [404]) - $8)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$22 }
	CALL memcpy($14, $8, $4)
	$14 = (*($15 + [372]) + $4)
	*($15 + [372]) = $14
	$4 = *($15 + [368])
	$8 = *($15 + [400])
	goto $label$21 
	
.LABEL $label$22
	$4 = $14
	
.LABEL $label$21
	*($4) = *($8)
	*($4 + [8]) = *($8 + [8])
	*($4 + [16]) = *($8 + [16])
	*($4 + [24]) = *($8 + [24])
	*($4 + [32]) = *($8 + [32])
	*($4 + [40]) = *($8 + [40])
	*($4 + [48]) = *($8 + [48])
	$1 = (int_64)0
	$10 = (int_64)0
	if ( ((int_32)$4 == (int_32)$14) ){ goto $label$23 }
	$10 = (int_64)0
	
.LOOP $label$24:
	$10 = ((int_64)*($4) + (int_64)$10)
	$4 = ($4 + [8])
	if ( ((int_32)$14 != (int_32)$4) ){ goto $label$24 }
	
.LABEL $label$23
	$3 = *($2)
	CALL eosio_assert(((int_64)$3 == (int_64)$10), [3360])
	CALL eosio_assert(((int_64)$10 > (int_64)999), [3392])
	CALL eosio_assert(((int_64)$10 < (int_64)1000001), [3424])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($15 + [432]))), [224])
	$3 = ((int_64)$3 + (int_64)*($15 + [424]))
	*($15 + [424]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($15 + [424]) < (int_64)4611686018427387904), [304])
	$3 = (int_64)59
	$4 = [1248]
	$7 = *($15 + [448])
	$11 = (int_64)0
	
.LOOP $label$25:
	$12 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$26 }
	$14 = *($4)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$14 = ($14 + [165])
	goto $label$27 
	
.LABEL $label$28
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($14 & [31])) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$26
	$4 = ($4 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$25 }
	if ( ((int_64)$7 == (int_64)$11) ){ goto $label$29 }
	*((($15 + [328]) + [32])) = [0]
	*($15 + [336]) = $7
	*($15 + [344]) = (int_64)-1
	*($15 + [352]) = (int_64)0
	$3 = *($0)
	*($15 + [328]) = $3
	*(($4 = (($15 + [168]) + [32]))) = (int_64)310366523908
	*($15 + [176]) = [0]
	*($15 + [168]) = (int_64)0
	*($15 + [184]) = (int_64)0
	*($15 + [192]) = (int_64)0
	CALL eosio_assert([1], [464])
	$1 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$32:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$31 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$33 }
	
.LOOP $label$34:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$31 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$34 }
	
.LABEL $label$33
	$14 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$32 }
	goto $label$30 
	
.LABEL $label$31
	$14 = [0]
	
.LABEL $label$30
	CALL eosio_assert($14, [128])
	*(($4 = ($15 + [216]))) = (int_64)310366523908
	*($15 + [208]) = (int_64)0
	CALL eosio_assert([1], [464])
	$1 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$37:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$36 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$38 }
	
.LOOP $label$39:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$36 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$39 }
	
.LABEL $label$38
	$14 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$37 }
	goto $label$35 
	
.LABEL $label$36
	$14 = [0]
	
.LABEL $label$35
	CALL eosio_assert($14, [128])
	*(($4 = ($15 + [232]))) = (int_64)1397703940
	*($15 + [224]) = (int_64)0
	CALL eosio_assert([1], [464])
	$1 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$42:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$41 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$43 }
	
.LOOP $label$44:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$41 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$44 }
	
.LABEL $label$43
	$14 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$42 }
	goto $label$40 
	
.LABEL $label$41
	$14 = [0]
	
.LABEL $label$40
	CALL eosio_assert($14, [128])
	*($15 + [240]) = [0]
	CALL $91(($15 + [248]), ($15 + [328]), $3, ($15 + [168]))
	CALL eosio_assert(((int_64)*(($15 + [432])) == (int_64)*(($15 + [312]))), [160])
	CALL eosio_assert(((int_64)*(($15 + [424])) <= (int_64)*($15 + [304])), [3456])
	$8 = *($15 + [352])
	if ( ($8 == 0) ){ goto $label$29 }
	$13 = ($15 + [356])
	$4 = *($13)
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$46 }
	
.LOOP $label$47:
	$4 = ($4 + [-24])
	$14 = *($4)
	*($4) = [0]
	if ( ($14 == 0) ){ goto $label$48 }
	CALL $310($14)
	
.LABEL $label$48
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$47 }
	$4 = *(($15 + [352]))
	goto $label$45 
	
.LABEL $label$46
	$4 = $8
	
.LABEL $label$45
	*($13) = $8
	CALL $310($4)
	
.LABEL $label$29
	$4 = *($15 + [472])
	if ( (((int_32)(*($15 + [476]) - $4) / (int_32)[12]) <= [8]) ){ goto $label$49 }
	if ( (*($4 + [84]) & [1]) ){ goto $label$51 }
	$4 = (($4 + [84]) + [1])
	goto $label$50 
	
.LABEL $label$51
	$4 = *(($4 + [92]))
	
.LABEL $label$50
	$14 = [-1]
	
.LOOP $label$52:
	$8 = ($4 + $14)
	$13 = ($14 + [1])
	$14 = $13
	if ( *(($8 + [1])) ){ goto $label$52 }
	$7 = (CASTING uint_64)(uint_32 $13)
	$1 = (int_64)0
	$3 = (int_64)59
	$11 = (int_64)0
	
.LOOP $label$53:
	$12 = (int_64)0
	if ( ((uint_64)$1 >= (uint_64)$7) ){ goto $label$54 }
	$14 = *($4)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$56 }
	$14 = ($14 + [165])
	goto $label$55 
	
.LABEL $label$56
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$55
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)
	
.LABEL $label$54
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$58 }
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$3 & (int_64)4294967295))
	goto $label$57 
	
.LABEL $label$58
	$12 = ((int_64)$12 & (int_64)15)
	
.LABEL $label$57
	$4 = ($4 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$3 = ((int_64)$3 + (int_64)-5)
	if ( ((int_64)$3 != (int_64)-6) ){ goto $label$53 }
	$4 = CALL is_account($11)
	if ( ((int_64)$11 == (int_64)*($15 + [488])) ){ goto $label$49 }
	if ( ((int_32)$4 ^ (int_32)[1]) ){ goto $label$49 }
	*($15 + [160]) = (int_64)1397703940
	$1 = ((int_64)$10 / (int_64)1000)
	*($15 + [152]) = $1
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [464])
	$1 = (uint_64)*($15 + [160]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$61:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$60 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$62 }
	
.LOOP $label$63:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$60 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$63 }
	
.LABEL $label$62
	$14 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$61 }
	goto $label$59 
	
.LABEL $label$60
	$14 = [0]
	
.LABEL $label$59
	CALL eosio_assert($14, [128])
	*(($15 + [144])) = [0]
	*($15 + [136]) = (int_64)0
	$4 = CALL strlen([3504])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$18 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$66 }
	*($15 + [136]) = ($4 << [1])
	$14 = (($15 + [136]) | [1])
	if ( $4 ){ goto $label$65 }
	goto $label$64 
	
.LABEL $label$66
	$8 = (($4 + [16]) & [-16])
	$14 = CALL $309($8)
	*($15 + [136]) = ($8 | [1])
	*($15 + [144]) = $14
	*($15 + [140]) = $4
	
.LABEL $label$65
	CALL memcpy($14, [3504], $4)
	
.LABEL $label$64
	*(($14 + $4)) = [0]
	*((($15 + [56]) + [8])) = *((($15 + [152]) + [8]))
	*($15 + [56]) = *($15 + [152])
	CALL $82($0, $11, ($15 + [56]), ($15 + [136]))
	if ( ((*($15 + [136]) & [1]) == 0) ){ goto $label$49 }
	CALL $310(*($15 + [144]))
	
.LABEL $label$49
	$1 = *($15 + [488])
	$9 = *(($0 + [472]))
	$8 = *(($0 + [476]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$67 }
	$4 = ($8 + [-24])
	$13 = ([0] - $9)
	
.LOOP $label$68:
	if ( ((int_64)*(*($4)) == (int_64)$1) ){ goto $label$67 }
	$8 = $4
	$14 = ($4 + [-24])
	$4 = $14
	if ( ((int_32)($14 + $13) != (int_32)[-24]) ){ goto $label$68 }
	
.LABEL $label$67
	$4 = ($0 + [448])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$73 }
	$14 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($14 + [20]) == (int_32)$4), [64])
	$1 = *($0)
	if ( $14 ){ goto $label$72 }
	goto $label$70 
	
.LABEL $label$73
	$14 = CALL db_find_i64(*(($0 + [448])), *(($0 + [456])), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$14 <= (int_32)[-1]) ){ goto $label$71 }
	$14 = CALL $73($4, $14)
	CALL eosio_assert(((int_32)*($14 + [20]) == (int_32)$4), [64])
	$1 = *($0)
	
.LABEL $label$72
	*($15 + [248]) = ($15 + [368])
	CALL eosio_assert([1], [848])
	CALL $249($4, $14, $1, ($15 + [248]))
	goto $label$69 
	
.LABEL $label$71
	$1 = *($0)
	
.LABEL $label$70
	*($15 + [252]) = ($15 + [368])
	*($15 + [248]) = ($15 + [488])
	CALL $248(($15 + [168]), $4, $1, ($15 + [248]))
	*(($4 = ($15 + [456]))) = (*($4) + [1])
	
.LABEL $label$69
	CALL $98($5, ($15 + [416]), *($0))
	*((($15 + [120]) + [8])) = *(($2 + [8]))
	*((($15 + [104]) + [8])) = [0]
	$1 = *($15 + [488])
	*($15 + [120]) = *($2)
	*($15 + [104]) = (int_64)0
	$4 = CALL strlen([3520])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$19 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$76 }
	*($15 + [104]) = ($4 << [1])
	$14 = (($15 + [104]) | [1])
	if ( $4 ){ goto $label$75 }
	goto $label$74 
	
.LABEL $label$76
	$8 = (($4 + [16]) & [-16])
	$14 = CALL $309($8)
	*($15 + [104]) = ($8 | [1])
	*($15 + [112]) = $14
	*($15 + [108]) = $4
	
.LABEL $label$75
	CALL memcpy($14, [3520], $4)
	
.LABEL $label$74
	*(($14 + $4)) = [0]
	*((($15 + [40]) + [8])) = *((($15 + [120]) + [8]))
	*($15 + [40]) = *($15 + [120])
	CALL $76($0, $1, ($15 + [40]), ($15 + [104]))
	if ( ((*($15 + [104]) & [1]) == 0) ){ goto $label$77 }
	CALL $310(*($15 + [112]))
	
.LABEL $label$77
	$4 = ($2 + [12])
	*((($15 + [88]) + [12])) = *($4)
	$8 = ($2 + [8])
	*(($14 = (($15 + [88]) + [8]))) = *($8)
	$1 = *($15 + [488])
	*($15 + [88]) = *($2)
	*((($15 + [24]) + [8])) = *($14)
	*($15 + [24]) = *($15 + [88])
	CALL $250($0, $1, ($15 + [24]))
	*((($15 + [72]) + [12])) = *($4)
	*(($4 = (($15 + [72]) + [8]))) = *($8)
	$1 = *($15 + [488])
	*($15 + [72]) = *($2)
	*((($15 + [8]) + [8])) = *($4)
	*($15 + [8]) = *($15 + [72])
	CALL $251($0, $1, ($15 + [8]))
	CALL $252($0)
	$4 = *($15 + [368])
	if ( ($4 == 0) ){ goto $label$78 }
	*($15 + [372]) = $4
	CALL $310($4)
	
.LABEL $label$78
	$4 = *($15 + [400])
	if ( ($4 == 0) ){ goto $label$79 }
	*($15 + [404]) = $4
	CALL $310($4)
	
.LABEL $label$79
	$4 = *($15 + [460])
	if ( ($4 == 0) ){ goto $label$80 }
	*(($15 + [464])) = $4
	CALL $310($4)
	
.LABEL $label$80
	$8 = *($15 + [472])
	if ( ($8 == 0) ){ goto $label$81 }
	$4 = *($15 + [476])
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$83 }
	$14 = ([0] - $8)
	$4 = ($4 + [-12])
	
.LOOP $label$84:
	if ( ((*($4) & [1]) == 0) ){ goto $label$85 }
	CALL $310(*(($4 + [8])))
	
.LABEL $label$85
	$4 = ($4 + [-12])
	if ( ((int_32)($4 + $14) != (int_32)[-12]) ){ goto $label$84 }
	$4 = *($15 + [472])
	goto $label$82 
	
.LABEL $label$83
	$4 = $8
	
.LABEL $label$82
	*($15 + [476]) = $8
	CALL $310($4)
	
.LABEL $label$81
	*([0] + [4]) = ($15 + [496])
	return (unreachable)
	
.LABEL $label$20
	CALL $324(($15 + [368]))
	
.LABEL $label$19
	CALL $311(($15 + [104]))
	
.LABEL $label$18
	CALL $311(($15 + [136]))
	(unreachable)
	(unreachable)
}

void .FUNC $247 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$3 = int_32(($6 - $5) >> [3])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[536870912]) ){ goto $label$3 }
	$4 = [536870911]
	$2 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$5 }
	$4 = int_32($2 >> [2])
	$4 = ( $7 ? $4 : ($4 <= $7) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $309(($4 << [3]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $324($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($3 << [3])))) = *($1)
	$6 = ($6 - $5)
	$1 = ($3 - $6)
	$4 = ($7 + ($4 << [3]))
	$7 = ($3 + [8])
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $5, $6)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $310($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $244 (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [224])
	*([0] + [4]) = $8
	$7 = [0]
	*((($8 + [184]) + [32])) = [0]
	*($8 + [192]) = $1
	*($8 + [200]) = (int_64)-1
	*($8 + [208]) = (int_64)0
	$3 = *($0)
	*($8 + [184]) = $3
	*((($8 + [24]) + [32])) = (int_64)310366523908
	*($8 + [32]) = [0]
	*($8 + [24]) = (int_64)0
	*($8 + [40]) = (int_64)0
	*($8 + [48]) = (int_64)0
	CALL eosio_assert([1], [464])
	$6 = (int_64)1212369234
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [128])
	*(($8 + [72])) = (int_64)310366523908
	*($8 + [64]) = (int_64)0
	CALL eosio_assert([1], [464])
	$6 = (int_64)1212369234
	$7 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$4 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$4 = [0]
	
.LABEL $label$6
	CALL eosio_assert($4, [128])
	*(($8 + [88])) = (int_64)1397703940
	*($8 + [80]) = (int_64)0
	CALL eosio_assert([1], [464])
	$6 = (int_64)5459781
	$7 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$4 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$4 = [0]
	
.LABEL $label$11
	CALL eosio_assert($4, [128])
	*($8 + [96]) = [0]
	CALL $91(($8 + [104]), ($8 + [184]), $3, ($8 + [24]))
	*($8 + [104]) = $1
	$1 = *($2 + [8])
	CALL eosio_assert(((int_64)$1 == (int_64)*(($8 + [168]))), [224])
	$3 = *($2)
	$6 = ((int_64)*($8 + [160]) + (int_64)$3)
	*($8 + [160]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($8 + [160]) < (int_64)4611686018427387904), [304])
	CALL $81(($8 + [184]), ($8 + [104]), *($0))
	*(($8 + [16])) = (int_64)1398362884
	*($8 + [8]) = (int_64)0
	*($8) = (int_64)0
	CALL eosio_assert([1], [464])
	$2 = ($0 + [848])
	$6 = (int_64)5462355
	$7 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$4 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$4 = [0]
	
.LABEL $label$16
	CALL eosio_assert($4, [128])
	$7 = *(($0 + [876]))
	if ( ((int_32)$7 == (int_32)*(($0 + [872]))) ){ goto $label$23 }
	$7 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$2), [64])
	if ( $7 ){ goto $label$21 }
	goto $label$22 
	
.LABEL $label$23
	$7 = CALL db_find_i64(*(($0 + [848])), *(($0 + [856])), (int_64)4154289181272571904, (int_64)4154289181272571904)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$22 }
	$7 = CALL $77($2, $7)
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$2), [64])
	goto $label$21 
	
.LABEL $label$22
	$7 = $8
	
.LABEL $label$21
	*(($5 = (($8 + [24]) + [16]))) = *(($7 + [16]))
	*(($4 = (($8 + [24]) + [8]))) = *(($7 + [8]))
	*($8 + [24]) = *($7)
	CALL eosio_assert(((int_64)$1 == (int_64)*($5)), [224])
	$6 = ((int_64)*($4) + (int_64)$3)
	*($4) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)$6 < (int_64)4611686018427387904), [304])
	CALL $80($2, ($8 + [24]), *($0))
	$4 = *($8 + [208])
	if ( ($4 == 0) ){ goto $label$24 }
	$2 = ($8 + [212])
	$7 = *($2)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$26 }
	
.LOOP $label$27:
	$7 = ($7 + [-24])
	$0 = *($7)
	*($7) = [0]
	if ( ($0 == 0) ){ goto $label$28 }
	CALL $310($0)
	
.LABEL $label$28
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$27 }
	$7 = *(($8 + [208]))
	goto $label$25 
	
.LABEL $label$26
	$7 = $4
	
.LABEL $label$25
	*($2) = $4
	CALL $310($7)
	
.LABEL $label$24
	*([0] + [4]) = ($8 + [224])
}

void .FUNC $245 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	$16 = (*([0] + [4]) - [368])
	*([0] + [4]) = $16
	*($16 + [240]) = [45]
	CALL _Z5splitRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKc(($16 + [336]), $3, ($16 + [240]))
	$4 = CALL _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji((*($16 + [336]) + [12]), [0], [10])
	$5 = ($4 & [255])
	CALL eosio_assert((($5 == 0) | (((int_32)$5 == (int_32)[5]) | (($5 + [-1]) <= [2]))), [3616])
	*($16 + [351]) = CALL _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji((*($16 + [336]) + [24]), [0], [10])
	$3 = *($16 + [336])
	$10 = *($3 + [36])
	$11 = ($10 & [1])
	if ( $11 ){ goto $label$5 }
	if ( uint_32($10 >> [1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( (*(($3 + [40])) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	if ( $11 ){ goto $label$2 }
	$3 = (($3 + [36]) + [1])
	goto $label$1 
	
.LABEL $label$3
	$3 = [1248]
	goto $label$1 
	
.LABEL $label$2
	$3 = *(($3 + [44]))
	
.LABEL $label$1
	$11 = [-1]
	
.LOOP $label$6:
	$10 = ($3 + $11)
	$6 = ($11 + [1])
	$11 = $6
	if ( *(($10 + [1])) ){ goto $label$6 }
	$7 = (CASTING uint_64)(uint_32 $6)
	$13 = (int_64)0
	$12 = (int_64)59
	$14 = (int_64)0
	
.LOOP $label$7:
	$15 = (int_64)0
	if ( ((uint_64)$13 >= (uint_64)$7) ){ goto $label$8 }
	$11 = *($3)
	if ( ((uint_32)(($11 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$11 = ($11 + [165])
	goto $label$9 
	
.LABEL $label$10
	$11 = ( ($11 + [208]) ? [0] : ((($11 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)56) >> (int_64)56)
	
.LABEL $label$8
	if ( ((uint_64)$13 > (uint_64)(int_64)11) ){ goto $label$12 }
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	goto $label$11 
	
.LABEL $label$12
	$15 = ((int_64)$15 & (int_64)15)
	
.LABEL $label$11
	$3 = ($3 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$7 }
	CALL eosio_assert(CALL $fimport$16($14), [3632])
	CALL eosio_assert(((int_64)$14 != (int_64)$1), [3664])
	CALL $275($0, ($16 + [351]), $2)
	$3 = *($16 + [336])
	if ( (((int_32)(*($16 + [340]) - $3) / (int_32)[12]) <= [5]) ){ goto $label$14 }
	$11 = *($3 + [48])
	$10 = CALL strlen([3696])
	if ( ((int_32)$10 != (int_32)( *(($3 + [52])) ? uint_32($11 >> [1]) : ($11 & [1]) )) ){ goto $label$14 }
	if ( CALL $319(($3 + [48]), [0], [-1], [3696], $10) ){ goto $label$14 }
	$13 = (int_64)0
	$12 = *($2)
	CALL __multi3(($16 + [112]), $12, (int_64)$12 >> (int_64)63), (int_64)5, (int_64)0)
	$8 = *($2 + [8])
	$15 = *(($16 + [120]))
	$12 = *($16 + [112])
	CALL eosio_assert(( (uint_64)($12 <= (int_64)4611686018427387904) ? ((int_64)$15 < (int_64)0) : (int_64)($15 == 0) ), [1408])
	CALL eosio_assert(( ((uint_64)$12 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$15 > (int_64)-1) : ((int_64)$15 == (int_64)-1) ), [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	$9 = ((int_64)$12 / (int_64)10000)
	if ( ((int_64)$12 < (int_64)10000) ){ goto $label$14 }
	$12 = (int_64)59
	$3 = [3696]
	$7 = (int_64)0
	
.LOOP $label$15:
	$15 = (int_64)0
	if ( ((uint_64)$13 > (uint_64)(int_64)11) ){ goto $label$16 }
	$11 = *($3)
	if ( ((uint_32)(($11 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$18 }
	$11 = ($11 + [165])
	goto $label$17 
	
.LABEL $label$18
	$11 = ( ($11 + [208]) ? [0] : ((($11 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$17
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($11 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$16
	$3 = ($3 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$7 = ((int_64)$15 | (int_64)$7)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$15 }
	*($16 + [328]) = $8
	*(($16 + [312])) = [0]
	*($16 + [320]) = $9
	*($16 + [304]) = (int_64)0
	$3 = CALL strlen([3712])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$13 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$21 }
	*($16 + [304]) = ($3 << [1])
	$11 = (($16 + [304]) | [1])
	if ( $3 ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	$10 = (($3 + [16]) & [-16])
	$11 = CALL $309($10)
	*($16 + [304]) = ($10 | [1])
	*($16 + [312]) = $11
	*($16 + [308]) = $3
	
.LABEL $label$20
	CALL memcpy($11, [3712], $3)
	
.LABEL $label$19
	*(($11 + $3)) = [0]
	*((($16 + [96]) + [8])) = *((($16 + [320]) + [8]))
	*($16 + [96]) = *($16 + [320])
	CALL $49($0, $7, ($16 + [96]), ($16 + [304]))
	if ( ((*($16 + [304]) & [1]) == 0) ){ goto $label$14 }
	CALL $310(*($16 + [312]))
	
.LABEL $label$14
	$13 = *($2)
	if ( ($5 == 0) ){ goto $label$23 }
	CALL eosio_assert(((int_64)$13 >= (int_64)(CASTING uint_64)(uint_32 ((int_32)$5 * (int_32)[25000]))), [3792])
	CALL eosio_assert(((float_64)(CASTING float_64)(int_64 *($2)) <= (float_64)((float_64)(CASTING float_64)(int_32 ((int_32)$5 * (int_32)[100])) * (float_64)(float_64)1e5)), [3824])
	goto $label$22 
	
.LABEL $label$23
	CALL eosio_assert(((int_64)$13 > (int_64)999), [3728])
	CALL eosio_assert(((int_64)*($2) < (int_64)1000001), [3760])
	
.LABEL $label$22
	$13 = CALL $138($0)
	*(($16 + [284])) = *(($2 + [20]))
	*(($16 + [280])) = *(($2 + [16]))
	*(($16 + [276])) = *(($2 + [12]))
	$3 = ($2 + [8])
	*(($16 + [272])) = *($3)
	*(($16 + [268])) = *(($2 + [4]))
	*($16 + [248]) = $1
	*($16 + [240]) = $13
	*($16 + [256]) = $14
	*($16 + [264]) = *($2)
	*($16 + [288]) = *($16 + [351])
	*($16 + [289]) = $4
	*($16 + [296]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$13 = *($0)
	*($16 + [360]) = ($16 + [240])
	CALL $276(($16 + [352]), ($0 + [8]), $13, ($16 + [360]))
	$12 = *($3)
	$13 = *($2)
	CALL eosio_assert(((int_64)$13 < (int_64)4611686018427387904), [1408])
	CALL eosio_assert(((int_64)$13 > (int_64)-4611686018427387904), [1440])
	*($16 + [232]) = $12
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	*($16 + [224]) = ((int_64)$13 / (int_64)1000)
	CALL $277(($16 + [208]), $0, ($16 + [240]))
	*((($16 + [80]) + [8])) = *($16 + [232])
	*($16 + [80]) = *($16 + [224])
	CALL $49($0, $14, ($16 + [80]), ($16 + [208]))
	if ( ((*($16 + [208]) & [1]) == 0) ){ goto $label$24 }
	CALL $310(*($16 + [216]))
	
.LABEL $label$24
	$13 = *($2)
	CALL __multi3(($16 + [48]), $13, (int_64)$13 >> (int_64)63), (int_64)185, (int_64)0)
	$15 = *($3)
	$13 = *((($16 + [48]) + [8]))
	$12 = *($16 + [48])
	CALL eosio_assert(( (uint_64)($12 <= (int_64)4611686018427387904) ? ((int_64)$13 < (int_64)0) : (int_64)($13 == 0) ), [1408])
	CALL eosio_assert(( ((uint_64)$12 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$13 > (int_64)-1) : ((int_64)$13 == (int_64)-1) ), [1440])
	*($16 + [200]) = $15
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	*((($16 + [64]) + [8])) = *($16 + [200])
	$13 = ((int_64)$12 / (int_64)10000)
	*($16 + [192]) = $13
	*($16 + [64]) = $13
	CALL $83($0, ($16 + [64]))
	*((($16 + [176]) + [8])) = *($3)
	*((($16 + [160]) + [8])) = [0]
	*($16 + [176]) = *($2)
	*($16 + [160]) = (int_64)0
	$3 = CALL strlen([3856])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$25 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$28 }
	*($16 + [160]) = ($3 << [1])
	$11 = (($16 + [160]) | [1])
	if ( $3 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	$10 = (($3 + [16]) & [-16])
	$11 = CALL $309($10)
	*($16 + [160]) = ($10 | [1])
	*($16 + [168]) = $11
	*($16 + [164]) = $3
	
.LABEL $label$27
	CALL memcpy($11, [3856], $3)
	
.LABEL $label$26
	*(($11 + $3)) = [0]
	*((($16 + [32]) + [8])) = *((($16 + [176]) + [8]))
	*($16 + [32]) = *($16 + [176])
	CALL $76($0, $1, ($16 + [32]), ($16 + [160]))
	if ( ((*($16 + [160]) & [1]) == 0) ){ goto $label$29 }
	CALL $310(*($16 + [168]))
	
.LABEL $label$29
	$3 = ($2 + [8])
	$13 = *($3)
	*((($16 + [144]) + [8])) = $13
	$12 = *($2)
	*((($16 + [16]) + [8])) = $13
	*($16 + [144]) = $12
	*($16 + [20]) = *($16 + [148])
	*($16 + [16]) = *($16 + [144])
	CALL $250($0, $1, ($16 + [16]))
	*(($11 = (($16 + [128]) + [8]))) = *($3)
	$13 = *($2)
	*(($16 + [12])) = *((($16 + [128]) + [12]))
	*(($16 + [8])) = *($11)
	*($16 + [128]) = $13
	*($16 + [4]) = *($16 + [132])
	*($16) = *($16 + [128])
	CALL $251($0, $1, $16)
	CALL $252($0)
	$10 = *($16 + [336])
	if ( ($10 == 0) ){ goto $label$30 }
	$3 = *($16 + [340])
	if ( ((int_32)$3 == (int_32)$10) ){ goto $label$32 }
	$11 = ([0] - $10)
	$3 = ($3 + [-12])
	
.LOOP $label$33:
	if ( ((*($3) & [1]) == 0) ){ goto $label$34 }
	CALL $310(*(($3 + [8])))
	
.LABEL $label$34
	$3 = ($3 + [-12])
	if ( ((int_32)($3 + $11) != (int_32)[-12]) ){ goto $label$33 }
	$3 = *($16 + [336])
	goto $label$31 
	
.LABEL $label$32
	$3 = $10
	
.LABEL $label$31
	*($16 + [340]) = $10
	CALL $310($3)
	
.LABEL $label$30
	*([0] + [4]) = ($16 + [368])
	return (unreachable)
	
.LABEL $label$25
	CALL $311(($16 + [160]))
	
.LABEL $label$13
	CALL $311(($16 + [304]))
	(unreachable)
}

void .FUNC $242 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [288])
	*([0] + [4]) = $12
	*($12 + [280]) = $3
	$11 = [0]
	*((($12 + [240]) + [32])) = [0]
	*($12 + [248]) = $1
	*($12 + [256]) = (int_64)-1
	*($12 + [264]) = (int_64)0
	$4 = *($0)
	*($12 + [240]) = $4
	*((($12 + [80]) + [32])) = (int_64)310366523908
	*($12 + [88]) = [0]
	*($12 + [80]) = (int_64)0
	*($12 + [96]) = (int_64)0
	*($12 + [104]) = (int_64)0
	CALL eosio_assert([1], [464])
	$10 = (int_64)1212369234
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$9 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	
.LABEL $label$1
	CALL eosio_assert($9, [128])
	*(($12 + [128])) = (int_64)310366523908
	*($12 + [120]) = (int_64)0
	CALL eosio_assert([1], [464])
	$10 = (int_64)1212369234
	$11 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$9 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$9 = [0]
	
.LABEL $label$6
	CALL eosio_assert($9, [128])
	*(($12 + [144])) = (int_64)1397703940
	*($12 + [136]) = (int_64)0
	CALL eosio_assert([1], [464])
	$10 = (int_64)5459781
	$11 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$9 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$9 = [0]
	
.LABEL $label$11
	CALL eosio_assert($9, [128])
	*($12 + [152]) = [0]
	CALL $91(($12 + [160]), ($12 + [240]), $4, ($12 + [80]))
	CALL eosio_assert(((int_32)*($12 + [168]) == (int_32)[2]), [4144])
	CALL eosio_assert(((int_64)$3 == (int_64)1), [4176])
	$10 = *($12 + [176])
	$5 = ( [18] ? ( [12] ? (CASTING uint_32)(uint_64 $10) : ((int_64)$10 == (int_64)56) ) : ((int_64)$10 == (int_64)40) )
	$10 = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	$6 = *(($0 + [912]))
	$8 = *(($0 + [916]))
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$16 }
	$11 = ($8 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$17:
	if ( ((int_64)*(*($11)) == (int_64)$10) ){ goto $label$16 }
	$8 = $11
	$9 = ($11 + [-24])
	$11 = $9
	if ( ((int_32)($9 + $7) != (int_32)[-24]) ){ goto $label$17 }
	
.LABEL $label$16
	$7 = ($0 + [888])
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$19 }
	$8 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*(($8 + [52])) == (int_32)$7), [64])
	goto $label$18 
	
.LABEL $label$19
	$8 = [0]
	$11 = CALL db_find_i64(*(($0 + [888])), *(($0 + [896])), (int_64)-7950542192169189376, $10)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$18 }
	$8 = CALL $204($7, $11)
	CALL eosio_assert(((int_32)*($8 + [52]) == (int_32)$7), [64])
	
.LABEL $label$18
	CALL eosio_assert(((int_64)*($8 + [40]) == (int_64)$1), [4208])
	CALL eosio_assert([1], [464])
	$10 = (int_64)5459781
	$11 = [0]
	
.LOOP $label$22:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$21 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$23 }
	
.LOOP $label$24:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$21 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$24 }
	
.LABEL $label$23
	$9 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	$9 = [0]
	
.LABEL $label$20
	CALL eosio_assert($9, [128])
	$10 = *($12 + [280])
	CALL __multi3($12, $10, (int_64)$10 >> (int_64)63), (int_64)20000, (int_64)0)
	$10 = *(($12 + [8]))
	$3 = *($12)
	CALL eosio_assert(( (uint_64)($3 <= (int_64)4611686018427387904) ? ((int_64)$10 < (int_64)0) : (int_64)($10 == 0) ), [1408])
	CALL eosio_assert(( ((uint_64)$3 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$10 > (int_64)-1) : ((int_64)$10 == (int_64)-1) ), [1440])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)1397703940), [160])
	CALL eosio_assert(((int_64)$3 == (int_64)*($2)), [4256])
	*($12 + [84]) = $2
	*($12 + [80]) = ($12 + [280])
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [848])
	CALL $279($7, $8, (int_64)0, ($12 + [80]))
	*((($12 + [160]) + [8])) = [0]
	CALL $81(($12 + [240]), ($12 + [160]), *($0))
	*(($11 = (($12 + [64]) + [8]))) = *($2 + [8])
	$10 = *($2)
	*((($12 + [32]) + [12])) = *((($12 + [64]) + [12]))
	*((($12 + [32]) + [8])) = *($11)
	*($12 + [64]) = $10
	*($12 + [36]) = *($12 + [68])
	*($12 + [32]) = *($12 + [64])
	CALL $83($0, ($12 + [32]))
	CALL $280($0)
	*(($11 = (($12 + [48]) + [8]))) = *($2 + [8])
	$10 = *($2)
	*((($12 + [16]) + [12])) = *((($12 + [48]) + [12]))
	*((($12 + [16]) + [8])) = *($11)
	*($12 + [48]) = $10
	*($12 + [20]) = *($12 + [52])
	*($12 + [16]) = *($12 + [48])
	CALL $190($0, $1, ($12 + [16]))
	CALL $281($0, $1, ($5 & [255]))
	$8 = *($12 + [264])
	if ( ($8 == 0) ){ goto $label$25 }
	$0 = ($12 + [268])
	$11 = *($0)
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$27 }
	
.LOOP $label$28:
	$11 = ($11 + [-24])
	$9 = *($11)
	*($11) = [0]
	if ( ($9 == 0) ){ goto $label$29 }
	CALL $310($9)
	
.LABEL $label$29
	if ( ((int_32)$8 != (int_32)$11) ){ goto $label$28 }
	$11 = *(($12 + [264]))
	goto $label$26 
	
.LABEL $label$27
	$11 = $8
	
.LABEL $label$26
	*($0) = $8
	CALL $310($11)
	
.LABEL $label$25
	*([0] + [4]) = ($12 + [288])
}

void .FUNC $243 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [416])
	*([0] + [4]) = $13
	$7 = [0]
	*((($13 + [360]) + [32])) = [0]
	*($13 + [368]) = $1
	*($13 + [376]) = (int_64)-1
	*($13 + [384]) = (int_64)0
	$11 = *($0)
	*($13 + [360]) = $11
	*((($13 + [128]) + [32])) = (int_64)310366523908
	*($13 + [136]) = [0]
	*($13 + [128]) = (int_64)0
	*($13 + [144]) = (int_64)0
	*($13 + [152]) = (int_64)0
	CALL eosio_assert([1], [464])
	$10 = (int_64)1212369234
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [128])
	*(($13 + [176])) = (int_64)310366523908
	*($13 + [168]) = (int_64)0
	CALL eosio_assert([1], [464])
	$10 = (int_64)1212369234
	$7 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [128])
	*(($13 + [192])) = (int_64)1397703940
	*($13 + [184]) = (int_64)0
	CALL eosio_assert([1], [464])
	$10 = (int_64)5459781
	$7 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [128])
	*($13 + [200]) = [0]
	CALL $91(($13 + [280]), ($13 + [360]), $11, ($13 + [128]))
	CALL eosio_assert(((int_32)*($13 + [288]) == (int_32)[4]), [4048])
	$12 = *($2)
	CALL eosio_assert(((int_64)$12 < (int_64)5000001), [4080])
	$10 = (int_64)0
	$11 = (int_64)59
	$7 = [1664]
	$8 = (int_64)0
	
.LOOP $label$16:
	$9 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$17 }
	$3 = *($7)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$3 = ($3 + [165])
	goto $label$18 
	
.LABEL $label$19
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$17
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$16 }
	CALL memset(($13 + [128]), [0], [152])
	$7 = CALL $120(($13 + [128]))
	$3 = ($0 + [128])
	$5 = *(($0 + [156]))
	if ( ((int_32)$5 == (int_32)*(($0 + [152]))) ){ goto $label$22 }
	$5 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [152]) == (int_32)$3), [64])
	if ( $5 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	$5 = CALL db_find_i64(*($3), *(($0 + [136])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$20 }
	$5 = CALL $121($3, $5)
	CALL eosio_assert(((int_32)*($5 + [152]) == (int_32)$3), [64])
	
.LABEL $label$21
	$7 = $5
	
.LABEL $label$20
	$10 = *(($7 + [128]))
	$11 = *($7 + [120])
	$9 = *($0)
	*(($13 + [160])) = [0]
	*($13 + [136]) = $9
	*($13 + [128]) = $8
	*($13 + [144]) = (int_64)-1
	*($13 + [152]) = (int_64)0
	$7 = CALL $151(($13 + [128]), (int_64)1212369234, [1584])
	$9 = *($7 + [8])
	$8 = *($7)
	$5 = *($13 + [152])
	if ( ($5 == 0) ){ goto $label$23 }
	$6 = ($13 + [156])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$25 }
	
.LOOP $label$26:
	$7 = ($7 + [-24])
	$3 = *($7)
	*($7) = [0]
	if ( ($3 == 0) ){ goto $label$27 }
	CALL $310($3)
	
.LABEL $label$27
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$26 }
	$7 = *(($13 + [152]))
	goto $label$24 
	
.LABEL $label$25
	$7 = $5
	
.LABEL $label$24
	*($6) = $5
	CALL $310($7)
	
.LABEL $label$23
	CALL eosio_assert(((int_64)$10 == (int_64)$9), [1280])
	$10 = (int_64)
	CALL eosio_assert(((int_64)$10($8 - $11)) > (int_64)-4611686018427387904), [1328])
	CALL eosio_assert(((int_64)$10 < (int_64)4611686018427387904), [1360])
	$11 = (int_64)1680
	if ( ((int_64)$10 > (int_64)6860000000000) ){ goto $label$28 }
	$11 = (int_64)1288
	if ( ((int_64)$10 > (int_64)6510000000000) ){ goto $label$28 }
	$11 = (int_64)888
	if ( ((int_64)$10 > (int_64)5810000000000) ){ goto $label$28 }
	$11 = (int_64)560
	if ( ((int_64)$10 > (int_64)4760000000000) ){ goto $label$28 }
	$11 = (int_64)340
	if ( ((int_64)$10 > (int_64)3710000000000) ){ goto $label$28 }
	$11 = (int_64)180
	if ( ((int_64)$10 > (int_64)2660000000000) ){ goto $label$28 }
	$11 = ( (int_64)88 ? (int_64)44 : ((int_64)$10 > (int_64)1610000000000) )
	
.LABEL $label$28
	$4 = ((int_64)$12 * (int_64)$11)
	CALL eosio_assert((uint_64)(((int_64)$4 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [464])
	$10 = (int_64)1212369234
	$7 = [0]
	
.LOOP $label$31:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$30 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$32 }
	
.LOOP $label$33:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$30 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$33 }
	
.LABEL $label$32
	$3 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$30
	$3 = [0]
	
.LABEL $label$29
	CALL eosio_assert($3, [128])
	$12 = *($0)
	$10 = (int_64)0
	$9 = (int_64)59
	$7 = [528]
	$8 = (int_64)0
	
.LOOP $label$34:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$39 }
	$3 = *($7)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$38 }
	$3 = ($3 + [165])
	goto $label$37 
	
.LABEL $label$39
	$11 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$38
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$37
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$36
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$35
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$8 = ((int_64)$11 | (int_64)$8)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$34 }
	*($13 + [80]) = $8
	*($13 + [72]) = $12
	$10 = (int_64)0
	$11 = (int_64)59
	$7 = [1664]
	$8 = (int_64)0
	
.LOOP $label$40:
	$9 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$41 }
	$3 = *($7)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$43 }
	$3 = ($3 + [165])
	goto $label$42 
	
.LABEL $label$43
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$42
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$41
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$40 }
	$10 = (int_64)0
	$9 = (int_64)59
	$7 = [32]
	$12 = (int_64)0
	
.LOOP $label$44:
	if ( ((uint_64)$10 > (uint_64)(int_64)7) ){ goto $label$49 }
	$3 = *($7)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$48 }
	$3 = ($3 + [165])
	goto $label$47 
	
.LABEL $label$49
	$11 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$48
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$47
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$46
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$45
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$12 = ((int_64)$11 | (int_64)$12)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$44 }
	*(($13 + [64])) = [0]
	*($13 + [56]) = (int_64)0
	$7 = CALL strlen([3104])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$51 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$54 }
	*($13 + [56]) = ($7 << [1])
	$3 = (($13 + [56]) | [1])
	if ( $7 ){ goto $label$53 }
	goto $label$52 
	
.LABEL $label$54
	$5 = (($7 + [16]) & [-16])
	$3 = CALL $309($5)
	*($13 + [56]) = ($5 | [1])
	*($13 + [64]) = $3
	*($13 + [60]) = $7
	
.LABEL $label$53
	CALL memcpy($3, [3104], $7)
	
.LABEL $label$52
	*(($3 + $7)) = [0]
	*(($13 + [152])) = (int_64)310366523908
	*(($13 + [164])) = *($13 + [60])
	*($13 + [136]) = $1
	$7 = ($13 + [64])
	*(($13 + [168])) = *($7)
	*($13 + [128]) = *($0)
	*($13 + [144]) = $4
	*($13 + [160]) = *($13 + [56])
	*($13 + [56]) = [0]
	*($13 + [60]) = [0]
	*($7) = [0]
	$7 = CALL $50(($13 + [88]), ($13 + [72]), $8, $12, ($13 + [128]))
	CALL $51(($13 + [400]), $7)
	$3 = *($13 + [400])
	CALL send_inline($3, (*($13 + [404]) - $3))
	$3 = *($13 + [400])
	if ( ($3 == 0) ){ goto $label$55 }
	*($13 + [404]) = $3
	CALL $310($3)
	
.LABEL $label$55
	$3 = *($7 + [28])
	if ( ($3 == 0) ){ goto $label$56 }
	*(($7 + [32])) = $3
	CALL $310($3)
	
.LABEL $label$56
	$3 = *($7 + [16])
	if ( ($3 == 0) ){ goto $label$57 }
	*(($7 + [20])) = $3
	CALL $310($3)
	
.LABEL $label$57
	if ( ((*(($13 + [160])) & [1]) == 0) ){ goto $label$58 }
	CALL $310(*(($13 + [168])))
	
.LABEL $label$58
	if ( ((*($13 + [56]) & [1]) == 0) ){ goto $label$59 }
	CALL $310(*(($13 + [64])))
	
.LABEL $label$59
	*(($13 + [288])) = [0]
	CALL $81(($13 + [360]), ($13 + [280]), *($0))
	$10 = (int_64)0
	$11 = (int_64)59
	$7 = [1248]
	$8 = (int_64)0
	
.LOOP $label$60:
	$9 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$61 }
	$3 = *($7)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$63 }
	$3 = ($3 + [165])
	goto $label$62 
	
.LABEL $label$63
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$62
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$61
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$60 }
	*((($13 + [40]) + [8])) = *(($2 + [8]))
	*((($13 + [24]) + [8])) = [0]
	*($13 + [40]) = *($2)
	*($13 + [24]) = (int_64)0
	$7 = CALL strlen([4112])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$50 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$66 }
	*($13 + [24]) = ($7 << [1])
	$3 = (($13 + [24]) | [1])
	if ( $7 ){ goto $label$65 }
	goto $label$64 
	
.LABEL $label$66
	$5 = (($7 + [16]) & [-16])
	$3 = CALL $309($5)
	*($13 + [24]) = ($5 | [1])
	*($13 + [32]) = $3
	*($13 + [28]) = $7
	
.LABEL $label$65
	CALL memcpy($3, [4112], $7)
	
.LABEL $label$64
	*(($3 + $7)) = [0]
	*((($13 + [8]) + [8])) = *((($13 + [40]) + [8]))
	*($13 + [8]) = *($13 + [40])
	CALL $49($0, $8, ($13 + [8]), ($13 + [24]))
	if ( ((*($13 + [24]) & [1]) == 0) ){ goto $label$67 }
	CALL $310(*($13 + [32]))
	
.LABEL $label$67
	$5 = *($13 + [384])
	if ( ($5 == 0) ){ goto $label$68 }
	$0 = ($13 + [388])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$70 }
	
.LOOP $label$71:
	$7 = ($7 + [-24])
	$3 = *($7)
	*($7) = [0]
	if ( ($3 == 0) ){ goto $label$72 }
	CALL $310($3)
	
.LABEL $label$72
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$71 }
	$7 = *(($13 + [384]))
	goto $label$69 
	
.LABEL $label$70
	$7 = $5
	
.LABEL $label$69
	*($0) = $5
	CALL $310($7)
	
.LABEL $label$68
	*([0] + [4]) = ($13 + [416])
	return (unreachable)
	
.LABEL $label$51
	CALL $311(($13 + [56]))
	
.LABEL $label$50
	CALL $311(($13 + [24]))
	(unreachable)
}

void .FUNC $240 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [608])
	*([0] + [4]) = $9
	$5 = [0]
	*((($9 + [568]) + [32])) = [0]
	*($9 + [576]) = $1
	*($9 + [584]) = (int_64)-1
	*($9 + [592]) = (int_64)0
	$8 = *($0)
	*($9 + [568]) = $8
	*((($9 + [232]) + [32])) = (int_64)310366523908
	*($9 + [240]) = [0]
	*($9 + [232]) = (int_64)0
	*($9 + [248]) = (int_64)0
	*($9 + [256]) = (int_64)0
	CALL eosio_assert([1], [464])
	$6 = (int_64)1212369234
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [128])
	*(($9 + [280])) = (int_64)310366523908
	*($9 + [272]) = (int_64)0
	CALL eosio_assert([1], [464])
	$6 = (int_64)1212369234
	$5 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [128])
	*(($9 + [296])) = (int_64)1397703940
	*($9 + [288]) = (int_64)0
	CALL eosio_assert([1], [464])
	$6 = (int_64)5459781
	$5 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [128])
	*($9 + [304]) = [0]
	CALL $91(($9 + [488]), ($9 + [568]), $8, ($9 + [232]))
	CALL eosio_assert(((int_32)*($9 + [496]) == (int_32)[3]), [4384])
	CALL $294($0)
	CALL memset(($9 + [232]), [0], [64])
	$3 = CALL $154(($9 + [232]))
	$5 = ($0 + [248])
	$4 = *(($0 + [276]))
	if ( ((int_32)$4 == (int_32)*(($0 + [272]))) ){ goto $label$18 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [64]) == (int_32)$5), [64])
	if ( $4 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$4 = CALL db_find_i64(*($5), *(($0 + [256])), (int_64)3932090329724878848, (int_64)3932090329724878848)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$16 }
	$4 = CALL $155($5, $4)
	CALL eosio_assert(((int_32)*($4 + [64]) == (int_32)$5), [64])
	
.LABEL $label$17
	$3 = $4
	
.LABEL $label$16
	CALL memcpy(($9 + [424]), $3, [64])
	$6 = *($9 + [464])
	CALL __multi3(($9 + [32]), $6, (int_64)$6 >> (int_64)63), (int_64)11, (int_64)0)
	$3 = ($9 + [472])
	$7 = *($3)
	$6 = *((($9 + [32]) + [8]))
	$8 = *($9 + [32])
	CALL eosio_assert(( (uint_64)($8 <= (int_64)4611686018427387904) ? ((int_64)$6 < (int_64)0) : (int_64)($6 == 0) ), [1408])
	CALL eosio_assert(( ((uint_64)$8 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$6 > (int_64)-1) : ((int_64)$6 == (int_64)-1) ), [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	CALL eosio_assert(((int_64)$7 == (int_64)*($2 + [8])), [160])
	CALL eosio_assert(((int_64)*($2) >= (int_64)((int_64)$8 / (int_64)10)), [4416])
	CALL eosio_assert(*($9 + [480]), [4464])
	*($3) = *($2 + [8])
	*($9 + [432]) = $1
	*($9 + [464]) = *($2)
	*($9 + [440]) = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [7200])
	CALL $173($5, ($9 + [424]), *($0))
	*((($9 + [488]) + [8])) = [0]
	CALL $81(($9 + [568]), ($9 + [488]), *($0))
	*(($9 + [416])) = [0]
	$6 = *($0)
	*($9 + [384]) = $6
	*($9 + [392]) = $1
	*($9 + [400]) = (int_64)-1
	*($9 + [408]) = (int_64)0
	$5 = CALL db_find_i64($6, $1, (int_64)3932090330173844992, *($9 + [424]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$20 }
	$5 = CALL $183(($9 + [384]), $5)
	CALL eosio_assert(((int_32)*($5 + [40]) == (int_32)($9 + [384])), [64])
	*($9 + [232]) = $2
	CALL eosio_assert([1], [848])
	CALL $295(($9 + [384]), $5, (int_64)0, ($9 + [232]))
	goto $label$19 
	
.LABEL $label$20
	$6 = *($0)
	*($9 + [236]) = $2
	*($9 + [232]) = ($9 + [424])
	CALL $296(($9 + [80]), ($9 + [384]), $6, ($9 + [232]))
	
.LABEL $label$19
	CALL memset(($9 + [80]), [0], [152])
	$3 = CALL $120(($9 + [80]))
	$5 = ($0 + [128])
	$4 = *(($0 + [156]))
	if ( ((int_32)$4 == (int_32)*(($0 + [152]))) ){ goto $label$23 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [152]) == (int_32)$5), [64])
	if ( $4 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	$4 = CALL db_find_i64(*($5), *(($0 + [136])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$21 }
	$4 = CALL $121($5, $4)
	CALL eosio_assert(((int_32)*($4 + [152]) == (int_32)$5), [64])
	
.LABEL $label$22
	$3 = $4
	
.LABEL $label$21
	CALL memcpy(($9 + [232]), $3, [152])
	$6 = (int_64)0
	$1 = *($2)
	CALL __multi3(($9 + [16]), $1, (int_64)$1 >> (int_64)63), (int_64)6, (int_64)0)
	$7 = *(($2 + [8]))
	$1 = *((($9 + [16]) + [8]))
	$8 = *($9 + [16])
	CALL eosio_assert(( (uint_64)($8 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ), [1408])
	CALL eosio_assert(( ((uint_64)$8 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ), [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	CALL eosio_assert(((int_64)$7 == (int_64)*(($9 + [360]))), [224])
	$1 = ((int_64)*($9 + [352]) + (int_64)((int_64)$8 / (int_64)10))
	*($9 + [352]) = $1
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($9 + [352]) < (int_64)4611686018427387904), [304])
	CALL $122($5, ($9 + [232]), *($0))
	$1 = (int_64)59
	$5 = [2608]
	$7 = (int_64)0
	
.LOOP $label$24:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$25 }
	$3 = *($5)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$3 = ($3 + [165])
	goto $label$26 
	
.LABEL $label$27
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$25
	$5 = ($5 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$1 = ((int_64)$1 + (int_64)-5)
	if ( ((int_64)$1 != (int_64)-6) ){ goto $label$24 }
	$8 = *(($2 + [8]))
	$6 = ((int_64)((int_64)$6 >> (int_64)63) << (int_64)2) | (int_64)(uint_64)$6 >> (uint_64)(int_64)62
	$6 = *($2)
	$1 = ((int_64)$6 << (int_64)2)
	CALL eosio_assert(( (uint_64)($1 <= (int_64)4611686018427387904) ? ((int_64)$6)) < (int_64)0) : (int_64)($6 == 0) ), [1408])
	CALL eosio_assert(( ((uint_64)$1 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$6 > (int_64)-1) : ((int_64)$6 == (int_64)-1) ), [1440])
	*($9 + [72]) = $8
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	*((($9 + [48]) + [8])) = [0]
	*($9 + [64]) = ((int_64)$1 / (int_64)10)
	*($9 + [48]) = (int_64)0
	$5 = CALL strlen([2624])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$28 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$31 }
	*($9 + [48]) = ($5 << [1])
	$3 = (($9 + [48]) | [1])
	if ( $5 ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$31
	$2 = (($5 + [16]) & [-16])
	$3 = CALL $309($2)
	*($9 + [48]) = ($2 | [1])
	*($9 + [56]) = $3
	*($9 + [52]) = $5
	
.LABEL $label$30
	CALL memcpy($3, [2624], $5)
	
.LABEL $label$29
	*(($3 + $5)) = [0]
	*(($9 + [8])) = *((($9 + [64]) + [8]))
	*($9) = *($9 + [64])
	CALL $182($0, $7, $9, ($9 + [48]))
	if ( ((*($9 + [48]) & [1]) == 0) ){ goto $label$32 }
	CALL $310(*($9 + [56]))
	
.LABEL $label$32
	$0 = *($9 + [408])
	if ( ($0 == 0) ){ goto $label$33 }
	$2 = ($9 + [412])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$35 }
	
.LOOP $label$36:
	$5 = ($5 + [-24])
	$3 = *($5)
	*($5) = [0]
	if ( ($3 == 0) ){ goto $label$37 }
	CALL $310($3)
	
.LABEL $label$37
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$36 }
	$5 = *(($9 + [408]))
	goto $label$34 
	
.LABEL $label$35
	$5 = $0
	
.LABEL $label$34
	*($2) = $0
	CALL $310($5)
	
.LABEL $label$33
	$0 = *($9 + [592])
	if ( ($0 == 0) ){ goto $label$38 }
	$2 = ($9 + [596])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$40 }
	
.LOOP $label$41:
	$5 = ($5 + [-24])
	$3 = *($5)
	*($5) = [0]
	if ( ($3 == 0) ){ goto $label$42 }
	CALL $310($3)
	
.LABEL $label$42
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$41 }
	$5 = *(($9 + [592]))
	goto $label$39 
	
.LABEL $label$40
	$5 = $0
	
.LABEL $label$39
	*($2) = $0
	CALL $310($5)
	
.LABEL $label$38
	*([0] + [4]) = ($9 + [608])
	return (unreachable)
	
.LABEL $label$28
	CALL $311(($9 + [48]))
}

int_32 .FUNC $62 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)0
	*(($2 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [464])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [128])
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [464])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [128])
	return $0
}

void .FUNC $84 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [576])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [624])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [688])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	$6 = *($4 + [8])
	if ( ($6 == 0) ){ goto $label$7 }
	*(($4 + [12])) = $6
	CALL $310($6)
	
.LABEL $label$7
	CALL $310($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	$6 = *($4 + [8])
	if ( ($6 == 0) ){ goto $label$10 }
	*(($4 + [12])) = $6
	CALL $310($6)
	
.LABEL $label$10
	CALL $310($4)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [24]))
}

void .FUNC $199 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [112])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [60]) == (int_32)$0), [960])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1008])
	$4 = *($1)
	CALL $200($3, $1)
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1072])
	*($5 + [72]) = ($5 + [60])
	*($5 + [68]) = $5
	*($5 + [64]) = $5
	*($5 + [80]) = ($5 + [64])
	*($5 + [92]) = ($1 + [8])
	*($5 + [88]) = $1
	*($5 + [96]) = ($1 + [24])
	*($5 + [100]) = ($1 + [40])
	*($5 + [104]) = ($1 + [56])
	CALL $193(($5 + [88]), ($5 + [80]))
	CALL db_update_i64(*($1 + [64]), $2, $5, [60])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [112])
}

void .FUNC $83 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [448])
	*([0] + [4]) = $11
	CALL memset(($11 + [144]), [0], [152])
	$4 = CALL $120(($11 + [144]))
	$5 = ($0 + [128])
	$10 = *(($0 + [156]))
	if ( ((int_32)$10 == (int_32)*(($0 + [152]))) ){ goto $label$3 }
	$10 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [152]) == (int_32)$5), [64])
	if ( $10 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$10 = CALL db_find_i64(*($5), *(($0 + [136])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$1 }
	$10 = CALL $121($5, $10)
	CALL eosio_assert(((int_32)*($10 + [152]) == (int_32)$5), [64])
	
.LABEL $label$2
	$4 = $10
	
.LABEL $label$1
	CALL memcpy(($11 + [296]), $4, [152])
	$7 = (int_64)0
	$2 = *($1)
	CALL __multi3(($11 + [56]), $2, (int_64)$2 >> (int_64)63), (int_64)20, (int_64)0)
	$3 = *($1 + [8])
	$6 = *(($11 + [64]))
	$9 = *($11 + [56])
	$4 = ( (uint_64)($9 <= (int_64)4611686018427387904) ? ((int_64)$6 < (int_64)0) : (int_64)($6 == 0) )
	CALL eosio_assert($4, [1408])
	$10 = ( ((uint_64)$9 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$6 > (int_64)-1) : ((int_64)$6 == (int_64)-1) )
	CALL eosio_assert($10, [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	CALL eosio_assert(((int_64)$3 == (int_64)*(($11 + [344]))), [224])
	$6 = ((int_64)$9 / (int_64)100)
	$9 = ((int_64)*($11 + [336]) + (int_64)$6)
	*($11 + [336]) = $9
	CALL eosio_assert(((int_64)$9 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($11 + [336]) < (int_64)4611686018427387904), [304])
	CALL eosio_assert($4, [1408])
	CALL eosio_assert($10, [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	CALL eosio_assert(((int_64)$3 == (int_64)*(($11 + [328]))), [224])
	$6 = ((int_64)*($11 + [320]) + (int_64)$6)
	*($11 + [320]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($11 + [320]) < (int_64)4611686018427387904), [304])
	CALL $122($5, ($11 + [296]), *($0))
	$6 = (int_64)59
	$5 = [1552]
	$8 = (int_64)0
	
.LOOP $label$4:
	$9 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$5 }
	$4 = *($5)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$4 = ($4 + [165])
	goto $label$6 
	
.LABEL $label$7
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$5
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$4 }
	CALL __multi3(($11 + [40]), $2, (int_64)$2 >> (int_64)63), (int_64)50, (int_64)0)
	$7 = *((($11 + [40]) + [8]))
	$6 = *($11 + [40])
	CALL eosio_assert(( (uint_64)($6 <= (int_64)4611686018427387904) ? ((int_64)$7 < (int_64)0) : (int_64)($7 == 0) ), [1408])
	CALL eosio_assert(( ((uint_64)$6 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$7 > (int_64)-1) : ((int_64)$7 == (int_64)-1) ), [1440])
	*($11 + [136]) = $3
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	*((($11 + [112]) + [8])) = [0]
	*($11 + [128]) = ((int_64)$6 / (int_64)100)
	*($11 + [112]) = (int_64)0
	$4 = CALL strlen([1568])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$8 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$11 }
	*($11 + [112]) = ($4 << [1])
	$10 = (($11 + [112]) | [1])
	if ( $4 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$5 = (($4 + [16]) & [-16])
	$10 = CALL $309($5)
	*($11 + [112]) = ($5 | [1])
	*($11 + [120]) = $10
	*($11 + [116]) = $4
	
.LABEL $label$10
	CALL memcpy($10, [1568], $4)
	
.LABEL $label$9
	$5 = [0]
	*(($10 + $4)) = [0]
	*((($11 + [24]) + [8])) = *((($11 + [128]) + [8]))
	*($11 + [24]) = *($11 + [128])
	CALL $49($0, $8, ($11 + [24]), ($11 + [112]))
	if ( ((*($11 + [112]) & [1]) == 0) ){ goto $label$12 }
	CALL $310(*($11 + [120]))
	
.LABEL $label$12
	CALL memset(($11 + [72]), [0], [40])
	*((($11 + [72]) + [24])) = (int_64)1398362884
	*($11 + [88]) = (int_64)0
	CALL eosio_assert([1], [464])
	$10 = ($0 + [768])
	$7 = (int_64)5462355
	
.LOOP $label$14:
	$4 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$16 }
	
.LABEL $label$15
	$4 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$14 }
	
.LABEL $label$13
	CALL eosio_assert($4, [128])
	$5 = *(($0 + [796]))
	if ( ((int_32)$5 == (int_32)*(($0 + [792]))) ){ goto $label$18 }
	$5 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [40]) == (int_32)$10), [64])
	if ( $5 ){ goto $label$17 }
	$5 = ($11 + [72])
	goto $label$17 
	
.LABEL $label$18
	$5 = CALL db_find_i64(*(($0 + [768])), *(($0 + [776])), (int_64)-5069075955596378112, (int_64)-5069075955596378112)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$19 }
	$5 = CALL $123($10, $5)
	CALL eosio_assert(((int_32)*($5 + [40]) == (int_32)$10), [64])
	goto $label$17 
	
.LABEL $label$19
	$5 = ($11 + [72])
	
.LABEL $label$17
	CALL memcpy(($11 + [144]), $5, [40])
	$7 = *($1)
	CALL __multi3(($11 + [8]), $7, (int_64)$7 >> (int_64)63), (int_64)10, (int_64)0)
	$9 = *(($1 + [8]))
	$7 = *((($11 + [8]) + [8]))
	$6 = *($11 + [8])
	CALL eosio_assert(( (uint_64)($6 <= (int_64)4611686018427387904) ? ((int_64)$7 < (int_64)0) : (int_64)($7 == 0) ), [1408])
	CALL eosio_assert(( ((uint_64)$6 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$7 > (int_64)-1) : ((int_64)$7 == (int_64)-1) ), [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	CALL eosio_assert(((int_64)$9 == (int_64)*(($11 + [168]))), [224])
	$7 = ((int_64)*($11 + [160]) + (int_64)((int_64)$6 / (int_64)100))
	*($11 + [160]) = $7
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)$7 < (int_64)4611686018427387904), [304])
	CALL $124($10, ($11 + [144]), *($0))
	*([0] + [4]) = ($11 + [448])
	return (unreachable)
	
.LABEL $label$8
	CALL $311(($11 + [112]))
}

void .FUNC $82 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [80])
	*([0] + [4]) = $11
	$4 = *($0)
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [528]
	$9 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$6 }
	$5 = *($6)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$5 = ($5 + [165])
	goto $label$4 
	
.LABEL $label$6
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	*($11 + [72]) = $9
	*($11 + [64]) = $4
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [544]
	$9 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$8 > (uint_64)(int_64)10) ){ goto $label$12 }
	$5 = *($6)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$5 = ($5 + [165])
	goto $label$10 
	
.LABEL $label$12
	$10 = (int_64)0
	if ( ((int_64)$8 == (int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$8
	$6 = ($6 + [1])
	$7 = ((int_64)$7 + (int_64)-5)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)1)
	if ( ((int_64)$8 != (int_64)13) ){ goto $label$7 }
	*($11 + [56]) = $9
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [32]
	$9 = (int_64)0
	
.LOOP $label$13:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$18 }
	$5 = *($6)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$5 = ($5 + [165])
	goto $label$16 
	
.LABEL $label$18
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$14
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$13 }
	*($11 + [48]) = $9
	*(($11 + [28])) = *(($2 + [12]))
	*(($11 + [24])) = *(($2 + [8]))
	*(($11 + [20])) = *(($2 + [4]))
	*($11 + [8]) = $1
	*($11) = $4
	*($11 + [16]) = *($2)
	CALL $325(($11 + [32]), $3)
	CALL $136($0, ($11 + [64]), ($11 + [56]), ($11 + [48]), $11)
	if ( ((*($11 + [32]) & [1]) == 0) ){ goto $label$19 }
	CALL $310(*(($11 + [40])))
	
.LABEL $label$19
	*([0] + [4]) = ($11 + [80])
}

void .FUNC $149 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$2 = *($0)
	$3 = *(*($0 + [4]))
	*($1) = *($3)
	*(($4 = ($1 + [16]))) = *(($3 + [16]))
	*(($5 = ($1 + [8]))) = *(($3 + [8]))
	CALL eosio_assert([1], [560])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy(($6 | [8]), $5, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy(($6 + [16]), $4, [8])
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)4154289181272571904, *(*($0 + [8])), (int_64)4154289181272571904, $6, [24])
	if ( ((uint_64)*($2 + [16]) > (uint_64)(int_64)4154289181272571904) ){ goto $label$1 }
	*(($2 + [16])) = (int_64)4154289181272571905
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $81 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [80]) == (int_32)$0), [64])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-3020371635640205312, (int_64)-3020371635640205312)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $92($0, $3)
	CALL eosio_assert(((int_32)*($3 + [80]) == (int_32)$0), [64])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [848])
	CALL $145($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $146($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $145 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [128])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [80]) == (int_32)$0), [960])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1008])
	CALL memcpy($1, *($3), [73])
	CALL eosio_assert([1], [1072])
	*($4 + [80]) = ($4 + [66])
	*($4 + [76]) = $4
	*($4 + [72]) = $4
	*($4 + [88]) = ($4 + [72])
	*($4 + [100]) = ($1 + [8])
	*($4 + [96]) = $1
	*($4 + [104]) = ($1 + [16])
	*($4 + [108]) = ($1 + [24])
	*($4 + [112]) = ($1 + [40])
	*($4 + [116]) = ($1 + [56])
	*($4 + [120]) = ($1 + [72])
	CALL $95(($4 + [96]), ($4 + [88]))
	CALL db_update_i64(*($1 + [84]), $2, $4, [66])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-3020371635640205312) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)-3020371635640205311
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [128])
}

void .FUNC $64 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [40]) == (int_32)$0), [64])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-9026050048739246080, (int_64)-9026050048739246080)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $63($0, $3)
	CALL eosio_assert(((int_32)*($3 + [40]) == (int_32)$0), [64])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [848])
	CALL $65($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $66($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $147 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [960])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1008])
	$3 = *($3)
	*($1) = *($3)
	*(($4 = ($1 + [16]))) = *(($3 + [16]))
	*(($5 = ($1 + [8]))) = *(($3 + [8]))
	CALL eosio_assert([1], [1072])
	CALL eosio_assert([1], [560])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy(($6 | [8]), $5, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy(($6 + [16]), $4, [8])
	CALL db_update_i64(*($1 + [28]), $2, $6, [24])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)4154289181272571904) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)4154289181272571905
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $146 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [128])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$3()), [896])
	$4 = CALL $309([96])
	CALL $94($4)
	*($4 + [80]) = $1
	CALL memcpy($4, *($3), [73])
	*($7 + [80]) = ($7 + [66])
	*($7 + [76]) = $7
	*($7 + [72]) = $7
	*($7 + [88]) = ($7 + [72])
	*($7 + [100]) = ($4 + [8])
	*($7 + [96]) = $4
	*($7 + [104]) = ($4 + [16])
	*($7 + [108]) = ($4 + [24])
	*($7 + [112]) = ($4 + [40])
	*($7 + [116]) = ($4 + [56])
	*($7 + [120]) = ($4 + [72])
	CALL $95(($7 + [96]), ($7 + [88]))
	*($4 + [84]) = CALL db_store_i64(*($1 + [8]), (int_64)-3020371635640205312, $2, (int_64)-3020371635640205312, $7, [66])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)-3020371635640205312) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)-3020371635640205311
	
.LABEL $label$1
	*($7 + [96]) = $4
	*($7) = (int_64)-3020371635640205312
	$5 = *($4 + [84])
	*($7 + [72]) = $5
	$6 = ($1 + [28])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = (int_64)-3020371635640205312
	*($3 + [16]) = $5
	*($7 + [96]) = [0]
	*($3) = $4
	*($6) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $96(($1 + [24]), ($7 + [96]), $7, ($7 + [72]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$4 = *($7 + [96])
	*($7 + [96]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $310($4)
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [128])
}

int_32 .FUNC $141 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$6 = *($0)
	*($0) = ($6 + [10])
	$6 = ($6 + [11])
	$8 = *($1 + [12])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	*($0) = $6
	$8 = *($1 + [20])
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	*($0) = $6
	$7 = *($1 + [24])
	$2 = *(($1 + [28]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$7
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$8:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$5 }
	*($0) = $6
	
.LABEL $label$4
	$7 = *($1 + [36])
	$2 = *(($1 + [40]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$9 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$12:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$13 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$13
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$14:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$14 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	*($0) = $6
	
.LABEL $label$10
	$7 = *($1 + [48])
	$5 = *(($1 + [52]))
	$8 = (CASTING uint_64)(uint_32 int_32(($5 - $7) >> [4]))
	
.LOOP $label$15:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$15 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = *($7 + [4])
	$3 = *(($7 + [8]))
	$6 = ((($6 + $3) + [2]) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$18:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$18 }
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	*($0) = $6
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $140 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($0 + [52])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$3 }
	$2 = ([0] - $1)
	$5 = ($5 + [-12])
	
.LOOP $label$4:
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$5 }
	*(($5 + [4])) = $3
	CALL $310($3)
	
.LABEL $label$5
	$5 = ($5 + [-16])
	if ( ((int_32)($5 + $2) != (int_32)[-12]) ){ goto $label$4 }
	$5 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $310($5)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$4 = ($0 + [40])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$9:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($5 + [16])) = $3
	CALL $310($3)
	
.LABEL $label$10
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$11 }
	*(($5 + [4])) = $3
	CALL $310($3)
	
.LABEL $label$11
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$9 }
	$5 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($4) = $1
	CALL $310($5)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$14 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$15:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$16 }
	*(($5 + [16])) = $3
	CALL $310($3)
	
.LABEL $label$16
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$17 }
	*(($5 + [4])) = $3
	CALL $310($3)
	
.LABEL $label$17
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$15 }
	$5 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$13
	*($4) = $1
	CALL $310($5)
	
.LABEL $label$12
	return $0
}

int_32 .FUNC $143 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [560])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [560])
	CALL memcpy(*($4), $7, [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [560])
	CALL memcpy(*($4), ($7 + [8]), [8])
	*($4) = (*($4) + [8])
	CALL $54(CALL $53($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$6 = *($4)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $142 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [560])
	CALL memcpy(*($0 + [4]), $1, [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[1]), [560])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$4 = (*($0 + [4]) + [2])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[3]), [560])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$5 = (*($0 + [4]) + [4])
	*($0 + [4]) = $5
	$6 = *($1 + [12])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$2 = ((int_64)$6) != (int_64)0
	*($7 + [14]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) > (int_32)[0]), [560])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [14]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $2 ){ goto $label$1 }
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [560])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($1 + [16]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	$6 = *($1 + [20])
	
.LOOP $label$2:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$1 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($1) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [560])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $1 ){ goto $label$2 }
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $278 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($3 + [16]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [560])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [560])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$0 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $0, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $148 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$3()), [896])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($4 = CALL $309([40])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [464])
	$2 = (int_64)5462355
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [128])
	*($4 + [24]) = $1
	CALL $149(($7 + [16]), $4)
	*($7 + [32]) = $4
	*($7 + [16]) = (int_64)4154289181272571904
	$6 = *($4 + [28])
	*($7 + [12]) = $6
	$5 = ($1 + [28])
	$3 = *($5)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$7 }
	*($3 + [8]) = (int_64)4154289181272571904
	*($3 + [16]) = $6
	*($7 + [32]) = [0]
	*($3) = $4
	*($5) = ($3 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $150(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$6
	*($0 + [4]) = $4
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL $310($3)
	
.LABEL $label$8
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $98 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [56]) == (int_32)$0), [64])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)4853904213979168768, (int_64)4853904213979168768)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $99($0, $3)
	CALL eosio_assert(((int_32)*($3 + [56]) == (int_32)$0), [64])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [848])
	CALL $100($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $101($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $99 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	*(($7 = $8) + [44]) = $1
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [752])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($8 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($7 + [36]) = $4
	*($7 + [32]) = $4
	*($7 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($7 + [12]) = ($7 + [32])
	*($7 + [16]) = ($7 + [44])
	*($7 + [8]) = $0
	$4 = CALL $309([72])
	$5 = CALL $107($4, $0, ($7 + [8]))
	*($7 + [24]) = $4
	*($7 + [8]) = (int_64)4853904213979168768
	$1 = *($4 + [60])
	*($7 + [4]) = $1
	$3 = ($0 + [28])
	$6 = *($3)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($6 + [8]) = (int_64)4853904213979168768
	*($6 + [16]) = $1
	*($7 + [24]) = [0]
	*($6) = $4
	*($3) = ($6 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $103(($0 + [24]), ($7 + [24]), ($7 + [8]), ($7 + [4]))
	
.LABEL $label$8
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$6 = *($4 + [44])
	if ( ($6 == 0) ){ goto $label$10 }
	*(($4 + [48])) = $6
	CALL $310($6)
	
.LABEL $label$10
	CALL $310($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
	return $5
}

void .FUNC $239 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$6 = CALL $309([16])
	*($0 + [8]) = $6
	*($0) = (int_64)55834574865
	CALL memset($6, [46], [13])
	*($6 + [13]) = [0]
	$2 = ($0 + [1])
	$8 = *($1)
	$7 = [17]
	$5 = ($0 + [8])
	$6 = [12]
	
.LOOP $label$1:
	$4 = ((int_32)$6 == (int_32)[12])
	$3 = *((*([0] + [2952]) + (CASTING uint_32)(uint_64 ((int_64)( (int_64)15 ? (int_64)31 : $4 ) & (int_64)$8))))
	$1 = $2
	if ( (($7 & [1]) == 0) ){ goto $label$2 }
	$1 = *($5)
	
.LABEL $label$2
	*(($1 + $6)) = $3
	if ( ($6 == 0) ){ goto $label$3 }
	$6 = ($6 + [-1])
	$8 = (uint_64)$8 >> (uint_64)( (int_64)4 ? (int_64)5 : $4 ))
	$7 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$1 = ($6 & [1])
	$6 = *($0)
	$6 = ( *(($0 + [4])) ? uint_32($6 >> [1]) : $1 )
	$7 = ( *(($0 + [8])) ? $2 : $1 )
	
.LOOP $label$5:
	if ( ($6 == 0) ){ goto $label$4 }
	$1 = ($7 + $6)
	$3 = ($6 + [-1])
	$6 = $3
	if ( ((int_32)*(($1 + [-1])) == (int_32)[46]) ){ goto $label$5 }
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	CALL $326($9, $0, [0], ($3 + [1]), $0)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = [0]
	goto $label$6 
	
.LABEL $label$7
	*(*(($0 + [8]))) = [0]
	*(($0 + [4])) = [0]
	
.LABEL $label$6
	CALL $312($0, [0])
	*(($0 + [8])) = *(($9 + [8]))
	*($0) = *($9)
	
.LABEL $label$4
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $238 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [560])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	CALL $56(*($1), *($0 + [24]))
	$2 = *($0 + [28])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($0 + [4]), $2, [8])
	$1 = (*($0 + [4]) + [8])
	*($0 + [4]) = $1
	CALL eosio_assert(((int_32)(*($0 + [8]) - $1) > (int_32)[7]), [560])
	CALL memcpy(*($0 + [4]), ($2 + [8]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $94 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [16]) = (int_64)0
	$2 = [0]
	*($0 + [8]) = [0]
	*($0 + [24]) = (int_64)0
	*(($3 = ($0 + [32]))) = (int_64)310366523908
	CALL eosio_assert([1], [464])
	$1 = (uint_64)*($3) >> (uint_64)(int_64)8)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [128])
	*(($2 = ($0 + [48]))) = (int_64)310366523908
	*($0 + [40]) = (int_64)0
	CALL eosio_assert([1], [464])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [128])
	*(($2 = ($0 + [64]))) = (int_64)1397703940
	*($0 + [56]) = (int_64)0
	CALL eosio_assert([1], [464])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [128])
	*($0 + [72]) = [0]
	return $0
}

void .FUNC $236 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [784])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [784])
	CALL memcpy(($3 + [16]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [784])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [784])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$0 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($0, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $96 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $309(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $310($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $310($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $234 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	*($0 + [24]) = (int_64)0
	*(($4 = ($0 + [32]))) = (int_64)1398362884
	CALL eosio_assert([1], [464])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [128])
	*($0 + [64]) = $1
	*($6 + [8]) = *($2 + [4])
	*($6 + [20]) = ($0 + [8])
	*($6 + [16]) = $0
	*($6 + [24]) = ($0 + [16])
	*($6 + [28]) = ($0 + [24])
	*($6 + [32]) = ($0 + [48])
	*($6 + [36]) = ($0 + [49])
	*($6 + [40]) = ($0 + [56])
	CALL $236(($6 + [16]), ($6 + [8]))
	*($0 + [68]) = *(*($2 + [8]))
	*([0] + [4]) = ($6 + [48])
	return $0
}

void .FUNC $233 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [576])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [624])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [688])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $310($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $310($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [68]))
}

void .FUNC $91 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$4 = *(($1 + [28]))
	if ( ((int_32)$4 == (int_32)*($1 + [24])) ){ goto $label$4 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [80]) == (int_32)$1), [64])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-3020371635640205312, (int_64)-3020371635640205312)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $92($1, $4)
	CALL eosio_assert(((int_32)*($4 + [80]) == (int_32)$1), [64])
	
.LABEL $label$3
	CALL memcpy($0, $4, [80])
	goto $label$1 
	
.LABEL $label$2
	*($5 + [8]) = $3
	CALL $93($5, $1, $2, ($5 + [8]))
	CALL memcpy($0, *($5 + [4]), [80])
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

int_32 .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [64])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [752])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($8 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($7 + [12]) = $4
	*($7 + [8]) = $4
	*($7 + [16]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$5 = CALL $309([96])
	CALL $94($5)
	*($5 + [80]) = $0
	*($7 + [24]) = ($7 + [8])
	*($7 + [36]) = ($5 + [8])
	*($7 + [32]) = $5
	*($7 + [40]) = ($5 + [16])
	*($7 + [44]) = ($5 + [24])
	*($7 + [48]) = ($5 + [40])
	*($7 + [52]) = ($5 + [56])
	*($7 + [56]) = ($5 + [72])
	CALL $97(($7 + [32]), ($7 + [24]))
	*($5 + [84]) = $1
	*($7 + [24]) = $5
	*($7 + [32]) = (int_64)-3020371635640205312
	$6 = *($5 + [84])
	*($7 + [4]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = (int_64)-3020371635640205312
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $96(($0 + [24]), ($7 + [24]), ($7 + [32]), ($7 + [4]))
	
.LABEL $label$8
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $310($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [64])
	return $5
}

void .FUNC $230 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [96])
	*([0] + [4]) = $6
	$5 = CALL current_time()
	*(($6 + [44])) = [0]
	*(($6 + [48])) = [0]
	*($6 + [28]) = [0]
	*($6 + [32]) = [0]
	*($6 + [36]) = [0]
	*($6 + [40]) = [0]
	*($6 + [16]) = ((CASTING uint_32)(uint_64 ((uint_64)$5 / (uint_64)(int_64)1000000)) + [60])
	*($6 + [52]) = [0]
	*(($6 + [56])) = [0]
	*(($6 + [60])) = [0]
	*($6 + [64]) = [0]
	*(($6 + [68])) = [0]
	*(($6 + [72])) = [0]
	CALL $237(($6 + [52]), $1, $2, $3, $4)
	*($6 + [36]) = [1]
	$5 = CALL $138($0)
	*($6 + [8]) = (int_64)0
	*($6) = $5
	$5 = *($0)
	CALL $139(($6 + [80]), ($6 + [16]))
	$0 = *($6 + [80])
	CALL send_deferred($6, $5, $0, (*($6 + [84]) - $0), [0])
	$0 = *($6 + [80])
	if ( ($0 == 0) ){ goto $label$1 }
	*($6 + [84]) = $0
	CALL $310($0)
	
.LABEL $label$1
	CALL $140(($6 + [16]))
	*([0] + [4]) = ($6 + [96])
}

int_32 .FUNC $144 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($7 + [15]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [560])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$2 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$3 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[1]), [560])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $4, [2])
	*($6) = (*($6) + [2])
	CALL $54($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$6 = *($6)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $192 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [576])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [624])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [688])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $310($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $310($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
}

int_32 .FUNC $260 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [752])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $309([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [784])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [784])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $219(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $310($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $261 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_64 $19
	int_32 $20
	int_64 $21
	int_32 $22
	$22 = (*([0] + [4]) - [128])
	*([0] + [4]) = $22
	$21 = (CASTING int_64)(int_32 $1)
	$19 = *($0)
	$18 = *(($0 + [632]))
	$8 = *(($0 + [636]))
	if ( ((int_32)$8 == (int_32)$18) ){ goto $label$1 }
	$20 = ($8 + [-24])
	$7 = ([0] - $18)
	
.LOOP $label$2:
	if ( ((int_64)*(*($20)) == (int_64)$21) ){ goto $label$1 }
	$8 = $20
	$9 = ($20 + [-24])
	$20 = $9
	if ( ((int_32)($9 + $7) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$2 = ($0 + [608])
	if ( ((int_32)$8 == (int_32)$18) ){ goto $label$4 }
	$20 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($20 + [16]) == (int_32)$2), [64])
	goto $label$3 
	
.LABEL $label$4
	$20 = CALL $260($2, CALL $fimport$6(*(($0 + [608])), *(($0 + [616])), (int_64)-5069082855582203904, $21))
	CALL eosio_assert(((int_32)*($20 + [16]) == (int_32)$2), [64])
	
.LABEL $label$3
	*(($22 + [120])) = [0]
	*($22 + [88]) = $19
	*($22 + [104]) = (int_64)-1
	*($22 + [112]) = (int_64)0
	*($22 + [96]) = *($20 + [8])
	$5 = *($0)
	*(($22 + [80])) = (int_64)1397703940
	*($22 + [72]) = (int_64)0
	*($22 + [64]) = (int_64)0
	CALL eosio_assert([1], [464])
	$19 = (int_64)5459781
	$20 = [0]
	
.LOOP $label$7:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $19) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$6 }
	$19 = (uint_64)$19 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$19) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	
.LOOP $label$9:
	$19 = (uint_64)$19 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$19) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$9 }
	
.LABEL $label$8
	$9 = [1]
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$9 = [0]
	
.LABEL $label$5
	CALL eosio_assert($9, [128])
	CALL $258(($22 + [24]), ($22 + [88]), $5, ($22 + [64]))
	$18 = ($1 + [-1])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$10 }
	$10 = (($22 + [24]) + [16])
	$4 = *($10)
	$3 = *($22 + [32])
	$11 = ($0 + [632])
	$12 = ($0 + [636])
	$13 = ($0 + [616])
	$14 = ($0 + [608])
	$15 = (($22 + [24]) + [24])
	$16 = ($22 + [56])
	$17 = ($22 + [52])
	
.LOOP $label$11:
	$19 = (CASTING int_64)(int_32 $18)
	$5 = *($0)
	$6 = *($11)
	$8 = *($12)
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$12 }
	$20 = ($8 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$13:
	if ( ((int_64)*(*($20)) == (int_64)$19) ){ goto $label$12 }
	$8 = $20
	$9 = ($20 + [-24])
	$20 = $9
	if ( ((int_32)($9 + $7) != (int_32)[-24]) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$15 }
	$20 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($20 + [16]) == (int_32)$2), [64])
	goto $label$14 
	
.LABEL $label$15
	$20 = CALL $260($2, CALL $fimport$6(*($14), *($13), (int_64)-5069082855582203904, $19))
	CALL eosio_assert(((int_32)*($20 + [16]) == (int_32)$2), [64])
	
.LABEL $label$14
	*((($22 + [24]) + [8])) = *($20 + [8])
	*($10) = (int_64)-1
	*($15) = (int_64)0
	*($16) = [0]
	*($22 + [24]) = $5
	$5 = *($0)
	*(($22 + [8])) = (int_64)0
	*(($20 = ($22 + [16]))) = (int_64)1397703940
	*($22) = (int_64)0
	CALL eosio_assert([1], [464])
	$19 = (uint_64)*($20) >> (uint_64)(int_64)8)
	$20 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $19) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$19 = (uint_64)$19 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$19) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$19 = (uint_64)$19 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$19) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$9 = [1]
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$9 = [0]
	
.LABEL $label$16
	CALL eosio_assert($9, [128])
	CALL $258(($22 + [64]), ($22 + [24]), $5, $22)
	$19 = *((($22 + [64]) + [8]))
	CALL eosio_assert(((int_64)*((($22 + [64]) + [16])) == (int_64)$4), [160])
	$7 = ((int_64)$19 < (int_64)$3)
	$18 = ($18 - $7)
	$8 = *($15)
	if ( ($8 == 0) ){ goto $label$21 }
	$20 = *($17)
	if ( ((int_32)$20 == (int_32)$8) ){ goto $label$23 }
	
.LOOP $label$24:
	$20 = ($20 + [-24])
	$9 = *($20)
	*($20) = [0]
	if ( ($9 == 0) ){ goto $label$25 }
	CALL $310($9)
	
.LABEL $label$25
	if ( ((int_32)$8 != (int_32)$20) ){ goto $label$24 }
	$20 = *($15)
	goto $label$22 
	
.LABEL $label$23
	$20 = $8
	
.LABEL $label$22
	*($17) = $8
	CALL $310($20)
	
.LABEL $label$21
	if ( ((int_32)$18 < (int_32)[0]) ){ goto $label$10 }
	if ( $7 ){ goto $label$11 }
	
.LABEL $label$10
	$17 = ($18 + [1])
	if ( ((int_32)$17 == (int_32)$1) ){ goto $label$26 }
	$19 = (CASTING int_64)(int_32 $17)
	$18 = *(($0 + [632]))
	$8 = *(($0 + [636]))
	if ( ((int_32)$8 == (int_32)$18) ){ goto $label$27 }
	$20 = ($8 + [-24])
	$7 = ([0] - $18)
	
.LOOP $label$28:
	if ( ((int_64)*(*($20)) == (int_64)$19) ){ goto $label$27 }
	$8 = $20
	$9 = ($20 + [-24])
	$20 = $9
	if ( ((int_32)($9 + $7) != (int_32)[-24]) ){ goto $label$28 }
	
.LABEL $label$27
	if ( ((int_32)$8 == (int_32)$18) ){ goto $label$30 }
	$12 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [16]) == (int_32)$2), [64])
	goto $label$29 
	
.LABEL $label$30
	$12 = [0]
	$20 = CALL db_find_i64(*(($0 + [608])), *(($0 + [616])), (int_64)-5069082855582203904, $19)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$29 }
	$12 = CALL $260($2, $20)
	CALL eosio_assert(((int_32)*($12 + [16]) == (int_32)$2), [64])
	
.LABEL $label$29
	$18 = *(($0 + [632]))
	$8 = *(($0 + [636]))
	if ( ((int_32)$8 == (int_32)$18) ){ goto $label$31 }
	$20 = ($8 + [-24])
	$7 = ([0] - $18)
	
.LOOP $label$32:
	if ( ((int_64)*(*($20)) == (int_64)$21) ){ goto $label$31 }
	$8 = $20
	$9 = ($20 + [-24])
	$20 = $9
	if ( ((int_32)($9 + $7) != (int_32)[-24]) ){ goto $label$32 }
	
.LABEL $label$31
	if ( ((int_32)$8 == (int_32)$18) ){ goto $label$34 }
	$20 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($20 + [16]) == (int_32)$2), [64])
	goto $label$33 
	
.LABEL $label$34
	$20 = [0]
	$9 = CALL db_find_i64(*(($0 + [608])), *(($0 + [616])), (int_64)-5069082855582203904, $21)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$33 }
	$20 = CALL $260($2, $9)
	CALL eosio_assert(((int_32)*($20 + [16]) == (int_32)$2), [64])
	
.LABEL $label$33
	*($22 + [24]) = *($20 + [8])
	$6 = ($0 + [632])
	$15 = ($0 + [636])
	$10 = ($0 + [616])
	$11 = ($0 + [608])
	
.LOOP $label$35:
	$18 = *($6)
	$8 = *($15)
	if ( ((int_32)$8 == (int_32)$18) ){ goto $label$36 }
	$20 = ($8 + [-24])
	$7 = ([0] - $18)
	
.LOOP $label$37:
	if ( ((int_64)*(*($20)) == (int_64)$21) ){ goto $label$36 }
	$8 = $20
	$9 = ($20 + [-24])
	$20 = $9
	if ( ((int_32)($9 + $7) != (int_32)[-24]) ){ goto $label$37 }
	
.LABEL $label$36
	if ( ((int_32)$8 == (int_32)$18) ){ goto $label$39 }
	$18 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($18 + [16]) == (int_32)$2), [64])
	goto $label$38 
	
.LABEL $label$39
	$18 = [0]
	$20 = CALL db_find_i64(*($11), *($10), (int_64)-5069082855582203904, $21)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$38 }
	$18 = CALL $260($2, $20)
	CALL eosio_assert(((int_32)*($18 + [16]) == (int_32)$2), [64])
	
.LABEL $label$38
	$21 = ((int_64)$21 + (int_64)-1)
	$0 = *($6)
	$8 = *($15)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$40 }
	$20 = ($8 + [-24])
	$7 = ([0] - $0)
	
.LOOP $label$41:
	if ( ((int_64)*(*($20)) == (int_64)$21) ){ goto $label$40 }
	$8 = $20
	$9 = ($20 + [-24])
	$20 = $9
	if ( ((int_32)($9 + $7) != (int_32)[-24]) ){ goto $label$41 }
	
.LABEL $label$40
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$43 }
	$20 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($20 + [16]) == (int_32)$2), [64])
	goto $label$42 
	
.LABEL $label$43
	$20 = [0]
	$9 = CALL db_find_i64(*($11), *($10), (int_64)-5069082855582203904, $21)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$42 }
	$20 = CALL $260($2, $9)
	CALL eosio_assert(((int_32)*($20 + [16]) == (int_32)$2), [64])
	
.LABEL $label$42
	*($22 + [64]) = *($20 + [8])
	*($22) = ($22 + [64])
	CALL eosio_assert(((int_32)$18 != (int_32)[0]), [848])
	CALL $263($2, $18, (int_64)0, $22)
	if ( ((int_32)(CASTING uint_32)(uint_64 $21) != (int_32)$17) ){ goto $label$35 }
	*($22 + [64]) = ($22 + [24])
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [848])
	CALL $264($2, $12, (int_64)0, ($22 + [64]))
	
.LABEL $label$26
	$8 = *($22 + [112])
	if ( ($8 == 0) ){ goto $label$44 }
	$7 = ($22 + [116])
	$20 = *($7)
	if ( ((int_32)$20 == (int_32)$8) ){ goto $label$46 }
	
.LOOP $label$47:
	$20 = ($20 + [-24])
	$9 = *($20)
	*($20) = [0]
	if ( ($9 == 0) ){ goto $label$48 }
	CALL $310($9)
	
.LABEL $label$48
	if ( ((int_32)$8 != (int_32)$20) ){ goto $label$47 }
	$20 = *(($22 + [112]))
	goto $label$45 
	
.LABEL $label$46
	$20 = $8
	
.LABEL $label$45
	*($7) = $8
	CALL $310($20)
	
.LABEL $label$44
	*([0] + [4]) = ($22 + [128])
}

void .FUNC $262 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [960])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1008])
	*($1 + [8]) = *(*($3))
	$4 = *($1)
	CALL eosio_assert([1], [1072])
	CALL eosio_assert([1], [560])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy(($5 | [8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $5, [16])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

int_32 .FUNC $303 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1536])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $52($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [784])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

int_32 .FUNC $302 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $303($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $312($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $309($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $312($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $310($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $311($7)
	return (unreachable)
}

void .FUNC $301 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [784])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $302(*($1), *($0 + [12]))
}

void .FUNC $263 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [960])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1008])
	*($1 + [8]) = *(*($3))
	$4 = *($1)
	CALL eosio_assert([1], [1072])
	CALL eosio_assert([1], [560])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy(($5 | [8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $5, [16])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

int_32 .FUNC $307 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [13014]) == 0) ){ goto $label$2 }
	$7 = *([0] + [13016])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [13014]) = [1]
	$7 = ($7 << [16])
	*([0] + [13016]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [13016])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [13016]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [13014]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [13014]) = [1]
	$3 = ($3 << [16])
	*([0] + [13016]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [13016])
	
.LABEL $label$8
	*([0] + [13016]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

int_32 .FUNC $306 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $307($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [12928])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $306([4528], $0)
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = (*([0] + [4]) - [928])
	*([0] + [4]) = $3
	*(($3 + [16])) = $0
	*(($3 + [24])) = (int_64)-1
	*(($3 + [32])) = (int_64)0
	*(($3 + [40])) = [0]
	*($3 + [8]) = $0
	*($3) = $0
	*($3 + [48]) = $0
	*(($3 + [56])) = $0
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = [0]
	*(($3 + [76])) = [0]
	*(($3 + [80])) = [0]
	*($3 + [88]) = $0
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = [0]
	*(($3 + [116])) = [0]
	*(($3 + [120])) = [0]
	*($3 + [128]) = $0
	*(($3 + [136])) = $0
	*(($3 + [144])) = (int_64)-1
	*(($3 + [152])) = [0]
	*(($3 + [156])) = [0]
	*(($3 + [160])) = [0]
	*($3 + [168]) = $0
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = [0]
	*(($3 + [196])) = [0]
	*(($3 + [200])) = [0]
	*($3 + [208]) = $0
	*(($3 + [216])) = $0
	*(($3 + [224])) = (int_64)-1
	*(($3 + [232])) = [0]
	*(($3 + [236])) = [0]
	*(($3 + [240])) = [0]
	*($3 + [248]) = $0
	*(($3 + [256])) = $0
	*(($3 + [264])) = (int_64)-1
	*(($3 + [272])) = [0]
	*(($3 + [276])) = [0]
	*(($3 + [280])) = [0]
	*($3 + [288]) = $0
	*(($3 + [296])) = $0
	*(($3 + [304])) = (int_64)-1
	*(($3 + [312])) = [0]
	*(($3 + [316])) = [0]
	*(($3 + [320])) = [0]
	*($3 + [328]) = $0
	*(($3 + [336])) = $0
	*(($3 + [344])) = (int_64)-1
	*(($3 + [352])) = [0]
	*(($3 + [356])) = [0]
	*(($3 + [360])) = [0]
	$0 = *($3)
	*($3 + [368]) = $0
	*(($3 + [376])) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = [0]
	*(($3 + [396])) = [0]
	*(($3 + [400])) = [0]
	*($3 + [408]) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = (int_64)-1
	*(($3 + [432])) = [0]
	*(($3 + [436])) = [0]
	*(($3 + [440])) = [0]
	*($3 + [448]) = $0
	*(($3 + [456])) = $0
	*(($3 + [464])) = (int_64)-1
	*(($3 + [472])) = [0]
	*(($3 + [476])) = [0]
	*(($3 + [480])) = [0]
	*($3 + [488]) = $0
	*(($3 + [496])) = $0
	*(($3 + [504])) = (int_64)-1
	*(($3 + [512])) = [0]
	*(($3 + [516])) = [0]
	*(($3 + [520])) = [0]
	*($3 + [528]) = $0
	*(($3 + [536])) = $0
	*(($3 + [544])) = (int_64)-1
	*(($3 + [552])) = [0]
	*(($3 + [556])) = [0]
	*(($3 + [560])) = [0]
	*($3 + [568]) = $0
	*(($3 + [576])) = $0
	*(($3 + [584])) = (int_64)-1
	*(($3 + [592])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [600])) = [0]
	*($3 + [608]) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = (int_64)-1
	*(($3 + [632])) = [0]
	*(($3 + [636])) = [0]
	*(($3 + [640])) = [0]
	*($3 + [648]) = $0
	*(($3 + [656])) = $0
	*(($3 + [664])) = (int_64)-1
	*(($3 + [672])) = [0]
	*(($3 + [676])) = [0]
	*(($3 + [680])) = [0]
	*($3 + [688]) = $0
	*(($3 + [696])) = $0
	*(($3 + [704])) = (int_64)-1
	*(($3 + [712])) = [0]
	*(($3 + [716])) = [0]
	*(($3 + [720])) = [0]
	$0 = *($3)
	*($3 + [728]) = $0
	*(($3 + [736])) = $0
	*(($3 + [744])) = (int_64)-1
	*(($3 + [752])) = [0]
	*(($3 + [756])) = [0]
	*(($3 + [760])) = [0]
	*($3 + [768]) = $0
	*(($3 + [776])) = $0
	*(($3 + [784])) = (int_64)-1
	*(($3 + [792])) = [0]
	*(($3 + [796])) = [0]
	*(($3 + [800])) = [0]
	*($3 + [808]) = $0
	*(($3 + [816])) = $0
	*(($3 + [824])) = (int_64)-1
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = [0]
	*($3 + [848]) = $0
	*(($3 + [856])) = $0
	*(($3 + [864])) = (int_64)-1
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = [0]
	*($3 + [888]) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = (int_64)-1
	*(($3 + [912])) = [0]
	*(($3 + [916])) = [0]
	*(($3 + [920])) = [0]
	CALL _ZN12richrichrich5applyEyy($3, $1, $2)
	CALL eosio_exit([0])
	(unreachable)
}

int_32 .FUNC $309 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [13020])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [12912])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [12720]
	$1 = (((int_32)$2 * (int_32)[12]) + [12720])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_64 .FUNC $282 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_32 $17
	$17 = (*([0] + [4]) - [32])
	*([0] + [4]) = $17
	$1 = ($0 + [888])
	$13 = (int_64)10000000000
	$16 = (int_64)10000000001
	$7 = ($0 + [912])
	$8 = ($0 + [916])
	$9 = ($0 + [896])
	$10 = (int_64)1
	
.LOOP $label$1:
	$2 = $13
	$3 = *($7)
	$11 = *($8)
	if ( ((int_32)$11 == (int_32)$3) ){ goto $label$2 }
	$0 = ($11 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$3:
	if ( ((int_64)*(*($0)) == (int_64)$10) ){ goto $label$2 }
	$11 = $0
	$6 = ($0 + [-24])
	$0 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$11 == (int_32)$3) ){ goto $label$5 }
	$11 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*(($11 + [52])) == (int_32)$1), [64])
	goto $label$4 
	
.LABEL $label$5
	$11 = CALL $204($1, CALL $fimport$6(*($1), *($9), (int_64)-7950542192169189376, $10))
	CALL eosio_assert(((int_32)*($11 + [52]) == (int_32)$1), [64])
	
.LABEL $label$4
	$5 = *($11 + [40])
	$13 = (int_64)0
	$12 = (int_64)59
	$0 = [1248]
	$14 = (int_64)0
	
.LOOP $label$6:
	$15 = (int_64)0
	if ( ((uint_64)$13 > (uint_64)(int_64)11) ){ goto $label$7 }
	$6 = *($0)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$6 = ($6 + [165])
	goto $label$8 
	
.LABEL $label$9
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$7
	$0 = ($0 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$6 }
	if ( ((int_64)$5 == (int_64)$14) ){ goto $label$12 }
	CALL $283(($17 + [16]), $11)
	if ( (uint_64)(*($17 + [16]) <= $2) ){ goto $label$11 }
	CALL $283(($17 + [16]), $11)
	if ( ((uint_64)*($17 + [16]) <= (uint_64)$2) ){ goto $label$12 }
	CALL $283($17, $11)
	if ( ((uint_64)*($17) >= (uint_64)$16) ){ goto $label$12 }
	CALL $283(($17 + [16]), $11)
	$16 = *($17 + [16])
	
.LABEL $label$12
	$13 = $2
	goto $label$10 
	
.LABEL $label$11
	CALL $283(($17 + [16]), $11)
	$13 = *($17 + [16])
	$16 = $2
	
.LABEL $label$10
	$10 = ((int_64)$10 + (int_64)1)
	if ( ((int_64)$10 != (int_64)67) ){ goto $label$1 }
	*([0] + [4]) = ($17 + [32])
	return $16
}

void .FUNC $268 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$2 = *($0)
	$3 = *(*($0 + [4]))
	*($1) = *($3)
	*(($4 = ($1 + [16]))) = *(($3 + [16]))
	*(($5 = ($1 + [8]))) = *(($3 + [8]))
	CALL eosio_assert([1], [560])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy(($6 | [8]), $5, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy(($6 + [16]), $4, [8])
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-5069068143847014400, *(*($0 + [8])), (int_64)-5069068143847014400, $6, [24])
	if ( ((uint_64)*($2 + [16]) > (uint_64)(int_64)-5069068143847014400) ){ goto $label$1 }
	*(($2 + [16])) = (int_64)-5069068143847014399
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $129 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [560])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $0, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $128 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $309(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $310($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $310($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $286 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [128])
	*([0] + [4]) = $8
	CALL eosio_assert(((int_32)*(($1 + [52])) == (int_32)$0), [960])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1008])
	*($1 + [32]) = ((int_64)*($1 + [32]) + (int_64)1)
	*($1 + [40]) = *(*($3))
	$4 = *($1)
	$5 = *($1 + [16])
	CALL __multi3($8, $5, (int_64)$5 >> (int_64)63), (int_64)135, (int_64)0)
	$3 = ($1 + [24])
	$7 = *($3)
	$5 = *(($8 + [8]))
	$6 = *($8)
	CALL eosio_assert(( (uint_64)($6 <= (int_64)4611686018427387904) ? ((int_64)$5 < (int_64)0) : (int_64)($5 == 0) ), [1408])
	CALL eosio_assert(( ((uint_64)$6 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$5 > (int_64)-1) : ((int_64)$5 == (int_64)-1) ), [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	*($3) = $7
	*($1 + [16]) = ((int_64)$6 / (int_64)100)
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1072])
	*($8 + [88]) = (($8 + [16]) + [49])
	*($8 + [84]) = ($8 + [16])
	*($8 + [80]) = ($8 + [16])
	*($8 + [96]) = ($8 + [80])
	*($8 + [108]) = ($1 + [8])
	*($8 + [104]) = $1
	*($8 + [112]) = ($1 + [16])
	*($8 + [116]) = ($1 + [32])
	*($8 + [120]) = ($1 + [40])
	*($8 + [124]) = ($1 + [48])
	CALL $222(($8 + [104]), ($8 + [96]))
	CALL db_update_i64(*($1 + [56]), $2, ($8 + [16]), [49])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [128])
}

int_32 .FUNC $287 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [752])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $309([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [784])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)$4 != (int_32)[8]), [784])
	CALL memcpy(($6 + [8]), ($7 + [8]), [1])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $293(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $310($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $284 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$2 = (Rounds 0)(((float_64)CALL pow((float_64)1.35, (CASTING float_64)(uint_64 *($1 + [32]))) * (float_64)(float_64)1e5))
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [464])
	$6 = [0]
	$5 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$7 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [128])
	$5 = *($1 + [16])
	CALL __multi3($8, $5, (int_64)$5 >> (int_64)63), (int_64)135, (int_64)0)
	$4 = *(($1 + [24]))
	$5 = *(($8 + [8]))
	$3 = *($8)
	CALL eosio_assert(( (uint_64)($3 <= (int_64)4611686018427387904) ? ((int_64)$5 < (int_64)0) : (int_64)($5 == 0) ), [1408])
	CALL eosio_assert(( ((uint_64)$3 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$5 > (int_64)-1) : ((int_64)$5 == (int_64)-1) ), [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	*($0 + [8]) = (int_64)1397703940
	CALL eosio_assert(((int_64)$4 == (int_64)1397703940), [224])
	$5 = ((int_64)((int_64)$3 / (int_64)100) + (int_64)$2)
	*($0) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)$5 < (int_64)4611686018427387904), [304])
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $285 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [320])
	*([0] + [4]) = $15
	*($15 + [312]) = $1
	$4 = *(($0 + [232]))
	$9 = *(($0 + [236]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$1 }
	$10 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($10)) == (int_64)$1) ){ goto $label$1 }
	$9 = $10
	$7 = ($10 + [-24])
	$10 = $7
	if ( ((int_32)($7 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$3 = ($0 + [208])
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$6 }
	$10 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [16]) == (int_32)$3), [64])
	if ( $10 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$10 = CALL db_find_i64(*(($0 + [208])), *(($0 + [216])), (int_64)-7520332274659753984, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$4 }
	$10 = CALL $287($3, $10)
	CALL eosio_assert(((int_32)*($10 + [16]) == (int_32)$3), [64])
	
.LABEL $label$5
	CALL eosio_assert([1], [848])
	CALL $289($3, $10, (int_64)0, ($15 + [160]))
	goto $label$3 
	
.LABEL $label$4
	$1 = *($0)
	*($15 + [8]) = ($15 + [312])
	CALL $288(($15 + [160]), $3, $1, ($15 + [8]))
	
.LABEL $label$3
	CALL memset(($15 + [8]), [0], [152])
	$10 = CALL $120(($15 + [8]))
	$5 = ($0 + [128])
	$7 = *(($0 + [156]))
	if ( ((int_32)$7 == (int_32)*(($0 + [152]))) ){ goto $label$9 }
	$7 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [152]) == (int_32)$5), [64])
	if ( $7 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$7 = CALL db_find_i64(*($5), *(($0 + [136])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$7 }
	$7 = CALL $121($5, $7)
	CALL eosio_assert(((int_32)*($7 + [152]) == (int_32)$5), [64])
	
.LABEL $label$8
	$10 = $7
	
.LABEL $label$7
	CALL memcpy(($15 + [160]), $10, [152])
	$1 = (int_64)0
	$11 = (int_64)59
	$10 = [1248]
	$6 = *($15 + [304])
	$12 = (int_64)0
	
.LOOP $label$10:
	$13 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$11 }
	$7 = *($10)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$7 = ($7 + [165])
	goto $label$12 
	
.LABEL $label$13
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$11
	$10 = ($10 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$10 }
	$1 = *($15 + [312])
	if ( ((int_64)$6 != (int_64)$12) ){ goto $label$15 }
	*(($15 + [304])) = $1
	CALL $122($5, ($15 + [160]), *($0))
	goto $label$14 
	
.LABEL $label$15
	if ( ((int_64)$6 == (int_64)$1) ){ goto $label$14 }
	$8 = *(($0 + [232]))
	$9 = *(($0 + [236]))
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$16 }
	$10 = ($9 + [-24])
	$4 = ([0] - $8)
	
.LOOP $label$17:
	if ( ((int_64)*(*($10)) == (int_64)$1) ){ goto $label$16 }
	$9 = $10
	$7 = ($10 + [-24])
	$10 = $7
	if ( ((int_32)($7 + $4) != (int_32)[-24]) ){ goto $label$17 }
	
.LABEL $label$16
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$19 }
	$14 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($14 + [16]) == (int_32)$3), [64])
	goto $label$18 
	
.LABEL $label$19
	$14 = [0]
	$10 = CALL db_find_i64(*(($0 + [208])), *(($0 + [216])), (int_64)-7520332274659753984, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$18 }
	$14 = CALL $287($3, $10)
	CALL eosio_assert(((int_32)*($14 + [16]) == (int_32)$3), [64])
	
.LABEL $label$18
	$1 = *(($15 + [304]))
	$8 = *(($0 + [232]))
	$9 = *(($0 + [236]))
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$20 }
	$10 = ($9 + [-24])
	$4 = ([0] - $8)
	
.LOOP $label$21:
	if ( ((int_64)*(*($10)) == (int_64)$1) ){ goto $label$20 }
	$9 = $10
	$7 = ($10 + [-24])
	$10 = $7
	if ( ((int_32)($7 + $4) != (int_32)[-24]) ){ goto $label$21 }
	
.LABEL $label$20
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$23 }
	$10 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [16]) == (int_32)$3), [64])
	goto $label$22 
	
.LABEL $label$23
	$10 = CALL $287($3, CALL $fimport$6(*(($0 + [208])), *(($0 + [216])), (int_64)-7520332274659753984, $1))
	CALL eosio_assert(((int_32)*($10 + [16]) == (int_32)$3), [64])
	
.LABEL $label$22
	if ( ((int_32)*($14 + [8]) <= (int_32)*($10 + [8])) ){ goto $label$14 }
	*(($15 + [304])) = *($15 + [312])
	CALL $122($5, ($15 + [160]), *($0))
	
.LABEL $label$14
	$1 = (int_64)0
	$11 = (int_64)59
	$10 = [1248]
	$12 = (int_64)0
	
.LOOP $label$24:
	$13 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$25 }
	$7 = *($10)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$7 = ($7 + [165])
	goto $label$26 
	
.LABEL $label$27
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$25
	$10 = ($10 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$24 }
	if ( ((int_64)$12 == (int_64)$2) ){ goto $label$28 }
	$4 = *(($0 + [232]))
	$9 = *(($0 + [236]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$29 }
	$10 = ($9 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$30:
	if ( ((int_64)*(*($10)) == (int_64)$2) ){ goto $label$29 }
	$9 = $10
	$7 = ($10 + [-24])
	$10 = $7
	if ( ((int_32)($7 + $5) != (int_32)[-24]) ){ goto $label$30 }
	
.LABEL $label$29
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$32 }
	$10 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [16]) == (int_32)$3), [64])
	goto $label$31 
	
.LABEL $label$32
	$10 = [0]
	$7 = CALL db_find_i64(*(($0 + [208])), *(($0 + [216])), (int_64)-7520332274659753984, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$31 }
	$10 = CALL $287($3, $7)
	CALL eosio_assert(((int_32)*($10 + [16]) == (int_32)$3), [64])
	
.LABEL $label$31
	if ( ((int_32)*($10 + [8]) != (int_32)[1]) ){ goto $label$33 }
	CALL $290($3, $10)
	goto $label$28 
	
.LABEL $label$33
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [848])
	CALL $291($3, $10, (int_64)0, ($15 + [8]))
	
.LABEL $label$28
	*([0] + [4]) = ($15 + [320])
}

int_32 .FUNC $123 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [752])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$2 = ($0 + [24])
	*(($4 = CALL $309([56])) + [24]) = (int_64)1398362884
	*($4 + [16]) = (int_64)0
	CALL eosio_assert([1], [464])
	$3 = ($4 + [16])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [128])
	*($4 + [40]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($4 + [8])
	*($8 + [32]) = $4
	*($8 + [40]) = $3
	*($8 + [44]) = ($4 + [32])
	CALL $130(($8 + [32]), ($8 + [24]))
	*($4 + [44]) = $1
	*($8 + [24]) = $4
	*($8 + [32]) = (int_64)-5069075955596378112
	$6 = *($4 + [44])
	*($8 + [4]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = (int_64)-5069075955596378112
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $128($2, ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $310($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $122 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [152]) == (int_32)$0), [64])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $121($0, $3)
	CALL eosio_assert(((int_32)*($3 + [152]) == (int_32)$0), [64])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [848])
	CALL $131($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $132($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $288 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$3()), [896])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $309([32])
	CALL $292($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [20])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $293(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $310($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $289 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [960])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1008])
	*($1 + [8]) = (*($1 + [8]) + [1])
	$4 = *($1)
	CALL eosio_assert([1], [1072])
	CALL eosio_assert([1], [560])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy(($5 | [8]), ($1 + [8]), [1])
	CALL db_update_i64(*($1 + [20]), $2, $5, [9])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

int_32 .FUNC $127 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [80])
	*([0] + [4]) = $6
	*($0 + [16]) = (int_64)0
	*(($4 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [464])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [128])
	*($0 + [40]) = $1
	$5 = *($2)
	$4 = CALL memcpy($0, *(*($2 + [4])), [40])
	*($6 + [48]) = ($6 + [36])
	*($6 + [44]) = $6
	*($6 + [40]) = $6
	*($6 + [56]) = ($6 + [40])
	*($6 + [68]) = ($4 + [8])
	*($6 + [64]) = $4
	*($6 + [72]) = ($4 + [16])
	*($6 + [76]) = ($4 + [32])
	CALL $129(($6 + [64]), ($6 + [56]))
	*($4 + [44]) = CALL db_store_i64(*($5 + [8]), (int_64)-5069075955596378112, *(*($2 + [8])), (int_64)-5069075955596378112, $6, [36])
	if ( ((uint_64)*($5 + [16]) > (uint_64)(int_64)-5069075955596378112) ){ goto $label$6 }
	*(($5 + [16])) = (int_64)-5069075955596378111
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [80])
	return $4
}

int_32 .FUNC $183 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [752])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $309([56])
	CALL $186($6)
	*($6 + [40]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [8])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [24])
	CALL $187(($8 + [32]), ($8 + [24]))
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [44])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $188(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $310($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $125 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [80])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [960])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1008])
	CALL memcpy($1, *($3), [40])
	CALL eosio_assert([1], [1072])
	*($4 + [48]) = ($4 + [36])
	*($4 + [44]) = $4
	*($4 + [40]) = $4
	*($4 + [56]) = ($4 + [40])
	*($4 + [68]) = ($1 + [8])
	*($4 + [64]) = $1
	*($4 + [72]) = ($1 + [16])
	*($4 + [76]) = ($1 + [32])
	CALL $129(($4 + [64]), ($4 + [56]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [36])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-5069075955596378112) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)-5069075955596378111
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [80])
}

void .FUNC $124 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [40]) == (int_32)$0), [64])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-5069075955596378112, (int_64)-5069075955596378112)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $123($0, $3)
	CALL eosio_assert(((int_32)*($3 + [40]) == (int_32)$0), [64])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [848])
	CALL $125($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $126($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $182 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [128])
	*([0] + [4]) = $11
	$4 = *($0)
	$7 = (int_64)0
	$6 = (int_64)59
	$0 = [528]
	$8 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$7 > (uint_64)(int_64)5) ){ goto $label$6 }
	$5 = *($0)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$5 = ($5 + [165])
	goto $label$4 
	
.LABEL $label$6
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$2
	$0 = ($0 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$1 }
	*($11 + [64]) = $8
	*($11 + [56]) = $4
	$7 = (int_64)0
	$9 = (int_64)59
	$0 = [1664]
	$8 = (int_64)0
	
.LOOP $label$7:
	$6 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$8 }
	$5 = *($0)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$5 = ($5 + [165])
	goto $label$9 
	
.LABEL $label$10
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$8
	$0 = ($0 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$6 | (int_64)$8)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$7 }
	$7 = (int_64)0
	$6 = (int_64)59
	$0 = [32]
	$10 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$7 > (uint_64)(int_64)7) ){ goto $label$16 }
	$5 = *($0)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$5 = ($5 + [165])
	goto $label$14 
	
.LABEL $label$16
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$12
	$0 = ($0 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$10 = ((int_64)$9 | (int_64)$10)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$11 }
	*(($11 + [36])) = *(($2 + [12]))
	*(($11 + [32])) = *(($2 + [8]))
	*(($11 + [28])) = *(($2 + [4]))
	*($11 + [16]) = $1
	*($11 + [8]) = $4
	*($11 + [24]) = *($2)
	CALL $325(($11 + [40]), $3)
	$0 = CALL $50(($11 + [72]), ($11 + [56]), $8, $10, ($11 + [8]))
	CALL $51(($11 + [112]), $0)
	$5 = *($11 + [112])
	CALL send_inline($5, (*($11 + [116]) - $5))
	$5 = *($11 + [112])
	if ( ($5 == 0) ){ goto $label$17 }
	*($11 + [116]) = $5
	CALL $310($5)
	
.LABEL $label$17
	$5 = *($0 + [28])
	if ( ($5 == 0) ){ goto $label$18 }
	*(($0 + [32])) = $5
	CALL $310($5)
	
.LABEL $label$18
	$5 = *($0 + [16])
	if ( ($5 == 0) ){ goto $label$19 }
	*(($0 + [20])) = $5
	CALL $310($5)
	
.LABEL $label$19
	if ( ((*($11 + [40]) & [1]) == 0) ){ goto $label$20 }
	CALL $310(*(($11 + [48])))
	
.LABEL $label$20
	*([0] + [4]) = ($11 + [128])
}

void .FUNC $185 (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [208])
	*([0] + [4]) = $7
	$6 = [0]
	*((($7 + [168]) + [32])) = [0]
	*($7 + [176]) = $1
	*($7 + [184]) = (int_64)-1
	*($7 + [192]) = (int_64)0
	$3 = *($0)
	*($7 + [168]) = $3
	*((($7 + [8]) + [32])) = (int_64)310366523908
	*($7 + [16]) = [0]
	*($7 + [8]) = (int_64)0
	*($7 + [24]) = (int_64)0
	*($7 + [32]) = (int_64)0
	CALL eosio_assert([1], [464])
	$5 = (int_64)1212369234
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [128])
	*(($7 + [56])) = (int_64)310366523908
	*($7 + [48]) = (int_64)0
	CALL eosio_assert([1], [464])
	$5 = (int_64)1212369234
	$6 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$4 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$4 = [0]
	
.LABEL $label$6
	CALL eosio_assert($4, [128])
	*(($7 + [72])) = (int_64)1397703940
	*($7 + [64]) = (int_64)0
	CALL eosio_assert([1], [464])
	$5 = (int_64)5459781
	$6 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$4 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$4 = [0]
	
.LABEL $label$11
	CALL eosio_assert($4, [128])
	*($7 + [80]) = [0]
	CALL $91(($7 + [88]), ($7 + [168]), $3, ($7 + [8]))
	*($7 + [88]) = $1
	$1 = *($2)
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [464])
	$5 = (int_64)1212369234
	$6 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$4 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$4 = [0]
	
.LABEL $label$16
	CALL eosio_assert($4, [128])
	CALL eosio_assert(((int_64)310366523908 == (int_64)*(($7 + [120]))), [224])
	$5 = ((int_64)*($7 + [112]) + (int_64)$1)
	*($7 + [112]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($7 + [112]) < (int_64)4611686018427387904), [304])
	CALL $81(($7 + [168]), ($7 + [88]), *($0))
	$0 = *($7 + [192])
	if ( ($0 == 0) ){ goto $label$21 }
	$2 = ($7 + [196])
	$6 = *($2)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$23 }
	
.LOOP $label$24:
	$6 = ($6 + [-24])
	$4 = *($6)
	*($6) = [0]
	if ( ($4 == 0) ){ goto $label$25 }
	CALL $310($4)
	
.LABEL $label$25
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$24 }
	$6 = *(($7 + [192]))
	goto $label$22 
	
.LABEL $label$23
	$6 = $0
	
.LABEL $label$22
	*($2) = $0
	CALL $310($6)
	
.LABEL $label$21
	*([0] + [4]) = ($7 + [208])
}

void .FUNC $184 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [576])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [624])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [688])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $310($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $310($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [44]))
}

void .FUNC $187 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [784])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($0, *($2 + [4]), [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $1) > (uint_32)[7]), [784])
	CALL memcpy(($0 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

int_32 .FUNC $186 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)0
	*(($2 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [464])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [128])
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [464])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [128])
	return $0
}

void .FUNC _ZN12richrichrich8claimdevEv (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [352])
	*([0] + [4]) = $11
	CALL require_auth(*($0))
	CALL memset(($11 + [48]), [0], [152])
	$4 = CALL $120(($11 + [48]))
	$1 = ($0 + [128])
	$9 = *(($0 + [156]))
	if ( ((int_32)$9 == (int_32)*(($0 + [152]))) ){ goto $label$3 }
	$9 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [152]) == (int_32)$1), [64])
	if ( $9 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$9 = CALL db_find_i64(*($1), *(($0 + [136])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $121($1, $9)
	CALL eosio_assert(((int_32)*($9 + [152]) == (int_32)$1), [64])
	
.LABEL $label$2
	$4 = $9
	
.LABEL $label$1
	CALL memcpy(($11 + [200]), $4, [152])
	CALL eosio_assert([1], [464])
	$6 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$9 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$9 = [0]
	
.LABEL $label$4
	CALL eosio_assert($9, [128])
	$6 = *($11 + [240])
	$2 = *(($11 + [248]))
	CALL eosio_assert(((int_64)*(($11 + [264])) == (int_64)$2), [224])
	$3 = ((int_64)$6 + (int_64)*($11 + [256]))
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [304])
	$6 = (int_64)0
	CALL eosio_assert(((int_64)$3 > (int_64)0), [2096])
	$5 = (int_64)59
	$4 = [1248]
	$7 = (int_64)0
	
.LOOP $label$9:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$10 }
	$9 = *($4)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$9 = ($9 + [165])
	goto $label$11 
	
.LABEL $label$12
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$10
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$9 }
	*($11 + [40]) = $2
	*(($11 + [24])) = [0]
	*($11 + [32]) = $3
	*($11 + [16]) = (int_64)0
	$4 = CALL strlen([2112])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$13 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$16 }
	*($11 + [16]) = ($4 << [1])
	$10 = (($11 + [16]) | [1])
	if ( $4 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$9 = (($4 + [16]) & [-16])
	$10 = CALL $309($9)
	*($11 + [16]) = ($9 | [1])
	*($11 + [24]) = $10
	*($11 + [20]) = $4
	
.LABEL $label$15
	CALL memcpy($10, [2112], $4)
	
.LABEL $label$14
	$9 = [0]
	*(($10 + $4)) = [0]
	*(($11 + [8])) = *((($11 + [32]) + [8]))
	*($11) = *($11 + [32])
	CALL $49($0, $7, $11, ($11 + [16]))
	if ( ((*($11 + [16]) & [1]) == 0) ){ goto $label$17 }
	CALL $310(*($11 + [24]))
	
.LABEL $label$17
	CALL eosio_assert([1], [464])
	$6 = (int_64)5459781
	
.LOOP $label$20:
	$4 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$21 }
	
.LOOP $label$22:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$22 }
	
.LABEL $label$21
	$10 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	$10 = [0]
	
.LABEL $label$18
	CALL eosio_assert($10, [128])
	*(($11 + [248])) = (int_64)1397703940
	*(($11 + [240])) = (int_64)0
	CALL eosio_assert([1], [464])
	$6 = (int_64)5459781
	
.LOOP $label$24:
	$9 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$23 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$25 }
	
.LOOP $label$26:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$23 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$26 }
	
.LABEL $label$25
	$9 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$24 }
	
.LABEL $label$23
	CALL eosio_assert($9, [128])
	*(($11 + [264])) = (int_64)1397703940
	*(($11 + [256])) = (int_64)0
	CALL $122($1, ($11 + [200]), *($0))
	*([0] + [4]) = ($11 + [352])
	return (unreachable)
	
.LABEL $label$13
	CALL $311(($11 + [16]))
}

void .FUNC $310 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

void .FUNC $311 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC _ZN12richrichrich4testEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	*(($6 + [16])) = (int_64)1398362884
	*($6 + [8]) = (int_64)0
	*($6) = (int_64)0
	CALL eosio_assert([1], [464])
	$2 = ($0 + [848])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [128])
	$4 = *(($0 + [876]))
	if ( ((int_32)$4 == (int_32)*(($0 + [872]))) ){ goto $label$8 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [24]) == (int_32)$2), [64])
	if ( $4 ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	$4 = CALL db_find_i64(*(($0 + [848])), *(($0 + [856])), (int_64)4154289181272571904, (int_64)4154289181272571904)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$7 }
	$4 = CALL $77($2, $4)
	CALL eosio_assert(((int_32)*($4 + [24]) == (int_32)$2), [64])
	goto $label$6 
	
.LABEL $label$7
	$4 = $6
	
.LABEL $label$6
	*((($6 + [24]) + [16])) = *(($4 + [16]))
	*((($6 + [24]) + [8])) = *(($4 + [8]))
	*($6 + [24]) = *($4)
	CALL eosio_assert([1], [464])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$5 = [0]
	
.LABEL $label$9
	CALL eosio_assert($5, [128])
	*(($6 + [40])) = (int_64)1397703940
	*($6 + [32]) = (int_64)0
	CALL $80($2, ($6 + [24]), *($0))
	*([0] + [4]) = ($6 + [48])
}

int_32 .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = (*([0] + [4]) - [32])
	$7 = $5
	*([0] + [4]) = $5
	$2 = *($1 + [4])
	$6 = *($1)
	$4 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($5 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($7 + [8]) = (int_64)0
	*($7 + [16]) = [0]
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [784])
	CALL memcpy(($7 + [8]), $4, [8])
	CALL eosio_assert(((int_32)$1 != (int_32)[8]), [784])
	CALL memcpy(($7 + [31]), ($4 + [8]), [1])
	$5 = ((int_32)*($7 + [31]) != (int_32)[0])
	*($7 + [16]) = $5
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($4)
	$5 = *((($7 + [8]) + [8]))
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$3 = *($7 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($1) + $6))
	
.LABEL $label$5
	CALL void $1((int_32 $3), (int_64 ((int_32)($5 & [255]) != (int_32)[0])), (int_32 $6))
	*([0] + [4]) = ($7 + [32])
	return [1]
}

void .FUNC _ZN12richrichrich8playdiceEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [208])
	*([0] + [4]) = $12
	CALL eosio_assert(((int_64)$2 == (int_64)2010), [2640])
	CALL eosio_assert(((uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$4() / (uint_64)(int_64)1000000)) > (uint_32)[1547294400]), [2656])
	CALL require_auth($1)
	CALL eosio_assert(((int_32)CALL $45($0, $1) ^ (int_32)[1]), [48])
	$8 = [0]
	*((($12 + [168]) + [32])) = [0]
	*($12 + [176]) = $1
	*($12 + [184]) = (int_64)-1
	*($12 + [192]) = (int_64)0
	$9 = *($0)
	*($12 + [168]) = $9
	*((($12 + [8]) + [32])) = (int_64)310366523908
	*($12 + [16]) = [0]
	*($12 + [8]) = (int_64)0
	*($12 + [24]) = (int_64)0
	*($12 + [32]) = (int_64)0
	CALL eosio_assert([1], [464])
	$2 = (int_64)1212369234
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [128])
	*(($12 + [56])) = (int_64)310366523908
	*($12 + [48]) = (int_64)0
	CALL eosio_assert([1], [464])
	$2 = (int_64)1212369234
	$8 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$7 = [0]
	
.LABEL $label$6
	CALL eosio_assert($7, [128])
	*(($12 + [72])) = (int_64)1397703940
	*($12 + [64]) = (int_64)0
	CALL eosio_assert([1], [464])
	$2 = (int_64)5459781
	$8 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$7 = [0]
	
.LABEL $label$11
	CALL eosio_assert($7, [128])
	*($12 + [80]) = [0]
	CALL $91(($12 + [88]), ($12 + [168]), $9, ($12 + [8]))
	CALL eosio_assert([1], [464])
	$2 = (int_64)1212369234
	$8 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$7 = [0]
	
.LABEL $label$16
	CALL eosio_assert($7, [128])
	CALL eosio_assert(((int_64)*(($12 + [120])) == (int_64)310366523908), [160])
	CALL eosio_assert(((int_64)*($12 + [112]) > (int_64)49999999), [2688])
	CALL eosio_assert(*($12 + [160]), [2720])
	CALL eosio_assert(((int_32)*($12 + [96]) != (int_32)[1]), [2752])
	$2 = ((int_64)(CASTING uint_64)(uint_32 CALL $209($0, $1, [6])) + (int_64)*($12 + [104]))
	$2 = ( ((int_64)$2 + (int_64)-66) ? $2 : ((uint_64)$2 > (uint_64)(int_64)66) )
	*($12 + [104]) = $2
	$2 = ( (int_64)18 ? ( (int_64)12 ? ((int_64)$2 & (int_64)255) : ((int_64)$2 == (int_64)56) ) : ((int_64)$2 == (int_64)40) )
	$3 = *(($0 + [912]))
	$6 = *(($0 + [916]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$21 }
	$8 = ($6 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$22:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$21 }
	$6 = $8
	$7 = ($8 + [-24])
	$8 = $7
	if ( ((int_32)($7 + $4) != (int_32)[-24]) ){ goto $label$22 }
	
.LABEL $label$21
	$7 = ($0 + [888])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$24 }
	$8 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*(($8 + [52])) == (int_32)$7), [64])
	goto $label$23 
	
.LABEL $label$24
	$8 = [0]
	$6 = CALL db_find_i64(*(($0 + [888])), *(($0 + [896])), (int_64)-7950542192169189376, $2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$23 }
	$8 = CALL $204($7, $6)
	CALL eosio_assert(((int_32)*($8 + [52]) == (int_32)$7), [64])
	
.LABEL $label$23
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [2000])
	$7 = (*(($12 + [104])) + [-16])
	if ( ((uint_32)$7 > (uint_32)[29]) ){ goto $label$26 }
	if ( (uint_32([536870782] >> ($7 & [1073741823])) & [1]) ){ goto $label$26 }
	$8 = ( [4] ? ( [3] ? [0] : *($8 + [48]) ) : ((int_64)*($8) == (int_64)16) )
	goto $label$25 
	
.LABEL $label$26
	$5 = *($8 + [40])
	$2 = (int_64)0
	$9 = (int_64)59
	$8 = [1248]
	$10 = (int_64)0
	
.LOOP $label$27:
	$11 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$28 }
	$7 = *($8)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$30 }
	$7 = ($7 + [165])
	goto $label$29 
	
.LABEL $label$30
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$29
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$28
	$8 = ($8 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$27 }
	$8 = [5]
	if ( ((int_64)$5 == (int_64)$10) ){ goto $label$25 }
	$8 = ( [2] ? [1] : ((int_64)$5 == (int_64)$1) )
	
.LABEL $label$25
	*(($12 + [96])) = $8
	CALL $81(($12 + [168]), ($12 + [88]), *($0))
	$6 = *($12 + [192])
	if ( ($6 == 0) ){ goto $label$31 }
	$4 = ($12 + [196])
	$8 = *($4)
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$33 }
	
.LOOP $label$34:
	$8 = ($8 + [-24])
	$7 = *($8)
	*($8) = [0]
	if ( ($7 == 0) ){ goto $label$35 }
	CALL $310($7)
	
.LABEL $label$35
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$34 }
	$8 = *(($12 + [192]))
	goto $label$32 
	
.LABEL $label$33
	$8 = $6
	
.LABEL $label$32
	*($4) = $6
	CALL $310($8)
	
.LABEL $label$31
	*([0] + [4]) = ($12 + [208])
}

void .FUNC _ZN12richrichrich5startEy (int_32 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [208])
	*([0] + [4]) = $7
	CALL eosio_assert(((uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$4() / (uint_64)(int_64)1000000)) > (uint_32)[1546862400]), [2656])
	CALL require_auth($1)
	CALL eosio_assert(((int_32)CALL $45($0, $1) ^ (int_32)[1]), [48])
	$6 = [0]
	*((($7 + [168]) + [32])) = [0]
	*($7 + [176]) = $1
	*($7 + [184]) = (int_64)-1
	*($7 + [192]) = (int_64)0
	$2 = *($0)
	*($7 + [168]) = $2
	*((($7 + [8]) + [32])) = (int_64)310366523908
	*($7 + [16]) = [0]
	*($7 + [8]) = (int_64)0
	*($7 + [24]) = (int_64)0
	*($7 + [32]) = (int_64)0
	CALL eosio_assert([1], [464])
	$5 = (int_64)1212369234
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [128])
	*(($7 + [56])) = (int_64)310366523908
	*($7 + [48]) = (int_64)0
	CALL eosio_assert([1], [464])
	$5 = (int_64)1212369234
	$6 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [128])
	*(($7 + [72])) = (int_64)1397703940
	*($7 + [64]) = (int_64)0
	CALL eosio_assert([1], [464])
	$5 = (int_64)5459781
	$6 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [128])
	*($7 + [80]) = [0]
	CALL $91(($7 + [88]), ($7 + [168]), $2, ($7 + [8]))
	CALL eosio_assert(((int_32)*($7 + [160]) ^ (int_32)[1]), [2800])
	CALL eosio_assert([1], [464])
	$5 = (int_64)1212369234
	$6 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$3 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$3 = [0]
	
.LABEL $label$16
	CALL eosio_assert($3, [128])
	CALL eosio_assert(((int_64)*(($7 + [120])) == (int_64)310366523908), [160])
	CALL eosio_assert(((int_64)*($7 + [112]) > (int_64)49999999), [2688])
	*(($7 + [160])) = [1]
	$6 = CALL $209($0, $1, [66])
	*($7 + [96]) = [0]
	*($7 + [88]) = $1
	*($7 + [104]) = (CASTING uint_64)(uint_32 $6)
	CALL $81(($7 + [168]), ($7 + [88]), *($0))
	$0 = *($7 + [192])
	if ( ($0 == 0) ){ goto $label$21 }
	$4 = ($7 + [196])
	$6 = *($4)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$23 }
	
.LOOP $label$24:
	$6 = ($6 + [-24])
	$3 = *($6)
	*($6) = [0]
	if ( ($3 == 0) ){ goto $label$25 }
	CALL $310($3)
	
.LABEL $label$25
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$24 }
	$6 = *(($7 + [192]))
	goto $label$22 
	
.LABEL $label$23
	$6 = $0
	
.LABEL $label$22
	*($4) = $0
	CALL $310($6)
	
.LABEL $label$21
	*([0] + [4]) = ($7 + [208])
}

void .FUNC _ZN12richrichrich7payrentEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [464])
	*([0] + [4]) = $10
	CALL require_auth($1)
	CALL eosio_assert(((int_32)CALL $45($0, $1) ^ (int_32)[1]), [48])
	$7 = [0]
	*((($10 + [424]) + [32])) = [0]
	*($10 + [432]) = $1
	*($10 + [440]) = (int_64)-1
	*($10 + [448]) = (int_64)0
	$9 = *($0)
	*($10 + [424]) = $9
	*((($10 + [264]) + [32])) = (int_64)310366523908
	*($10 + [272]) = [0]
	*($10 + [264]) = (int_64)0
	*($10 + [280]) = (int_64)0
	*($10 + [288]) = (int_64)0
	CALL eosio_assert([1], [464])
	$6 = (int_64)1212369234
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [128])
	*(($10 + [312])) = (int_64)310366523908
	*($10 + [304]) = (int_64)0
	CALL eosio_assert([1], [464])
	$6 = (int_64)1212369234
	$7 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [128])
	*(($10 + [328])) = (int_64)1397703940
	*($10 + [320]) = (int_64)0
	CALL eosio_assert([1], [464])
	$6 = (int_64)5459781
	$7 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$5 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$5 = [0]
	
.LABEL $label$11
	CALL eosio_assert($5, [128])
	*($10 + [336]) = [0]
	CALL $91(($10 + [344]), ($10 + [424]), $9, ($10 + [264]))
	CALL eosio_assert(((int_32)*($10 + [352]) == (int_32)[1]), [2464])
	$6 = *($10 + [360])
	$6 = ( (int_64)18 ? ( (int_64)12 ? ((int_64)$6 & (int_64)255) : ((int_64)$6 == (int_64)56) ) : ((int_64)$6 == (int_64)40) )
	$2 = *(($0 + [912]))
	$4 = *(($0 + [916]))
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$16 }
	$7 = ($4 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$17:
	if ( ((int_64)*(*($7)) == (int_64)$6) ){ goto $label$16 }
	$4 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $3) != (int_32)[-24]) ){ goto $label$17 }
	
.LABEL $label$16
	$7 = ($0 + [888])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$19 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*(($4 + [52])) == (int_32)$7), [64])
	goto $label$18 
	
.LABEL $label$19
	$4 = CALL $204($7, CALL $fimport$6(*(($0 + [888])), *(($0 + [896])), (int_64)-7950542192169189376, $6))
	CALL eosio_assert(((int_32)*($4 + [52]) == (int_32)$7), [64])
	
.LABEL $label$18
	CALL eosio_assert(((int_64)*($4 + [40]) != (int_64)$1), [2496])
	CALL $205(($10 + [264]), $4)
	$7 = (($10 + [344]) + [32])
	CALL eosio_assert(((int_64)*($7) == (int_64)*($10 + [272])), [160])
	CALL eosio_assert(((int_64)*($10 + [368]) >= (int_64)*($10 + [264])), [2544])
	CALL $205(($10 + [264]), $4)
	CALL eosio_assert(((int_64)*($10 + [272]) == (int_64)*($7)), [1280])
	$6 = (int_64)
	*($10 + [368]) = $6(*($10 + [368]) - *($10 + [264])))
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [1328])
	CALL eosio_assert(((int_64)*($10 + [368]) < (int_64)4611686018427387904), [1360])
	*(($10 + [352])) = [0]
	CALL $81(($10 + [424]), ($10 + [344]), *($0))
	*($10 + [240]) = (int_64)-1
	*($10 + [248]) = [0]
	$1 = *($0)
	*($10 + [224]) = $1
	*($10 + [232]) = *($4 + [40])
	*(($10 + [252])) = [0]
	*((($10 + [224]) + [32])) = [0]
	*(($7 = (($10 + [144]) + [32]))) = (int_64)310366523908
	*($10 + [152]) = [0]
	*($10 + [144]) = (int_64)0
	*($10 + [160]) = (int_64)0
	*($10 + [168]) = (int_64)0
	CALL eosio_assert([1], [464])
	$6 = (uint_64)*($7) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$22:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$21 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$23 }
	
.LOOP $label$24:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$21 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$24 }
	
.LABEL $label$23
	$5 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	$5 = [0]
	
.LABEL $label$20
	CALL eosio_assert($5, [128])
	*(($7 = ($10 + [192]))) = (int_64)310366523908
	*($10 + [184]) = (int_64)0
	CALL eosio_assert([1], [464])
	$6 = (uint_64)*($7) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$27:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$26 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$28 }
	
.LOOP $label$29:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$26 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$29 }
	
.LABEL $label$28
	$5 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$27 }
	goto $label$25 
	
.LABEL $label$26
	$5 = [0]
	
.LABEL $label$25
	CALL eosio_assert($5, [128])
	*(($7 = ($10 + [208]))) = (int_64)1397703940
	*($10 + [200]) = (int_64)0
	CALL eosio_assert([1], [464])
	$6 = (uint_64)*($7) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$32:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$31 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$33 }
	
.LOOP $label$34:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$31 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$34 }
	
.LABEL $label$33
	$5 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$32 }
	goto $label$30 
	
.LABEL $label$31
	$5 = [0]
	
.LABEL $label$30
	CALL eosio_assert($5, [128])
	*($10 + [216]) = [0]
	CALL $91(($10 + [264]), ($10 + [224]), $1, ($10 + [144]))
	CALL $205(($10 + [144]), $4)
	$6 = *($10 + [144])
	CALL __multi3(($10 + [64]), $6, (int_64)$6 >> (int_64)63), (int_64)5, (int_64)0)
	$9 = *($10 + [152])
	$6 = *((($10 + [64]) + [8]))
	$1 = *($10 + [64])
	CALL eosio_assert(( (uint_64)($1 <= (int_64)4611686018427387904) ? ((int_64)$6 < (int_64)0) : (int_64)($6 == 0) ), [1408])
	CALL eosio_assert(( ((uint_64)$1 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$6 > (int_64)-1) : ((int_64)$6 == (int_64)-1) ), [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	CALL eosio_assert(((int_64)$9 == (int_64)*(($10 + [312]))), [224])
	$6 = ((int_64)*($10 + [304]) + (int_64)((int_64)$1 / (int_64)10))
	*($10 + [304]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($10 + [304]) < (int_64)4611686018427387904), [304])
	CALL $81(($10 + [224]), ($10 + [264]), *($0))
	CALL $205(($10 + [144]), $4)
	if ( ((int_64)*($10 + [144]) < (int_64)1) ){ goto $label$37 }
	$8 = *(($4 + [40]))
	CALL $205(($10 + [144]), $4)
	$6 = *($10 + [144])
	CALL __multi3(($10 + [48]), $6, (int_64)$6 >> (int_64)63), (int_64)5, (int_64)0)
	$9 = *($10 + [152])
	$6 = *((($10 + [48]) + [8]))
	$1 = *($10 + [48])
	CALL eosio_assert(( (uint_64)($1 <= (int_64)4611686018427387904) ? ((int_64)$6 < (int_64)0) : (int_64)($6 == 0) ), [1408])
	CALL eosio_assert(( ((uint_64)$1 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$6 > (int_64)-1) : ((int_64)$6 == (int_64)-1) ), [1440])
	*($10 + [136]) = $9
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	*((($10 + [112]) + [8])) = [0]
	*($10 + [128]) = ((int_64)$1 / (int_64)10)
	*($10 + [112]) = (int_64)0
	$7 = CALL strlen([2592])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$36 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$40 }
	*($10 + [112]) = ($7 << [1])
	$5 = (($10 + [112]) | [1])
	if ( $7 ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$40
	$3 = (($7 + [16]) & [-16])
	$5 = CALL $309($3)
	*($10 + [112]) = ($3 | [1])
	*($10 + [120]) = $5
	*($10 + [116]) = $7
	
.LABEL $label$39
	CALL memcpy($5, [2592], $7)
	
.LABEL $label$38
	*(($5 + $7)) = [0]
	*((($10 + [32]) + [8])) = *((($10 + [128]) + [8]))
	*($10 + [32]) = *($10 + [128])
	CALL $182($0, $8, ($10 + [32]), ($10 + [112]))
	if ( ((*($10 + [112]) & [1]) == 0) ){ goto $label$41 }
	CALL $310(*($10 + [120]))
	
.LABEL $label$41
	$6 = (int_64)0
	$1 = (int_64)59
	$7 = [2608]
	$8 = (int_64)0
	
.LOOP $label$42:
	$9 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$43 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$45 }
	$5 = ($5 + [165])
	goto $label$44 
	
.LABEL $label$45
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$44
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$43
	$7 = ($7 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$1 = ((int_64)$1 + (int_64)-5)
	if ( ((int_64)$1 != (int_64)-6) ){ goto $label$42 }
	CALL $205(($10 + [144]), $4)
	$6 = *($10 + [144])
	CALL __multi3(($10 + [16]), $6, (int_64)$6 >> (int_64)63), (int_64)5, (int_64)0)
	$9 = *($10 + [152])
	$6 = *((($10 + [16]) + [8]))
	$1 = *($10 + [16])
	CALL eosio_assert(( (uint_64)($1 <= (int_64)4611686018427387904) ? ((int_64)$6 < (int_64)0) : (int_64)($6 == 0) ), [1408])
	CALL eosio_assert(( ((uint_64)$1 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$6 > (int_64)-1) : ((int_64)$6 == (int_64)-1) ), [1440])
	*($10 + [104]) = $9
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	*((($10 + [80]) + [8])) = [0]
	*($10 + [96]) = ((int_64)$1 / (int_64)10)
	*($10 + [80]) = (int_64)0
	$7 = CALL strlen([2624])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$35 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$48 }
	*($10 + [80]) = ($7 << [1])
	$5 = (($10 + [80]) | [1])
	if ( $7 ){ goto $label$47 }
	goto $label$46 
	
.LABEL $label$48
	$4 = (($7 + [16]) & [-16])
	$5 = CALL $309($4)
	*($10 + [80]) = ($4 | [1])
	*($10 + [88]) = $5
	*($10 + [84]) = $7
	
.LABEL $label$47
	CALL memcpy($5, [2624], $7)
	
.LABEL $label$46
	*(($5 + $7)) = [0]
	*(($10 + [8])) = *((($10 + [96]) + [8]))
	*($10) = *($10 + [96])
	CALL $182($0, $8, $10, ($10 + [80]))
	if ( ((*($10 + [80]) & [1]) == 0) ){ goto $label$37 }
	CALL $310(*($10 + [88]))
	
.LABEL $label$37
	$4 = *($10 + [248])
	if ( ($4 == 0) ){ goto $label$49 }
	$0 = ($10 + [252])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$51 }
	
.LOOP $label$52:
	$7 = ($7 + [-24])
	$5 = *($7)
	*($7) = [0]
	if ( ($5 == 0) ){ goto $label$53 }
	CALL $310($5)
	
.LABEL $label$53
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$52 }
	$7 = *(($10 + [248]))
	goto $label$50 
	
.LABEL $label$51
	$7 = $4
	
.LABEL $label$50
	*($0) = $4
	CALL $310($7)
	
.LABEL $label$49
	$4 = *($10 + [448])
	if ( ($4 == 0) ){ goto $label$54 }
	$0 = ($10 + [452])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$56 }
	
.LOOP $label$57:
	$7 = ($7 + [-24])
	$5 = *($7)
	*($7) = [0]
	if ( ($5 == 0) ){ goto $label$58 }
	CALL $310($5)
	
.LABEL $label$58
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$57 }
	$7 = *(($10 + [448]))
	goto $label$55 
	
.LABEL $label$56
	$7 = $4
	
.LABEL $label$55
	*($0) = $4
	CALL $310($7)
	
.LABEL $label$54
	*([0] + [4]) = ($10 + [464])
	return (unreachable)
	
.LABEL $label$36
	CALL $311(($10 + [112]))
	
.LABEL $label$35
	CALL $311(($10 + [80]))
	(unreachable)
}

int_32 .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = (*([0] + [4]) - [16])
	$8 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	$6 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8 + [8]) = (int_64)0
	*($8) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [784])
	CALL memcpy($8, $6, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [784])
	$5 = ($8 + [8])
	CALL memcpy($5, ($6 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($5)
	$3 = *($8)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$7 = *((*($1) + $7))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $7))
	*([0] + [4]) = ($8 + [16])
	return [1]
}

void .FUNC _ZN12richrichrich10claimtokenEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [384])
	*([0] + [4]) = $7
	CALL require_auth($1)
	CALL eosio_assert(((int_32)CALL $45($0, $1) ^ (int_32)[1]), [48])
	*(($7 + [376])) = [0]
	*($7 + [352]) = $1
	*($7 + [360]) = (int_64)-1
	*($7 + [368]) = (int_64)0
	*($7 + [344]) = *($0)
	CALL memset(($7 + [192]), [0], [64])
	$6 = CALL $154(($7 + [192]))
	$2 = ($0 + [248])
	$4 = *(($0 + [276]))
	if ( ((int_32)$4 == (int_32)*(($0 + [272]))) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [64]) == (int_32)$2), [64])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($2), *(($0 + [256])), (int_64)3932090329724878848, (int_64)3932090329724878848)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $155($2, $4)
	CALL eosio_assert(((int_32)*($4 + [64]) == (int_32)$2), [64])
	
.LABEL $label$2
	$6 = $4
	
.LABEL $label$1
	$3 = *($6)
	CALL eosio_assert([1], [464])
	$5 = (int_64)1212369234
	$6 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$2 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	
.LABEL $label$4
	CALL eosio_assert($2, [128])
	$5 = (int_64)0
	$4 = ($7 + [352])
	$6 = CALL db_lowerbound_i64(*($7 + [344]), *($4), (int_64)3932090330173844992, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$9 }
	$5 = (int_64)0
	
.LOOP $label$10:
	$6 = CALL $183(($7 + [344]), $6)
	if ( ((int_64)*($6) == (int_64)$3) ){ goto $label$9 }
	CALL eosio_assert(((int_64)*(($6 + [16])) == (int_64)310366523908), [224])
	$5 = ((int_64)*($6 + [8]) + (int_64)$5)
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)$5 < (int_64)4611686018427387904), [304])
	CALL eosio_assert([1], [336])
	CALL eosio_assert([1], [384])
	$2 = CALL db_next_i64(*($6 + [44]), ($7 + [192]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$11 }
	CALL $183(($7 + [344]), $2)
	
.LABEL $label$11
	CALL $184(($7 + [344]), $6)
	$6 = CALL db_lowerbound_i64(*($7 + [344]), *($4), (int_64)3932090330173844992, (int_64)0)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$10 }
	
.LABEL $label$9
	CALL eosio_assert(((int_64)$5 > (int_64)0), [2176])
	CALL memset(($7 + [40]), [0], [152])
	$2 = CALL $120(($7 + [40]))
	$6 = ($0 + [128])
	$4 = *(($0 + [156]))
	if ( ((int_32)$4 == (int_32)*(($0 + [152]))) ){ goto $label$14 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [152]) == (int_32)$6), [64])
	if ( $4 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$4 = CALL db_find_i64(*($6), *(($0 + [136])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$12 }
	$4 = CALL $121($6, $4)
	CALL eosio_assert(((int_32)*($4 + [152]) == (int_32)$6), [64])
	
.LABEL $label$13
	$2 = $4
	
.LABEL $label$12
	CALL memcpy(($7 + [192]), $2, [152])
	CALL eosio_assert(((int_64)310366523908 == (int_64)*(($7 + [320]))), [1280])
	$3 = (int_64)
	*($7 + [312]) = $3(*($7 + [312]) - $5))
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [1328])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [1360])
	CALL $122($6, ($7 + [192]), *($0))
	*($7 + [32]) = (int_64)310366523908
	*(($7 + [16])) = (int_64)310366523908
	*($7 + [24]) = $5
	*($7 + [8]) = $5
	CALL $185($0, $1, ($7 + [8]))
	$0 = *($7 + [368])
	if ( ($0 == 0) ){ goto $label$15 }
	$4 = ($7 + [372])
	$6 = *($4)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$17 }
	
.LOOP $label$18:
	$6 = ($6 + [-24])
	$2 = *($6)
	*($6) = [0]
	if ( ($2 == 0) ){ goto $label$19 }
	CALL $310($2)
	
.LABEL $label$19
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$18 }
	$6 = *(($7 + [368]))
	goto $label$16 
	
.LABEL $label$17
	$6 = $0
	
.LABEL $label$16
	*($4) = $0
	CALL $310($6)
	
.LABEL $label$15
	*([0] + [4]) = ($7 + [384])
}

void .FUNC _ZN12richrichrich8claimkeyEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_32 $21
	int_32 $22
	int_64 $23
	int_64 $24
	int_64 $25
	int_32 $26
	$26 = (*([0] + [4]) - [288])
	*([0] + [4]) = $26
	CALL require_auth($1)
	CALL eosio_assert(((int_32)CALL $45($0, $1) ^ (int_32)[1]), [48])
	$8 = [0]
	*(($26 + [168])) = [0]
	*($26 + [144]) = $1
	*($26 + [160]) = (int_64)0
	*($26 + [136]) = *($0)
	$2 = ($0 + [288])
	*($26 + [152]) = (int_64)-1
	$21 = ($0 + [304])
	$20 = *($21)
	if ( ((int_64)$20 != (int_64)-1) ){ goto $label$1 }
	$20 = (int_64)0
	$19 = CALL db_lowerbound_i64(*($2), *(($0 + [296])), (int_64)-9026118753610891264, (int_64)0)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$2 }
	CALL $156($2, $19)
	*($26 + [180]) = [0]
	*($26 + [176]) = $2
	$20 = *(*(CALL $189(($26 + [176])) + [4]))
	$20 = ( (int_64)-2 ? ((int_64)$20 + (int_64)1) : ((uint_64)$20 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($0 + [304])) = $20
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($20 <= (int_64)-2), [2208])
	$20 = *($21)
	CALL eosio_assert([1], [464])
	$10 = ((int_64)$20 + (int_64)-1)
	$20 = (int_64)5459781
	
.LOOP $label$5:
	$21 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $20) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$20 = (uint_64)$20 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$20) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$20 = (uint_64)$20 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$20) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$19 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$19 = [0]
	
.LABEL $label$3
	CALL eosio_assert($19, [128])
	*($26 + [128]) = (int_64)1397703940
	*($26 + [120]) = (int_64)0
	CALL eosio_assert([1], [464])
	$20 = (uint_64)*($26 + [128]) >> (uint_64)(int_64)8)
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $20) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$20 = (uint_64)$20 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$20) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$20 = (uint_64)$20 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$20) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$21 = ($21 + [1])
	if ( ((int_32)$21 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$8 = [1]
	$21 = ($21 + [1])
	if ( ((int_32)$21 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$8 = [0]
	
.LABEL $label$8
	CALL eosio_assert($8, [128])
	*((($26 + [40]) + [8])) = *((($26 + [120]) + [8]))
	*($26 + [40]) = *($26 + [120])
	CALL $190($0, $1, ($26 + [40]))
	$23 = (int_64)0
	$5 = (int_64)0
	$11 = (($26 + [136]) + [8])
	$21 = CALL db_lowerbound_i64(*($26 + [136]), *($11), (int_64)-9026229453371588608, (int_64)0)
	if ( ((int_32)$21 < (int_32)[0]) ){ goto $label$13 }
	$4 = ((int_64)1397703940 == (int_64)1397703940)
	$3 = (($26 + [176]) + [60])
	$12 = ($0 + [312])
	$13 = ($0 + [316])
	$14 = ($0 + [296])
	$15 = ($0 + [288])
	$16 = ($26 + [276])
	$17 = (($26 + [264]) + [16])
	$18 = ($0 + [304])
	$5 = (int_64)0
	
.LOOP $label$14:
	$6 = CALL $191(($26 + [136]), $21)
	$20 = *($6)
	if ( ((int_64)$20 == (int_64)$10) ){ goto $label$13 }
	$25 = *($6 + [8])
	$22 = *($12)
	$19 = *($13)
	if ( ((int_32)$19 == (int_32)$22) ){ goto $label$15 }
	$21 = ($19 + [-24])
	$7 = ([0] - $22)
	
.LOOP $label$16:
	if ( ((int_64)*(*($21)) == (int_64)$20) ){ goto $label$15 }
	$19 = $21
	$8 = ($21 + [-24])
	$21 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ((int_32)$19 == (int_32)$22) ){ goto $label$18 }
	$21 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($21 + [60]) == (int_32)$2), [64])
	goto $label$17 
	
.LABEL $label$18
	$21 = CALL $156($2, CALL $fimport$6(*($15), *($14), (int_64)-9026118753610891264, $20))
	CALL eosio_assert(((int_32)*($21 + [60]) == (int_32)$2), [64])
	
.LABEL $label$17
	$20 = *($6)
	$24 = *($21 + [24])
	$22 = *($12)
	$19 = *($13)
	if ( ((int_32)$19 == (int_32)$22) ){ goto $label$19 }
	$21 = ($19 + [-24])
	$7 = ([0] - $22)
	
.LOOP $label$20:
	if ( ((int_64)*(*($21)) == (int_64)$20) ){ goto $label$19 }
	$19 = $21
	$8 = ($21 + [-24])
	$21 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$20 }
	
.LABEL $label$19
	if ( ((int_32)$19 == (int_32)$22) ){ goto $label$22 }
	$21 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($21 + [60]) == (int_32)$2), [64])
	goto $label$21 
	
.LABEL $label$22
	$21 = CALL $156($2, CALL $fimport$6(*($15), *($14), (int_64)-9026118753610891264, $20))
	CALL eosio_assert(((int_32)*($21 + [60]) == (int_32)$2), [64])
	
.LABEL $label$21
	$25 = ((int_64)((int_64)*($21 + [8]) * (int_64)$25) / (int_64)$24)
	CALL eosio_assert((uint_64)(((int_64)$25 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [464])
	$20 = (int_64)5459781
	$21 = [0]
	
.LOOP $label$25:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $20) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$24 }
	$20 = (uint_64)$20 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$20) & (int_64)255) != (int_64)0) ){ goto $label$26 }
	
.LOOP $label$27:
	$20 = (uint_64)$20 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$20) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	$21 = ($21 + [1])
	if ( ((int_32)$21 < (int_32)[7]) ){ goto $label$27 }
	
.LABEL $label$26
	$8 = [1]
	$21 = ($21 + [1])
	if ( ((int_32)$21 < (int_32)[7]) ){ goto $label$25 }
	goto $label$23 
	
.LABEL $label$24
	$8 = [0]
	
.LABEL $label$23
	CALL eosio_assert($8, [128])
	CALL eosio_assert($4, [224])
	$5 = ((int_64)$25 + (int_64)$5)
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)$5 < (int_64)4611686018427387904), [304])
	CALL eosio_assert([1], [336])
	CALL eosio_assert([1], [384])
	$21 = CALL db_next_i64(*($6 + [28]), ($26 + [176]))
	if ( ((int_32)$21 < (int_32)[0]) ){ goto $label$28 }
	CALL $191(($26 + [136]), $21)
	
.LABEL $label$28
	CALL $192(($26 + [136]), $6)
	$20 = *($6)
	$22 = *($12)
	$19 = *($13)
	if ( ((int_32)$19 == (int_32)$22) ){ goto $label$29 }
	$21 = ($19 + [-24])
	$7 = ([0] - $22)
	
.LOOP $label$30:
	if ( ((int_64)*(*($21)) == (int_64)$20) ){ goto $label$29 }
	$19 = $21
	$8 = ($21 + [-24])
	$21 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$30 }
	
.LABEL $label$29
	if ( ((int_32)$19 == (int_32)$22) ){ goto $label$32 }
	$21 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($21 + [60]) == (int_32)$2), [64])
	goto $label$31 
	
.LABEL $label$32
	$21 = [0]
	$8 = CALL db_find_i64(*($15), *($14), (int_64)-9026118753610891264, $20)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$31 }
	$21 = CALL $156($2, $8)
	CALL eosio_assert(((int_32)*($21 + [60]) == (int_32)$2), [64])
	
.LABEL $label$31
	CALL eosio_assert(((int_32)$21 != (int_32)[0]), [848])
	CALL eosio_assert(((int_32)*($21 + [60]) == (int_32)$2), [960])
	CALL eosio_assert(((int_64)*($15) == (int_64)CALL $fimport$3()), [1008])
	$20 = *($21)
	CALL eosio_assert(((int_64)*(($21 + [48])) == (int_64)1397703940), [224])
	$25 = ((int_64)*($21 + [40]) + (int_64)$25)
	*($21 + [40]) = $25
	CALL eosio_assert(((int_64)$25 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($21 + [40]) < (int_64)4611686018427387904), [304])
	CALL eosio_assert(((int_64)$20 == (int_64)*($21)), [1072])
	*((($26 + [240]) + [8])) = $3
	*($26 + [244]) = ($26 + [176])
	*($26 + [240]) = ($26 + [176])
	*($26 + [256]) = ($26 + [240])
	*((($26 + [264]) + [8])) = ($21 + [24])
	*($16) = ($21 + [40])
	*($17) = ($21 + [56])
	*($26 + [268]) = ($21 + [8])
	*($26 + [264]) = $21
	CALL $193(($26 + [264]), ($26 + [256]))
	CALL db_update_i64(*($21 + [64]), (int_64)0, ($26 + [176]), [60])
	if ( (uint_64)($20 <= *($18)) ){ goto $label$33 }
	*($18) = ( (int_64)-2 ? ((int_64)$20 + (int_64)1) : ((uint_64)$20 > (uint_64)(int_64)-3) )
	
.LABEL $label$33
	$20 = *($6)
	$22 = *($12)
	$19 = *($13)
	if ( ((int_32)$19 == (int_32)$22) ){ goto $label$34 }
	$21 = ($19 + [-24])
	$7 = ([0] - $22)
	
.LOOP $label$35:
	if ( ((int_64)*(*($21)) == (int_64)$20) ){ goto $label$34 }
	$19 = $21
	$8 = ($21 + [-24])
	$21 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$35 }
	
.LABEL $label$34
	if ( ((int_32)$19 == (int_32)$22) ){ goto $label$37 }
	$22 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($22 + [60]) == (int_32)$2), [64])
	goto $label$36 
	
.LABEL $label$37
	$22 = [0]
	$21 = CALL db_find_i64(*($15), *($14), (int_64)-9026118753610891264, $20)
	if ( ((int_32)$21 < (int_32)[0]) ){ goto $label$36 }
	$22 = CALL $156($2, $21)
	CALL eosio_assert(((int_32)*($22 + [60]) == (int_32)$2), [64])
	
.LABEL $label$36
	$20 = *($6)
	$9 = *($12)
	$19 = *($13)
	if ( ((int_32)$19 == (int_32)$9) ){ goto $label$38 }
	$21 = ($19 + [-24])
	$7 = ([0] - $9)
	
.LOOP $label$39:
	if ( ((int_64)*(*($21)) == (int_64)$20) ){ goto $label$38 }
	$19 = $21
	$8 = ($21 + [-24])
	$21 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$39 }
	
.LABEL $label$38
	if ( ((int_32)$19 == (int_32)$9) ){ goto $label$41 }
	$21 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($21 + [60]) == (int_32)$2), [64])
	goto $label$40 
	
.LABEL $label$41
	$21 = [0]
	$8 = CALL db_find_i64(*($15), *($14), (int_64)-9026118753610891264, $20)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$40 }
	$21 = CALL $156($2, $8)
	CALL eosio_assert(((int_32)*($21 + [60]) == (int_32)$2), [64])
	
.LABEL $label$40
	CALL eosio_assert(((int_64)*(($22 + [16])) == (int_64)*(($21 + [48]))), [160])
	if ( ((int_64)*($22 + [8]) != (int_64)*($21 + [40])) ){ goto $label$42 }
	$20 = *($6)
	$6 = *($12)
	$19 = *($13)
	if ( ((int_32)$19 == (int_32)$6) ){ goto $label$43 }
	$21 = ($19 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$44:
	if ( ((int_64)*(*($21)) == (int_64)$20) ){ goto $label$43 }
	$19 = $21
	$8 = ($21 + [-24])
	$21 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$44 }
	
.LABEL $label$43
	if ( ((int_32)$19 == (int_32)$6) ){ goto $label$46 }
	$21 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($21 + [60]) == (int_32)$2), [64])
	goto $label$45 
	
.LABEL $label$46
	$21 = [0]
	$8 = CALL db_find_i64(*($15), *($14), (int_64)-9026118753610891264, $20)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$45 }
	$21 = CALL $156($2, $8)
	CALL eosio_assert(((int_32)*($21 + [60]) == (int_32)$2), [64])
	
.LABEL $label$45
	$8 = ((int_32)$21 != (int_32)[0])
	CALL eosio_assert($8, [336])
	CALL eosio_assert($8, [384])
	$8 = CALL db_next_i64(*($21 + [64]), ($26 + [176]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$47 }
	CALL $156($2, $8)
	
.LABEL $label$47
	CALL $194($2, $21)
	
.LABEL $label$42
	$21 = CALL db_lowerbound_i64(*($26 + [136]), *($11), (int_64)-9026229453371588608, (int_64)0)
	if ( ((int_32)$21 > (int_32)[-1]) ){ goto $label$14 }
	
.LABEL $label$13
	CALL eosio_assert(((int_64)$5 > (int_64)0), [2176])
	$20 = (int_64)59
	$21 = [2272]
	$24 = (int_64)0
	
.LOOP $label$48:
	$25 = (int_64)0
	if ( ((uint_64)$23 > (uint_64)(int_64)11) ){ goto $label$49 }
	$8 = *($21)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$51 }
	$8 = ($8 + [165])
	goto $label$50 
	
.LABEL $label$51
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$50
	$25 = ((int_64)(CASTING uint_64)(uint_32 ($8 & [31])) << (int_64)((int_64)$20 & (int_64)4294967295))
	
.LABEL $label$49
	$21 = ($21 + [1])
	$23 = ((int_64)$23 + (int_64)1)
	$24 = ((int_64)$25 | (int_64)$24)
	$20 = ((int_64)$20 + (int_64)-5)
	if ( ((int_64)$20 != (int_64)-6) ){ goto $label$48 }
	if ( ((int_64)$24 != (int_64)$1) ){ goto $label$63 }
	$20 = (int_64)0
	$23 = (int_64)59
	$21 = [2288]
	$24 = (int_64)0
	
.LOOP $label$64:
	$25 = (int_64)0
	if ( ((uint_64)$20 > (uint_64)(int_64)11) ){ goto $label$65 }
	$8 = *($21)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$67 }
	$8 = ($8 + [165])
	goto $label$66 
	
.LABEL $label$67
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$66
	$25 = ((int_64)(CASTING uint_64)(uint_32 ($8 & [31])) << (int_64)((int_64)$23 & (int_64)4294967295))
	
.LABEL $label$65
	$21 = ($21 + [1])
	$20 = ((int_64)$20 + (int_64)1)
	$24 = ((int_64)$25 | (int_64)$24)
	$23 = ((int_64)$23 + (int_64)-5)
	if ( ((int_64)$23 != (int_64)-6) ){ goto $label$64 }
	*($26 + [112]) = (int_64)1397703940
	*(($26 + [96])) = [0]
	*($26 + [104]) = $5
	*($26 + [88]) = (int_64)0
	$21 = CALL strlen([2304])
	if ( ((uint_32)$21 >= (uint_32)[-16]) ){ goto $label$53 }
	if ( ((uint_32)$21 >= (uint_32)[11]) ){ goto $label$62 }
	*($26 + [88]) = ($21 << [1])
	$8 = (($26 + [88]) | [1])
	if ( $21 ){ goto $label$61 }
	goto $label$60 
	
.LABEL $label$63
	*($26 + [80]) = (int_64)1397703940
	*(($26 + [64])) = [0]
	*($26 + [72]) = $5
	*($26 + [56]) = (int_64)0
	$21 = CALL strlen([2336])
	if ( ((uint_32)$21 >= (uint_32)[-16]) ){ goto $label$52 }
	if ( ((uint_32)$21 >= (uint_32)[11]) ){ goto $label$59 }
	*($26 + [56]) = ($21 << [1])
	$8 = (($26 + [56]) | [1])
	if ( $21 ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$62
	$19 = (($21 + [16]) & [-16])
	$8 = CALL $309($19)
	*($26 + [88]) = ($19 | [1])
	*($26 + [96]) = $8
	*($26 + [92]) = $21
	
.LABEL $label$61
	CALL memcpy($8, [2304], $21)
	
.LABEL $label$60
	*(($8 + $21)) = [0]
	*((($26 + [8]) + [8])) = *((($26 + [104]) + [8]))
	*($26 + [8]) = *($26 + [104])
	CALL $49($0, $24, ($26 + [8]), ($26 + [88]))
	if ( ((*($26 + [88]) & [1]) == 0) ){ goto $label$56 }
	CALL $310(*($26 + [96]))
	$19 = *($26 + [160])
	if ( $19 ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$59
	$19 = (($21 + [16]) & [-16])
	$8 = CALL $309($19)
	*($26 + [56]) = ($19 | [1])
	*($26 + [64]) = $8
	*($26 + [60]) = $21
	
.LABEL $label$58
	CALL memcpy($8, [2336], $21)
	
.LABEL $label$57
	*(($8 + $21)) = [0]
	*((($26 + [24]) + [8])) = *((($26 + [72]) + [8]))
	*($26 + [24]) = *($26 + [72])
	CALL $49($0, $1, ($26 + [24]), ($26 + [56]))
	if ( ((*($26 + [56]) & [1]) == 0) ){ goto $label$56 }
	CALL $310(*($26 + [64]))
	
.LABEL $label$56
	$19 = *($26 + [160])
	if ( ($19 == 0) ){ goto $label$54 }
	
.LABEL $label$55
	$7 = ($26 + [164])
	$21 = *($7)
	if ( ((int_32)$21 == (int_32)$19) ){ goto $label$69 }
	
.LOOP $label$70:
	$21 = ($21 + [-24])
	$8 = *($21)
	*($21) = [0]
	if ( ($8 == 0) ){ goto $label$71 }
	CALL $310($8)
	
.LABEL $label$71
	if ( ((int_32)$19 != (int_32)$21) ){ goto $label$70 }
	$21 = *(($26 + [160]))
	goto $label$68 
	
.LABEL $label$69
	$21 = $19
	
.LABEL $label$68
	*($7) = $19
	CALL $310($21)
	
.LABEL $label$54
	*([0] + [4]) = ($26 + [288])
	return (unreachable)
	
.LABEL $label$53
	CALL $311(($26 + [88]))
	
.LABEL $label$52
	CALL $311(($26 + [56]))
	(unreachable)
}

int_64 .FUNC sqrt (float_64 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$1 = (CASTING int_64)(float_64 $0)
	$7 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ((int_32)($7) & [2146435072]) != (int_32)[2146435072]) ){ goto $label$1 }
	return ((float_64)((float_64)$0 * (float_64)$0) + (float_64)$0)
	
.LABEL $label$1
	$2 = (CASTING uint_32)(uint_64 $1)
	if ( ((int_32)$7 <= (int_32)[0]) ){ goto $label$6 }
	$8 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)52)
	if ( $8) ){ goto $label$4 }
	$8 = [1]
	$9 = $2
	goto $label$5 
	
.LABEL $label$6
	if ( ((($7 & [2147483647]) | $2) == 0) ){ goto $label$3 }
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$8 = [1]
	
.LOOP $label$7:
	$8 = ($8 + [-21])
	$7 = uint_32($2 >> [11])
	$9 = ($2 << [21])
	$2 = $9
	if ( ($7 == 0) ){ goto $label$7 }
	
.LABEL $label$5
	$5 = [0]
	if ( ($7 & [1048576]) ){ goto $label$8 }
	$5 = [0]
	
.LOOP $label$9:
	$5 = ($5 + [1])
	$7 = ($7 << [1])
	if ( (($7 & [1048576]) == 0) ){ goto $label$9 }
	
.LABEL $label$8
	$2 = ($9 << $5)
	$8 = ($8 - $5)
	$7 = (uint_32($9 >> ([32] - $5)) | $7)
	
.LABEL $label$4
	$7 = (($7 & [1048575]) | [1048576])
	$10 = ($8 + [-1023])
	if ( (($10 & [1]) == 0) ){ goto $label$10 }
	$7 = (($7 << [1]) | uint_32($2 >> [31]))
	$2 = ($2 << [1])
	
.LABEL $label$10
	$7 = (uint_32($2 >> [31]) | ($7 << [1]))
	$5 = ($2 << [1])
	$4 = [0]
	$9 = [2097152]
	$8 = [0]
	
.LOOP $label$11:
	$6 = $5
	$5 = ($9 + $8)
	if ( ((int_32)$7 < (int_32)$5) ){ goto $label$12 }
	$4 = ($9 + $4)
	$7 = ($7 - $5)
	$8 = ($5 + $9)
	
.LABEL $label$12
	$7 = (($7 << [1]) | (uint_32($2 >> [30]) & [1]))
	$5 = ($6 << [1])
	$2 = $6
	$9 = uint_32($9 >> [1])
	if ( $9 ){ goto $label$11 }
	$3 = uint_32($10 >> [1])
	$9 = [-2147483648]
	$10 = [0]
	$2 = [0]
	
.LOOP $label$13:
	$6 = ($2 + $9)
	if ( ((int_32)$7 > (int_32)$8) ){ goto $label$15 }
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$14 }
	if ( ($5 <= $6) ){ goto $label$14 }
	
.LABEL $label$15
	$7 = (($7 - $8) + ( [-1] ? [0] : ($5 <= $6) ))
	$2 = ($6 + $9)
	$8 = ((((int_32)$6 < (int_32)[0]) & ((int_32)$2 > (int_32)[-1])) + $8)
	$10 = ($10 + $9)
	$5 = ($5 - $6)
	
.LABEL $label$14
	$7 = (uint_32($5 >> [31]) | ($7 << [1]))
	$5 = ($5 << [1])
	$9 = uint_32($9 >> [1])
	if ( $9 ){ goto $label$13 }
	if ( (($5 | $7) == 0) ){ goto $label$16 }
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$17 }
	$10 = (($10 & [1]) + $10)
	goto $label$16 
	
.LABEL $label$17
	$4 = ($4 + [1])
	$10 = [0]
	
.LABEL $label$16
	$0 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 ((($3 << [20]) + int_32($4 >> [1])) + [1071644672])) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 (uint_32($10 >> [1]) | ($4 << [31])))))
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$0 = (float_64)
	return ((float_64)$0($0 - $0)) / (float_64)$0)
}

int_64 .FUNC pow (float_64 $0, float_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	float_64 $10
	int_64 $11
	float_64 $12
	float_64 $13
	float_64 $14
	float_64 $15
	float_64 $16
	float_64 $17
	float_64 $18
	int_32 $19
	float_64 $20
	float_64 $21
	$21 = (float_64)1
	$6 = (CASTING uint_32)(uint_64 $4)
	$4 = (CASTING int_64)(float_64 $1)
	$5 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	$8 = ($5) & [2147483647]
	if ( (($8) | $6) == 0) ){ goto $label$1 }
	$11 = (CASTING int_64)(float_64 $0)
	$2 = (CASTING uint_32)(uint_64 (uint_64)$11 >> (uint_64)(int_64)32))
	$3 = (CASTING uint_32)(uint_64 $11)
	if ( $3 ){ goto $label$2 }
	if ( ((int_32)$2 == (int_32)[1072693248]) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($2 & [2147483647])
	if ( ((uint_32)$7 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( (((int_32)$3 != (int_32)[0]) & ((int_32)$7 == (int_32)[2146435072])) ){ goto $label$4 }
	if ( ((uint_32)$8 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$3 }
	if ( ((int_32)$8 != (int_32)[2146435072]) ){ goto $label$3 }
	
.LABEL $label$4
	return ((float_64)$0 + (float_64)$1)
	
.LABEL $label$3
	$19 = [0]
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$8 }
	$19 = [2]
	if ( ((uint_32)$8 > (uint_32)[1128267775]) ){ goto $label$8 }
	$19 = [0]
	if ( ($8 <= [1072693248]) ){ goto $label$8 }
	$9 = uint_32($8 >> [20])
	if ( ((int_32)($9 + [-1023]) < (int_32)[21]) ){ goto $label$7 }
	$19 = ([1075] - $9)
	$9 = uint_32($6 >> $19)
	$19 = ( ([2] - ($9 & [1])) ? [0] : ((int_32)($9 << $19) == (int_32)$6) )
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$19 = [0]
	if ( $6 ){ goto $label$5 }
	$6 = ([1043] - $9)
	$19 = uint_32($8 >> $6)
	$19 = ( ([2] - ($19 & [1])) ? [0] : ((int_32)($19 << $6) == (int_32)$8) )
	
.LABEL $label$6
	if ( ((int_32)$8 != (int_32)[2146435072]) ){ goto $label$12 }
	if ( ((($7 + [-1072693248]) | $3) == 0) ){ goto $label$1 }
	if ( ($7 <= [1072693248]) ){ goto $label$11 }
	return ( $1 ? (float_64)0 : ((int_32)$5 > (int_32)[-1]) )
	
.LABEL $label$12
	if ( ((int_32)$8 != (int_32)[1072693248]) ){ goto $label$13 }
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$9 }
	return $0
	
.LABEL $label$13
	if ( ((int_32)$5 != (int_32)[1073741824]) ){ goto $label$10 }
	return ((float_64)$0 * (float_64)$0)
	
.LABEL $label$11
	return ( (float_64)0 ? !(float_64)$1 : ((int_32)$5 > (int_32)[-1]) )
	
.LABEL $label$10
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	if ( ((int_32)$5 != (int_32)[1071644672]) ){ goto $label$5 }
	return CALL sqrt($0)
	
.LABEL $label$9
	return ((float_64)(float_64)1 / (float_64)$0)
	
.LABEL $label$5
	$21 = CALL fabs($0)
	if ( $3 ){ goto $label$18 }
	if ( ($7 == 0) ){ goto $label$17 }
	if ( ((int_32)($7 | [1073741824]) == (int_32)[2146435072]) ){ goto $label$17 }
	
.LABEL $label$18
	$10 = (float_64)1
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$14 }
	if ( ((int_32)$19 == (int_32)[1]) ){ goto $label$16 }
	if ( $19 ){ goto $label$14 }
	$1 = (float_64)
	return ((float_64)$1($0 - $0)) / (float_64)$1)
	
.LABEL $label$17
	$21 = ( ((float_64)(float_64)1 / (float_64)$21) ? $21 : ((int_32)$5 < (int_32)[0]) )
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	if ( (($19 | ($7 + [-1072693248])) == 0) ){ goto $label$15 }
	return ( !(float_64)$21 ? $21 : ((int_32)$19 == (int_32)[1]) )
	
.LABEL $label$16
	$10 = (float_64)-1
	goto $label$14 
	
.LABEL $label$15
	$1 = (float_64)
	return ((float_64)$1($21 - $21)) / (float_64)$1)
	
.LABEL $label$14
	if ( ($8 <= [1105199105]) ){ goto $label$28 }
	if ( ($8 <= [1139802113]) ){ goto $label$27 }
	if ( ((uint_32)$7 > (uint_32)[1072693247]) ){ goto $label$24 }
	return ( (float_64)inf ? (float_64)0 : ((int_32)$5 < (int_32)[0]) )
	
.LABEL $label$28
	$8 = [0]
	if ( ((uint_32)$7 > (uint_32)[1048575]) ){ goto $label$26 }
	$21 = ((float_64)$21 * (float_64)(float_64)9007199254740992)
	$7 = (CASTING uint_32)(uint_64 (uint_64)(CASTING int_64)(float_64 $21) >> (uint_64)(int_64)32))
	$5 = [-53]
	goto $label$25 
	
.LABEL $label$27
	if ( ((uint_32)$7 > (uint_32)[1072693246]) ){ goto $label$23 }
	$1 = ( (float_64)1.e+300 ? (float_64)1e-300 : ((int_32)$5 < (int_32)[0]) )
	return ((float_64)$1 * (float_64)((float_64)$1 * (float_64)$10))
	
.LABEL $label$26
	$5 = [0]
	
.LABEL $label$25
	$6 = ($7 & [1048575])
	$2 = ($6 | [1072693248])
	$5 = ((int_32($7 >> [20]) + $5) + [-1023])
	if ( ($6 <= [235663]) ){ goto $label$21 }
	if ( ((uint_32)$6 >= (uint_32)[767610]) ){ goto $label$22 }
	$8 = [1]
	goto $label$21 
	
.LABEL $label$24
	return ( (float_64)inf ? (float_64)0 : ((int_32)$5 > (int_32)[0]) )
	
.LABEL $label$23
	if ( ($7 <= [1072693249]) ){ goto $label$20 }
	$1 = ( (float_64)1.e+300 ? (float_64)1e-300 : ((int_32)$5 > (int_32)[0]) )
	return ((float_64)$1 * (float_64)((float_64)$1 * (float_64)$10))
	
.LABEL $label$22
	$2 = ($2 + [-1048576])
	$5 = ($5 + [1])
	
.LABEL $label$21
	$13 = ((float_64)*(($6 + [13104])) + (float_64)((float_64)((float_64)(float_64))($21 - (float_64))($0 - $14)) * (float_64)(float_64)0.9617966939259756) + (float_64)((float_64)$0 * (float_64)(float_64)-7.028461650952758e-09)
	$21 = ((float_64)((float_64)$12 * (float_64)$0) + (float_64)((float_64)$21 * (float_64)(float_64))($13 - (float_64))(((float_64)$0 + (float_64)(float_64)-3) - $17))
	$0 = ((float_64)$21 * (float_64)$21)
	$16 = (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 (((int_32($2 >> [1]) | [536870912]) + ($8 << [18])) + [524288])) << (int_64)32))
	$12 = ((float_64)$15 * (float_64)(float_64))((float_64))($14 - ((float_64)$0 * (float_64)$16)) - ((float_64)$0 * (float_64)(float_64))($12 - (float_64))($16 - $13)
	$13 = ((float_64)((float_64)((float_64)$21 + (float_64)$0) * (float_64)$12))
	$17 = ((float_64)$0 * (float_64)$0)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)((float_64)$17 + (float_64)(float_64)3) + (float_64)$13)) + (float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)0.20697501780033842) + (float_64)(float_64)0.23066074577556175)) + (float_64)(float_64)0.272728123808534)) + (float_64)(float_64)0.33333332981837743)) + (float_64)(float_64)0.4285714285785502)) + (float_64)(float_64)0.5999999999999946))))
	$15 = ((float_64)(float_64)1 / (float_64)((float_64)$13 + (float_64)$12))
	$13 = *(($6 + [13088]))
	$12 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)32) | (int_64)((int_64)(CASTING int_64)(float_64 $21) & (int_64)4294967295)))
	$14 = (float_64)
	$21 = ((float_64)$14($12 - $13)) * (float_64)$15
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $21)) & (int_64)-4294967296)
	$14 = ((float_64)$0) * (float_64)$0
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$14 & (int_64)-4294967296))))
	$12 = ((float_64)$0 + (float_64)$21)
	$6 = ($8 << [3])
	$18 = *(($6 + [13120]))
	$20 = (CASTING float_64)(int_32 $5)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$20 + (float_64)((float_64)$18 + (float_64)((float_64)$12)) & (int_64)-4294967296))) * (float_64)(float_64)0.9617967009544373)
	$20 = (float_64))((float_64))((float_64))($0 + (float_64)$13)))))) & (int_64)-4294967296))) - $20) - $18) - $12)
	goto $label$19 
	
.LABEL $label$20
	$13 = ((float_64)((float_64)$0 * (float_64)(float_64)1.9259629911266175e-08) + (float_64)((float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)(float_64))((float_64)0.5 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)-0.25) + (float_64)(float_64)0.3333333333333333)))) * (float_64)(float_64)-1.4426950408889634)
	$0 = ((float_64)$21 + (float_64)(float_64)-1)
	$21 = ((float_64)$0 * (float_64)(float_64)1.4426950216293335)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$21 + (float_64)$13))) & (int_64)-4294967296)
	$20 = (float_64))($0) - $21)
	
.LABEL $label$19
	$1 = ((float_64)((float_64)(float_64))($1 - $12) * (float_64)$0) + (float_64)((float_64)(float_64))($13 - $20) * (float_64)$1
	$12 = (CASTING float_64)(int_64 ((int_64)$4 & (int_64)-4294967296))
	$21 = ((float_64)$12 * (float_64)$0)
	$0 = ((float_64)$21 + (float_64)$1)
	$4 = (CASTING int_64)(float_64 $0)
	$8 = (CASTING uint_32)(uint_64 $4)))
	$2 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( ((int_32)$2) < (int_32)[1083179008]) ){ goto $label$33 }
	if ( ((($2 + [-1083179008]) | $8) == 0) ){ goto $label$32 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$33
	if ( (($2 & [2147482624]) <= [1083231232]) ){ goto $label$30 }
	if ( ((($2 + [1064252416]) | $8) == 0) ){ goto $label$31 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$32
	$0 = (float_64)
	$12 = ((float_64)$1 + (float_64)(float_64)8.008566259537294e-17)
	if ( (((float_64)$12 <= (float_64)$0($0 - $21))) | (((float_64)$12 != (float_64)$12) | ((float_64)$0 != (float_64)$0))) ){ goto $label$30 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$31
	$0 = (float_64)
	if ( ((((float_64)$1 > (float_64)$0($0 - $21))) | (((float_64)$1 != (float_64)$1) | ((float_64)$0 != (float_64)$0))) == 0) ){ goto $label$29 }
	
.LABEL $label$30
	$8 = ($2 & [2147483647])
	if ( ($8 <= [1071644673]) ){ goto $label$35 }
	$6 = (uint_32($8 >> [20]) & [2047])
	$8 = (uint_32([1048576] >> (uint_32($8 >> [20]) + [-1022])) + $2)
	$5 = uint_32((($8 & [1048575]) | [1048576]) >> ([1043] - $6))
	$2 = ( ([0] - $5) ? $5 : ((int_32)$2 < (int_32)[0]) )
	$21 = (float_64))($21 - (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($8 & ((int_32)uint_32([1048575] >> ($6 + [-1023])) ^ (int_32)[-1]))) << (int_64)32)))
	goto $label$34 
	
.LABEL $label$35
	$2 = [0]
	
.LABEL $label$34
	$0 = (float_64)
	$0 = ((float_64)$1 * (float_64)$1)
	$21 = ((float_64)((float_64)(float_64))($1 - (float_64))($0 - $21)) * (float_64)(float_64)0.6931471805599453
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$1 + (float_64)$21)) & (int_64)-4294967296))
	$12 = ((float_64)$0 * (float_64)(float_64)0.6931471824645996)
	$1 = ((float_64)$12 + (float_64)$21 + (float_64)((float_64)$0 * (float_64)(float_64)-1.904654299957768e-09))
	$1 = (float_64)
	$4 = (CASTING int_64)(float_64 $1((float_64)1 - (float_64))((float_64))(((float_64)((float_64)$1)) * (float_64)$0($1 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)4.1381367970572385e-08) + (float_64)(float_64)-1.6533902205465252e-06)) + (float_64)(float_64)6.613756321437934e-05)) + (float_64)(float_64)-2.7777777777015593e-03)) + (float_64)(float_64)0.16666666666666602))))) / (float_64)((float_64)$0 + (float_64)(float_64)-2)
	$8 = ((CASTING uint_32)(uint_64 (uint_64)$4 - ((float_64)$0($21 - (float_64))($1 - $12))) + (float_64)((float_64)$1 * (float_64)$0))
	if ( ((int_32)int_32($8 - $1))))) >> (uint_64)(int_64)32)) + ($2 << [20]))) >> [20]) <= (int_32)[0]) ){ goto $label$36 }
	return ((float_64)$10 * (float_64)(CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)((int_64)$4 & (int_64)4294967295))))
	
.LABEL $label$36
	return ((float_64)$10 * (float_64)CALL scalbn($1, $2))
	
.LABEL $label$29
	return ((float_64)((float_64)$10 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$1
	return $21
}

void .FUNC $193 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [560])
	CALL memcpy(*($2 + [4]), $0, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
}

void .FUNC $321 (int_32 $0)
{
	int_32 $1
	$1 = (*([0] + [4]) - [16])
	*([0] + [4]) = $1
	CALL $323($1, $0, [13056])
	CALL abort()
	(unreachable)
}

int_32 .FUNC _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	*(($6 + [8])) = [0]
	*($6) = (int_64)0
	$3 = CALL strlen([13024])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$6 }
	*($6) = ($3 << [1])
	$5 = ($6 | [1])
	if ( $3 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$4 = (($3 + [16]) & [-16])
	$5 = CALL $309($4)
	*($6) = ($4 | [1])
	*($6 + [8]) = $5
	*($6 + [4]) = $3
	
.LABEL $label$5
	CALL memcpy($5, [13024], $3)
	
.LABEL $label$4
	*(($5 + $3)) = [0]
	*($6 + [12]) = [0]
	$3 = *($0 + [8])
	$5 = *($0)
	$4 = *(CALL __errno_location())
	*(CALL __errno_location()) = [0]
	$3 = ( $3 ? ($0 + [1]) : ($5 & [1]) )
	$2 = CALL strtol($3, ($6 + [12]), $2)
	$0 = CALL __errno_location()
	$5 = *($0)
	*($0) = $4
	if ( ((int_32)$5 == (int_32)[34]) ){ goto $label$2 }
	$0 = *($6 + [12])
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$1 }
	if ( ($1 == 0) ){ goto $label$7 }
	*($1) = ($0 - $3)
	
.LABEL $label$7
	if ( ((*($6) & [1]) == 0) ){ goto $label$8 }
	CALL $310(*($6 + [8]))
	
.LABEL $label$8
	*([0] + [4]) = ($6 + [16])
	return $2
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL $321($6)
	
.LABEL $label$1
	CALL $322($6)
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $323 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = CALL strlen($2)
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$8 = ($3 + $4)
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$1 }
	$5 = *($1)
	$6 = *($1 + [8])
	if ( ((uint_32)$8 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($8 + [16]) & [-16])
	$8 = CALL $309($7)
	*($0) = ($7 | [1])
	*(($0 + [8])) = $8
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($8, ( $6 ? ($1 + [1]) : ($5 & [1]) ), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	CALL $315($0, $2, $4)
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $322 (int_32 $0)
{
	int_32 $1
	$1 = (*([0] + [4]) - [16])
	*([0] + [4]) = $1
	CALL $323($1, $0, [13040])
	CALL abort()
	(unreachable)
}

int_32 .FUNC $325 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $309($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $324 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC __errno_location ()
{
	return [13072]
}

int_32 .FUNC $326 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = ($8 & [1])
	$8 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($8 >> [1]) : $5 )
	if ( ($8 <= $2) ){ goto $label$1 }
	$8 = ($8 - $2)
	$3 = ( $8 ? $3 : ($8 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($3 + [16]) & [-16])
	$8 = CALL $309($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($8, (( $6 ? ($1 + [1]) : $5 ) + $2), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $101 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$3()), [896])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($4 = CALL $309([72])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [464])
	$2 = (int_64)5462355
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [128])
	*($4 + [52]) = [0]
	*($4 + [44 align=4]) = (int_64)0
	*($4 + [56]) = $1
	CALL $102(($7 + [16]), $4)
	*($7 + [32]) = $4
	*($7 + [16]) = (int_64)4853904213979168768
	$6 = *($4 + [60])
	*($7 + [12]) = $6
	$5 = ($1 + [28])
	$3 = *($5)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$7 }
	*($3 + [8]) = (int_64)4853904213979168768
	*($3 + [16]) = $6
	*($7 + [32]) = [0]
	*($3) = $4
	*($5) = ($3 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $103(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$6
	*($0 + [4]) = $4
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	$4 = *($3 + [44])
	if ( ($4 == 0) ){ goto $label$9 }
	*(($3 + [48])) = $4
	CALL $310($4)
	
.LABEL $label$9
	CALL $310($3)
	
.LABEL $label$8
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $100 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [64])
	$9 = $10
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [960])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1008])
	$7 = [41]
	$3 = *($3)
	$1 = CALL memcpy($1, $3, [41])
	$4 = ($1 + [44])
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$1 }
	CALL $104($4, *($3 + [44]), *(($3 + [48])))
	
.LABEL $label$1
	CALL eosio_assert([1], [1072])
	$5 = *($4)
	$3 = *(($1 + [48]))
	$6 = ($3 - $5)
	$8 = (CASTING uint_64)(uint_32 int_32($6 >> [3]))
	
.LOOP $label$2:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$3 }
	$7 = (($6 & [-8]) + $7)
	
.LABEL $label$3
	if ( ($7 <= [513]) ){ goto $label$5 }
	$3 = CALL malloc($7)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($10 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$4
	*($9 + [12]) = $3
	*($9 + [8]) = $3
	*($9 + [16]) = ($3 + $7)
	*($9 + [24]) = ($9 + [8])
	*($9 + [56]) = $4
	*($9 + [32]) = $1
	*($9 + [36]) = ($1 + [8])
	*($9 + [40]) = ($1 + [24])
	*($9 + [44]) = ($1 + [28])
	*($9 + [48]) = ($1 + [32])
	*($9 + [52]) = ($1 + [40])
	CALL $105(($9 + [32]), ($9 + [24]))
	CALL db_update_i64(*($1 + [60]), $2, $3, $7)
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL free($3)
	
.LABEL $label$6
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)4853904213979168768) ){ goto $label$7 }
	*(($0 + [16])) = (int_64)4853904213979168769
	
.LABEL $label$7
	*([0] + [4]) = ($9 + [64])
}

void .FUNC $103 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $309(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [44])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [48])) = $6
	CALL $310($6)
	
.LABEL $label$11
	CALL $310($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $310($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $102 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [64])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$6 = [41]
	$8 = *(*($0 + [4]))
	$1 = CALL memcpy($1, $8, [41])
	$3 = ($1 + [44])
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$1 }
	CALL $104($3, *($8 + [44]), *(($8 + [48])))
	
.LABEL $label$1
	$4 = *($3)
	$8 = *(($1 + [48]))
	$5 = ($8 - $4)
	$7 = (CASTING uint_64)(uint_32 int_32($5 >> [3]))
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$3 }
	$6 = (($5 & [-8]) + $6)
	
.LABEL $label$3
	if ( ($6 <= [513]) ){ goto $label$5 }
	$8 = CALL malloc($6)
	goto $label$4 
	
.LABEL $label$5
	$8 = ($10 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$4
	*($9 + [12]) = $8
	*($9 + [8]) = $8
	*($9 + [16]) = ($8 + $6)
	*($9 + [24]) = ($9 + [8])
	*($9 + [36]) = ($1 + [8])
	*($9 + [32]) = $1
	*($9 + [40]) = ($1 + [24])
	*($9 + [44]) = ($1 + [28])
	*($9 + [48]) = ($1 + [32])
	*($9 + [52]) = ($1 + [40])
	*($9 + [56]) = $3
	CALL $105(($9 + [32]), ($9 + [24]))
	*($1 + [60]) = CALL db_store_i64(*($2 + [8]), (int_64)4853904213979168768, *(*($0 + [8])), (int_64)4853904213979168768, $8, $6)
	if ( ($6 <= [513]) ){ goto $label$6 }
	CALL free($8)
	
.LABEL $label$6
	if ( ((uint_64)*($2 + [16]) > (uint_64)(int_64)4853904213979168768) ){ goto $label$7 }
	*(($2 + [16])) = (int_64)4853904213979168769
	
.LABEL $label$7
	*([0] + [4]) = ($9 + [64])
}

void .FUNC $105 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [560])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [560])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [560])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	CALL $106(*($1), *($0 + [24]))
}

void .FUNC $104 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = *($0)
	$8 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [3])
	if ( ((uint_32)$4 <= (uint_32)int_32(($8 - $5) >> [3])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $310($5)
	$8 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$1 }
	$5 = [536870911]
	if ( ((uint_32)int_32($8 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$5 = $4
	$2 = int_32($8 >> [2])
	if ( ($2 <= $4) ){ goto $label$6 }
	$5 = $2
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($5 << [3])
	$5 = CALL $309($4)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($5, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	return 
	
.LABEL $label$4
	$3 = int_32($3 >> [3])
	$3 = (*($0 + [4]) - $5)
	$8 = ( ($1 + $3) ? $2 : ((uint_32)$4 > (uint_32)$3) )
	$6 = ($8 - $1)
	$7 = int_32($6 >> [3])
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memmove($5, $1, $6)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$3) ){ goto $label$2 }
	$1 = ($2 - $8)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $8, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + ($7 << [3]))
	return (unreachable)
	
.LABEL $label$1
	CALL $324($0)
}

int_32 .FUNC $107 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)0
	*(($4 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [464])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [128])
	*(($0 + [52])) = [0]
	*($0 + [44 align=4]) = (int_64)0
	*($0 + [56]) = $1
	*($6 + [8]) = *($2 + [4])
	*($6 + [20]) = ($0 + [8])
	*($6 + [16]) = $0
	*($6 + [24]) = ($0 + [24])
	*($6 + [28]) = ($0 + [28])
	*($6 + [32]) = ($0 + [32])
	*($6 + [36]) = ($0 + [40])
	*($6 + [40]) = ($0 + [44])
	CALL $108(($6 + [16]), ($6 + [8]))
	*($0 + [60]) = *(*($2 + [8]))
	*([0] + [4]) = ($6 + [48])
	return $0
}

void .FUNC _ZN12richrichrich12claimdepositEy (int_32 $0, int_64 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [368])
	*([0] + [4]) = $7
	CALL require_auth($1)
	CALL eosio_assert(((int_32)CALL $45($0, $1) ^ (int_32)[1]), [48])
	$4 = [0]
	*((($7 + [328]) + [32])) = [0]
	*($7 + [336]) = $1
	*($7 + [344]) = (int_64)-1
	*($7 + [352]) = (int_64)0
	$2 = *($0)
	*($7 + [328]) = $2
	*((($7 + [168]) + [32])) = (int_64)310366523908
	*($7 + [176]) = [0]
	*($7 + [168]) = (int_64)0
	*($7 + [184]) = (int_64)0
	*($7 + [192]) = (int_64)0
	CALL eosio_assert([1], [464])
	$3 = (int_64)1212369234
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [128])
	*(($7 + [216])) = (int_64)310366523908
	*($7 + [208]) = (int_64)0
	CALL eosio_assert([1], [464])
	$3 = (int_64)1212369234
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [128])
	*(($7 + [232])) = (int_64)1397703940
	*($7 + [224]) = (int_64)0
	CALL eosio_assert([1], [464])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$5 = [0]
	
.LABEL $label$11
	CALL eosio_assert($5, [128])
	$5 = [0]
	*($7 + [240]) = [0]
	CALL $91(($7 + [248]), ($7 + [328]), $2, ($7 + [168]))
	if ( ((int_32)*($7 + [256]) != (int_32)[1]) ){ goto $label$16 }
	CALL _ZN12richrichrich7payrentEy($0, $1)
	
.LABEL $label$16
	*((($7 + [128]) + [32])) = [0]
	*($7 + [136]) = $1
	*($7 + [144]) = (int_64)-1
	*($7 + [152]) = (int_64)0
	$2 = *($0)
	*($7 + [128]) = $2
	*(($4 = (($7 + [48]) + [32]))) = (int_64)310366523908
	*($7 + [56]) = [0]
	*($7 + [48]) = (int_64)0
	*($7 + [64]) = (int_64)0
	*($7 + [72]) = (int_64)0
	CALL eosio_assert([1], [464])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	
.LOOP $label$19:
	$4 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$20 }
	
.LOOP $label$21:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$21 }
	
.LABEL $label$20
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	$6 = [0]
	
.LABEL $label$17
	CALL eosio_assert($6, [128])
	*(($5 = ($7 + [96]))) = (int_64)310366523908
	*($7 + [88]) = (int_64)0
	CALL eosio_assert([1], [464])
	$3 = (uint_64)*($5) >> (uint_64)(int_64)8)
	
.LOOP $label$24:
	$5 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$23 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$25 }
	
.LOOP $label$26:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$23 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$26 }
	
.LABEL $label$25
	$6 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$23
	$6 = [0]
	
.LABEL $label$22
	CALL eosio_assert($6, [128])
	*(($4 = ($7 + [112]))) = (int_64)1397703940
	*($7 + [104]) = (int_64)0
	CALL eosio_assert([1], [464])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	
.LOOP $label$29:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$28 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$30 }
	
.LOOP $label$31:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$28 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$31 }
	
.LABEL $label$30
	$4 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$29 }
	goto $label$27 
	
.LABEL $label$28
	$4 = [0]
	
.LABEL $label$27
	CALL eosio_assert($4, [128])
	*($7 + [120]) = [0]
	CALL $91(($7 + [168]), ($7 + [128]), $2, ($7 + [48]))
	CALL eosio_assert(((int_64)*($7 + [192]) > (int_64)0), [2128])
	*((($7 + [32]) + [8])) = *(($7 + [200]))
	*((($7 + [16]) + [8])) = [0]
	*($7 + [32]) = *($7 + [192])
	*($7 + [16]) = (int_64)0
	$5 = CALL strlen([2160])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$32 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$35 }
	*($7 + [16]) = ($5 << [1])
	$6 = (($7 + [16]) | [1])
	if ( $5 ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$35
	$4 = (($5 + [16]) & [-16])
	$6 = CALL $309($4)
	*($7 + [16]) = ($4 | [1])
	*($7 + [24]) = $6
	*($7 + [20]) = $5
	
.LABEL $label$34
	CALL memcpy($6, [2160], $5)
	
.LABEL $label$33
	$4 = [0]
	*(($6 + $5)) = [0]
	*(($7 + [8])) = *((($7 + [32]) + [8]))
	*($7) = *($7 + [32])
	CALL $182($0, $1, $7, ($7 + [16]))
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$36 }
	CALL $310(*($7 + [24]))
	
.LABEL $label$36
	CALL eosio_assert([1], [464])
	$3 = (int_64)1212369234
	
.LOOP $label$38:
	$5 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$37 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$39 }
	
.LOOP $label$40:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$37 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$40 }
	
.LABEL $label$39
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$38 }
	
.LABEL $label$37
	CALL eosio_assert($5, [128])
	*(($7 + [200])) = (int_64)310366523908
	*($7 + [192]) = (int_64)0
	CALL $81(($7 + [128]), ($7 + [168]), *($0))
	$0 = *($7 + [152])
	if ( ($0 == 0) ){ goto $label$41 }
	$6 = ($7 + [156])
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$43 }
	
.LOOP $label$44:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$45 }
	CALL $310($5)
	
.LABEL $label$45
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$44 }
	$4 = *(($7 + [152]))
	goto $label$42 
	
.LABEL $label$43
	$4 = $0
	
.LABEL $label$42
	*($6) = $0
	CALL $310($4)
	
.LABEL $label$41
	$0 = *($7 + [352])
	if ( ($0 == 0) ){ goto $label$46 }
	$6 = ($7 + [356])
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$48 }
	
.LOOP $label$49:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$50 }
	CALL $310($5)
	
.LABEL $label$50
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$49 }
	$4 = *(($7 + [352]))
	goto $label$47 
	
.LABEL $label$48
	$4 = $0
	
.LABEL $label$47
	*($6) = $0
	CALL $310($4)
	
.LABEL $label$46
	*([0] + [4]) = ($7 + [368])
	return (unreachable)
	
.LABEL $label$32
	CALL $311(($7 + [16]))
}

int_32 .FUNC $109 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1536])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$3 = *($1 + [4])
	$7 = int_32(($3 - $4) >> [3])
	$5 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$5 <= (uint_32)$7) ){ goto $label$4 }
	CALL $110($1, ($5 - $7))
	$3 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$5 >= (uint_32)$7) ){ goto $label$5 }
	$3 = ($4 + ($5 << [3]))
	*(($1 + [4])) = $3
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = ($0 + [4])
	$7 = *($5)
	
.LOOP $label$6:
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $7) > (uint_32)[7]), [784])
	CALL memcpy($4, *($5), [8])
	$7 = (*($5) + [8])
	*($5) = $7
	$4 = ($4 + [8])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $108 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [784])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [784])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [784])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [784])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	CALL $109(*($1), *($0 + [24]))
}

void .FUNC $318 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$8 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$8 = *($0 + [8])
	
.LABEL $label$2
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$9 = [11]
	$2 = ($2 + $1)
	$7 = ($1 << [1])
	$2 = ( $7 ? $2 : ($2 <= $7) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $309($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL $310($8)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $319 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$6 = *($0)
	$5 = ($6 & [1])
	if ( $5 ){ goto $label$2 }
	$6 = uint_32($6 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($0 + [4])
	
.LABEL $label$1
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	if ( ($6 <= $1) ){ goto $label$3 }
	$6 = ($6 - $1)
	$6 = ( $6 ? $2 : ($6 <= $2) )
	if ( $5 ){ goto $label$5 }
	$0 = ($0 + [1])
	goto $label$4 
	
.LABEL $label$5
	$0 = *($0 + [8])
	
.LABEL $label$4
	$5 = ((uint_32)$6 > (uint_32)$4)
	$2 = ( $4 ? $6 : $5 )
	if ( ($2 == 0) ){ goto $label$6 }
	$1 = CALL memcmp(($0 + $1), $3, $2)
	if ( ($1 == 0) ){ goto $label$6 }
	return $1
	
.LABEL $label$6
	return ( [-1] ? $5 : ($6 <= $4) )
	
.LABEL $label$3
	CALL abort()
	return (unreachable)
}

void .FUNC $215 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	$6 = $7
	*([0] + [4]) = $7
	*($1) = (int_64)0
	$2 = *($0)
	CALL eosio_assert([1], [464])
	$3 = (int_64)1212369234
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [128])
	*(($1 + [16])) = (int_64)310366523908
	*($1 + [8]) = (int_64)0
	CALL eosio_assert([1], [464])
	$3 = (int_64)1212369234
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [128])
	*(($1 + [32])) = (int_64)310366523908
	*($1 + [24]) = (int_64)0
	$5 = $7
	$4 = ($5 + [-48])
	*([0] + [4]) = $4
	*($6 + [12]) = $4
	*($6 + [8]) = $4
	*($6 + [16]) = ($5 + [-8])
	*($6 + [24]) = ($6 + [8])
	*($6 + [36]) = ($1 + [8])
	*($6 + [32]) = $1
	*($6 + [40]) = ($1 + [24])
	CALL $225(($6 + [32]), ($6 + [24]))
	$3 = *($1)
	*($1 + [44]) = CALL db_store_i64(*($2 + [8]), (int_64)3932090330173844992, *(*($0 + [8])), $3, $4, [40])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$11 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*([0] + [4]) = ($6 + [48])
}

void .FUNC $214 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0)
	$6 = *(*($0 + [4]))
	$7 = ($6 + [304])
	$5 = *($7)
	if ( ((int_64)$5 != (int_64)-1) ){ goto $label$1 }
	$5 = (int_64)0
	$3 = ($6 + [288])
	$4 = CALL db_lowerbound_i64(*($3), *(($6 + [296])), (int_64)-9026118753610891264, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	CALL $156($3, $4)
	*($8 + [28]) = [0]
	*($8 + [24]) = $3
	$5 = *(*(CALL $189(($8 + [24])) + [4]))
	$5 = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($6 + [304])) = $5
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($5 <= (int_64)-2), [2208])
	*($1) = *($7)
	CALL eosio_assert([1], [464])
	$5 = (int_64)5459781
	$6 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$7 = [0]
	
.LABEL $label$3
	CALL eosio_assert($7, [128])
	*(($1 + [16])) = (int_64)1397703940
	*($1 + [8]) = (int_64)0
	CALL eosio_assert([1], [464])
	$5 = (int_64)5459781
	$6 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$7 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$7 = [0]
	
.LABEL $label$8
	CALL eosio_assert($7, [128])
	*(($1 + [48])) = (int_64)1397703940
	*($1 + [40]) = (int_64)0
	CALL eosio_assert([1], [464])
	$5 = (int_64)5850443
	$6 = [0]
	
.LOOP $label$15:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	
.LOOP $label$17:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	$7 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	$7 = [0]
	
.LABEL $label$13
	CALL eosio_assert($7, [128])
	*(($1 + [32])) = (int_64)1497713412
	*($1 + [24]) = (int_64)0
	*($1 + [56]) = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [86400])
	$7 = $9
	$6 = ($7 + [-64])
	*([0] + [4]) = $6
	*($8 + [4]) = $6
	*($8) = $6
	*($8 + [8]) = ($7 + [-4])
	*($8 + [16]) = $8
	*($8 + [28]) = ($1 + [8])
	*($8 + [24]) = $1
	*($8 + [32]) = ($1 + [24])
	*($8 + [36]) = ($1 + [40])
	*($8 + [40]) = ($1 + [56])
	CALL $193(($8 + [24]), ($8 + [16]))
	$5 = *($1)
	*($1 + [64]) = CALL db_store_i64(*($2 + [8]), (int_64)-9026118753610891264, *(*($0 + [8])), $5, $6, [60])
	if ( (uint_64)($5 <= *($2 + [16])) ){ goto $label$18 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$18
	*([0] + [4]) = ($8 + [48])
}

void .FUNC $217 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [48])
	$13 = $14
	*([0] + [4]) = $14
	$3 = *($0 + [4])
	*($1 + [8]) = (int_64)0
	$2 = *($0)
	CALL eosio_assert([1], [464])
	$4 = ($1 + [8])
	$10 = (int_64)5459781
	$8 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [128])
	$10 = (int_64)0
	*($1 + [32]) = (int_64)0
	*(($1 + [24])) = (int_64)1397703940
	*($1 + [16]) = (int_64)0
	*($1 + [48]) = *(*($3))
	$6 = ($1 + [48])
	$5 = ($1 + [32])
	$9 = (int_64)59
	$8 = [1248]
	$11 = (int_64)0
	
.LOOP $label$6:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$7 }
	$7 = *($8)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$7 = ($7 + [165])
	goto $label$8 
	
.LABEL $label$9
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$7
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$6 }
	*($1 + [40]) = $11
	*($1) = *(*($3 + [4]))
	$7 = $14
	$8 = ($7 + [-64])
	*([0] + [4]) = $8
	*($13 + [4]) = $8
	*($13) = $8
	*($13 + [8]) = ($7 + [-15])
	*($13 + [16]) = $13
	*($13 + [28]) = $4
	*($13 + [24]) = $1
	*($13 + [32]) = ($1 + [16])
	*($13 + [36]) = $5
	*($13 + [40]) = ($1 + [40])
	*($13 + [44]) = $6
	CALL $222(($13 + [24]), ($13 + [16]))
	$10 = *($1)
	*($1 + [56]) = CALL db_store_i64(*($2 + [8]), (int_64)-7950542192169189376, *(*($0 + [8])), $10, $8, [49])
	if ( (uint_64)($10 <= *($2 + [16])) ){ goto $label$10 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*([0] + [4]) = ($13 + [48])
}

void .FUNC $216 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [16]) == (int_32)$0), [64])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-2287828610704211968, (int_64)-2287828610704211968)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $46($0, $3)
	CALL eosio_assert(((int_32)*($3 + [16]) == (int_32)$0), [64])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [848])
	CALL $223($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $224($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $211 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [96])
	*([0] + [4]) = $6
	$5 = CALL current_time()
	*(($6 + [44])) = [0]
	*(($6 + [48])) = [0]
	*($6 + [28]) = [0]
	*($6 + [32]) = [0]
	*($6 + [36]) = [0]
	*($6 + [40]) = [0]
	*($6 + [16]) = ((CASTING uint_32)(uint_64 ((uint_64)$5 / (uint_64)(int_64)1000000)) + [60])
	*($6 + [52]) = [0]
	*(($6 + [56])) = [0]
	*(($6 + [60])) = [0]
	*($6 + [64]) = [0]
	*(($6 + [68])) = [0]
	*(($6 + [72])) = [0]
	CALL $212(($6 + [52]), $1, $2, $3, $4)
	*($6 + [36]) = [1]
	$5 = CALL $138($0)
	*($6 + [8]) = (int_64)0
	*($6) = $5
	$5 = *($0)
	CALL $139(($6 + [80]), ($6 + [16]))
	$0 = *($6 + [80])
	CALL send_deferred($6, $5, $0, (*($6 + [84]) - $0), [0])
	$0 = *($6 + [80])
	if ( ($0 == 0) ){ goto $label$1 }
	*($6 + [84]) = $0
	CALL $310($0)
	
.LABEL $label$1
	CALL $140(($6 + [16]))
	*([0] + [4]) = ($6 + [96])
}

void .FUNC $210 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [96])
	*([0] + [4]) = $6
	$5 = CALL current_time()
	*(($6 + [44])) = [0]
	*(($6 + [48])) = [0]
	*($6 + [28]) = [0]
	*($6 + [32]) = [0]
	*($6 + [36]) = [0]
	*($6 + [40]) = [0]
	*($6 + [16]) = ((CASTING uint_32)(uint_64 ((uint_64)$5 / (uint_64)(int_64)1000000)) + [60])
	*($6 + [52]) = [0]
	*(($6 + [56])) = [0]
	*(($6 + [60])) = [0]
	*($6 + [64]) = [0]
	*(($6 + [68])) = [0]
	*(($6 + [72])) = [0]
	CALL $213(($6 + [52]), $1, $2, $3, $4)
	*($6 + [36]) = [1]
	$5 = CALL $138($0)
	*($6 + [8]) = (int_64)0
	*($6) = $5
	$5 = *($0)
	CALL $139(($6 + [80]), ($6 + [16]))
	$0 = *($6 + [80])
	CALL send_deferred($6, $5, $0, (*($6 + [84]) - $0), [0])
	$0 = *($6 + [80])
	if ( ($0 == 0) ){ goto $label$1 }
	*($6 + [84]) = $0
	CALL $310($0)
	
.LABEL $label$1
	CALL $140(($6 + [16]))
	*([0] + [4]) = ($6 + [96])
}

void .FUNC $213 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $9) / (int_32)[40])
	$8 = ($5 + [1])
	if ( ((uint_32)$8 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$9 = ((int_32)(*($0 + [8]) - $9) / (int_32)[40])
	if ( ((uint_32)$9 > (uint_32)[53687090]) ){ goto $label$4 }
	$9 = ($9 << [1])
	$7 = ( $8 ? $9 : ($9 <= $8) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = CALL $309(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	*(($9 = ($8 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($9 + [8]) = *($3)
	*($9 + [16 align=4]) = (int_64)0
	*(($3 = ($9 + [24]))) = [0]
	$2 = CALL $309([16])
	*($9 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($9 + [20])) = $5
	*($9 + [28]) = [0]
	*(($9 + [32])) = [0]
	*(($9 + [36])) = [0]
	$5 = ($8 + ((int_32)$7 * (int_32)[40]))
	$6 = ($9 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$3 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($9 + [-32])) = *(($2 + [-12]))
	*(($9 + [-40])) = *(($2 + [-20]))
	*(($1 = ($9 + [-24]))) = (int_64)0
	*(($7 = ($9 + [-16]))) = [0]
	$8 = ($2 + [-4])
	*($1) = *($8)
	*(($9 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($7) = *($1)
	*($1) = [0]
	*(($1 = ($9 + [-12]))) = (int_64)0
	*($8) = (int_64)0
	*(($7 = ($9 + [-4]))) = [0]
	$8 = ($2 + [8])
	*($1) = *($8)
	*(($9 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($7) = *($1)
	*($1) = [0]
	*($8) = (int_64)0
	$9 = ($9 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $3) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$7 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$7 = $2
	
.LABEL $label$5
	*($0) = $9
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$8 }
	$1 = ([0] - $7)
	$9 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($9 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($9 + [16])) = $2
	CALL $310($2)
	
.LABEL $label$10
	$2 = *($9)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($9 + [4])) = $2
	CALL $310($2)
	
.LABEL $label$11
	$9 = ($9 + [-40])
	if ( ((int_32)($9 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($7 == 0) ){ goto $label$12 }
	CALL $310($7)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $223 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [960])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1008])
	$3 = *($3)
	*($1) = *($3)
	*(($4 = ($1 + [8]))) = *(($3 + [8]))
	CALL eosio_assert([1], [1072])
	CALL eosio_assert([1], [560])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy(($5 | [8]), $4, [4])
	CALL db_update_i64(*($1 + [20]), $2, $5, [12])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-2287828610704211968) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)-2287828610704211967
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $196 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $309(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $310($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $310($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $197 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [960])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1008])
	$4 = *($1)
	CALL $203($3, $1)
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1072])
	CALL eosio_assert([1], [560])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy(($5 | [8]), ($1 + [8]), [8])
	CALL eosio_assert([1], [560])
	CALL memcpy(($5 + [16]), ($1 + [16]), [8])
	CALL db_update_i64(*($1 + [28]), $2, $5, [24])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [32])
}

void .FUNC $194 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [60]) == (int_32)$0), [576])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [624])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [688])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $310($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $310($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [64]))
}

int_32 .FUNC $195 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)0
	*(($4 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [464])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [128])
	*($0 + [24]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [784])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [784])
	CALL memcpy(($0 + [16]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [28]) = *(*($2 + [8]))
	return $0
}

void .FUNC $219 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $309(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $310($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $310($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $218 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = *([0] + [4])
	$9 = $10
	*($1) = *(*(*($0 + [4])))
	$2 = *($0)
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1248]
	$7 = (int_64)0
	
.LOOP $label$1:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	*($1 + [8]) = $7
	$3 = $10
	$4 = ($3 + [-16])
	*([0] + [4]) = $4
	CALL eosio_assert([1], [560])
	CALL memcpy($4, $1, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy(($3 + [-8]), ($1 + [8]), [8])
	$6 = *($1)
	*($1 + [20]) = CALL db_store_i64(*($2 + [8]), (int_64)-5069082855582203904, *(*($0 + [8])), $6, $4, [16])
	if ( (uint_64)($6 <= *($2 + [16])) ){ goto $label$5 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*([0] + [4]) = $9
}

void .FUNC $190 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [96])
	*([0] + [4]) = $11
	$3 = ($0 + [288])
	$10 = ($0 + [304])
	$9 = *($10)
	if ( ((int_64)$9 != (int_64)-1) ){ goto $label$1 }
	$9 = (int_64)0
	$7 = CALL db_lowerbound_i64(*($3), *(($0 + [296])), (int_64)-9026118753610891264, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	CALL $156($3, $7)
	*($11 + [52]) = [0]
	*($11 + [48]) = $3
	$9 = *(*(CALL $189(($11 + [48])) + [4]))
	$9 = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($0 + [304])) = $9
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($9 <= (int_64)-2), [2208])
	$9 = ((int_64)*($10) + (int_64)-1)
	*($11 + [88]) = $9
	$10 = [0]
	*(($11 + [80])) = [0]
	*($11 + [64]) = (int_64)-1
	*($11 + [72]) = (int_64)0
	$8 = *($0)
	*($11 + [48]) = $8
	*($11 + [56]) = $1
	$7 = CALL db_find_i64($8, $1, (int_64)-9026229453371588608, $9)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$10 = CALL $191(($11 + [48]), $7)
	CALL eosio_assert(((int_32)*($10 + [24]) == (int_32)($11 + [48])), [64])
	*($11 + [32]) = $2
	CALL eosio_assert([1], [848])
	CALL $197(($11 + [48]), $10, (int_64)0, ($11 + [32]))
	goto $label$3 
	
.LABEL $label$4
	*($11 + [40]) = (int_64)1497713412
	*($11 + [32]) = (int_64)0
	CALL eosio_assert([1], [464])
	$1 = (int_64)5850443
	
.LOOP $label$6:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$7 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	CALL eosio_assert($7, [128])
	$1 = *($11 + [88])
	if ( (int_64)($1 == 0) ){ goto $label$9 }
	$1 = ((int_64)$1 + (int_64)-1)
	$4 = *(($11 + [72]))
	$6 = *(($11 + [76]))
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$10 }
	$10 = ($6 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$11:
	if ( ((int_64)*(*($10)) == (int_64)$1) ){ goto $label$10 }
	$6 = $10
	$7 = ($10 + [-24])
	$10 = $7
	if ( ((int_32)($7 + $5) != (int_32)[-24]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$13 }
	$10 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [24]) == (int_32)($11 + [48])), [64])
	if ( $10 ){ goto $label$12 }
	goto $label$9 
	
.LABEL $label$13
	$10 = CALL db_find_i64(*($11 + [48]), *(($11 + [56])), (int_64)-9026229453371588608, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$9 }
	$10 = CALL $191(($11 + [48]), $10)
	CALL eosio_assert(((int_32)*($10 + [24]) == (int_32)($11 + [48])), [64])
	
.LABEL $label$12
	*(($11 + [40])) = *(($10 + [16]))
	*($11 + [32]) = *($10 + [8])
	
.LABEL $label$9
	$1 = *($0)
	*($11 + [20]) = $2
	*($11 + [16]) = ($11 + [88])
	*($11 + [24]) = ($11 + [32])
	CALL $198(($11 + [8]), ($11 + [48]), $1, ($11 + [16]))
	
.LABEL $label$3
	$1 = *($11 + [88])
	$4 = *(($0 + [312]))
	$6 = *(($0 + [316]))
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$14 }
	$10 = ($6 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$15:
	if ( ((int_64)*(*($10)) == (int_64)$1) ){ goto $label$14 }
	$6 = $10
	$7 = ($10 + [-24])
	$10 = $7
	if ( ((int_32)($7 + $5) != (int_32)[-24]) ){ goto $label$15 }
	
.LABEL $label$14
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$17 }
	$10 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [60]) == (int_32)$3), [64])
	goto $label$16 
	
.LABEL $label$17
	$10 = [0]
	$7 = CALL db_find_i64(*(($0 + [288])), *(($0 + [296])), (int_64)-9026118753610891264, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$16 }
	$10 = CALL $156($3, $7)
	CALL eosio_assert(((int_32)*($10 + [60]) == (int_32)$3), [64])
	
.LABEL $label$16
	*($11 + [32]) = $2
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [848])
	CALL $199($3, $10, (int_64)0, ($11 + [32]))
	$6 = *($11 + [72])
	if ( ($6 == 0) ){ goto $label$18 }
	$5 = ($11 + [76])
	$10 = *($5)
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$20 }
	
.LOOP $label$21:
	$10 = ($10 + [-24])
	$7 = *($10)
	*($10) = [0]
	if ( ($7 == 0) ){ goto $label$22 }
	CALL $310($7)
	
.LABEL $label$22
	if ( ((int_32)$6 != (int_32)$10) ){ goto $label$21 }
	$10 = *(($11 + [72]))
	goto $label$19 
	
.LABEL $label$20
	$10 = $6
	
.LABEL $label$19
	*($5) = $6
	CALL $310($10)
	
.LABEL $label$18
	*([0] + [4]) = ($11 + [96])
}

int_32 .FUNC $191 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [752])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $309([40])
	$6 = CALL $195($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = *($4)
	*($8 + [8]) = $5
	$1 = *($4 + [28])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $196(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $310($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $174 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [112])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [960])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1008])
	CALL memcpy($1, *($3), [57])
	CALL eosio_assert([1], [1072])
	*($4 + [72]) = ($4 + [53])
	*($4 + [68]) = $4
	*($4 + [64]) = $4
	*($4 + [80]) = ($4 + [64])
	*($4 + [92]) = ($1 + [8])
	*($4 + [88]) = $1
	*($4 + [96]) = ($1 + [16])
	*($4 + [100]) = ($1 + [24])
	*($4 + [104]) = ($1 + [40])
	*($4 + [108]) = ($1 + [56])
	CALL $176(($4 + [88]), ($4 + [80]))
	CALL db_update_i64(*($1 + [68]), $2, $4, [53])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)3932090329724878848) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)3932090329724878849
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [112])
}

void .FUNC $175 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [112])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$3()), [896])
	$4 = CALL $309([80])
	CALL $154($4)
	*($4 + [64]) = $1
	CALL memcpy($4, *($3), [57])
	*($7 + [72]) = ($7 + [53])
	*($7 + [68]) = $7
	*($7 + [64]) = $7
	*($7 + [80]) = ($7 + [64])
	*($7 + [92]) = ($4 + [8])
	*($7 + [88]) = $4
	*($7 + [96]) = ($4 + [16])
	*($7 + [100]) = ($4 + [24])
	*($7 + [104]) = ($4 + [40])
	*($7 + [108]) = ($4 + [56])
	CALL $176(($7 + [88]), ($7 + [80]))
	*($4 + [68]) = CALL db_store_i64(*($1 + [8]), (int_64)3932090329724878848, $2, (int_64)3932090329724878848, $7, [53])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)3932090329724878848) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)3932090329724878849
	
.LABEL $label$1
	*($7 + [88]) = $4
	*($7) = (int_64)3932090329724878848
	$5 = *($4 + [68])
	*($7 + [64]) = $5
	$6 = ($1 + [28])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = (int_64)3932090329724878848
	*($3 + [16]) = $5
	*($7 + [88]) = [0]
	*($3) = $4
	*($6) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $161(($1 + [24]), ($7 + [88]), $7, ($7 + [64]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$4 = *($7 + [88])
	*($7 + [88]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $310($4)
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [112])
}

void .FUNC $176 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [560])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	*($5 + [15]) = *(*($0 + [20]))
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [560])
	CALL memcpy(*($2 + [4]), ($5 + [15]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	*([0] + [4]) = ($5 + [16])
}

int_32 .FUNC $177 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [752])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $309([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [784])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)$4 != (int_32)[8]), [784])
	CALL memcpy(($6 + [8]), ($7 + [8]), [1])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $181(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $310($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $170 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $309(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [8])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [12])) = $6
	CALL $310($6)
	
.LABEL $label$11
	CALL $310($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $310($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $171 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$7 = *($0 + [8])
	if ( ((uint_32)int_32(($7 - $2) >> [3]) >= (uint_32)$1) ){ goto $label$5 }
	$3 = *($0)
	$4 = int_32(($2 - $3) >> [3])
	$2 = ($4 + $1)
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$7 = ($7 - $3)
	if ( ((uint_32)int_32($7 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$6 = int_32($7 >> [2])
	$6 = ( $2 ? $6 : ($6 <= $2) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$6
	$7 = CALL $309(($6 << [3]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $2
	$7 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$7 }
	*(($0 + [4])) = ($2 + ($1 << [3]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $324($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$3 = ($7 + ($6 << [3]))
	$2 = ($7 + ($4 << [3]))
	$6 = $2
	$7 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$8 }
	$4 = ($2 + ($1 << [3]))
	$6 = *($0)
	$5 = ($0 + [4])
	$7 = (*($5) - $6)
	$1 = ($2 - $7)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $7)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($5) = $4
	*(($0 + [8])) = $3
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $310($6)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC $172 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$3 = int_32(($6 - $5) >> [3])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[536870912]) ){ goto $label$3 }
	$4 = [536870911]
	$2 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$5 }
	$4 = int_32($2 >> [2])
	$4 = ( $7 ? $4 : ($4 <= $7) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $309(($4 << [3]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $324($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($3 << [3])))) = *($1)
	$6 = ($6 - $5)
	$1 = ($3 - $6)
	$4 = ($7 + ($4 << [3]))
	$7 = ($3 + [8])
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $5, $6)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $310($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $173 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [64]) == (int_32)$0), [64])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3932090329724878848, (int_64)3932090329724878848)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $155($0, $3)
	CALL eosio_assert(((int_32)*($3 + [64]) == (int_32)$0), [64])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [848])
	CALL $174($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $175($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $178 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [208])
	*([0] + [4]) = $7
	if ( ((int_64)$2 != (int_64)1) ){ goto $label$1 }
	*((($7 + [168]) + [32])) = [0]
	*($7 + [176]) = $1
	*($7 + [184]) = (int_64)-1
	*($7 + [192]) = (int_64)0
	$4 = *($0)
	*($7 + [168]) = $4
	*((($7 + [8]) + [32])) = (int_64)310366523908
	*($7 + [16]) = [0]
	*($7 + [8]) = (int_64)0
	*($7 + [24]) = (int_64)0
	*($7 + [32]) = (int_64)0
	CALL eosio_assert([1], [464])
	$2 = (int_64)1212369234
	$6 = [0]
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	
.LOOP $label$6:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$3 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	$3 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$3 = [0]
	
.LABEL $label$2
	CALL eosio_assert($3, [128])
	*(($7 + [56])) = (int_64)310366523908
	*($7 + [48]) = (int_64)0
	CALL eosio_assert([1], [464])
	$2 = (int_64)1212369234
	$6 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$3 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$3 = [0]
	
.LABEL $label$7
	CALL eosio_assert($3, [128])
	*(($7 + [72])) = (int_64)1397703940
	*($7 + [64]) = (int_64)0
	CALL eosio_assert([1], [464])
	$2 = (int_64)5459781
	$6 = [0]
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	
.LOOP $label$16:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$16 }
	
.LABEL $label$15
	$3 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	$3 = [0]
	
.LABEL $label$12
	CALL eosio_assert($3, [128])
	*($7 + [80]) = [0]
	CALL $91(($7 + [88]), ($7 + [168]), $4, ($7 + [8]))
	*($7 + [96]) = [3]
	*($7 + [104]) = (int_64)45
	CALL $81(($7 + [168]), ($7 + [88]), *($0))
	CALL $180($0, $1, (int_64)1)
	$0 = *($7 + [192])
	if ( ($0 == 0) ){ goto $label$1 }
	$5 = ($7 + [196])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$18 }
	
.LOOP $label$19:
	$6 = ($6 + [-24])
	$3 = *($6)
	*($6) = [0]
	if ( ($3 == 0) ){ goto $label$20 }
	CALL $310($3)
	
.LABEL $label$20
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$19 }
	$6 = *(($7 + [192]))
	goto $label$17 
	
.LABEL $label$18
	$6 = $0
	
.LABEL $label$17
	*($5) = $0
	CALL $310($6)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [208])
}

void .FUNC $179 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [576])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [624])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [688])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $310($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $310($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $237 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [64])
	*([0] + [4]) = $11
	$10 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $10) / (int_32)[40])
	$7 = ($5 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$8 = [107374182]
	$10 = ((int_32)(*($0 + [8]) - $10) / (int_32)[40])
	if ( ((uint_32)$10 > (uint_32)[53687090]) ){ goto $label$4 }
	$10 = ($10 << [1])
	$8 = ( $7 ? $10 : ($10 <= $7) )
	if ( ($8 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $309(((int_32)$8 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	*(($10 = ($7 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($10 + [8]) = *($3)
	*($10 + [16 align=4]) = (int_64)0
	*(($3 = ($10 + [24]))) = [0]
	$2 = CALL $309([16])
	*($10 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($10 + [20])) = $5
	*($10 + [28]) = [0]
	*(($6 = ($10 + [32]))) = [0]
	*(($10 + [36])) = [0]
	$2 = *($4 + [60])
	$1 = ( *(($4 + [64])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($1 + [73])
	$9 = (CASTING uint_64)(uint_32 $1)
	$3 = ($4 + [60])
	$5 = ($7 + ((int_32)$8 * (int_32)[40]))
	$1 = ($10 + [28])
	
.LOOP $label$5:
	$2 = ($2 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$5 }
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $52($1, $2)
	$8 = *($6)
	$2 = *($1)
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	$2 = [0]
	
.LABEL $label$6
	*($11 + [12]) = $2
	*($11 + [8]) = $2
	*($11 + [16]) = $8
	*($11 + [24]) = ($11 + [8])
	*($11 + [56]) = $3
	*($11 + [32]) = $4
	*($11 + [36]) = ($4 + [8])
	*($11 + [40]) = ($4 + [16])
	*($11 + [44]) = ($4 + [24])
	*($11 + [48]) = ($4 + [40])
	*($11 + [52]) = ($4 + [56])
	*($11 + [60]) = ($4 + [72])
	$3 = ($10 + [40])
	CALL $238(($11 + [32]), ($11 + [24]))
	$2 = *($0)
	$4 = *(($0 + [4]))
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$9 }
	$7 = ([0] - $2)
	$2 = ($4 + [-20])
	
.LOOP $label$10:
	*(($10 + [-32])) = *(($2 + [-12]))
	*(($10 + [-40])) = *(($2 + [-20]))
	*(($4 = ($10 + [-24]))) = (int_64)0
	*(($1 = ($10 + [-16]))) = [0]
	$8 = ($2 + [-4])
	*($4) = *($8)
	*(($10 + [-20])) = *($2)
	$4 = ($2 + [4])
	*($1) = *($4)
	*($4) = [0]
	*(($4 = ($10 + [-12]))) = (int_64)0
	*($8) = (int_64)0
	*(($1 = ($10 + [-4]))) = [0]
	$8 = ($2 + [8])
	*($4) = *($8)
	*(($10 + [-8])) = *(($2 + [12]))
	$4 = ($2 + [16])
	*($1) = *($4)
	*($4) = [0]
	*($8) = (int_64)0
	$10 = ($10 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $7) != (int_32)[-20]) ){ goto $label$10 }
	$2 = *(($0 + [4]))
	$1 = *($0)
	goto $label$8 
	
.LABEL $label$9
	$1 = $2
	
.LABEL $label$8
	*($0) = $10
	*(($0 + [4])) = $3
	*(($0 + [8])) = $5
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$11 }
	$4 = ([0] - $1)
	$10 = ($2 + [-24])
	
.LOOP $label$12:
	$2 = *(($10 + [12]))
	if ( ($2 == 0) ){ goto $label$13 }
	*(($10 + [16])) = $2
	CALL $310($2)
	
.LABEL $label$13
	$2 = *($10)
	if ( ($2 == 0) ){ goto $label$14 }
	*(($10 + [4])) = $2
	CALL $310($2)
	
.LABEL $label$14
	$10 = ($10 + [-40])
	if ( ((int_32)($10 + $4) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ($1 == 0) ){ goto $label$15 }
	CALL $310($1)
	
.LABEL $label$15
	*([0] + [4]) = ($11 + [64])
	(unreachable)
}

void .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [560])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	*($5 + [15]) = *(*($0 + [24]))
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [560])
	CALL memcpy(*($2 + [4]), ($5 + [15]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $235 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $309(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $310($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $310($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $97 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [784])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [784])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [784])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [784])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [784])
	CALL memcpy(($5 + [15]), *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	*($0) = ((int_32)*($5 + [15]) != (int_32)[0])
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $90 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $90($0, *($1))
	CALL $90($0, *($1 + [4]))
	CALL $310($1)
	
.LABEL $label$1
}

void .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *($0)
	$5 = *($0 + [4])
	$2 = ((int_32)($5 - $4) / (int_32)[40])
	$7 = ($2 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$3 = ((int_32)(*($0 + [8]) - $4) / (int_32)[40])
	if ( ((uint_32)$3 > (uint_32)[53687090]) ){ goto $label$4 }
	$6 = ($3 << [1])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $309(((int_32)$6 * (int_32)[40]))
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	$5 = ($5 - $4)
	$2 = CALL memcpy(($7 + ((int_32)$2 * (int_32)[40])), $1, [40])
	$1 = ($2 + ((int_32)((int_32)$5 / (int_32)[-40]) * (int_32)[40]))
	$6 = ($7 + ((int_32)$6 * (int_32)[40]))
	$7 = ($2 + [40])
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $4, $5)
	$4 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $310($4)
	
.LABEL $label$6
	(unreachable)
}

int_32 .FUNC $232 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [752])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $309([80])
	$6 = CALL $234($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = *($4)
	*($8 + [8]) = $5
	$1 = *($4 + [68])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $235(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $310($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $231 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$2 = *(($0 + [32]))
	$6 = *(($0 + [36]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$5 = ($6 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$2:
	if ( ((int_64)*(*($5)) == (int_64)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [8])
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [64]) == (int_32)$4), [64])
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	$6 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)4229865212519383040, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $232($4, $6)
	CALL eosio_assert(((int_32)*($5 + [64]) == (int_32)$4), [64])
	
.LABEL $label$3
	$6 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($6, [336])
	CALL eosio_assert($6, [384])
	$6 = CALL db_next_i64(*($5 + [68]), ($7 + [8]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	CALL $232($4, $6)
	
.LABEL $label$5
	CALL $233($4, $5)
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $93 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [128])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$3()), [896])
	$4 = CALL $309([96])
	CALL $94($4)
	*($4 + [80]) = $1
	CALL memcpy($4, *($3), [73])
	*($7 + [80]) = ($7 + [66])
	*($7 + [76]) = $7
	*($7 + [72]) = $7
	*($7 + [88]) = ($7 + [72])
	*($7 + [100]) = ($4 + [8])
	*($7 + [96]) = $4
	*($7 + [104]) = ($4 + [16])
	*($7 + [108]) = ($4 + [24])
	*($7 + [112]) = ($4 + [40])
	*($7 + [116]) = ($4 + [56])
	*($7 + [120]) = ($4 + [72])
	CALL $95(($7 + [96]), ($7 + [88]))
	*($4 + [84]) = CALL db_store_i64(*($1 + [8]), (int_64)-3020371635640205312, $2, (int_64)-3020371635640205312, $7, [66])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)-3020371635640205312) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)-3020371635640205311
	
.LABEL $label$1
	*($7 + [96]) = $4
	*($7) = (int_64)-3020371635640205312
	$5 = *($4 + [84])
	*($7 + [72]) = $5
	$6 = ($1 + [28])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = (int_64)-3020371635640205312
	*($3 + [16]) = $5
	*($7 + [96]) = [0]
	*($3) = $4
	*($6) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $96(($1 + [24]), ($7 + [96]), $7, ($7 + [72]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$4 = *($7 + [96])
	*($7 + [96]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $310($4)
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [128])
}

void .FUNC $65 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [80])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [960])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1008])
	CALL memcpy($1, *($3), [40])
	CALL eosio_assert([1], [1072])
	*($4 + [48]) = ($4 + [40])
	*($4 + [44]) = $4
	*($4 + [40]) = $4
	*($4 + [56]) = ($4 + [40])
	*($4 + [68]) = ($1 + [8])
	*($4 + [64]) = $1
	*($4 + [72]) = ($1 + [24])
	CALL $67(($4 + [64]), ($4 + [56]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [40])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-9026050048739246080) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)-9026050048739246079
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [80])
}

void .FUNC $85 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = *(($1 + [28]))
	if ( ((int_32)$3 == (int_32)*($1 + [24])) ){ goto $label$3 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$1), [64])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$3 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)4853904214365044736, (int_64)4853904214365044736)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $111($1, $3)
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$1), [64])
	
.LABEL $label$2
	$2 = $3
	
.LABEL $label$1
	*(($0 + [12])) = (int_64)0
	*($0 + [8]) = [0]
	*($0) = *($2)
	$1 = (*(($2 + [12])) - *($2 + [8]))
	$3 = ((int_32)$1 / (int_32)[40])
	if ( ($1 == 0) ){ goto $label$5 }
	if ( ((uint_32)$3 >= (uint_32)[107374183]) ){ goto $label$4 }
	$1 = CALL $309($1)
	*(($0 + [8])) = $1
	*(($0 + [16])) = ($1 + ((int_32)$3 * (int_32)[40]))
	*(($0 = ($0 + [12]))) = $1
	$3 = *(($2 + [8]))
	$2 = (*(($2 + [12])) - $3)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $3, $2)
	*($0) = (*($0) + ((int_32)((uint_32)$2 / (uint_32)[40]) * (int_32)[40]))
	
.LABEL $label$5
	return (unreachable)
	
.LABEL $label$4
	CALL $324(($0 + [8]))
}

void .FUNC $58 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $309(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $310($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $310($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $59 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $309(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $310($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $310($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $271 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$2 = *($0)
	$3 = *(*($0 + [4]))
	*($1) = *($3)
	*(($4 = ($1 + [16]))) = *(($3 + [16]))
	*(($5 = ($1 + [8]))) = *(($3 + [8]))
	CALL eosio_assert([1], [560])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy(($6 | [8]), $5, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy(($6 + [16]), $4, [8])
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-5069068143847014400, *(*($0 + [8])), (int_64)-5069068143847014400, $6, [24])
	if ( ((uint_64)*($2 + [16]) > (uint_64)(int_64)-5069068143847014400) ){ goto $label$1 }
	*(($2 + [16])) = (int_64)-5069068143847014399
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $270 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$3()), [896])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($4 = CALL $309([40])) + [16]) = (int_64)1397703940
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [464])
	$2 = (int_64)5459781
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [128])
	*($4 + [24]) = $1
	CALL $271(($7 + [16]), $4)
	*($7 + [32]) = $4
	*($7 + [16]) = (int_64)-5069068143847014400
	$6 = *($4 + [28])
	*($7 + [12]) = $6
	$5 = ($1 + [28])
	$3 = *($5)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$7 }
	*($3 + [8]) = (int_64)-5069068143847014400
	*($3 + [16]) = $6
	*($7 + [32]) = [0]
	*($3) = $4
	*($5) = ($3 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $269(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$6
	*($0 + [4]) = $4
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL $310($3)
	
.LABEL $label$8
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $277 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$4 = CALL strlen([2896])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($4 << [1])
	$6 = ($0 + [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($4 + [16]) & [-16])
	$6 = CALL $309($5)
	*($0) = ($5 | [1])
	*($0 + [8]) = $6
	*($0 + [4]) = $4
	
.LABEL $label$3
	CALL memcpy($6, [2896], $4)
	
.LABEL $label$2
	*(($6 + $4)) = [0]
	*($8 + [16]) = (int_64)0
	*($8 + [24]) = [0]
	$6 = (($8 + [16]) | [1])
	$7 = *($2)
	
.LOOP $label$5:
	$4 = (CASTING uint_32)(uint_64 ((uint_64)$7 % (uint_64)(int_64)10))
	CALL $6(($8 + [32]), ( ($4 | [48]) ? ($4 + [55]) : ($4 <= [10]) ), ($8 + [16]))
	$3 = ((uint_64)$7 / (uint_64)(int_64)10)
	if ( (*($8 + [16]) & [1]) ){ goto $label$7 }
	*($8 + [16]) = [0]
	goto $label$6 
	
.LABEL $label$7
	*(*((($8 + [16]) + [8]))) = [0]
	*($8 + [20]) = [0]
	
.LABEL $label$6
	CALL $312(($8 + [16]), [0])
	*((($8 + [16]) + [8])) = *((($8 + [32]) + [8]))
	*($8 + [16]) = *($8 + [32])
	$4 = ((uint_64)$7 > (uint_64)(int_64)9)
	$7 = $3
	if ( $4 ){ goto $label$5 }
	$4 = *($8 + [16])
	$5 = ($4 & [1])
	CALL $315($0, ( *((($8 + [16]) + [8])) ? $6 : $5 ), ( *($8 + [20]) ? uint_32($4 >> [1]) : $5 ))
	CALL $316($0, [2912])
	*($8 + [8]) = *($2 + [8])
	CALL $239(($8 + [32]), ($8 + [8]))
	$4 = *($8 + [32])
	$6 = ($4 & [1])
	CALL $315($0, ( *($8 + [40]) ? (($8 + [32]) | [1]) : $6 ), ( *($8 + [36]) ? uint_32($4 >> [1]) : $6 ))
	CALL $316($0, [3872])
	if ( ((*($8 + [32]) & [1]) == 0) ){ goto $label$8 }
	CALL $310(*((($8 + [32]) + [8])))
	
.LABEL $label$8
	if ( ((*($8 + [16]) & [1]) == 0) ){ goto $label$9 }
	CALL $310(*(($8 + [24])))
	
.LABEL $label$9
	*([0] + [4]) = ($8 + [48])
	return (unreachable)
	
.LABEL $label$1
	CALL $311($0)
}

void .FUNC $276 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [128])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$3()), [896])
	*(($4 = CALL $309([80])) + [32]) = (int_64)1398362884
	*($4 + [24]) = (int_64)0
	CALL eosio_assert([1], [464])
	$5 = ($4 + [24])
	$6 = (int_64)5462355
	$7 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$8 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	
.LABEL $label$1
	CALL eosio_assert($8, [128])
	*($4 + [64]) = $1
	$7 = *($3)
	*($4 + [16]) = *($7 + [16])
	*($4) = *($7)
	*($4 + [8]) = *($7 + [8])
	*(($5 + [16])) = *(($7 + [40]))
	*(($5 + [8])) = *(($7 + [32]))
	*($5) = *($7 + [24])
	*($4 + [48]) = *($7 + [48])
	*($4 + [56]) = *($7 + [56])
	*($4 + [49]) = *($7 + [49])
	*($9 + [80]) = ($9 + [58])
	*($9 + [76]) = $9
	*($9 + [72]) = $9
	*($9 + [88]) = ($9 + [72])
	*($9 + [100]) = ($4 + [8])
	*($9 + [96]) = $4
	*($9 + [104]) = ($4 + [16])
	*($9 + [108]) = $5
	*($9 + [112]) = ($4 + [48])
	*($9 + [116]) = ($4 + [49])
	*($9 + [120]) = ($4 + [56])
	CALL $278(($9 + [96]), ($9 + [88]))
	$6 = *($4)
	*($4 + [68]) = CALL db_store_i64(*($1 + [8]), (int_64)4229865212519383040, $2, $6, $9, [58])
	if ( (uint_64)($6 <= *($1 + [16])) ){ goto $label$6 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($9 + [96]) = $4
	$6 = *($4)
	*($9) = $6
	$8 = *($4 + [68])
	*($9 + [72]) = $8
	$5 = ($1 + [28])
	$7 = *($5)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$8 }
	*($7 + [8]) = $6
	*($7 + [16]) = $8
	*($9 + [96]) = [0]
	*($7) = $4
	*($5) = ($7 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $235(($1 + [24]), ($9 + [96]), $9, ($9 + [72]))
	
.LABEL $label$7
	*($0 + [4]) = $4
	*($0) = $1
	$7 = *($9 + [96])
	*($9 + [96]) = [0]
	if ( ($7 == 0) ){ goto $label$9 }
	CALL $310($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [128])
}

void .FUNC $275 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert((((*($1) + [-2]) & [255]) <= [95]), [3904])
	$4 = *($2 + [8])
	$3 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 *($2)) * (float_64)((float_64)(float_64)98 / (float_64)((float_64)(CASTING float_64)(uint_32 *($1)) + (float_64)(float_64)-1))))
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [464])
	$5 = (uint_64)$4 >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [128])
	CALL $79($7, $0, $2)
	CALL eosio_assert(((int_64)$4 == (int_64)*($7 + [8])), [160])
	CALL eosio_assert(((int_64)$3 <= (int_64)*($7)), [3968])
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $274 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = *($0)
	$8 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [3])
	if ( ((uint_32)$4 <= (uint_32)int_32(($8 - $5) >> [3])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $310($5)
	$8 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$1 }
	$5 = [536870911]
	if ( ((uint_32)int_32($8 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$5 = $4
	$2 = int_32($8 >> [2])
	if ( ($2 <= $4) ){ goto $label$6 }
	$5 = $2
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($5 << [3])
	$5 = CALL $309($4)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($5, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	return 
	
.LABEL $label$4
	$3 = int_32($3 >> [3])
	$3 = (*($0 + [4]) - $5)
	$8 = ( ($1 + $3) ? $2 : ((uint_32)$4 > (uint_32)$3) )
	$6 = ($8 - $1)
	$7 = int_32($6 >> [3])
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memmove($5, $1, $6)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$3) ){ goto $label$2 }
	$1 = ($2 - $8)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $8, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + ($7 << [3]))
	return (unreachable)
	
.LABEL $label$1
	CALL $324($0)
}

int_32 .FUNC $50 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $309([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $52($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = $1
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	CALL $55(($9 + [24]), ($9 + [16]))
	*([0] + [4]) = ($9 + [32])
	return $0
}

void .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $52($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [560])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [560])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $54(CALL $53($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $279 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [112])
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*(($1 + [52])) == (int_32)$0), [960])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1008])
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)*(*($3)))
	$4 = *($1)
	$3 = *($3 + [4])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [24]))), [224])
	$5 = ((int_64)*($1 + [16]) + (int_64)*($3))
	*($1 + [16]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($1 + [16]) < (int_64)4611686018427387904), [304])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1072])
	*($6 + [72]) = ($6 + [49])
	*($6 + [68]) = $6
	*($6 + [64]) = $6
	*($6 + [80]) = ($6 + [64])
	*($6 + [92]) = ($1 + [8])
	*($6 + [88]) = $1
	*($6 + [96]) = ($1 + [16])
	*($6 + [100]) = ($1 + [32])
	*($6 + [104]) = ($1 + [40])
	*($6 + [108]) = ($1 + [48])
	CALL $222(($6 + [88]), ($6 + [80]))
	CALL db_update_i64(*($1 + [56]), $2, $6, [49])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [112])
}

int_32 .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [560])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [560])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [560])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [560])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [560])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [560])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $56(*($1), ($0 + [32]))
}

int_32 .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [560])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [560])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $57 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)0
	*(($4 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [464])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [128])
	*($0 + [24]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [784])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [784])
	CALL memcpy(($0 + [16]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [28]) = *(*($2 + [8]))
	return $0
}

void .FUNC $152 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	*($5 + [8]) = (int_64)1397703940
	*($5) = (int_64)0
	CALL eosio_assert([1], [464])
	$3 = [0]
	$2 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [128])
	CALL $162($0, ($1 + [88]), *($1), $5)
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $153 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$17 = (*([0] + [4]) - [160])
	*([0] + [4]) = $17
	*($0 + [8]) = (int_64)1397703940
	*($0) = (int_64)0
	CALL eosio_assert([1], [464])
	$14 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$16 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $14) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$15 = [1]
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$15 = [0]
	
.LABEL $label$1
	CALL eosio_assert($15, [128])
	CALL memset(($17 + [8]), [0], [152])
	$16 = CALL $120(($17 + [8]))
	$15 = ($1 + [128])
	$12 = *(($1 + [156]))
	if ( ((int_32)$12 == (int_32)*(($1 + [152]))) ){ goto $label$8 }
	$12 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [152]) == (int_32)$15), [64])
	if ( $12 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$12 = CALL db_find_i64(*($15), *(($1 + [136])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$6 }
	$12 = CALL $121($15, $12)
	CALL eosio_assert(((int_32)*($12 + [152]) == (int_32)$15), [64])
	
.LABEL $label$7
	$16 = $12
	
.LABEL $label$6
	$14 = *(($16 + [112]))
	$13 = *(($16 + [96]))
	$3 = *(($16 + [80]))
	$4 = *(($16 + [64]))
	$5 = *(($16 + [48]))
	$6 = *($16 + [104])
	$7 = *($16 + [88])
	$8 = *($16 + [72])
	$9 = *($16 + [56])
	$10 = *($16 + [40])
	$11 = *($16 + [24])
	$16 = ($0 + [8])
	CALL eosio_assert(((int_64)*(($16 + [32])) == (int_64)*($16)), [224])
	$11 = ((int_64)$11 + (int_64)*($0))
	*($0) = $11
	CALL eosio_assert(((int_64)$11 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($0) < (int_64)4611686018427387904), [304])
	CALL eosio_assert(((int_64)$5 == (int_64)*($16)), [224])
	$5 = ((int_64)$10 + (int_64)*($0))
	*($0) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($0) < (int_64)4611686018427387904), [304])
	CALL eosio_assert(((int_64)$4 == (int_64)*($16)), [224])
	$4 = ((int_64)$9 + (int_64)*($0))
	*($0) = $4
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($0) < (int_64)4611686018427387904), [304])
	CALL eosio_assert(((int_64)$3 == (int_64)*($16)), [224])
	$3 = ((int_64)$8 + (int_64)*($0))
	*($0) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($0) < (int_64)4611686018427387904), [304])
	CALL eosio_assert(((int_64)$13 == (int_64)*($16)), [224])
	$13 = ((int_64)$7 + (int_64)*($0))
	*($0) = $13
	CALL eosio_assert(((int_64)$13 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($0) < (int_64)4611686018427387904), [304])
	CALL eosio_assert(((int_64)$14 == (int_64)*($16)), [224])
	$14 = ((int_64)$6 + (int_64)*($0))
	*($0) = $14
	CALL eosio_assert(((int_64)$14 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($0) < (int_64)4611686018427387904), [304])
	CALL memset(($17 + [8]), [0], [64])
	$16 = CALL $154(($17 + [8]))
	$15 = ($1 + [248])
	$12 = *(($1 + [276]))
	if ( ((int_32)$12 == (int_32)*(($1 + [272]))) ){ goto $label$11 }
	$12 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [64]) == (int_32)$15), [64])
	if ( $12 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$12 = CALL db_find_i64(*($15), *(($1 + [256])), (int_64)3932090329724878848, (int_64)3932090329724878848)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$9 }
	$12 = CALL $155($15, $12)
	CALL eosio_assert(((int_32)*($12 + [64]) == (int_32)$15), [64])
	
.LABEL $label$10
	$16 = $12
	
.LABEL $label$9
	$14 = *($16 + [24])
	$12 = ($0 + [8])
	CALL eosio_assert(((int_64)*(($16 + [32])) == (int_64)*($12)), [224])
	$14 = ((int_64)$14 + (int_64)*($0))
	*($0) = $14
	CALL eosio_assert(((int_64)$14 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($0) < (int_64)4611686018427387904), [304])
	$15 = [0]
	$16 = CALL db_lowerbound_i64(*($1 + [288]), *(($1 + [296])), (int_64)-9026118753610891264, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$12 }
	$2 = ($1 + [288])
	$16 = CALL $156($2, $16)
	
.LOOP $label$13:
	$14 = *($16 + [40])
	$13 = *(($16 + [48]))
	CALL eosio_assert(((int_64)*(($16 + [16])) == (int_64)$13), [1280])
	$14 = (int_64)
	CALL eosio_assert(((int_64)$14($14 - *($16 + [8]))) > (int_64)-4611686018427387904), [1328])
	CALL eosio_assert(((int_64)$14 < (int_64)4611686018427387904), [1360])
	CALL eosio_assert(((int_64)$13 == (int_64)*($12)), [224])
	$14 = ((int_64)*($0) + (int_64)$14)
	*($0) = $14
	CALL eosio_assert(((int_64)$14 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($0) < (int_64)4611686018427387904), [304])
	CALL eosio_assert([1], [384])
	$16 = CALL db_next_i64(*($16 + [64]), ($17 + [8]))
	if ( ((int_32)$16 <= (int_32)[-1]) ){ goto $label$12 }
	$16 = CALL $156($2, $16)
	goto $label$13 
	
.LABEL $label$12
	CALL eosio_assert([1], [464])
	$12 = ($1 + [848])
	$14 = (int_64)5462355
	
.LOOP $label$15:
	$16 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $14) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	
.LOOP $label$17:
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	$15 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	$16 = [1]
	$15 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	CALL eosio_assert($16, [128])
	$16 = *(($1 + [876]))
	if ( ((int_32)$16 == (int_32)*(($1 + [872]))) ){ goto $label$21 }
	$16 = *(($16 + [-24]))
	CALL eosio_assert(((int_32)*($16 + [24]) == (int_32)$12), [64])
	if ( $16 ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	$16 = CALL db_find_i64(*(($1 + [848])), *(($1 + [856])), (int_64)4154289181272571904, (int_64)4154289181272571904)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$19 }
	$16 = CALL $77($12, $16)
	CALL eosio_assert(((int_32)*($16 + [24]) == (int_32)$12), [64])
	
.LABEL $label$20
	$14 = *(($16 + [16]))
	$13 = *($16 + [8])
	goto $label$18 
	
.LABEL $label$19
	$13 = (int_64)0
	$14 = (int_64)1398362884
	
.LABEL $label$18
	CALL eosio_assert(((int_64)$14 == (int_64)*(($0 + [8]))), [224])
	$14 = ((int_64)*($0) + (int_64)$13)
	*($0) = $14
	CALL eosio_assert(((int_64)$14 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($0) < (int_64)4611686018427387904), [304])
	*([0] + [4]) = ($17 + [160])
}

void .FUNC $150 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $309(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $310($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $310($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $151 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)(uint_64)*(*($6) + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [64])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3607749779137757184, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $166($0, $5)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [64])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

int_32 .FUNC $156 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [752])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [20]) = $4
	*($8 + [16]) = $4
	*($8 + [24]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $309([72])
	CALL $157($6)
	*($6 + [60]) = $0
	*($8 + [32]) = ($8 + [16])
	*($8 + [44]) = ($6 + [8])
	*($8 + [40]) = $6
	*($8 + [48]) = ($6 + [24])
	*($8 + [52]) = ($6 + [40])
	*($8 + [56]) = ($6 + [56])
	CALL $158(($8 + [40]), ($8 + [32]))
	*($6 + [64]) = $1
	*($8 + [32]) = $6
	$5 = *($6)
	*($8 + [40]) = $5
	$7 = *($6 + [64])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [32]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $159(($0 + [24]), ($8 + [32]), ($8 + [40]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [32])
	*($8 + [32]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $310($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [64])
	return $6
}

int_32 .FUNC $157 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)0
	*(($2 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [464])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [128])
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [464])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [128])
	*(($2 = ($0 + [48]))) = (int_64)1398362884
	*($0 + [40]) = (int_64)0
	CALL eosio_assert([1], [464])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [128])
	return $0
}

int_32 .FUNC $154 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [24]) = (int_64)0
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	CALL eosio_assert([1], [464])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [128])
	*(($2 = ($0 + [48]))) = (int_64)1398362884
	*($0 + [40]) = (int_64)0
	CALL eosio_assert([1], [464])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [128])
	return $0
}

int_32 .FUNC $155 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [64])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [752])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($8 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($7 + [20]) = $4
	*($7 + [16]) = $4
	*($7 + [24]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$5 = CALL $309([80])
	CALL $154($5)
	*($5 + [64]) = $0
	*($7 + [32]) = ($7 + [16])
	*($7 + [44]) = ($5 + [8])
	*($7 + [40]) = $5
	*($7 + [48]) = ($5 + [16])
	*($7 + [52]) = ($5 + [24])
	*($7 + [56]) = ($5 + [40])
	*($7 + [60]) = ($5 + [56])
	CALL $160(($7 + [40]), ($7 + [32]))
	*($5 + [68]) = $1
	*($7 + [32]) = $5
	*($7 + [40]) = (int_64)3932090329724878848
	$6 = *($5 + [68])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = (int_64)3932090329724878848
	*($4 + [16]) = $6
	*($7 + [32]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $161(($0 + [24]), ($7 + [32]), ($7 + [40]), ($7 + [12]))
	
.LABEL $label$8
	$4 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $310($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [64])
	return $5
}

void .FUNC $158 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [784])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [784])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [784])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [784])
	CALL memcpy($0, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
}

void .FUNC $159 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $309(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $310($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $310($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $273 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [16])
	$10 = $9
	*([0] + [4]) = $9
	$3 = *($0 + [4])
	*($1) = *(*($3))
	$7 = [8]
	$2 = *($0)
	$3 = *($3 + [4])
	$4 = ($1 + [8])
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$1 }
	CALL $274($4, *($3), *($3 + [4]))
	
.LABEL $label$1
	$5 = *($4)
	$3 = *(($1 + [12]))
	$6 = ($3 - $5)
	$8 = (CASTING uint_64)(uint_32 int_32($6 >> [3]))
	
.LOOP $label$2:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$3 }
	$7 = (($6 & [-8]) + $7)
	
.LABEL $label$3
	if ( ($7 <= [513]) ){ goto $label$5 }
	$9 = CALL malloc($7)
	goto $label$4 
	
.LABEL $label$5
	$9 = ($9 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$4
	*($10) = $9
	*($10 + [8]) = ($9 + $7)
	CALL eosio_assert(((int_32)$7 > (int_32)[7]), [560])
	CALL memcpy($9, $1, [8])
	*($10 + [4]) = ($9 + [8])
	CALL $272($10, $4)
	$8 = *($1)
	*($1 + [24]) = CALL db_store_i64(*($2 + [8]), (int_64)-6030912142679474176, *(*($0 + [8])), $8, $9, $7)
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL free($9)
	
.LABEL $label$6
	if ( (uint_64)($8 <= *($2 + [16])) ){ goto $label$7 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $272 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$6 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [3]))
	$7 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$3 = ((int_64)$6) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $7) > (int_32)[0]), [560])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$7 = (*($5) + [1])
	*($5) = $7
	if ( $3 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$2 }
	$2 = ($0 + [4])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $7) > (int_32)[7]), [560])
	CALL memcpy(*($2), $5, [8])
	$7 = (*($2) + [8])
	*($2) = $7
	$5 = ($5 + [8])
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$6 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [3]))
	$7 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$3 = ((int_64)$6) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $7) > (int_32)[0]), [560])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$7 = (*($5) + [1])
	*($5) = $7
	if ( $3 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$2 }
	$2 = ($0 + [4])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $7) > (int_32)[7]), [560])
	CALL memcpy(*($2), $5, [8])
	$7 = (*($2) + [8])
	*($2) = $7
	$5 = ($5 + [8])
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $228 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	$5 = *($3 + [8])
	*($8 + [24]) = $5
	$4 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 *($3)) * (float_64)((float_64)(float_64)98 / (float_64)((float_64)(CASTING float_64)(uint_32 *($2)) + (float_64)(float_64)-1))))
	*($8 + [16]) = $4
	CALL eosio_assert((uint_64)(((int_64)$4 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [464])
	$6 = (uint_64)$5 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$7 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [128])
	CALL $79($8, $1, $3)
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)$5), [160])
	$2 = ( $8 ? ($8 + [16]) : ((int_64)*($8) < (int_64)$4) )
	*(($0 + [4])) = *($2 + [4])
	*($0) = *($2)
	*(($0 + [12])) = *(($2 + [12]))
	*(($0 + [8])) = *(($2 + [8]))
	*([0] + [4]) = ($8 + [32])
}

void .FUNC $229 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$4 = CALL strlen([2896])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($4 << [1])
	$6 = ($0 + [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($4 + [16]) & [-16])
	$6 = CALL $309($5)
	*($0) = ($5 | [1])
	*($0 + [8]) = $6
	*($0 + [4]) = $4
	
.LABEL $label$3
	CALL memcpy($6, [2896], $4)
	
.LABEL $label$2
	*(($6 + $4)) = [0]
	*($8 + [16]) = (int_64)0
	*($8 + [24]) = [0]
	$6 = (($8 + [16]) | [1])
	$7 = *($2)
	
.LOOP $label$5:
	$4 = (CASTING uint_32)(uint_64 ((uint_64)$7 % (uint_64)(int_64)10))
	CALL $6(($8 + [32]), ( ($4 | [48]) ? ($4 + [55]) : ($4 <= [10]) ), ($8 + [16]))
	$3 = ((uint_64)$7 / (uint_64)(int_64)10)
	if ( (*($8 + [16]) & [1]) ){ goto $label$7 }
	*($8 + [16]) = [0]
	goto $label$6 
	
.LABEL $label$7
	*(*((($8 + [16]) + [8]))) = [0]
	*($8 + [20]) = [0]
	
.LABEL $label$6
	CALL $312(($8 + [16]), [0])
	*((($8 + [16]) + [8])) = *((($8 + [32]) + [8]))
	*($8 + [16]) = *($8 + [32])
	$4 = ((uint_64)$7 > (uint_64)(int_64)9)
	$7 = $3
	if ( $4 ){ goto $label$5 }
	$4 = *($8 + [16])
	$5 = ($4 & [1])
	CALL $315($0, ( *((($8 + [16]) + [8])) ? $6 : $5 ), ( *($8 + [20]) ? uint_32($4 >> [1]) : $5 ))
	CALL $316($0, [2912])
	*($8 + [8]) = *($2 + [8])
	CALL $239(($8 + [32]), ($8 + [8]))
	$4 = *($8 + [32])
	$6 = ($4 & [1])
	CALL $315($0, ( *($8 + [40]) ? (($8 + [32]) | [1]) : $6 ), ( *($8 + [36]) ? uint_32($4 >> [1]) : $6 ))
	CALL $316($0, [2928])
	if ( ((*($8 + [32]) & [1]) == 0) ){ goto $label$8 }
	CALL $310(*((($8 + [32]) + [8])))
	
.LABEL $label$8
	if ( ((*($8 + [16]) & [1]) == 0) ){ goto $label$9 }
	CALL $310(*(($8 + [24])))
	
.LABEL $label$9
	*([0] + [4]) = ($8 + [48])
	return (unreachable)
	
.LABEL $label$1
	CALL $311($0)
}

void .FUNC $89 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$1 = (*([0] + [4]) - [112])
	*([0] + [4]) = $1
	$4 = [0]
	*((($1 = CALL memset($1, [0], [56])) + [16])) = (int_64)1398362884
	*($1 + [8]) = (int_64)0
	CALL eosio_assert([1], [464])
	$2 = ($0 + [568])
	$3 = (int_64)5462355
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [128])
	*(($1 + [52])) = [0]
	*($1 + [44 align=4]) = (int_64)0
	CALL $70(($1 + [56]), $2, $1)
	$4 = *($1 + [44])
	if ( ($4 == 0) ){ goto $label$6 }
	*(($1 + [48])) = $4
	CALL $310($4)
	
.LABEL $label$6
	*($1 + [56]) = ((int_64)*($1 + [56]) + (int_64)1)
	$4 = *($1 + [84])
	if ( ((uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) <= (uint_32)($4 + [53])) ){ goto $label$8 }
	*($1 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [13])
	$4 = (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
	goto $label$7 
	
.LABEL $label$8
	*($1 + [80]) = ($4 + [13])
	
.LABEL $label$7
	*(($1 + [84])) = ($4 + [53])
	CALL eosio_assert([1], [464])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$5 = [0]
	
.LABEL $label$9
	CALL eosio_assert($5, [128])
	*(($1 + [72])) = (int_64)1397703940
	*($1 + [64]) = (int_64)0
	*($1 + [96]) = [0]
	CALL $98($2, ($1 + [56]), *($0))
	$4 = *($1 + [100])
	if ( ($4 == 0) ){ goto $label$14 }
	*(($1 + [104])) = $4
	CALL $310($4)
	
.LABEL $label$14
	*([0] + [4]) = ($1 + [112])
}

void .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [560])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [560])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	*($5 + [15]) = *(*($0 + [12]))
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [560])
	CALL memcpy(*($2 + [4]), ($5 + [15]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$0 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $0, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $224 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$3()), [896])
	*(($4 = CALL $309([32])) + [16]) = $1
	$3 = *($3)
	*($4) = *($3)
	*(($4 + [12])) = *(($3 + [12]))
	*(($5 = ($4 + [8]))) = *(($3 + [8]))
	*(($4 + [4])) = *(($3 + [4]))
	CALL eosio_assert([1], [560])
	CALL memcpy(($7 + [16]), $4, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy((($7 + [16]) | [8]), $5, [4])
	*($4 + [20]) = CALL db_store_i64(*($1 + [8]), (int_64)-2287828610704211968, $2, (int_64)-2287828610704211968, ($7 + [16]), [12])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)-2287828610704211968) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)-2287828610704211967
	
.LABEL $label$1
	*($7 + [8]) = $4
	*($7 + [16]) = (int_64)-2287828610704211968
	$5 = *($4 + [20])
	*($7 + [4]) = $5
	$6 = ($1 + [28])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = (int_64)-2287828610704211968
	*($3 + [16]) = $5
	*($7 + [8]) = [0]
	*($3) = $4
	*($6) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $59(($1 + [24]), ($7 + [8]), ($7 + [16]), ($7 + [4]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$4 = *($7 + [8])
	*($7 + [8]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $310($4)
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [32])
}

void .FUNC $225 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $0, [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((int_32)(*($2 + [8]) - $1) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($0 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $226 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($2)
	$4 = *(($1 + [32]))
	$7 = *(($1 + [36]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$2 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($2)) == (int_64)$3) ){ goto $label$1 }
	$7 = $2
	$6 = ($2 + [-24])
	$2 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$6 = ($1 + [8])
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$2 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [64]) == (int_32)$6), [64])
	goto $label$3 
	
.LABEL $label$4
	$2 = [0]
	$7 = CALL db_find_i64(*(($1 + [8])), *(($1 + [16])), (int_64)4229865212519383040, $3)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$2 = CALL $232($6, $7)
	CALL eosio_assert(((int_32)*($2 + [64]) == (int_32)$6), [64])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [3008])
	CALL memcpy($0, $2, [64])
}

int_32 .FUNC $227 (int_32 $0, int_64 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [48])
	*([0] + [4]) = $10
	$3 = (CASTING int_64)(int_32 ((int_32)CALL tapos_block_prefix() * (int_32)CALL $fimport$28()))
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [1696]
	$8 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$7 > (uint_64)(int_64)8) ){ goto $label$6 }
	$4 = *($5)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$4 = ($4 + [165])
	goto $label$4 
	
.LABEL $label$6
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$2
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$1 }
	*($10 + [40]) = ((int_64)((int_64)((int_64)((int_64)$1 + (int_64)$2) + (int_64)$3) + (int_64)$8) + (int_64)1086)
	CALL sha256(($10 + [40]), [4], $10)
	$7 = *($10)
	$9 = *($10 + [2 align=2])
	$6 = *($10 + [8])
	$8 = *($10 + [16])
	$1 = *($10 + [24])
	*([0] + [4]) = ($10 + [48])
	return (CASTING uint_32)(uint_64 ((int_64)((uint_64)((int_64)$1 + (int_64)((int_64)$8 + (int_64)((int_64)$6 + (int_64)((int_64)$9 + (int_64)((int_64)$7 + (int_64)$2))))) % (uint_64)(int_64)100) + (int_64)1))
}

void .FUNC $220 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [208])
	*([0] + [4]) = $12
	$9 = CALL current_time()
	$7 = [0]
	*(($12 + [172])) = [0]
	*(($12 + [176])) = [0]
	*($12 + [156]) = [0]
	*($12 + [160]) = [0]
	*($12 + [164]) = [0]
	*($12 + [168]) = [0]
	*($12 + [144]) = ((CASTING uint_32)(uint_64 ((uint_64)$9 / (uint_64)(int_64)1000000)) + [60])
	*($12 + [180]) = [0]
	*(($12 + [184])) = [0]
	*(($12 + [188])) = [0]
	*($12 + [192]) = [0]
	*(($12 + [196])) = [0]
	*((($12 + [144]) + [56])) = [0]
	CALL memset(($12 + [32]), [0], [56])
	*(($12 + [48])) = (int_64)1398362884
	*($12 + [40]) = (int_64)0
	CALL eosio_assert([1], [464])
	$2 = ($0 + [568])
	$9 = (int_64)5462355
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [128])
	*(($12 + [84])) = [0]
	$9 = (int_64)0
	*($12 + [76 align=4]) = (int_64)0
	CALL $70(($12 + [88]), $2, ($12 + [32]))
	$7 = *($12 + [76])
	if ( ($7 == 0) ){ goto $label$6 }
	*(($12 + [80])) = $7
	CALL $310($7)
	
.LABEL $label$6
	$2 = ($12 + [180])
	$3 = *($0)
	$8 = (int_64)59
	$7 = [528]
	$11 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$12 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$4 = ($4 + [165])
	goto $label$10 
	
.LABEL $label$12
	$10 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$8
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$7 }
	*($12 + [40]) = $11
	*($12 + [32]) = $3
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [2848]
	$11 = (int_64)0
	
.LOOP $label$13:
	if ( ((uint_64)$9 > (uint_64)(int_64)6) ){ goto $label$18 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$4 = ($4 + [165])
	goto $label$16 
	
.LABEL $label$18
	$10 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$14
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$13 }
	*($12 + [24]) = $11
	*($12 + [16]) = [1]
	*($12 + [8]) = *($12 + [88])
	$4 = (($12 + [144]) + [40])
	$7 = *($4)
	if ( ((uint_32)$7 >= (uint_32)*(($12 + [188]))) ){ goto $label$20 }
	*($7 + [8]) = $11
	*($7) = $3
	*($7 + [16 align=4]) = (int_64)0
	*(($5 = ($7 + [24]))) = [0]
	$2 = CALL $309([16])
	*($7 + [16]) = $2
	$6 = ($2 + [16])
	*($5) = $6
	*(($2 + [8])) = *((($12 + [32]) + [8]))
	*($2) = *($12 + [32])
	*(($7 + [20])) = $6
	*($7 + [28]) = [0]
	*(($2 = ($7 + [32]))) = [0]
	*(($7 + [36])) = [0]
	CALL $52(($7 + [28]), [9])
	$7 = *($7 + [28])
	$2 = (*($2) - $7)
	CALL eosio_assert(((int_32)$2 > (int_32)[7]), [560])
	CALL memcpy($7, ($12 + [8]), [8])
	*($12 + [207]) = *((($12 + [8]) + [8]))
	CALL eosio_assert(((int_32)($2 + [-8]) > (int_32)[0]), [560])
	CALL memcpy(($7 + [8]), ($12 + [207]), [1])
	*($4) = (*($4) + [40])
	goto $label$19 
	
.LABEL $label$20
	CALL $221($2, ($12 + [32]), $0, ($12 + [24]), ($12 + [8]))
	
.LABEL $label$19
	*(($12 + [164])) = $1
	$9 = CALL $138($0)
	*($12 + [40]) = (int_64)0
	*($12 + [32]) = $9
	$9 = *($0)
	CALL $139(($12 + [8]), ($12 + [144]))
	$7 = *($12 + [8])
	CALL send_deferred(($12 + [32]), $9, $7, (*($12 + [12]) - $7), [0])
	$7 = *($12 + [8])
	if ( ($7 == 0) ){ goto $label$21 }
	*($12 + [12]) = $7
	CALL $310($7)
	
.LABEL $label$21
	$7 = *($12 + [132])
	if ( ($7 == 0) ){ goto $label$22 }
	*(($12 + [136])) = $7
	CALL $310($7)
	
.LABEL $label$22
	CALL $140(($12 + [144]))
	*([0] + [4]) = ($12 + [208])
}

void .FUNC $221 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$8 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$7 = ( $6 ? $8 : ($8 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $309(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	*(($8 = ($6 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($8 + [8]) = *($3)
	*($8 + [16 align=4]) = (int_64)0
	*(($3 = ($8 + [24]))) = [0]
	$2 = CALL $309([16])
	*($8 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($8 + [20])) = $5
	*($8 + [28]) = [0]
	*(($2 = ($8 + [32]))) = [0]
	*(($8 + [36])) = [0]
	CALL $52(($8 + [28]), [9])
	$2 = *($8 + [28])
	$1 = (*($2) - $2)
	CALL eosio_assert(((int_32)$1 > (int_32)[7]), [560])
	CALL memcpy($2, $4, [8])
	*($9 + [15]) = *($4 + [8])
	CALL eosio_assert(((int_32)($1 + [-8]) > (int_32)[0]), [560])
	CALL memcpy(($2 + [8]), ($9 + [15]), [1])
	$3 = ($6 + ((int_32)$7 * (int_32)[40]))
	$5 = ($8 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$6 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($2 + [-12]))
	*(($8 + [-40])) = *(($2 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($7 = ($8 + [-16]))) = [0]
	$4 = ($2 + [-4])
	*($1) = *($4)
	*(($8 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($7) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($4) = (int_64)0
	*(($7 = ($8 + [-4]))) = [0]
	$4 = ($2 + [8])
	*($1) = *($4)
	*(($8 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($7) = *($1)
	*($1) = [0]
	*($4) = (int_64)0
	$8 = ($8 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $6) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$7 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$7 = $2
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $5
	*(($0 + [8])) = $3
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$8 }
	$1 = ([0] - $7)
	$8 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($8 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $2
	CALL $310($2)
	
.LABEL $label$10
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $2
	CALL $310($2)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($7 == 0) ){ goto $label$12 }
	CALL $310($7)
	
.LABEL $label$12
	*([0] + [4]) = ($9 + [16])
	(unreachable)
}

void .FUNC $222 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	*($5 + [15]) = *(*($0 + [20]))
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [560])
	CALL memcpy(*($2 + [4]), ($5 + [15]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $80 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$0), [64])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)4154289181272571904, (int_64)4154289181272571904)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $77($0, $3)
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$0), [64])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [848])
	CALL $147($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $148($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $309($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $324($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $310($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $72 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$4 = CALL strlen([1680])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($4 << [1])
	$6 = ($0 + [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($4 + [16]) & [-16])
	$6 = CALL $309($5)
	*($0) = ($5 | [1])
	*($0 + [8]) = $6
	*($0 + [4]) = $4
	
.LABEL $label$3
	CALL memcpy($6, [1680], $4)
	
.LABEL $label$2
	*(($6 + $4)) = [0]
	$2 = ((uint_32)*($3) % (uint_32)[13])
	$3 = ($2 + [1])
	$4 = ((uint_32)*($2) % (uint_32)[13])
	$6 = ($4 + [1])
	$4 = ( [3] ? ( [4] ? [2] : ($6 <= $3) ) : ((int_32)$4 == (int_32)$2) )
	if ( (*($0) & [1]) ){ goto $label$6 }
	$2 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0 + [8])
	
.LABEL $label$5
	*(($2 + $4)) = [79]
	$4 = (((int_32)$6 ^ (int_32)[-1]) & [1])
	if ( (*($0) & [1]) ){ goto $label$8 }
	$6 = ($0 + [1])
	goto $label$7 
	
.LABEL $label$8
	$6 = *($0 + [8])
	
.LABEL $label$7
	*(($6 + $4)) = [79]
	$4 = ([6] - ($3 & [1]))
	if ( (*($0) & [1]) ){ goto $label$10 }
	$0 = ($0 + [1])
	goto $label$9 
	
.LABEL $label$10
	$0 = *($0 + [8])
	
.LABEL $label$9
	*(($0 + $4)) = [79]
	return (unreachable)
	
.LABEL $label$1
	CALL $311($0)
}

int_32 .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [752])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	$7 = ($4 + $6)
	*($8 + [40]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [40]))
	$4 = *($8 + [36])
	
.LABEL $label$7
	*(($6 = CALL $309([32])) + [16]) = [0]
	*($6 + [8 align=4]) = (int_64)0
	*($6 + [20]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [784])
	CALL memcpy($6, $4, [8])
	*($8 + [36]) = ($4 + [8])
	CALL $169(($8 + [32]), ($6 + [8]))
	*($6 + [24]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [24])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $170(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [12])) = $7
	CALL $310($7)
	
.LABEL $label$10
	CALL $310($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $70 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = *(($1 + [28]))
	if ( ((int_32)$3 == (int_32)*($1 + [24])) ){ goto $label$3 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [56]) == (int_32)$1), [64])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$3 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)4853904213979168768, (int_64)4853904213979168768)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $99($1, $3)
	CALL eosio_assert(((int_32)*($3 + [56]) == (int_32)$1), [64])
	
.LABEL $label$2
	$2 = $3
	
.LABEL $label$1
	*(($1 = CALL memcpy($0, $2, [41])) + [44 align=4]) = (int_64)0
	*(($1 + [52])) = [0]
	$3 = (*(($2 + [48])) - *($2 + [44]))
	$0 = int_32($3 >> [3])
	if ( ($0 == 0) ){ goto $label$5 }
	if ( ((uint_32)$0 >= (uint_32)[536870912]) ){ goto $label$4 }
	$3 = CALL $309($3)
	*(($1 + [44])) = $3
	*(($1 + [52])) = ($3 + ($0 << [3]))
	*(($1 = ($1 + [48]))) = $3
	$0 = *(($2 + [44]))
	$2 = (*(($2 + [48])) - $0)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($3, $0, $2)
	*($1) = (*($1) + $2)
	
.LABEL $label$5
	return (unreachable)
	
.LABEL $label$4
	CALL $324(($1 + [44]))
}

int_64 .FUNC $71 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [128])
	*([0] + [4]) = $9
	$4 = [0]
	CALL memset(($9 + [16]), [0], [56])
	*(($9 + [32])) = (int_64)1398362884
	*($9 + [24]) = (int_64)0
	CALL eosio_assert([1], [464])
	$2 = ($0 + [568])
	$6 = (int_64)5462355
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$0 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	CALL eosio_assert($0, [128])
	*(($9 + [68])) = [0]
	$6 = (int_64)0
	*($9 + [60 align=4]) = (int_64)0
	CALL $70(($9 + [72]), $2, ($9 + [16]))
	$4 = *($9 + [60])
	if ( ($4 == 0) ){ goto $label$6 }
	*(($9 + [64])) = $4
	CALL $310($4)
	
.LABEL $label$6
	$3 = (CASTING int_64)(int_32 ((int_32)CALL tapos_block_prefix() * (int_32)CALL $fimport$28()))
	$5 = (int_64)59
	$4 = [1696]
	$7 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$6 > (uint_64)(int_64)8) ){ goto $label$12 }
	$0 = *($4)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$0 = ($0 + [165])
	goto $label$10 
	
.LABEL $label$12
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$8
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$7 }
	*($9 + [8]) = ((int_64)((int_64)((int_64)((int_64)$1 + (int_64)$3) + (int_64)$7) + (int_64)*($9 + [72])) + (int_64)10086)
	CALL sha256(($9 + [8]), [4], ($9 + [16]))
	$6 = ((int_64)((int_64)((int_64)((int_64)((int_64)*($9 + [17 align=1]) + (int_64)*($9 + [18 align=2])) + (int_64)*($9 + [20 align=4])) + (int_64)*($9 + [32])) + (int_64)*($9 + [40])) + (int_64)10086)
	$4 = *($9 + [116])
	if ( ($4 == 0) ){ goto $label$13 }
	*(($9 + [120])) = $4
	CALL $310($4)
	
.LABEL $label$13
	*([0] + [4]) = ($9 + [128])
	return $6
}

void .FUNC $76 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	$15 = (*([0] + [4]) - [224])
	*([0] + [4]) = $15
	$12 = (int_64)0
	$13 = (int_64)59
	$9 = [1664]
	$10 = (int_64)0
	
.LOOP $label$1:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$2 }
	$4 = *($9)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$4 = ($4 + [165])
	goto $label$3 
	
.LABEL $label$4
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$2
	$9 = ($9 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$1 }
	CALL memset(($15 + [56]), [0], [152])
	$9 = CALL $120(($15 + [56]))
	$4 = ($0 + [128])
	$7 = *(($0 + [156]))
	if ( ((int_32)$7 == (int_32)*(($0 + [152]))) ){ goto $label$7 }
	$7 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [152]) == (int_32)$4), [64])
	if ( $7 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$7 = CALL db_find_i64(*($4), *(($0 + [136])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$7 = CALL $121($4, $7)
	CALL eosio_assert(((int_32)*($7 + [152]) == (int_32)$4), [64])
	
.LABEL $label$6
	$9 = $7
	
.LABEL $label$5
	$12 = *(($9 + [128]))
	$13 = *($9 + [120])
	$11 = *($0)
	*(($15 + [88])) = [0]
	*($15 + [64]) = $11
	*($15 + [56]) = $10
	*($15 + [72]) = (int_64)-1
	*($15 + [80]) = (int_64)0
	$9 = CALL $151(($15 + [56]), (int_64)1212369234, [1584])
	$11 = *($9 + [8])
	$10 = *($9)
	$7 = *($15 + [80])
	if ( ($7 == 0) ){ goto $label$8 }
	$8 = ($15 + [84])
	$9 = *($8)
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$10 }
	
.LOOP $label$11:
	$9 = ($9 + [-24])
	$4 = *($9)
	*($9) = [0]
	if ( ($4 == 0) ){ goto $label$12 }
	CALL $310($4)
	
.LABEL $label$12
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$11 }
	$9 = *(($15 + [80]))
	goto $label$9 
	
.LABEL $label$10
	$9 = $7
	
.LABEL $label$9
	*($8) = $7
	CALL $310($9)
	
.LABEL $label$8
	CALL eosio_assert(((int_64)$12 == (int_64)$11), [1280])
	$12 = (int_64)
	CALL eosio_assert(((int_64)$12($10 - $13)) > (int_64)-4611686018427387904), [1328])
	CALL eosio_assert(((int_64)$12 < (int_64)4611686018427387904), [1360])
	$13 = (int_64)20000
	if ( ((int_64)$12 > (int_64)6510000000000) ){ goto $label$13 }
	$13 = (int_64)14000
	if ( ((int_64)$12 > (int_64)5810000000000) ){ goto $label$13 }
	$13 = (int_64)10500
	if ( ((int_64)$12 > (int_64)4760000000000) ){ goto $label$13 }
	$13 = (int_64)7875
	if ( ((int_64)$12 > (int_64)3710000000000) ){ goto $label$13 }
	$13 = (int_64)5906
	if ( ((int_64)$12 > (int_64)2660000000000) ){ goto $label$13 }
	$13 = ( (int_64)4340 ? (int_64)3322 : ((int_64)$12 > (int_64)1610000000000) )
	
.LABEL $label$13
	$6 = ((int_64)((int_64)*($2) * (int_64)$13) / (int_64)1000)
	CALL eosio_assert((uint_64)(((int_64)$6 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [464])
	$12 = (int_64)1212369234
	$9 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	
.LOOP $label$18:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$18 }
	
.LABEL $label$17
	$4 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	$4 = [0]
	
.LABEL $label$14
	CALL eosio_assert($4, [128])
	$5 = *($0)
	$12 = (int_64)0
	$11 = (int_64)59
	$9 = [528]
	$10 = (int_64)0
	
.LOOP $label$19:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$24 }
	$4 = *($9)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$4 = ($4 + [165])
	goto $label$22 
	
.LABEL $label$24
	$13 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$21
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$20
	$9 = ($9 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$10 = ((int_64)$13 | (int_64)$10)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$19 }
	*($15 + [8]) = $10
	*($15) = $5
	$12 = (int_64)0
	$13 = (int_64)59
	$9 = [1664]
	$10 = (int_64)0
	
.LOOP $label$25:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$26 }
	$4 = *($9)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$4 = ($4 + [165])
	goto $label$27 
	
.LABEL $label$28
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$26
	$9 = ($9 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$25 }
	$12 = (int_64)0
	$11 = (int_64)59
	$9 = [32]
	$14 = (int_64)0
	
.LOOP $label$29:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$34 }
	$4 = *($9)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$4 = ($4 + [165])
	goto $label$32 
	
.LABEL $label$34
	$13 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$33
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$32
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$31
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$30
	$9 = ($9 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$14 = ((int_64)$13 | (int_64)$14)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$29 }
	*(($15 + [80])) = (int_64)310366523908
	*($15 + [64]) = $1
	*($15 + [56]) = $5
	*($15 + [72]) = $6
	CALL $325(($15 + [88]), $3)
	$9 = CALL $50(($15 + [16]), $15, $10, $14, ($15 + [56]))
	CALL $51(($15 + [208]), $9)
	$4 = *($15 + [208])
	CALL send_inline($4, (*($15 + [212]) - $4))
	$4 = *($15 + [208])
	if ( ($4 == 0) ){ goto $label$35 }
	*($15 + [212]) = $4
	CALL $310($4)
	
.LABEL $label$35
	$4 = *($9 + [28])
	if ( ($4 == 0) ){ goto $label$36 }
	*(($9 + [32])) = $4
	CALL $310($4)
	
.LABEL $label$36
	$4 = *($9 + [16])
	if ( ($4 == 0) ){ goto $label$37 }
	*(($9 + [20])) = $4
	CALL $310($4)
	
.LABEL $label$37
	if ( ((*($15 + [88]) & [1]) == 0) ){ goto $label$38 }
	CALL $310(*(($15 + [96])))
	
.LABEL $label$38
	*([0] + [4]) = ($15 + [224])
}

int_32 .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	$10 = $11
	*([0] + [4]) = $11
	$3 = *($0 + [24])
	$8 = *(($0 + [28]))
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$1 }
	$4 = ([0] - $3)
	$7 = ($8 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$8 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$4 }
	$5 = *(($8 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$8 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($8 >> [31]) ^ (int_32)[1]), [752])
	if ( ((uint_32)$8 <= (uint_32)[512]) ){ goto $label$6 }
	$3 = CALL malloc($8)
	CALL db_get_i64($1, $3, $8)
	CALL free($3)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($11 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $3
	CALL db_get_i64($1, $3, $8)
	
.LABEL $label$5
	$2 = ($0 + [24])
	*(($5 = CALL $309([40])) + [16]) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	CALL eosio_assert([1], [464])
	$11 = ($5 + [16])
	$6 = ($5 + [8])
	$9 = (int_64)5462355
	$7 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$4 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$4 = [0]
	
.LABEL $label$7
	CALL eosio_assert($4, [128])
	*($5 + [24]) = $0
	CALL eosio_assert(((uint_32)$8 > (uint_32)[7]), [784])
	CALL memcpy($5, $3, [8])
	$7 = ($8 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [784])
	CALL memcpy($6, ($3 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [784])
	CALL memcpy($11, ($3 + [16]), [8])
	*($5 + [28]) = $1
	*($10 + [24]) = $5
	*($10 + [16]) = (int_64)4154289181272571904
	$8 = *($5 + [28])
	*($10 + [12]) = $8
	$1 = ($0 + [28])
	$7 = *($1)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$13 }
	*($7 + [8]) = (int_64)4154289181272571904
	*($7 + [16]) = $8
	*($10 + [24]) = [0]
	*($7) = $5
	*($1) = ($7 + [24])
	goto $label$12 
	
.LABEL $label$13
	CALL $150($2, ($10 + [24]), ($10 + [16]), ($10 + [12]))
	
.LABEL $label$12
	$7 = *($10 + [24])
	*($10 + [24]) = [0]
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $310($7)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [32])
	return $5
}

void .FUNC $74 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = CALL strlen([16])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($5 << [1])
	$3 = ($0 + [1])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($5 + [16]) & [-16])
	$3 = CALL $309($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $3
	*($0 + [4]) = $5
	
.LABEL $label$3
	CALL memcpy($3, [16], $5)
	
.LABEL $label$2
	*(($3 + $5)) = [0]
	$3 = *($2 + [4])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$6:
	CALL $317($0, ( [79] ? [110] : ((int_64)*($5) != (int_64)0) ))
	$5 = ($5 + [8])
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$6 }
	
.LABEL $label$5
	return (unreachable)
	
.LABEL $label$1
	CALL $311($0)
}

void .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $3
	if ( $3 ){ goto $label$3 }
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( *($2 + [12]) ){ goto $label$3 }
	$3 = *($2 + [8])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$10 }
	if ( ($4 == 0) ){ goto $label$8 }
	if ( *($4 + [12]) ){ goto $label$8 }
	$4 = ($4 + [12])
	goto $label$9 
	
.LABEL $label$10
	$4 = *($3 + [4])
	if ( ($4 == 0) ){ goto $label$6 }
	if ( *($4 + [12]) ){ goto $label$6 }
	$4 = ($4 + [12])
	
.LABEL $label$9
	*(($2 + [12])) = [1]
	$2 = ((int_32)$3 == (int_32)$0)
	*($3 + [12]) = $2
	*($4) = [1]
	$1 = $3
	if ( ($2 == 0) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$8
	if ( ((int_32)*($2) == (int_32)$1) ){ goto $label$5 }
	$4 = $2
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_32)*($2) == (int_32)$1) ){ goto $label$2 }
	$4 = *($2 + [4])
	$1 = *($4)
	*($2 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $2
	$3 = *(($2 + [8]))
	
.LABEL $label$11
	*($4 + [8]) = $3
	*(( ($3 = *(($1 = ($2 + [8])))) ? ($3 + [4]) : ((int_32)*($3) == (int_32)$2) )) = $4
	*($1) = $4
	*($4) = $2
	$3 = *($4 + [8])
	goto $label$1 
	
.LABEL $label$5
	$4 = *($2)
	$1 = *($4 + [4])
	*($2) = $1
	if ( ($1 == 0) ){ goto $label$12 }
	*($1 + [8]) = $2
	$3 = *(($2 + [8]))
	
.LABEL $label$12
	*($4 + [8]) = $3
	*(( ($3 = *(($1 = ($2 + [8])))) ? ($3 + [4]) : ((int_32)*($3) == (int_32)$2) )) = $4
	*($1) = $4
	*(($4 + [4])) = $2
	$3 = *($4 + [8])
	
.LABEL $label$4
	*($4 + [12]) = [1]
	*($3 + [12]) = [0]
	$2 = *($3 + [4])
	$4 = *($2)
	*($3 + [4]) = $4
	if ( ($4 == 0) ){ goto $label$13 }
	*($4 + [8]) = $3
	
.LABEL $label$13
	*($2 + [8]) = *($3 + [8])
	*(( ($4 = *($3 + [8])) ? ($4 + [4]) : ((int_32)*($4) == (int_32)$3) )) = $2
	*($3 + [8]) = $2
	*($2) = $3
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	$4 = $2
	
.LABEL $label$1
	*($4 + [12]) = [1]
	*($3 + [12]) = [0]
	$2 = *($3)
	$4 = *($2 + [4])
	*($3) = $4
	if ( ($4 == 0) ){ goto $label$14 }
	*($4 + [8]) = $3
	
.LABEL $label$14
	*($2 + [8]) = *($3 + [8])
	*(( ($4 = *($3 + [8])) ? ($4 + [4]) : ((int_32)*($4) == (int_32)$3) )) = $2
	*($3 + [8]) = $2
	*(($2 + [4])) = $3
}

void .FUNC $78 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$19 = (*([0] + [4]) - [256])
	*([0] + [4]) = $19
	$17 = [0]
	CALL memset(($19 + [80]), [0], [56])
	*(($19 + [96])) = (int_64)1398362884
	*($19 + [88]) = (int_64)0
	CALL eosio_assert([1], [464])
	$1 = ($0 + [568])
	$16 = (int_64)5462355
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$18 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$18 = [0]
	
.LABEL $label$1
	CALL eosio_assert($18, [128])
	*(($19 + [132])) = [0]
	$16 = (int_64)0
	*($19 + [124 align=4]) = (int_64)0
	CALL $70(($19 + [200]), $1, ($19 + [80]))
	$17 = *($19 + [124])
	if ( ($17 == 0) ){ goto $label$6 }
	*(($19 + [128])) = $17
	CALL $310($17)
	
.LABEL $label$6
	$13 = (int_64)59
	$17 = [1248]
	$14 = (int_64)0
	
.LOOP $label$7:
	$15 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$8 }
	$18 = *($17)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$18 = ($18 + [165])
	goto $label$9 
	
.LABEL $label$10
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$8
	$17 = ($17 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$7 }
	*($19 + [232]) = $14
	$5 = (($19 + [200]) + [48])
	$2 = *($19 + [244])
	if ( ((int_32)$2 == (int_32)*($5)) ){ goto $label$13 }
	$3 = ($2 + [8])
	$7 = ($19 + [188])
	$8 = ($19 + [48])
	$9 = ($19 + [40])
	$10 = ($19 + [64])
	$11 = ($19 + [56])
	$12 = ($19 + [72])
	
.LOOP $label$14:
	*((($19 + [160]) + [8])) = *($2)
	*((($19 + [160]) + [16])) = (int_64)-1
	*(($6 = (($19 + [160]) + [24]))) = [0]
	$13 = *($0)
	*($19 + [160]) = $13
	*($7) = [0]
	*((($19 + [160]) + [32])) = [0]
	*(($19 + [8])) = [0]
	*(($19 + [16])) = (int_64)0
	*(($19 + [24])) = (int_64)0
	*(($17 = ($19 + [32]))) = (int_64)310366523908
	*($19) = (int_64)0
	CALL eosio_assert([1], [464])
	$16 = (uint_64)*($17) >> (uint_64)(int_64)8)
	$18 = [0]
	
.LOOP $label$17:
	$17 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	
.LOOP $label$19:
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$19 }
	
.LABEL $label$18
	$4 = [1]
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	$4 = [0]
	
.LABEL $label$15
	CALL eosio_assert($4, [128])
	*($8) = (int_64)310366523908
	*($9) = (int_64)0
	CALL eosio_assert([1], [464])
	$16 = (uint_64)*($8) >> (uint_64)(int_64)8)
	
.LOOP $label$22:
	$18 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$21 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$23 }
	
.LOOP $label$24:
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$21 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$24 }
	
.LABEL $label$23
	$4 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	$4 = [0]
	
.LABEL $label$20
	CALL eosio_assert($4, [128])
	*($10) = (int_64)1397703940
	*($11) = (int_64)0
	CALL eosio_assert([1], [464])
	$16 = (uint_64)*($10) >> (uint_64)(int_64)8)
	
.LOOP $label$27:
	$17 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$26 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$28 }
	
.LOOP $label$29:
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$26 }
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$29 }
	
.LABEL $label$28
	$4 = [1]
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$27 }
	goto $label$25 
	
.LABEL $label$26
	$4 = [0]
	
.LABEL $label$25
	CALL eosio_assert($4, [128])
	*($12) = [0]
	CALL $91(($19 + [80]), ($19 + [160]), $13, $19)
	CALL eosio_assert([1], [464])
	$16 = (int_64)5459781
	
.LOOP $label$31:
	$18 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$30 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$32 }
	
.LOOP $label$33:
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$30 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$33 }
	
.LABEL $label$32
	$18 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$31 }
	
.LABEL $label$30
	CALL eosio_assert($18, [128])
	CALL eosio_assert(((int_64)*((($19 + [80]) + [64])) == (int_64)1397703940), [160])
	if ( ((int_64)*((($19 + [80]) + [56])) >= (int_64)500000) ){ goto $label$12 }
	$18 = (*($5) - $3)
	$17 = int_32($18 >> [3])
	if ( ($17 == 0) ){ goto $label$34 }
	CALL memmove($2, $3, $18)
	
.LABEL $label$34
	$17 = ($2 + ($17 << [3]))
	*($5) = $17
	$4 = *($6)
	if ( ($4 == 0) ){ goto $label$35 }
	$17 = *($7)
	if ( ((int_32)$17 == (int_32)$4) ){ goto $label$37 }
	
.LOOP $label$38:
	$17 = ($17 + [-24])
	$18 = *($17)
	*($17) = [0]
	if ( ($18 == 0) ){ goto $label$39 }
	CALL $310($18)
	
.LABEL $label$39
	if ( ((int_32)$4 != (int_32)$17) ){ goto $label$38 }
	$17 = *($6)
	goto $label$36 
	
.LABEL $label$37
	$17 = $4
	
.LABEL $label$36
	*($7) = $4
	CALL $310($17)
	$17 = *($5)
	
.LABEL $label$35
	if ( ((int_32)$2 != (int_32)$17) ){ goto $label$14 }
	goto $label$11 
	
.LABEL $label$13
	$16 = (int_64)0
	$13 = (int_64)59
	$17 = [1248]
	$14 = (int_64)0
	
.LOOP $label$40:
	$15 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$41 }
	$18 = *($17)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$43 }
	$18 = ($18 + [165])
	goto $label$42 
	
.LABEL $label$43
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$42
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$41
	$17 = ($17 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$40 }
	*(($19 + [232])) = $14
	goto $label$11 
	
.LABEL $label$12
	*(($19 + [232])) = *($2)
	$17 = ($19 + [248])
	$4 = (*($17) - $3)
	$18 = int_32($4 >> [3])
	if ( ($18 == 0) ){ goto $label$44 }
	CALL memmove($2, $3, $4)
	
.LABEL $label$44
	*($17) = ($2 + ($18 << [3]))
	$4 = *(($19 + [184]))
	if ( ($4 == 0) ){ goto $label$11 }
	$2 = ($19 + [188])
	$17 = *($2)
	if ( ((int_32)$17 == (int_32)$4) ){ goto $label$46 }
	
.LOOP $label$47:
	$17 = ($17 + [-24])
	$18 = *($17)
	*($17) = [0]
	if ( ($18 == 0) ){ goto $label$48 }
	CALL $310($18)
	
.LABEL $label$48
	if ( ((int_32)$4 != (int_32)$17) ){ goto $label$47 }
	$17 = *(($19 + [184]))
	goto $label$45 
	
.LABEL $label$46
	$17 = $4
	
.LABEL $label$45
	*($2) = $4
	CALL $310($17)
	
.LABEL $label$11
	CALL $98($1, ($19 + [200]), *($0))
	$17 = *(($19 + [244]))
	if ( ($17 == 0) ){ goto $label$49 }
	*(($19 + [248])) = $17
	CALL $310($17)
	
.LABEL $label$49
	*([0] + [4]) = ($19 + [256])
}

void .FUNC $79 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	$15 = (*([0] + [4]) - [48])
	*([0] + [4]) = $15
	$11 = *($2 + [8])
	$13 = *($2 + [16])
	$10 = *($1)
	$9 = [0]
	*(($15 + [40])) = [0]
	*($15 + [16]) = $10
	*($15 + [8]) = $13
	*($15 + [24]) = (int_64)-1
	*($15 + [32]) = (int_64)0
	$8 = CALL $151(($15 + [8]), (uint_64)$11 >> (uint_64)(int_64)8), [1584]
	$3 = *($8) + [8])
	$14 = *($8)
	$4 = *($15 + [32])
	if ( ($4 == 0) ){ goto $label$1 }
	$7 = ($15 + [36])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$3 }
	
.LOOP $label$4:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $310($5)
	
.LABEL $label$5
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$4 }
	$8 = *(($15 + [32]))
	goto $label$2 
	
.LABEL $label$3
	$8 = $4
	
.LABEL $label$2
	*($7) = $4
	CALL $310($8)
	
.LABEL $label$1
	CALL eosio_assert([1], [464])
	$11 = (int_64)5462355
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$8 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	
.LABEL $label$6
	CALL eosio_assert($8, [128])
	$6 = *(($2 + [16]))
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [544]
	$12 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$11 > (uint_64)(int_64)10) ){ goto $label$16 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$8 = ($8 + [165])
	goto $label$14 
	
.LABEL $label$16
	$13 = (int_64)0
	if ( ((int_64)$11 == (int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$12
	$9 = ($9 + [1])
	$10 = ((int_64)$10 + (int_64)-5)
	$12 = ((int_64)$13 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)1)
	if ( ((int_64)$11 != (int_64)13) ){ goto $label$11 }
	if ( ((int_64)$6 != (int_64)$12) ){ goto $label$17 }
	if ( ((int_64)*(($2 + [8])) != (int_64)1397703940) ){ goto $label$17 }
	CALL $152(($15 + [8]), $1)
	$11 = *($15 + [8])
	CALL eosio_assert(((int_64)*($15 + [16]) == (int_64)$3), [1280])
	$14 = (int_64)
	CALL eosio_assert(((int_64)$14($14 - $11)) > (int_64)-4611686018427387904), [1328])
	CALL eosio_assert(((int_64)$14 < (int_64)4611686018427387904), [1360])
	
.LABEL $label$17
	CALL $153(($15 + [8]), $1)
	CALL eosio_assert(((int_64)$3 == (int_64)*($15 + [16])), [160])
	CALL eosio_assert(((int_64)$14 >= (int_64)*($15 + [8])), [1616])
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)$14 >> (uint_64)(int_64)63)) ^ (int_32)[1]), [1632])
	*($0 + [8]) = $3
	CALL eosio_assert(((int_64)*($15 + [16]) == (int_64)$3), [1280])
	$11 = (int_64)
	*($0) = $11($14 - *($15 + [8])))
	CALL eosio_assert(((int_64)$11 > (int_64)-4611686018427387904), [1328])
	CALL eosio_assert(((int_64)$11 < (int_64)4611686018427387904), [1360])
	*([0] + [4]) = ($15 + [48])
}

void .FUNC $259 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$0), [64])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-5069068143847014400, (int_64)-5069068143847014400)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $265($0, $3)
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$0), [64])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [848])
	CALL $266($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $267($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $258 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$4 = *(($1 + [28]))
	if ( ((int_32)$4 == (int_32)*($1 + [24])) ){ goto $label$4 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [24]) == (int_32)$1), [64])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-5069068143847014400, (int_64)-5069068143847014400)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $265($1, $4)
	CALL eosio_assert(((int_32)*($4 + [24]) == (int_32)$1), [64])
	
.LABEL $label$3
	*($0) = *($4)
	*(($0 + [16])) = *(($4 + [16]))
	*(($0 + [8])) = *(($4 + [8]))
	goto $label$1 
	
.LABEL $label$2
	*($5 + [8]) = $3
	CALL $270($5, $1, $2, ($5 + [8]))
	$1 = *($5 + [4])
	*($0) = *($1)
	*(($0 + [20])) = *(($1 + [20]))
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [12])) = *(($1 + [12]))
	*(($0 + [8])) = *(($1 + [8]))
	*(($0 + [4])) = *(($1 + [4]))
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $312 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $309(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $310($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $313 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL strlen($1)
	$5 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$3 = *($0)
	$5 = (($3 & [-2]) + [-1])
	
.LABEL $label$1
	$4 = ($3 & [1])
	if ( ((uint_32)$2 <= (uint_32)$5) ){ goto $label$7 }
	if ( $4 ){ goto $label$6 }
	$3 = uint_32(($3 & [254]) >> [1])
	goto $label$5 
	
.LABEL $label$7
	if ( $4 ){ goto $label$4 }
	$5 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$3 = *($0 + [4])
	
.LABEL $label$5
	CALL $314($0, $5, ($2 - $5), $3, [0], $3, $2, $1)
	return $0
	
.LABEL $label$4
	$5 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memmove($5, $1, $2)
	
.LABEL $label$2
	*(($5 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$8 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$8
	*($0 + [4]) = $2
	return $0
}

void .FUNC $314 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$9 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [8])
	
.LABEL $label$2
	$10 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$10 = [11]
	$2 = ($2 + $1)
	$8 = ($1 << [1])
	$2 = ( $8 ? $2 : ($2 <= $8) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$10 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $309($10)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $9, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($9 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $310($9)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($10 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $315 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$3 = *($0)
	$4 = (($3 & [-2]) + [-1])
	
.LABEL $label$1
	if ( ($3 & [1]) ){ goto $label$3 }
	$5 = uint_32(($3 & [254]) >> [1])
	goto $label$2 
	
.LABEL $label$3
	$5 = *($0 + [4])
	
.LABEL $label$2
	if ( ((uint_32)($4 - $5) >= (uint_32)$2) ){ goto $label$4 }
	CALL $314($0, $4, (($2 - $4) + $5), $5, $5, [0], $2, $1)
	return $0
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$7 }
	if ( ($3 & [1]) ){ goto $label$6 }
	$4 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$7
	return $0
	
.LABEL $label$6
	$4 = *($0 + [8])
	
.LABEL $label$5
	CALL memcpy(($4 + $5), $1, $2)
	$2 = ($5 + $2)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($4 + $2)) = [0]
	return $0
}

int_32 .FUNC $316 (int_32 $0, int_32 $1)
{
	return CALL $315($0, $1, CALL $340($1))
}

void .FUNC $317 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = *($0)
	$2 = ($4 & [1])
	if ( ($2 == 0) ){ goto $label$6 }
	$3 = ((*($0) & [-2]) + [-1])
	$4 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = [10]
	$4 = uint_32($4 >> [1])
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $318($0, $3, [1], $3, $3, [0], [0])
	if ( (*($0) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($0 + [4]) = ($4 + [1])
	$0 = *($0 + [8])
	goto $label$1 
	
.LABEL $label$2
	*($0) = (($4 << [1]) + [2])
	$0 = ($0 + [1])
	
.LABEL $label$1
	*(($0 = ($0 + $4)) + [1]) = [0]
	*($0) = $1
}

void .FUNC $251 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [80])
	*([0] + [4]) = $6
	*(($6 + [32])) = (int_64)0
	*($6 + [24]) = (int_64)0
	$3 = ($0 + [688])
	$4 = *(($0 + [716]))
	if ( ((int_32)$4 == (int_32)*(($0 + [712]))) ){ goto $label$2 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [16]) == (int_32)$3), [64])
	if ( $4 ){ goto $label$1 }
	$4 = ($6 + [24])
	goto $label$1 
	
.LABEL $label$2
	$4 = CALL db_find_i64(*($3), *(($0 + [696])), (int_64)-2287828610704211968, (int_64)-2287828610704211968)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $46($3, $4)
	CALL eosio_assert(((int_32)*($4 + [16]) == (int_32)$3), [64])
	goto $label$1 
	
.LABEL $label$3
	$4 = ($6 + [24])
	
.LABEL $label$1
	*((($6 + [64]) + [8])) = *(($4 + [8]))
	*($6 + [64]) = *($4)
	*(($6 + [56])) = [0]
	$5 = *($0)
	*($6 + [24]) = $5
	*($6 + [40]) = (int_64)-1
	*($6 + [48]) = (int_64)0
	*($6 + [32]) = $1
	$4 = CALL db_find_i64($5, $1, (int_64)-2272763793870159872, *($6 + [64]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$6 }
	$0 = CALL $47(($6 + [24]), $4)
	CALL eosio_assert(((int_32)*($0 + [24]) == (int_32)($6 + [24])), [64])
	*($6 + [16]) = $2
	CALL eosio_assert([1], [848])
	CALL $253(($6 + [24]), $0, (int_64)0, ($6 + [16]))
	$3 = *($6 + [48])
	if ( $3 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$1 = *($0)
	*($6 + [20]) = $2
	*($6 + [16]) = ($6 + [64])
	CALL $254(($6 + [8]), ($6 + [24]), $1, ($6 + [16]))
	$3 = *($6 + [48])
	if ( ($3 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$2 = ($6 + [52])
	$0 = *($2)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $310($4)
	
.LABEL $label$10
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$9 }
	$0 = *(($6 + [48]))
	goto $label$7 
	
.LABEL $label$8
	$0 = $3
	
.LABEL $label$7
	*($2) = $3
	CALL $310($0)
	
.LABEL $label$4
	*([0] + [4]) = ($6 + [80])
}

void .FUNC $250 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [144])
	*([0] + [4]) = $12
	*($12 + [136]) = $1
	$11 = [0]
	CALL memset(($12 + [56]), [0], [40])
	*((($12 + [56]) + [24])) = (int_64)1398362884
	*($12 + [72]) = (int_64)0
	CALL eosio_assert([1], [464])
	$5 = ($0 + [768])
	$10 = (int_64)5462355
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [128])
	$11 = *(($0 + [796]))
	if ( ((int_32)$11 == (int_32)*(($0 + [792]))) ){ goto $label$7 }
	$11 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [40]) == (int_32)$5), [64])
	if ( $11 ){ goto $label$6 }
	$11 = ($12 + [56])
	goto $label$6 
	
.LABEL $label$7
	$11 = CALL db_find_i64(*(($0 + [768])), *(($0 + [776])), (int_64)-5069075955596378112, (int_64)-5069075955596378112)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$8 }
	$11 = CALL $123($5, $11)
	CALL eosio_assert(((int_32)*($11 + [40]) == (int_32)$5), [64])
	goto $label$6 
	
.LABEL $label$8
	$11 = ($12 + [56])
	
.LABEL $label$6
	CALL memcpy(($12 + [96]), $11, [40])
	$4 = *($12 + [104])
	if ( ((uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) <= (uint_32)$4) ){ goto $label$9 }
	CALL $256($0)
	CALL $257($0)
	CALL eosio_assert([1], [464])
	$10 = (int_64)5459781
	$11 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	
.LOOP $label$14:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$14 }
	
.LABEL $label$13
	$6 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	$6 = [0]
	
.LABEL $label$10
	CALL eosio_assert($6, [128])
	*(($12 + [120])) = (int_64)1397703940
	*(($12 + [104])) = ($4 + [3600])
	*($12 + [112]) = (int_64)0
	*($12 + [96]) = ((int_64)*($12 + [96]) + (int_64)1)
	CALL $124($5, ($12 + [96]), *($0))
	$1 = *($12 + [136])
	
.LABEL $label$9
	*(($12 + [88])) = [0]
	*($12 + [64]) = $1
	*($12 + [72]) = (int_64)-1
	*($12 + [80]) = (int_64)0
	$1 = *($0)
	*($12 + [56]) = $1
	*(($11 = ($12 + [24]))) = (int_64)1397703940
	*($12 + [16]) = (int_64)0
	*($12 + [8]) = (int_64)0
	CALL eosio_assert([1], [464])
	$10 = (uint_64)*($11) >> (uint_64)(int_64)8)
	$11 = [0]
	
.LOOP $label$17:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	
.LOOP $label$19:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$19 }
	
.LABEL $label$18
	$6 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	$6 = [0]
	
.LABEL $label$15
	CALL eosio_assert($6, [128])
	CALL $258(($12 + [32]), ($12 + [56]), $1, ($12 + [8]))
	$11 = (($12 + [32]) + [8])
	$10 = *($12 + [96])
	if ( ((int_64)*($12 + [32]) != (int_64)$10) ){ goto $label$21 }
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($12 + [48]))), [224])
	$10 = ((int_64)*($11) + (int_64)*($2))
	*($11) = $10
	CALL eosio_assert(((int_64)$10 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($11) < (int_64)4611686018427387904), [304])
	goto $label$20 
	
.LABEL $label$21
	*($11) = *($2)
	*(($11 + [8])) = *(($2 + [8]))
	*($12 + [32]) = $10
	
.LABEL $label$20
	CALL $259(($12 + [56]), ($12 + [32]), *($0))
	$3 = ($0 + [608])
	$10 = (int_64)0
	$7 = ($0 + [632])
	$8 = ($0 + [636])
	$9 = ($0 + [616])
	
.LOOP $label$27:
	$4 = *($7)
	$2 = *($8)
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$28 }
	$11 = ($2 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$29:
	if ( ((int_64)*(*($11)) == (int_64)$10) ){ goto $label$28 }
	$2 = $11
	$6 = ($11 + [-24])
	$11 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$29 }
	
.LABEL $label$28
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$32 }
	$11 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [16]) == (int_32)$3), [64])
	if ( $11 ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	$11 = CALL db_find_i64(*($3), *($9), (int_64)-5069082855582203904, $10)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$30 }
	$11 = CALL $260($3, $11)
	CALL eosio_assert(((int_32)*($11 + [16]) == (int_32)$3), [64])
	
.LABEL $label$31
	if ( ((int_64)*($11 + [8]) == (int_64)*($12 + [136])) ){ goto $label$26 }
	
.LABEL $label$30
	$10 = ((int_64)$10 + (int_64)1)
	if ( ((int_64)$10 < (int_64)10) ){ goto $label$27 }
	$4 = *(($0 + [632]))
	$2 = *(($0 + [636]))
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$33 }
	$11 = ($2 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$34:
	if ( ((int_64)*(*($11)) == (int_64)10) ){ goto $label$33 }
	$2 = $11
	$6 = ($11 + [-24])
	$11 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$34 }
	
.LABEL $label$33
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$25 }
	$11 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [16]) == (int_32)$3), [64])
	goto $label$24 
	
.LABEL $label$26
	CALL $261($0, (CASTING uint_32)(uint_64 $10))
	$2 = *($12 + [80])
	if ( $2 ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$25
	$11 = [0]
	$6 = CALL db_find_i64(*(($0 + [608])), *(($0 + [616])), (int_64)-5069082855582203904, (int_64)10)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$24 }
	$11 = CALL $260($3, $6)
	CALL eosio_assert(((int_32)*($11 + [16]) == (int_32)$3), [64])
	
.LABEL $label$24
	*($12 + [8]) = ($12 + [136])
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [848])
	CALL $262($3, $11, (int_64)0, ($12 + [8]))
	CALL $261($0, [10])
	$2 = *($12 + [80])
	if ( ($2 == 0) ){ goto $label$22 }
	
.LABEL $label$23
	$5 = ($12 + [84])
	$11 = *($5)
	if ( ((int_32)$11 == (int_32)$2) ){ goto $label$36 }
	
.LOOP $label$37:
	$11 = ($11 + [-24])
	$6 = *($11)
	*($11) = [0]
	if ( ($6 == 0) ){ goto $label$38 }
	CALL $310($6)
	
.LABEL $label$38
	if ( ((int_32)$2 != (int_32)$11) ){ goto $label$37 }
	$11 = *(($12 + [80]))
	goto $label$35 
	
.LABEL $label$36
	$11 = $2
	
.LABEL $label$35
	*($5) = $2
	CALL $310($11)
	
.LABEL $label$22
	*([0] + [4]) = ($12 + [144])
}

void .FUNC $253 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [960])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1008])
	$4 = *($1)
	$5 = ($1 + [16])
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*($5)), [224])
	$6 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [304])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1072])
	CALL eosio_assert([1], [560])
	CALL memcpy($7, $1, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy(($7 | [8]), ($1 + [8]), [8])
	CALL eosio_assert([1], [560])
	CALL memcpy(($7 + [16]), $5, [8])
	CALL db_update_i64(*($1 + [28]), $2, $7, [24])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [32])
}

void .FUNC $252 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [32])
	*([0] + [4]) = $4
	*(($4 + [8])) = (int_64)0
	*($4) = (int_64)0
	$1 = ($0 + [688])
	$3 = *(($0 + [716]))
	if ( ((int_32)$3 == (int_32)*(($0 + [712]))) ){ goto $label$3 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [16]) == (int_32)$1), [64])
	if ( $3 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$3 = CALL db_find_i64(*($1), *(($0 + [696])), (int_64)-2287828610704211968, (int_64)-2287828610704211968)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $46($1, $3)
	CALL eosio_assert(((int_32)*($3 + [16]) == (int_32)$1), [64])
	goto $label$1 
	
.LABEL $label$2
	$3 = $4
	
.LABEL $label$1
	*(($2 = (($4 + [16]) + [8]))) = *(($3 + [8]))
	*($4 + [16]) = *($3)
	$3 = *($2)
	if ( ((uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) <= (uint_32)$3) ){ goto $label$4 }
	*($2) = ($3 + [86400])
	*($4 + [16]) = ((int_64)*($4 + [16]) + (int_64)1)
	CALL $216($1, ($4 + [16]), *($0))
	
.LABEL $label$4
	*([0] + [4]) = ($4 + [32])
}

void .FUNC $255 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$2 = *($0)
	$4 = *($4 + [4])
	*($1 + [8]) = *($4)
	*(($5 = ($1 + [16]))) = *(($4 + [8]))
	CALL eosio_assert([1], [560])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy(($6 | [8]), ($1 + [8]), [8])
	CALL eosio_assert([1], [560])
	CALL memcpy(($6 + [16]), $5, [8])
	$3 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-2272763793870159872, *(*($0 + [8])), $3, $6, [24])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$1 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $254 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$3()), [896])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($4 = CALL $309([40])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [464])
	$2 = (int_64)5462355
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [128])
	*($4 + [24]) = $1
	CALL $255(($7 + [16]), $4)
	*($7 + [32]) = $4
	$2 = *($4)
	*($7 + [16]) = $2
	$6 = *($4 + [28])
	*($7 + [12]) = $6
	$5 = ($1 + [28])
	$3 = *($5)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$7 }
	*($3 + [8]) = $2
	*($3 + [16]) = $6
	*($7 + [32]) = [0]
	*($3) = $4
	*($5) = ($3 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $58(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$6
	*($0 + [4]) = $4
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL $310($3)
	
.LABEL $label$8
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $257 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_32 $19
	$19 = (*([0] + [4]) - [96])
	*([0] + [4]) = $19
	$1 = ($0 + [608])
	$6 = ($0 + [632])
	$7 = ($0 + [636])
	$8 = ($0 + [616])
	$9 = (($19 + [56]) + [24])
	$10 = ($19 + [88])
	$11 = ($19 + [84])
	$12 = (int_64)0
	
.LOOP $label$1:
	$2 = *($6)
	$13 = *($7)
	if ( ((int_32)$13 == (int_32)$2) ){ goto $label$2 }
	$14 = ($13 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$3:
	if ( ((int_64)*(*($14)) == (int_64)$12) ){ goto $label$2 }
	$13 = $14
	$5 = ($14 + [-24])
	$14 = $5
	if ( ((int_32)($5 + $3) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$13 == (int_32)$2) ){ goto $label$5 }
	$14 = *(($13 + [-24]))
	CALL eosio_assert(((int_32)*($14 + [16]) == (int_32)$1), [64])
	goto $label$4 
	
.LABEL $label$5
	$14 = CALL $260($1, CALL $fimport$6(*($1), *($8), (int_64)-5069082855582203904, $12))
	CALL eosio_assert(((int_32)*($14 + [16]) == (int_32)$1), [64])
	
.LABEL $label$4
	$4 = *($14 + [8])
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [1248]
	$17 = (int_64)0
	
.LOOP $label$6:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$7 }
	$5 = *($14)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$5 = ($5 + [165])
	goto $label$8 
	
.LABEL $label$9
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$7
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$6 }
	if ( ((int_64)$4 == (int_64)$17) ){ goto $label$10 }
	*((($19 + [56]) + [8])) = $4
	*((($19 + [56]) + [16])) = (int_64)-1
	*($9) = (int_64)0
	*($10) = [0]
	$15 = *($0)
	*($19 + [56]) = $15
	*((($19 + [8]) + [8])) = (int_64)0
	*(($14 = (($19 + [8]) + [16]))) = (int_64)1397703940
	*($19 + [8]) = (int_64)0
	CALL eosio_assert([1], [464])
	$16 = (uint_64)*($14) >> (uint_64)(int_64)8)
	$14 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$5 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$5 = [0]
	
.LABEL $label$11
	CALL eosio_assert($5, [128])
	CALL $258(($19 + [32]), ($19 + [56]), $15, ($19 + [8]))
	CALL eosio_assert([1], [464])
	$16 = (int_64)5459781
	$14 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$5 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$5 = [0]
	
.LABEL $label$16
	CALL eosio_assert($5, [128])
	*((($19 + [32]) + [16])) = (int_64)1397703940
	*((($19 + [32]) + [8])) = (int_64)0
	CALL $259(($19 + [56]), ($19 + [32]), *($0))
	$13 = *($9)
	if ( ($13 == 0) ){ goto $label$10 }
	$14 = *($11)
	if ( ((int_32)$14 == (int_32)$13) ){ goto $label$22 }
	
.LOOP $label$23:
	$14 = ($14 + [-24])
	$5 = *($14)
	*($14) = [0]
	if ( ($5 == 0) ){ goto $label$24 }
	CALL $310($5)
	
.LABEL $label$24
	if ( ((int_32)$13 != (int_32)$14) ){ goto $label$23 }
	$14 = *($9)
	goto $label$21 
	
.LABEL $label$22
	$14 = $13
	
.LABEL $label$21
	*($11) = $13
	CALL $310($14)
	
.LABEL $label$10
	$12 = ((int_64)$12 + (int_64)1)
	if ( ((int_64)$12 != (int_64)11) ){ goto $label$1 }
	*([0] + [4]) = ($19 + [96])
}

void .FUNC $256 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_32 $16
	int_32 $17
	int_64 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	int_64 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_64 $33
	int_64 $34
	int_64 $35
	int_64 $36
	int_32 $37
	$37 = (*([0] + [4]) - [224])
	*([0] + [4]) = $37
	CALL eosio_assert([1], [464])
	$31 = ($0 + [768])
	$34 = (int_64)5462355
	$32 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $34) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$34 = (uint_64)$34 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$34) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$34 = (uint_64)$34 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$34) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$32 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$19 = [1]
	$32 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$19 = [0]
	
.LABEL $label$1
	CALL eosio_assert($19, [128])
	$32 = *(($0 + [796]))
	if ( ((int_32)$32 == (int_32)*(($0 + [792]))) ){ goto $label$9 }
	$32 = *(($32 + [-24]))
	CALL eosio_assert(((int_32)*($32 + [40]) == (int_32)$31), [64])
	if ( $32 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$32 = CALL db_find_i64(*(($0 + [768])), *(($0 + [776])), (int_64)-5069075955596378112, (int_64)-5069075955596378112)
	if ( ((int_32)$32 < (int_32)[0]) ){ goto $label$7 }
	$32 = CALL $123($31, $32)
	CALL eosio_assert(((int_32)*($32 + [40]) == (int_32)$31), [64])
	
.LABEL $label$8
	$20 = *(($32 + [24]))
	$33 = *($32 + [16])
	goto $label$6 
	
.LABEL $label$7
	$33 = (int_64)0
	$20 = (int_64)1398362884
	
.LABEL $label$6
	CALL eosio_assert([1], [464])
	$34 = (int_64)5459781
	$32 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $34) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$34 = (uint_64)$34 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$34) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	
.LOOP $label$14:
	$34 = (uint_64)$34 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$34) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	$32 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[7]) ){ goto $label$14 }
	
.LABEL $label$13
	$19 = [1]
	$32 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[7]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	$19 = [0]
	
.LABEL $label$10
	CALL eosio_assert($19, [128])
	if ( (int_64)($33 == 0) ){ goto $label$16 }
	$34 = (int_64)$33 >> (int_64)63
	CALL __multi3(($37 + [24]), $33, $34), (int_64)5, (int_64)0)
	CALL __multi3(($37 + [40]), $33, $34, (int_64)10, (int_64)0)
	CALL __multi3(($37 + [56]), $33, $34, (int_64)25, (int_64)0)
	CALL __multi3(($37 + [72]), $33, $34, (int_64)50, (int_64)0)
	CALL __multi3(($37 + [88]), $33, $34, (int_64)15, (int_64)0)
	$34 = *((($37 + [24]) + [8]))
	$21 = *($37 + [24])
	$13 = ( ((uint_64)$21 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$34 > (int_64)-1) : ((int_64)$34 == (int_64)-1) )
	$33 = *((($37 + [40]) + [8]))
	$22 = *($37 + [40])
	$11 = ( ((uint_64)$22 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$33 > (int_64)-1) : ((int_64)$33 == (int_64)-1) )
	$35 = *((($37 + [56]) + [8]))
	$36 = *($37 + [56])
	$8 = ( ((uint_64)$36 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$35 > (int_64)-1) : ((int_64)$35 == (int_64)-1) )
	$15 = *((($37 + [72]) + [8]))
	$23 = *($37 + [72])
	$6 = ( ((uint_64)$23 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$15 > (int_64)-1) : ((int_64)$15 == (int_64)-1) )
	$18 = *((($37 + [88]) + [8]))
	$24 = *($37 + [88])
	$3 = ( ((uint_64)$24 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$18 > (int_64)-1) : ((int_64)$18 == (int_64)-1) )
	$12 = ( (uint_64)($21 <= (int_64)4611686018427387904) ? ((int_64)$34 < (int_64)0) : (int_64)($34 == 0) )
	$10 = ( (uint_64)($22 <= (int_64)4611686018427387904) ? ((int_64)$33 < (int_64)0) : (int_64)($33 == 0) )
	$7 = ( (uint_64)($36 <= (int_64)4611686018427387904) ? ((int_64)$35 < (int_64)0) : (int_64)($35 == 0) )
	$5 = ( (uint_64)($23 <= (int_64)4611686018427387904) ? ((int_64)$15 < (int_64)0) : (int_64)($15 == 0) )
	$2 = ( (uint_64)($24 <= (int_64)4611686018427387904) ? ((int_64)$18 < (int_64)0) : (int_64)($18 == 0) )
	$1 = ($0 + [608])
	$14 = ((int_64)$36 / (int_64)1000)
	$21 = ((int_64)$21 / (int_64)100)
	$22 = ((int_64)$22 / (int_64)100)
	$9 = ((int_64)$36 / (int_64)100)
	$23 = ((int_64)$23 / (int_64)100)
	$24 = ((int_64)$24 / (int_64)1000)
	$4 = (($37 + [104]) | [1])
	$25 = ($0 + [632])
	$26 = ($0 + [636])
	$27 = ($0 + [616])
	$28 = (($37 + [184]) + [24])
	$29 = ($37 + [216])
	$30 = ($37 + [212])
	$15 = (int_64)0
	
.LOOP $label$17:
	$16 = *($25)
	$31 = *($26)
	if ( ((int_32)$31 == (int_32)$16) ){ goto $label$18 }
	$32 = ($31 + [-24])
	$17 = ([0] - $16)
	
.LOOP $label$19:
	if ( ((int_64)*(*($32)) == (int_64)$15) ){ goto $label$18 }
	$31 = $32
	$19 = ($32 + [-24])
	$32 = $19
	if ( ((int_32)($19 + $17) != (int_32)[-24]) ){ goto $label$19 }
	
.LABEL $label$18
	if ( ((int_32)$31 == (int_32)$16) ){ goto $label$21 }
	$31 = *(($31 + [-24]))
	CALL eosio_assert(((int_32)*($31 + [16]) == (int_32)$1), [64])
	goto $label$20 
	
.LABEL $label$21
	$31 = [0]
	$32 = CALL db_find_i64(*($1), *($27), (int_64)-5069082855582203904, $15)
	if ( ((int_32)$32 < (int_32)[0]) ){ goto $label$20 }
	$31 = CALL $260($1, $32)
	CALL eosio_assert(((int_32)*($31 + [16]) == (int_32)$1), [64])
	
.LABEL $label$20
	$18 = *($31 + [8])
	$34 = (int_64)0
	$33 = (int_64)59
	$32 = [1248]
	$35 = (int_64)0
	
.LOOP $label$22:
	$36 = (int_64)0
	if ( ((uint_64)$34 > (uint_64)(int_64)11) ){ goto $label$23 }
	$19 = *($32)
	if ( ((uint_32)(($19 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$25 }
	$19 = ($19 + [165])
	goto $label$24 
	
.LABEL $label$25
	$19 = ( ($19 + [208]) ? [0] : ((($19 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$24
	$36 = ((int_64)(CASTING uint_64)(uint_32 ($19 & [31])) << (int_64)((int_64)$33 & (int_64)4294967295))
	
.LABEL $label$23
	$32 = ($32 + [1])
	$34 = ((int_64)$34 + (int_64)1)
	$35 = ((int_64)$36 | (int_64)$35)
	$33 = ((int_64)$33 + (int_64)-5)
	if ( ((int_64)$33 != (int_64)-6) ){ goto $label$22 }
	if ( ((int_64)$18 == (int_64)$35) ){ goto $label$26 }
	*((($37 + [184]) + [8])) = $18
	*((($37 + [184]) + [16])) = (int_64)-1
	*($28) = (int_64)0
	*($29) = [0]
	$33 = *($0)
	*($37 + [184]) = $33
	*((($37 + [136]) + [8])) = (int_64)0
	*(($32 = (($37 + [136]) + [16]))) = (int_64)1397703940
	*($37 + [136]) = (int_64)0
	CALL eosio_assert([1], [464])
	$34 = (uint_64)*($32) >> (uint_64)(int_64)8)
	$32 = [0]
	
.LOOP $label$29:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $34) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$28 }
	$34 = (uint_64)$34 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$34) & (int_64)255) != (int_64)0) ){ goto $label$30 }
	
.LOOP $label$31:
	$34 = (uint_64)$34 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$34) & (int_64)255) != (int_64)0) ){ goto $label$28 }
	$32 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[7]) ){ goto $label$31 }
	
.LABEL $label$30
	$19 = [1]
	$32 = ($32 + [1])
	if ( ((int_32)$32 < (int_32)[7]) ){ goto $label$29 }
	goto $label$27 
	
.LABEL $label$28
	$19 = [0]
	
.LABEL $label$27
	CALL eosio_assert($19, [128])
	CALL $258(($37 + [160]), ($37 + [184]), $33, ($37 + [136]))
	if ( (int_64)(*((($37 + [160]) + [8])) == 0) ){ goto $label$32 }
	$34 = *($31)
	if ( ((uint_64)$34 > (uint_64)(int_64)4) ){ goto $label$38 }
	goto $label$39 
	
.LABEL $label$39
	CALL eosio_assert($5, [1408])
	CALL eosio_assert($6, [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	$34 = $23
	if ( ((int_64)$34 >= (int_64)1) ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$38
	CALL eosio_assert($2, [1408])
	CALL eosio_assert($3, [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	$34 = $24
	if ( ((int_64)$34 >= (int_64)1) ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$37
	CALL eosio_assert($7, [1408])
	CALL eosio_assert($8, [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	$34 = $9
	if ( ((int_64)$34 >= (int_64)1) ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$36
	CALL eosio_assert($10, [1408])
	CALL eosio_assert($11, [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	$34 = $22
	if ( ((int_64)$34 >= (int_64)1) ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$35
	CALL eosio_assert($12, [1408])
	CALL eosio_assert($13, [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	$34 = $21
	if ( ((int_64)$34 >= (int_64)1) ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$34
	CALL eosio_assert($7, [1408])
	CALL eosio_assert($8, [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	$34 = $14
	if ( ((int_64)$34 < (int_64)1) ){ goto $label$32 }
	
.LABEL $label$33
	$33 = *(($31 + [8]))
	*(($31 = (($37 + [120]) + [8]))) = $20
	*(($17 = (($37 + [104]) + [8]))) = [0]
	*($37 + [120]) = $34
	*($37 + [104]) = (int_64)0
	$32 = CALL strlen([3536])
	if ( ((uint_32)$32 >= (uint_32)[-16]) ){ goto $label$15 }
	if ( ((uint_32)$32 >= (uint_32)[11]) ){ goto $label$42 }
	*($37 + [104]) = ($32 << [1])
	$19 = $4
	if ( $32 ){ goto $label$41 }
	goto $label$40 
	
.LABEL $label$42
	$16 = (($32 + [16]) & [-16])
	$19 = CALL $309($16)
	*($17) = $19
	*($37 + [104]) = ($16 | [1])
	*($37 + [108]) = $32
	
.LABEL $label$41
	CALL memcpy($19, [3536], $32)
	
.LABEL $label$40
	*(($19 + $32)) = [0]
	*((($37 + [8]) + [8])) = *($31)
	*($37 + [8]) = *($37 + [120])
	CALL $82($0, $33, ($37 + [8]), ($37 + [104]))
	if ( ((*($37 + [104]) & [1]) == 0) ){ goto $label$32 }
	CALL $310(*($17))
	
.LABEL $label$32
	$31 = *($28)
	if ( ($31 == 0) ){ goto $label$26 }
	$32 = *($30)
	if ( ((int_32)$32 == (int_32)$31) ){ goto $label$44 }
	
.LOOP $label$45:
	$32 = ($32 + [-24])
	$19 = *($32)
	*($32) = [0]
	if ( ($19 == 0) ){ goto $label$46 }
	CALL $310($19)
	
.LABEL $label$46
	if ( ((int_32)$31 != (int_32)$32) ){ goto $label$45 }
	$32 = *($28)
	goto $label$43 
	
.LABEL $label$44
	$32 = $31
	
.LABEL $label$43
	*($30) = $31
	CALL $310($32)
	
.LABEL $label$26
	$15 = ((int_64)$15 + (int_64)1)
	if ( ((int_64)$15 < (int_64)10) ){ goto $label$17 }
	
.LABEL $label$16
	*([0] + [4]) = ($37 + [224])
	return (unreachable)
	
.LABEL $label$15
	CALL $311(($37 + [104]))
	(CASTING uint_32)(uint_64 $34)
}

void .FUNC $181 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $309(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $310($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $310($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $180 (int_32 $0, int_64 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [80])
	*([0] + [4]) = $11
	$3 = *($0)
	$7 = (int_64)0
	$6 = (int_64)59
	$0 = [528]
	$8 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$7 > (uint_64)(int_64)5) ){ goto $label$6 }
	$4 = *($0)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$4 = ($4 + [165])
	goto $label$4 
	
.LABEL $label$6
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$2
	$0 = ($0 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$1 }
	$7 = (int_64)0
	$6 = (int_64)59
	$0 = [2080]
	$10 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$7 > (uint_64)(int_64)9) ){ goto $label$12 }
	$4 = *($0)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$4 = ($4 + [165])
	goto $label$10 
	
.LABEL $label$12
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$8
	$0 = ($0 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$10 = ((int_64)$9 | (int_64)$10)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$7 }
	*($11 + [16]) = $2
	*($11 + [8]) = $1
	*($11 + [32]) = $10
	*($11 + [24]) = $3
	*(($0 = CALL $309([16]))) = $3
	*($0 + [8]) = $8
	*(($4 = ($11 + [56]))) = [0]
	$5 = ($0 + [16])
	*(($11 + [48])) = $5
	*(($11 + [44])) = $5
	*($11 + [40]) = $0
	*($11 + [52]) = [0]
	*(($11 + [60])) = [0]
	CALL $52(($11 + [52]), [16])
	$0 = *($11 + [52])
	$4 = (*($4) - $0)
	CALL eosio_assert(((int_32)$4 > (int_32)[7]), [560])
	CALL memcpy($0, ($11 + [8]), [8])
	CALL eosio_assert(((int_32)($4 + [-8]) > (int_32)[7]), [560])
	CALL memcpy(($0 + [8]), (($11 + [8]) + [8]), [8])
	CALL $51(($11 + [64]), ($11 + [24]))
	$0 = *($11 + [64])
	CALL send_inline($0, (*($11 + [68]) - $0))
	$0 = *($11 + [64])
	if ( ($0 == 0) ){ goto $label$13 }
	*($11 + [68]) = $0
	CALL $310($0)
	
.LABEL $label$13
	$0 = *($11 + [52])
	if ( ($0 == 0) ){ goto $label$14 }
	*(($11 + [56])) = $0
	CALL $310($0)
	
.LABEL $label$14
	$0 = *($11 + [40])
	if ( ($0 == 0) ){ goto $label$15 }
	*(($11 + [44])) = $0
	CALL $310($0)
	
.LABEL $label$15
	*([0] + [4]) = ($11 + [80])
}

int_64 .FUNC $138 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$1 = (*([0] + [4]) - [304])
	*([0] + [4]) = $1
	$1 = CALL memset($1, [0], [152])
	$5 = CALL $120($1)
	$2 = ($0 + [128])
	$4 = *(($0 + [156]))
	if ( ((int_32)$4 == (int_32)*(($0 + [152]))) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [152]) == (int_32)$2), [64])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($2), *(($0 + [136])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $121($2, $4)
	CALL eosio_assert(((int_32)*($4 + [152]) == (int_32)$2), [64])
	
.LABEL $label$2
	$5 = $4
	
.LABEL $label$1
	CALL memcpy(($1 + [152]), $5, [152])
	*($1 + [152]) = ((int_64)*($1 + [152]) + (int_64)1)
	CALL $122($2, ($1 + [152]), *($0))
	$3 = *($1 + [152])
	*([0] + [4]) = ($1 + [304])
	return $3
}

void .FUNC $139 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($4) = [0]
	CALL $141($4, $1)
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $52($0, $2)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($4 + [4]) = $0
	*($4) = $0
	*($4 + [8]) = $3
	CALL $142($4, $1)
	CALL $144(CALL $143(CALL $143($4, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $269 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $309(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $310($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $310($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $130 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [784])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [784])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($0, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $131 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [224])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [152]) == (int_32)$0), [960])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1008])
	CALL memcpy($1, *($3), [152])
	CALL eosio_assert([1], [1072])
	*($4 + [160]) = ($4 + [148])
	*($4 + [156]) = $4
	*($4 + [152]) = $4
	*($4 + [168]) = ($4 + [152])
	*($4 + [180]) = ($1 + [8])
	*($4 + [176]) = $1
	*($4 + [184]) = ($1 + [16])
	*($4 + [188]) = ($1 + [24])
	*($4 + [192]) = ($1 + [40])
	*($4 + [196]) = ($1 + [56])
	*($4 + [200]) = ($1 + [72])
	*($4 + [204]) = ($1 + [88])
	*($4 + [208]) = ($1 + [104])
	*($4 + [212]) = ($1 + [120])
	*($4 + [216]) = ($1 + [136])
	*($4 + [220]) = ($1 + [144])
	CALL $133(($4 + [176]), ($4 + [168]))
	CALL db_update_i64(*($1 + [156]), $2, $4, [148])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)7235159537265672192) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)7235159537265672193
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [224])
}

void .FUNC $132 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [224])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$3()), [896])
	$4 = CALL $309([168])
	CALL $120($4)
	*($4 + [152]) = $1
	CALL memcpy($4, *($3), [152])
	*($7 + [160]) = ($7 + [148])
	*($7 + [156]) = $7
	*($7 + [152]) = $7
	*($7 + [168]) = ($7 + [152])
	*($7 + [180]) = ($4 + [8])
	*($7 + [176]) = $4
	*($7 + [184]) = ($4 + [16])
	*($7 + [188]) = ($4 + [24])
	*($7 + [192]) = ($4 + [40])
	*($7 + [196]) = ($4 + [56])
	*($7 + [200]) = ($4 + [72])
	*($7 + [204]) = ($4 + [88])
	*($7 + [208]) = ($4 + [104])
	*($7 + [212]) = ($4 + [120])
	*($7 + [216]) = ($4 + [136])
	*($7 + [220]) = ($4 + [144])
	CALL $133(($7 + [176]), ($7 + [168]))
	*($4 + [156]) = CALL db_store_i64(*($1 + [8]), (int_64)7235159537265672192, $2, (int_64)7235159537265672192, $7, [148])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)7235159537265672192) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)7235159537265672193
	
.LABEL $label$1
	*($7 + [176]) = $4
	*($7) = (int_64)7235159537265672192
	$5 = *($4 + [156])
	*($7 + [152]) = $5
	$6 = ($1 + [28])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = (int_64)7235159537265672192
	*($3 + [16]) = $5
	*($7 + [176]) = [0]
	*($3) = $4
	*($6) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $134(($1 + [24]), ($7 + [176]), $7, ($7 + [152]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$4 = *($7 + [176])
	*($7 + [176]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $310($4)
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [224])
}

void .FUNC $133 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [560])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [32])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [36])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [40])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [44])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [560])
	CALL memcpy(*($0 + [4]), $2, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $134 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $309(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $310($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $310($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $135 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [784])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [784])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [784])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [784])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [784])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [784])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [32])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [784])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [36])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [784])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [40])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [44])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($2, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $136 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [96])
	*([0] + [4]) = $6
	$5 = CALL current_time()
	*(($6 + [44])) = [0]
	*(($6 + [48])) = [0]
	*($6 + [28]) = [0]
	*($6 + [32]) = [0]
	*($6 + [36]) = [0]
	*($6 + [40]) = [0]
	*($6 + [16]) = ((CASTING uint_32)(uint_64 ((uint_64)$5 / (uint_64)(int_64)1000000)) + [60])
	*($6 + [52]) = [0]
	*(($6 + [56])) = [0]
	*(($6 + [60])) = [0]
	*($6 + [64]) = [0]
	*(($6 + [68])) = [0]
	*(($6 + [72])) = [0]
	CALL $137(($6 + [52]), $1, $2, $3, $4)
	*($6 + [36]) = [1]
	$5 = CALL $138($0)
	*($6 + [8]) = (int_64)0
	*($6) = $5
	$5 = *($0)
	CALL $139(($6 + [80]), ($6 + [16]))
	$0 = *($6 + [80])
	CALL send_deferred($6, $5, $0, (*($6 + [84]) - $0), [0])
	$0 = *($6 + [80])
	if ( ($0 == 0) ){ goto $label$1 }
	*($6 + [84]) = $0
	CALL $310($0)
	
.LABEL $label$1
	CALL $140(($6 + [16]))
	*([0] + [4]) = ($6 + [96])
}

void .FUNC $137 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$8 = *($0)
	$9 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$5 = ($9 + [1])
	if ( ((uint_32)$5 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$7 = ($8 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = CALL $309(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	$5 = ($8 + ((int_32)$7 * (int_32)[40]))
	$9 = ($8 + ((int_32)$9 * (int_32)[40]))
	$8 = CALL $50($9, $1, *($2), *($3), $4)
	$6 = ($8 + [40])
	$7 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$6 }
	$4 = ([0] - $7)
	$7 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($7 + [-12]))
	*(($8 + [-40])) = *(($7 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($2 = ($8 + [-16]))) = [0]
	$3 = ($7 + [-4])
	*($1) = *($3)
	*(($8 + [-20])) = *($7)
	$1 = ($7 + [4])
	*($2) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($3) = (int_64)0
	*(($2 = ($8 + [-4]))) = [0]
	$3 = ($7 + [8])
	*($1) = *($3)
	*(($8 + [-8])) = *(($7 + [12]))
	$8 = ($7 + [16])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$9 = ($9 + [-40])
	$8 = $9
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $4) != (int_32)[-20]) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$1 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$1 = $7
	
.LABEL $label$5
	*($0) = $9
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$8 }
	$9 = ([0] - $1)
	$7 = ($7 + [-24])
	
.LOOP $label$9:
	$8 = *(($7 + [12]))
	if ( ($8 == 0) ){ goto $label$10 }
	*(($7 + [16])) = $8
	CALL $310($8)
	
.LABEL $label$10
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$11 }
	*(($7 + [4])) = $8
	CALL $310($8)
	
.LABEL $label$11
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $9) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $310($1)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $33 (int_32 $0, int_64 $1, int_64 $2)
{
	CALL require_auth(*($0))
}

void .FUNC $300 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = (int_64)1398362884
	CALL eosio_assert([1], [464])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [128])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	*($6 + [12]) = $1
	*($6 + [8]) = $1
	*($6 + [16]) = ($1 + $2)
	*($6 + [24]) = ($6 + [8])
	*($6 + [36]) = ($0 + [8])
	*($6 + [32]) = $0
	*($6 + [40]) = ($0 + [16])
	*($6 + [44]) = ($0 + [32])
	CALL $301(($6 + [32]), ($6 + [24]))
	*([0] + [4]) = ($6 + [48])
}

void .FUNC $208 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [784])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [784])
	CALL memcpy(($5 + [15]), *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	*($0) = ((int_32)*($5 + [15]) != (int_32)[0])
	*([0] + [4]) = ($5 + [16])
}

int_32 .FUNC $209 (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [48])
	*([0] + [4]) = $10
	$3 = (CASTING int_64)(int_32 ((int_32)CALL tapos_block_prefix() * (int_32)CALL $fimport$28()))
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [1696]
	$8 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$7 > (uint_64)(int_64)8) ){ goto $label$6 }
	$4 = *($5)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$4 = ($4 + [165])
	goto $label$4 
	
.LABEL $label$6
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$2
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$1 }
	*($10 + [40]) = (int_64))(((int_64)((int_64)((int_64)$1 + (int_64)$3) + (int_64)$8) + (int_64)10086) - CALL current_time())
	CALL sha256(($10 + [40]), [4], $10)
	$7 = *($10 + [2 align=2])
	$9 = *($10 + [1 align=1])
	$6 = *($10 + [4 align=4])
	$8 = *($10 + [16])
	$1 = *($10 + [24])
	*([0] + [4]) = ($10 + [48])
	return ((CASTING uint_32)(uint_64 ((int_64)((uint_64)((int_64)((int_64)$1 + (int_64)((int_64)$8 + (int_64)((int_64)$6 + (int_64)((int_64)$9 + (int_64)$7)))) + (int_64)10086) % (uint_64)(CASTING uint_64)(uint_32 $2)) + (int_64)1)) & [255])
}

void .FUNC $202 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	*($1) = *(*($0))
	$2 = *(*($0 + [4]))
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [464])
	$4 = [0]
	$3 = (int_64)5850443
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [128])
	$4 = *($0 + [8])
	CALL eosio_assert(((int_64)*($4 + [8]) == (int_64)1497713412), [224])
	$3 = ((int_64)*($4) + (int_64)$2)
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [304])
	*(($1 + [16])) = (int_64)1497713412
	*($1 + [8]) = $3
}

void .FUNC $203 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	$2 = *(*($0))
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [464])
	$0 = [0]
	$3 = (int_64)5850443
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [128])
	CALL eosio_assert(((int_64)1497713412 == (int_64)*(($1 + [16]))), [224])
	$3 = ((int_64)*($1 + [8]) + (int_64)$2)
	*($1 + [8]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [304])
}

void .FUNC $200 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	$2 = *(*($0))
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [464])
	$0 = [0]
	$3 = (int_64)5850443
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [128])
	CALL eosio_assert(((int_64)1497713412 == (int_64)*(($1 + [32]))), [224])
	$3 = ((int_64)*($1 + [24]) + (int_64)$2)
	*($1 + [24]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($1 + [24]) < (int_64)4611686018427387904), [304])
}

void .FUNC $201 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [32])
	*([0] + [4]) = $4
	$2 = *($0)
	CALL $202(*($0 + [4]), $1)
	CALL eosio_assert([1], [560])
	CALL memcpy($4, $1, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy(($4 | [8]), ($1 + [8]), [8])
	CALL eosio_assert([1], [560])
	CALL memcpy(($4 + [16]), ($1 + [16]), [8])
	$3 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-9026229453371588608, *(*($0 + [8])), $3, $4, [24])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$1 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [32])
}

int_32 .FUNC $206 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($0 + [16]) = (int_64)0
	*(($4 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [464])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [128])
	*($0 + [52]) = $1
	*($6) = *($2 + [4])
	*($6 + [12]) = ($0 + [8])
	*($6 + [8]) = $0
	*($6 + [16]) = ($0 + [16])
	*($6 + [20]) = ($0 + [32])
	*($6 + [24]) = ($0 + [40])
	*($6 + [28]) = ($0 + [48])
	CALL $208(($6 + [8]), $6)
	*($0 + [56]) = *(*($2 + [8]))
	*([0] + [4]) = ($6 + [32])
	return $0
}

void .FUNC $207 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $309(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $310($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $310($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $204 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [752])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $309([64])
	$6 = CALL $206($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = *($4)
	*($8 + [8]) = $5
	$1 = *($4 + [56])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $207(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $310($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $205 (int_32 $0, int_32 $1)
{
	int_64 $2
	*($0 + [8]) = (int_64)310366523908
	$2 = (Rounds 0)(((float_64)((float_64)(CASTING float_64)(uint_64 *($1 + [32])) * (float_64)(float_64)3e6) + (float_64)((float_64)(CASTING float_64)(uint_64 *($1 + [8])) * (float_64)(float_64)8e5)))
	*($0) = $2
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [464])
	$1 = [0]
	$2 = (int_64)1212369234
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$0 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	CALL eosio_assert($0, [128])
}

void .FUNC _Z5splitRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKc (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	*($0) = (int_64)0
	$3 = [0]
	*($0 + [8]) = [0]
	*($7 + [8]) = [0]
	*($7) = (int_64)0
	$5 = ($6 & [1])
	$6 = *($1)
	$6 = ( *($1 + [4]) ? uint_32($6 >> [1]) : $5 )
	if ( ($6 == 0) ){ goto $label$2 }
	$1 = ( *($1 + [8]) ? ($1 + [1]) : $5 )
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$3:
	$3 = *($1)
	if ( ((int_32)$3 != (int_32)*($2)) ){ goto $label$7 }
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)*($4)) ){ goto $label$6 }
	CALL $325($3, $7)
	*($5) = (*($5) + [12])
	goto $label$5 
	
.LABEL $label$7
	CALL $317($7, int_32(($3 << [24]) >> [24]))
	goto $label$4 
	
.LABEL $label$6
	CALL $9($0, $7)
	
.LABEL $label$5
	if ( (*($7) & [1]) ){ goto $label$8 }
	*($7) = [0]
	goto $label$4 
	
.LABEL $label$8
	*(*(($7 + [8]))) = [0]
	*($7 + [4]) = [0]
	
.LABEL $label$4
	$1 = ($1 + [1])
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$3 }
	$3 = *($7 + [4])
	$1 = *($7)
	goto $label$1 
	
.LABEL $label$2
	$1 = [0]
	
.LABEL $label$1
	if ( (( $3 ? uint_32(($1 & [254]) >> [1]) : ($1 & [1]) ) == 0) ){ goto $label$9 }
	$1 = ($0 + [4])
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)*(($0 + [8]))) ){ goto $label$10 }
	CALL $325($6, $7)
	*($1) = (*($1) + [12])
	goto $label$9 
	
.LABEL $label$10
	CALL $9($0, $7)
	
.LABEL $label$9
	if ( ((*($7) & [1]) == 0) ){ goto $label$11 }
	CALL $310(*(($7 + [8])))
	
.LABEL $label$11
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $9 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0)
	$2 = ((int_32)(*($0 + [4]) - $6) / (int_32)[12])
	$4 = ($2 + [1])
	if ( ((uint_32)$4 >= (uint_32)[357913942]) ){ goto $label$2 }
	$5 = [357913941]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[12])
	if ( ((uint_32)$6 > (uint_32)[178956969]) ){ goto $label$4 }
	$5 = ($6 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $309(((int_32)$5 * (int_32)[12]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	$6 = ($4 + ((int_32)$2 * (int_32)[12]))
	CALL $325($6, $1)
	$2 = ($4 + ((int_32)$5 * (int_32)[12]))
	$3 = ($6 + [12])
	$5 = *($0)
	$4 = *(($0 + [4]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$6 }
	$1 = ([0] - $5)
	$5 = ($4 + [-12])
	
.LOOP $label$7:
	*(($6 + [-12])) = *($5)
	$4 = ($5 + [8])
	*(($6 + [-4])) = *($4)
	*($5) = [0]
	*(($5 + [4])) = [0]
	*($4) = [0]
	$6 = ($6 + [-12])
	$5 = ($5 + [-12])
	if ( ((int_32)($5 + $1) != (int_32)[-12]) ){ goto $label$7 }
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $5
	
.LABEL $label$5
	*($0) = $6
	*(($0 + [4])) = $3
	*(($0 + [8])) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$8 }
	$6 = ([0] - $4)
	$5 = ($5 + [-12])
	
.LOOP $label$9:
	if ( ((*($5) & [1]) == 0) ){ goto $label$10 }
	CALL $310(*(($5 + [8])))
	
.LABEL $label$10
	$5 = ($5 + [-12])
	if ( ((int_32)($5 + $6) != (int_32)[-12]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $310($4)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $6 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	*($0) = (int_64)0
	*($0 + [8]) = [0]
	*($5 + [15]) = $1
	$1 = *($2)
	$3 = ( *($2 + [4]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($3 + [1])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 > (uint_32)[10]) ){ goto $label$3 }
	*($0) = [2]
	$1 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$4 = (($3 + [17]) & [-16])
	$1 = CALL $309($4)
	*($0) = ($4 | [1])
	*(($0 + [8])) = $1
	*(($0 + [4])) = [1]
	
.LABEL $label$2
	CALL memcpy($1, ($5 + [15]), [1])
	*($1 + [1]) = [0]
	CALL $315($0, ( *($2 + [8]) ? ($2 + [1]) : (*($2) & [1]) ), $3)
	*([0] + [4]) = ($5 + [16])
	return (unreachable)
	
.LABEL $label$1
	CALL $311($0)
}

int_32 .FUNC _Z7canSelli (int_32 $0)
{
	$0 = ($0 + [-16])
	if ( ((uint_32)$0 > (uint_32)[29]) ){ goto $label$1 }
	return (uint_32([536870782] >> ($0 & [1073741823])) & [1])
	
.LABEL $label$1
	return [1]
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC _Z13uint64_stringy (int_32 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 ((uint_64)$1 % (uint_64)(int_64)10))
	CALL $6($5, ( ($3 | [48]) ? ($3 + [55]) : ($3 <= [10]) ), $0)
	$2 = ((uint_64)$1 / (uint_64)(int_64)10)
	if ( (*($0) & [1]) ){ goto $label$3 }
	*($0) = [0]
	goto $label$2 
	
.LABEL $label$3
	*(*(($0 + [8]))) = [0]
	*($4) = [0]
	
.LABEL $label$2
	CALL $312($0, [0])
	*(($0 + [8])) = *(($5 + [8]))
	*($0) = *($5)
	$3 = ((uint_64)$1 > (uint_64)(int_64)9)
	$1 = $2
	if ( $3 ){ goto $label$1 }
	*([0] + [4]) = ($5 + [16])
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC memory ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC _ZeqRK11checksum256S1_ (int_32 $0, int_32 _ZeqRK11checksum256S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC _ZN12richrichrich10onTransferEyyN5eosio14extended_assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [448])
	*([0] + [4]) = $12
	$11 = *($0)
	if ( ((int_64)$11 == (int_64)$1) ){ goto $label$1 }
	if ( ((int_64)$11 != (int_64)$2) ){ goto $label$1 }
	if ( (CALL $45($0, $1) == 0) ){ goto $label$23 }
	$1 = *($0)
	$2 = (int_64)0
	$9 = (int_64)59
	$8 = [528]
	$10 = (int_64)0
	
.LOOP $label$24:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$29 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$5 = ($5 + [165])
	goto $label$27 
	
.LABEL $label$29
	$11 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$28
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$26
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$25
	$8 = ($8 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$24 }
	*($12 + [384]) = $10
	*($12 + [376]) = $1
	$6 = *($3 + [16])
	$2 = (int_64)0
	$9 = (int_64)59
	$8 = [32]
	$10 = (int_64)0
	
.LOOP $label$30:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$35 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$5 = ($5 + [165])
	goto $label$33 
	
.LABEL $label$35
	$11 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$34
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$32
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$31
	$8 = ($8 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$30 }
	$2 = (int_64)0
	$11 = (int_64)59
	$8 = [3024]
	$1 = (int_64)0
	
.LOOP $label$36:
	$9 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$37 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$39 }
	$5 = ($5 + [165])
	goto $label$38 
	
.LABEL $label$39
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$38
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$37
	$8 = ($8 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$1 = ((int_64)$9 | (int_64)$1)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$36 }
	$11 = *($3 + [8])
	$9 = *($3)
	CALL eosio_assert((uint_64)(((int_64)$9 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [464])
	$2 = (uint_64)$11 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$40:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$41 }
	
.LOOP $label$42:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$42 }
	
.LABEL $label$41
	$5 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$40 }
	goto $label$21 
	
.LABEL $label$23
	$6 = *($0)
	$2 = (int_64)0
	$11 = (int_64)59
	$8 = [1136]
	$10 = (int_64)0
	
.LOOP $label$43:
	$9 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$44 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$46 }
	$5 = ($5 + [165])
	goto $label$45 
	
.LABEL $label$46
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$45
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$44
	$8 = ($8 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$10 = ((int_64)$9 | (int_64)$10)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$43 }
	if ( ((int_64)$6 != (int_64)$10) ){ goto $label$20 }
	$6 = *($3 + [16])
	$2 = (int_64)0
	$11 = (int_64)59
	$8 = [1664]
	$10 = (int_64)0
	
.LOOP $label$47:
	$9 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$48 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$50 }
	$5 = ($5 + [165])
	goto $label$49 
	
.LABEL $label$50
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$49
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$48
	$8 = ($8 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$10 = ((int_64)$9 | (int_64)$10)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$47 }
	if ( ((int_64)$6 != (int_64)$10) ){ goto $label$51 }
	if ( ((int_64)*($3 + [8]) != (int_64)310366523908) ){ goto $label$51 }
	$8 = *($4)
	$5 = CALL strlen([3040])
	if ( ((int_32)$5 != (int_32)( *($4 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$52 }
	if ( (CALL $319($4, [0], [-1], [3040], $5) == 0) ){ goto $label$18 }
	
.LABEL $label$52
	$8 = *($4)
	$5 = CALL strlen([3056])
	if ( ((int_32)$5 != (int_32)( *(($4 + [4])) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$51 }
	if ( (CALL $319($4, [0], [-1], [3056], $5) == 0) ){ goto $label$14 }
	
.LABEL $label$51
	$2 = (int_64)0
	$9 = (int_64)59
	$8 = [544]
	$10 = (int_64)0
	
.LOOP $label$53:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$58 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$57 }
	$5 = ($5 + [165])
	goto $label$56 
	
.LABEL $label$58
	$11 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$57
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$56
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$55
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$54
	$8 = ($8 + [1])
	$9 = ((int_64)$9 + (int_64)-5)
	$10 = ((int_64)$11 | (int_64)$10)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$53 }
	if ( ((int_64)$6 != (int_64)$10) ){ goto $label$1 }
	if ( ((int_64)*($3 + [8]) != (int_64)1397703940) ){ goto $label$1 }
	$8 = *($4)
	$5 = CALL strlen([3072])
	if ( ((int_32)$5 != (int_32)( *($4 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$59 }
	if ( (CALL $319($4, [0], [-1], [3072], $5) == 0) ){ goto $label$15 }
	
.LABEL $label$59
	$5 = [0]
	CALL $326(($12 + [328]), $4, [0], [13], $4)
	$8 = *($12 + [328])
	$7 = CALL strlen([3088])
	if ( ((int_32)$7 != (int_32)( *($12 + [332]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$60 }
	$5 = (CALL $319(($12 + [328]), [0], [-1], [3088], $7) == 0)
	$8 = *($12 + [328])
	
.LABEL $label$60
	if ( (($8 & [1]) == 0) ){ goto $label$61 }
	CALL $310(*($12 + [336]))
	
.LABEL $label$61
	if ( ($5 == 0) ){ goto $label$19 }
	CALL eosio_assert(((uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$4() / (uint_64)(int_64)1000000)) > (uint_32)[1547294400]), [2656])
	*($12 + [392]) = [124]
	CALL _Z5splitRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKc(($12 + [328]), $4, ($12 + [392]))
	CALL $325(($12 + [264]), (*($12 + [328]) + [12]))
	$8 = *($12 + [264])
	$7 = ($8 & [1])
	if ( $7 ){ goto $label$17 }
	$5 = uint_32($8 >> [1])
	if ( ($5 == 0) ){ goto $label$12 }
	$8 = (($12 + [264]) | [1])
	$2 = (int_64)0
	
.LOOP $label$62:
	$4 = *($8)
	if ( ((uint_32)(($4 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$63 }
	$2 = ((int_64)((int_64)((int_64)$2 * (int_64)10) + (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)) + (int_64)-48)
	
.LABEL $label$63
	$8 = ($8 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$62 }
	goto $label$16 
	
.LABEL $label$22
	$5 = [0]
	
.LABEL $label$21
	CALL eosio_assert($5, [128])
	*(($12 + [352])) = $11
	*($12 + [336]) = $1
	*($12 + [344]) = $9
	*($12 + [328]) = *($0)
	CALL $325(($12 + [360]), $4)
	$8 = CALL $50(($12 + [392]), ($12 + [376]), $6, $10, ($12 + [328]))
	CALL $51(($12 + [432]), $8)
	$5 = *($12 + [432])
	CALL send_inline($5, (*($12 + [436]) - $5))
	$5 = *($12 + [432])
	if ( ($5 == 0) ){ goto $label$64 }
	*($12 + [436]) = $5
	CALL $310($5)
	
.LABEL $label$64
	$5 = *($8 + [28])
	if ( ($5 == 0) ){ goto $label$65 }
	*(($8 + [32])) = $5
	CALL $310($5)
	
.LABEL $label$65
	$5 = *($8 + [16])
	if ( ($5 == 0) ){ goto $label$66 }
	*(($8 + [20])) = $5
	CALL $310($5)
	
.LABEL $label$66
	if ( ((*($12 + [360]) & [1]) == 0) ){ goto $label$1 }
	CALL $310(*(($12 + [368])))
	goto $label$1 
	
.LABEL $label$20
	$2 = (int_64)0
	$9 = (int_64)59
	$8 = [528]
	$10 = (int_64)0
	
.LOOP $label$67:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$72 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$71 }
	$5 = ($5 + [165])
	goto $label$70 
	
.LABEL $label$72
	$11 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$69 }
	goto $label$68 
	
.LABEL $label$71
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$70
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$69
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$68
	$8 = ($8 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$67 }
	*($12 + [384]) = $10
	*($12 + [376]) = $6
	$6 = *($3 + [16])
	$2 = (int_64)0
	$9 = (int_64)59
	$8 = [32]
	$10 = (int_64)0
	
.LOOP $label$73:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$78 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$77 }
	$5 = ($5 + [165])
	goto $label$76 
	
.LABEL $label$78
	$11 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$75 }
	goto $label$74 
	
.LABEL $label$77
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$76
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$75
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$74
	$8 = ($8 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$73 }
	$2 = (int_64)0
	$11 = (int_64)59
	$8 = [3024]
	$1 = (int_64)0
	
.LOOP $label$79:
	$9 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$80 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$82 }
	$5 = ($5 + [165])
	goto $label$81 
	
.LABEL $label$82
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$81
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$80
	$8 = ($8 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$1 = ((int_64)$9 | (int_64)$1)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$79 }
	$11 = *($3 + [8])
	$9 = *($3)
	CALL eosio_assert((uint_64)(((int_64)$9 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [464])
	$2 = (uint_64)$11 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$85:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$84 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$86 }
	
.LOOP $label$87:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$84 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$87 }
	
.LABEL $label$86
	$5 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$85 }
	goto $label$83 
	
.LABEL $label$84
	$5 = [0]
	
.LABEL $label$83
	CALL eosio_assert($5, [128])
	*(($12 + [352])) = $11
	*($12 + [336]) = $1
	*($12 + [344]) = $9
	*($12 + [328]) = *($0)
	CALL $325(($12 + [360]), $4)
	$8 = CALL $50(($12 + [392]), ($12 + [376]), $6, $10, ($12 + [328]))
	CALL $51(($12 + [432]), $8)
	$5 = *($12 + [432])
	CALL send_inline($5, (*($12 + [436]) - $5))
	$5 = *($12 + [432])
	if ( ($5 == 0) ){ goto $label$88 }
	*($12 + [436]) = $5
	CALL $310($5)
	
.LABEL $label$88
	$5 = *($8 + [28])
	if ( ($5 == 0) ){ goto $label$89 }
	*(($8 + [32])) = $5
	CALL $310($5)
	
.LABEL $label$89
	$5 = *($8 + [16])
	if ( ($5 == 0) ){ goto $label$90 }
	*(($8 + [20])) = $5
	CALL $310($5)
	
.LABEL $label$90
	if ( ((*($12 + [360]) & [1]) == 0) ){ goto $label$1 }
	CALL $310(*(($12 + [368])))
	goto $label$1 
	
.LABEL $label$19
	$8 = *($4)
	$5 = ($4 + [4])
	$7 = CALL strlen([3104])
	if ( ((int_32)$7 != (int_32)( *($5) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$91 }
	if ( (CALL $319($4, [0], [-1], [3104], $7) == 0) ){ goto $label$11 }
	
.LABEL $label$91
	$8 = *($4)
	$7 = CALL strlen([3040])
	if ( ((int_32)$7 != (int_32)( *($5) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$92 }
	if ( (CALL $319($4, [0], [-1], [3040], $7) == 0) ){ goto $label$6 }
	
.LABEL $label$92
	$5 = [0]
	CALL $326(($12 + [328]), $4, [0], [8], $4)
	$8 = *($12 + [328])
	$7 = CALL strlen([3120])
	if ( ((int_32)$7 != (int_32)( *($12 + [332]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$93 }
	$5 = (CALL $319(($12 + [328]), [0], [-1], [3120], $7) == 0)
	$8 = *($12 + [328])
	
.LABEL $label$93
	if ( (($8 & [1]) == 0) ){ goto $label$94 }
	CALL $310(*($12 + [336]))
	
.LABEL $label$94
	if ( ($5 == 0) ){ goto $label$13 }
	CALL eosio_assert([0], [3136])
	*($12 + [392]) = [124]
	CALL _Z5splitRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKc(($12 + [328]), $4, ($12 + [392]))
	*(($8 = (($12 + [192]) + [16]))) = *(($3 + [16]))
	*(($5 = (($12 + [192]) + [8]))) = *(($3 + [8]))
	*($12 + [192]) = *($3)
	CALL $325(($12 + [176]), (*($12 + [328]) + [12]))
	*((($12 + [104]) + [16])) = *($8)
	*((($12 + [104]) + [8])) = *($5)
	*($12 + [104]) = *($12 + [192])
	CALL $245($0, $1, ($12 + [104]), ($12 + [176]))
	if ( ((*($12 + [176]) & [1]) == 0) ){ goto $label$95 }
	CALL $310(*($12 + [184]))
	
.LABEL $label$95
	$0 = *($12 + [328])
	if ( ($0 == 0) ){ goto $label$1 }
	$8 = *($12 + [332])
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$5 }
	$5 = ([0] - $0)
	$8 = ($8 + [-12])
	
.LOOP $label$96:
	if ( ((*($8) & [1]) == 0) ){ goto $label$97 }
	CALL $310(*(($8 + [8])))
	
.LABEL $label$97
	$8 = ($8 + [-12])
	if ( ((int_32)($8 + $5) != (int_32)[-12]) ){ goto $label$96 }
	$8 = *($12 + [328])
	goto $label$4 
	
.LABEL $label$18
	$2 = *(($3 + [8]))
	*((($12 + [312]) + [8])) = $2
	$11 = *($3)
	*((($12 + [8]) + [8])) = $2
	*($12 + [312]) = $11
	*($12 + [12]) = *($12 + [316])
	*($12 + [8]) = *($12 + [312])
	CALL $185($0, $1, ($12 + [8]))
	goto $label$1 
	
.LABEL $label$17
	$5 = *($12 + [268])
	if ( ($5 == 0) ){ goto $label$10 }
	$8 = *(($12 + [272]))
	$2 = (int_64)0
	
.LOOP $label$98:
	$4 = *($8)
	if ( ((uint_32)(($4 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$99 }
	$2 = ((int_64)((int_64)((int_64)$2 * (int_64)10) + (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)) + (int_64)-48)
	
.LABEL $label$99
	$8 = ($8 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$98 }
	
.LABEL $label$16
	if ( $7 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$15
	CALL eosio_assert(((uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$4() / (uint_64)(int_64)1000000)) > (uint_32)[1547294400]), [2656])
	*(($8 = (($12 + [280]) + [8]))) = *(($3 + [8]))
	$2 = *($3)
	*((($12 + [40]) + [12])) = *((($12 + [280]) + [12]))
	*((($12 + [40]) + [8])) = *($8)
	*($12 + [280]) = $2
	*($12 + [44]) = *($12 + [284])
	*($12 + [40]) = *($12 + [280])
	CALL $241($0, $1, ($12 + [40]))
	goto $label$1 
	
.LABEL $label$14
	CALL eosio_assert(((uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$4() / (uint_64)(int_64)1000000)) > (uint_32)[1547294400]), [2656])
	*(($8 = (($12 + [296]) + [8]))) = *(($3 + [8]))
	$2 = *($3)
	*((($12 + [24]) + [12])) = *((($12 + [296]) + [12]))
	*((($12 + [24]) + [8])) = *($8)
	*($12 + [296]) = $2
	*($12 + [28]) = *($12 + [300])
	*($12 + [24]) = *($12 + [296])
	CALL $240($0, $1, ($12 + [24]))
	goto $label$1 
	
.LABEL $label$13
	$5 = [0]
	CALL $326(($12 + [328]), $4, [0], [8], $4)
	$8 = *($12 + [328])
	$7 = CALL strlen([3152])
	if ( ((int_32)$7 != (int_32)( *($12 + [332]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$100 }
	$5 = (CALL $319(($12 + [328]), [0], [-1], [3152], $7) == 0)
	$8 = *($12 + [328])
	
.LABEL $label$100
	if ( (($8 & [1]) == 0) ){ goto $label$101 }
	CALL $310(*($12 + [336]))
	
.LABEL $label$101
	if ( ($5 == 0) ){ goto $label$7 }
	*($12 + [392]) = [124]
	CALL _Z5splitRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKc(($12 + [328]), $4, ($12 + [392]))
	*(($8 = (($12 + [160]) + [8]))) = *(($3 + [8]))
	*($12 + [160]) = *($3)
	$5 = CALL _ZNSt3__14stoiERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji((*($12 + [328]) + [12]), [0], [10])
	CALL $325(($12 + [144]), (*($12 + [328]) + [24]))
	*((($12 + [128]) + [8])) = *($8)
	*($12 + [128]) = *($12 + [160])
	CALL $246($0, $1, ($12 + [128]), (CASTING int_64)(int_32 $5), ($12 + [144]))
	if ( ((*($12 + [144]) & [1]) == 0) ){ goto $label$102 }
	CALL $310(*($12 + [152]))
	
.LABEL $label$102
	$0 = *($12 + [328])
	if ( ($0 == 0) ){ goto $label$1 }
	$8 = *($12 + [332])
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$3 }
	$5 = ([0] - $0)
	$8 = ($8 + [-12])
	
.LOOP $label$103:
	if ( ((*($8) & [1]) == 0) ){ goto $label$104 }
	CALL $310(*(($8 + [8])))
	
.LABEL $label$104
	$8 = ($8 + [-12])
	if ( ((int_32)($8 + $5) != (int_32)[-12]) ){ goto $label$103 }
	$8 = *($12 + [328])
	goto $label$2 
	
.LABEL $label$12
	$2 = (int_64)0
	goto $label$8 
	
.LABEL $label$11
	CALL eosio_assert(((uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$4() / (uint_64)(int_64)1000000)) > (uint_32)[1547294400]), [2656])
	*(($8 = (($12 + [232]) + [8]))) = *(($3 + [8]))
	$2 = *($3)
	*((($12 + [72]) + [12])) = *((($12 + [232]) + [12]))
	*((($12 + [72]) + [8])) = *($8)
	*($12 + [232]) = $2
	*($12 + [76]) = *($12 + [236])
	*($12 + [72]) = *($12 + [232])
	CALL $243($0, $1, ($12 + [72]))
	goto $label$1 
	
.LABEL $label$10
	$2 = (int_64)0
	
.LABEL $label$9
	CALL $310(*(($12 + [272])))
	
.LABEL $label$8
	$11 = *(($3 + [8]))
	*((($12 + [248]) + [8])) = $11
	$9 = *($3)
	*((($12 + [56]) + [8])) = $11
	*($12 + [248]) = $9
	*($12 + [60]) = *($12 + [252])
	*($12 + [56]) = *($12 + [248])
	CALL $242($0, $1, ($12 + [56]), $2)
	$0 = *($12 + [328])
	if ( ($0 == 0) ){ goto $label$1 }
	$8 = *($12 + [332])
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$106 }
	$5 = ([0] - $0)
	$8 = ($8 + [-12])
	
.LOOP $label$107:
	if ( ((*($8) & [1]) == 0) ){ goto $label$108 }
	CALL $310(*(($8 + [8])))
	
.LABEL $label$108
	$8 = ($8 + [-12])
	if ( ((int_32)($8 + $5) != (int_32)[-12]) ){ goto $label$107 }
	$8 = *($12 + [328])
	goto $label$105 
	
.LABEL $label$106
	$8 = $0
	
.LABEL $label$105
	*($12 + [332]) = $0
	CALL $310($8)
	goto $label$1 
	
.LABEL $label$7
	$5 = [0]
	CALL $326(($12 + [328]), $4, [0], [10], $4)
	$8 = *($12 + [328])
	$0 = CALL strlen([3168])
	if ( ((int_32)$0 != (int_32)( *($12 + [332]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$109 }
	$5 = (CALL $319(($12 + [328]), [0], [-1], [3168], $0) == 0)
	$8 = *($12 + [328])
	
.LABEL $label$109
	if ( (($8 & [1]) == 0) ){ goto $label$110 }
	CALL $310(*($12 + [336]))
	
.LABEL $label$110
	if ( $5 ){ goto $label$1 }
	CALL $326(($12 + [328]), $4, [0], [13], $4)
	$8 = *($12 + [328])
	$5 = CALL strlen([3184])
	if ( ((int_32)$5 != (int_32)( *($12 + [332]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$111 }
	CALL $319(($12 + [328]), [0], [-1], [3184], $5)
	$8 = *($12 + [328])
	
.LABEL $label$111
	if ( (($8 & [1]) == 0) ){ goto $label$1 }
	CALL $310(*($12 + [336]))
	goto $label$1 
	
.LABEL $label$6
	$2 = *(($3 + [8]))
	*((($12 + [216]) + [8])) = $2
	$11 = *($3)
	*((($12 + [88]) + [8])) = $2
	*($12 + [216]) = $11
	*($12 + [92]) = *($12 + [220])
	*($12 + [88]) = *($12 + [216])
	CALL $244($0, $1, ($12 + [88]))
	goto $label$1 
	
.LABEL $label$5
	$8 = $0
	
.LABEL $label$4
	*($12 + [332]) = $0
	CALL $310($8)
	goto $label$1 
	
.LABEL $label$3
	$8 = $0
	
.LABEL $label$2
	*($12 + [332]) = $0
	CALL $310($8)
	
.LABEL $label$1
	*([0] + [4]) = ($12 + [448])
}

void .FUNC _ZN12richrichrich6revealEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_64 $18
	int_64 $19
	int_64 $20
	int_64 $21
	int_32 $22
	$22 = (*([0] + [4]) - [352])
	*([0] + [4]) = $22
	*($22 + [344]) = $1
	$1 = (int_64)0
	$7 = (int_64)59
	$13 = [1136]
	$18 = (int_64)0
	
.LOOP $label$1:
	$19 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$2 }
	$12 = *($13)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$12 = ($12 + [165])
	goto $label$3 
	
.LABEL $label$4
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$19 = ((int_64)(CASTING uint_64)(uint_32 ($12 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$13 = ($13 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$18 = ((int_64)$19 | (int_64)$18)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	$1 = (int_64)0
	$19 = (int_64)59
	$13 = [1152]
	$20 = (int_64)0
	
.LOOP $label$5:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$10 }
	$12 = *($13)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$12 = ($12 + [165])
	goto $label$8 
	
.LABEL $label$10
	$7 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$7
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$19 & (int_64)4294967295))
	
.LABEL $label$6
	$13 = ($13 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$20 = ((int_64)$7 | (int_64)$20)
	$19 = ((int_64)$19 + (int_64)-5)
	if ( ((int_64)$19 != (int_64)-6) ){ goto $label$5 }
	CALL require_auth2($18, $20)
	CALL $226(($22 + [280]), $0, ($22 + [344]))
	if ( CALL $45($0, *($22 + [288])) ){ goto $label$12 }
	*($22 + [272]) = (int_64)1397703940
	*($22 + [264]) = (int_64)0
	CALL eosio_assert([1], [464])
	$1 = (int_64)5459781
	$13 = [0]
	
.LOOP $label$15:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	
.LOOP $label$17:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	$12 = [1]
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	$12 = [0]
	
.LABEL $label$13
	CALL eosio_assert($12, [128])
	*(($22 + [256])) = *(($22 + [320]))
	*(($22 + [248])) = *(($22 + [312]))
	*($22 + [240]) = *($22 + [304])
	CALL eosio_assert([1], [464])
	$10 = (($22 + [280]) + [24])
	$1 = (int_64)5459781
	$13 = [0]
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$21 }
	
.LOOP $label$22:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$22 }
	
.LABEL $label$21
	$12 = [1]
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	$12 = [0]
	
.LABEL $label$18
	CALL eosio_assert($12, [128])
	*(($22 + [232])) = [0]
	*($22 + [224]) = (int_64)0
	$13 = CALL strlen([16])
	if ( ((uint_32)$13 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$13 >= (uint_32)[11]) ){ goto $label$25 }
	*($22 + [224]) = ($13 << [1])
	$12 = (($22 + [224]) | [1])
	if ( $13 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$14 = (($13 + [16]) & [-16])
	$12 = CALL $309($14)
	*($22 + [224]) = ($14 | [1])
	*($22 + [232]) = $12
	*($22 + [228]) = $13
	
.LABEL $label$24
	CALL memcpy($12, [16], $13)
	
.LABEL $label$23
	*(($12 + $13)) = [0]
	$13 = *($22 + [329])
	if ( ((int_32)$13 == (int_32)[1]) ){ goto $label$29 }
	if ( ((int_32)$13 == (int_32)[2]) ){ goto $label$30 }
	if ( ((int_32)$13 != (int_32)[5]) ){ goto $label$27 }
	$21 = (int_64)50
	goto $label$28 
	
.LABEL $label$30
	$21 = (int_64)20
	goto $label$28 
	
.LABEL $label$29
	$21 = (int_64)10
	
.LABEL $label$28
	*($22 + [240]) = ((int_64)*(($22 + [304])) / (int_64)$21)
	goto $label$26 
	
.LABEL $label$27
	$21 = (int_64)1
	
.LABEL $label$26
	$5 = ($0 + [888])
	$3 = (($22 + [280]) + [48])
	$2 = (($22 + [176]) | [1])
	$4 = *((($22 + [264]) + [8]))
	$20 = *($22 + [264])
	$15 = ($0 + [912])
	$16 = ($0 + [916])
	$17 = ($0 + [896])
	$1 = (int_64)1
	$19 = (int_64)0
	
.LOOP $label$31:
	$18 = $1
	$11 = (($22 + [280]) + [8])
	$6 = CALL $227($0, *($11), ((int_64)*($22 + [280]) + (int_64)$18))
	*(($12 = (($22 + [176]) + [8]))) = [0]
	*($22 + [176]) = (int_64)0
	$1 = (CASTING uint_64)(uint_32 $6)
	
.LOOP $label$32:
	$13 = (CASTING uint_32)(uint_64 ((uint_64)$1 % (uint_64)(int_64)10))
	CALL $6(($22 + [40]), ( ($13 | [48]) ? ($13 + [55]) : ($13 <= [10]) ), ($22 + [176]))
	$7 = ((uint_64)$1 / (uint_64)(int_64)10)
	if ( (*($22 + [176]) & [1]) ){ goto $label$34 }
	*($22 + [176]) = [0]
	goto $label$33 
	
.LABEL $label$34
	*(*($12)) = [0]
	*($22 + [180]) = [0]
	
.LABEL $label$33
	CALL $312(($22 + [176]), [0])
	$14 = (($22 + [40]) + [8])
	*($12) = *($14)
	*($22 + [176]) = *($22 + [40])
	$13 = ((uint_64)$1 > (uint_64)(int_64)9)
	$1 = $7
	if ( $13 ){ goto $label$32 }
	$13 = *($22 + [176])
	$9 = ($13 & [1])
	CALL $315(($22 + [224]), ( *($12) ? $2 : $9 ), ( *($22 + [180]) ? uint_32($13 >> [1]) : $9 ))
	if ( ((*($22 + [176]) & [1]) == 0) ){ goto $label$35 }
	CALL $310(*($12))
	
.LABEL $label$35
	CALL $316(($22 + [224]), [2864])
	if ( ((uint_32)$6 >= (uint_32)*($3)) ){ goto $label$36 }
	CALL $228(($22 + [40]), $0, $3, ($22 + [240]))
	CALL eosio_assert(((int_64)*($14) == (int_64)$4), [224])
	$20 = ((int_64)$20 + (int_64)*($22 + [40]))
	CALL eosio_assert(((int_64)$20 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)$20 < (int_64)4611686018427387904), [304])
	$13 = ( [18] ? ( [12] ? $6 : ((int_32)$6 == (int_32)[56]) ) : ((int_32)$6 == (int_32)[40]) )
	if ( ((uint_32)$13 > (uint_32)[66]) ){ goto $label$36 }
	$1 = (CASTING uint_64)(uint_32 $13)
	$8 = *($15)
	$14 = *($16)
	if ( ((int_32)$14 == (int_32)$8) ){ goto $label$37 }
	$13 = ($14 + [-24])
	$9 = ([0] - $8)
	
.LOOP $label$38:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$37 }
	$14 = $13
	$12 = ($13 + [-24])
	$13 = $12
	if ( ((int_32)($12 + $9) != (int_32)[-24]) ){ goto $label$38 }
	
.LABEL $label$37
	if ( ((int_32)$14 == (int_32)$8) ){ goto $label$40 }
	$13 = *(($14 + [-24]))
	CALL eosio_assert(((int_32)*(($13 + [52])) == (int_32)$5), [64])
	goto $label$39 
	
.LABEL $label$40
	$13 = CALL $204($5, CALL $fimport$6(*($5), *($17), (int_64)-7950542192169189376, $1))
	CALL eosio_assert(((int_32)*($13 + [52]) == (int_32)$5), [64])
	
.LABEL $label$39
	if ( ((int_64)*($13 + [40]) != (int_64)*($11)) ){ goto $label$36 }
	CALL eosio_assert(((int_64)*((($22 + [240]) + [8])) == (int_64)1397703940), [224])
	$19 = ((int_64)*($22 + [240]) + (int_64)$19)
	CALL eosio_assert(((int_64)$19 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)$19 < (int_64)4611686018427387904), [304])
	
.LABEL $label$36
	$13 = ($6 + [-8])
	if ( ((uint_32)$13 > (uint_32)[90]) ){ goto $label$41 }
	goto $label$42 
	
.LABEL $label$42
	CALL eosio_assert(((int_64)*((($22 + [240]) + [8])) == (int_64)1397703940), [224])
	$19 = ((int_64)*($22 + [240]) + (int_64)$19)
	CALL eosio_assert(((int_64)$19 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)$19 < (int_64)4611686018427387904), [304])
	
.LABEL $label$41
	$1 = ((int_64)$18 + (int_64)1)
	if ( ((int_64)$18 < (int_64)$21) ){ goto $label$31 }
	*($22 + [264]) = $20
	if ( ((int_64)$19 <= (int_64)0) ){ goto $label$43 }
	$1 = *((($22 + [280]) + [8]))
	*($22 + [216]) = (int_64)1397703940
	*((($22 + [16]) + [8])) = (int_64)1397703940
	*($22 + [208]) = $19
	*($22 + [16]) = $19
	CALL $190($0, $1, ($22 + [16]))
	
.LABEL $label$43
	CALL $229(($22 + [192]), $0, ($22 + [280]))
	if ( ((int_64)$20 < (int_64)1) ){ goto $label$44 }
	CALL $79(($22 + [160]), $0, $10)
	*(($13 = (($22 + [176]) + [8]))) = *((($22 + [160]) + [8]))
	*($22 + [176]) = *($22 + [160])
	CALL eosio_assert([1], [1472])
	$1 = *($22 + [176])
	CALL eosio_assert([1], [1488])
	$1 = ((int_64)$1 / (int_64)2)
	*($22 + [176]) = $1
	CALL eosio_assert(((int_64)*($13) == (int_64)$4), [160])
	$12 = ( ($22 + [176]) ? ($22 + [264]) : ((int_64)$1 < (int_64)$20) )
	*(($13 = (($22 + [40]) + [8]))) = *(($12 + [8]))
	*($22 + [40]) = *($12)
	$1 = *((($22 + [280]) + [8]))
	*(($12 = (($22 + [144]) + [8]))) = *($13)
	*($22 + [144]) = *($22 + [40])
	CALL $325(($22 + [128]), ($22 + [192]))
	*(($22 + [8])) = *($12)
	*($22) = *($22 + [144])
	CALL $82($0, $1, $22, ($22 + [128]))
	if ( ((*($22 + [128]) & [1]) == 0) ){ goto $label$44 }
	CALL $310(*($22 + [136]))
	
.LABEL $label$44
	*(($22 + [76])) = *(($10 + [12]))
	*(($22 + [72])) = *(($10 + [8]))
	*(($22 + [68])) = *(($10 + [4]))
	*($22 + [40]) = *($22 + [280])
	*($22 + [56]) = *($22 + [296])
	*($22 + [64]) = *($10)
	*($22 + [48]) = *((($22 + [280]) + [8]))
	*($22 + [80]) = $19
	*(($13 = ($22 + [88]))) = (int_64)1497713412
	CALL eosio_assert((uint_64)(((int_64)$19 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [464])
	$1 = (uint_64)*($13) >> (uint_64)(int_64)8)
	$13 = [0]
	
.LOOP $label$47:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$46 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$48 }
	
.LOOP $label$49:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$46 }
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$49 }
	
.LABEL $label$48
	$12 = [1]
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$47 }
	goto $label$45 
	
.LABEL $label$46
	$12 = [0]
	
.LABEL $label$45
	CALL eosio_assert($12, [128])
	*($22 + [96]) = *(($22 + [328]))
	CALL $325(($22 + [100]), ($22 + [224]))
	*(($22 + [120])) = *(($22 + [272]))
	*($22 + [112]) = *($22 + [264])
	$20 = *($0)
	$1 = (int_64)0
	$19 = (int_64)59
	$13 = [528]
	$18 = (int_64)0
	
.LOOP $label$50:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$55 }
	$12 = *($13)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$54 }
	$12 = ($12 + [165])
	goto $label$53 
	
.LABEL $label$55
	$7 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$54
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$53
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$52
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$19 & (int_64)4294967295))
	
.LABEL $label$51
	$13 = ($13 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$18 = ((int_64)$7 | (int_64)$18)
	$19 = ((int_64)$19 + (int_64)-5)
	if ( ((int_64)$19 != (int_64)-6) ){ goto $label$50 }
	*($22 + [184]) = $18
	*($22 + [176]) = $20
	$1 = (int_64)0
	$7 = (int_64)59
	$13 = [2608]
	$18 = (int_64)0
	
.LOOP $label$56:
	$19 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$57 }
	$12 = *($13)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$59 }
	$12 = ($12 + [165])
	goto $label$58 
	
.LABEL $label$59
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$58
	$19 = ((int_64)(CASTING uint_64)(uint_32 ($12 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$57
	$13 = ($13 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$18 = ((int_64)$19 | (int_64)$18)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$56 }
	*($22 + [160]) = $18
	$1 = (int_64)0
	$19 = (int_64)59
	$13 = [2880]
	$18 = (int_64)0
	
.LOOP $label$60:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$65 }
	$12 = *($13)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$64 }
	$12 = ($12 + [165])
	goto $label$63 
	
.LABEL $label$65
	$7 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$62 }
	goto $label$61 
	
.LABEL $label$64
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$63
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$62
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$19 & (int_64)4294967295))
	
.LABEL $label$61
	$13 = ($13 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$18 = ((int_64)$7 | (int_64)$18)
	$19 = ((int_64)$19 + (int_64)-5)
	if ( ((int_64)$19 != (int_64)-6) ){ goto $label$60 }
	*($22 + [32]) = $18
	CALL $230($0, ($22 + [176]), ($22 + [160]), ($22 + [32]), ($22 + [40]))
	CALL $231($0, *($22 + [280]))
	if ( ((*(($22 + [100])) & [1]) == 0) ){ goto $label$66 }
	CALL $310(*(($22 + [108])))
	
.LABEL $label$66
	if ( ((*($22 + [192]) & [1]) == 0) ){ goto $label$67 }
	CALL $310(*($22 + [200]))
	
.LABEL $label$67
	if ( ((*($22 + [224]) & [1]) == 0) ){ goto $label$12 }
	CALL $310(*($22 + [232]))
	
.LABEL $label$12
	*([0] + [4]) = ($22 + [352])
	return (unreachable)
	
.LABEL $label$11
	CALL $311(($22 + [224]))
	$13
}

int_32 .FUNC $16 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [784])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

void .FUNC _ZN12richrichrich4initEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [640])
	*([0] + [4]) = $14
	CALL require_auth(*($0))
	*($14 + [96]) = [0]
	$2 = ($0 + [912])
	$1 = ($0 + [888])
	$5 = ($14 + [480])
	$6 = ($0 + [920])
	$7 = ($0 + [916])
	$12 = [0]
	
.LOOP $label$1:
	$4 = [1]
	if ( ((int_32)$12 == (int_32)[23]) ){ goto $label$2 }
	$4 = [1]
	if ( ((int_32)$12 == (int_32)[45]) ){ goto $label$2 }
	$4 = [0]
	
.LABEL $label$2
	*($14 + [56]) = $4
	$11 = *($0)
	*($14 + [260]) = ($14 + [96])
	*($14 + [256]) = ($14 + [56])
	*($14 + [320]) = $11
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$3()), [896])
	*($14 + [472]) = $1
	*($5) = ($14 + [320])
	*($14 + [476]) = ($14 + [256])
	*(($4 = CALL $309([64])) + [24]) = (int_64)1398362884
	*($4 + [16]) = (int_64)0
	CALL eosio_assert([1], [464])
	$11 = (int_64)5462355
	$12 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$13 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$13 = [0]
	
.LABEL $label$3
	CALL eosio_assert($13, [128])
	*($4 + [52]) = $1
	CALL $217(($14 + [472]), $4)
	*($14 + [160]) = $4
	$11 = *($4)
	*($14 + [472]) = $11
	$13 = *($4 + [56])
	*($14 + [216]) = $13
	$12 = *($7)
	if ( ((uint_32)$12 >= (uint_32)*($6)) ){ goto $label$9 }
	*($12 + [8]) = $11
	*($12 + [16]) = $13
	*($14 + [160]) = [0]
	*($12) = $4
	*($7) = ($12 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $207($2, ($14 + [160]), ($14 + [472]), ($14 + [216]))
	
.LABEL $label$8
	$12 = *($14 + [160])
	*($14 + [160]) = [0]
	if ( ($12 == 0) ){ goto $label$10 }
	CALL $310($12)
	
.LABEL $label$10
	$12 = (*($14 + [96]) + [1])
	*($14 + [96]) = $12
	if ( ((int_32)$12 < (int_32)[67]) ){ goto $label$1 }
	CALL memset(($14 + [320]), [0], [152])
	$12 = CALL $120(($14 + [320]))
	$13 = ($0 + [128])
	$4 = *(($0 + [156]))
	if ( ((int_32)$4 == (int_32)*(($0 + [152]))) ){ goto $label$13 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [152]) == (int_32)$13), [64])
	if ( $4 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$4 = CALL db_find_i64(*($13), *(($0 + [136])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$11 }
	$4 = CALL $121($13, $4)
	CALL eosio_assert(((int_32)*($4 + [152]) == (int_32)$13), [64])
	
.LABEL $label$12
	$12 = $4
	
.LABEL $label$11
	CALL memcpy(($14 + [472]), $12, [152])
	*($14 + [472]) = (int_64)0
	$11 = CALL current_time()
	*($14 + [488]) = (int_64)0
	*($14 + [480]) = ((CASTING uint_32)(uint_64 ((uint_64)$11 / (uint_64)(int_64)1000000)) + [43200])
	CALL eosio_assert([1], [464])
	$11 = (int_64)5459781
	$12 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	
.LOOP $label$18:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$18 }
	
.LABEL $label$17
	$4 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	$4 = [0]
	
.LABEL $label$14
	CALL eosio_assert($4, [128])
	*(($14 + [504])) = (int_64)1397703940
	*($14 + [496]) = (int_64)0
	CALL eosio_assert([1], [464])
	$11 = (int_64)5459781
	$12 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	
.LOOP $label$23:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$20 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$23 }
	
.LABEL $label$22
	$4 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	$4 = [0]
	
.LABEL $label$19
	CALL eosio_assert($4, [128])
	*(($14 + [520])) = (int_64)1397703940
	*($14 + [512]) = (int_64)0
	CALL eosio_assert([1], [464])
	$11 = (int_64)5459781
	$12 = [0]
	
.LOOP $label$26:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$25 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	
.LOOP $label$28:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$25 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$28 }
	
.LABEL $label$27
	$4 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$25
	$4 = [0]
	
.LABEL $label$24
	CALL eosio_assert($4, [128])
	*(($14 + [536])) = (int_64)1397703940
	*($14 + [528]) = (int_64)0
	CALL eosio_assert([1], [464])
	$11 = (int_64)5459781
	$12 = [0]
	
.LOOP $label$31:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$30 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$32 }
	
.LOOP $label$33:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$30 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$33 }
	
.LABEL $label$32
	$4 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$30
	$4 = [0]
	
.LABEL $label$29
	CALL eosio_assert($4, [128])
	*(($14 + [552])) = (int_64)1397703940
	*($14 + [544]) = (int_64)0
	CALL eosio_assert([1], [464])
	$11 = (int_64)5459781
	$12 = [0]
	
.LOOP $label$36:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$35 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$37 }
	
.LOOP $label$38:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$35 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$38 }
	
.LABEL $label$37
	$4 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$35
	$4 = [0]
	
.LABEL $label$34
	CALL eosio_assert($4, [128])
	*(($14 + [568])) = (int_64)1397703940
	*($14 + [560]) = (int_64)0
	CALL eosio_assert([1], [464])
	$11 = (int_64)5459781
	$12 = [0]
	
.LOOP $label$41:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$40 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$42 }
	
.LOOP $label$43:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$40 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$43 }
	
.LABEL $label$42
	$4 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$41 }
	goto $label$39 
	
.LABEL $label$40
	$4 = [0]
	
.LABEL $label$39
	CALL eosio_assert($4, [128])
	*(($14 + [584])) = (int_64)1397703940
	*($14 + [576]) = (int_64)0
	CALL eosio_assert([1], [464])
	$11 = (int_64)1212369234
	$12 = [0]
	
.LOOP $label$46:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$45 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$47 }
	
.LOOP $label$48:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$45 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$48 }
	
.LABEL $label$47
	$4 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$46 }
	goto $label$44 
	
.LABEL $label$45
	$4 = [0]
	
.LABEL $label$44
	CALL eosio_assert($4, [128])
	*(($14 + [600])) = (int_64)310366523908
	$11 = (int_64)0
	*($14 + [592]) = (int_64)0
	$8 = (int_64)59
	$12 = [1248]
	$9 = (int_64)0
	
.LOOP $label$49:
	$10 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$50 }
	$4 = *($12)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$52 }
	$4 = ($4 + [165])
	goto $label$51 
	
.LABEL $label$52
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$51
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$50
	$12 = ($12 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$49 }
	*($14 + [608]) = $9
	$11 = (int_64)0
	$8 = (int_64)59
	$12 = [1248]
	$9 = (int_64)0
	
.LOOP $label$53:
	$10 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$54 }
	$4 = *($12)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$56 }
	$4 = ($4 + [165])
	goto $label$55 
	
.LABEL $label$56
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$55
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$54
	$12 = ($12 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$53 }
	*($14 + [616]) = $9
	CALL $122($13, ($14 + [472]), *($0))
	CALL memset(($14 + [256]), [0], [64])
	$12 = CALL $154(($14 + [256]))
	$13 = ($0 + [248])
	$4 = *(($0 + [276]))
	if ( ((int_32)$4 == (int_32)*(($0 + [272]))) ){ goto $label$59 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [64]) == (int_32)$13), [64])
	if ( $4 ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$59
	$4 = CALL db_find_i64(*($13), *(($0 + [256])), (int_64)3932090329724878848, (int_64)3932090329724878848)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$57 }
	$4 = CALL $155($13, $4)
	CALL eosio_assert(((int_32)*($4 + [64]) == (int_32)$13), [64])
	
.LABEL $label$58
	$12 = $4
	
.LABEL $label$57
	CALL memcpy(($14 + [320]), $12, [64])
	*($14 + [320]) = (int_64)0
	*($14 + [336]) = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [7200])
	CALL eosio_assert([1], [464])
	$11 = (int_64)5459781
	$12 = [0]
	
.LOOP $label$62:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$61 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$63 }
	
.LOOP $label$64:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$61 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$64 }
	
.LABEL $label$63
	$4 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$62 }
	goto $label$60 
	
.LABEL $label$61
	$4 = [0]
	
.LABEL $label$60
	CALL eosio_assert($4, [128])
	*(($14 + [352])) = (int_64)1397703940
	*($14 + [344]) = (int_64)0
	CALL eosio_assert([1], [464])
	$11 = (int_64)1212369234
	$12 = [0]
	
.LOOP $label$67:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$66 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$68 }
	
.LOOP $label$69:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$66 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$69 }
	
.LABEL $label$68
	$4 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$67 }
	goto $label$65 
	
.LABEL $label$66
	$4 = [0]
	
.LABEL $label$65
	CALL eosio_assert($4, [128])
	*(($14 + [368])) = (int_64)310366523908
	*($14 + [360]) = (int_64)10000000
	$11 = (int_64)0
	$8 = (int_64)59
	$12 = [1248]
	$9 = (int_64)0
	
.LOOP $label$70:
	$10 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$71 }
	$4 = *($12)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$73 }
	$4 = ($4 + [165])
	goto $label$72 
	
.LABEL $label$73
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$72
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$71
	$12 = ($12 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$70 }
	*($14 + [376]) = [0]
	*($14 + [328]) = $9
	CALL $173($13, ($14 + [320]), *($0))
	$11 = *($0)
	*($14 + [56]) = $0
	*($14 + [160]) = $11
	CALL eosio_assert(((int_64)*($0 + [288]) == (int_64)CALL $fimport$3()), [896])
	$4 = ($0 + [288])
	*($14 + [256]) = $4
	*($14 + [260]) = ($14 + [56])
	*($14 + [264]) = ($14 + [160])
	$12 = CALL $309([72])
	CALL $157($12)
	*($12 + [60]) = $4
	CALL $214(($14 + [256]), $12)
	*($14 + [216]) = $12
	$11 = *($12)
	*($14 + [256]) = $11
	$13 = *($12 + [64])
	*($14 + [96]) = $13
	$1 = ($0 + [316])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [320]))) ){ goto $label$75 }
	*($4 + [8]) = $11
	*($4 + [16]) = $13
	*($14 + [216]) = [0]
	*($4) = $12
	*($1) = ($4 + [24])
	goto $label$74 
	
.LABEL $label$75
	CALL $159(($0 + [312]), ($14 + [216]), ($14 + [256]), ($14 + [96]))
	
.LABEL $label$74
	$12 = *($14 + [216])
	*($14 + [216]) = [0]
	if ( ($12 == 0) ){ goto $label$76 }
	CALL $310($12)
	
.LABEL $label$76
	$3 = *($0)
	$11 = (int_64)0
	$8 = (int_64)59
	$12 = [1248]
	$9 = (int_64)0
	
.LOOP $label$77:
	$10 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$78 }
	$4 = *($12)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$80 }
	$4 = ($4 + [165])
	goto $label$79 
	
.LABEL $label$80
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$79
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$78
	$12 = ($12 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$77 }
	*(($13 = ($14 + [248]))) = [0]
	*($14 + [224]) = $9
	*($14 + [216]) = $3
	*($14 + [232]) = (int_64)-1
	*($14 + [240]) = (int_64)0
	*($14 + [160]) = $3
	CALL eosio_assert(((int_64)$3 == (int_64)CALL $fimport$3()), [896])
	*($14 + [260]) = ($14 + [136])
	*($14 + [256]) = ($14 + [216])
	*($14 + [264]) = ($14 + [160])
	$12 = CALL $309([56])
	CALL $186($12)
	*($12 + [40]) = ($14 + [216])
	CALL $215(($14 + [256]), $12)
	*($14 + [96]) = $12
	$11 = *($12)
	*($14 + [256]) = $11
	$1 = *($12 + [44])
	*($14 + [56]) = $1
	$7 = ($14 + [244])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*($13)) ){ goto $label$82 }
	*($4 + [8]) = $11
	*($4 + [16]) = $1
	*($14 + [96]) = [0]
	*($4) = $12
	*($7) = ($4 + [24])
	goto $label$81 
	
.LABEL $label$82
	CALL $188(($14 + [240]), ($14 + [96]), ($14 + [256]), ($14 + [56]))
	
.LABEL $label$81
	$4 = *($14 + [96])
	$12 = [0]
	*($14 + [96]) = [0]
	if ( ($4 == 0) ){ goto $label$83 }
	CALL $310($4)
	
.LABEL $label$83
	CALL memset(($14 + [160]), [0], [56])
	*(($4 = ($14 + [176]))) = (int_64)1398362884
	*($14 + [168]) = (int_64)0
	CALL eosio_assert([1], [464])
	$13 = ($0 + [568])
	$11 = (uint_64)*($4) >> (uint_64)(int_64)8)
	
.LOOP $label$86:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$85 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$87 }
	
.LOOP $label$88:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$85 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$88 }
	
.LABEL $label$87
	$4 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$86 }
	goto $label$84 
	
.LABEL $label$85
	$4 = [0]
	
.LABEL $label$84
	CALL eosio_assert($4, [128])
	*(($14 + [212])) = [0]
	$11 = (int_64)0
	*($14 + [204 align=4]) = (int_64)0
	CALL $70(($14 + [256]), $13, ($14 + [160]))
	$12 = *($14 + [204])
	if ( ($12 == 0) ){ goto $label$89 }
	*(($14 + [208])) = $12
	CALL $310($12)
	
.LABEL $label$89
	*($14 + [256]) = (int_64)0
	*($14 + [280]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*($14 + [284]) = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [30])
	$8 = (int_64)59
	$12 = [1248]
	$9 = (int_64)0
	
.LOOP $label$90:
	$10 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$91 }
	$4 = *($12)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$93 }
	$4 = ($4 + [165])
	goto $label$92 
	
.LABEL $label$93
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$92
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$91
	$12 = ($12 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$90 }
	*($14 + [288]) = $9
	CALL eosio_assert([1], [464])
	$11 = (int_64)5459781
	$12 = [0]
	
.LOOP $label$96:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$95 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$97 }
	
.LOOP $label$98:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$95 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$98 }
	
.LABEL $label$97
	$4 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$96 }
	goto $label$94 
	
.LABEL $label$95
	$4 = [0]
	
.LABEL $label$94
	CALL eosio_assert($4, [128])
	*((($14 + [256]) + [16])) = (int_64)1397703940
	*($14 + [264]) = (int_64)0
	CALL $104(($14 + [300]), [0], [0])
	CALL $98($13, ($14 + [256]), *($0))
	CALL $220($0, (int_64)31)
	*((($14 + [160]) + [16])) = (int_64)1398362884
	*($14 + [168]) = (int_64)0
	*($14 + [160]) = (int_64)0
	CALL eosio_assert([1], [464])
	$13 = ($0 + [848])
	$11 = (int_64)5462355
	$12 = [0]
	
.LOOP $label$101:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$100 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$102 }
	
.LOOP $label$103:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$100 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$103 }
	
.LABEL $label$102
	$4 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$101 }
	goto $label$99 
	
.LABEL $label$100
	$4 = [0]
	
.LABEL $label$99
	CALL eosio_assert($4, [128])
	$12 = *(($0 + [876]))
	if ( ((int_32)$12 == (int_32)*(($0 + [872]))) ){ goto $label$105 }
	$12 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [24]) == (int_32)$13), [64])
	if ( $12 ){ goto $label$104 }
	$12 = ($14 + [160])
	goto $label$104 
	
.LABEL $label$105
	$12 = CALL db_find_i64(*(($0 + [848])), *(($0 + [856])), (int_64)4154289181272571904, (int_64)4154289181272571904)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$106 }
	$12 = CALL $77($13, $12)
	CALL eosio_assert(((int_32)*($12 + [24]) == (int_32)$13), [64])
	goto $label$104 
	
.LABEL $label$106
	$12 = ($14 + [160])
	
.LABEL $label$104
	*((($14 + [136]) + [16])) = *(($12 + [16]))
	*((($14 + [136]) + [8])) = *(($12 + [8]))
	*($14 + [136]) = *($12)
	CALL eosio_assert([1], [464])
	$11 = (int_64)5459781
	$12 = [0]
	
.LOOP $label$109:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$108 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$110 }
	
.LOOP $label$111:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$108 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$111 }
	
.LABEL $label$110
	$4 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$109 }
	goto $label$107 
	
.LABEL $label$108
	$4 = [0]
	
.LABEL $label$107
	CALL eosio_assert($4, [128])
	*(($14 + [152])) = (int_64)1397703940
	*($14 + [144]) = (int_64)0
	CALL $80($13, ($14 + [136]), *($0))
	CALL memset(($14 + [96]), [0], [40])
	$12 = CALL $62(($14 + [96]))
	$13 = ($0 + [528])
	$4 = *(($0 + [556]))
	if ( ((int_32)$4 == (int_32)*(($0 + [552]))) ){ goto $label$114 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [40]) == (int_32)$13), [64])
	if ( $4 ){ goto $label$113 }
	goto $label$112 
	
.LABEL $label$114
	$4 = CALL db_find_i64(*($13), *(($0 + [536])), (int_64)-9026050048739246080, (int_64)-9026050048739246080)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$112 }
	$4 = CALL $63($13, $4)
	CALL eosio_assert(((int_32)*($4 + [40]) == (int_32)$13), [64])
	
.LABEL $label$113
	$12 = $4
	
.LABEL $label$112
	CALL memcpy(($14 + [160]), $12, [40])
	CALL eosio_assert([1], [464])
	$11 = (int_64)5459781
	$12 = [0]
	
.LOOP $label$117:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$116 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$118 }
	
.LOOP $label$119:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$116 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$119 }
	
.LABEL $label$118
	$4 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$117 }
	goto $label$115 
	
.LABEL $label$116
	$4 = [0]
	
.LABEL $label$115
	CALL eosio_assert($4, [128])
	*(($14 + [176])) = (int_64)1397703940
	*($14 + [168]) = (int_64)0
	CALL eosio_assert([1], [464])
	$11 = (int_64)5459781
	$12 = [0]
	
.LOOP $label$122:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$121 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$123 }
	
.LOOP $label$124:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$121 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$124 }
	
.LABEL $label$123
	$4 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$122 }
	goto $label$120 
	
.LABEL $label$121
	$4 = [0]
	
.LABEL $label$120
	CALL eosio_assert($4, [128])
	*(($14 + [192])) = (int_64)1397703940
	*($14 + [184]) = (int_64)0
	CALL $64($13, ($14 + [160]), *($0))
	CALL memset(($14 + [56]), [0], [40])
	*((($14 + [56]) + [24])) = (int_64)1398362884
	*($14 + [72]) = (int_64)0
	CALL eosio_assert([1], [464])
	$13 = ($0 + [768])
	$11 = (int_64)5462355
	$12 = [0]
	
.LOOP $label$127:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$126 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$128 }
	
.LOOP $label$129:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$126 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$129 }
	
.LABEL $label$128
	$4 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$127 }
	goto $label$125 
	
.LABEL $label$126
	$4 = [0]
	
.LABEL $label$125
	CALL eosio_assert($4, [128])
	$12 = *(($0 + [796]))
	if ( ((int_32)$12 == (int_32)*(($0 + [792]))) ){ goto $label$131 }
	$12 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [40]) == (int_32)$13), [64])
	if ( $12 ){ goto $label$130 }
	$12 = ($14 + [56])
	goto $label$130 
	
.LABEL $label$131
	$12 = CALL db_find_i64(*(($0 + [768])), *(($0 + [776])), (int_64)-5069075955596378112, (int_64)-5069075955596378112)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$132 }
	$12 = CALL $123($13, $12)
	CALL eosio_assert(((int_32)*($12 + [40]) == (int_32)$13), [64])
	goto $label$130 
	
.LABEL $label$132
	$12 = ($14 + [56])
	
.LABEL $label$130
	CALL memcpy(($14 + [96]), $12, [40])
	*($14 + [96]) = (int_64)0
	*($14 + [104]) = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [3600])
	CALL eosio_assert([1], [464])
	$11 = (int_64)5459781
	$12 = [0]
	
.LOOP $label$135:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$134 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$136 }
	
.LOOP $label$137:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$134 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$137 }
	
.LABEL $label$136
	$4 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$135 }
	goto $label$133 
	
.LABEL $label$134
	$4 = [0]
	
.LABEL $label$133
	CALL eosio_assert($4, [128])
	*(($14 + [120])) = (int_64)1397703940
	$11 = (int_64)0
	*($14 + [112]) = (int_64)0
	$8 = (int_64)59
	$12 = [1248]
	$9 = (int_64)0
	
.LOOP $label$138:
	$10 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$139 }
	$4 = *($12)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$141 }
	$4 = ($4 + [165])
	goto $label$140 
	
.LABEL $label$141
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$140
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$139
	$12 = ($12 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$138 }
	*($14 + [128]) = $9
	CALL $124($13, ($14 + [96]), *($0))
	*(($14 + [64])) = (int_64)0
	*($14 + [56]) = (int_64)0
	$4 = ($0 + [688])
	$12 = *(($0 + [716]))
	if ( ((int_32)$12 == (int_32)*(($0 + [712]))) ){ goto $label$143 }
	$12 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [16]) == (int_32)$4), [64])
	if ( $12 ){ goto $label$142 }
	$12 = ($14 + [56])
	goto $label$142 
	
.LABEL $label$143
	$12 = CALL db_find_i64(*($4), *(($0 + [696])), (int_64)-2287828610704211968, (int_64)-2287828610704211968)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$144 }
	$12 = CALL $46($4, $12)
	CALL eosio_assert(((int_32)*($12 + [16]) == (int_32)$4), [64])
	goto $label$142 
	
.LABEL $label$144
	$12 = ($14 + [56])
	
.LABEL $label$142
	*(($13 = (($14 + [40]) + [8]))) = *(($12 + [8]))
	*($14 + [40]) = *($12)
	*($14 + [40]) = (int_64)0
	*($13) = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [3600])
	CALL $216($4, ($14 + [40]), *($0))
	*($14 + [36]) = [0]
	$6 = ($0 + [632])
	$4 = ($0 + [608])
	$5 = ($0 + [640])
	$1 = ($0 + [636])
	
.LOOP $label$145:
	$11 = *($0)
	*($14 + [32]) = ($14 + [36])
	*($14 + [8]) = $11
	CALL eosio_assert(((int_64)*($4) == (int_64)CALL $fimport$3()), [896])
	*($14 + [56]) = $4
	*((($14 + [56]) + [8])) = ($14 + [8])
	*($14 + [60]) = ($14 + [32])
	*(($12 = CALL $309([32])) + [16]) = $4
	CALL $218(($14 + [56]), $12)
	*($14 + [632]) = $12
	$11 = *($12)
	*($14 + [56]) = $11
	$7 = *($12 + [20])
	*($14 + [628]) = $7
	$13 = *($1)
	if ( ((uint_32)$13 >= (uint_32)*($5)) ){ goto $label$147 }
	*($13 + [8]) = $11
	*($13 + [16]) = $7
	*($14 + [632]) = [0]
	*($13) = $12
	*($1) = ($13 + [24])
	goto $label$146 
	
.LABEL $label$147
	CALL $219($6, ($14 + [632]), ($14 + [56]), ($14 + [628]))
	
.LABEL $label$146
	$12 = *($14 + [632])
	*($14 + [632]) = [0]
	if ( ($12 == 0) ){ goto $label$148 }
	CALL $310($12)
	
.LABEL $label$148
	$12 = (*($14 + [36]) + [1])
	*($14 + [36]) = $12
	if ( ((int_32)$12 < (int_32)[11]) ){ goto $label$145 }
	*(($12 = (($14 + [8]) + [8]))) = (int_64)0
	*(($14 + [24])) = (int_64)0
	*($14 + [8]) = (int_64)0
	$4 = ($0 + [808])
	CALL $85(($14 + [56]), $4, ($14 + [8]))
	$12 = *($12)
	if ( ($12 == 0) ){ goto $label$149 }
	*(($14 + [20])) = $12
	CALL $310($12)
	
.LABEL $label$149
	*($14 + [56]) = (int_64)0
	CALL $116((($14 + [56]) + [8]), [0], [0])
	CALL $87($4, ($14 + [56]), *($0))
	$12 = *($14 + [64])
	if ( ($12 == 0) ){ goto $label$150 }
	*(($14 + [68])) = $12
	CALL $310($12)
	
.LABEL $label$150
	$12 = *($14 + [300])
	if ( ($12 == 0) ){ goto $label$151 }
	*(($14 + [304])) = $12
	CALL $310($12)
	
.LABEL $label$151
	$13 = *($14 + [240])
	if ( ($13 == 0) ){ goto $label$152 }
	$0 = ($14 + [244])
	$12 = *($0)
	if ( ((int_32)$12 == (int_32)$13) ){ goto $label$154 }
	
.LOOP $label$155:
	$12 = ($12 + [-24])
	$4 = *($12)
	*($12) = [0]
	if ( ($4 == 0) ){ goto $label$156 }
	CALL $310($4)
	
.LABEL $label$156
	if ( ((int_32)$13 != (int_32)$12) ){ goto $label$155 }
	$12 = *(($14 + [240]))
	goto $label$153 
	
.LABEL $label$154
	$12 = $13
	
.LABEL $label$153
	*($0) = $13
	CALL $310($12)
	
.LABEL $label$152
	*([0] + [4]) = ($14 + [640])
}

int_64 .FUNC _Z15string_to_priceNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	$3 = *($0)
	if ( ($3 & [1]) ){ goto $label$4 }
	$3 = uint_32($3 >> [1])
	if ( ($3 == 0) ){ goto $label$2 }
	$0 = ($0 + [1])
	$4 = (int_64)0
	
.LOOP $label$5:
	$2 = *($0)
	if ( ((uint_32)(($2 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$6 }
	$4 = ((int_64)((int_64)((int_64)$4 * (int_64)10) + (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)) + (int_64)-48)
	
.LABEL $label$6
	$0 = ($0 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	if ( ($3 == 0) ){ goto $label$1 }
	$1 = ($0 + [8])
	$2 = *($1)
	$4 = (int_64)0
	$0 = [0]
	
.LOOP $label$7:
	if ( ((int_32)*(($2 + $0)) < (int_32)[48]) ){ goto $label$8 }
	if ( ((int_32)*((*($1) + $0)) > (int_32)[57]) ){ goto $label$8 }
	$4 = ((int_64)((int_64)((int_64)$4 * (int_64)10) + (int_64)*((*($1) + $0))) + (int_64)-48)
	
.LABEL $label$8
	$0 = ($0 + [1])
	if ( ($0 <= $3) ){ goto $label$7 }
	
.LABEL $label$3
	return $4
	
.LABEL $label$2
	return (int_64)0
	
.LABEL $label$1
	return (int_64)0
}

void .FUNC _Z7explodeRKNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERKc (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*(($8 + [8])) = [0]
	*($8) = (int_64)0
	$7 = CALL strlen([16])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$4 }
	*($8) = ($7 << [1])
	$6 = ($8 | [1])
	if ( $7 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($7 + [16]) & [-16])
	$6 = CALL $309($5)
	*($8) = ($5 | [1])
	*($8 + [8]) = $6
	*($8 + [4]) = $7
	
.LABEL $label$3
	CALL memcpy($6, [16], $7)
	
.LABEL $label$2
	*(($6 + $7)) = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$7 = ($7 & [1])
	$7 = *($1)
	$6 = ( *($1 + [4]) ? uint_32($7 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$5 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$6:
	$1 = *($7)
	if ( ((int_32)$1 != (int_32)*($2)) ){ goto $label$10 }
	$1 = *($8)
	$3 = CALL strlen([16])
	if ( ((int_32)$3 != (int_32)( *($8 + [4]) ? uint_32($1 >> [1]) : ($1 & [1]) )) ){ goto $label$11 }
	if ( (CALL $319($8, [0], [-1], [16], $3) == 0) ){ goto $label$7 }
	
.LABEL $label$11
	$1 = *($5)
	if ( ((int_32)$1 == (int_32)*($4)) ){ goto $label$9 }
	CALL $325($1, $8)
	*($5) = (*($5) + [12])
	goto $label$8 
	
.LABEL $label$10
	CALL $317($8, int_32(($1 << [24]) >> [24]))
	goto $label$7 
	
.LABEL $label$9
	CALL $9($0, $8)
	
.LABEL $label$8
	CALL $313($8, [16])
	
.LABEL $label$7
	$7 = ($7 + [1])
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$6 }
	
.LABEL $label$5
	$7 = *($8)
	$6 = CALL strlen([16])
	if ( ((int_32)$6 != (int_32)( *($8 + [4]) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$13 }
	if ( (CALL $319($8, [0], [-1], [16], $6) == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$7 = ($0 + [4])
	$6 = *($7)
	if ( ((int_32)$6 == (int_32)*(($0 + [8]))) ){ goto $label$14 }
	CALL $325($6, $8)
	*($7) = (*($7) + [12])
	goto $label$12 
	
.LABEL $label$14
	CALL $9($0, $8)
	
.LABEL $label$12
	if ( ((*($8) & [1]) == 0) ){ goto $label$15 }
	CALL $310(*($8 + [8]))
	
.LABEL $label$15
	*([0] + [4]) = ($8 + [16])
	return (unreachable)
	
.LABEL $label$1
	CALL $311($8)
}

void .FUNC _ZN12richrichrich5applyEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [512])
	*([0] + [4]) = $9
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [32]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$8 }
	CALL $13(($9 + [448]))
	$6 = *($9 + [456])
	*(($9 + [420])) = *(($9 + [476]))
	*(($4 = (($9 + [408]) + [8]))) = *(($9 + [472]))
	*($9 + [412]) = *(($9 + [468]))
	$8 = *($9 + [448])
	*($9 + [408]) = *($9 + [464])
	$5 = *($4)
	*((($9 + [496]) + [8])) = $5
	*(($4 = (($9 + [424]) + [8]))) = $5
	$5 = *($9 + [408])
	*($9 + [496]) = $5
	*($9 + [424]) = $5
	*($9 + [440]) = $1
	$3 = ($9 + [480])
	CALL $325(($9 + [392]), $3)
	*(($9 + [16])) = *($9 + [440])
	*(($9 + [8])) = *($4)
	*($9) = *($9 + [424])
	CALL _ZN12richrichrich10onTransferEyyN5eosio14extended_assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $8, $6, $9, ($9 + [392]))
	if ( ((*($9 + [392]) & [1]) == 0) ){ goto $label$9 }
	CALL $310(*($9 + [400]))
	
.LABEL $label$9
	if ( ((*($3) & [1]) == 0) ){ goto $label$7 }
	CALL $310(*(($9 + [488])))
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_64)*($0) != (int_64)$1) ){ goto $label$7 }
	if ( ((int_64)$2 <= (int_64)-3020407014600540161) ){ goto $label$31 }
	if ( ((int_64)$2 > (int_64)4921564959768313855) ){ goto $label$30 }
	if ( ((int_64)$2 > (int_64)4921564839369121167) ){ goto $label$28 }
	if ( ((int_64)$2 == (int_64)-3020407014600540160) ){ goto $label$24 }
	if ( ((int_64)$2 == (int_64)3626343085148995584) ){ goto $label$23 }
	if ( ((int_64)$2 != (int_64)4730614985703555072) ){ goto $label$7 }
	*($9 + [236]) = [0]
	*($9 + [232]) = [1]
	*($9 + [176 align=4]) = *($9 + [232])
	CALL $16($0, ($9 + [176]))
	goto $label$7 
	
.LABEL $label$31
	if ( ((int_64)$2 <= (int_64)-4992623623366770689) ){ goto $label$29 }
	if ( ((int_64)$2 > (int_64)-3671097363971702785) ){ goto $label$27 }
	if ( ((int_64)$2 == (int_64)-4992623623366770688) ){ goto $label$22 }
	if ( ((int_64)$2 == (int_64)-4157529991795441664) ){ goto $label$21 }
	if ( ((int_64)$2 != (int_64)-3841130677495922688) ){ goto $label$7 }
	*($9 + [364]) = [0]
	*($9 + [360]) = [2]
	*($9 + [48 align=4]) = *($9 + [360])
	CALL $16($0, ($9 + [48]))
	goto $label$7 
	
.LABEL $label$30
	if ( ((int_64)$2 > (int_64)4921565160591589375) ){ goto $label$26 }
	if ( ((int_64)$2 == (int_64)4921564959768313856) ){ goto $label$20 }
	if ( ((int_64)$2 == (int_64)4921564959776941760) ){ goto $label$19 }
	if ( ((int_64)$2 != (int_64)4921565119526518784) ){ goto $label$7 }
	*($9 + [324]) = [0]
	*($9 + [320]) = [3]
	*($9 + [88 align=4]) = *($9 + [320])
	CALL $16($0, ($9 + [88]))
	goto $label$7 
	
.LABEL $label$29
	if ( ((int_64)$2 <= (int_64)-5003315193367756801) ){ goto $label$25 }
	if ( ((int_64)$2 == (int_64)-5003315193367756800) ){ goto $label$18 }
	if ( ((int_64)$2 == (int_64)-4992623624440512512) ){ goto $label$17 }
	if ( ((int_64)$2 != (int_64)-4992623623903641600) ){ goto $label$7 }
	*($9 + [372]) = [0]
	*($9 + [368]) = [4]
	*($9 + [40 align=4]) = *($9 + [368])
	CALL $20($0, ($9 + [40]))
	goto $label$7 
	
.LABEL $label$28
	if ( ((int_64)$2 == (int_64)4921564839369121168) ){ goto $label$16 }
	if ( ((int_64)$2 == (int_64)4921564839458897920) ){ goto $label$15 }
	if ( ((int_64)$2 != (int_64)4921564861957144576) ){ goto $label$7 }
	*($9 + [260]) = [0]
	*($9 + [256]) = [5]
	*($9 + [152 align=4]) = *($9 + [256])
	CALL $38($0, ($9 + [152]))
	goto $label$7 
	
.LABEL $label$27
	if ( ((int_64)$2 == (int_64)-3671097363971702784) ){ goto $label$14 }
	if ( ((int_64)$2 == (int_64)-3080462145121419264) ){ goto $label$13 }
	if ( ((int_64)$2 != (int_64)-3020407014896435200) ){ goto $label$7 }
	*($9 + [292]) = [0]
	*($9 + [288]) = [6]
	*($9 + [120 align=4]) = *($9 + [288])
	CALL $24($0, ($9 + [120]))
	goto $label$7 
	
.LABEL $label$26
	if ( ((int_64)$2 == (int_64)4921565160591589376) ){ goto $label$12 }
	if ( ((int_64)$2 == (int_64)5564531591151091712) ){ goto $label$11 }
	if ( ((int_64)$2 != (int_64)8421045207927095296) ){ goto $label$7 }
	*($9 + [380]) = [0]
	*($9 + [376]) = [7]
	*($9 + [32 align=4]) = *($9 + [376])
	CALL $18($0, ($9 + [32]))
	goto $label$7 
	
.LABEL $label$25
	if ( ((int_64)$2 == (int_64)-6215682928001679360) ){ goto $label$10 }
	if ( ((int_64)$2 != (int_64)-6030912842591371264) ){ goto $label$7 }
	*($9 + [348]) = [0]
	*($9 + [344]) = [8]
	*($9 + [64 align=4]) = *($9 + [344])
	CALL $24($0, ($9 + [64]))
	goto $label$7 
	
.LABEL $label$24
	*($9 + [284]) = [0]
	*($9 + [280]) = [9]
	*($9 + [128 align=4]) = *($9 + [280])
	CALL $24($0, ($9 + [128]))
	goto $label$7 
	
.LABEL $label$23
	*($9 + [300]) = [0]
	*($9 + [296]) = [10]
	*($9 + [112 align=4]) = *($9 + [296])
	CALL $31($0, ($9 + [112]))
	goto $label$7 
	
.LABEL $label$22
	*($9 + [228]) = [0]
	*($9 + [224]) = [11]
	*($9 + [184 align=4]) = *($9 + [224])
	CALL $16($0, ($9 + [184]))
	goto $label$7 
	
.LABEL $label$21
	*($9 + [356]) = [0]
	*($9 + [352]) = [12]
	*($9 + [56 align=4]) = *($9 + [352])
	CALL $16($0, ($9 + [56]))
	goto $label$7 
	
.LABEL $label$20
	*($9 + [332]) = [0]
	*($9 + [328]) = [13]
	*($9 + [80 align=4]) = *($9 + [328])
	CALL $16($0, ($9 + [80]))
	goto $label$7 
	
.LABEL $label$19
	*($9 + [220]) = [0]
	*($9 + [216]) = [14]
	*($9 + [192 align=4]) = *($9 + [216])
	CALL $18($0, ($9 + [192]))
	goto $label$7 
	
.LABEL $label$18
	*($9 + [276]) = [0]
	*($9 + [272]) = [15]
	*($9 + [136 align=4]) = *($9 + [272])
	CALL $35($0, ($9 + [136]))
	goto $label$7 
	
.LABEL $label$17
	*($9 + [388]) = [0]
	*($9 + [384]) = [16]
	*($9 + [24 align=4]) = *($9 + [384])
	CALL $16($0, ($9 + [24]))
	goto $label$7 
	
.LABEL $label$16
	*($9 + [316]) = [0]
	*($9 + [312]) = [17]
	*($9 + [96 align=4]) = *($9 + [312])
	CALL $16($0, ($9 + [96]))
	goto $label$7 
	
.LABEL $label$15
	*($9 + [308]) = [0]
	*($9 + [304]) = [18]
	*($9 + [104 align=4]) = *($9 + [304])
	CALL $18($0, ($9 + [104]))
	goto $label$7 
	
.LABEL $label$14
	*($9 + [268]) = [0]
	*($9 + [264]) = [19]
	*($9 + [144 align=4]) = *($9 + [264])
	CALL $18($0, ($9 + [144]))
	goto $label$7 
	
.LABEL $label$13
	*($9 + [252]) = [0]
	*($9 + [248]) = [20]
	*($9 + [160 align=4]) = *($9 + [248])
	CALL $16($0, ($9 + [160]))
	goto $label$7 
	
.LABEL $label$12
	*($9 + [212]) = [0]
	*($9 + [208]) = [21]
	*($9 + [200 align=4]) = *($9 + [208])
	CALL $16($0, ($9 + [200]))
	goto $label$7 
	
.LABEL $label$11
	*($9 + [244]) = [0]
	*($9 + [240]) = [22]
	*($9 + [168 align=4]) = *($9 + [240])
	CALL $16($0, ($9 + [168]))
	goto $label$7 
	
.LABEL $label$10
	*($9 + [340]) = [0]
	*($9 + [336]) = [23]
	*($9 + [72 align=4]) = *($9 + [336])
	CALL $16($0, ($9 + [72]))
	
.LABEL $label$7
	*([0] + [4]) = ($9 + [512])
}

void .FUNC $13 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = *([0] + [4])
	$3 = $2
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	CALL $300($0, $2, $1)
	if ( ($1 <= [513]) ){ goto $label$3 }
	CALL free($2)
	
.LABEL $label$3
	*([0] + [4]) = $3
}

void .FUNC _ZN12richrichrich2upEy (int_32 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [272])
	*([0] + [4]) = $11
	*($11 + [264]) = $1
	CALL require_auth($1)
	CALL eosio_assert(((int_32)CALL $45($0, $1) ^ (int_32)[1]), [48])
	$6 = [0]
	*((($11 + [224]) + [32])) = [0]
	*($11 + [232]) = $1
	*($11 + [240]) = (int_64)-1
	*($11 + [248]) = (int_64)0
	$7 = *($0)
	*($11 + [224]) = $7
	*((($11 + [64]) + [32])) = (int_64)310366523908
	*($11 + [72]) = [0]
	*($11 + [64]) = (int_64)0
	*($11 + [80]) = (int_64)0
	*($11 + [88]) = (int_64)0
	CALL eosio_assert([1], [464])
	$8 = (int_64)1212369234
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [128])
	*(($11 + [112])) = (int_64)310366523908
	*($11 + [104]) = (int_64)0
	CALL eosio_assert([1], [464])
	$8 = (int_64)1212369234
	$6 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [128])
	*(($11 + [128])) = (int_64)1397703940
	*($11 + [120]) = (int_64)0
	CALL eosio_assert([1], [464])
	$8 = (int_64)5459781
	$6 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [128])
	*($11 + [136]) = [0]
	CALL $91(($11 + [144]), ($11 + [224]), $7, ($11 + [64]))
	CALL eosio_assert([1], [464])
	$8 = (int_64)5459781
	$6 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$3 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$3 = [0]
	
.LABEL $label$16
	CALL eosio_assert($3, [128])
	CALL eosio_assert(((int_64)*(($11 + [208])) == (int_64)1397703940), [160])
	CALL eosio_assert(((int_64)*($11 + [200]) > (int_64)499999), [1840])
	CALL memset(($11 + [8]), [0], [56])
	*(($6 = ($11 + [24]))) = (int_64)1398362884
	*($11 + [16]) = (int_64)0
	CALL eosio_assert([1], [464])
	$5 = ($0 + [568])
	$8 = (uint_64)*($6) >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	
.LOOP $label$25:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$25 }
	
.LABEL $label$24
	$3 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$3 = [0]
	
.LABEL $label$21
	CALL eosio_assert($3, [128])
	*(($11 + [60])) = [0]
	$8 = (int_64)0
	*($11 + [52 align=4]) = (int_64)0
	CALL $70(($11 + [64]), $5, ($11 + [8]))
	$6 = *($11 + [52])
	if ( ($6 == 0) ){ goto $label$26 }
	*(($11 + [56])) = $6
	CALL $310($6)
	$1 = *($11 + [264])
	
.LABEL $label$26
	CALL eosio_assert(((int_64)$1 != (int_64)*($11 + [96])), [1776])
	$7 = (int_64)59
	$6 = [1248]
	$2 = *($11 + [96])
	$9 = (int_64)0
	
.LOOP $label$27:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$28 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$30 }
	$3 = ($3 + [165])
	goto $label$29 
	
.LABEL $label$30
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$29
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$28
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$27 }
	if ( ((int_64)$2 != (int_64)$9) ){ goto $label$34 }
	$6 = *($11 + [108])
	if ( ((int_32)$6 == (int_32)*(($11 + [112]))) ){ goto $label$32 }
	$4 = ($11 + [108])
	goto $label$33 
	
.LABEL $label$34
	$4 = ($11 + [108])
	$6 = *($11 + [108])
	
.LABEL $label$33
	$3 = *(($11 + [112]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$35 }
	$3 = ($3 + [-8])
	
.LOOP $label$36:
	if ( ((int_64)*($6) != (int_64)$1) ){ goto $label$37 }
	CALL eosio_assert([0], [1808])
	
.LABEL $label$37
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$38 }
	$6 = ($6 + [8])
	$1 = *($11 + [264])
	goto $label$36 
	
.LABEL $label$38
	$6 = *(($11 + [112]))
	
.LABEL $label$35
	if ( ((int_32)$6 == (int_32)*(($11 + [116]))) ){ goto $label$39 }
	*($6) = *($11 + [264])
	*(($11 + [112])) = ($6 + [8])
	goto $label$31 
	
.LABEL $label$39
	CALL $172($4, ($11 + [264]))
	goto $label$31 
	
.LABEL $label$32
	*(($11 + [96])) = $1
	
.LABEL $label$31
	CALL $98($5, ($11 + [64]), *($0))
	$6 = *($11 + [108])
	if ( ($6 == 0) ){ goto $label$40 }
	*(($11 + [112])) = $6
	CALL $310($6)
	
.LABEL $label$40
	$0 = *($11 + [248])
	if ( ($0 == 0) ){ goto $label$41 }
	$5 = ($11 + [252])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$43 }
	
.LOOP $label$44:
	$6 = ($6 + [-24])
	$3 = *($6)
	*($6) = [0]
	if ( ($3 == 0) ){ goto $label$45 }
	CALL $310($3)
	
.LABEL $label$45
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$44 }
	$6 = *(($11 + [248]))
	goto $label$42 
	
.LABEL $label$43
	$6 = $0
	
.LABEL $label$42
	*($5) = $0
	CALL $310($6)
	
.LABEL $label$41
	*([0] + [4]) = ($11 + [272])
}

int_32 .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = *([0] + [4])
	$4 = $5
	$2 = *($1 + [4])
	$1 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((uint_32)$3 <= (uint_32)[512]) ){ goto $label$2 }
	$5 = CALL malloc($3)
	CALL read_action_data($5, $3)
	CALL free($5)
	goto $label$1 
	
.LABEL $label$2
	$5 = ($5 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	$3 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	$1 = *((*($3) + $1))
	
.LABEL $label$3
	CALL void $3((int_32 $1))
	*([0] + [4]) = $4
	return [1]
}

void .FUNC _ZN12richrichrich7reveal1Eyb (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	CALL require_auth(*($0))
	if ( ($2 == 0) ){ goto $label$2 }
	$1 = *($0)
	$6 = (int_64)0
	$5 = (int_64)59
	$2 = [528]
	$7 = (int_64)0
	
.LOOP $label$3:
	if ( ((uint_64)$6 > (uint_64)(int_64)5) ){ goto $label$8 }
	$3 = *($2)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$3 = ($3 + [165])
	goto $label$6 
	
.LABEL $label$8
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$5
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$4
	$2 = ($2 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$3 }
	*($9 + [24]) = $7
	*($9 + [16]) = $1
	$6 = (int_64)0
	$5 = (int_64)59
	$2 = [2832]
	$7 = (int_64)0
	
.LOOP $label$9:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$14 }
	$3 = *($2)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$3 = ($3 + [165])
	goto $label$12 
	
.LABEL $label$14
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$13
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$11
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$10
	$2 = ($2 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$9 }
	*($9 + [8]) = $7
	CALL $210($0, ($9 + [16]), $0, ($9 + [8]), $9)
	goto $label$1 
	
.LABEL $label$2
	$4 = *($0)
	$6 = (int_64)0
	$5 = (int_64)59
	$2 = [528]
	$7 = (int_64)0
	
.LOOP $label$15:
	if ( ((uint_64)$6 > (uint_64)(int_64)5) ){ goto $label$20 }
	$3 = *($2)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$3 = ($3 + [165])
	goto $label$18 
	
.LABEL $label$20
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$19
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$17
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$16
	$2 = ($2 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$15 }
	*($9 + [24]) = $7
	*($9 + [16]) = $4
	$6 = (int_64)0
	$5 = (int_64)59
	$2 = [1152]
	$7 = (int_64)0
	
.LOOP $label$21:
	if ( ((uint_64)$6 > (uint_64)(int_64)5) ){ goto $label$26 }
	$3 = *($2)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$25 }
	$3 = ($3 + [165])
	goto $label$24 
	
.LABEL $label$26
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$25
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$24
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$23
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$22
	$2 = ($2 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$21 }
	*($9 + [8]) = $7
	*($9) = $1
	CALL $211($0, ($9 + [16]), $0, ($9 + [8]), $9)
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [32])
}

int_32 .FUNC __toread (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [255]) | $1)
	if ( ((uint_32)*($0 + [20]) <= (uint_32)*($0 + [28])) ){ goto $label$1 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	
.LABEL $label$1
	*($0 + [16]) = (int_64)0
	*(($0 + [28])) = [0]
	$1 = *($0)
	if ( ($1 & [4]) ){ goto $label$2 }
	$2 = (*($0 + [44]) + *($0 + [48]))
	*($0 + [8]) = $2
	*($0 + [4]) = $2
	return int_32(($1 << [27]) >> [31])
	
.LABEL $label$2
	*($0) = ($1 | [32])
	return [-1]
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

int_32 .FUNC __shgetc (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [112])
	if ( (int_64)($1 == 0) ){ goto $label$7 }
	if ( ((int_64)*($0 + [120]) >= (int_64)$1) ){ goto $label$6 }
	
.LABEL $label$7
	$4 = CALL __uflow($0)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	$1 = *(($0 + [112]))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$5 }
	$1 = (int_64)
	$2 = *($0 + [4])
	$3 = *(($0 + [8]))
	if ( ((int_64)(CASTING int_64)(int_32 ($3 - $2)) < (int_64)$1($1 - *($0 + [120])))) ){ goto $label$4 }
	*($0 + [104]) = ($2 + (CASTING uint_32)(uint_64 ((int_64)$1 + (int_64)4294967295)))
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	*($0 + [104]) = [0]
	return [-1]
	
.LABEL $label$5
	$3 = *(($0 + [8]))
	
.LABEL $label$4
	*($0 + [104]) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = *(($0 + [4]))
	*($0 + [120]) = ((int_64)(CASTING int_64)(int_32 (($3 + [1]) - $3)) + (int_64)*($0 + [120]))
	goto $label$1 
	
.LABEL $label$2
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	$0 = ($3 + [-1])
	if ( ((int_32)*($0) == (int_32)$4) ){ goto $label$8 }
	*($0) = $4
	
.LABEL $label$8
	return $4
}

int_32 .FUNC __uflow (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = [-1]
	if ( CALL __toread($0) ){ goto $label$1 }
	if ( ((int_32)CALL int_32 $0((int_32 ($2 + [15])), (int_32 [1]), (int_32 *($0 + [32]))) != (int_32)[1]) ){ goto $label$1 }
	$1 = *($2 + [15])
	
.LABEL $label$1
	*([0] + [4]) = ($2 + [16])
	return $1
}

void .FUNC __shlim (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	*($0 + [112]) = $1
	$2 = *($0 + [4])
	$3 = *($0 + [8])
	$4 = (CASTING int_64)(int_32 ($3 - $2))
	*($0 + [120]) = $4
	*($0 + [104]) = ( ( ($2 + (CASTING uint_32)(uint_64 $1)) ? $3 : ((int_64)$4 > (int_64)$1) ) ? $3 : ((int_64)$1 != (int_64)0) )
}

int_64 .FUNC __intscan (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_64 $14
	if ( ((uint_32)$1 > (uint_32)[36]) ){ goto $label$4 }
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$4 }
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$5:
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$7 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$6 
	
.LABEL $label$7
	$13 = CALL __shgetc($0)
	
.LABEL $label$6
	$10 = ($13 + [-9])
	if ( ((uint_32)$10 > (uint_32)[36]) ){ goto $label$3 }
	goto $label$5 
	
.LABEL $label$8
	$4 = ( [-1] ? [0] : ((int_32)$13 == (int_32)[45]) )
	$10 = ($0 + [4])
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [104]))) ){ goto $label$2 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$1 
	
.LABEL $label$4
	*(CALL __errno_location()) = [22]
	return (int_64)0
	
.LABEL $label$3
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	$13 = CALL __shgetc($0)
	
.LABEL $label$1
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$20 }
	if ( ((int_32)$13 != (int_32)[48]) ){ goto $label$20 }
	$10 = ($0 + [4])
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [104]))) ){ goto $label$19 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$18 
	
.LABEL $label$20
	$1 = ( $1 ? [10] : $1 )
	if ( (*(($13 + [13137])) <= $1) ){ goto $label$17 }
	if ( (*(($0 + [104])) == 0) ){ goto $label$21 }
	*(($13 = ($0 + [4]))) = (*($13) + [-1])
	
.LABEL $label$21
	CALL __shlim($0, (int_64)0)
	*(CALL __errno_location()) = [22]
	return (int_64)0
	
.LABEL $label$19
	$13 = CALL __shgetc($0)
	
.LABEL $label$18
	if ( ((int_32)($13 | [32]) != (int_32)[120]) ){ goto $label$22 }
	$10 = ($0 + [4])
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [104]))) ){ goto $label$16 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$15 
	
.LABEL $label$22
	if ( ($1 == 0) ){ goto $label$14 }
	
.LABEL $label$17
	if ( ((int_32)$1 != (int_32)[10]) ){ goto $label$13 }
	$14 = (int_64)0
	$9 = ($13 + [-48])
	if ( ((uint_32)$9 > (uint_32)[9]) ){ goto $label$23 }
	$10 = [0]
	$8 = ($0 + [104])
	$1 = ($0 + [4])
	
.LOOP $label$24:
	$10 = ((int_32)$10 * (int_32)[10])
	$13 = *($1)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$26 }
	*($1) = ($13 + [1])
	$13 = *($13)
	goto $label$25 
	
.LABEL $label$26
	$13 = CALL __shgetc($0)
	
.LABEL $label$25
	$10 = ($10 + $9)
	$9 = ($13 + [-48])
	if ( ((uint_32)$9 > (uint_32)[9]) ){ goto $label$27 }
	if ( ($10 <= [429496729]) ){ goto $label$24 }
	
.LABEL $label$27
	$14 = (CASTING uint_64)(uint_32 $10)
	
.LABEL $label$23
	$10 = ($13 + [-48])
	if ( ((uint_32)$10 > (uint_32)[9]) ){ goto $label$11 }
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$28:
	$1 = [10]
	$5 = (CASTING int_64)(int_32 $10)
	$12 = ((int_64)$14 * (int_64)10)
	if ( ((uint_64)$12 > (uint_64)((int_64)$5 ^ (int_64)-1)) ){ goto $label$12 }
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$30 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$29 
	
.LABEL $label$30
	$13 = CALL __shgetc($0)
	
.LABEL $label$29
	$14 = ((int_64)$12 + (int_64)$5)
	$10 = ($13 + [-48])
	if ( ((uint_32)$10 > (uint_32)[9]) ){ goto $label$31 }
	if ( (uint_64)($14 <= (int_64)1844674407370955162) ){ goto $label$28 }
	
.LABEL $label$31
	if ( ((uint_32)$10 <= (uint_32)[9]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$16
	$13 = CALL __shgetc($0)
	
.LABEL $label$15
	$1 = [16]
	if ( (*(($13 + [13137])) <= [16]) ){ goto $label$13 }
	$13 = *(($0 + [104]))
	if ( ($13 == 0) ){ goto $label$32 }
	*(($10 = ($0 + [4]))) = (*($10) + [-1])
	
.LABEL $label$32
	if ( ($2 == 0) ){ goto $label$9 }
	$14 = (int_64)0
	if ( ($13 == 0) ){ goto $label$10 }
	*(($13 = ($0 + [4]))) = (*($13) + [-1])
	return (int_64)0
	
.LABEL $label$14
	$1 = [8]
	
.LABEL $label$13
	if ( ((($1 + [-1]) & $1) == 0) ){ goto $label$37 }
	$10 = *(($13 + [13137]))
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$36 }
	$9 = [0]
	$2 = ($0 + [104])
	$8 = ($0 + [4])
	
.LOOP $label$38:
	$9 = ($10 + ((int_32)$9 * (int_32)$1))
	$13 = *($8)
	if ( ((uint_32)$13 >= (uint_32)*($2)) ){ goto $label$40 }
	*($8) = ($13 + [1])
	$13 = *($13)
	goto $label$39 
	
.LABEL $label$40
	$13 = CALL __shgetc($0)
	
.LABEL $label$39
	$10 = *(($13 + [13137]))
	if ( ((uint_32)$9 > (uint_32)[119304646]) ){ goto $label$41 }
	if ( ($10 <= $1) ){ goto $label$38 }
	
.LABEL $label$41
	$14 = (CASTING uint_64)(uint_32 $9)
	if ( ($10 <= $1) ){ goto $label$35 }
	goto $label$12 
	
.LABEL $label$37
	$2 = *(((uint_32(((int_32)$1 * (int_32)[23]) >> [5]) & [7]) + [13408]))
	$10 = *(($13 + [13137]))
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$34 }
	$9 = [0]
	$11 = ($0 + [104])
	$8 = ($0 + [4])
	
.LOOP $label$42:
	$9 = ($10 | ($9 << $2))
	$13 = *($8)
	if ( ((uint_32)$13 >= (uint_32)*($11)) ){ goto $label$44 }
	*($8) = ($13 + [1])
	$13 = *($13)
	goto $label$43 
	
.LABEL $label$44
	$13 = CALL __shgetc($0)
	
.LABEL $label$43
	$10 = *(($13 + [13137]))
	if ( ((uint_32)$9 > (uint_32)[134217727]) ){ goto $label$45 }
	if ( ($10 <= $1) ){ goto $label$42 }
	
.LABEL $label$45
	$14 = (CASTING uint_64)(uint_32 $9)
	if ( ($10 <= $1) ){ goto $label$33 }
	goto $label$12 
	
.LABEL $label$36
	$14 = (int_64)0
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$12 }
	
.LABEL $label$35
	$7 = (CASTING uint_64)(uint_32 $1)
	$6 = ((uint_64)(int_64)-1 / (uint_64)$7)
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$46:
	if ( ((uint_64)$14 > (uint_64)$6) ){ goto $label$12 }
	$5 = (CASTING uint_64)(uint_32 ($10 & [255]))
	$12 = ((int_64)$14 * (int_64)$7)
	if ( ((uint_64)$12 > (uint_64)((int_64)$5 ^ (int_64)-1)) ){ goto $label$12 }
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$48 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$47 
	
.LABEL $label$48
	$13 = CALL __shgetc($0)
	
.LABEL $label$47
	$14 = ((int_64)$5 + (int_64)$12)
	$10 = *(($13 + [13137]))
	if ( ($10 <= $1) ){ goto $label$46 }
	goto $label$12 
	
.LABEL $label$34
	$14 = (int_64)0
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$12 }
	
.LABEL $label$33
	$5 = (CASTING uint_64)(uint_32 $2)
	$6 = (uint_64)(int_64)-1 >> (uint_64)$5
	if ( ((uint_64)$14 > (uint_64)$6)) ){ goto $label$12 }
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$49:
	$14 = ((int_64)$14 << (int_64)$5)
	$12 = (CASTING uint_64)(uint_32 ($10 & [255]))
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$51 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$50 
	
.LABEL $label$51
	$13 = CALL __shgetc($0)
	
.LABEL $label$50
	$14 = ((int_64)$12 | (int_64)$14)
	$10 = *(($13 + [13137]))
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$12 }
	if ( ((uint_64)$14 <= (uint_64)$6) ){ goto $label$49 }
	
.LABEL $label$12
	if ( ((uint_32)*(($13 + [13137])) >= (uint_32)$1) ){ goto $label$11 }
	$9 = ($0 + [104])
	$10 = ($0 + [4])
	
.LOOP $label$52:
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*($9)) ){ goto $label$54 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$53 
	
.LABEL $label$54
	$13 = CALL __shgetc($0)
	
.LABEL $label$53
	if ( (*(($13 + [13137])) <= $1) ){ goto $label$52 }
	*(CALL __errno_location()) = [34]
	$4 = ( $4 ? [0] : (int_64)(((int_64)$3 & (int_64)1) == 0) )
	$14 = $3
	
.LABEL $label$11
	if ( (*(($0 + [104])) == 0) ){ goto $label$55 }
	*(($13 = ($0 + [4]))) = (*($13) + [-1])
	
.LABEL $label$55
	if ( (uint_64)($14 <= $3) ){ goto $label$56 }
	if ( (CASTING uint_32)(uint_64 ((int_64)$3 & (int_64)1)) ){ goto $label$57 }
	if ( $4 ){ goto $label$57 }
	*(CALL __errno_location()) = [34]
	return ((int_64)$3 + (int_64)-1)
	
.LABEL $label$57
	if ( ((uint_64)$14 <= (uint_64)$3) ){ goto $label$56 }
	*(CALL __errno_location()) = [34]
	return $3
	
.LABEL $label$56
	$12 = (CASTING int_64)(int_32 $4)
	$14 = (int_64))(((int_64)$14 ^ (int_64)$12) - $12)
	
.LABEL $label$10
	return $14
	
.LABEL $label$9
	CALL __shlim($0, (int_64)0)
	$10
	return (int_64)0
}

int_64 .FUNC llabs (int_64 $0)
{
	int_64 $1
	$1 = (int_64)$0 >> (int_64)63
	return ((int_64)((int_64)$0 + (int_64)$1)) ^ (int_64)$1)
}

int_32 .FUNC strtol (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [144])
	*([0] + [4]) = $4
	*($4 + [4]) = $0
	*($4 + [44]) = $0
	*($4) = [0]
	*($4 + [76]) = [-1]
	*($4 + [8]) = ( [-1] ? ($0 + [2147483647]) : ((int_32)$0 < (int_32)[0]) )
	CALL __shlim($4, (int_64)0)
	$3 = CALL __intscan($4, $2, [1], (int_64)2147483648)
	if ( ($1 == 0) ){ goto $label$1 }
	*($1) = ($0 + (CASTING uint_32)(uint_64 ((int_64)(CASTING uint_64)(uint_32 (*($4 + [4]) - *(($4 + [8])))) + (int_64)*($4 + [120]))))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [144])
	return (CASTING uint_32)(uint_64 $3)
}

int_64 .FUNC fabs (float_64 $0)
{
	return (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $0) & (int_64)9223372036854775807))
}

int_64 .FUNC scalbn (float_64 $0, int_32 $1)
{
	int_32 $2
	if ( ((int_32)$1 < (int_32)[1024]) ){ goto $label$4 }
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	$2 = ($1 + [-1023])
	if ( ((int_32)$2 < (int_32)[1024]) ){ goto $label$3 }
	$1 = ($1 + [-2046])
	$1 = ( $1 ? [1023] : ((int_32)$1 < (int_32)[1023]) )
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$1 > (int_32)[-1023]) ){ goto $label$1 }
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	$2 = ($1 + [969])
	if ( ((int_32)$2 > (int_32)[-1023]) ){ goto $label$2 }
	$1 = ($1 + [1938])
	$1 = ( $1 ? [-1022] : ((int_32)$1 > (int_32)[-1022]) )
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	goto $label$1 
	
.LABEL $label$3
	$1 = $2
	goto $label$1 
	
.LABEL $label$2
	$1 = $2
	
.LABEL $label$1
	return ((float_64)$0 * (float_64)(CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($1 + [1023])) << (int_64)52)))
}

void .FUNC $116 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = *($0)
	$8 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = ((int_32)$3 / (int_32)[40])
	if ( ((uint_32)$4 <= (uint_32)((int_32)($8 - $5) / (int_32)[40])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $310($5)
	$8 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[107374183]) ){ goto $label$1 }
	$5 = [107374182]
	$2 = ((int_32)$8 / (int_32)[40])
	if ( ((uint_32)$2 > (uint_32)[53687090]) ){ goto $label$6 }
	$5 = ($2 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	
.LABEL $label$6
	$4 = ((int_32)$5 * (int_32)[40])
	$5 = CALL $309($4)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($5, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + ((int_32)((uint_32)$3 / (uint_32)[40]) * (int_32)[40]))
	return 
	
.LABEL $label$4
	$3 = ((int_32)(*($0 + [4]) - $5) / (int_32)[40])
	$6 = ( ($1 + ((int_32)$3 * (int_32)[40])) ? $2 : ((uint_32)$4 > (uint_32)$3) )
	$8 = ($6 - $1)
	$7 = ((int_32)$8 / (int_32)[40])
	if ( ($8 == 0) ){ goto $label$7 }
	CALL memmove($5, $1, $8)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$3) ){ goto $label$2 }
	$1 = ($2 - $6)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $6, $1)
	*($0) = (*($0) + ((int_32)((uint_32)$1 / (uint_32)[40]) * (int_32)[40]))
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + ((int_32)$7 * (int_32)[40]))
	return (unreachable)
	
.LABEL $label$1
	CALL $324($0)
}

int_32 .FUNC $117 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	$4 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($4 <= *($2)), [1536])
	$4 = *($3)
	$7 = *($4)
	$4 = ($4 + [1])
	*($3) = $4
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($7 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$4 = *($1 + [4])
	$3 = ((int_32)($4 - $7) / (int_32)[40])
	$6 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$4 }
	CALL $118($1, ($6 - $3))
	$4 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$6 >= (uint_32)$3) ){ goto $label$5 }
	$4 = ($7 + ((int_32)$6 * (int_32)[40]))
	*(($1 + [4])) = $4
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = ($8 + [20])
	$3 = ($8 + [24])
	
.LOOP $label$6:
	*($8) = $0
	*($8 + [8]) = $7
	*((($8 + [8]) + [8])) = ($7 + [8])
	*($6) = ($7 + [24])
	*($3) = ($7 + [32])
	*($8 + [12]) = ($7 + [1])
	CALL $119(($8 + [8]), $8)
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [32])
	return $0
}

void .FUNC $114 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$5 = (*([0] + [4]) - [48])
	$10 = $5
	*([0] + [4]) = $5
	$9 = *(*($0 + [4]))
	*($1) = *($9)
	$4 = ($1 + [8])
	$2 = *($0)
	if ( ((int_32)$1 == (int_32)$9) ){ goto $label$1 }
	CALL $116($4, *($9 + [8]), *(($9 + [12])))
	
.LABEL $label$1
	$4 = *($4)
	$3 = *(($1 + [12]))
	$6 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$6 / (int_32)[40]))
	$9 = [35]
	
.LOOP $label$2:
	$9 = ($9 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$4 }
	$6 = (((int_32)((uint_32)($6 + [-40]) / (uint_32)[40]) * (int_32)[27]) + $9)
	goto $label$3 
	
.LABEL $label$4
	$6 = ($9 + [-27])
	
.LABEL $label$3
	if ( ($6 <= [513]) ){ goto $label$6 }
	$7 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($5 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$5
	*($10) = $7
	$3 = ($7 + $6)
	*($10 + [8]) = $3
	CALL eosio_assert(((int_32)$6 > (int_32)[7]), [560])
	CALL memcpy($7, $1, [8])
	$9 = ($7 + [8])
	*($10 + [4]) = $9
	$8 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [12])) - *(($1 + [8]))) / (int_32)[40]))
	
.LOOP $label$7:
	$4 = (CASTING uint_32)(uint_64 $8)
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	$5 = ((int_64)$8) != (int_64)0
	*($10 + [24]) = (($5) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)($3 - $9) > (int_32)[0]), [560])
	CALL memcpy($9, ($10 + [24]), [1])
	$9 = ($9 + [1])
	*($10 + [4]) = $9
	if ( $5 ){ goto $label$7 }
	$4 = *(($1 + [12]))
	$9 = *($1 + [8])
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$8 }
	$5 = (($10 + [24]) + [12])
	$3 = ($10 + [40])
	
.LOOP $label$9:
	*($10 + [16]) = $10
	*($10 + [24]) = $9
	*((($10 + [24]) + [8])) = ($9 + [8])
	*($5) = ($9 + [24])
	*($3) = ($9 + [32])
	*($10 + [28]) = ($9 + [1])
	CALL $88(($10 + [24]), ($10 + [16]))
	$9 = ($9 + [40])
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$9 }
	
.LABEL $label$8
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)4853904214365044736, *(*($0 + [8])), (int_64)4853904214365044736, $7, $6)
	if ( ($6 <= [513]) ){ goto $label$10 }
	CALL free($7)
	
.LABEL $label$10
	if ( ((uint_64)*($2 + [16]) > (uint_64)(int_64)4853904214365044736) ){ goto $label$11 }
	*(($2 + [16])) = (int_64)4853904214365044737
	
.LABEL $label$11
	*([0] + [4]) = ($10 + [48])
}

void .FUNC $115 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $309(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [8])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [12])) = $6
	CALL $310($6)
	
.LABEL $label$11
	CALL $310($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $310($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $112 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$6 = (*([0] + [4]) - [48])
	$10 = $6
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [960])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1008])
	$3 = *($3)
	*($1) = *($3)
	$5 = ($1 + [8])
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$1 }
	CALL $116($5, *($3 + [8]), *(($3 + [12])))
	
.LABEL $label$1
	CALL eosio_assert([1], [1072])
	$5 = *($5)
	$4 = *(($1 + [12]))
	$7 = ($4 - $5)
	$9 = (CASTING uint_64)(uint_32 ((int_32)$7 / (int_32)[40]))
	$3 = [35]
	
.LOOP $label$2:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	$7 = (((int_32)((uint_32)($7 + [-40]) / (uint_32)[40]) * (int_32)[27]) + $3)
	goto $label$3 
	
.LABEL $label$4
	$7 = ($3 + [-27])
	
.LABEL $label$3
	if ( ($7 <= [513]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($6 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$5
	*($10) = $8
	$4 = ($8 + $7)
	*($10 + [8]) = $4
	CALL eosio_assert(((int_32)$7 > (int_32)[7]), [560])
	CALL memcpy($8, $1, [8])
	$3 = ($8 + [8])
	*($10 + [4]) = $3
	$9 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [12])) - *(($1 + [8]))) / (int_32)[40]))
	
.LOOP $label$7:
	$5 = (CASTING uint_32)(uint_64 $9)
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	$6 = ((int_64)$9) != (int_64)0
	*($10 + [24]) = (($6) << [7]) | ($5 & [127]))
	CALL eosio_assert(((int_32)($4 - $3) > (int_32)[0]), [560])
	CALL memcpy($3, ($10 + [24]), [1])
	$3 = ($3 + [1])
	*($10 + [4]) = $3
	if ( $6 ){ goto $label$7 }
	$5 = *(($1 + [12]))
	$3 = *($1 + [8])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = (($10 + [24]) + [12])
	$4 = ($10 + [40])
	
.LOOP $label$9:
	*($10 + [16]) = $10
	*($10 + [24]) = $3
	*((($10 + [24]) + [8])) = ($3 + [8])
	*($6) = ($3 + [24])
	*($4) = ($3 + [32])
	*($10 + [28]) = ($3 + [1])
	CALL $88(($10 + [24]), ($10 + [16]))
	$3 = ($3 + [40])
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	CALL db_update_i64(*($1 + [28]), $2, $8, $7)
	if ( ($7 <= [513]) ){ goto $label$10 }
	CALL free($8)
	
.LABEL $label$10
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)4853904214365044736) ){ goto $label$11 }
	*(($0 + [16])) = (int_64)4853904214365044737
	
.LABEL $label$11
	*([0] + [4]) = ($10 + [48])
}

void .FUNC $113 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$3()), [896])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $309([40])) + [16]) = [0]
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [24]) = $1
	CALL $114(($7 + [16]), $3)
	*($7 + [32]) = $3
	*($7 + [16]) = (int_64)4853904214365044736
	$4 = *($3 + [28])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = (int_64)4853904214365044736
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $115(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	$3 = *($1 + [8])
	if ( ($3 == 0) ){ goto $label$4 }
	*(($1 + [12])) = $3
	CALL $310($3)
	
.LABEL $label$4
	CALL $310($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $110 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$7 = *($0 + [8])
	if ( ((uint_32)int_32(($7 - $2) >> [3]) >= (uint_32)$1) ){ goto $label$5 }
	$3 = *($0)
	$4 = int_32(($2 - $3) >> [3])
	$2 = ($4 + $1)
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$7 = ($7 - $3)
	if ( ((uint_32)int_32($7 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$6 = int_32($7 >> [2])
	$6 = ( $2 ? $6 : ($6 <= $2) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$6
	$7 = CALL $309(($6 << [3]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $2
	$7 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$7 }
	*(($0 + [4])) = ($2 + ($1 << [3]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $324($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$3 = ($7 + ($6 << [3]))
	$2 = ($7 + ($4 << [3]))
	$6 = $2
	$7 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$8 }
	$4 = ($2 + ($1 << [3]))
	$6 = *($0)
	$5 = ($0 + [4])
	$7 = (*($5) - $6)
	$1 = ($2 - $7)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $7)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($5) = $4
	*(($0 + [8])) = $3
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $310($6)
	
.LABEL $label$10
	(unreachable)
}

int_32 .FUNC $111 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [752])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($8 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($7 + [36]) = $4
	*($7 + [32]) = $4
	$6 = ($4 + $5)
	*($7 + [40]) = $6
	if ( ((uint_32)$5 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$6 = *(($7 + [40]))
	$4 = *($7 + [36])
	
.LABEL $label$7
	*(($5 = CALL $309([40])) + [16]) = [0]
	*($5 + [8 align=4]) = (int_64)0
	*($5 + [24]) = $0
	CALL eosio_assert(((uint_32)($6 - $4) > (uint_32)[7]), [784])
	CALL memcpy($5, $4, [8])
	*($7 + [36]) = ($4 + [8])
	CALL $117(($7 + [32]), ($5 + [8]))
	*($5 + [28]) = $1
	*($7 + [24]) = $5
	*($7 + [16]) = (int_64)4853904214365044736
	$6 = *($5 + [28])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = (int_64)4853904214365044736
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $115(($0 + [24]), ($7 + [24]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$8
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$6 = *($4 + [8])
	if ( ($6 == 0) ){ goto $label$10 }
	*(($4 + [12])) = $6
	CALL $310($6)
	
.LABEL $label$10
	CALL $310($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
	return $5
}

void .FUNC $118 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$7 = *($0 + [4])
	$8 = *($0 + [8])
	if ( ((uint_32)((int_32)($8 - $7) / (int_32)[40]) >= (uint_32)$1) ){ goto $label$5 }
	$2 = *($0)
	$3 = ((int_32)($7 - $2) / (int_32)[40])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[107374183]) ){ goto $label$3 }
	$7 = [107374182]
	$8 = ((int_32)($8 - $2) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$6 }
	$7 = ($8 << [1])
	$7 = ( $4 ? $7 : ($7 <= $4) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$8 = CALL $309(((int_32)$7 * (int_32)[40]))
	goto $label$2 
	
.LABEL $label$5
	$2 = ($0 + [4])
	
.LOOP $label$7:
	*(($8 = (($7 = CALL memset($7, [0], [40])) + [16]))) = (int_64)1398362884
	*($7 + [8]) = (int_64)0
	CALL eosio_assert([1], [464])
	$6 = (uint_64)*($8) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$8 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$8 = [0]
	
.LABEL $label$8
	CALL eosio_assert($8, [128])
	$7 = (*($2) + [40])
	*($2) = $7
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$8 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $324($0)
	
.LABEL $label$2
	$4 = ($8 + ((int_32)$7 * (int_32)[40]))
	$3 = ($8 + ((int_32)$3 * (int_32)[40]))
	$7 = $3
	
.LOOP $label$13:
	*(($7 = (($2 = CALL memset($7, [0], [40])) + [16]))) = (int_64)1398362884
	*($2 + [8]) = (int_64)0
	CALL eosio_assert([1], [464])
	$6 = (uint_64)*($7) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	
.LOOP $label$18:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$18 }
	
.LABEL $label$17
	$8 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	$8 = [0]
	
.LABEL $label$14
	CALL eosio_assert($8, [128])
	$7 = ($2 + [40])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$13 }
	$8 = *($0)
	$5 = ($0 + [4])
	$1 = (*($5) - $8)
	$2 = ($3 + ((int_32)((int_32)$1 / (int_32)[-40]) * (int_32)[40]))
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$19 }
	CALL memcpy($2, $8, $1)
	$8 = *($0)
	
.LABEL $label$19
	*($0) = $2
	*($5) = $7
	*(($0 + [8])) = $4
	if ( ($8 == 0) ){ goto $label$1 }
	CALL $310($8)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $119 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [784])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [784])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [784])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [784])
	CALL memcpy(($5 + [15]), *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	*($3) = ((int_32)*($5 + [15]) != (int_32)[0])
	$0 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [784])
	CALL memcpy($0, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $299 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [96])
	*([0] + [4]) = $8
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [960])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1008])
	$3 = *($3)
	$4 = *($3 + [40])
	CALL __multi3($8, $4, (int_64)$4 >> (int_64)63), (int_64)6, (int_64)0)
	$7 = *(($3 + [48]))
	$4 = *($1)
	$5 = *(($8 + [8]))
	$6 = *($8)
	CALL eosio_assert(( (uint_64)($6 <= (int_64)4611686018427387904) ? ((int_64)$5 < (int_64)0) : (int_64)($5 == 0) ), [1408])
	CALL eosio_assert(( ((uint_64)$6 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$5 > (int_64)-1) : ((int_64)$5 == (int_64)-1) ), [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	CALL eosio_assert(((int_64)$7 == (int_64)*(($1 + [16]))), [1280])
	$5 = (int_64)
	*($1 + [8]) = $5(*($1 + [8]) - ((int_64)$6 / (int_64)10)))
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1328])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [1360])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1072])
	*($8 + [64]) = (($8 + [16]) + [40])
	*($8 + [60]) = ($8 + [16])
	*($8 + [56]) = ($8 + [16])
	*($8 + [72]) = ($8 + [56])
	*($8 + [84]) = ($1 + [8])
	*($8 + [80]) = $1
	*($8 + [88]) = ($1 + [24])
	CALL $225(($8 + [80]), ($8 + [72]))
	CALL db_update_i64(*($1 + [44]), $2, ($8 + [16]), [40])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [96])
}

void .FUNC $298 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	$2 = *($0)
	$3 = *($2)
	CALL __multi3($6, $3, (int_64)$3 >> (int_64)63), (int_64)6, (int_64)0)
	$5 = *($2 + [8])
	$3 = *(($6 + [8]))
	$4 = *($6)
	CALL eosio_assert(( (uint_64)($4 <= (int_64)4611686018427387904) ? ((int_64)$3 < (int_64)0) : (int_64)($3 == 0) ), [1408])
	CALL eosio_assert(( ((uint_64)$4 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$3 > (int_64)-1) : ((int_64)$3 == (int_64)-1) ), [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	CALL eosio_assert(((int_64)$5 == (int_64)*(($1 + [16]))), [224])
	$3 = ((int_64)*($1 + [8]) + (int_64)((int_64)$4 / (int_64)10))
	*($1 + [8]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [304])
	$0 = *($0)
	CALL eosio_assert(((int_64)*($0 + [8]) == (int_64)*(($1 + [32]))), [224])
	$3 = ((int_64)*($1 + [24]) + (int_64)*($0))
	*($1 + [24]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($1 + [24]) < (int_64)4611686018427387904), [304])
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $295 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [80])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [960])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1008])
	$4 = *($1)
	CALL $298($3, $1)
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1072])
	*($5 + [48]) = ($5 + [40])
	*($5 + [44]) = $5
	*($5 + [40]) = $5
	*($5 + [56]) = ($5 + [40])
	*($5 + [68]) = ($1 + [8])
	*($5 + [64]) = $1
	*($5 + [72]) = ($1 + [24])
	CALL $225(($5 + [64]), ($5 + [56]))
	CALL db_update_i64(*($1 + [44]), $2, $5, [40])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [80])
}

void .FUNC $294 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [592])
	*([0] + [4]) = $11
	CALL memset(($11 + [336]), [0], [64])
	$6 = CALL $154(($11 + [336]))
	$1 = ($0 + [248])
	$3 = *(($0 + [276]))
	if ( ((int_32)$3 == (int_32)*(($0 + [272]))) ){ goto $label$3 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [64]) == (int_32)$1), [64])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$3 = CALL db_find_i64(*($1), *(($0 + [256])), (int_64)3932090329724878848, (int_64)3932090329724878848)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $155($1, $3)
	CALL eosio_assert(((int_32)*($3 + [64]) == (int_32)$1), [64])
	
.LABEL $label$2
	$6 = $3
	
.LABEL $label$1
	CALL memcpy(($11 + [528]), $6, [64])
	if ( (*($11 + [584]) == 0) ){ goto $label$11 }
	if ( ((uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) <= (uint_32)*($11 + [544])) ){ goto $label$6 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [1248]
	$2 = *($11 + [536])
	$9 = (int_64)0
	
.LOOP $label$12:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$13 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$3 = ($3 + [165])
	goto $label$14 
	
.LABEL $label$15
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$13
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$12 }
	if ( ((int_64)$2 == (int_64)$9) ){ goto $label$7 }
	*(($11 + [520])) = [0]
	$8 = *($0)
	*($11 + [488]) = $8
	*($11 + [504]) = (int_64)-1
	*($11 + [512]) = (int_64)0
	*($11 + [496]) = $2
	$6 = [0]
	$3 = CALL db_find_i64($8, $2, (int_64)3932090330173844992, *($11 + [528]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$16 }
	$6 = CALL $183(($11 + [488]), $3)
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)($11 + [488])), [64])
	
.LABEL $label$16
	$8 = *($11 + [568])
	CALL __multi3(($11 + [104]), $8, (int_64)$8 >> (int_64)63), (int_64)6, (int_64)0)
	$10 = *(($11 + [576]))
	$8 = *(($11 + [112]))
	$7 = *($11 + [104])
	CALL eosio_assert(( (uint_64)($7 <= (int_64)4611686018427387904) ? ((int_64)$8 < (int_64)0) : (int_64)($8 == 0) ), [1408])
	CALL eosio_assert(( ((uint_64)$7 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$8 > (int_64)-1) : ((int_64)$8 == (int_64)-1) ), [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	CALL eosio_assert(((int_64)$10 == (int_64)*(($6 + [16]))), [160])
	CALL eosio_assert(((int_64)*($6 + [8]) >= (int_64)((int_64)$7 / (int_64)10)), [2000])
	*($11 + [336]) = ($11 + [528])
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [848])
	CALL $299(($11 + [488]), $6, (int_64)0, ($11 + [336]))
	CALL memset(($11 + [184]), [0], [152])
	$3 = CALL $120(($11 + [184]))
	$6 = ($0 + [128])
	$4 = *(($0 + [156]))
	if ( ((int_32)$4 == (int_32)*(($0 + [152]))) ){ goto $label$10 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [152]) == (int_32)$6), [64])
	if ( $4 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	if ( ((int_64)*($11 + [552]) < (int_64)1000000) ){ goto $label$6 }
	*(($11 + [584])) = [1]
	*($11 + [544]) = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [7200])
	CALL $173($1, ($11 + [528]), *($0))
	goto $label$6 
	
.LABEL $label$10
	$4 = CALL db_find_i64(*($6), *(($0 + [136])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$8 }
	$4 = CALL $121($6, $4)
	CALL eosio_assert(((int_32)*($4 + [152]) == (int_32)$6), [64])
	
.LABEL $label$9
	$3 = $4
	
.LABEL $label$8
	CALL memcpy(($11 + [336]), $3, [152])
	$8 = (int_64)0
	$7 = *(($11 + [568]))
	CALL __multi3(($11 + [88]), $7, (int_64)$7 >> (int_64)63), (int_64)6, (int_64)0)
	$9 = *(($11 + [576]))
	$7 = *(($11 + [96]))
	$10 = *($11 + [88])
	CALL eosio_assert(( (uint_64)($10 <= (int_64)4611686018427387904) ? ((int_64)$7 < (int_64)0) : (int_64)($7 == 0) ), [1408])
	CALL eosio_assert(( ((uint_64)$10 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$7 > (int_64)-1) : ((int_64)$7 == (int_64)-1) ), [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	CALL eosio_assert(((int_64)$9 == (int_64)*(($11 + [464]))), [1280])
	$7 = (int_64)
	*($11 + [456]) = $7(*($11 + [456]) - ((int_64)$10 / (int_64)10)))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [1328])
	CALL eosio_assert(((int_64)*($11 + [456]) < (int_64)4611686018427387904), [1360])
	CALL $122($6, ($11 + [336]), *($0))
	$7 = (int_64)59
	$6 = [2608]
	$9 = (int_64)0
	
.LOOP $label$17:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$18 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$3 = ($3 + [165])
	goto $label$19 
	
.LABEL $label$20
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$18
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$17 }
	$8 = *(($11 + [568]))
	CALL __multi3(($11 + [72]), $8, (int_64)$8 >> (int_64)63), (int_64)6, (int_64)0)
	$10 = *(($11 + [576]))
	$8 = *((($11 + [72]) + [8]))
	$7 = *($11 + [72])
	CALL eosio_assert(( (uint_64)($7 <= (int_64)4611686018427387904) ? ((int_64)$8 < (int_64)0) : (int_64)($8 == 0) ), [1408])
	CALL eosio_assert(( ((uint_64)$7 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$8 > (int_64)-1) : ((int_64)$8 == (int_64)-1) ), [1440])
	*($11 + [176]) = $10
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	*((($11 + [152]) + [8])) = [0]
	*($11 + [168]) = ((int_64)$7 / (int_64)10)
	*($11 + [152]) = (int_64)0
	$6 = CALL strlen([4496])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$23 }
	*($11 + [152]) = ($6 << [1])
	$3 = (($11 + [152]) | [1])
	if ( $6 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	$4 = (($6 + [16]) & [-16])
	$3 = CALL $309($4)
	*($11 + [152]) = ($4 | [1])
	*($11 + [160]) = $3
	*($11 + [156]) = $6
	
.LABEL $label$22
	CALL memcpy($3, [4496], $6)
	
.LABEL $label$21
	*(($3 + $6)) = [0]
	*((($11 + [56]) + [8])) = *((($11 + [168]) + [8]))
	*($11 + [56]) = *($11 + [168])
	CALL $182($0, $9, ($11 + [56]), ($11 + [152]))
	if ( ((*($11 + [152]) & [1]) == 0) ){ goto $label$24 }
	CALL $310(*($11 + [160]))
	
.LABEL $label$24
	$4 = *($11 + [512])
	if ( ($4 == 0) ){ goto $label$7 }
	$5 = ($11 + [516])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$26 }
	
.LOOP $label$27:
	$6 = ($6 + [-24])
	$3 = *($6)
	*($6) = [0]
	if ( ($3 == 0) ){ goto $label$28 }
	CALL $310($3)
	
.LABEL $label$28
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$27 }
	$6 = *(($11 + [512]))
	goto $label$25 
	
.LABEL $label$26
	$6 = $4
	
.LABEL $label$25
	*($5) = $4
	CALL $310($6)
	
.LABEL $label$7
	$8 = *($11 + [552])
	CALL __multi3(($11 + [40]), $8, (int_64)$8 >> (int_64)63), (int_64)90, (int_64)0)
	$6 = ($11 + [560])
	$10 = *($6)
	$8 = *((($11 + [40]) + [8]))
	$7 = *($11 + [40])
	CALL eosio_assert(( (uint_64)($7 <= (int_64)4611686018427387904) ? ((int_64)$8 < (int_64)0) : (int_64)($8 == 0) ), [1408])
	CALL eosio_assert(( ((uint_64)$7 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$8 > (int_64)-1) : ((int_64)$8 == (int_64)-1) ), [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	if ( ((int_64)$7 < (int_64)100) ){ goto $label$29 }
	$8 = *((($11 + [528]) + [8]))
	*($11 + [144]) = $10
	*((($11 + [120]) + [8])) = [0]
	*($11 + [136]) = ((uint_64)$7 / (uint_64)(int_64)100)
	*($11 + [120]) = (int_64)0
	$3 = CALL strlen([4512])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$32 }
	*($11 + [120]) = ($3 << [1])
	$4 = (($11 + [120]) | [1])
	if ( $3 ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	$5 = (($3 + [16]) & [-16])
	$4 = CALL $309($5)
	*($11 + [120]) = ($5 | [1])
	*($11 + [128]) = $4
	*($11 + [124]) = $3
	
.LABEL $label$31
	CALL memcpy($4, [4512], $3)
	
.LABEL $label$30
	*(($4 + $3)) = [0]
	*((($11 + [24]) + [8])) = *((($11 + [136]) + [8]))
	*($11 + [24]) = *($11 + [136])
	CALL $82($0, $8, ($11 + [24]), ($11 + [120]))
	if ( ((*($11 + [120]) & [1]) == 0) ){ goto $label$29 }
	CALL $310(*($11 + [128]))
	
.LABEL $label$29
	$3 = (($11 + [528]) + [24])
	$8 = *($3)
	CALL __multi3(($11 + [8]), $8, (int_64)$8 >> (int_64)63), (int_64)10, (int_64)0)
	$10 = *($6)
	$8 = *((($11 + [8]) + [8]))
	$7 = *($11 + [8])
	CALL eosio_assert(( (uint_64)($7 <= (int_64)4611686018427387904) ? ((int_64)$8 < (int_64)0) : (int_64)($8 == 0) ), [1408])
	CALL eosio_assert(( ((uint_64)$7 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$8 > (int_64)-1) : ((int_64)$8 == (int_64)-1) ), [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	*($6) = $10
	*($3) = ((int_64)$7 / (int_64)100)
	*(($11 + [544])) = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [7200])
	CALL eosio_assert([1], [464])
	$8 = (int_64)1212369234
	$6 = [0]
	
.LOOP $label$35:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$34 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$36 }
	
.LOOP $label$37:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$34 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$37 }
	
.LABEL $label$36
	$3 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$35 }
	goto $label$33 
	
.LABEL $label$34
	$3 = [0]
	
.LABEL $label$33
	CALL eosio_assert($3, [128])
	*(($11 + [576])) = (int_64)310366523908
	*($11 + [568]) = (int_64)10000000
	*($11 + [528]) = ((int_64)*($11 + [528]) + (int_64)1)
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [1248]
	$9 = (int_64)0
	
.LOOP $label$38:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$39 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$41 }
	$3 = ($3 + [165])
	goto $label$40 
	
.LABEL $label$41
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$40
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$39
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$38 }
	*(($11 + [584])) = [0]
	*(($11 + [536])) = $9
	CALL $173($1, ($11 + [528]), *($0))
	
.LABEL $label$6
	*([0] + [4]) = ($11 + [592])
	return (unreachable)
	
.LABEL $label$5
	CALL $311(($11 + [152]))
	
.LABEL $label$4
	CALL $311(($11 + [120]))
	(unreachable)
}

void .FUNC $297 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [96])
	*([0] + [4]) = $8
	$3 = *($0 + [4])
	*($1) = *(*($3))
	$4 = *($3 + [4])
	$5 = *($4)
	CALL __multi3($8, $5, (int_64)$5 >> (int_64)63), (int_64)6, (int_64)0)
	$2 = *($0)
	$7 = *($4 + [8])
	$5 = *(($8 + [8]))
	$6 = *($8)
	CALL eosio_assert(( (uint_64)($6 <= (int_64)4611686018427387904) ? ((int_64)$5 < (int_64)0) : (int_64)($5 == 0) ), [1408])
	CALL eosio_assert(( ((uint_64)$6 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$5 > (int_64)-1) : ((int_64)$5 == (int_64)-1) ), [1440])
	CALL eosio_assert([1], [1472])
	CALL eosio_assert([1], [1488])
	*(($1 + [16])) = $7
	*($1 + [8]) = ((int_64)$6 / (int_64)10)
	$3 = *($3 + [4])
	*($1 + [24]) = *($3)
	*(($1 + [32])) = *(($3 + [8]))
	*($8 + [64]) = (($8 + [16]) + [40])
	*($8 + [60]) = ($8 + [16])
	*($8 + [56]) = ($8 + [16])
	*($8 + [72]) = ($8 + [56])
	*($8 + [84]) = ($1 + [8])
	*($8 + [80]) = $1
	*($8 + [88]) = ($1 + [24])
	CALL $225(($8 + [80]), ($8 + [72]))
	$5 = *($1)
	*($1 + [44]) = CALL db_store_i64(*($2 + [8]), (int_64)3932090330173844992, *(*($0 + [8])), $5, ($8 + [16]), [40])
	if ( (uint_64)($5 <= *($2 + [16])) ){ goto $label$1 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [96])
}

void .FUNC $296 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$3()), [896])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $309([56])
	CALL $186($3)
	*($3 + [40]) = $1
	CALL $297(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [44])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $188(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $310($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $291 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [960])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1008])
	*($1 + [8]) = (*($1 + [8]) + [255])
	$4 = *($1)
	CALL eosio_assert([1], [1072])
	CALL eosio_assert([1], [560])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy(($5 | [8]), ($1 + [8]), [1])
	CALL db_update_i64(*($1 + [20]), $2, $5, [9])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $290 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [576])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [624])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [688])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $310($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $310($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $293 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $309(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $310($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $310($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $292 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	*($0 + [16]) = $1
	$1 = *(*($2 + [4]))
	*($0 + [8]) = [1]
	*($0) = *($1)
	$1 = *($2)
	CALL eosio_assert([1], [560])
	CALL memcpy($4, $0, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy(($4 | [8]), ($0 + [8]), [1])
	$3 = *($0)
	*($0 + [20]) = CALL db_store_i64(*($1 + [8]), (int_64)-7520332274659753984, *(*($2 + [8])), $3, $4, [9])
	if ( (uint_64)($3 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
	return $0
}

void .FUNC $198 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$3()), [896])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($4 = CALL $309([40])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [464])
	$2 = (int_64)5462355
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [128])
	*($4 + [24]) = $1
	CALL $201(($7 + [16]), $4)
	*($7 + [32]) = $4
	$2 = *($4)
	*($7 + [16]) = $2
	$6 = *($4 + [28])
	*($7 + [12]) = $6
	$5 = ($1 + [28])
	$3 = *($5)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$7 }
	*($3 + [8]) = $2
	*($3 + [16]) = $6
	*($7 + [32]) = [0]
	*($3) = $4
	*($5) = ($3 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $196(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$6
	*($0 + [4]) = $4
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL $310($3)
	
.LABEL $label$8
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $212 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$7 = ($5 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$6 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $309(((int_32)$6 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $324($0)
	
.LABEL $label$1
	*(($8 = ($7 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($8 + [8]) = *($3)
	*($8 + [16 align=4]) = (int_64)0
	*(($3 = ($8 + [24]))) = [0]
	$2 = CALL $309([16])
	*($8 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($8 + [20])) = $5
	*($8 + [28]) = [0]
	*(($2 = ($8 + [32]))) = [0]
	*(($8 + [36])) = [0]
	CALL $52(($8 + [28]), [8])
	$2 = *($8 + [28])
	CALL eosio_assert(((int_32)(*($2) - $2) > (int_32)[7]), [560])
	CALL memcpy($2, $4, [8])
	$4 = ($7 + ((int_32)$6 * (int_32)[40]))
	$5 = ($8 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$3 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($2 + [-12]))
	*(($8 + [-40])) = *(($2 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($6 = ($8 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($8 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($6) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($6 = ($8 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($8 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($6) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $3) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	$1 = ([0] - $6)
	$8 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($8 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $2
	CALL $310($2)
	
.LABEL $label$10
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $2
	CALL $310($2)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $310($6)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $341 ()
{
	(unreachable)
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

int_32 .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [96])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$5 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*(($9 + [40])) = (int_64)1398362884
	*($9 + [32]) = (int_64)0
	*($9 + [24]) = (int_64)0
	CALL eosio_assert([1], [464])
	$6 = (int_64)5462355
	
.LOOP $label$5:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($7, [128])
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [784])
	CALL memcpy(($9 + [24]), $5, [8])
	$7 = ($3 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [784])
	$1 = (($9 + [24]) + [8])
	CALL memcpy($1, ($5 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [784])
	CALL memcpy((($9 + [24]) + [16]), ($5 + [16]), [8])
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	*(($7 = (($9 + [48]) + [8]))) = *(($1 + [8]))
	$6 = *($9 + [24])
	*($9 + [48]) = *($1)
	*((($9 + [64]) + [8])) = *($7)
	*($9 + [64]) = *($9 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$8 = *((*($1) + $8))
	
.LABEL $label$9
	$4 = *((($9 + [64]) + [8]))
	*((($9 + [80]) + [8])) = $4
	*((($9 + [8]) + [8])) = $4
	$4 = *($9 + [64])
	*($9 + [80]) = $4
	*($9 + [8]) = $4
	CALL void $1((int_32 $6), (int_64 ($9 + [8])), (int_32 $8))
	*([0] + [4]) = ($9 + [96])
	return [1]
}

void .FUNC $283 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$3 = *($1 + [32])
	if ( (int_64)($3 == 0) ){ goto $label$1 }
	$2 = (Rounds 0)(((float_64)CALL pow((float_64)1.35, (CASTING float_64)(uint_64 ((int_64)$3 + (int_64)-1))) * (float_64)(float_64)1e5))
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [464])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	
.LOOP $label$6:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$3 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$5 = [0]
	
.LABEL $label$2
	CALL eosio_assert($5, [128])
	*($0 + [8]) = (int_64)1397703940
	CALL eosio_assert(((int_64)*(($1 + [24])) == (int_64)1397703940), [224])
	$3 = ((int_64)$2 + (int_64)*($1 + [16]))
	*($0) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [304])
	return 
	
.LABEL $label$1
	*($0) = *($1 + [16])
	*(($0 + [8])) = *(($1 + [24]))
}

void .FUNC _ZN12richrichrich9toauctionEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [368])
	*([0] + [4]) = $9
	CALL memset(($9 + [152]), [0], [64])
	$7 = CALL $154(($9 + [152]))
	$2 = ($0 + [248])
	$1 = *(($0 + [276]))
	if ( ((int_32)$1 == (int_32)*(($0 + [272]))) ){ goto $label$3 }
	$1 = *(($1 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$2), [64])
	if ( $1 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$1 = CALL db_find_i64(*($2), *(($0 + [256])), (int_64)3932090329724878848, (int_64)3932090329724878848)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$1 = CALL $155($2, $1)
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$2), [64])
	
.LABEL $label$2
	$7 = $1
	
.LABEL $label$1
	CALL memcpy(($9 + [304]), $7, [64])
	if ( ((int_64)*($9 + [328]) > (int_64)999999) ){ goto $label$4 }
	$1 = CALL memset($9, [0], [152])
	$7 = CALL $120($1)
	$3 = ($0 + [128])
	$8 = *(($0 + [156]))
	if ( ((int_32)$8 == (int_32)*(($0 + [152]))) ){ goto $label$7 }
	$8 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [152]) == (int_32)$3), [64])
	if ( $8 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = CALL db_find_i64(*($3), *(($0 + [136])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$5 }
	$8 = CALL $121($3, $8)
	CALL eosio_assert(((int_32)*($8 + [152]) == (int_32)$3), [64])
	
.LABEL $label$6
	$7 = $8
	
.LABEL $label$5
	CALL memcpy(($1 + [152]), $7, [152])
	$7 = (($1 + [304]) + [24])
	$6 = *($7)
	if ( ((int_64)((int_64)$6 + (int_64)*($1 + [176])) <= (int_64)1000000) ){ goto $label$15 }
	$4 = *((($1 + [304]) + [32]))
	CALL eosio_assert(((int_64)*((($1 + [152]) + [32])) == (int_64)$4), [224])
	$5 = ((int_64)*((($1 + [152]) + [24])) + (int_64)$6)
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)$5 < (int_64)4611686018427387904), [304])
	CALL eosio_assert([1], [464])
	$6 = (int_64)5459781
	$7 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	
.LOOP $label$18:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$18 }
	
.LABEL $label$17
	$8 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$16 }
	goto $label$13 
	
.LABEL $label$15
	CALL eosio_assert(((int_64)*((($1 + [152]) + [32])) == (int_64)*((($1 + [304]) + [32]))), [224])
	$6 = ((int_64)*($7) + (int_64)*((($1 + [152]) + [24])))
	*($7) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [272])
	CALL eosio_assert(((int_64)*($7) < (int_64)4611686018427387904), [304])
	CALL eosio_assert([1], [464])
	$6 = (int_64)5459781
	$7 = [0]
	
.LOOP $label$19:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$20 }
	
.LOOP $label$21:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$21 }
	
.LABEL $label$20
	$8 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$19 }
	goto $label$11 
	
.LABEL $label$14
	$8 = [0]
	
.LABEL $label$13
	CALL eosio_assert($8, [128])
	CALL eosio_assert(((int_64)1397703940 == (int_64)$4), [1280])
	$6 = ((int_64)$5 + (int_64)-1000000)
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [1328])
	CALL eosio_assert(((int_64)$6 < (int_64)4611686018427387904), [1360])
	*(($1 + [184])) = $4
	*((($1 + [152]) + [24])) = $6
	CALL eosio_assert([1], [464])
	$6 = (int_64)5459781
	$7 = [0]
	
.LOOP $label$22:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$23 }
	
.LOOP $label$24:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$24 }
	
.LABEL $label$23
	$8 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$22 }
	goto $label$9 
	
.LABEL $label$12
	$8 = [0]
	
.LABEL $label$11
	CALL eosio_assert($8, [128])
	*(($1 + [184])) = (int_64)1397703940
	*(($1 + [176])) = (int_64)0
	goto $label$8 
	
.LABEL $label$10
	$8 = [0]
	
.LABEL $label$9
	CALL eosio_assert($8, [128])
	*(($1 + [336])) = (int_64)1397703940
	*(($1 + [328])) = (int_64)1000000
	
.LABEL $label$8
	CALL $173($2, ($1 + [304]), *($0))
	CALL $122($3, ($1 + [152]), *($0))
	
.LABEL $label$4
	*([0] + [4]) = ($9 + [368])
}

void .FUNC _ZN12richrichrich8claimeosEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [336])
	*([0] + [4]) = $10
	CALL require_auth($1)
	CALL eosio_assert(((int_32)CALL $45($0, $1) ^ (int_32)[1]), [48])
	$8 = [0]
	$9 = [0]
	$3 = *($2)
	if ( ((uint_64)((int_64)$3 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$6 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$9 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	
.LABEL $label$1
	CALL eosio_assert($9, [1888])
	CALL eosio_assert(((int_64)$3 > (int_64)0), [1920])
	*((($10 + [296]) + [32])) = [0]
	*($10 + [304]) = $1
	*($10 + [312]) = (int_64)-1
	*($10 + [320]) = (int_64)0
	$4 = *($0)
	*($10 + [296]) = $4
	*((($10 + [136]) + [32])) = (int_64)310366523908
	*($10 + [144]) = [0]
	*($10 + [136]) = (int_64)0
	*($10 + [152]) = (int_64)0
	*($10 + [160]) = (int_64)0
	CALL eosio_assert([1], [464])
	$6 = (int_64)1212369234
	
.LOOP $label$8:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$9 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$9 = [0]
	
.LABEL $label$6
	CALL eosio_assert($9, [128])
	*(($10 + [184])) = (int_64)310366523908
	*($10 + [176]) = (int_64)0
	CALL eosio_assert([1], [464])
	$6 = (int_64)1212369234
	
.LOOP $label$13:
	$8 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$9 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$9 = [0]
	
.LABEL $label$11
	CALL eosio_assert($9, [128])
	*(($10 + [200])) = (int_64)1397703940
	*($10 + [192]) = (int_64)0
	CALL eosio_assert([1], [464])
	$6 = (int_64)5459781
	
.LOOP $label$18:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$9 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$9 = [0]
	
.LABEL $label$16
	CALL eosio_assert($9, [128])
	*($10 + [208]) = [0]
	CALL $91(($10 + [216]), ($10 + [296]), $4, ($10 + [136]))
	$4 = *($2 + [8])
	CALL eosio_assert(((int_64)*(($10 + [280])) == (int_64)$4), [160])
	CALL eosio_assert(((int_64)*($10 + [272]) >= (int_64)$3), [2016])
	CALL memset(($10 + [80]), [0], [56])
	*(($8 = ($10 + [96]))) = (int_64)1398362884
	*($10 + [88]) = (int_64)0
	CALL eosio_assert([1], [464])
	$9 = ($0 + [568])
	$6 = (uint_64)*($8) >> (uint_64)(int_64)8)
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	
.LOOP $label$25:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$25 }
	
.LABEL $label$24
	$8 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$8 = [0]
	
.LABEL $label$21
	CALL eosio_assert($8, [128])
	*(($10 + [132])) = [0]
	*($10 + [124 align=4]) = (int_64)0
	CALL $70(($10 + [136]), $9, ($10 + [80]))
	$7 = *($10 + [124])
	if ( ($7 == 0) ){ goto $label$26 }
	*(($10 + [128])) = $7
	CALL $310($7)
	
.LABEL $label$26
	CALL eosio_assert(((int_64)*($10 + [168]) != (int_64)$1), [1952])
	CALL eosio_assert(((int_64)$4 == (int_64)*(($10 + [280]))), [1280])
	$6 = (int_64)
	*(($7 = ($10 + [272]))) = $6(*($7) - $3))
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [1328])
	CALL eosio_assert(((int_64)*($7) < (int_64)4611686018427387904), [1360])
	*((($10 + [64]) + [8])) = *(($2 + [8]))
	*((($10 + [48]) + [8])) = [0]
	*($10 + [64]) = *($2)
	*($10 + [48]) = (int_64)0
	$8 = CALL strlen([1984])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$27 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$30 }
	*($10 + [48]) = ($8 << [1])
	$9 = (($10 + [48]) | [1])
	if ( $8 ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	$7 = (($8 + [16]) & [-16])
	$9 = CALL $309($7)
	*($10 + [48]) = ($7 | [1])
	*($10 + [56]) = $9
	*($10 + [52]) = $8
	
.LABEL $label$29
	CALL memcpy($9, [1984], $8)
	
.LABEL $label$28
	$7 = [0]
	*(($9 + $8)) = [0]
	*((($10 + [8]) + [8])) = *((($10 + [64]) + [8]))
	*($10 + [8]) = *($10 + [64])
	CALL $49($0, $1, ($10 + [8]), ($10 + [48]))
	if ( ((*($10 + [48]) & [1]) == 0) ){ goto $label$31 }
	CALL $310(*($10 + [56]))
	
.LABEL $label$31
	CALL $81(($10 + [296]), ($10 + [216]), *($0))
	*(($10 + [40])) = (int_64)1398362884
	*($10 + [32]) = (int_64)0
	*($10 + [24]) = (int_64)0
	CALL eosio_assert([1], [464])
	$9 = ($0 + [848])
	$6 = (int_64)5462355
	
.LOOP $label$33:
	$8 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$34 }
	
.LOOP $label$35:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$32 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$35 }
	
.LABEL $label$34
	$8 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$33 }
	
.LABEL $label$32
	CALL eosio_assert($8, [128])
	$7 = *(($0 + [876]))
	if ( ((int_32)$7 == (int_32)*(($0 + [872]))) ){ goto $label$37 }
	$7 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$9), [64])
	if ( $7 ){ goto $label$36 }
	$7 = ($10 + [24])
	goto $label$36 
	
.LABEL $label$37
	$7 = CALL db_find_i64(*(($0 + [848])), *(($0 + [856])), (int_64)4154289181272571904, (int_64)4154289181272571904)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$38 }
	$7 = CALL $77($9, $7)
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$9), [64])
	goto $label$36 
	
.LABEL $label$38
	$7 = ($10 + [24])
	
.LABEL $label$36
	*(($5 = (($10 + [80]) + [16]))) = *(($7 + [16]))
	*(($8 = (($10 + [80]) + [8]))) = *(($7 + [8]))
	*($10 + [80]) = *($7)
	$7 = ((int_64)*($5) == (int_64)*(($2 + [8])))
	CALL eosio_assert($7, [160])
	$1 = *($2)
	$6 = *($8)
	CALL eosio_assert(((int_64)$6 >= (int_64)$1), [2000])
	CALL eosio_assert($7, [1280])
	$6 = (int_64)
	*($8) = $6($6 - $1))
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [1328])
	CALL eosio_assert(((int_64)$6 < (int_64)4611686018427387904), [1360])
	CALL $80($9, ($10 + [80]), *($0))
	$7 = *($10 + [180])
	if ( ($7 == 0) ){ goto $label$39 }
	*(($10 + [184])) = $7
	CALL $310($7)
	
.LABEL $label$39
	$0 = *($10 + [320])
	if ( ($0 == 0) ){ goto $label$40 }
	$2 = ($10 + [324])
	$7 = *($2)
	if ( ((int_32)$7 == (int_32)$0) ){ goto $label$42 }
	
.LOOP $label$43:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$44 }
	CALL $310($8)
	
.LABEL $label$44
	if ( ((int_32)$0 != (int_32)$7) ){ goto $label$43 }
	$7 = *(($10 + [320]))
	goto $label$41 
	
.LABEL $label$42
	$7 = $0
	
.LABEL $label$41
	*($2) = $0
	CALL $310($7)
	
.LABEL $label$40
	*([0] + [4]) = ($10 + [336])
	return (unreachable)
	
.LABEL $label$27
	CALL $311(($10 + [48]))
}

void .FUNC $34 (int_32 $0, int_32 $1)
{
	CALL require_auth(*($0))
}

int_32 .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = (*([0] + [4]) - [128])
	$7 = $2
	*([0] + [4]) = $2
	$3 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$5 = [0]
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$1 }
	if ( ($4 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($4)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($2 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $4)
	
.LABEL $label$1
	*((($2 = CALL memset($7, [0], [40])) + [16])) = (int_64)1398362884
	*($2 + [8]) = (int_64)0
	CALL eosio_assert([1], [464])
	$6 = (int_64)5462355
	
.LOOP $label$5:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($7, [128])
	*($2 + [52]) = $5
	*($2 + [48]) = $5
	*($2 + [56]) = ($5 + $4)
	*($2 + [40]) = ($2 + [48])
	*($2 + [92]) = ($2 | [1])
	*($2 + [96]) = ($2 + [8])
	*($2 + [100]) = ($2 + [24])
	*($2 + [104]) = ($2 + [32])
	*($2 + [88]) = $2
	CALL $119(($2 + [88]), ($2 + [40]))
	if ( ($4 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	CALL memcpy(($2 + [48]), $2, [40])
	CALL memcpy(($2 + [88]), ($2 + [48]), [40])
	$1 = ($0 + int_32($3 >> [1]))
	if ( (($3 & [1]) == 0) ){ goto $label$9 }
	$8 = *((*($1) + $8))
	
.LABEL $label$9
	CALL void $1((int_32 ($2 + [88])), (int_32 $8))
	*([0] + [4]) = ($2 + [128])
	return [1]
}

void .FUNC _ZN12richrichrich7usepropEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [64])
	*([0] + [4]) = $8
	CALL require_auth($1)
	*(($8 + [40])) = [0]
	*($8 + [16]) = $1
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	$6 = *($0)
	*($8 + [8]) = $6
	$7 = [0]
	$5 = CALL db_find_i64($6, $1, (int_64)-5915095480504680448, $2)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $177(($8 + [8]), $5)
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)($8 + [8])), [64])
	
.LABEL $label$1
	$5 = ((int_32)$7 != (int_32)[0])
	CALL eosio_assert($5, [2048])
	CALL $178($0, $1, $2)
	if ( ((int_32)*($7 + [8]) != (int_32)[1]) ){ goto $label$7 }
	$3 = *(($8 + [32]))
	$5 = *(($8 + [36]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$8 }
	$7 = ($5 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$9:
	if ( ((int_64)*(*($7)) == (int_64)$2) ){ goto $label$8 }
	$5 = $7
	$0 = ($7 + [-24])
	$7 = $0
	if ( ((int_32)($0 + $4) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$6 }
	$7 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)($8 + [8])), [64])
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert($5, [848])
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)($8 + [8])), [960])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)CALL $fimport$3()), [1008])
	*($7 + [8]) = (*($7 + [8]) + [255])
	$2 = *($7)
	CALL eosio_assert([1], [1072])
	CALL eosio_assert([1], [560])
	CALL memcpy(($8 + [48]), $7, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy((($8 + [48]) | [8]), ($7 + [8]), [1])
	CALL db_update_i64(*($7 + [20]), (int_64)0, ($8 + [48]), [9])
	$7 = ($8 + [24])
	if ( (uint_64)($2 <= *($7)) ){ goto $label$4 }
	*($7) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	$5 = *($8 + [32])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$7 = [0]
	$0 = CALL db_find_i64(*($8 + [8]), *(($8 + [16])), (int_64)-5915095480504680448, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	$7 = CALL $177(($8 + [8]), $0)
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)($8 + [8])), [64])
	
.LABEL $label$5
	$0 = ((int_32)$7 != (int_32)[0])
	CALL eosio_assert($0, [336])
	CALL eosio_assert($0, [384])
	$0 = CALL db_next_i64(*($7 + [20]), ($8 + [48]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$10 }
	CALL $177(($8 + [8]), $0)
	
.LABEL $label$10
	CALL $179(($8 + [8]), $7)
	
.LABEL $label$4
	$5 = *($8 + [32])
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($8 + [36])
	$7 = *($4)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$12 }
	
.LOOP $label$13:
	$7 = ($7 + [-24])
	$0 = *($7)
	*($7) = [0]
	if ( ($0 == 0) ){ goto $label$14 }
	CALL $310($0)
	
.LABEL $label$14
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$13 }
	$7 = *(($8 + [32]))
	goto $label$11 
	
.LABEL $label$12
	$7 = $5
	
.LABEL $label$11
	*($4) = $5
	CALL $310($7)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [64])
}

void .FUNC $280 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = (*([0] + [4]) - [304])
	*([0] + [4]) = $1
	$1 = CALL memset($1, [0], [152])
	$4 = CALL $120($1)
	$2 = ($0 + [128])
	$3 = *(($0 + [156]))
	if ( ((int_32)$3 == (int_32)*(($0 + [152]))) ){ goto $label$3 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [152]) == (int_32)$2), [64])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$3 = CALL db_find_i64(*($2), *(($0 + [136])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $121($2, $3)
	CALL eosio_assert(((int_32)*($3 + [152]) == (int_32)$2), [64])
	
.LABEL $label$2
	$4 = $3
	
.LABEL $label$1
	CALL memcpy(($1 + [152]), $4, [152])
	*($1 + [160]) = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [43200])
	CALL $122($2, ($1 + [152]), *($0))
	*([0] + [4]) = ($1 + [304])
}

void .FUNC _ZN12richrichrich7addpropEyyh (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	CALL require_auth(*($0))
	*((($7 + [8]) + [32])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$5 = *($0)
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	$4 = CALL db_find_i64($5, $1, (int_64)-5915095480504680448, $2)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	$0 = CALL $177(($7 + [8]), $4)
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)($7 + [8])), [64])
	CALL eosio_assert([1], [848])
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)($7 + [8])), [960])
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$3()), [1008])
	*($0 + [8]) = (*($0 + [8]) + $3)
	$1 = *($0)
	CALL eosio_assert([1], [1072])
	CALL eosio_assert([1], [560])
	CALL memcpy(($7 + [48]), $0, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy((($7 + [48]) | [8]), ($0 + [8]), [1])
	CALL db_update_i64(*($0 + [20]), (int_64)0, ($7 + [48]), [9])
	$0 = ($7 + [24])
	if ( (uint_64)($1 <= *($0)) ){ goto $label$3 }
	*($0) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	$4 = *($7 + [32])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$5 = *($0)
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$3()), [896])
	*(($0 = CALL $309([32])) + [16]) = ($7 + [8])
	*($0 + [8]) = $3
	*($0) = $2
	CALL eosio_assert([1], [560])
	CALL memcpy(($7 + [48]), $0, [8])
	CALL eosio_assert([1], [560])
	CALL memcpy((($7 + [48]) | [8]), ($0 + [8]), [1])
	$1 = *($0)
	$4 = CALL db_store_i64(*((($7 + [8]) + [8])), (int_64)-5915095480504680448, $5, $1, ($7 + [48]), [9])
	*($0 + [20]) = $4
	$3 = ($7 + [24])
	if ( (uint_64)($1 <= *($3)) ){ goto $label$5 }
	*($3) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($7 + [72]) = $0
	$1 = *($0)
	*($7 + [48]) = $1
	*($7 + [68]) = $4
	$6 = ($7 + [36])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($7 + [40]))) ){ goto $label$7 }
	*($3 + [8]) = $1
	*($3 + [16]) = $4
	*($7 + [72]) = [0]
	*($3) = $0
	*($6) = ($3 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $181(($7 + [32]), ($7 + [72]), ($7 + [48]), ($7 + [68]))
	
.LABEL $label$6
	$0 = *($7 + [72])
	*($7 + [72]) = [0]
	if ( ($0 == 0) ){ goto $label$3 }
	CALL $310($0)
	
.LABEL $label$3
	$4 = *($7 + [32])
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($7 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$11 }
	CALL $310($3)
	
.LABEL $label$11
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($7 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $4
	
.LABEL $label$8
	*($6) = $4
	CALL $310($0)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [80])
}

int_32 .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($1 + [4])
	$7 = *($1)
	$6 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($9 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8 + [16]) = (int_64)0
	*($8 + [8]) = (int_64)0
	*($8 + [24]) = [0]
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [784])
	CALL memcpy(($8 + [8]), $6, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [784])
	$9 = (($8 + [8]) + [8])
	CALL memcpy($9, ($6 + [8]), [8])
	CALL eosio_assert(((int_32)$1 != (int_32)[16]), [784])
	$5 = (($8 + [8]) + [16])
	CALL memcpy($5, ($6 + [16]), [1])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($6)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$6 = *($5)
	$4 = *($9)
	$3 = *($8 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$7 = *((*($1) + $7))
	
.LABEL $label$5
	CALL void $1((int_32 $3), (int_64 $4), (int_64 ($6 & [255])), (int_32 $7))
	*([0] + [4]) = ($8 + [32])
	return [1]
}

void .FUNC $281 (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [304])
	*([0] + [4]) = $8
	$3 = (CASTING int_64)(int_32 $2)
	$4 = *(($0 + [912]))
	$7 = *(($0 + [916]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$2 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($2)) == (int_64)$3) ){ goto $label$1 }
	$7 = $2
	$6 = ($2 + [-24])
	$2 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$6 = ($0 + [888])
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$2 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*(($2 + [52])) == (int_32)$6), [64])
	goto $label$3 
	
.LABEL $label$4
	$2 = [0]
	$7 = CALL db_find_i64(*(($0 + [888])), *(($0 + [896])), (int_64)-7950542192169189376, $3)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$2 = CALL $204($6, $7)
	CALL eosio_assert(((int_32)*($2 + [52]) == (int_32)$6), [64])
	
.LABEL $label$3
	$3 = CALL $282($0)
	CALL $283(($8 + [152]), $2)
	if ( ((int_64)$3 != (int_64)*($8 + [152])) ){ goto $label$5 }
	$2 = CALL memset($8, [0], [152])
	$7 = CALL $120($2)
	$6 = ($0 + [128])
	$5 = *(($0 + [156]))
	if ( ((int_32)$5 == (int_32)*(($0 + [152]))) ){ goto $label$8 }
	$5 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [152]) == (int_32)$6), [64])
	if ( $5 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$5 = CALL db_find_i64(*($6), *(($0 + [136])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$6 }
	$5 = CALL $121($6, $5)
	CALL eosio_assert(((int_32)*($5 + [152]) == (int_32)$6), [64])
	
.LABEL $label$7
	$7 = $5
	
.LABEL $label$6
	CALL memcpy(($2 + [152]), $7, [152])
	*($2 + [288]) = $1
	CALL $122($6, ($2 + [152]), *($0))
	
.LABEL $label$5
	*([0] + [4]) = ($8 + [304])
}