(data (i32.const 4) "\b0k\00\00")
(data (i32.const 16) "user account does not exist\00")
(data (i32.const 48) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 112) "external account did not exist\00")
(data (i32.const 144) "cannot pass end iterator to modify\00")
(data (i32.const 192) "object passed to modify is not in multi_index\00")
(data (i32.const 240) "cannot modify objects in table of another contract\00")
(data (i32.const 304) "updater cannot change primary key when modifying an object\00")
(data (i32.const 368) "publytoken11\00")
(data (i32.const 384) "link internal account to external account\00")
(data (i32.const 432) "write\00")
(data (i32.const 448) "error reading iterator\00")
(data (i32.const 480) "read\00")
(data (i32.const 496) "account does not exist\00")
(data (i32.const 528) "overdrawn balance\00")
(data (i32.const 560) "attempt to subtract asset with different symbol\00")
(data (i32.const 608) "subtraction underflow\00")
(data (i32.const 640) "subtraction overflow\00")
(data (i32.const 672) "cannot transfer to self\00")
(data (i32.const 704) "to account does not exist\00")
(data (i32.const 736) "unable to find key\00")
(data (i32.const 768) "invalid quantity\00")
(data (i32.const 800) "must transfer positive quantity\00")
(data (i32.const 832) "symbol precision mismatch\00")
(data (i32.const 864) "memo has more than 256 bytes\00")
(data (i32.const 896) "attempt to add asset with different symbol\00")
(data (i32.const 944) "addition underflow\00")
(data (i32.const 976) "addition overflow\00")
(data (i32.const 1008) "cannot create objects in table of another contract\00")
(data (i32.const 1072) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 1136) "invalid symbol name\00")
(data (i32.const 1168) "no balance object found\00")
(data (i32.const 1200) "object passed to erase is not in multi_index\00")
(data (i32.const 1248) "cannot erase objects in table of another contract\00")
(data (i32.const 1312) "attempt to remove object that was not in multi_index\00")
(data (i32.const 1376) "external account already exist\00")
(data (i32.const 1408) "account already exist\00")
(data (i32.const 1440) "\"\"\00")
(data (i32.const 1456) "nothing to delete\00")
(data (i32.const 1488) "cannot pass end iterator to erase\00")
(data (i32.const 1536) "cannot increment end iterator\00")
(data (i32.const 1568) "refund\00")
(data (i32.const 1584) "from account does not exist\00")
(data (i32.const 1616) "active\00")
(data (i32.const 1632) "stake event\00")
(data (i32.const 1648) "there is no staked amount\00")
(data (i32.const 1680) "unstake amount overdue\00")
(data (i32.const 1712) "invalid supply\00")
(data (i32.const 1728) "max-supply must be positive\00")
(data (i32.const 1760) "token with symbol already exists\00")
(data (i32.const 1808) "token with symbol does not exist, create token before issue\00")
(data (i32.const 1872) "must issue positive quantity\00")
(data (i32.const 1904) "quantity exceeds available supply\00")
(data (i32.const 1952) "newdexpocket\00")
(data (i32.const 1968) "You can not transfer to Newdex in a certain period\00")
(data (i32.const 2032) "eosbtexbonus\00")
(data (i32.const 2048) "You can not transfer to this exchange in a certain period\00")
(data (i32.const 2112) "eosconvertbt\00")
(data (i32.const 2128) "eosbtexteams\00")
(data (i32.const 2144) "btexexchange\00")
(data (i32.const 2160) "eosbtextoken\00")
(data (i32.const 2176) "eosbtexfunds\00")
(data (i32.const 2192) "send lockup is enabled\00")
(data (i32.const 2224) "send lock is enable\00")
(data (i32.const 2256) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 2320) "multiplication overflow\00")
(data (i32.const 2352) "multiplication underflow\00")
(data (i32.const 2384) "divide by zero\00")
(data (i32.const 2400) "signed division overflow\00")
(data (i32.const 2432) "lock account does not exist\00")
(data (i32.const 2464) "lock account already exists in the table\00")
(data (i32.const 2512) "unlock account does not exist\00")
(data (i32.const 2544) "there is no matched unlock account in the table\00")
(data (i32.const 2592) "onerror\00")
(data (i32.const 2608) "eosio\00")
(data (i32.const 2624) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 2688) "get\00")
(data (i32.const 11088) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(import "env" "__multi3" (func $fimport$0 (param i32 i64 i64 i64 i64)))
(import "env" "abort" (func $fimport$1))
(import "env" "action_data_size" (func $fimport$2 (result i32)))
(import "env" "current_receiver" (func $fimport$3 (result i64)))
(import "env" "current_time" (func $fimport$4 (result i64)))
(import "env" "db_find_i64" (func $fimport$5 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$6 (param i32 i32 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$7 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$8 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$9 (param i32)))
(import "env" "db_store_i64" (func $fimport$10 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$11 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$12 (param i32 i32)))
(import "env" "has_auth" (func $fimport$13 (param i64) (result i32)))
(import "env" "is_account" (func $fimport$14 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$15 (param i32 i32 i32) (result i32)))
(import "env" "read_action_data" (func $fimport$16 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$17 (param i64)))
(import "env" "require_auth2" (func $fimport$18 (param i64 i64)))
(import "env" "require_recipient" (func $fimport$19 (param i64)))
(import "env" "send_inline" (func $fimport$20 (param i32 i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_ZN5eosio5token5checkEyyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE" (func $5))
(export "_ZN5eosio5token9itransferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $9))
(export "_ZN5eosio5token4drawEyNS_5assetE" (func $10))
(export "_ZN5eosio5token12sub_balance2EyNS_5assetE" (func $14))
(export "_ZN5eosio5token12add_balance2EyNS_5assetEy" (func $15))
(export "_ZN5eosio5token7prepareEyyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE" (func $29))
(export "_ZN5eosio5token10newaccountEy" (func $30))
(export "_ZN5eosio5token10delaccountEy" (func $32))
(export "_ZN5eosio5token9delcontblEyy" (func $35))
(export "_ZN5eosio5token6thanksEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $36))
(export "_ZN5eosio5token6updateEyNS_5assetE" (func $37))
(export "_ZN5eosio5token6refundEyy" (func $38))
(export "_ZN5eosio5token4saveEyNS_5assetE" (func $40))
(export "_ZN5eosio5token11pubtransferEybybNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $44))
(export "_ZN5eosio5token5stakeEybybNS_5assetE" (func $52))
(export "_ZN5eosio5token7unstakeEybybNS_5assetE" (func $59))
(export "_ZN5eosio5token6createEyNS_5assetE" (func $61))
(export "_ZN5eosio5token5issueEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $63))
(export "_ZN5eosio5token11add_balanceEyNS_5assetEy" (func $64))
(export "_ZN5eosio5token8transferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $65))
(export "_ZN5eosio5token11sub_balanceEyNS_5assetE" (func $67))
(export "_ZN5eosio5token4lockEym" (func $70))
(export "_ZN5eosio5token6unlockEy" (func $72))
(export "apply" (func $74))
(export "malloc" (func $93))
(export "free" (func $96))
(export "strlen" (func $103))
(export "memcmp" (func $104))
(table $0 17 17 anyfunc)
(elem (i32.const 0) $105 $30 $59 $52 $32 $44 $5 $65 $63 $70 $72 $38 $61 $29 $37 $36 $35)



void .FUNC $98 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

void .FUNC $99 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $95($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [11088])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $95 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [11174]) == 0) ){ goto $label$2 }
	$7 = *([0] + [11176])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [11174]) = [1]
	$7 = ($7 << [16])
	*([0] + [11176]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [11176])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [11176]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [11174]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [11174]) = [1]
	$3 = ($3 << [16])
	*([0] + [11176]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [11176])
	
.LABEL $label$8
	*([0] + [11176]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [11076])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [10884]
	$1 = (((int_32)$2 * (int_32)[12]) + [10884])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_32 .FUNC $97 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [11180])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [480])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [480])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [480])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [480])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $87(*($1), ($0 + [32]))
}

void .FUNC $91 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	*(($5 + [44])) = *(($1 + [28]))
	*(($4 = (($5 + [32]) + [8]))) = *(($1 + [24]))
	*($5 + [32]) = *($1 + [16])
	*($5 + [36]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $102(($5 + [16]), ($1 + [32]))
	*((($5 + [48]) + [8])) = *($4)
	*($5 + [48]) = *($5 + [32])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($5 + [80]) + [8]))) = *((($5 + [48]) + [8]))
	*($5 + [80]) = *($5 + [48])
	CALL $102(($5 + [64]), ($5 + [16]))
	*(($5 + [8])) = *($4)
	*($5) = *($5 + [80])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 $5), (int_32 ($5 + [64])), (int_32 $1))
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $98(*($5 + [72]))
	
.LABEL $label$2
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $98(*($5 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [96])
}

void .FUNC $92 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*((($4 + [32]) + [12])) = *(($1 + [20]))
	*(($3 = (($4 + [32]) + [8]))) = *(($1 + [16]))
	*($4 + [32]) = *($1 + [8])
	*($4 + [36]) = *(($1 + [12]))
	$2 = *($1)
	CALL $102(($4 + [16]), ($1 + [24]))
	*((($4 + [48]) + [8])) = *($3)
	*($4 + [48]) = *($4 + [32])
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*(*($0)) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($3 = (($4 + [80]) + [8]))) = *((($4 + [48]) + [8]))
	*($4 + [80]) = *($4 + [48])
	CALL $102(($4 + [64]), ($4 + [16]))
	*(($4 + [8])) = *($3)
	*($4) = *($4 + [80])
	CALL void $0((int_32 $2), (int_64 $4), (int_32 ($4 + [64])), (int_32 $1))
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $98(*($4 + [72]))
	
.LABEL $label$2
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $98(*($4 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($4 + [96])
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $94([2692], $0)
}

void .FUNC _ZN5eosio5token6refundEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [176])
	*([0] + [4]) = $11
	*((($11 + [128]) + [32])) = [0]
	*($11 + [136]) = $1
	*($11 + [144]) = (int_64)-1
	$9 = (int_64)0
	*($11 + [152]) = (int_64)0
	$8 = *($0)
	*($11 + [128]) = $8
	$5 = [0]
	$7 = CALL db_find_i64($8, $1, (int_64)-3102536759402283008, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $39(($11 + [128]), $7)
	CALL eosio_assert(((int_32)*($5 + [28]) == (int_32)($11 + [128])), [48])
	
.LABEL $label$1
	*((($11 + [88]) + [32])) = [0]
	*($11 + [104]) = (int_64)-1
	*($11 + [112]) = (int_64)0
	$2 = *($0)
	*($11 + [88]) = $2
	*($11 + [96]) = $1
	$7 = CALL $7(($11 + [88]), CALL $fimport$5($2, $1, (int_64)-5868309319417593856, $1))
	CALL eosio_assert(((int_32)*($7 + [48]) == (int_32)($11 + [88])), [48])
	$3 = *($7 + [8])
	$8 = (int_64)59
	$7 = [1440]
	$10 = (int_64)0
	
.LOOP $label$2:
	if ( ((uint_64)$9 > (uint_64)(int_64)1) ){ goto $label$7 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$4 = ($4 + [165])
	goto $label$5 
	
.LABEL $label$7
	$2 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$4
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$3
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$2 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$2 }
	if ( ((int_64)$3 != (int_64)$10) ){ goto $label$10 }
	$9 = *(($5 + [16]))
	*((($11 + [72]) + [8])) = $9
	$2 = *($5 + [8])
	*((($11 + [8]) + [8])) = $9
	*($11 + [72]) = $2
	*($11 + [12]) = *($11 + [76])
	*($11 + [8]) = *($11 + [72])
	CALL _ZN5eosio5token4saveEyNS_5assetE($0, $1, ($11 + [8]))
	goto $label$9 
	
.LABEL $label$10
	$9 = (int_64)0
	$2 = (int_64)59
	$7 = [368]
	$10 = (int_64)0
	
.LOOP $label$11:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$12 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$14 }
	$4 = ($4 + [165])
	goto $label$13 
	
.LABEL $label$14
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$13
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$12
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$8 | (int_64)$10)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$11 }
	*((($11 + [56]) + [8])) = *(($5 + [16]))
	$9 = *($5 + [8])
	*((($11 + [40]) + [8])) = [0]
	*($11 + [56]) = $9
	*($11 + [40]) = (int_64)0
	$7 = CALL strlen([1568])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$8 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$17 }
	*($11 + [40]) = ($7 << [1])
	$4 = (($11 + [40]) | [1])
	if ( $7 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$6 = (($7 + [16]) & [-16])
	$4 = CALL $97($6)
	*($11 + [40]) = ($6 | [1])
	*($11 + [48]) = $4
	*($11 + [44]) = $7
	
.LABEL $label$16
	CALL memcpy($4, [1568], $7)
	
.LABEL $label$15
	*(($4 + $7)) = [0]
	*((($11 + [24]) + [8])) = *((($11 + [56]) + [8]))
	*($11 + [24]) = *($11 + [56])
	CALL _ZN5eosio5token9itransferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $10, $3, ($11 + [24]), ($11 + [40]))
	if ( ((*($11 + [40]) & [1]) == 0) ){ goto $label$9 }
	CALL $98(*($11 + [48]))
	
.LABEL $label$9
	$7 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($7, [1488])
	CALL eosio_assert($7, [1536])
	$7 = CALL db_next_i64(*($5 + [32]), ($11 + [168]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$18 }
	CALL $39(($11 + [128]), $7)
	
.LABEL $label$18
	CALL $41(($11 + [128]), $5)
	$5 = *($11 + [112])
	if ( ($5 == 0) ){ goto $label$19 }
	$0 = ($11 + [116])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$21 }
	
.LOOP $label$22:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$23 }
	CALL $98($4)
	
.LABEL $label$23
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$22 }
	$7 = *(($11 + [112]))
	goto $label$20 
	
.LABEL $label$21
	$7 = $5
	
.LABEL $label$20
	*($0) = $5
	CALL $98($7)
	
.LABEL $label$19
	$5 = *($11 + [152])
	if ( ($5 == 0) ){ goto $label$24 }
	$0 = ($11 + [156])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$26 }
	
.LOOP $label$27:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$28 }
	CALL $98($4)
	
.LABEL $label$28
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$27 }
	$7 = *(($11 + [152]))
	goto $label$25 
	
.LABEL $label$26
	$7 = $5
	
.LABEL $label$25
	*($0) = $5
	CALL $98($7)
	
.LABEL $label$24
	*([0] + [4]) = ($11 + [176])
	return (unreachable)
	
.LABEL $label$8
	CALL $99(($11 + [40]))
}

int_32 .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [432])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [432])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [432])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $46($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [432])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [432])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $50(CALL $49($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $43 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $97(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $101($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $98($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $98($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [480])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [480])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [480])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [480])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC $41 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [28]) == (int_32)$0), [1200])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1248])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1312])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $98($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $98($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [32]))
}

void .FUNC _ZN5eosio5token4saveEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [112])
	*([0] + [4]) = $7
	*(($7 + [40])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$3 = *($0)
	*($7 + [8]) = $3
	*($7 + [16]) = $1
	$6 = [0]
	$4 = CALL db_find_i64($3, $1, (int_64)-5868309319417593856, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $7(($7 + [8]), $4)
	CALL eosio_assert(((int_32)*($6 + [48]) == (int_32)($7 + [8])), [48])
	
.LABEL $label$1
	$4 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($4, [496])
	$3 = *($0)
	CALL eosio_assert($4, [144])
	CALL eosio_assert(((int_32)*($6 + [48]) == (int_32)($7 + [8])), [192])
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$3()), [240])
	$1 = *($6)
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($6 + [24]))), [896])
	$5 = ((int_64)*($6 + [16]) + (int_64)*($2))
	*($6 + [16]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [944])
	CALL eosio_assert(((int_64)*($6 + [16]) < (int_64)4611686018427387904), [976])
	CALL eosio_assert(((int_64)$1 == (int_64)*($6)), [304])
	*($7 + [104]) = (($7 + [48]) + [48])
	*($7 + [100]) = ($7 + [48])
	*($7 + [96]) = ($7 + [48])
	CALL $8(($7 + [96]), $6)
	CALL db_update_i64(*($6 + [52]), $3, ($7 + [48]), [48])
	$6 = ($7 + [24])
	if ( (uint_64)($1 <= *($6)) ){ goto $label$2 }
	*($6) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	$0 = *($7 + [32])
	if ( ($0 == 0) ){ goto $label$3 }
	$4 = ($7 + [36])
	$6 = *($4)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$5 }
	
.LOOP $label$6:
	$6 = ($6 + [-24])
	$2 = *($6)
	*($6) = [0]
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $98($2)
	
.LABEL $label$7
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$6 }
	$6 = *(($7 + [32]))
	goto $label$4 
	
.LABEL $label$5
	$6 = $0
	
.LABEL $label$4
	*($4) = $0
	CALL $98($6)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [112])
}

void .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [432])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [432])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [432])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [432])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $51(*($1), ($0 + [32]))
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $97($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $101($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $98($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $45 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [96])
	*([0] + [4]) = $9
	*($9 + [16]) = [0]
	*($9 + [8]) = (int_64)0
	$6 = [0]
	$7 = [0]
	$8 = [0]
	$4 = (*($2 + [4]) - *($2))
	$5 = int_32($4 >> [4])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$8 = CALL $97($4)
	$6 = ($8 + ($5 << [4]))
	*(($9 + [16])) = $6
	*($9 + [8]) = $8
	*($9 + [12]) = $8
	$7 = *($2)
	$2 = (*(($2 + [4])) - $7)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($8, $7, $2)
	$7 = ($8 + $2)
	*($9 + [12]) = $7
	goto $label$2 
	
.LABEL $label$3
	$7 = $8
	
.LABEL $label$2
	*(($9 + [44])) = $7
	*($9 + [32]) = $1
	*(($9 + [16])) = [0]
	*(($9 + [48])) = $6
	*($9 + [24]) = $0
	*($9 + [40]) = $8
	*($9 + [8]) = (int_64)0
	*($9 + [52]) = [0]
	*((($9 + [24]) + [32])) = [0]
	*((($9 + [24]) + [36])) = [0]
	$8 = *($3 + [32])
	$2 = ( *(($3 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($2 + [32])
	$0 = (CASTING uint_64)(uint_32 $2)
	$2 = ($9 + [52])
	
.LOOP $label$4:
	$8 = ($8 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$4 }
	if ( ($8 == 0) ){ goto $label$6 }
	CALL $46($2, $8)
	$2 = *(($9 + [56]))
	$8 = *(($9 + [52]))
	goto $label$5 
	
.LABEL $label$6
	$2 = [0]
	$8 = [0]
	
.LABEL $label$5
	*($9 + [84]) = $8
	*($9 + [80]) = $8
	*($9 + [88]) = $2
	*($9 + [64]) = ($9 + [80])
	*($9 + [72]) = $3
	CALL $47(($9 + [72]), ($9 + [64]))
	CALL $48(($9 + [80]), ($9 + [24]))
	$8 = *($9 + [80])
	CALL send_inline($8, (*($9 + [84]) - $8))
	$8 = *($9 + [80])
	if ( ($8 == 0) ){ goto $label$7 }
	*($9 + [84]) = $8
	CALL $98($8)
	
.LABEL $label$7
	$8 = *($9 + [52])
	if ( ($8 == 0) ){ goto $label$8 }
	*(($9 + [56])) = $8
	CALL $98($8)
	
.LABEL $label$8
	$8 = *($9 + [40])
	if ( ($8 == 0) ){ goto $label$9 }
	*(($9 + [44])) = $8
	CALL $98($8)
	
.LABEL $label$9
	$8 = *($9 + [8])
	if ( ($8 == 0) ){ goto $label$10 }
	*($9 + [12]) = $8
	CALL $98($8)
	
.LABEL $label$10
	*([0] + [4]) = ($9 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $101(($9 + [8]))
}

void .FUNC _ZN5eosio5token11pubtransferEybybNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_32 $20
	$20 = (*([0] + [4]) - [912])
	*([0] + [4]) = $20
	CALL require_auth(*($0))
	$8 = ((int_32)$4 ^ (int_32)[1])
	$7 = ((int_32)$2 ^ (int_32)[1])
	if ( $7 ){ goto $label$1 }
	if ( $8 ){ goto $label$1 }
	$10 = [0]
	*((($20 + [808]) + [32])) = [0]
	*($20 + [824]) = (int_64)-1
	*($20 + [832]) = (int_64)0
	$14 = *($0)
	*($20 + [808]) = $14
	*($20 + [816]) = $1
	$12 = [0]
	$9 = CALL db_find_i64($14, $1, (int_64)-5868309319417593856, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$2 }
	$12 = CALL $7(($20 + [808]), $9)
	CALL eosio_assert(((int_32)*($12 + [48]) == (int_32)($20 + [808])), [48])
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [1584])
	*((($20 + [768]) + [32])) = [0]
	*($20 + [784]) = (int_64)-1
	*($20 + [792]) = (int_64)0
	$14 = *($0)
	*($20 + [768]) = $14
	*($20 + [776]) = $3
	$9 = CALL db_find_i64($14, $3, (int_64)-5868309319417593856, $3)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$3 }
	$10 = CALL $7(($20 + [768]), $9)
	CALL eosio_assert(((int_32)*($10 + [48]) == (int_32)($20 + [768])), [48])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [704])
	$18 = *($12 + [8])
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [1440]
	$15 = (int_64)0
	
.LOOP $label$4:
	if ( ((uint_64)$14 > (uint_64)(int_64)1) ){ goto $label$9 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$9 = ($9 + [165])
	goto $label$7 
	
.LABEL $label$9
	$16 = (int_64)0
	if ( ((uint_64)$14 <= (uint_64)(int_64)11) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$6
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$5
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$16 | (int_64)$15)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$4 }
	$19 = *($10 + [8])
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [1440]
	$17 = (int_64)0
	
.LOOP $label$10:
	if ( ((uint_64)$14 > (uint_64)(int_64)1) ){ goto $label$15 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$14 }
	$9 = ($9 + [165])
	goto $label$13 
	
.LABEL $label$15
	$16 = (int_64)0
	if ( ((uint_64)$14 <= (uint_64)(int_64)11) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$14
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$13
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$12
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$11
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$17 = ((int_64)$16 | (int_64)$17)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$10 }
	if ( ((int_64)$18 != (int_64)$15) ){ goto $label$21 }
	if ( ((int_64)$19 == (int_64)$17) ){ goto $label$20 }
	$14 = *(($5 + [8]))
	*((($20 + [624]) + [8])) = $14
	$16 = *($5)
	*((($20 + [96]) + [8])) = $14
	*($20 + [624]) = $16
	*($20 + [100]) = *($20 + [628])
	*($20 + [96]) = *($20 + [624])
	CALL _ZN5eosio5token4drawEyNS_5assetE($0, $1, ($20 + [96]))
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [368]
	$15 = (int_64)0
	
.LOOP $label$22:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$23 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$25 }
	$9 = ($9 + [165])
	goto $label$24 
	
.LABEL $label$25
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$24
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$23
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$22 }
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [368]
	$17 = (int_64)0
	
.LOOP $label$26:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$27 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$29 }
	$9 = ($9 + [165])
	goto $label$28 
	
.LABEL $label$29
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$28
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$27
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$17 = ((int_64)$13 | (int_64)$17)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$26 }
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [1616]
	$18 = (int_64)0
	
.LOOP $label$30:
	if ( ((uint_64)$14 > (uint_64)(int_64)5) ){ goto $label$35 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$9 = ($9 + [165])
	goto $label$33 
	
.LABEL $label$35
	$16 = (int_64)0
	if ( ((uint_64)$14 <= (uint_64)(int_64)11) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$34
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$32
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$31
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$18 = ((int_64)$16 | (int_64)$18)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$30 }
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [368]
	$19 = (int_64)0
	
.LOOP $label$36:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$37 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$39 }
	$9 = ($9 + [165])
	goto $label$38 
	
.LABEL $label$39
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$38
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$37
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$19 = ((int_64)$13 | (int_64)$19)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$36 }
	*($20 + [576]) = $19
	$14 = *(($10 + [8]))
	*(($20 + [604])) = *(($5 + [12]))
	*(($9 = (($20 + [576]) + [24]))) = *(($5 + [8]))
	*(($20 + [596])) = *(($5 + [4]))
	*($20 + [592]) = *($5)
	*($20 + [584]) = $14
	CALL $102(($20 + [608]), $6)
	*(($12 = CALL $97([16]))) = $17
	*($12 + [8]) = $18
	*($20 + [848]) = $12
	$12 = ($12 + [16])
	*($20 + [856]) = $12
	*($20 + [852]) = $12
	*($20 + [864]) = *($20 + [576])
	*($20 + [872]) = *($20 + [584])
	*((($20 + [864]) + [24])) = *($9)
	*($20 + [880]) = *($20 + [592])
	$12 = (($20 + [576]) + [40])
	*(($9 = (($20 + [864]) + [40]))) = *($12)
	*($20 + [896]) = *($20 + [608])
	*($20 + [608]) = [0]
	*(($20 + [612])) = [0]
	*($12) = [0]
	CALL $45($15, (int_64)-3617168760277827584, ($20 + [848]), ($20 + [864]))
	if ( ((*($20 + [896]) & [1]) == 0) ){ goto $label$40 }
	CALL $98(*($9))
	
.LABEL $label$40
	$12 = *($20 + [848])
	if ( ($12 == 0) ){ goto $label$41 }
	*($20 + [852]) = $12
	CALL $98($12)
	
.LABEL $label$41
	if ( ((*(($20 + [608])) & [1]) == 0) ){ goto $label$18 }
	CALL $98(*(($20 + [616])))
	$10 = *($20 + [792])
	if ( $10 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$21
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [368]
	$15 = (int_64)0
	
.LOOP $label$42:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$43 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$45 }
	$9 = ($9 + [165])
	goto $label$44 
	
.LABEL $label$45
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$44
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$43
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$42 }
	if ( ((int_64)$19 == (int_64)$17) ){ goto $label$19 }
	*(($12 = (($20 + [752]) + [8]))) = *(($5 + [8]))
	*($20 + [752]) = *($5)
	CALL $102(($20 + [736]), $6)
	*((($20 + [144]) + [8])) = *($12)
	*($20 + [144]) = *($20 + [752])
	CALL _ZN5eosio5token9itransferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $18, $15, ($20 + [144]), ($20 + [736]))
	if ( ((*($20 + [736]) & [1]) == 0) ){ goto $label$46 }
	CALL $98(*($20 + [744]))
	
.LABEL $label$46
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [368]
	$15 = (int_64)0
	
.LOOP $label$47:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$48 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$50 }
	$9 = ($9 + [165])
	goto $label$49 
	
.LABEL $label$50
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$49
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$48
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$47 }
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [368]
	$17 = (int_64)0
	
.LOOP $label$51:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$52 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$54 }
	$9 = ($9 + [165])
	goto $label$53 
	
.LABEL $label$54
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$53
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$52
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$17 = ((int_64)$13 | (int_64)$17)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$51 }
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [1616]
	$18 = (int_64)0
	
.LOOP $label$55:
	if ( ((uint_64)$14 > (uint_64)(int_64)5) ){ goto $label$60 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$59 }
	$9 = ($9 + [165])
	goto $label$58 
	
.LABEL $label$60
	$16 = (int_64)0
	if ( ((uint_64)$14 <= (uint_64)(int_64)11) ){ goto $label$57 }
	goto $label$56 
	
.LABEL $label$59
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$58
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$57
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$56
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$18 = ((int_64)$16 | (int_64)$18)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$55 }
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [368]
	$19 = (int_64)0
	
.LOOP $label$61:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$62 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$64 }
	$9 = ($9 + [165])
	goto $label$63 
	
.LABEL $label$64
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$63
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$62
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$19 = ((int_64)$13 | (int_64)$19)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$61 }
	*($20 + [688]) = $19
	$14 = *(($10 + [8]))
	*(($20 + [716])) = *(($5 + [12]))
	*(($9 = (($20 + [688]) + [24]))) = *(($5 + [8]))
	*(($20 + [708])) = *(($5 + [4]))
	*($20 + [704]) = *($5)
	*($20 + [696]) = $14
	CALL $102(($20 + [720]), $6)
	*(($12 = CALL $97([16]))) = $17
	*($12 + [8]) = $18
	*($20 + [848]) = $12
	$12 = ($12 + [16])
	*($20 + [856]) = $12
	*($20 + [852]) = $12
	*($20 + [864]) = *($20 + [688])
	*($20 + [872]) = *($20 + [696])
	*((($20 + [864]) + [24])) = *($9)
	*($20 + [880]) = *($20 + [704])
	$12 = (($20 + [688]) + [40])
	*(($9 = (($20 + [864]) + [40]))) = *($12)
	*($20 + [896]) = *($20 + [720])
	*($20 + [720]) = [0]
	*(($20 + [724])) = [0]
	*($12) = [0]
	CALL $45($15, (int_64)-3617168760277827584, ($20 + [848]), ($20 + [864]))
	if ( ((*($20 + [896]) & [1]) == 0) ){ goto $label$65 }
	CALL $98(*($9))
	
.LABEL $label$65
	$12 = *($20 + [848])
	if ( ($12 == 0) ){ goto $label$66 }
	*($20 + [852]) = $12
	CALL $98($12)
	
.LABEL $label$66
	if ( ((*(($20 + [720])) & [1]) == 0) ){ goto $label$18 }
	CALL $98(*(($20 + [728])))
	$10 = *($20 + [792])
	if ( $10 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$20
	$12 = ($5 + [8])
	$14 = *($12)
	*((($20 + [560]) + [8])) = $14
	$16 = *($5)
	*((($20 + [128]) + [8])) = $14
	*($20 + [560]) = $16
	*($20 + [132]) = *($20 + [564])
	*($20 + [128]) = *($20 + [560])
	CALL _ZN5eosio5token4drawEyNS_5assetE($0, $1, ($20 + [128]))
	*(($9 = (($20 + [544]) + [8]))) = *($12)
	$14 = *($5)
	*((($20 + [112]) + [12])) = *((($20 + [544]) + [12]))
	*((($20 + [112]) + [8])) = *($9)
	*($20 + [544]) = $14
	*($20 + [116]) = *($20 + [548])
	*($20 + [112]) = *($20 + [544])
	CALL _ZN5eosio5token4saveEyNS_5assetE($0, $3, ($20 + [112]))
	$10 = *($20 + [792])
	if ( $10 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$19
	$9 = ($5 + [8])
	*(($12 = (($20 + [672]) + [8]))) = *($9)
	*($20 + [672]) = *($5)
	CALL $102(($20 + [656]), $6)
	*((($20 + [176]) + [8])) = *($12)
	*($20 + [176]) = *($20 + [672])
	CALL _ZN5eosio5token9itransferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $18, $15, ($20 + [176]), ($20 + [656]))
	if ( ((*($20 + [656]) & [1]) == 0) ){ goto $label$67 }
	CALL $98(*($20 + [664]))
	
.LABEL $label$67
	$14 = *($9)
	*((($20 + [640]) + [8])) = $14
	$16 = *($5)
	*((($20 + [160]) + [8])) = $14
	*($20 + [640]) = $16
	*($20 + [164]) = *($20 + [644])
	*($20 + [160]) = *($20 + [640])
	CALL _ZN5eosio5token4saveEyNS_5assetE($0, $3, ($20 + [160]))
	
.LABEL $label$18
	$10 = *($20 + [792])
	if ( ($10 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	$11 = ($20 + [796])
	$12 = *($11)
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$69 }
	
.LOOP $label$70:
	$12 = ($12 + [-24])
	$9 = *($12)
	*($12) = [0]
	if ( ($9 == 0) ){ goto $label$71 }
	CALL $98($9)
	
.LABEL $label$71
	if ( ((int_32)$10 != (int_32)$12) ){ goto $label$70 }
	$12 = *(($20 + [792]))
	goto $label$68 
	
.LABEL $label$69
	$12 = $10
	
.LABEL $label$68
	*($11) = $10
	CALL $98($12)
	
.LABEL $label$16
	$10 = *($20 + [832])
	if ( ($10 == 0) ){ goto $label$1 }
	$11 = ($20 + [836])
	$12 = *($11)
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$73 }
	
.LOOP $label$74:
	$12 = ($12 + [-24])
	$9 = *($12)
	*($12) = [0]
	if ( ($9 == 0) ){ goto $label$75 }
	CALL $98($9)
	
.LABEL $label$75
	if ( ((int_32)$10 != (int_32)$12) ){ goto $label$74 }
	$12 = *(($20 + [832]))
	goto $label$72 
	
.LABEL $label$73
	$12 = $10
	
.LABEL $label$72
	*($11) = $10
	CALL $98($12)
	
.LABEL $label$1
	if ( ($2 | $8) ){ goto $label$76 }
	*(($20 + [840])) = [0]
	*($20 + [824]) = (int_64)-1
	$14 = (int_64)0
	*($20 + [832]) = (int_64)0
	$16 = *($0)
	*($20 + [808]) = $16
	*($20 + [816]) = $3
	$10 = [0]
	$12 = CALL db_find_i64($16, $3, (int_64)-5868309319417593856, $3)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$77 }
	$10 = CALL $7(($20 + [808]), $12)
	CALL eosio_assert(((int_32)*($10 + [48]) == (int_32)($20 + [808])), [48])
	
.LABEL $label$77
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [704])
	$18 = *($10 + [8])
	$13 = (int_64)59
	$12 = [1440]
	$15 = (int_64)0
	
.LOOP $label$78:
	if ( ((uint_64)$14 > (uint_64)(int_64)1) ){ goto $label$83 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$82 }
	$9 = ($9 + [165])
	goto $label$81 
	
.LABEL $label$83
	$16 = (int_64)0
	if ( ((uint_64)$14 <= (uint_64)(int_64)11) ){ goto $label$80 }
	goto $label$79 
	
.LABEL $label$82
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$81
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$80
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$79
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$16 | (int_64)$15)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$78 }
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [368]
	$17 = (int_64)0
	
.LOOP $label$84:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$85 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$87 }
	$9 = ($9 + [165])
	goto $label$86 
	
.LABEL $label$87
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$86
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$85
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$17 = ((int_64)$13 | (int_64)$17)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$84 }
	if ( ((int_64)$18 != (int_64)$15) ){ goto $label$89 }
	$9 = ($5 + [8])
	*(($12 = (($20 + [448]) + [8]))) = *($9)
	*($20 + [448]) = *($5)
	CALL $102(($20 + [432]), $6)
	*((($20 + [64]) + [8])) = *($12)
	*($20 + [64]) = *($20 + [448])
	CALL _ZN5eosio5token9itransferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $1, $17, ($20 + [64]), ($20 + [432]))
	if ( ((*($20 + [432]) & [1]) == 0) ){ goto $label$90 }
	CALL $98(*($20 + [440]))
	
.LABEL $label$90
	$14 = *($9)
	*((($20 + [416]) + [8])) = $14
	$16 = *($5)
	*((($20 + [48]) + [8])) = $14
	*($20 + [416]) = $16
	*($20 + [52]) = *($20 + [420])
	*($20 + [48]) = *($20 + [416])
	CALL _ZN5eosio5token4saveEyNS_5assetE($0, $3, ($20 + [48]))
	$10 = *($20 + [832])
	if ( $10 ){ goto $label$88 }
	goto $label$76 
	
.LABEL $label$89
	*(($12 = (($20 + [528]) + [8]))) = *(($5 + [8]))
	*($20 + [528]) = *($5)
	CALL $102(($20 + [512]), $6)
	*((($20 + [80]) + [8])) = *($12)
	*($20 + [80]) = *($20 + [528])
	CALL _ZN5eosio5token9itransferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $1, $17, ($20 + [80]), ($20 + [512]))
	if ( ((*($20 + [512]) & [1]) == 0) ){ goto $label$91 }
	CALL $98(*($20 + [520]))
	
.LABEL $label$91
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [368]
	$15 = (int_64)0
	
.LOOP $label$92:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$93 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$95 }
	$9 = ($9 + [165])
	goto $label$94 
	
.LABEL $label$95
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$94
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$93
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$92 }
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [368]
	$17 = (int_64)0
	
.LOOP $label$96:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$97 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$99 }
	$9 = ($9 + [165])
	goto $label$98 
	
.LABEL $label$99
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$98
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$97
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$17 = ((int_64)$13 | (int_64)$17)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$96 }
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [1616]
	$18 = (int_64)0
	
.LOOP $label$100:
	if ( ((uint_64)$14 > (uint_64)(int_64)5) ){ goto $label$105 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$104 }
	$9 = ($9 + [165])
	goto $label$103 
	
.LABEL $label$105
	$16 = (int_64)0
	if ( ((uint_64)$14 <= (uint_64)(int_64)11) ){ goto $label$102 }
	goto $label$101 
	
.LABEL $label$104
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$103
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$102
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$101
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$18 = ((int_64)$16 | (int_64)$18)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$100 }
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [368]
	$19 = (int_64)0
	
.LOOP $label$106:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$107 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$109 }
	$9 = ($9 + [165])
	goto $label$108 
	
.LABEL $label$109
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$108
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$107
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$19 = ((int_64)$13 | (int_64)$19)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$106 }
	*($20 + [464]) = $19
	$14 = *(($10 + [8]))
	*(($20 + [492])) = *(($5 + [12]))
	*(($9 = (($20 + [464]) + [24]))) = *(($5 + [8]))
	*(($20 + [484])) = *(($5 + [4]))
	*($20 + [480]) = *($5)
	*($20 + [472]) = $14
	CALL $102(($20 + [496]), $6)
	*(($12 = CALL $97([16]))) = $17
	*($12 + [8]) = $18
	*($20 + [768]) = $12
	$12 = ($12 + [16])
	*($20 + [776]) = $12
	*($20 + [772]) = $12
	*($20 + [864]) = *($20 + [464])
	*($20 + [872]) = *($20 + [472])
	*((($20 + [864]) + [24])) = *($9)
	*($20 + [880]) = *($20 + [480])
	$12 = (($20 + [464]) + [40])
	*(($9 = (($20 + [864]) + [40]))) = *($12)
	*($20 + [896]) = *($20 + [496])
	*($20 + [496]) = [0]
	*(($20 + [500])) = [0]
	*($12) = [0]
	CALL $45($15, (int_64)-3617168760277827584, ($20 + [768]), ($20 + [864]))
	if ( ((*($20 + [896]) & [1]) == 0) ){ goto $label$110 }
	CALL $98(*($9))
	
.LABEL $label$110
	$12 = *($20 + [768])
	if ( ($12 == 0) ){ goto $label$111 }
	*($20 + [772]) = $12
	CALL $98($12)
	
.LABEL $label$111
	if ( ((*(($20 + [496])) & [1]) == 0) ){ goto $label$112 }
	CALL $98(*(($20 + [504])))
	
.LABEL $label$112
	$10 = *($20 + [832])
	if ( ($10 == 0) ){ goto $label$76 }
	
.LABEL $label$88
	$8 = ($20 + [836])
	$12 = *($8)
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$114 }
	
.LOOP $label$115:
	$12 = ($12 + [-24])
	$9 = *($12)
	*($12) = [0]
	if ( ($9 == 0) ){ goto $label$116 }
	CALL $98($9)
	
.LABEL $label$116
	if ( ((int_32)$10 != (int_32)$12) ){ goto $label$115 }
	$12 = *(($20 + [832]))
	goto $label$113 
	
.LABEL $label$114
	$12 = $10
	
.LABEL $label$113
	*($8) = $10
	CALL $98($12)
	
.LABEL $label$76
	if ( ($7 | $4) ){ goto $label$117 }
	*(($20 + [840])) = [0]
	*($20 + [824]) = (int_64)-1
	$14 = (int_64)0
	*($20 + [832]) = (int_64)0
	$16 = *($0)
	*($20 + [808]) = $16
	*($20 + [816]) = $1
	$12 = [0]
	$9 = CALL db_find_i64($16, $1, (int_64)-5868309319417593856, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$118 }
	$12 = CALL $7(($20 + [808]), $9)
	CALL eosio_assert(((int_32)*($12 + [48]) == (int_32)($20 + [808])), [48])
	
.LABEL $label$118
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [1584])
	$17 = *($12 + [8])
	$13 = (int_64)59
	$12 = [1440]
	$15 = (int_64)0
	
.LOOP $label$119:
	if ( ((uint_64)$14 > (uint_64)(int_64)1) ){ goto $label$124 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$123 }
	$9 = ($9 + [165])
	goto $label$122 
	
.LABEL $label$124
	$16 = (int_64)0
	if ( ((uint_64)$14 <= (uint_64)(int_64)11) ){ goto $label$121 }
	goto $label$120 
	
.LABEL $label$123
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$122
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$121
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$120
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$16 | (int_64)$15)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$119 }
	if ( ((int_64)$17 != (int_64)$15) ){ goto $label$127 }
	$14 = *(($5 + [8]))
	*((($20 + [320]) + [8])) = $14
	$16 = *($5)
	*((($20 + [16]) + [8])) = $14
	*($20 + [320]) = $16
	*($20 + [20]) = *($20 + [324])
	*($20 + [16]) = *($20 + [320])
	CALL _ZN5eosio5token4drawEyNS_5assetE($0, $1, ($20 + [16]))
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [368]
	$15 = (int_64)0
	
.LOOP $label$128:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$129 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$131 }
	$9 = ($9 + [165])
	goto $label$130 
	
.LABEL $label$131
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$130
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$129
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$128 }
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [368]
	$17 = (int_64)0
	
.LOOP $label$132:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$133 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$135 }
	$9 = ($9 + [165])
	goto $label$134 
	
.LABEL $label$135
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$134
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$133
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$17 = ((int_64)$13 | (int_64)$17)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$132 }
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [1616]
	$18 = (int_64)0
	
.LOOP $label$136:
	if ( ((uint_64)$14 > (uint_64)(int_64)5) ){ goto $label$141 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$140 }
	$9 = ($9 + [165])
	goto $label$139 
	
.LABEL $label$141
	$16 = (int_64)0
	if ( ((uint_64)$14 <= (uint_64)(int_64)11) ){ goto $label$138 }
	goto $label$137 
	
.LABEL $label$140
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$139
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$138
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$137
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$18 = ((int_64)$16 | (int_64)$18)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$136 }
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [368]
	$19 = (int_64)0
	
.LOOP $label$142:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$143 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$145 }
	$9 = ($9 + [165])
	goto $label$144 
	
.LABEL $label$145
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$144
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$143
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$19 = ((int_64)$13 | (int_64)$19)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$142 }
	*(($20 + [300])) = *(($5 + [12]))
	*(($9 = (($20 + [272]) + [24]))) = *(($5 + [8]))
	*(($20 + [292])) = *(($5 + [4]))
	*($20 + [280]) = $3
	*($20 + [272]) = $19
	*($20 + [288]) = *($5)
	CALL $102(($20 + [304]), $6)
	*(($12 = CALL $97([16]))) = $17
	*($12 + [8]) = $18
	*($20 + [768]) = $12
	$12 = ($12 + [16])
	*($20 + [776]) = $12
	*($20 + [772]) = $12
	*($20 + [864]) = *($20 + [272])
	*($20 + [872]) = *($20 + [280])
	*((($20 + [864]) + [24])) = *($9)
	*($20 + [880]) = *($20 + [288])
	$12 = (($20 + [272]) + [40])
	*(($9 = (($20 + [864]) + [40]))) = *($12)
	*($20 + [896]) = *($20 + [304])
	*($20 + [304]) = [0]
	*(($20 + [308])) = [0]
	*($12) = [0]
	CALL $45($15, (int_64)-3617168760277827584, ($20 + [768]), ($20 + [864]))
	if ( ((*($20 + [896]) & [1]) == 0) ){ goto $label$146 }
	CALL $98(*($9))
	
.LABEL $label$146
	$12 = *($20 + [768])
	if ( ($12 == 0) ){ goto $label$147 }
	*($20 + [772]) = $12
	CALL $98($12)
	
.LABEL $label$147
	if ( ((*(($20 + [304])) & [1]) == 0) ){ goto $label$126 }
	CALL $98(*(($20 + [312])))
	$10 = *($20 + [832])
	if ( $10 ){ goto $label$125 }
	goto $label$117 
	
.LABEL $label$127
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [368]
	$15 = (int_64)0
	
.LOOP $label$148:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$149 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$151 }
	$9 = ($9 + [165])
	goto $label$150 
	
.LABEL $label$151
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$150
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$149
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$148 }
	*(($12 = (($20 + [400]) + [8]))) = *(($5 + [8]))
	*($20 + [400]) = *($5)
	CALL $102(($20 + [384]), $6)
	*((($20 + [32]) + [8])) = *($12)
	*($20 + [32]) = *($20 + [400])
	CALL _ZN5eosio5token9itransferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $17, $15, ($20 + [32]), ($20 + [384]))
	if ( ((*($20 + [384]) & [1]) == 0) ){ goto $label$152 }
	CALL $98(*($20 + [392]))
	
.LABEL $label$152
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [368]
	$15 = (int_64)0
	
.LOOP $label$153:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$154 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$156 }
	$9 = ($9 + [165])
	goto $label$155 
	
.LABEL $label$156
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$155
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$154
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$153 }
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [368]
	$17 = (int_64)0
	
.LOOP $label$157:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$158 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$160 }
	$9 = ($9 + [165])
	goto $label$159 
	
.LABEL $label$160
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$159
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$158
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$17 = ((int_64)$13 | (int_64)$17)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$157 }
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [1616]
	$18 = (int_64)0
	
.LOOP $label$161:
	if ( ((uint_64)$14 > (uint_64)(int_64)5) ){ goto $label$166 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$165 }
	$9 = ($9 + [165])
	goto $label$164 
	
.LABEL $label$166
	$16 = (int_64)0
	if ( ((uint_64)$14 <= (uint_64)(int_64)11) ){ goto $label$163 }
	goto $label$162 
	
.LABEL $label$165
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$164
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$163
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$162
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$18 = ((int_64)$16 | (int_64)$18)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$161 }
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [368]
	$19 = (int_64)0
	
.LOOP $label$167:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$168 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$170 }
	$9 = ($9 + [165])
	goto $label$169 
	
.LABEL $label$170
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$169
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$168
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$19 = ((int_64)$13 | (int_64)$19)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$167 }
	*(($20 + [364])) = *(($5 + [12]))
	*(($9 = (($20 + [336]) + [24]))) = *(($5 + [8]))
	*(($20 + [356])) = *(($5 + [4]))
	*($20 + [344]) = $3
	*($20 + [336]) = $19
	*($20 + [352]) = *($5)
	CALL $102(($20 + [368]), $6)
	*(($12 = CALL $97([16]))) = $17
	*($12 + [8]) = $18
	*($20 + [768]) = $12
	$12 = ($12 + [16])
	*($20 + [776]) = $12
	*($20 + [772]) = $12
	*($20 + [864]) = *($20 + [336])
	*($20 + [872]) = *($20 + [344])
	*((($20 + [864]) + [24])) = *($9)
	*($20 + [880]) = *($20 + [352])
	$12 = (($20 + [336]) + [40])
	*(($9 = (($20 + [864]) + [40]))) = *($12)
	*($20 + [896]) = *($20 + [368])
	*($20 + [368]) = [0]
	*(($20 + [372])) = [0]
	*($12) = [0]
	CALL $45($15, (int_64)-3617168760277827584, ($20 + [768]), ($20 + [864]))
	if ( ((*($20 + [896]) & [1]) == 0) ){ goto $label$171 }
	CALL $98(*($9))
	
.LABEL $label$171
	$12 = *($20 + [768])
	if ( ($12 == 0) ){ goto $label$172 }
	*($20 + [772]) = $12
	CALL $98($12)
	
.LABEL $label$172
	if ( ((*(($20 + [368])) & [1]) == 0) ){ goto $label$126 }
	CALL $98(*(($20 + [376])))
	
.LABEL $label$126
	$10 = *($20 + [832])
	if ( ($10 == 0) ){ goto $label$117 }
	
.LABEL $label$125
	$8 = ($20 + [836])
	$12 = *($8)
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$174 }
	
.LOOP $label$175:
	$12 = ($12 + [-24])
	$9 = *($12)
	*($12) = [0]
	if ( ($9 == 0) ){ goto $label$176 }
	CALL $98($9)
	
.LABEL $label$176
	if ( ((int_32)$10 != (int_32)$12) ){ goto $label$175 }
	$12 = *(($20 + [832]))
	goto $label$173 
	
.LABEL $label$174
	$12 = $10
	
.LABEL $label$173
	*($8) = $10
	CALL $98($12)
	
.LABEL $label$117
	if ( $2 ){ goto $label$177 }
	if ( $4 ){ goto $label$177 }
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [368]
	$15 = (int_64)0
	
.LOOP $label$178:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$179 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$181 }
	$9 = ($9 + [165])
	goto $label$180 
	
.LABEL $label$181
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$180
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$179
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$178 }
	*(($12 = (($20 + [256]) + [8]))) = *(($5 + [8]))
	*($20 + [256]) = *($5)
	CALL $102(($20 + [240]), $6)
	*(($20 + [8])) = *($12)
	*($20) = *($20 + [256])
	CALL _ZN5eosio5token9itransferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $1, $15, $20, ($20 + [240]))
	if ( ((*($20 + [240]) & [1]) == 0) ){ goto $label$182 }
	CALL $98(*($20 + [248]))
	
.LABEL $label$182
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [368]
	$15 = (int_64)0
	
.LOOP $label$183:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$184 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$186 }
	$9 = ($9 + [165])
	goto $label$185 
	
.LABEL $label$186
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$185
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$184
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$183 }
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [368]
	$17 = (int_64)0
	
.LOOP $label$187:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$188 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$190 }
	$9 = ($9 + [165])
	goto $label$189 
	
.LABEL $label$190
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$189
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$188
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$17 = ((int_64)$13 | (int_64)$17)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$187 }
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [1616]
	$18 = (int_64)0
	
.LOOP $label$191:
	if ( ((uint_64)$14 > (uint_64)(int_64)5) ){ goto $label$196 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$195 }
	$9 = ($9 + [165])
	goto $label$194 
	
.LABEL $label$196
	$16 = (int_64)0
	if ( ((uint_64)$14 <= (uint_64)(int_64)11) ){ goto $label$193 }
	goto $label$192 
	
.LABEL $label$195
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$194
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$193
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$192
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$18 = ((int_64)$16 | (int_64)$18)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$191 }
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [368]
	$19 = (int_64)0
	
.LOOP $label$197:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$198 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$200 }
	$9 = ($9 + [165])
	goto $label$199 
	
.LABEL $label$200
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$199
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$198
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$19 = ((int_64)$13 | (int_64)$19)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$197 }
	*(($20 + [220])) = *(($5 + [12]))
	*(($9 = (($20 + [192]) + [24]))) = *(($5 + [8]))
	*(($20 + [212])) = *(($5 + [4]))
	*($20 + [200]) = $3
	*($20 + [192]) = $19
	*($20 + [208]) = *($5)
	CALL $102(($20 + [224]), $6)
	*(($12 = CALL $97([16]))) = $17
	*($12 + [8]) = $18
	*($20 + [808]) = $12
	$12 = ($12 + [16])
	*($20 + [816]) = $12
	*($20 + [812]) = $12
	*($20 + [864]) = *($20 + [192])
	*($20 + [872]) = *($20 + [200])
	*((($20 + [864]) + [24])) = *($9)
	*($20 + [880]) = *($20 + [208])
	$12 = (($20 + [192]) + [40])
	*(($9 = (($20 + [864]) + [40]))) = *($12)
	*($20 + [896]) = *($20 + [224])
	*($20 + [224]) = [0]
	*(($20 + [228])) = [0]
	*($12) = [0]
	CALL $45($15, (int_64)-3617168760277827584, ($20 + [808]), ($20 + [864]))
	if ( ((*($20 + [896]) & [1]) == 0) ){ goto $label$201 }
	CALL $98(*($9))
	
.LABEL $label$201
	$12 = *($20 + [808])
	if ( ($12 == 0) ){ goto $label$202 }
	*($20 + [812]) = $12
	CALL $98($12)
	
.LABEL $label$202
	if ( ((*(($20 + [224])) & [1]) == 0) ){ goto $label$177 }
	CALL $98(*(($20 + [232])))
	
.LABEL $label$177
	*([0] + [4]) = ($20 + [912])
}

int_32 .FUNC $8 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [432])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [432])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [432])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [432])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [432])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [432])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC _ZN5eosio5token9itransferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [112])
	*([0] + [4]) = $11
	CALL eosio_assert(((int_64)$1 != (int_64)$2), [672])
	CALL eosio_assert(CALL $fimport$14($2), [704])
	$5 = *($3 + [8])
	$8 = [0]
	*(($11 + [104])) = [0]
	$9 = (uint_64)$5 >> (uint_64)(int_64)8
	*($11 + [80]) = $9)
	*($11 + [88]) = (int_64)-1
	*($11 + [96]) = (int_64)0
	*($11 + [72]) = *($0)
	$6 = CALL $13(($11 + [72]), $9, [736])
	$7 = *($3)
	if ( ((uint_64)((int_64)$7 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$10 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$8 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	
.LABEL $label$1
	CALL eosio_assert($8, [768])
	CALL eosio_assert(((int_64)$7 > (int_64)0), [800])
	CALL eosio_assert(((int_64)$5 == (int_64)*($6 + [8])), [832])
	$10 = *($4)
	if ( ($10 & [1]) ){ goto $label$7 }
	$10 = uint_32($10 >> [1])
	goto $label$6 
	
.LABEL $label$7
	$10 = *($4 + [4])
	
.LABEL $label$6
	CALL eosio_assert(($10 <= [257]), [864])
	$8 = ($3 + [8])
	*(($10 = (($11 + [56]) + [8]))) = *($8)
	$9 = *($3)
	*((($11 + [24]) + [12])) = *((($11 + [56]) + [12]))
	*((($11 + [24]) + [8])) = *($10)
	*($11 + [56]) = $9
	*($11 + [28]) = *($11 + [60])
	*($11 + [24]) = *($11 + [56])
	CALL _ZN5eosio5token12sub_balance2EyNS_5assetE($0, $1, ($11 + [24]))
	*(($10 = (($11 + [40]) + [8]))) = *($8)
	$9 = *($3)
	*((($11 + [8]) + [12])) = *((($11 + [40]) + [12]))
	*((($11 + [8]) + [8])) = *($10)
	*($11 + [40]) = $9
	*($11 + [12]) = *($11 + [44])
	*($11 + [8]) = *($11 + [40])
	CALL _ZN5eosio5token12add_balance2EyNS_5assetEy($0, $2, ($11 + [8]), $9)
	$8 = *($11 + [96])
	if ( ($8 == 0) ){ goto $label$8 }
	$0 = ($11 + [100])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$10 }
	
.LOOP $label$11:
	$10 = ($10 + [-24])
	$3 = *($10)
	*($10) = [0]
	if ( ($3 == 0) ){ goto $label$12 }
	CALL $98($3)
	
.LABEL $label$12
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$11 }
	$10 = *(($11 + [96]))
	goto $label$9 
	
.LABEL $label$10
	$10 = $8
	
.LABEL $label$9
	*($0) = $8
	CALL $98($10)
	
.LABEL $label$8
	*([0] + [4]) = ($11 + [112])
}

int_32 .FUNC $6 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [448])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $97([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [480])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [480])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $28(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $98($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [448])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $97([64])
	$4 = CALL $25($6)
	*($6 + [48]) = $0
	CALL $26(($8 + [32]), $4)
	*($6 + [52]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [52])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $27(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $98($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC _ZN5eosio5token5checkEyyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [224])
	*([0] + [4]) = $12
	CALL require_auth(*($0))
	CALL eosio_assert(CALL $fimport$14($1), [16])
	$4 = [0]
	*((($12 + [120]) + [32])) = [0]
	*($12 + [136]) = (int_64)-1
	*($12 + [144]) = (int_64)0
	$9 = *($0)
	*($12 + [120]) = $9
	*($12 + [128]) = $9
	$7 = [0]
	$5 = CALL db_find_i64($9, $9, (int_64)-7950098247169605632, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $6(($12 + [120]), $5)
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)($12 + [120])), [48])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [112])
	*((($12 + [80]) + [32])) = [0]
	*($12 + [96]) = (int_64)-1
	*($12 + [104]) = (int_64)0
	$9 = *($0)
	*($12 + [80]) = $9
	*($12 + [88]) = $2
	$7 = CALL db_find_i64($9, $2, (int_64)-5868309319417593856, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $7(($12 + [80]), $7)
	CALL eosio_assert(((int_32)*($4 + [48]) == (int_32)($12 + [80])), [48])
	
.LABEL $label$2
	$8 = *($0)
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [144])
	CALL eosio_assert(((int_32)*($4 + [48]) == (int_32)($12 + [80])), [192])
	CALL eosio_assert(((int_64)*($12 + [80]) == (int_64)CALL $fimport$3()), [240])
	*($4 + [8]) = $1
	$9 = *($4)
	CALL eosio_assert([1], [304])
	*($12 + [216]) = (($12 + [160]) + [48])
	*($12 + [212]) = ($12 + [160])
	*($12 + [208]) = ($12 + [160])
	CALL $8(($12 + [208]), $4)
	CALL db_update_i64(*($4 + [52]), $8, ($12 + [160]), [48])
	$7 = ($12 + [96])
	if ( (uint_64)($9 <= *($7)) ){ goto $label$3 }
	*($7) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	if ( ((int_64)*($4 + [16]) < (int_64)1) ){ goto $label$5 }
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [368]
	$10 = (int_64)0
	
.LOOP $label$6:
	$11 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$7 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$5 = ($5 + [165])
	goto $label$8 
	
.LABEL $label$9
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$7
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$6 }
	*((($12 + [64]) + [8])) = *(($4 + [24]))
	*((($12 + [48]) + [8])) = [0]
	*($12 + [64]) = *($4 + [16])
	*($12 + [48]) = (int_64)0
	$7 = CALL strlen([384])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$12 }
	*($12 + [48]) = ($7 << [1])
	$5 = (($12 + [48]) | [1])
	if ( $7 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$6 = (($7 + [16]) & [-16])
	$5 = CALL $97($6)
	*($12 + [48]) = ($6 | [1])
	*($12 + [56]) = $5
	*($12 + [52]) = $7
	
.LABEL $label$11
	CALL memcpy($5, [384], $7)
	
.LABEL $label$10
	$4 = ($4 + [16])
	*(($5 + $7)) = [0]
	*((($12 + [16]) + [8])) = *((($12 + [64]) + [8]))
	*($12 + [16]) = *($12 + [64])
	CALL _ZN5eosio5token9itransferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $10, $1, ($12 + [16]), ($12 + [48]))
	if ( ((*($12 + [48]) & [1]) == 0) ){ goto $label$13 }
	CALL $98(*($12 + [56]))
	
.LABEL $label$13
	$9 = *(($4 + [8]))
	*((($12 + [32]) + [8])) = $9
	$8 = *($4)
	*(($12 + [8])) = $9
	*($12 + [32]) = $8
	*($12 + [4]) = *($12 + [36])
	*($12) = *($12 + [32])
	CALL _ZN5eosio5token4drawEyNS_5assetE($0, $2, $12)
	
.LABEL $label$5
	$7 = [0]
	*(($12 + [192])) = [0]
	*($12 + [176]) = (int_64)-1
	*($12 + [184]) = (int_64)0
	$9 = *($0)
	*($12 + [160]) = $9
	*($12 + [168]) = $2
	$5 = CALL db_find_i64($9, $2, (int_64)4983113983805358080, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$14 }
	CALL eosio_assert(((int_32)*(CALL $11(($12 + [160]), $5) + [16]) == (int_32)($12 + [160])), [48])
	$2 = *(($12 + [168]))
	$9 = *($12 + [160])
	
.LABEL $label$14
	$5 = CALL db_lowerbound_i64($9, $2, (int_64)4983113983805358080, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$15 }
	$7 = CALL $11(($12 + [160]), $5)
	
.LABEL $label$15
	$8 = *($0)
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [144])
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)($12 + [160])), [192])
	CALL eosio_assert(((int_64)*($12 + [160]) == (int_64)CALL $fimport$3()), [240])
	*($7 + [8]) = (int_64)2
	$9 = *($7)
	CALL eosio_assert([1], [304])
	CALL eosio_assert([1], [432])
	CALL memcpy(($12 + [208]), $7, [8])
	CALL eosio_assert([1], [432])
	CALL memcpy((($12 + [208]) | [8]), ($7 + [8]), [8])
	CALL db_update_i64(*($7 + [20]), $8, ($12 + [208]), [16])
	$7 = (($12 + [160]) + [16])
	if ( (uint_64)($9 <= *($7)) ){ goto $label$16 }
	*($7) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	$4 = *($12 + [184])
	if ( ($4 == 0) ){ goto $label$17 }
	$0 = ($12 + [188])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$19 }
	
.LOOP $label$20:
	$7 = ($7 + [-24])
	$5 = *($7)
	*($7) = [0]
	if ( ($5 == 0) ){ goto $label$21 }
	CALL $98($5)
	
.LABEL $label$21
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$20 }
	$7 = *(($12 + [184]))
	goto $label$18 
	
.LABEL $label$19
	$7 = $4
	
.LABEL $label$18
	*($0) = $4
	CALL $98($7)
	
.LABEL $label$17
	$4 = *($12 + [104])
	if ( ($4 == 0) ){ goto $label$22 }
	$0 = ($12 + [108])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$24 }
	
.LOOP $label$25:
	$7 = ($7 + [-24])
	$5 = *($7)
	*($7) = [0]
	if ( ($5 == 0) ){ goto $label$26 }
	CALL $98($5)
	
.LABEL $label$26
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$25 }
	$7 = *(($12 + [104]))
	goto $label$23 
	
.LABEL $label$24
	$7 = $4
	
.LABEL $label$23
	*($0) = $4
	CALL $98($7)
	
.LABEL $label$22
	$4 = *($12 + [144])
	if ( ($4 == 0) ){ goto $label$27 }
	$0 = ($12 + [148])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$29 }
	
.LOOP $label$30:
	$7 = ($7 + [-24])
	$5 = *($7)
	*($7) = [0]
	if ( ($5 == 0) ){ goto $label$31 }
	CALL $98($5)
	
.LABEL $label$31
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$30 }
	$7 = *(($12 + [144]))
	goto $label$28 
	
.LABEL $label$29
	$7 = $4
	
.LABEL $label$28
	*($0) = $4
	CALL $98($7)
	
.LABEL $label$27
	*([0] + [4]) = ($12 + [224])
	return (unreachable)
	
.LABEL $label$4
	CALL $99(($12 + [48]))
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC _ZN5eosio5token12sub_balance2EyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [64])
	*([0] + [4]) = $8
	*(($8 + [40])) = [0]
	*($8 + [16]) = $1
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	*($8 + [8]) = *($0)
	$1 = *($2)
	$3 = *($2 + [8])
	$7 = CALL $19(($8 + [8]), (uint_64)$3 >> (uint_64)(int_64)8), [1168]
	CALL eosio_assert(((int_64)*($7)) >= (int_64)$1), [528])
	if ( ((int_64)$1 != (int_64)*($7)) ){ goto $label$3 }
	CALL $20(($8 + [8]), $7)
	$0 = *($8 + [32])
	if ( $0 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0)
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)($8 + [8])), [192])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)CALL $fimport$3()), [240])
	$5 = *($7 + [8])
	CALL eosio_assert(((int_64)$3 == (int_64)$5), [560])
	$1 = (int_64)
	*($7) = $1(*($7) - $1))
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [608])
	CALL eosio_assert(((int_64)*($7) < (int_64)4611686018427387904), [640])
	$1 = (uint_64)$5 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$1) == (int_64)(uint_64)*($7 + [8]) >> (uint_64)(int_64)8)), [304])
	CALL eosio_assert([1], [432])
	CALL memcpy(($8 + [48]), $7, [8])
	CALL eosio_assert([1], [432])
	CALL memcpy((($8 + [48]) | [8]), ($7 + [8]), [8])
	CALL db_update_i64(*($7 + [20]), $4, ($8 + [48]), [16])
	$7 = (($8 + [8]) + [16])
	if ( (uint_64)($1 <= *($7)) ){ goto $label$4 }
	*($7) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$4
	$0 = *($8 + [32])
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($8 + [36])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$0) ){ goto $label$6 }
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$2 = *($7)
	*($7) = [0]
	if ( ($2 == 0) ){ goto $label$8 }
	CALL $98($2)
	
.LABEL $label$8
	if ( ((int_32)$0 != (int_32)$7) ){ goto $label$7 }
	$7 = *(($8 + [32]))
	goto $label$5 
	
.LABEL $label$6
	$7 = $0
	
.LABEL $label$5
	*($6) = $0
	CALL $98($7)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [64])
}

void .FUNC _ZN5eosio5token12add_balance2EyNS_5assetEy (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	$8 = [0]
	*((($9 + [8]) + [32])) = [0]
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	$6 = *($0)
	*($9 + [8]) = $6
	*($9 + [16]) = $1
	$4 = *($2 + [8])
	$7 = CALL db_find_i64($6, $1, (int_64)3607749779137757184, (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_32)$7) < (int_32)[0]) ){ goto $label$4 }
	$8 = CALL $16(($9 + [8]), $7)
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)($9 + [8])), [48])
	CALL eosio_assert([1], [144])
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)($9 + [8])), [192])
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$3()), [240])
	$1 = *($8 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)$1), [896])
	$6 = ((int_64)*($8) + (int_64)*($2))
	*($8) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [944])
	CALL eosio_assert(((int_64)*($8) < (int_64)4611686018427387904), [976])
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$1) == (int_64)(uint_64)*($8 + [8]) >> (uint_64)(int_64)8)), [304])
	CALL eosio_assert([1], [432])
	CALL memcpy(($9 + [64]), $8, [8])
	CALL eosio_assert([1], [432])
	CALL memcpy((($9 + [64]) | [8]), ($8 + [8]), [8])
	CALL db_update_i64(*($8 + [20]), (int_64)0, ($9 + [64]), [16])
	$8 = (($9 + [8]) + [16])
	if ( (uint_64)($1 <= *($8)) ){ goto $label$3 }
	*($8) = ((int_64)$1 + (int_64)1)
	$2 = *($9 + [32])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$6 = *($0)
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$3()), [1008])
	*(($0 = CALL $97([32])) + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [1072])
	$5 = ($0 + [8])
	$1 = (int_64)5462355
	
.LOOP $label$6:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	CALL eosio_assert($7, [1136])
	*($0 + [16]) = ($9 + [8])
	*(($8 = ($0 + [8]))) = *(($2 + [8]))
	*($0) = *($2)
	CALL eosio_assert([1], [432])
	CALL memcpy(($9 + [64]), $0, [8])
	CALL eosio_assert([1], [432])
	CALL memcpy((($9 + [64]) | [8]), $5, [8])
	$1 = (uint_64)*($8) >> (uint_64)(int_64)8
	$2 = CALL db_store_i64(*((($9 + [8]) + [8])), (int_64)3607749779137757184, $6, $1), ($9 + [64]), [16]
	*($0 + [20]) = $2)
	$7 = (($9 + [8]) + [16])
	if ( (uint_64)($1 <= *($7)) ){ goto $label$9 }
	*($7) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$9
	*($9 + [56]) = $0
	$1 = (uint_64)*($8) >> (uint_64)(int_64)8
	*($9 + [64]) = $1)
	*($9 + [52]) = $2
	$7 = ($9 + [36])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($9 + [40]))) ){ goto $label$11 }
	*($8 + [8]) = $1
	*($8 + [16]) = $2
	*($9 + [56]) = [0]
	*($8) = $0
	*($7) = ($8 + [24])
	goto $label$10 
	
.LABEL $label$11
	CALL $17(($9 + [32]), ($9 + [56]), ($9 + [64]), ($9 + [52]))
	
.LABEL $label$10
	$8 = *($9 + [56])
	*($9 + [56]) = [0]
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $98($8)
	
.LABEL $label$3
	$2 = *($9 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($9 + [36])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$13 }
	
.LOOP $label$14:
	$8 = ($8 + [-24])
	$0 = *($8)
	*($8) = [0]
	if ( ($0 == 0) ){ goto $label$15 }
	CALL $98($0)
	
.LABEL $label$15
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$14 }
	$8 = *(($9 + [32]))
	goto $label$12 
	
.LABEL $label$13
	$8 = $2
	
.LABEL $label$12
	*($7) = $2
	CALL $98($8)
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [80])
}

int_32 .FUNC $16 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [448])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $97([32])
	$6 = CALL $18($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	*($8 + [8]) = $5)
	$1 = *($4 + [20])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $17(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $98($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $17 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $97(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $101($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $98($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $98($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN5eosio5token4drawEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [112])
	*([0] + [4]) = $7
	*(($7 + [40])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$3 = *($0)
	*($7 + [8]) = $3
	*($7 + [16]) = $1
	$6 = [0]
	$4 = CALL db_find_i64($3, $1, (int_64)-5868309319417593856, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $7(($7 + [8]), $4)
	CALL eosio_assert(((int_32)*($6 + [48]) == (int_32)($7 + [8])), [48])
	
.LABEL $label$1
	$4 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($4, [496])
	$3 = *($2)
	CALL eosio_assert(((int_64)*($6 + [16]) >= (int_64)$3), [528])
	$5 = *($0)
	CALL eosio_assert($4, [144])
	CALL eosio_assert(((int_32)*($6 + [48]) == (int_32)($7 + [8])), [192])
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$3()), [240])
	$1 = *($6)
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($6 + [24]))), [560])
	$3 = (int_64)
	*($6 + [16]) = $3(*($6 + [16]) - $3))
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [608])
	CALL eosio_assert(((int_64)*($6 + [16]) < (int_64)4611686018427387904), [640])
	CALL eosio_assert(((int_64)$1 == (int_64)*($6)), [304])
	*($7 + [104]) = (($7 + [48]) + [48])
	*($7 + [100]) = ($7 + [48])
	*($7 + [96]) = ($7 + [48])
	CALL $8(($7 + [96]), $6)
	CALL db_update_i64(*($6 + [52]), $5, ($7 + [48]), [48])
	$6 = ($7 + [24])
	if ( (uint_64)($1 <= *($6)) ){ goto $label$2 }
	*($6) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	$0 = *($7 + [32])
	if ( ($0 == 0) ){ goto $label$3 }
	$4 = ($7 + [36])
	$6 = *($4)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$5 }
	
.LOOP $label$6:
	$6 = ($6 + [-24])
	$2 = *($6)
	*($6) = [0]
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $98($2)
	
.LABEL $label$7
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$6 }
	$6 = *(($7 + [32]))
	goto $label$4 
	
.LABEL $label$5
	$6 = $0
	
.LABEL $label$4
	*($4) = $0
	CALL $98($6)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [112])
}

int_32 .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [448])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $97([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [480])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [480])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $12(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $98($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $12 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $97(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $101($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $98($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $98($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $13 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)(uint_64)*(*($6) + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$0), [48])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4157508551318700032, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $21($0, $5)
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$0), [48])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

int_32 .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [96])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$5 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*(($9 + [40])) = (int_64)1398362884
	*($9 + [32]) = (int_64)0
	*($9 + [24]) = (int_64)0
	CALL eosio_assert([1], [1072])
	$6 = (int_64)5462355
	
.LOOP $label$5:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($7, [1136])
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [480])
	CALL memcpy(($9 + [24]), $5, [8])
	$7 = ($3 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [480])
	$1 = (($9 + [24]) + [8])
	CALL memcpy($1, ($5 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [480])
	CALL memcpy((($9 + [24]) + [16]), ($5 + [16]), [8])
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	*(($7 = (($9 + [48]) + [8]))) = *(($1 + [8]))
	$6 = *($9 + [24])
	*($9 + [48]) = *($1)
	*((($9 + [64]) + [8])) = *($7)
	*($9 + [64]) = *($9 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$8 = *((*($1) + $8))
	
.LABEL $label$9
	$4 = *((($9 + [64]) + [8]))
	*((($9 + [80]) + [8])) = $4
	*((($9 + [8]) + [8])) = $4
	$4 = *($9 + [64])
	*($9 + [80]) = $4
	*($9 + [8]) = $4
	CALL void $1((int_32 $6), (int_64 ($9 + [8])), (int_32 $8))
	*([0] + [4]) = ($9 + [96])
	return [1]
}

int_32 .FUNC $18 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [1072])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [1136])
	*($0 + [16]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [480])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [480])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [20]) = *(*($2 + [8]))
	return $0
}

int_32 .FUNC $19 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)(uint_64)*(*($6) + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [48])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3607749779137757184, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $16($0, $5)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [48])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

int_32 .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [480])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [480])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [480])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [480])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC _ZN5eosio5token7unstakeEybybNS_5assetE (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_32 $4, int_32 $5)
{
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [176])
	*([0] + [4]) = $15
	CALL require_auth(*($0))
	$14 = [0]
	*((($15 + [88]) + [32])) = [0]
	*($15 + [96]) = $3
	*($15 + [104]) = (int_64)-1
	*($15 + [112]) = (int_64)0
	$6 = *($0)
	*($15 + [88]) = $6
	$10 = [0]
	$11 = CALL db_find_i64($6, $3, (int_64)-5868309319417593856, $3)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$1 }
	$10 = CALL $7(($15 + [88]), $11)
	CALL eosio_assert(((int_32)*($10 + [48]) == (int_32)($15 + [88])), [48])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [704])
	*((($15 + [48]) + [32])) = [0]
	*($15 + [64]) = (int_64)-1
	*($15 + [72]) = (int_64)0
	$6 = *($0)
	*($15 + [48]) = $6
	*($15 + [56]) = $1
	$10 = CALL db_find_i64($6, $1, (int_64)-4157660949893349376, $3)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$2 }
	$14 = CALL $53(($15 + [48]), $10)
	CALL eosio_assert(((int_32)*($14 + [28]) == (int_32)($15 + [48])), [48])
	
.LABEL $label$2
	$10 = ((int_32)$14 != (int_32)[0])
	CALL eosio_assert($10, [1648])
	$6 = *($5)
	CALL eosio_assert(((int_64)*($14 + [8]) >= (int_64)$6), [1680])
	$12 = *($0)
	CALL eosio_assert($10, [144])
	CALL eosio_assert(((int_32)*($14 + [28]) == (int_32)($15 + [48])), [192])
	CALL eosio_assert(((int_64)*($15 + [48]) == (int_64)CALL $fimport$3()), [240])
	*($14 + [8]) = (int_64))(*($14 + [8]) - $6)
	$6 = *($14)
	CALL eosio_assert([1], [304])
	CALL eosio_assert([1], [432])
	CALL memcpy(($15 + [128]), $14, [8])
	CALL eosio_assert([1], [432])
	$11 = ($14 + [8])
	$7 = (($15 + [128]) | [8])
	CALL memcpy($7, $11, [8])
	CALL eosio_assert([1], [432])
	$8 = (($15 + [128]) + [16])
	CALL memcpy($8, ($14 + [16]), [8])
	CALL eosio_assert([1], [432])
	$9 = (($15 + [128]) + [24])
	CALL memcpy($9, ($14 + [24]), [4])
	CALL db_update_i64(*($14 + [32]), $12, ($15 + [128]), [28])
	$13 = (($15 + [48]) + [16])
	if ( (uint_64)($6 <= *($13)) ){ goto $label$3 }
	*($13) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	if ( ((int_64)*($11) != (int_64)0) ){ goto $label$4 }
	CALL eosio_assert($10, [1488])
	CALL eosio_assert($10, [1536])
	$10 = CALL db_next_i64(*(($14 + [32])), ($15 + [8]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$5 }
	CALL $53(($15 + [48]), $10)
	
.LABEL $label$5
	CALL $60(($15 + [48]), $14)
	
.LABEL $label$4
	if ( ((int_64)$3 == (int_64)$1) ){ goto $label$6 }
	*(($15 + [40])) = [0]
	*($15 + [24]) = (int_64)-1
	*($15 + [32]) = (int_64)0
	$6 = *($0)
	*($15 + [8]) = $6
	*($15 + [16]) = $3
	$12 = *($5 + [8])
	$14 = CALL db_find_i64($6, $3, (int_64)-4157660956857466880, (uint_64)$12 >> (uint_64)(int_64)8)
	if ( ((int_32)$14) < (int_32)[0]) ){ goto $label$7 }
	$14 = CALL $54(($15 + [8]), $14)
	CALL eosio_assert(((int_32)*($14 + [16]) == (int_32)($15 + [8])), [48])
	CALL eosio_assert([1], [144])
	CALL eosio_assert(((int_32)*($14 + [16]) == (int_32)($15 + [8])), [192])
	CALL eosio_assert(((int_64)*($15 + [8]) == (int_64)CALL $fimport$3()), [240])
	$6 = *($14 + [8])
	CALL eosio_assert(((int_64)$12 == (int_64)$6), [560])
	$12 = (int_64)
	*($14) = $12(*($14) - *($5)))
	CALL eosio_assert(((int_64)$12 > (int_64)-4611686018427387904), [608])
	CALL eosio_assert(((int_64)*($14) < (int_64)4611686018427387904), [640])
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$6) == (int_64)(uint_64)*($14 + [8]) >> (uint_64)(int_64)8)), [304])
	CALL eosio_assert([1], [432])
	CALL memcpy(($15 + [128]), $14, [8])
	CALL eosio_assert([1], [432])
	CALL memcpy((($15 + [128]) | [8]), ($14 + [8]), [8])
	CALL db_update_i64(*($14 + [20]), (int_64)0, ($15 + [128]), [16])
	$14 = (($15 + [8]) + [16])
	if ( (uint_64)($6 <= *($14)) ){ goto $label$7 }
	*($14) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$11 = *($15 + [32])
	if ( ($11 == 0) ){ goto $label$6 }
	$13 = ($15 + [36])
	$14 = *($13)
	if ( ((int_32)$14 == (int_32)$11) ){ goto $label$9 }
	
.LOOP $label$10:
	$14 = ($14 + [-24])
	$10 = *($14)
	*($14) = [0]
	if ( ($10 == 0) ){ goto $label$11 }
	CALL $98($10)
	
.LABEL $label$11
	if ( ((int_32)$11 != (int_32)$14) ){ goto $label$10 }
	$14 = *(($15 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$14 = $11
	
.LABEL $label$8
	*($13) = $11
	CALL $98($14)
	
.LABEL $label$6
	$14 = [0]
	*(($15 + [40])) = [0]
	*($15 + [24]) = (int_64)-1
	*($15 + [32]) = (int_64)0
	$6 = *($0)
	*($15 + [8]) = $6
	*($15 + [16]) = $1
	$10 = CALL db_find_i64($6, $1, (int_64)-3102536759402283008, $3)
	if ( ((int_32)$10 <= (int_32)[-1]) ){ goto $label$15 }
	$14 = CALL $39(($15 + [8]), $10)
	CALL eosio_assert(((int_32)*($14 + [28]) == (int_32)($15 + [8])), [48])
	$3 = *($0)
	CALL eosio_assert([1], [144])
	CALL eosio_assert(((int_32)*($14 + [28]) == (int_32)($15 + [8])), [192])
	CALL eosio_assert(((int_64)*($15 + [8]) == (int_64)CALL $fimport$3()), [240])
	$1 = *($14)
	$10 = ($14 + [16])
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)*($10)), [896])
	$6 = ((int_64)*($14 + [8]) + (int_64)*($5))
	*($14 + [8]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [944])
	CALL eosio_assert(((int_64)*($14 + [8]) < (int_64)4611686018427387904), [976])
	*($14 + [24]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)$1 == (int_64)*($14)), [304])
	CALL eosio_assert([1], [432])
	CALL memcpy(($15 + [128]), $14, [8])
	CALL eosio_assert([1], [432])
	CALL memcpy($7, ($14 + [8]), [8])
	CALL eosio_assert([1], [432])
	CALL memcpy($8, $10, [8])
	CALL eosio_assert([1], [432])
	CALL memcpy($9, ($14 + [24]), [4])
	CALL db_update_i64(*($14 + [32]), $3, ($15 + [128]), [28])
	$14 = (($15 + [8]) + [16])
	if ( (uint_64)($1 <= *($14)) ){ goto $label$14 }
	*($14) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	$11 = *($15 + [32])
	if ( $11 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$6 = *($0)
	CALL eosio_assert(((int_64)*($15 + [8]) == (int_64)CALL $fimport$3()), [1008])
	*(($10 = CALL $97([40])) + [16]) = (int_64)1398362884
	*($10 + [8]) = (int_64)0
	CALL eosio_assert([1], [1072])
	$13 = ($10 + [16])
	$0 = ($10 + [8])
	$1 = (int_64)5462355
	
.LOOP $label$17:
	$11 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	
.LOOP $label$19:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$19 }
	
.LABEL $label$18
	$11 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	CALL eosio_assert($11, [1136])
	*($10 + [28]) = ($15 + [8])
	*(($0 + [8])) = *(($5 + [8]))
	*($0) = *($5)
	$1 = CALL current_time()
	*($10) = $3
	*($10 + [24]) = ((uint_64)$1 / (uint_64)(int_64)1000000)
	CALL eosio_assert([1], [432])
	CALL memcpy(($15 + [128]), $10, [8])
	CALL eosio_assert([1], [432])
	CALL memcpy($7, $0, [8])
	CALL eosio_assert([1], [432])
	CALL memcpy($8, $13, [8])
	CALL eosio_assert([1], [432])
	CALL memcpy($9, ($10 + [24]), [4])
	$1 = *($10)
	$11 = CALL db_store_i64(*((($15 + [8]) + [8])), (int_64)-3102536759402283008, $6, $1, ($15 + [128]), [28])
	*($10 + [32]) = $11
	$14 = ($15 + [24])
	if ( (uint_64)($1 <= *($14)) ){ goto $label$20 }
	*($14) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$20
	*($15 + [168]) = $10
	$1 = *($10)
	*($15 + [128]) = $1
	*($15 + [164]) = $11
	$14 = *((($15 + [8]) + [28]))
	if ( ((uint_32)$14 >= (uint_32)*(($15 + [40]))) ){ goto $label$22 }
	*($14 + [8]) = $1
	*($14 + [16]) = $11
	*($15 + [168]) = [0]
	*($14) = $10
	*(($15 + [36])) = ($14 + [24])
	goto $label$21 
	
.LABEL $label$22
	CALL $43(($15 + [32]), ($15 + [168]), ($15 + [128]), ($15 + [164]))
	
.LABEL $label$21
	$14 = *($15 + [168])
	*($15 + [168]) = [0]
	if ( ($14 == 0) ){ goto $label$14 }
	CALL $98($14)
	
.LABEL $label$14
	$11 = *($15 + [32])
	if ( ($11 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$0 = ($15 + [36])
	$14 = *($0)
	if ( ((int_32)$14 == (int_32)$11) ){ goto $label$24 }
	
.LOOP $label$25:
	$14 = ($14 + [-24])
	$10 = *($14)
	*($14) = [0]
	if ( ($10 == 0) ){ goto $label$26 }
	CALL $98($10)
	
.LABEL $label$26
	if ( ((int_32)$11 != (int_32)$14) ){ goto $label$25 }
	$14 = *(($15 + [32]))
	goto $label$23 
	
.LABEL $label$24
	$14 = $11
	
.LABEL $label$23
	*($0) = $11
	CALL $98($14)
	
.LABEL $label$12
	$11 = *($15 + [72])
	if ( ($11 == 0) ){ goto $label$27 }
	$0 = ($15 + [76])
	$14 = *($0)
	if ( ((int_32)$14 == (int_32)$11) ){ goto $label$29 }
	
.LOOP $label$30:
	$14 = ($14 + [-24])
	$10 = *($14)
	*($14) = [0]
	if ( ($10 == 0) ){ goto $label$31 }
	CALL $98($10)
	
.LABEL $label$31
	if ( ((int_32)$11 != (int_32)$14) ){ goto $label$30 }
	$14 = *(($15 + [72]))
	goto $label$28 
	
.LABEL $label$29
	$14 = $11
	
.LABEL $label$28
	*($0) = $11
	CALL $98($14)
	
.LABEL $label$27
	$11 = *($15 + [112])
	if ( ($11 == 0) ){ goto $label$32 }
	$0 = ($15 + [116])
	$14 = *($0)
	if ( ((int_32)$14 == (int_32)$11) ){ goto $label$34 }
	
.LOOP $label$35:
	$14 = ($14 + [-24])
	$10 = *($14)
	*($14) = [0]
	if ( ($10 == 0) ){ goto $label$36 }
	CALL $98($10)
	
.LABEL $label$36
	if ( ((int_32)$11 != (int_32)$14) ){ goto $label$35 }
	$14 = *(($15 + [112]))
	goto $label$33 
	
.LABEL $label$34
	$14 = $11
	
.LABEL $label$33
	*($0) = $11
	CALL $98($14)
	
.LABEL $label$32
	*([0] + [4]) = ($15 + [176])
}

int_32 .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [432])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [432])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [432])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [432])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC _ZN5eosio5token5stakeEybybNS_5assetE (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_32 $4, int_32 $5)
{
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	$16 = (*([0] + [4]) - [288])
	*([0] + [4]) = $16
	CALL require_auth(*($0))
	$11 = [0]
	*((($16 + [208]) + [32])) = [0]
	*($16 + [216]) = $3
	*($16 + [224]) = (int_64)-1
	*($16 + [232]) = (int_64)0
	$13 = *($0)
	*($16 + [208]) = $13
	$7 = [0]
	$9 = CALL db_find_i64($13, $3, (int_64)-5868309319417593856, $3)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $7(($16 + [208]), $9)
	CALL eosio_assert(((int_32)*($7 + [48]) == (int_32)($16 + [208])), [48])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [704])
	*((($16 + [168]) + [32])) = [0]
	*($16 + [184]) = (int_64)-1
	*($16 + [192]) = (int_64)0
	$13 = *($0)
	*($16 + [168]) = $13
	*($16 + [176]) = $1
	$7 = CALL db_find_i64($13, $1, (int_64)-5868309319417593856, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$11 = CALL $7(($16 + [168]), $7)
	CALL eosio_assert(((int_32)*($11 + [48]) == (int_32)($16 + [168])), [48])
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [1584])
	*(($16 + [160])) = [0]
	*($16 + [144]) = (int_64)-1
	$13 = (int_64)0
	*($16 + [152]) = (int_64)0
	$15 = *($0)
	*($16 + [128]) = $15
	*($16 + [136]) = $1
	$9 = [0]
	$7 = CALL db_find_i64($15, $1, (int_64)-4157660949893349376, $3)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $53(($16 + [128]), $7)
	CALL eosio_assert(((int_32)*($9 + [28]) == (int_32)($16 + [128])), [48])
	
.LABEL $label$3
	$6 = *($11 + [8])
	$12 = (int_64)59
	$11 = [1440]
	$14 = (int_64)0
	
.LOOP $label$4:
	if ( ((uint_64)$13 > (uint_64)(int_64)1) ){ goto $label$9 }
	$7 = *($11)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$7 = ($7 + [165])
	goto $label$7 
	
.LABEL $label$9
	$15 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$6
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$5
	$11 = ($11 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$4 }
	if ( ((int_64)$6 != (int_64)$14) ){ goto $label$13 }
	$13 = *(($5 + [8]))
	*((($16 + [80]) + [8])) = $13
	$15 = *($5)
	*(($16 + [8])) = $13
	*($16 + [80]) = $15
	*($16 + [4]) = *($16 + [84])
	*($16) = *($16 + [80])
	CALL _ZN5eosio5token4drawEyNS_5assetE($0, $1, $16)
	if ( ((int_64)$3 != (int_64)$1) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$13 = (int_64)0
	$15 = (int_64)59
	$11 = [368]
	$14 = (int_64)0
	
.LOOP $label$14:
	$12 = (int_64)0
	if ( ((uint_64)$13 > (uint_64)(int_64)11) ){ goto $label$15 }
	$7 = *($11)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$7 = ($7 + [165])
	goto $label$16 
	
.LABEL $label$17
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$15
	$11 = ($11 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$14 = ((int_64)$12 | (int_64)$14)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$14 }
	*((($16 + [112]) + [8])) = *(($5 + [8]))
	*((($16 + [96]) + [8])) = [0]
	*($16 + [112]) = *($5)
	*($16 + [96]) = (int_64)0
	$11 = CALL strlen([1632])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$10 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$20 }
	*($16 + [96]) = ($11 << [1])
	$7 = (($16 + [96]) | [1])
	if ( $11 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	$8 = (($11 + [16]) & [-16])
	$7 = CALL $97($8)
	*($16 + [96]) = ($8 | [1])
	*($16 + [104]) = $7
	*($16 + [100]) = $11
	
.LABEL $label$19
	CALL memcpy($7, [1632], $11)
	
.LABEL $label$18
	*(($7 + $11)) = [0]
	*((($16 + [16]) + [8])) = *((($16 + [112]) + [8]))
	*($16 + [16]) = *($16 + [112])
	CALL _ZN5eosio5token9itransferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $6, $14, ($16 + [16]), ($16 + [96]))
	if ( ((*($16 + [96]) & [1]) == 0) ){ goto $label$21 }
	CALL $98(*($16 + [104]))
	
.LABEL $label$21
	if ( ((int_64)$3 == (int_64)$1) ){ goto $label$11 }
	
.LABEL $label$12
	$11 = [0]
	*((($16 + [32]) + [32])) = [0]
	*($16 + [48]) = (int_64)-1
	*($16 + [56]) = (int_64)0
	$13 = *($0)
	*($16 + [32]) = $13
	*($16 + [40]) = $3
	$15 = *($5 + [8])
	$7 = CALL db_find_i64($13, $3, (int_64)-4157660956857466880, (uint_64)$15 >> (uint_64)(int_64)8)
	if ( ((int_32)$7) < (int_32)[0]) ){ goto $label$24 }
	$11 = CALL $54(($16 + [32]), $7)
	CALL eosio_assert(((int_32)*($11 + [16]) == (int_32)($16 + [32])), [48])
	CALL eosio_assert([1], [144])
	CALL eosio_assert(((int_32)*($11 + [16]) == (int_32)($16 + [32])), [192])
	CALL eosio_assert(((int_64)*($16 + [32]) == (int_64)CALL $fimport$3()), [240])
	$13 = *($11 + [8])
	CALL eosio_assert(((int_64)$15 == (int_64)$13), [896])
	$15 = ((int_64)*($11) + (int_64)*($5))
	*($11) = $15
	CALL eosio_assert(((int_64)$15 > (int_64)-4611686018427387904), [944])
	CALL eosio_assert(((int_64)*($11) < (int_64)4611686018427387904), [976])
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$13) == (int_64)(uint_64)*($11 + [8]) >> (uint_64)(int_64)8)), [304])
	CALL eosio_assert([1], [432])
	CALL memcpy(($16 + [256]), $11, [8])
	CALL eosio_assert([1], [432])
	CALL memcpy((($16 + [256]) | [8]), ($11 + [8]), [8])
	CALL db_update_i64(*($11 + [20]), (int_64)0, ($16 + [256]), [16])
	$11 = (($16 + [32]) + [16])
	if ( (uint_64)($13 <= *($11)) ){ goto $label$23 }
	*($11) = ((int_64)$13 + (int_64)1)
	$8 = *($16 + [56])
	if ( $8 ){ goto $label$22 }
	goto $label$11 
	
.LABEL $label$24
	$15 = *($0)
	CALL eosio_assert(((int_64)*($16 + [32]) == (int_64)CALL $fimport$3()), [1008])
	*(($7 = CALL $97([32])) + [8]) = (int_64)1398362884
	*($7) = (int_64)0
	CALL eosio_assert([1], [1072])
	$10 = ($7 + [8])
	$13 = (int_64)5462355
	
.LOOP $label$26:
	$8 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$25 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	
.LOOP $label$28:
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$25 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$28 }
	
.LABEL $label$27
	$8 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$26 }
	
.LABEL $label$25
	CALL eosio_assert($8, [1136])
	*($7 + [16]) = ($16 + [32])
	*(($11 = ($7 + [8]))) = *(($5 + [8]))
	*($7) = *($5)
	CALL eosio_assert([1], [432])
	CALL memcpy(($16 + [256]), $7, [8])
	CALL eosio_assert([1], [432])
	CALL memcpy((($16 + [256]) | [8]), $10, [8])
	$13 = (uint_64)*($11) >> (uint_64)(int_64)8
	$8 = CALL db_store_i64(*((($16 + [32]) + [8])), (int_64)-4157660956857466880, $15, $13), ($16 + [256]), [16]
	*($7 + [20]) = $8)
	$10 = (($16 + [32]) + [16])
	if ( (uint_64)($13 <= *($10)) ){ goto $label$29 }
	*($10) = ((int_64)$13 + (int_64)1)
	
.LABEL $label$29
	*($16 + [280]) = $7
	$13 = (uint_64)*($11) >> (uint_64)(int_64)8
	*($16 + [256]) = $13)
	*($16 + [252]) = $8
	$10 = ($16 + [60])
	$11 = *($10)
	if ( ((uint_32)$11 >= (uint_32)*(($16 + [64]))) ){ goto $label$31 }
	*($11 + [8]) = $13
	*($11 + [16]) = $8
	*($16 + [280]) = [0]
	*($11) = $7
	*($10) = ($11 + [24])
	goto $label$30 
	
.LABEL $label$31
	CALL $55(($16 + [56]), ($16 + [280]), ($16 + [256]), ($16 + [252]))
	
.LABEL $label$30
	$11 = *($16 + [280])
	*($16 + [280]) = [0]
	if ( ($11 == 0) ){ goto $label$23 }
	CALL $98($11)
	
.LABEL $label$23
	$8 = *($16 + [56])
	if ( ($8 == 0) ){ goto $label$11 }
	
.LABEL $label$22
	$10 = ($16 + [60])
	$11 = *($10)
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$33 }
	
.LOOP $label$34:
	$11 = ($11 + [-24])
	$7 = *($11)
	*($11) = [0]
	if ( ($7 == 0) ){ goto $label$35 }
	CALL $98($7)
	
.LABEL $label$35
	if ( ((int_32)$8 != (int_32)$11) ){ goto $label$34 }
	$11 = *(($16 + [56]))
	goto $label$32 
	
.LABEL $label$33
	$11 = $8
	
.LABEL $label$32
	*($10) = $8
	CALL $98($11)
	
.LABEL $label$11
	$15 = *($0)
	if ( ($9 == 0) ){ goto $label$39 }
	CALL eosio_assert([1], [144])
	CALL eosio_assert(((int_32)*($9 + [28]) == (int_32)($16 + [128])), [192])
	CALL eosio_assert(((int_64)*($16 + [128]) == (int_64)CALL $fimport$3()), [240])
	$13 = *($9)
	$11 = ($9 + [16])
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)*($11)), [896])
	$12 = ((int_64)*($9 + [8]) + (int_64)*($5))
	*($9 + [8]) = $12
	CALL eosio_assert(((int_64)$12 > (int_64)-4611686018427387904), [944])
	CALL eosio_assert(((int_64)*($9 + [8]) < (int_64)4611686018427387904), [976])
	*($9 + [24]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)$13 == (int_64)*($9)), [304])
	CALL eosio_assert([1], [432])
	CALL memcpy(($16 + [32]), $9, [8])
	CALL eosio_assert([1], [432])
	CALL memcpy((($16 + [32]) | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [432])
	CALL memcpy((($16 + [32]) + [16]), $11, [8])
	CALL eosio_assert([1], [432])
	CALL memcpy((($16 + [32]) + [24]), ($9 + [24]), [4])
	CALL db_update_i64(*($9 + [32]), $15, ($16 + [32]), [28])
	$11 = (($16 + [128]) + [16])
	if ( (uint_64)($13 <= *($11)) ){ goto $label$38 }
	*($11) = ( (int_64)-2 ? ((int_64)$13 + (int_64)1) : ((uint_64)$13 > (uint_64)(int_64)-3) )
	$9 = *($16 + [152])
	if ( $9 ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$39
	CALL eosio_assert(((int_64)*($16 + [128]) == (int_64)CALL $fimport$3()), [1008])
	*(($7 = CALL $97([40])) + [16]) = (int_64)1398362884
	*($7 + [8]) = (int_64)0
	CALL eosio_assert([1], [1072])
	$8 = ($7 + [16])
	$0 = ($7 + [8])
	$13 = (int_64)5462355
	$11 = [0]
	
.LOOP $label$42:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$41 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$43 }
	
.LOOP $label$44:
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$41 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$44 }
	
.LABEL $label$43
	$9 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$42 }
	goto $label$40 
	
.LABEL $label$41
	$9 = [0]
	
.LABEL $label$40
	CALL eosio_assert($9, [1136])
	*($7 + [28]) = ($16 + [128])
	*(($0 + [8])) = *(($5 + [8]))
	*($0) = *($5)
	$13 = CALL current_time()
	*($7) = $3
	*($7 + [24]) = ((uint_64)$13 / (uint_64)(int_64)1000000)
	CALL eosio_assert([1], [432])
	CALL memcpy(($16 + [32]), $7, [8])
	CALL eosio_assert([1], [432])
	CALL memcpy((($16 + [32]) | [8]), $0, [8])
	CALL eosio_assert([1], [432])
	CALL memcpy((($16 + [32]) + [16]), $8, [8])
	CALL eosio_assert([1], [432])
	CALL memcpy((($16 + [32]) + [24]), ($7 + [24]), [4])
	$13 = *($7)
	$9 = CALL db_store_i64(*((($16 + [128]) + [8])), (int_64)-4157660949893349376, $15, $13, ($16 + [32]), [28])
	*($7 + [32]) = $9
	$11 = (($16 + [128]) + [16])
	if ( (uint_64)($13 <= *($11)) ){ goto $label$45 }
	*($11) = ( (int_64)-2 ? ((int_64)$13 + (int_64)1) : ((uint_64)$13 > (uint_64)(int_64)-3) )
	
.LABEL $label$45
	*($16 + [256]) = $7
	$13 = *($7)
	*($16 + [32]) = $13
	*($16 + [280]) = $9
	$11 = *((($16 + [128]) + [28]))
	if ( ((uint_32)$11 >= (uint_32)*(($16 + [160]))) ){ goto $label$47 }
	*($11 + [8]) = $13
	*($11 + [16]) = $9
	*($16 + [256]) = [0]
	*($11) = $7
	*(($16 + [156])) = ($11 + [24])
	goto $label$46 
	
.LABEL $label$47
	CALL $56(($16 + [152]), ($16 + [256]), ($16 + [32]), ($16 + [280]))
	
.LABEL $label$46
	$11 = *($16 + [256])
	*($16 + [256]) = [0]
	if ( ($11 == 0) ){ goto $label$38 }
	CALL $98($11)
	
.LABEL $label$38
	$9 = *($16 + [152])
	if ( ($9 == 0) ){ goto $label$36 }
	
.LABEL $label$37
	$0 = ($16 + [156])
	$11 = *($0)
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$49 }
	
.LOOP $label$50:
	$11 = ($11 + [-24])
	$7 = *($11)
	*($11) = [0]
	if ( ($7 == 0) ){ goto $label$51 }
	CALL $98($7)
	
.LABEL $label$51
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$50 }
	$11 = *(($16 + [152]))
	goto $label$48 
	
.LABEL $label$49
	$11 = $9
	
.LABEL $label$48
	*($0) = $9
	CALL $98($11)
	
.LABEL $label$36
	$9 = *($16 + [192])
	if ( ($9 == 0) ){ goto $label$52 }
	$0 = ($16 + [196])
	$11 = *($0)
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$54 }
	
.LOOP $label$55:
	$11 = ($11 + [-24])
	$7 = *($11)
	*($11) = [0]
	if ( ($7 == 0) ){ goto $label$56 }
	CALL $98($7)
	
.LABEL $label$56
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$55 }
	$11 = *(($16 + [192]))
	goto $label$53 
	
.LABEL $label$54
	$11 = $9
	
.LABEL $label$53
	*($0) = $9
	CALL $98($11)
	
.LABEL $label$52
	$9 = *($16 + [232])
	if ( ($9 == 0) ){ goto $label$57 }
	$0 = ($16 + [236])
	$11 = *($0)
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$59 }
	
.LOOP $label$60:
	$11 = ($11 + [-24])
	$7 = *($11)
	*($11) = [0]
	if ( ($7 == 0) ){ goto $label$61 }
	CALL $98($7)
	
.LABEL $label$61
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$60 }
	$11 = *(($16 + [232]))
	goto $label$58 
	
.LABEL $label$59
	$11 = $9
	
.LABEL $label$58
	*($0) = $9
	CALL $98($11)
	
.LABEL $label$57
	*([0] + [4]) = ($16 + [288])
	return (unreachable)
	
.LABEL $label$10
	CALL $99(($16 + [96]))
}

int_32 .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [448])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $97([40])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [1072])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [1136])
	*($4 + [28]) = $0
	CALL $58(($8 + [32]), $4)
	*($4 + [32]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [32])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $56($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $98($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

int_32 .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [448])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $97([32])
	$6 = CALL $57($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	*($8 + [8]) = $5)
	$1 = *($4 + [20])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $55(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $98($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $34 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [1200])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1248])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1312])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $98($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $98($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $56 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $97(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $101($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $98($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $98($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $57 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [1072])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [1136])
	*($0 + [16]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [480])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [480])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [20]) = *(*($2 + [8]))
	return $0
}

void .FUNC _ZN5eosio5token9delcontblEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	CALL require_auth(*($0))
	*(($7 + [32])) = [0]
	*($7 + [16]) = (int_64)-1
	*($7 + [24]) = (int_64)0
	$5 = *($0)
	*($7) = $5
	*($7 + [8]) = $2
	$0 = CALL db_find_i64($5, $2, (int_64)4983113983805358080, $1)
	if ( ((int_32)$0 <= (int_32)[-1]) ){ goto $label$3 }
	$0 = CALL $11($7, $0)
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)$7), [48])
	CALL eosio_assert([1], [1456])
	CALL eosio_assert([1], [1488])
	CALL eosio_assert([1], [1536])
	$4 = CALL db_next_i64(*($0 + [20]), ($7 + [40]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	CALL $11($7, $4)
	
.LABEL $label$4
	CALL $33($7, $0)
	$3 = *($7 + [24])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [1456])
	$3 = *($7 + [24])
	if ( ($3 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($7 + [28])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $98($4)
	
.LABEL $label$8
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($7 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $3
	
.LABEL $label$5
	*($6) = $3
	CALL $98($0)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [48])
}

void .FUNC _ZN5eosio5token7prepareEyyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [112])
	*([0] + [4]) = $11
	CALL require_auth($1)
	CALL eosio_assert(CALL $fimport$14($1), [16])
	*((($11 + [40]) + [32])) = [0]
	*($11 + [56]) = (int_64)-1
	*($11 + [64]) = (int_64)0
	$7 = *($0)
	*($11 + [40]) = $7
	*($11 + [48]) = $7
	$10 = [1]
	$6 = CALL db_find_i64($7, $7, (int_64)-7950098247169605632, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*(CALL $6(($11 + [40]), $6) + [16]) == (int_32)($11 + [40])), [48])
	$10 = [0]
	
.LABEL $label$1
	CALL eosio_assert($10, [1376])
	$8 = *($0)
	CALL eosio_assert(((int_64)*($11 + [40]) == (int_64)CALL $fimport$3()), [1008])
	*(($10 = CALL $97([32])) + [16]) = ($11 + [40])
	*($10) = $1
	*($10 + [8]) = $2
	CALL eosio_assert([1], [432])
	CALL memcpy(($11 + [80]), $10, [8])
	CALL eosio_assert([1], [432])
	$4 = (($11 + [80]) | [8])
	CALL memcpy($4, ($10 + [8]), [8])
	$7 = *($10)
	$5 = CALL db_store_i64(*((($11 + [40]) + [8])), (int_64)-7950098247169605632, $8, $7, ($11 + [80]), [16])
	*($10 + [20]) = $5
	$6 = (($11 + [40]) + [16])
	if ( (uint_64)($7 <= *($6)) ){ goto $label$2 }
	*($6) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($11 + [80]) = $10
	$7 = *($10)
	*($11) = $7
	*($11 + [104]) = $5
	$9 = ($11 + [68])
	$6 = *($9)
	if ( ((uint_32)$6 >= (uint_32)*(($11 + [72]))) ){ goto $label$4 }
	*($6 + [8]) = $7
	*($6 + [16]) = $5
	*($11 + [80]) = [0]
	*($6) = $10
	*($9) = ($6 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $28(($11 + [64]), ($11 + [80]), $11, ($11 + [104]))
	
.LABEL $label$3
	$10 = *($11 + [80])
	*($11 + [80]) = [0]
	if ( ($10 == 0) ){ goto $label$5 }
	CALL $98($10)
	
.LABEL $label$5
	*(($11 + [32])) = [0]
	*($11 + [16]) = (int_64)-1
	*($11 + [24]) = (int_64)0
	$7 = *($0)
	*($11) = $7
	*($11 + [8]) = $2
	$10 = CALL db_find_i64($7, $2, (int_64)4983113983805358080, $1)
	if ( ((int_32)$10 <= (int_32)[-1]) ){ goto $label$8 }
	CALL eosio_assert(((int_32)*(CALL $11($11, $10) + [16]) == (int_32)$11), [48])
	CALL eosio_assert([0], [1376])
	$6 = *($11 + [24])
	if ( $6 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([1], [1376])
	$2 = *($0)
	CALL eosio_assert(((int_64)*($11) == (int_64)CALL $fimport$3()), [1008])
	*(($10 = CALL $97([32])) + [16]) = $11
	*($10 + [8]) = (int_64)1
	*($10) = $1
	CALL eosio_assert([1], [432])
	CALL memcpy(($11 + [80]), $10, [8])
	CALL eosio_assert([1], [432])
	CALL memcpy($4, ($10 + [8]), [8])
	$1 = *($10)
	$6 = CALL db_store_i64(*(($11 + [8])), (int_64)4983113983805358080, $2, $1, ($11 + [80]), [16])
	*($10 + [20]) = $6
	$0 = ($11 + [16])
	if ( (uint_64)($1 <= *($0)) ){ goto $label$9 }
	*($0) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*($11 + [104]) = $10
	$1 = *($10)
	*($11 + [80]) = $1
	*($11 + [100]) = $6
	$5 = ($11 + [28])
	$0 = *($5)
	if ( ((uint_32)$0 >= (uint_32)*(($11 + [32]))) ){ goto $label$11 }
	*($0 + [8]) = $1
	*($0 + [16]) = $6
	*($11 + [104]) = [0]
	*($0) = $10
	*($5) = ($0 + [24])
	goto $label$10 
	
.LABEL $label$11
	CALL $12(($11 + [24]), ($11 + [104]), ($11 + [80]), ($11 + [100]))
	
.LABEL $label$10
	$10 = *($11 + [104])
	*($11 + [104]) = [0]
	if ( ($10 == 0) ){ goto $label$12 }
	CALL $98($10)
	
.LABEL $label$12
	$6 = *($11 + [24])
	if ( ($6 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$5 = ($11 + [28])
	$10 = *($5)
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$14 }
	
.LOOP $label$15:
	$10 = ($10 + [-24])
	$0 = *($10)
	*($10) = [0]
	if ( ($0 == 0) ){ goto $label$16 }
	CALL $98($0)
	
.LABEL $label$16
	if ( ((int_32)$6 != (int_32)$10) ){ goto $label$15 }
	$10 = *(($11 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$10 = $6
	
.LABEL $label$13
	*($5) = $6
	CALL $98($10)
	
.LABEL $label$6
	$6 = *($11 + [64])
	if ( ($6 == 0) ){ goto $label$17 }
	$5 = ($11 + [68])
	$10 = *($5)
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$19 }
	
.LOOP $label$20:
	$10 = ($10 + [-24])
	$0 = *($10)
	*($10) = [0]
	if ( ($0 == 0) ){ goto $label$21 }
	CALL $98($0)
	
.LABEL $label$21
	if ( ((int_32)$6 != (int_32)$10) ){ goto $label$20 }
	$10 = *(($11 + [64]))
	goto $label$18 
	
.LABEL $label$19
	$10 = $6
	
.LABEL $label$18
	*($5) = $6
	CALL $98($10)
	
.LABEL $label$17
	*([0] + [4]) = ($11 + [112])
}

void .FUNC $28 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $97(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $101($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $98($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $98($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $55 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $97(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $101($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $98($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $98($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $21 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [448])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $97([56])
	CALL $22($6)
	*($6 + [40]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [16])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [32])
	CALL $23(($8 + [32]), ($8 + [24]))
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = (uint_64)*($6 + [8]) >> (uint_64)(int_64)8
	*($8 + [32]) = $5)
	$7 = *($6 + [44])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $24(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $98($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $20 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [1200])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1248])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1 + [8])
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( (uint_64)(((int_64)*(*($8) + [8]) ^ (int_64)$2) <= (int_64)256) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1312])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $98($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $98($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [480])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [480])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [480])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [480])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [480])
	CALL memcpy($0, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

int_32 .FUNC $22 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [1072])
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1136])
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [1072])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [1136])
	return $0
}

int_32 .FUNC $25 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [16]) = (int_64)0
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [1072])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1136])
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [1072])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [1136])
	return $0
}

void .FUNC $24 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $97(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $101($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $98($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $98($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $27 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $97(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $101($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $98($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $98($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [480])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [480])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [480])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [480])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [480])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [480])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $69 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $97(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $101($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $98($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $98($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [480])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [480])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [480])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [480])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [480])
	CALL memcpy(($1 + [28]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC _ZN5eosio5token8transferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_32 $19
	int_32 $20
	$20 = (*([0] + [4]) - [208])
	*([0] + [4]) = $20
	CALL eosio_assert(((int_64)$1 != (int_64)$2), [672])
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [1952]
	$17 = (int_64)0
	
.LOOP $label$1:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$2 }
	$5 = *($14)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$5 = ($5 + [165])
	goto $label$3 
	
.LABEL $label$4
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$2
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$1 }
	CALL eosio_assert(((int_64)$17 != (int_64)$2), [1968])
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [2032]
	$17 = (int_64)0
	
.LOOP $label$5:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$6 }
	$5 = *($14)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$5 = ($5 + [165])
	goto $label$7 
	
.LABEL $label$8
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$6
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$5 }
	CALL eosio_assert(((int_64)$17 != (int_64)$2), [2048])
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [2112]
	$17 = (int_64)0
	
.LOOP $label$9:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$10 }
	$5 = *($14)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$5 = ($5 + [165])
	goto $label$11 
	
.LABEL $label$12
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$10
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$9 }
	CALL eosio_assert(((int_64)$17 != (int_64)$2), [2048])
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [2128]
	$17 = (int_64)0
	
.LOOP $label$13:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$14 }
	$5 = *($14)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$16 }
	$5 = ($5 + [165])
	goto $label$15 
	
.LABEL $label$16
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$15
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$14
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$13 }
	CALL eosio_assert(((int_64)$17 != (int_64)$2), [2048])
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [2144]
	$17 = (int_64)0
	
.LOOP $label$17:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$18 }
	$5 = *($14)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$5 = ($5 + [165])
	goto $label$19 
	
.LABEL $label$20
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$18
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$17 }
	CALL eosio_assert(((int_64)$17 != (int_64)$2), [2048])
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [2160]
	$17 = (int_64)0
	
.LOOP $label$21:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$22 }
	$5 = *($14)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$5 = ($5 + [165])
	goto $label$23 
	
.LABEL $label$24
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$23
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$22
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$21 }
	CALL eosio_assert(((int_64)$17 != (int_64)$2), [2048])
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [2176]
	$17 = (int_64)0
	
.LOOP $label$25:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$26 }
	$5 = *($14)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$5 = ($5 + [165])
	goto $label$27 
	
.LABEL $label$28
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$26
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$25 }
	CALL eosio_assert(((int_64)$17 != (int_64)$2), [2048])
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [2032]
	$17 = (int_64)0
	
.LOOP $label$29:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$30 }
	$5 = *($14)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$5 = ($5 + [165])
	goto $label$31 
	
.LABEL $label$32
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$30
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$29 }
	CALL eosio_assert(((int_64)$17 != (int_64)$1), [2048])
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [2112]
	$17 = (int_64)0
	
.LOOP $label$33:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$34 }
	$5 = *($14)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$36 }
	$5 = ($5 + [165])
	goto $label$35 
	
.LABEL $label$36
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$35
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$34
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$33 }
	CALL eosio_assert(((int_64)$17 != (int_64)$1), [2048])
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [2128]
	$17 = (int_64)0
	
.LOOP $label$37:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$38 }
	$5 = *($14)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$40 }
	$5 = ($5 + [165])
	goto $label$39 
	
.LABEL $label$40
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$39
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$38
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$37 }
	CALL eosio_assert(((int_64)$17 != (int_64)$1), [2048])
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [2144]
	$17 = (int_64)0
	
.LOOP $label$41:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$42 }
	$5 = *($14)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$44 }
	$5 = ($5 + [165])
	goto $label$43 
	
.LABEL $label$44
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$43
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$42
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$41 }
	CALL eosio_assert(((int_64)$17 != (int_64)$1), [2048])
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [2160]
	$17 = (int_64)0
	
.LOOP $label$45:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$46 }
	$5 = *($14)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$48 }
	$5 = ($5 + [165])
	goto $label$47 
	
.LABEL $label$48
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$47
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$46
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$45 }
	CALL eosio_assert(((int_64)$17 != (int_64)$1), [2048])
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [2176]
	$17 = (int_64)0
	
.LOOP $label$49:
	$18 = (int_64)0
	if ( ((uint_64)$16 > (uint_64)(int_64)11) ){ goto $label$50 }
	$5 = *($14)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$52 }
	$5 = ($5 + [165])
	goto $label$51 
	
.LABEL $label$52
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$51
	$18 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$50
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$49 }
	CALL eosio_assert(((int_64)$17 != (int_64)$1), [2048])
	CALL require_auth($1)
	CALL eosio_assert(CALL $fimport$14($2), [704])
	$18 = *($3 + [8])
	$19 = [0]
	*((($20 + [128]) + [32])) = [0]
	$16 = (uint_64)$18 >> (uint_64)(int_64)8
	*($20 + [136]) = $16)
	*($20 + [144]) = (int_64)-1
	*($20 + [152]) = (int_64)0
	*($20 + [128]) = *($0)
	$6 = CALL $13(($20 + [128]), $16, [736])
	if ( ((uint_64)((int_64)$18 ^ (int_64)*($6 + [8])) > (uint_64)(int_64)255) ){ goto $label$53 }
	*((($20 + [88]) + [32])) = [0]
	*($20 + [104]) = (int_64)-1
	*($20 + [112]) = (int_64)0
	$15 = *($0)
	*($20 + [88]) = $15
	*($20 + [96]) = $15
	$14 = CALL db_find_i64($15, $15, (int_64)-8281824366442840064, $1)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$55 }
	$7 = CALL $66(($20 + [88]), $14)
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)($20 + [88])), [48])
	if ( (*($7 + [24]) == 0) ){ goto $label$59 }
	CALL eosio_assert([1], [1072])
	$14 = [0]
	$15 = (int_64)4347216
	
.LOOP $label$62:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$61 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$63 }
	
.LOOP $label$64:
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$61 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$64 }
	
.LABEL $label$63
	$5 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$62 }
	goto $label$60 
	
.LABEL $label$61
	$5 = [0]
	
.LABEL $label$60
	CALL eosio_assert($5, [1136])
	*(($20 + [200])) = [0]
	*($20 + [176]) = $1
	*($20 + [184]) = (int_64)-1
	*($20 + [192]) = (int_64)0
	*($20 + [168]) = *($0)
	$14 = CALL $19(($20 + [168]), (int_64)4347216, [736])
	$15 = *($14 + [8])
	$17 = *($14)
	$9 = *($20 + [192])
	if ( ($9 == 0) ){ goto $label$56 }
	$10 = ($20 + [196])
	$14 = *($10)
	if ( ((int_32)$14 == (int_32)$9) ){ goto $label$58 }
	
.LOOP $label$65:
	$14 = ($14 + [-24])
	$5 = *($14)
	*($14) = [0]
	if ( ($5 == 0) ){ goto $label$66 }
	CALL $98($5)
	
.LABEL $label$66
	if ( ((int_32)$9 != (int_32)$14) ){ goto $label$65 }
	$14 = *(($20 + [192]))
	goto $label$57 
	
.LABEL $label$59
	CALL eosio_assert([0], [2192])
	$9 = *($20 + [112])
	if ( $9 ){ goto $label$54 }
	goto $label$53 
	
.LABEL $label$58
	$14 = $9
	
.LABEL $label$57
	*($10) = $9
	CALL $98($14)
	
.LABEL $label$56
	$14 = *($7 + [28])
	$14 = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) - $14)
	$5 = ((uint_32)$14 / (uint_32)[2592000])
	if ( ((uint_32)$14 > (uint_32)[2591999]) ){ goto $label$67 }
	CALL eosio_assert([0], [2224])
	$9 = *($20 + [112])
	if ( $9 ){ goto $label$54 }
	goto $label$53 
	
.LABEL $label$67
	$14 = ($7 + [24])
	if ( ((uint_32)$5 > (uint_32)*($14)) ){ goto $label$55 }
	$9 = ($7 + [16])
	CALL eosio_assert(((int_64)$15 == (int_64)*($9)), [2256])
	$11 = *($7 + [8])
	CALL __multi3(($20 + [40]), $11, (int_64)$11 >> (int_64)63), (CASTING uint_64)(uint_32 $5), (int_64)0)
	$8 = *($9)
	$12 = *((($20 + [40]) + [8]))
	$13 = *($20 + [40])
	CALL eosio_assert(( (uint_64)($13 <= (int_64)4611686018427387904) ? ((int_64)$12 < (int_64)0) : (int_64)($12 == 0) ), [2320])
	CALL eosio_assert(( ((uint_64)$13 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$12 > (int_64)-1) : ((int_64)$12 == (int_64)-1) ), [2352])
	$12 = *($14)
	CALL eosio_assert(((int_64)$12 != (int_64)0), [2384])
	CALL eosio_assert([1], [2400])
	$12 = ((int_64)$13 / (int_64)$12)
	if ( ((int_64)$17 <= (int_64)$11) ){ goto $label$68 }
	CALL eosio_assert(((int_64)*($9) == (int_64)$15), [560])
	$17 = (int_64)
	CALL eosio_assert(((int_64)$17($17 - *(($7 + [8])))) > (int_64)-4611686018427387904), [608])
	CALL eosio_assert(((int_64)$17 < (int_64)4611686018427387904), [640])
	CALL eosio_assert(((int_64)$15 == (int_64)$8), [896])
	$15 = ((int_64)$17 + (int_64)$12)
	CALL eosio_assert(((int_64)$15 > (int_64)-4611686018427387904), [944])
	CALL eosio_assert(((int_64)$15 < (int_64)4611686018427387904), [976])
	CALL eosio_assert(((int_64)$15 >= (int_64)*($3)), [2224])
	$9 = *($20 + [112])
	if ( $9 ){ goto $label$54 }
	goto $label$53 
	
.LABEL $label$68
	$11 = *(($7 + [8]))
	$13 = *($9)
	CALL eosio_assert(((int_64)$15 == (int_64)$13), [560])
	$15 = (int_64)
	CALL eosio_assert(((int_64)$15($11 - $17)) > (int_64)-4611686018427387904), [608])
	CALL eosio_assert(((int_64)$15 < (int_64)4611686018427387904), [640])
	CALL eosio_assert(((int_64)$13 == (int_64)$8), [560])
	$15 = (int_64)
	CALL eosio_assert(((int_64)$15($12 - $15)) > (int_64)-4611686018427387904), [608])
	CALL eosio_assert(((int_64)$15 < (int_64)4611686018427387904), [640])
	CALL eosio_assert(((int_64)$15 >= (int_64)*($3)), [2224])
	
.LABEL $label$55
	$9 = *($20 + [112])
	if ( ($9 == 0) ){ goto $label$53 }
	
.LABEL $label$54
	$7 = ($20 + [116])
	$14 = *($7)
	if ( ((int_32)$14 == (int_32)$9) ){ goto $label$70 }
	
.LOOP $label$71:
	$14 = ($14 + [-24])
	$5 = *($14)
	*($14) = [0]
	if ( ($5 == 0) ){ goto $label$72 }
	CALL $98($5)
	
.LABEL $label$72
	if ( ((int_32)$9 != (int_32)$14) ){ goto $label$71 }
	$14 = *(($20 + [112]))
	goto $label$69 
	
.LABEL $label$70
	$14 = $9
	
.LABEL $label$69
	*($7) = $9
	CALL $98($14)
	
.LABEL $label$53
	CALL require_recipient($1)
	CALL require_recipient($2)
	$15 = *($3)
	if ( ((uint_64)((int_64)$15 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$73 }
	$14 = [0]
	
.LOOP $label$75:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$74 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$76 }
	
.LOOP $label$77:
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$74 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$77 }
	
.LABEL $label$76
	$19 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$75 }
	goto $label$73 
	
.LABEL $label$74
	$19 = [0]
	
.LABEL $label$73
	CALL eosio_assert($19, [768])
	CALL eosio_assert(((int_64)$15 > (int_64)0), [800])
	CALL eosio_assert(((int_64)$18 == (int_64)*(($6 + [8]))), [832])
	$14 = *($4)
	if ( ($14 & [1]) ){ goto $label$79 }
	$14 = uint_32($14 >> [1])
	goto $label$78 
	
.LABEL $label$79
	$14 = *($4 + [4])
	
.LABEL $label$78
	CALL eosio_assert(($14 <= [257]), [864])
	$14 = CALL has_auth($2)
	$9 = ($3 + [8])
	*(($5 = (($20 + [72]) + [8]))) = *($9)
	$16 = *($3)
	*((($20 + [24]) + [12])) = *((($20 + [72]) + [12]))
	*((($20 + [24]) + [8])) = *($5)
	*($20 + [72]) = $16
	*($20 + [28]) = *($20 + [76])
	*($20 + [24]) = *($20 + [72])
	CALL _ZN5eosio5token11sub_balanceEyNS_5assetE($0, $1, ($20 + [24]))
	*(($5 = (($20 + [56]) + [8]))) = *($9)
	$16 = *($3)
	*((($20 + [8]) + [12])) = *((($20 + [56]) + [12]))
	*((($20 + [8]) + [8])) = *($5)
	*($20 + [56]) = $16
	*($20 + [12]) = *($20 + [60])
	*($20 + [8]) = *($20 + [56])
	CALL _ZN5eosio5token11add_balanceEyNS_5assetEy($0, $2, ($20 + [8]), ( $2 ? $1 : $14 ))
	$9 = *($20 + [152])
	if ( ($9 == 0) ){ goto $label$80 }
	$3 = ($20 + [156])
	$14 = *($3)
	if ( ((int_32)$14 == (int_32)$9) ){ goto $label$82 }
	
.LOOP $label$83:
	$14 = ($14 + [-24])
	$5 = *($14)
	*($14) = [0]
	if ( ($5 == 0) ){ goto $label$84 }
	CALL $98($5)
	
.LABEL $label$84
	if ( ((int_32)$9 != (int_32)$14) ){ goto $label$83 }
	$14 = *(($20 + [152]))
	goto $label$81 
	
.LABEL $label$82
	$14 = $9
	
.LABEL $label$81
	*($3) = $9
	CALL $98($14)
	
.LABEL $label$80
	*([0] + [4]) = ($20 + [208])
}

void .FUNC _ZN5eosio5token11add_balanceEyNS_5assetEy (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	$8 = [0]
	*((($9 + [8]) + [32])) = [0]
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	$6 = *($0)
	*($9 + [8]) = $6
	*($9 + [16]) = $1
	$4 = *($2 + [8])
	$0 = CALL db_find_i64($6, $1, (int_64)3607749779137757184, (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_32)$0) < (int_32)[0]) ){ goto $label$4 }
	$8 = CALL $16(($9 + [8]), $0)
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)($9 + [8])), [48])
	CALL eosio_assert([1], [144])
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)($9 + [8])), [192])
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$3()), [240])
	$1 = *($8 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)$1), [896])
	$6 = ((int_64)*($8) + (int_64)*($2))
	*($8) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [944])
	CALL eosio_assert(((int_64)*($8) < (int_64)4611686018427387904), [976])
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$1) == (int_64)(uint_64)*($8 + [8]) >> (uint_64)(int_64)8)), [304])
	CALL eosio_assert([1], [432])
	CALL memcpy(($9 + [64]), $8, [8])
	CALL eosio_assert([1], [432])
	CALL memcpy((($9 + [64]) | [8]), ($8 + [8]), [8])
	CALL db_update_i64(*($8 + [20]), (int_64)0, ($9 + [64]), [16])
	$8 = (($9 + [8]) + [16])
	if ( (uint_64)($1 <= *($8)) ){ goto $label$3 }
	*($8) = ((int_64)$1 + (int_64)1)
	$2 = *($9 + [32])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$3()), [1008])
	*(($0 = CALL $97([32])) + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [1072])
	$5 = ($0 + [8])
	$1 = (int_64)5462355
	
.LOOP $label$6:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	CALL eosio_assert($7, [1136])
	*($0 + [16]) = ($9 + [8])
	*(($8 = ($0 + [8]))) = *(($2 + [8]))
	*($0) = *($2)
	CALL eosio_assert([1], [432])
	CALL memcpy(($9 + [64]), $0, [8])
	CALL eosio_assert([1], [432])
	CALL memcpy((($9 + [64]) | [8]), $5, [8])
	$1 = (uint_64)*($8) >> (uint_64)(int_64)8
	$2 = CALL db_store_i64(*((($9 + [8]) + [8])), (int_64)3607749779137757184, $3, $1), ($9 + [64]), [16]
	*($0 + [20]) = $2)
	$7 = (($9 + [8]) + [16])
	if ( (uint_64)($1 <= *($7)) ){ goto $label$9 }
	*($7) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$9
	*($9 + [56]) = $0
	$1 = (uint_64)*($8) >> (uint_64)(int_64)8
	*($9 + [64]) = $1)
	*($9 + [52]) = $2
	$7 = ($9 + [36])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($9 + [40]))) ){ goto $label$11 }
	*($8 + [8]) = $1
	*($8 + [16]) = $2
	*($9 + [56]) = [0]
	*($8) = $0
	*($7) = ($8 + [24])
	goto $label$10 
	
.LABEL $label$11
	CALL $17(($9 + [32]), ($9 + [56]), ($9 + [64]), ($9 + [52]))
	
.LABEL $label$10
	$8 = *($9 + [56])
	*($9 + [56]) = [0]
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $98($8)
	
.LABEL $label$3
	$2 = *($9 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($9 + [36])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$13 }
	
.LOOP $label$14:
	$8 = ($8 + [-24])
	$0 = *($8)
	*($8) = [0]
	if ( ($0 == 0) ){ goto $label$15 }
	CALL $98($0)
	
.LABEL $label$15
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$14 }
	$8 = *(($9 + [32]))
	goto $label$12 
	
.LABEL $label$13
	$8 = $2
	
.LABEL $label$12
	*($7) = $2
	CALL $98($8)
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [80])
}

void .FUNC _ZN5eosio5token11sub_balanceEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [64])
	*([0] + [4]) = $8
	*(($8 + [40])) = [0]
	*($8 + [16]) = $1
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	*($8 + [8]) = *($0)
	$4 = *($2)
	$3 = *($2 + [8])
	$0 = CALL $19(($8 + [8]), (uint_64)$3 >> (uint_64)(int_64)8), [1168]
	CALL eosio_assert(((int_64)*($0)) >= (int_64)$4), [528])
	if ( ((int_64)$4 != (int_64)*($0)) ){ goto $label$3 }
	CALL $20(($8 + [8]), $0)
	$5 = *($8 + [32])
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)($8 + [8])), [192])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)CALL $fimport$3()), [240])
	$6 = *($0 + [8])
	CALL eosio_assert(((int_64)$3 == (int_64)$6), [560])
	$4 = (int_64)
	*($0) = $4(*($0) - $4))
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [608])
	CALL eosio_assert(((int_64)*($0) < (int_64)4611686018427387904), [640])
	$4 = (uint_64)$6 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$4) == (int_64)(uint_64)*($0 + [8]) >> (uint_64)(int_64)8)), [304])
	CALL eosio_assert([1], [432])
	CALL memcpy(($8 + [48]), $0, [8])
	CALL eosio_assert([1], [432])
	CALL memcpy((($8 + [48]) | [8]), ($0 + [8]), [8])
	CALL db_update_i64(*($0 + [20]), $1, ($8 + [48]), [16])
	$0 = (($8 + [8]) + [16])
	if ( (uint_64)($4 <= *($0)) ){ goto $label$4 }
	*($0) = ((int_64)$4 + (int_64)1)
	
.LABEL $label$4
	$5 = *($8 + [32])
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($8 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$8 }
	CALL $98($2)
	
.LABEL $label$8
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($8 + [32]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $5
	
.LABEL $label$5
	*($7) = $5
	CALL $98($0)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [64])
}

int_32 .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [448])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $97([48])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [1072])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [1136])
	*($4 + [32]) = $0
	CALL $68(($8 + [32]), $4)
	*($4 + [36]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [36])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $69($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $98($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC _ZN5eosio5token6createEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [128])
	*([0] + [4]) = $9
	CALL require_auth(*($0))
	$8 = [0]
	$3 = *($2 + [8])
	$4 = (uint_64)$3 >> (uint_64)(int_64)8
	$7 = $4)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [1136])
	$6 = [0]
	$5 = *($2)
	if ( ((uint_64)((int_64)$5 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$6 }
	$8 = [0]
	$7 = $4
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$6 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$6 = [0]
	
.LABEL $label$6
	CALL eosio_assert($6, [1712])
	CALL eosio_assert(((int_64)$5 > (int_64)0), [1728])
	*((($9 + [8]) + [32])) = [0]
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	$7 = *($0)
	*($9 + [8]) = $7
	*($9 + [16]) = $4
	$8 = CALL db_find_i64($7, $4, (int_64)-4157508551318700032, $4)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$12 }
	CALL eosio_assert(((int_32)*(CALL $21(($9 + [8]), $8) + [40]) == (int_32)($9 + [8])), [48])
	$8 = [0]
	goto $label$11 
	
.LABEL $label$12
	$8 = [1]
	
.LABEL $label$11
	CALL eosio_assert($8, [1760])
	$4 = *($0)
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$3()), [1008])
	$8 = CALL $97([56])
	CALL $22($8)
	*($8 + [40]) = ($9 + [8])
	*($8 + [8]) = $3
	*(($8 + [28])) = *(($2 + [12]))
	*(($8 + [24])) = *(($2 + [8]))
	*(($8 + [20])) = *(($2 + [4]))
	*($8 + [16]) = *($2)
	*($8 + [32]) = $1
	*($9 + [96]) = (($9 + [48]) + [40])
	*($9 + [92]) = ($9 + [48])
	*($9 + [88]) = ($9 + [48])
	*($9 + [104]) = ($9 + [88])
	*($9 + [116]) = ($8 + [16])
	*($9 + [112]) = $8
	*($9 + [120]) = ($8 + [32])
	CALL $62(($9 + [112]), ($9 + [104]))
	$7 = (uint_64)*($8 + [8]) >> (uint_64)(int_64)8
	$6 = CALL db_store_i64(*((($9 + [8]) + [8])), (int_64)-4157508551318700032, $4, $7), ($9 + [48]), [40]
	*($8 + [44]) = $6)
	$2 = (($9 + [8]) + [16])
	if ( (uint_64)($7 <= *($2)) ){ goto $label$13 }
	*($2) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$13
	*($9 + [112]) = $8
	$7 = (uint_64)*(($8 + [8])) >> (uint_64)(int_64)8
	*($9 + [48]) = $7)
	*($9 + [88]) = $6
	$2 = *((($9 + [8]) + [28]))
	if ( ((uint_32)$2 >= (uint_32)*(($9 + [40]))) ){ goto $label$15 }
	*($2 + [8]) = $7
	*($2 + [16]) = $6
	*($9 + [112]) = [0]
	*($2) = $8
	*(($9 + [36])) = ($2 + [24])
	goto $label$14 
	
.LABEL $label$15
	CALL $24(($9 + [32]), ($9 + [112]), ($9 + [48]), ($9 + [88]))
	
.LABEL $label$14
	$8 = *($9 + [112])
	*($9 + [112]) = [0]
	if ( ($8 == 0) ){ goto $label$16 }
	CALL $98($8)
	
.LABEL $label$16
	$6 = *($9 + [32])
	if ( ($6 == 0) ){ goto $label$17 }
	$0 = ($9 + [36])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$19 }
	
.LOOP $label$20:
	$8 = ($8 + [-24])
	$2 = *($8)
	*($8) = [0]
	if ( ($2 == 0) ){ goto $label$21 }
	CALL $98($2)
	
.LABEL $label$21
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$20 }
	$8 = *(($9 + [32]))
	goto $label$18 
	
.LABEL $label$19
	$8 = $6
	
.LABEL $label$18
	*($0) = $6
	CALL $98($8)
	
.LABEL $label$17
	*([0] + [4]) = ($9 + [128])
}

void .FUNC $60 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [28]) == (int_32)$0), [1200])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1248])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1312])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $98($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $98($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [32]))
}

void .FUNC _ZN5eosio5token5issueEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [224])
	*([0] + [4]) = $14
	$9 = [0]
	$11 = *($2 + [8])
	$13 = (uint_64)$11 >> (uint_64)(int_64)8
	$8 = $13)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$7 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [1136])
	$9 = *($3)
	if ( ($9 & [1]) ){ goto $label$7 }
	$9 = uint_32($9 >> [1])
	goto $label$6 
	
.LABEL $label$7
	$9 = *($3 + [4])
	
.LABEL $label$6
	CALL eosio_assert(($9 <= [257]), [864])
	$10 = [0]
	*((($14 + [88]) + [32])) = [0]
	*($14 + [104]) = (int_64)-1
	*($14 + [112]) = (int_64)0
	$8 = *($0)
	*($14 + [88]) = $8
	*($14 + [96]) = $13
	$7 = [0]
	$9 = CALL db_find_i64($8, $13, (int_64)-4157508551318700032, $13)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$8 }
	$7 = CALL $21(($14 + [88]), $9)
	CALL eosio_assert(((int_32)*($7 + [40]) == (int_32)($14 + [88])), [48])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [1808])
	CALL require_auth(*($7 + [32]))
	$4 = ($7 + [32])
	$8 = *($2)
	if ( ((uint_64)((int_64)$8 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$9 }
	$9 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$10 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$10 = [0]
	
.LABEL $label$9
	CALL eosio_assert($10, [768])
	CALL eosio_assert(((int_64)$8 > (int_64)0), [1872])
	CALL eosio_assert(((int_64)$11 == (int_64)*($7 + [8])), [832])
	CALL eosio_assert(((int_64)$8 <= (int_64))(*($7 + [16]) - *($7))), [1904])
	CALL eosio_assert(((int_32)*($7 + [40]) == (int_32)($14 + [88])), [192])
	CALL eosio_assert(((int_64)*($14 + [88]) == (int_64)CALL $fimport$3()), [240])
	$13 = *($7 + [8])
	CALL eosio_assert(((int_64)$11 == (int_64)$13), [896])
	$8 = ((int_64)*($7) + (int_64)$8)
	*($7) = $8
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [944])
	CALL eosio_assert(((int_64)*($7) < (int_64)4611686018427387904), [976])
	$8 = (uint_64)$13 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$8) == (int_64)(uint_64)*($7 + [8]) >> (uint_64)(int_64)8)), [304])
	*($14 + [192]) = (($14 + [128]) + [40])
	*($14 + [188]) = ($14 + [128])
	*($14 + [184]) = ($14 + [128])
	*($14 + [200]) = ($14 + [184])
	*($14 + [212]) = ($7 + [16])
	*($14 + [208]) = $7
	*($14 + [216]) = $4
	CALL $62(($14 + [208]), ($14 + [200]))
	CALL db_update_i64(*($7 + [44]), (int_64)0, ($14 + [128]), [40])
	$9 = (($14 + [88]) + [16])
	if ( (uint_64)($8 <= *($9)) ){ goto $label$14 }
	*($9) = ((int_64)$8 + (int_64)1)
	
.LABEL $label$14
	*(($9 = (($14 + [72]) + [12]))) = *(($2 + [12]))
	*(($7 = (($14 + [72]) + [8]))) = *(($2 + [8]))
	*($14 + [76]) = *(($2 + [4]))
	*($14 + [72]) = *($2)
	$8 = *($4)
	*((($14 + [8]) + [12])) = *($9)
	*((($14 + [8]) + [8])) = *($7)
	*($14 + [12]) = *($14 + [76])
	*($14 + [8]) = *($14 + [72])
	CALL _ZN5eosio5token11add_balanceEyNS_5assetEy($0, $8, ($14 + [8]), $8)
	$5 = *($4)
	if ( ((int_64)$5 == (int_64)$1) ){ goto $label$15 }
	$6 = *($0)
	$8 = (int_64)0
	$11 = (int_64)59
	$9 = [1616]
	$12 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$21 }
	$7 = *($9)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$7 = ($7 + [165])
	goto $label$19 
	
.LABEL $label$21
	$13 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$17
	$9 = ($9 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$16 }
	*(($14 + [52])) = *(($2 + [12]))
	*(($7 = (($14 + [24]) + [24]))) = *(($2 + [8]))
	*(($14 + [44])) = *(($2 + [4]))
	*($14 + [32]) = $1
	*($14 + [24]) = $5
	*($14 + [40]) = *($2)
	CALL $102(($14 + [56]), $3)
	*(($9 = CALL $97([16]))) = $5
	*($9 + [8]) = $12
	*($14 + [208]) = $9
	$9 = ($9 + [16])
	*($14 + [216]) = $9
	*($14 + [212]) = $9
	*($14 + [128]) = *($14 + [24])
	*($14 + [136]) = *($14 + [32])
	*((($14 + [128]) + [24])) = *($7)
	*($14 + [144]) = *($14 + [40])
	$9 = (($14 + [24]) + [40])
	*(($7 = (($14 + [128]) + [40]))) = *($9)
	*($14 + [160]) = *($14 + [56])
	*($14 + [56]) = [0]
	*(($14 + [60])) = [0]
	*($9) = [0]
	CALL $45($6, (int_64)-3617168760277827584, ($14 + [208]), ($14 + [128]))
	if ( ((*($14 + [160]) & [1]) == 0) ){ goto $label$22 }
	CALL $98(*($7))
	
.LABEL $label$22
	$9 = *($14 + [208])
	if ( ($9 == 0) ){ goto $label$23 }
	*($14 + [212]) = $9
	CALL $98($9)
	
.LABEL $label$23
	if ( ((*(($14 + [56])) & [1]) == 0) ){ goto $label$15 }
	CALL $98(*(($14 + [64])))
	
.LABEL $label$15
	$2 = *($14 + [112])
	if ( ($2 == 0) ){ goto $label$24 }
	$10 = ($14 + [116])
	$9 = *($10)
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$26 }
	
.LOOP $label$27:
	$9 = ($9 + [-24])
	$7 = *($9)
	*($9) = [0]
	if ( ($7 == 0) ){ goto $label$28 }
	CALL $98($7)
	
.LABEL $label$28
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$27 }
	$9 = *(($14 + [112]))
	goto $label$25 
	
.LABEL $label$26
	$9 = $2
	
.LABEL $label$25
	*($10) = $2
	CALL $98($9)
	
.LABEL $label$24
	*([0] + [4]) = ($14 + [224])
}

void .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [432])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [432])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [432])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [432])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [432])
	CALL memcpy(*($2 + [4]), $0, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $101 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $100 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $97(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $98($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

int_32 .FUNC $102 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $97($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $105 ()
{
	(unreachable)
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

void .FUNC $89 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $102($5, ($1 + [16]))
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	CALL $102(($5 + [16]), $5)
	CALL void $0((int_32 $2), (int_64 $3), (int_64 ($5 + [16])), (int_32 $1))
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $98(*($5 + [24]))
	
.LABEL $label$2
	if ( ((*($5) & [1]) == 0) ){ goto $label$3 }
	CALL $98(*($5 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [32])
}

int_32 .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [2688])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $46($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [480])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

int_32 .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $88($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $100($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $97($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $100($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $98($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $99($7)
	return (unreachable)
}

void .FUNC $86 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [96])
	*([0] + [4]) = $7
	*(($7 + [44])) = *(($1 + [44]))
	*(($6 = (($7 + [32]) + [8]))) = *(($1 + [40]))
	*($7 + [32]) = *($1 + [32])
	*($7 + [36]) = *(($1 + [36]))
	$5 = *($1 + [24])
	$4 = *($1 + [16])
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $102(($7 + [16]), ($1 + [48]))
	*((($7 + [48]) + [8])) = *($6)
	*($7 + [48]) = *($7 + [32])
	$1 = *($0 + [4])
	$6 = *($1 + [4])
	$0 = (*(*($0)) + int_32($6 >> [1]))
	$1 = *($1)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($6 = (($7 + [80]) + [8]))) = *((($7 + [48]) + [8]))
	*($7 + [80]) = *($7 + [48])
	CALL $102(($7 + [64]), ($7 + [16]))
	*(($7 + [8])) = *($6)
	*($7) = *($7 + [80])
	CALL void $0((int_32 $2), (int_64 ((int_32)($3 & [255]) != (int_32)[0])), (int_32 $4), (int_64 ((int_32)($5 & [255]) != (int_32)[0])), (int_32 $7), (int_32 ($7 + [64])), (int_32 $1))
	if ( ((*($7 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $98(*($7 + [72]))
	
.LABEL $label$2
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $98(*($7 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [96])
}

void .FUNC $85 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [480])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [480])
	CALL memcpy(($4 + [14]), *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	*($0 + [8]) = ((int_32)*($4 + [14]) != (int_32)[0])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [480])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [480])
	CALL memcpy(($4 + [15]), *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	*($0 + [24]) = ((int_32)*($4 + [15]) != (int_32)[0])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [480])
	CALL memcpy(($0 + [32]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [480])
	CALL memcpy(($0 + [40]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $87(*($1), ($0 + [48]))
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [480])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0)
	$0 = *($1)
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [480])
	CALL memcpy(($4 + [14]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	*($3 + [8]) = ((int_32)*($4 + [14]) != (int_32)[0])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [480])
	CALL memcpy(($3 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [480])
	CALL memcpy(($4 + [15]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	*($3 + [24]) = ((int_32)*($4 + [15]) != (int_32)[0])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[7]), [480])
	CALL memcpy(($3 + [32]), *($1 + [4]), [8])
	$0 = (*($1 + [4]) + [8])
	*($1 + [4]) = $0
	CALL eosio_assert(((uint_32)(*($1 + [8]) - $0) > (uint_32)[7]), [480])
	CALL memcpy(($3 + [40]), *($1 + [4]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $83 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = (*([0] + [4]) - [16])
	$8 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	$6 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8 + [8]) = (int_64)0
	*($8) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [480])
	CALL memcpy($8, $6, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [480])
	$5 = ($8 + [8])
	CALL memcpy($5, ($6 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($5)
	$3 = *($8)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$7 = *((*($1) + $7))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $7))
	*([0] + [4]) = ($8 + [16])
	return [1]
}

int_32 .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$8 = (*([0] + [4]) - [112])
	$10 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$9 = *($1)
	$1 = [0]
	$6 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($8 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $3)
	
.LABEL $label$1
	*(($10 + [56])) = (int_64)1398362884
	*($10 + [24]) = [0]
	*($10 + [16]) = (int_64)0
	*($10 + [32]) = (int_64)0
	*($10 + [40]) = [0]
	*($10 + [48]) = (int_64)0
	CALL eosio_assert([1], [1072])
	$7 = (int_64)5462355
	
.LOOP $label$5:
	$8 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$8 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($8, [1136])
	*($10 + [100]) = $6
	*($10 + [96]) = $6
	*($10 + [104]) = ($6 + $3)
	*($10 + [64]) = ($10 + [96])
	*($10 + [80]) = ($10 + [16])
	CALL $84(($10 + [80]), ($10 + [64]))
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($6)
	
.LABEL $label$8
	*(($10 + [76])) = *(($10 + [60]))
	$8 = *((($10 + [16]) + [8]))
	*(($1 = (($10 + [64]) + [8]))) = *(($10 + [56]))
	$7 = *($10 + [16])
	*($10 + [64]) = *($10 + [48])
	*($10 + [68]) = *(($10 + [52]))
	$6 = *(($10 + [40]))
	$4 = *(($10 + [32]))
	*((($10 + [80]) + [8])) = *($1)
	*($10 + [80]) = *($10 + [64])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$9 = *((*($1) + $9))
	
.LABEL $label$9
	$5 = *((($10 + [80]) + [8]))
	*((($10 + [96]) + [8])) = $5
	*(($10 + [8])) = $5
	$5 = *($10 + [80])
	*($10 + [96]) = $5
	*($10) = $5
	CALL void $1((int_32 $7), (int_64 ((int_32)($8 & [255]) != (int_32)[0])), (int_32 $4), (int_64 ((int_32)($6 & [255]) != (int_32)[0])), (int_32 $10), (int_32 $9))
	*([0] + [4]) = ($10 + [112])
	return [1]
}

int_32 .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [112])
	*([0] + [4]) = $4
	*(($5 = $4) + [76]) = $0
	*($5 + [64]) = *($1)
	*($5 + [68]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [40])) = (int_64)1398362884
	*($5 + [8]) = [0]
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = [0]
	*($5 + [32]) = (int_64)0
	CALL eosio_assert([1], [1072])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [1136])
	*(($5 + [56])) = [0]
	*($5 + [48]) = (int_64)0
	*($5 + [84]) = $0
	*($5 + [80]) = $0
	*($5 + [88]) = ($0 + $2)
	*($5 + [96]) = ($5 + [80])
	*($5 + [104]) = $5
	CALL $85(($5 + [104]), ($5 + [96]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [84]) = ($5 + [64])
	*($5 + [80]) = ($5 + [76])
	CALL $86(($5 + [80]), $5)
	if ( ((*($5 + [48]) & [1]) == 0) ){ goto $label$10 }
	CALL $98(*(($5 + [56])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [112])
	return [1]
}

int_32 .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [64])
	*([0] + [4]) = $4
	*(($3 = $4) + [44]) = $0
	*($3 + [32]) = *($1)
	*($3 + [36]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($4 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($3 + [24])) = [0]
	*($3 + [8]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [48]) = $1
	$4 = ($1 + $0)
	*($3 + [56]) = $4
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [480])
	CALL memcpy($3, $1, [8])
	$2 = ($1 + [8])
	CALL eosio_assert(((uint_32)($4 - $2) > (uint_32)[7]), [480])
	CALL memcpy(($3 + [8]), $2, [8])
	*($3 + [52]) = ($1 + [16])
	CALL $87(($3 + [48]), ($3 + [16]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($3 + [52]) = ($3 + [32])
	*($3 + [48]) = ($3 + [44])
	CALL $89(($3 + [48]), $3)
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $98(*(($3 + [24])))
	
.LABEL $label$5
	*([0] + [4]) = ($3 + [64])
	return [1]
}

void .FUNC _ZN5eosio5token6unlockEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	CALL eosio_assert(CALL $fimport$14($1), [2512])
	CALL require_auth(*($0))
	*(($6 + [32])) = [0]
	*($6 + [16]) = (int_64)-1
	*($6 + [24]) = (int_64)0
	$4 = *($0)
	*($6) = $4
	*($6 + [8]) = $4
	$0 = [0]
	$3 = CALL db_find_i64($4, $4, (int_64)-8281824366442840064, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $66($6, $3)
	CALL eosio_assert(((int_32)*($0 + [32]) == (int_32)$6), [48])
	
.LABEL $label$1
	$3 = ((int_32)$0 != (int_32)[0])
	CALL eosio_assert($3, [2544])
	CALL eosio_assert($3, [1488])
	CALL eosio_assert($3, [1536])
	$3 = CALL db_next_i64(*($0 + [36]), ($6 + [40]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	CALL $66($6, $3)
	
.LABEL $label$2
	CALL $73($6, $0)
	$2 = *($6 + [24])
	if ( ($2 == 0) ){ goto $label$3 }
	$5 = ($6 + [28])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $98($3)
	
.LABEL $label$7
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($6 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $2
	
.LABEL $label$4
	*($5) = $2
	CALL $98($0)
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [48])
}

void .FUNC $73 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1200])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1248])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1312])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $98($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $98($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
}

void .FUNC _ZN5eosio5token4lockEym (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [128])
	*([0] + [4]) = $9
	CALL eosio_assert(CALL $fimport$14($1), [2432])
	CALL require_auth(*($0))
	*((($9 + [16]) + [32])) = [0]
	*($9 + [32]) = (int_64)-1
	*($9 + [40]) = (int_64)0
	$7 = *($0)
	*($9 + [16]) = $7
	*($9 + [24]) = $7
	$8 = CALL db_find_i64($7, $7, (int_64)-8281824366442840064, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*(CALL $66(($9 + [16]), $8) + [32]) == (int_32)($9 + [16])), [48])
	CALL eosio_assert([0], [2464])
	$4 = *($9 + [40])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*((($9 + [80]) + [32])) = [0]
	*($9 + [88]) = $1
	*($9 + [96]) = (int_64)-1
	*($9 + [104]) = (int_64)0
	*($9 + [80]) = *($0)
	$8 = CALL $19(($9 + [80]), (int_64)4347216, [736])
	*(($9 + [8])) = *(($8 + [8]))
	*($9) = *($8)
	$4 = *($9 + [104])
	if ( ($4 == 0) ){ goto $label$4 }
	$6 = ($9 + [108])
	$8 = *($6)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	
.LOOP $label$7:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$8 }
	CALL $98($5)
	
.LABEL $label$8
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$7 }
	$8 = *(($9 + [104]))
	goto $label$5 
	
.LABEL $label$6
	$8 = $4
	
.LABEL $label$5
	*($6) = $4
	CALL $98($8)
	
.LABEL $label$4
	$3 = *($0)
	CALL eosio_assert(((int_64)*($9 + [16]) == (int_64)CALL $fimport$3()), [1008])
	*(($5 = CALL $97([48])) + [16]) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	CALL eosio_assert([1], [1072])
	$0 = ($5 + [8])
	$7 = (int_64)5462355
	$8 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$4 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$4 = [0]
	
.LABEL $label$9
	CALL eosio_assert($4, [1136])
	*($5 + [32]) = ($9 + [16])
	*($5) = $1
	*(($0 + [12])) = *(($9 + [12]))
	*(($0 + [8])) = *(($9 + [8]))
	*(($0 + [4])) = *($9 + [4])
	*($0) = *($9)
	*($5 + [24]) = $2
	*($5 + [28]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*($9 + [72]) = (($9 + [80]) + [32])
	*($9 + [68]) = ($9 + [80])
	*($9 + [64]) = ($9 + [80])
	CALL $71(($9 + [64]), $5)
	$7 = *($5)
	$4 = CALL db_store_i64(*((($9 + [16]) + [8])), (int_64)-8281824366442840064, $3, $7, ($9 + [80]), [32])
	*($5 + [36]) = $4
	$8 = ($9 + [32])
	if ( (uint_64)($7 <= *($8)) ){ goto $label$14 }
	*($8) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$14
	*($9 + [64]) = $5
	$7 = *($5)
	*($9 + [80]) = $7
	*($9 + [60]) = $4
	$0 = ($9 + [44])
	$8 = *($0)
	if ( ((uint_32)$8 >= (uint_32)*((($9 + [16]) + [32]))) ){ goto $label$16 }
	*($8 + [8]) = $7
	*($8 + [16]) = $4
	*($9 + [64]) = [0]
	*($8) = $5
	*($0) = ($8 + [24])
	goto $label$15 
	
.LABEL $label$16
	CALL $69(($9 + [40]), ($9 + [64]), ($9 + [80]), ($9 + [60]))
	
.LABEL $label$15
	$8 = *($9 + [64])
	*($9 + [64]) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $98($8)
	
.LABEL $label$17
	$4 = *($9 + [40])
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$0 = ($9 + [44])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$19 }
	
.LOOP $label$20:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$21 }
	CALL $98($5)
	
.LABEL $label$21
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$20 }
	$8 = *(($9 + [40]))
	goto $label$18 
	
.LABEL $label$19
	$8 = $4
	
.LABEL $label$18
	*($0) = $4
	CALL $98($8)
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [128])
}

int_32 .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [432])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [432])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [432])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [432])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [432])
	CALL memcpy(*($0 + [4]), ($1 + [28]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [80])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	CALL eosio_assert([1], [1072])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [1136])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [64]) = $0
	$1 = ($0 + $2)
	*($5 + [72]) = $1
	CALL eosio_assert(((uint_32)$2 > (uint_32)[7]), [480])
	CALL memcpy(($5 + [8]), $0, [8])
	$4 = ($0 + [8])
	CALL eosio_assert(((uint_32)($1 - $4) > (uint_32)[7]), [480])
	CALL memcpy((($5 + [8]) + [8]), $4, [8])
	$4 = ($0 + [16])
	CALL eosio_assert(((uint_32)($1 - $4) > (uint_32)[7]), [480])
	CALL memcpy((($5 + [8]) + [16]), $4, [8])
	*($5 + [68]) = ($0 + [24])
	CALL $87(($5 + [64]), (($5 + [8]) + [24]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $92(($5 + [64]), ($5 + [8]))
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $98(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [80])
	return [1]
}

int_32 .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [1072])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [1136])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [68]) = $0
	*($5 + [64]) = $0
	*($5 + [72]) = ($0 + $2)
	*($5 + [80]) = ($5 + [64])
	*($5 + [88]) = $5
	CALL $90(($5 + [88]), ($5 + [80]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $91(($5 + [64]), $5)
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $98(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [96])
	return [1]
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [272])
	*([0] + [4]) = $9
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [2592]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$7 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [2608]
	$7 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$13 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$9
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$8 }
	CALL eosio_assert(((int_64)$7 == (int_64)$1), [2624])
	
.LABEL $label$7
	if ( ((int_64)$1 == (int_64)$0) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [2592]
	$7 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$21 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$3 = ($3 + [165])
	goto $label$19 
	
.LABEL $label$21
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$17
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$16 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$14 }
	
.LABEL $label$15
	*($9 + [264]) = $0
	if ( ((int_64)$2 > (int_64)-3106564276286914561) ){ goto $label$36 }
	if ( ((int_64)$2 > (int_64)-5001342339331915777) ){ goto $label$35 }
	if ( ((int_64)$2 > (int_64)-5920734475137843201) ){ goto $label$33 }
	if ( ((int_64)$2 == (int_64)-8281838239757631488) ){ goto $label$29 }
	if ( ((int_64)$2 != (int_64)-7297973096368160768) ){ goto $label$14 }
	*($9 + [220]) = [0]
	*($9 + [216]) = [1]
	*($9 + [48 align=4]) = *($9 + [216])
	CALL $79(($9 + [264]), ($9 + [48]))
	goto $label$14 
	
.LABEL $label$36
	if ( ((int_64)$2 > (int_64)5031766152489992191) ){ goto $label$34 }
	if ( ((int_64)$2 > (int_64)-3075276126730321921) ){ goto $label$32 }
	if ( ((int_64)$2 == (int_64)-3106564276286914560) ){ goto $label$28 }
	if ( ((int_64)$2 != (int_64)-3102536759825661952) ){ goto $label$14 }
	*($9 + [180]) = [0]
	*($9 + [176]) = [2]
	*($9 + [88 align=4]) = *($9 + [176])
	CALL $82(($9 + [264]), ($9 + [88]))
	goto $label$14 
	
.LABEL $label$35
	if ( ((int_64)$2 > (int_64)-3797316925835444225) ){ goto $label$31 }
	if ( ((int_64)$2 == (int_64)-5001342339331915776) ){ goto $label$27 }
	if ( ((int_64)$2 != (int_64)-4157661383434960896) ){ goto $label$14 }
	*($9 + [188]) = [0]
	*($9 + [184]) = [3]
	*($9 + [80 align=4]) = *($9 + [184])
	CALL $82(($9 + [264]), ($9 + [80]))
	goto $label$14 
	
.LABEL $label$34
	if ( ((int_64)$2 > (int_64)5378012977604067327) ){ goto $label$30 }
	if ( ((int_64)$2 == (int_64)5031766152489992192) ){ goto $label$26 }
	if ( ((int_64)$2 != (int_64)5377971004819521536) ){ goto $label$14 }
	*($9 + [148]) = [0]
	*($9 + [144]) = [4]
	*($9 + [120 align=4]) = *($9 + [144])
	CALL $79(($9 + [264]), ($9 + [120]))
	goto $label$14 
	
.LABEL $label$33
	if ( ((int_64)$2 == (int_64)-5920734475137843200) ){ goto $label$25 }
	if ( ((int_64)$2 != (int_64)-5868300701693989376) ){ goto $label$14 }
	*($9 + [196]) = [0]
	*($9 + [192]) = [5]
	*($9 + [72 align=4]) = *($9 + [192])
	CALL $81(($9 + [264]), ($9 + [72]))
	goto $label$14 
	
.LABEL $label$32
	if ( ((int_64)$2 == (int_64)-3075276126730321920) ){ goto $label$24 }
	if ( ((int_64)$2 != (int_64)4851652232166244352) ){ goto $label$14 }
	*($9 + [212]) = [0]
	*($9 + [208]) = [6]
	*($9 + [56 align=4]) = *($9 + [208])
	CALL $80(($9 + [264]), ($9 + [56]))
	goto $label$14 
	
.LABEL $label$31
	if ( ((int_64)$2 == (int_64)-3797316925835444224) ){ goto $label$23 }
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$14 }
	*($9 + [244]) = [0]
	*($9 + [240]) = [7]
	*($9 + [24 align=4]) = *($9 + [240])
	CALL $77(($9 + [264]), ($9 + [24]))
	goto $label$14 
	
.LABEL $label$30
	if ( ((int_64)$2 == (int_64)5378012977604067328) ){ goto $label$22 }
	if ( ((int_64)$2 != (int_64)8516769789752901632) ){ goto $label$14 }
	*($9 + [252]) = [0]
	*($9 + [248]) = [8]
	*($9 + [16 align=4]) = *($9 + [248])
	CALL $76(($9 + [264]), ($9 + [16]))
	goto $label$14 
	
.LABEL $label$29
	*($9 + [236]) = [0]
	*($9 + [232]) = [9]
	*($9 + [32 align=4]) = *($9 + [232])
	CALL $78(($9 + [264]), ($9 + [32]))
	goto $label$14 
	
.LABEL $label$28
	*($9 + [228]) = [0]
	*($9 + [224]) = [10]
	*($9 + [40 align=4]) = *($9 + [224])
	CALL $79(($9 + [264]), ($9 + [40]))
	goto $label$14 
	
.LABEL $label$27
	*($9 + [172]) = [0]
	*($9 + [168]) = [11]
	*($9 + [96 align=4]) = *($9 + [168])
	CALL $83(($9 + [264]), ($9 + [96]))
	goto $label$14 
	
.LABEL $label$26
	*($9 + [260]) = [0]
	*($9 + [256]) = [12]
	*($9 + [8 align=4]) = *($9 + [256])
	CALL $75(($9 + [264]), ($9 + [8]))
	goto $label$14 
	
.LABEL $label$25
	*($9 + [204]) = [0]
	*($9 + [200]) = [13]
	*($9 + [64 align=4]) = *($9 + [200])
	CALL $80(($9 + [264]), ($9 + [64]))
	goto $label$14 
	
.LABEL $label$24
	*($9 + [156]) = [0]
	*($9 + [152]) = [14]
	*($9 + [112 align=4]) = *($9 + [152])
	CALL $75(($9 + [264]), ($9 + [112]))
	goto $label$14 
	
.LABEL $label$23
	*($9 + [164]) = [0]
	*($9 + [160]) = [15]
	*($9 + [104 align=4]) = *($9 + [160])
	CALL $76(($9 + [264]), ($9 + [104]))
	goto $label$14 
	
.LABEL $label$22
	*($9 + [140]) = [0]
	*($9 + [136]) = [16]
	*($9 + [128 align=4]) = *($9 + [136])
	CALL $83(($9 + [264]), ($9 + [128]))
	
.LABEL $label$14
	*([0] + [4]) = ($9 + [272])
}

int_32 .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [448])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $97([40])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [1072])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [1136])
	*($4 + [28]) = $0
	CALL $42(($8 + [32]), $4)
	*($4 + [32]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [32])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $43($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $98($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC _ZN5eosio5token6thanksEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [112])
	*([0] + [4]) = $8
	CALL require_auth(*($0))
	*(($8 + [40])) = [0]
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	$5 = *($0)
	*($8 + [8]) = $5
	*($8 + [16]) = $1
	$7 = [0]
	$4 = CALL db_find_i64($5, $1, (int_64)-5868309319417593856, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $7(($8 + [8]), $4)
	CALL eosio_assert(((int_32)*($7 + [48]) == (int_32)($8 + [8])), [48])
	
.LABEL $label$1
	$4 = ((int_32)$7 != (int_32)[0])
	CALL eosio_assert($4, [496])
	$5 = *($2)
	CALL eosio_assert(((int_64)*($7 + [32]) >= (int_64)$5), [528])
	CALL eosio_assert(((int_64)$5 > (int_64)0), [800])
	$6 = *($0)
	CALL eosio_assert($4, [144])
	CALL eosio_assert(((int_32)*($7 + [48]) == (int_32)($8 + [8])), [192])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)CALL $fimport$3()), [240])
	$1 = *($7)
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($7 + [40]))), [560])
	$5 = (int_64)
	*($7 + [32]) = $5(*($7 + [32]) - $5))
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [608])
	CALL eosio_assert(((int_64)*($7 + [32]) < (int_64)4611686018427387904), [640])
	CALL eosio_assert(((int_64)$1 == (int_64)*($7)), [304])
	*($8 + [104]) = (($8 + [48]) + [48])
	*($8 + [100]) = ($8 + [48])
	*($8 + [96]) = ($8 + [48])
	CALL $8(($8 + [96]), $7)
	CALL db_update_i64(*($7 + [52]), $6, ($8 + [48]), [48])
	$7 = ($8 + [24])
	if ( (uint_64)($1 <= *($7)) ){ goto $label$2 }
	*($7) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	$2 = *($8 + [32])
	if ( ($2 == 0) ){ goto $label$3 }
	$4 = ($8 + [36])
	$7 = *($4)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$7 = ($7 + [-24])
	$0 = *($7)
	*($7) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	CALL $98($0)
	
.LABEL $label$7
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$6 }
	$7 = *(($8 + [32]))
	goto $label$4 
	
.LABEL $label$5
	$7 = $2
	
.LABEL $label$4
	*($4) = $2
	CALL $98($7)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [112])
}

void .FUNC _ZN5eosio5token6updateEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [112])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	*(($6 + [40])) = [0]
	*($6 + [24]) = (int_64)-1
	*($6 + [32]) = (int_64)0
	$3 = *($0)
	*($6 + [8]) = $3
	*($6 + [16]) = $1
	$5 = [0]
	$4 = CALL db_find_i64($3, $1, (int_64)-5868309319417593856, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $7(($6 + [8]), $4)
	CALL eosio_assert(((int_32)*($5 + [48]) == (int_32)($6 + [8])), [48])
	
.LABEL $label$1
	$4 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($4, [496])
	$3 = *($0)
	CALL eosio_assert($4, [144])
	CALL eosio_assert(((int_32)*($5 + [48]) == (int_32)($6 + [8])), [192])
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)CALL $fimport$3()), [240])
	*(($5 + [44])) = *(($2 + [12]))
	*(($5 + [40])) = *(($2 + [8]))
	*(($5 + [36])) = *(($2 + [4]))
	*($5 + [32]) = *($2)
	$1 = *($5)
	CALL eosio_assert([1], [304])
	*($6 + [104]) = (($6 + [48]) + [48])
	*($6 + [100]) = ($6 + [48])
	*($6 + [96]) = ($6 + [48])
	CALL $8(($6 + [96]), $5)
	CALL db_update_i64(*($5 + [52]), $3, ($6 + [48]), [48])
	$5 = ($6 + [24])
	if ( (uint_64)($1 <= *($5)) ){ goto $label$2 }
	*($5) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	$0 = *($6 + [32])
	if ( ($0 == 0) ){ goto $label$3 }
	$4 = ($6 + [36])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$5 }
	
.LOOP $label$6:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $98($2)
	
.LABEL $label$7
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$6 }
	$5 = *(($6 + [32]))
	goto $label$4 
	
.LABEL $label$5
	$5 = $0
	
.LABEL $label$4
	*($4) = $0
	CALL $98($5)
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [112])
}

int_32 .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$5 = *($1)
	$4 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($7 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = [0]
	*($6) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [480])
	CALL memcpy($6, $4, [8])
	CALL eosio_assert(((int_32)($1 & [-4]) != (int_32)[8]), [480])
	$7 = ($6 + [8])
	CALL memcpy($7, ($4 + [8]), [4])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($4)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($7)
	$3 = *($6)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$5 = *((*($1) + $5))
	
.LABEL $label$5
	CALL void $1((int_32 $3), (int_64 $4), (int_32 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

int_32 .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [480])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

void .FUNC _ZN5eosio5token10delaccountEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [96])
	*([0] + [4]) = $7
	CALL require_auth(*($0))
	*((($7 + [48]) + [32])) = [0]
	*($7 + [64]) = (int_64)-1
	*($7 + [72]) = (int_64)0
	$3 = *($0)
	*($7 + [48]) = $3
	*($7 + [56]) = $3
	$6 = [0]
	$2 = CALL db_find_i64($3, $3, (int_64)-7950098247169605632, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $6(($7 + [48]), $2)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)($7 + [48])), [48])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [1456])
	$3 = *($6 + [8])
	*((($7 + [8]) + [32])) = [0]
	*($7 + [16]) = $3
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$4 = *($0)
	*($7 + [8]) = $4
	$0 = CALL db_find_i64($4, $3, (int_64)4983113983805358080, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$2 }
	$0 = CALL $11(($7 + [8]), $0)
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)($7 + [8])), [48])
	CALL eosio_assert([1], [1488])
	CALL eosio_assert([1], [1536])
	$2 = CALL db_next_i64(*($0 + [20]), ($7 + [88]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	CALL $11(($7 + [8]), $2)
	
.LABEL $label$3
	CALL $33(($7 + [8]), $0)
	
.LABEL $label$2
	if ( ($6 == 0) ){ goto $label$4 }
	CALL eosio_assert([1], [1488])
	CALL eosio_assert([1], [1536])
	$0 = CALL db_next_i64(*($6 + [20]), ($7 + [88]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	CALL $6(($7 + [48]), $0)
	
.LABEL $label$5
	CALL $34(($7 + [48]), $6)
	
.LABEL $label$4
	$2 = *($7 + [32])
	if ( ($2 == 0) ){ goto $label$6 }
	$5 = ($7 + [36])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$6 = ($6 + [-24])
	$0 = *($6)
	*($6) = [0]
	if ( ($0 == 0) ){ goto $label$10 }
	CALL $98($0)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$9 }
	$6 = *(($7 + [32]))
	goto $label$7 
	
.LABEL $label$8
	$6 = $2
	
.LABEL $label$7
	*($5) = $2
	CALL $98($6)
	
.LABEL $label$6
	$2 = *($7 + [72])
	if ( ($2 == 0) ){ goto $label$11 }
	$5 = ($7 + [76])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($6 + [-24])
	$0 = *($6)
	*($6) = [0]
	if ( ($0 == 0) ){ goto $label$15 }
	CALL $98($0)
	
.LABEL $label$15
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$14 }
	$6 = *(($7 + [72]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $2
	
.LABEL $label$12
	*($5) = $2
	CALL $98($6)
	
.LABEL $label$11
	*([0] + [4]) = ($7 + [96])
}

void .FUNC $33 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [1200])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1248])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1312])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $98($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $98($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC _ZN5eosio5token10newaccountEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [96])
	*([0] + [4]) = $7
	*($7 + [48]) = $1
	$4 = [0]
	*(($3 = ($7 + [40]))) = [0]
	*($7 + [16]) = $1
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$5 = *($0)
	*($7 + [8]) = $5
	$2 = CALL db_find_i64($5, $1, (int_64)-5868309319417593856, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*(CALL $7(($7 + [8]), $2) + [48]) == (int_32)($7 + [8])), [48])
	goto $label$1 
	
.LABEL $label$2
	$4 = [1]
	
.LABEL $label$1
	CALL eosio_assert($4, [1408])
	$1 = *($0)
	*($7) = ($7 + [48])
	*($7 + [88]) = $1
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$3()), [1008])
	*($7 + [68]) = $7
	*($7 + [64]) = ($7 + [8])
	*($7 + [72]) = ($7 + [88])
	$0 = CALL $97([64])
	CALL $25($0)
	*($0 + [48]) = ($7 + [8])
	CALL $31(($7 + [64]), $0)
	*($7 + [80]) = $0
	$1 = *($0)
	*($7 + [64]) = $1
	$2 = *($0 + [52])
	*($7 + [60]) = $2
	$6 = ($7 + [36])
	$4 = *($6)
	if ( ((uint_32)$4 >= (uint_32)*($3)) ){ goto $label$4 }
	*($4 + [8]) = $1
	*($4 + [16]) = $2
	*($7 + [80]) = [0]
	*($4) = $0
	*($6) = ($4 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $27(($7 + [32]), ($7 + [80]), ($7 + [64]), ($7 + [60]))
	
.LABEL $label$3
	$0 = *($7 + [80])
	*($7 + [80]) = [0]
	if ( ($0 == 0) ){ goto $label$5 }
	CALL $98($0)
	
.LABEL $label$5
	$3 = *($7 + [32])
	if ( ($3 == 0) ){ goto $label$6 }
	$2 = ($7 + [36])
	$0 = *($2)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $98($4)
	
.LABEL $label$10
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$9 }
	$0 = *(($7 + [32]))
	goto $label$7 
	
.LABEL $label$8
	$0 = $3
	
.LABEL $label$7
	*($2) = $3
	CALL $98($0)
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [96])
}

void .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	*($1) = *(*(*($0 + [4])))
	$2 = *($0)
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1440]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)1) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	*($1 + [8]) = $7
	CALL eosio_assert([1], [1072])
	$6 = (int_64)4347216
	$4 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$3 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$3 = [0]
	
.LABEL $label$7
	CALL eosio_assert($3, [1136])
	*(($1 + [24])) = (int_64)1112887300
	*($1 + [16]) = (int_64)0
	CALL eosio_assert([1], [1072])
	$6 = (int_64)4935241
	$4 = [0]
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	
.LOOP $label$16:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$16 }
	
.LABEL $label$15
	$3 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	$3 = [0]
	
.LABEL $label$12
	CALL eosio_assert($3, [1136])
	*(($1 + [40])) = (int_64)1263421700
	*($1 + [32]) = (int_64)0
	$3 = $10
	$4 = ($3 + [-48])
	*([0] + [4]) = $4
	*($9 + [4]) = $4
	*($9) = $4
	*($9 + [8]) = $3
	CALL $8($9, $1)
	$6 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($2 + [8]), (int_64)-5868309319417593856, *(*($0 + [8])), $6, $4, [48])
	if ( (uint_64)($6 <= *($2 + [16])) ){ goto $label$17 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$17
	*([0] + [4]) = ($9 + [16])
}