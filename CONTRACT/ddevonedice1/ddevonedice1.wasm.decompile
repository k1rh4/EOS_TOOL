(data (i32.const 4) "\c0t\00\00")
(data (i32.const 16) "dfdiceroll\00")
(data (i32.const 32) "ddevonedice1\00")
(data (i32.const 64) "########dbetonedice1:\00")
(data (i32.const 96) "./library.hpp\00")
(data (i32.const 112) ":\00")
(data (i32.const 128) "x:\00")
(data (i32.const 144) "\n\00")
(data (i32.const 160) "./dbet_dice.hpp\00")
(data (i32.const 176) "$$$$$$$$BEGIN EOSIO_ABI_EX$$$$$$$$\n\00")
(data (i32.const 224) "$$$$$$$$receiver:\00")
(data (i32.const 256) ",  code:\00")
(data (i32.const 272) ",  action:\00")
(data (i32.const 288) ",  self:\00")
(data (i32.const 304) "eosio\00")
(data (i32.const 320) "onerror\00")
(data (i32.const 336) "$$$$$$$$onerror$$$$$$$$\n\00")
(data (i32.const 368) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 432) "eosio.token\00")
(data (i32.const 448) "ddevminepool\00")
(data (i32.const 464) "betdicetoken\00")
(data (i32.const 480) "bitpietokens\00")
(data (i32.const 496) "transfer\00")
(data (i32.const 512) "diceroll\00")
(data (i32.const 528) "clear\00")
(data (i32.const 544) "maintain\00")
(data (i32.const 560) "unlockuser\00")
(data (i32.const 576) "candy\00")
(data (i32.const 592) "$$$$$$$$begin action \00")
(data (i32.const 624) "$$$$$$$$\n\00")
(data (i32.const 640) "$$$$$$$$END EOSIO_ABI_EX$$$$$$$$\n\00")
(data (i32.const 688) "read\00")
(data (i32.const 704) "get\00")
(data (i32.const 720) "ddevonesicbo\00")
(data (i32.const 736) "GAME ERROR\00")
(data (i32.const 752) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 816) "notify\00")
(data (i32.const 832) "active\00")
(data (i32.const 848) "prochaintech\00")
(data (i32.const 864) "cannot create objects in table of another contract\00")
(data (i32.const 928) "write\00")
(data (i32.const 944) "error reading iterator\00")
(data (i32.const 976) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 1040) "invalid symbol name\00")
(data (i32.const 1072) "cannot pass end iterator to erase\00")
(data (i32.const 1120) "cannot increment end iterator\00")
(data (i32.const 1152) "object passed to erase is not in multi_index\00")
(data (i32.const 1200) "cannot erase objects in table of another contract\00")
(data (i32.const 1264) "attempt to remove object that was not in multi_index\00")
(data (i32.const 1328) "./dice_record.cpp\00")
(data (i32.const 1360) "_self:\00")
(data (i32.const 1376) ", toid:\00")
(data (i32.const 1392) "you delete\00")
(data (i32.const 1408) "!\n\00")
(data (i32.const 1424) "./dice_roll.cpp\00")
(data (i32.const 1440) "------begin dfdiceroll(),  from:\00")
(data (i32.const 1488) ",  to:\00")
(data (i32.const 1504) ",  quantity:\00")
(data (i32.const 1520) ",  memo:\00")
(data (i32.const 1536) ",  _self:\00")
(data (i32.const 1552) "Invalid token transfer\00")
(data (i32.const 1584) "Quantity must be positive\00")
(data (i32.const 1616) "-\00")
(data (i32.const 1632) "memo:\00")
(data (i32.const 1648) ",  params.size():\00")
(data (i32.const 1680) "memo\e8\a7\a3\e6\9e\90\e5\8f\82\e6\95\b0\e4\b8\aa\e6\95\b0\e9\94\99\e8\af\af,\e7\9b\b4\e6\8e\a5\e5\90\83\e6\8e\89\ef\bc\8c\e5\8f\af\e8\83\bd\e6\9c\89\e9\bb\91\e5\ae\a2\e5\9c\a8\e6\94\bb\e5\87\bb\n\00")
(data (i32.const 1760) "action\e5\90\8d\e7\a7\b0:\00")
(data (i32.const 1776) ",  \e8\bf\9e\e6\8a\bd\e6\ac\a1\e6\95\b0:\00")
(data (i32.const 1808) ",  \e6\b8\b8\e6\88\8fID:\00")
(data (i32.const 1824) ",  \e9\82\80\e8\af\b7\e8\80\85:\00")
(data (i32.const 1840) ",  \e7\94\a8\e6\88\b7\e9\80\89\e6\8b\a9\e8\b5\94\e7\8e\87\e5\80\bc:\00")
(data (i32.const 1872) ",  \e4\bf\9d\e7\95\99\e5\ad\97\e6\ae\b5:\00")
(data (i32.const 1904) "memo\e5\8f\82\e6\95\b0\e9\94\99\e8\af\af,\e5\85\b6\e4\b8\ad\e8\bf\9e\e6\8a\bd\e6\ac\a1\e6\95\b0\e3\80\81\e6\b8\b8\e6\88\8fID\e3\80\81\e7\94\a8\e6\88\b7\e9\80\89\e6\8b\a9\e8\b5\94\e7\8e\87\e5\80\bc\e3\80\81\e4\bf\9d\e7\95\99\e5\80\bc\e5\ad\98\e5\9c\a8\e9\9d\9e\e6\95\b0\e5\ad\97\ef\bc\8c\e7\9b\b4\e6\8e\a5\e5\90\83\e6\8e\89\ef\bc\8c\e5\8f\af\e8\83\bd\e6\9c\89\e9\bb\91\e5\ae\a2\e5\9c\a8\e6\94\bb\e5\87\bb\n\00")
(data (i32.const 2048) "memo\e5\8f\82\e6\95\b0\e9\94\99\e8\af\af,\e5\85\b6\e4\b8\ad\e8\bf\9e\e6\8a\bd\e6\ac\a1\e6\95\b0\e3\80\81\e7\94\a8\e6\88\b7\e9\80\89\e6\8b\a9\e8\b5\94\e7\8e\87\e5\80\bc\ef\bc\8c\e5\ad\98\e5\9c\a8\e6\95\b0\e5\ad\97\e8\b6\8a\e7\95\8c\ef\bc\8c\e7\9b\b4\e6\8e\a5\e5\90\83\e6\8e\89\ef\bc\8c\e5\8f\af\e8\83\bd\e6\9c\89\e9\bb\91\e5\ae\a2\e5\9c\a8\e6\94\bb\e5\87\bb\n\00")
(data (i32.const 2176) "find gameid: \00")
(data (i32.const 2192) "Game already exists\00")
(data (i32.const 2224) "\e5\8d\95\e6\ac\a1\e4\b8\8b\e6\b3\a8\e9\a2\9d\ef\bc\9a\00")
(data (i32.const 2256) ", \e5\8d\95\e6\ac\a1\e5\8f\af\e8\83\bd\e8\8e\b7\e5\be\97\e7\9a\84\e5\a5\96\e9\87\91\ef\bc\9a\00")
(data (i32.const 2304) "you win\n\00")
(data (i32.const 2320) "attempt to add asset with different symbol\00")
(data (i32.const 2368) "addition underflow\00")
(data (i32.const 2400) "addition overflow\00")
(data (i32.const 2432) "\e4\b8\8b\e6\b3\a8\e7\94\a8\e6\88\b7:\00")
(data (i32.const 2448) ", \e9\82\80\e8\af\b7\e8\80\85:\00")
(data (i32.const 2464) ", \e6\b8\b8\e6\88\8fID:\00")
(data (i32.const 2480) ", \e6\80\bb\e4\b8\8b\e6\b3\a8\e9\a2\9d:\00")
(data (i32.const 2496) ", \e6\80\bb\e5\a5\96\e9\87\91:\00")
(data (i32.const 2512) ", \e5\8d\95\e6\ac\a1\e4\b8\8b\e6\b3\a8\e9\a2\9d:\00")
(data (i32.const 2544) ", \e5\8d\95\e6\ac\a1\e5\a5\96\e9\87\91:\00")
(data (i32.const 2560) ", \e7\94\a8\e6\88\b7\e9\80\89\e6\8b\a9\e6\95\b0\e5\80\bc:\00")
(data (i32.const 2592) ", \e6\b8\b8\e6\88\8f\e7\bb\93\e6\9e\9c\e5\80\bc:\00")
(data (i32.const 2624) "attempt to subtract asset with different symbol\00")
(data (i32.const 2672) "subtraction underflow\00")
(data (i32.const 2704) "subtraction overflow\00")
(data (i32.const 2736) "\e6\9c\ac\e6\ac\a1\e6\b8\b8\e6\88\8f\e7\9b\88\e4\ba\8f\e9\87\91\e9\a2\9d\ef\bc\9a\00")
(data (i32.const 2768) "\e5\8f\91\e9\80\81\e9\82\80\e8\af\b7\e5\a5\96\e5\8a\b1\ef\bc\8cInviter: \00")
(data (i32.const 2800) "dBet Dice (https://tt.dbet.one \e6\9c\80\e9\ab\98\e8\b5\94\e7\8e\87\e6\9c\80\e9\ab\98\e5\88\86\e7\ba\a2Dice\e6\b8\b8\e6\88\8f) \e9\82\80\e8\af\b7\e7\94\a8\e6\88\b7\00")
(data (i32.const 2880) "\e5\a5\96\e5\8a\b1!\00")
(data (i32.const 2896) "setdivpool\00")
(data (i32.const 2912) "energy action send...\n\00")
(data (i32.const 2944) "EOS\e4\b8\8b\e6\b3\a8\ef\bc\8c\e5\8f\91\e9\80\81\e8\83\bd\e9\87\8f energy action send...\n\00")
(data (i32.const 2992) "addenergy\00")
(data (i32.const 3008) "ddevactivity\00")
(data (i32.const 3024) "EUSD\e4\b8\8b\e6\b3\a8\ef\bc\8c\e5\8f\91\e9\80\81\e8\83\bd\e9\87\8f energy action send...\n\00")
(data (i32.const 3088) "\e9\9d\9eeos\e4\b8\8b\e6\b3\a8\ef\bc\8c\e4\b8\8d\e5\8f\91\e9\80\81\e8\83\bd\e9\87\8fenergy action send...\n\00")
(data (i32.const 3152) "------hello,end roll()\n\00")
(data (i32.const 3184) "dbet_dice.cpp\00")
(data (i32.const 3200) "--------begin transferto()  _slef:\00")
(data (i32.const 3248) ",  sendeid:\00")
(data (i32.const 3264) "We do not support this token currently\00")
(data (i32.const 3312) "--------end, transferto()\00")
(data (i32.const 3340) "\10\0d\00\00")
(data (i32.const 3344) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 3392) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 3456) "System error!\00")
(data (i32.const 3472) "./over_face.cpp\00")
(data (i32.const 3488) "first win: \00")
(data (i32.const 3504) "GAME UNDER MAINTAIN\00")
(data (i32.const 3536) "cannot pass end iterator to modify\00")
(data (i32.const 3584) "object passed to modify is not in multi_index\00")
(data (i32.const 3632) "cannot modify objects in table of another contract\00")
(data (i32.const 3696) "GAME UNDER MAINTAIN!\00")
(data (i32.const 3728) "updater cannot change primary key when modifying an object\00")
(data (i32.const 3792) "next primary key in table is at autoincrement limit\00")
(data (i32.const 3856) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 3920) "cannot decrement iterator at beginning of table\00")
(data (i32.const 3968) "quantity:\00")
(data (i32.const 3984) ", batchid:\00")
(data (i32.const 4000) "Quantity must be biger than 0.1 EOS\00")
(data (i32.const 4048) "Quantity must be little than 100 EOS\00")
(data (i32.const 4096) "Quantity must be biger than 100 DBET\00")
(data (i32.const 4144) "Quantity must be little than 100000 DBET\00")
(data (i32.const 4192) "Quantity must be biger than 10 DICE\00")
(data (i32.const 4240) "Quantity must be little than 10000 DICE\00")
(data (i32.const 4288) "Quantity must be biger than 0.1 EUSD\00")
(data (i32.const 4336) ", minAsset:\00")
(data (i32.const 4352) ", min_stake_eusd:\00")
(data (i32.const 4384) ", maxAsset:\00")
(data (i32.const 4400) ", max_stake_eusd:\00")
(data (i32.const 4432) "Quantity must be little than 100 EUSD\00")
(data (i32.const 4480) ".\00")
(data (i32.const 4496) " \00")
(data (i32.const 4512) ",\00")
(data (i32.const 4528) "--------begin transfer(),  from:\00")
(data (i32.const 4576) ",  string:\00")
(data (i32.const 4592) "Not a bet transfer\n\00")
(data (i32.const 4624) "diceroll-\00")
(data (i32.const 4640) "======\e8\bf\9b\e5\85\a5\e6\8e\b7\e9\aa\b0\e5\ad\90======\n\00")
(data (i32.const 4672) "--------end transfer(),  from:\00")
(data (i32.const 4704) "memo\e6\a0\bc\e5\bc\8f\e9\94\99\e8\af\af,\e7\9b\b4\e6\8e\a5\e5\90\83\e6\8e\89\ef\bc\8c\e5\8f\af\e8\83\bd\e6\9c\89\e9\bb\91\e5\ae\a2\e5\9c\a8\e6\94\bb\e5\87\bb\n\00")
(data (i32.const 4768) "./exception.cpp\00")
(data (i32.const 4784) "starting onerror\n\00")
(data (i32.const 4816) "dice\e6\b8\b8\e6\88\8f\e4\b8\8b\e6\b3\a8\e5\a4\b1\e8\b4\a5\e9\80\80\e8\bf\98\00")
(data (i32.const 4848) "error.sender_id:\00")
(data (i32.const 4880) ",  name:\00")
(data (i32.const 4896) ",  account:\00")
(data (i32.const 4912) "find action: \00")
(data (i32.const 4928) " from: \00")
(data (i32.const 4944) "Refund \00")
(data (i32.const 4960) " to \00")
(data (i32.const 4976) "Invalid name\00")
(data (i32.const 4992) "Invalid account\00")
(data (i32.const 13408) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(import "env" "abort" (func $fimport$0))
(import "env" "action_data_size" (func $fimport$1 (result i32)))
(import "env" "current_receiver" (func $fimport$2 (result i64)))
(import "env" "current_time" (func $fimport$3 (result i64)))
(import "env" "db_end_i64" (func $fimport$4 (param i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$5 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$6 (param i32 i32 i32) (result i32)))
(import "env" "db_idx64_find_primary" (func $fimport$7 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$8 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$9 (param i32)))
(import "env" "db_idx64_store" (func $fimport$10 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$11 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$12 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$13 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$14 (param i32)))
(import "env" "db_store_i64" (func $fimport$15 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$16 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$17 (param i32 i32)))
(import "env" "is_account" (func $fimport$18 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$19 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$20 (param i32 i32 i32) (result i32)))
(import "env" "memset" (func $fimport$21 (param i32 i32 i32) (result i32)))
(import "env" "printdf" (func $fimport$22 (param f64)))
(import "env" "printi" (func $fimport$23 (param i64)))
(import "env" "printn" (func $fimport$24 (param i64)))
(import "env" "prints" (func $fimport$25 (param i32)))
(import "env" "prints_l" (func $fimport$26 (param i32 i32)))
(import "env" "printui" (func $fimport$27 (param i64)))
(import "env" "printui128" (func $fimport$28 (param i32)))
(import "env" "read_action_data" (func $fimport$29 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$30 (param i64)))
(import "env" "require_auth2" (func $fimport$31 (param i64 i64)))
(import "env" "send_deferred" (func $fimport$32 (param i32 i64 i32 i32 i32)))
(import "env" "send_inline" (func $fimport$33 (param i32 i32)))
(import "env" "sha512" (func $fimport$34 (param i32 i32 i32)))
(import "env" "tapos_block_num" (func $fimport$35 (result i32)))
(import "env" "tapos_block_prefix" (func $fimport$36 (result i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_ZN11dbetonedice13transfer_args8get_nameEv" (func $5))
(export "_ZN11dbetonedice13transfer_args11get_accountEv" (func $6))
(export "_ZN11dbetonedice5splitERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_" (func $7))
(export "_ZN11dbetonedice8isdecnumENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE" (func $10))
(export "_ZN11dbetonedice8isdecnumEPKc" (func $11))
(export "_ZN11dbetonedice16_generateRandNumEyPt" (func $12))
(export "apply" (func $13))
(export "_ZN11dbetonedice8dbetdice8transferEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE" (func $16))
(export "_ZN11dbetonedice8dbetdice8dicerollEyyRKN5eosio5assetENSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE" (func $18))
(export "_ZN11dbetonedice8dbetdice10dfdicerollEyyRKN5eosio5assetENSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE" (func $20))
(export "_ZN11dbetonedice8dbetdice5clearEy" (func $21))
(export "_ZN11dbetonedice8dbetdice8maintainEN5eosio5assetE" (func $23))
(export "_ZN11dbetonedice8dbetdice10unlockuserEyN5eosio5assetE" (func $25))
(export "_ZN11dbetonedice8dbetdice5candyEyyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE" (func $27))
(export "_ZN11dbetonedice14quantity_judgeERKN5eosio5assetEy" (func $62))
(export "_ZN11dbetonedice8dbetdice6recordEyyyRKN5eosio5assetES4_yy" (func $64))
(export "_ZN11dbetonedice8dbetdice8overfaceEyRKN5eosio5assetES4_" (func $66))
(export "_ZN11dbetonedice14inviter_chargeERKN5eosio5assetERS1_y" (func $67))
(export "_ZN11dbetonedice8dbetdice10transfertoEyRKN5eosio5assetERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEo" (func $69))
(export "malloc" (func $99))
(export "free" (func $102))
(export "isdigit" (func $116))
(export "atoll" (func $117))
(export "memchr" (func $118))
(export "memcmp" (func $119))
(export "strlen" (func $120))
(table $0 8 8 anyfunc)
(elem (i32.const 0) $121 $21 $25 $18 $27 $23 $16 $20)



void .FUNC $98 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $7) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$6 = *($0)
	$3 = int_32(($7 - $6) >> [4])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$3 }
	$5 = [268435455]
	$2 = ($2 - $6)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$5 = int_32($2 >> [3])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$4 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL $103(($5 << [4]))
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$1 
	
.LABEL $label$5
	*(($0 + [4])) = ($7 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$5 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $113($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$7 = ($7 - $6)
	$3 = ($2 + ($3 << [4]))
	$4 = ($3 - $7)
	$1 = ($3 + ($1 << [4]))
	$5 = ($2 + ($5 << [4]))
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($4, $6, $7)
	$6 = *($0)
	
.LABEL $label$7
	*($0) = $4
	*(($0 + [4])) = $1
	*(($0 + [8])) = $5
	if ( ($6 == 0) ){ goto $label$8 }
	CALL $104($6)
	
.LABEL $label$8
	(unreachable)
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $100([5008], $0)
}

void .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [688])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [688])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [688])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [688])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $29(*($1), *($0 + [12]))
}

void .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = *($0 + [4])
	$8 = *($0 + [8])
	if ( ((uint_32)int_32(($8 - $7) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$4 = int_32(($7 - $5) >> [4])
	$7 = ($4 + $1)
	if ( ((uint_32)$7 >= (uint_32)[268435456]) ){ goto $label$3 }
	$6 = [268435455]
	$8 = ($8 - $5)
	if ( ((uint_32)int_32($8 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$6 = int_32($8 >> [3])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$8 = CALL $103(($6 << [4]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $7
	$8 = $1
	
.LOOP $label$7:
	*($6) = [0]
	*(($6 + [4])) = (int_64)0
	*(($6 + [12])) = [0]
	$6 = ($6 + [16])
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$7 }
	*(($0 + [4])) = ($7 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $113($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$2 = ($8 + ($6 << [4]))
	$8 = ($8 + ($4 << [4]))
	$6 = $8
	$7 = $1
	
.LOOP $label$8:
	*($6) = [0]
	*(($6 + [4])) = (int_64)0
	*(($6 + [12])) = [0]
	$6 = ($6 + [16])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$8 }
	$3 = ($8 + ($1 << [4]))
	$6 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$10 }
	$4 = ([0] - $6)
	$6 = ($7 + [-16])
	
.LOOP $label$11:
	*(($8 + [-16])) = *($6)
	*(($7 = ($8 + [-12]))) = (int_64)0
	*(($1 = ($8 + [-4]))) = [0]
	$5 = ($6 + [4])
	*($7) = *($5)
	*(($8 + [-8])) = *(($6 + [8]))
	$7 = ($6 + [12])
	*($1) = *($7)
	*($7) = [0]
	*($5) = (int_64)0
	$8 = ($8 + [-16])
	$6 = ($6 + [-16])
	if ( ((int_32)($6 + $4) != (int_32)[-16]) ){ goto $label$11 }
	$6 = *(($0 + [4]))
	$1 = *($0)
	goto $label$9 
	
.LABEL $label$10
	$1 = $6
	
.LABEL $label$9
	*($0) = $8
	*(($0 + [4])) = $3
	*(($0 + [8])) = $2
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$12 }
	$7 = ([0] - $1)
	$6 = ($6 + [-12])
	
.LOOP $label$13:
	$8 = *($6)
	if ( ($8 == 0) ){ goto $label$14 }
	*(($6 + [4])) = $8
	CALL $104($8)
	
.LABEL $label$14
	$6 = ($6 + [-16])
	if ( ((int_32)($6 + $7) != (int_32)[-12]) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($1 == 0) ){ goto $label$15 }
	CALL $104($1)
	
.LABEL $label$15
	(unreachable)
}

void .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = *($0 + [4])
	$8 = *($0 + [8])
	if ( ((uint_32)((int_32)($8 - $7) / (int_32)[40]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ((int_32)($7 - $4) / (int_32)[40])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$3 }
	$7 = [107374182]
	$8 = ((int_32)($8 - $4) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$6 }
	$7 = ($8 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$8 = CALL $103(((int_32)$7 * (int_32)[40]))
	goto $label$2 
	
.LABEL $label$5
	$8 = ($0 + [4])
	
.LOOP $label$7:
	*($7) = (int_64)0
	*($7 + [16 align=4]) = (int_64)0
	*(($7 + [8])) = (int_64)0
	*(($7 + [24])) = (int_64)0
	*(($7 + [32])) = (int_64)0
	$7 = (*($8) + [40])
	*($8) = $7
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$8 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $113($0)
	
.LABEL $label$2
	$2 = ($8 + ((int_32)$7 * (int_32)[40]))
	$8 = ($8 + ((int_32)$5 * (int_32)[40]))
	$7 = $8
	
.LOOP $label$8:
	*($7) = (int_64)0
	*($7 + [16 align=4]) = (int_64)0
	*(($7 + [8])) = (int_64)0
	*(($7 + [24])) = (int_64)0
	*(($7 + [32])) = (int_64)0
	$7 = ($7 + [40])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$10 }
	$3 = ([0] - $4)
	$1 = ($1 + [-20])
	
.LOOP $label$11:
	*(($8 + [-32])) = *(($1 + [-12]))
	*(($8 + [-40])) = *(($1 + [-20]))
	*(($4 = ($8 + [-24]))) = (int_64)0
	*(($5 = ($8 + [-16]))) = [0]
	$6 = ($1 + [-4])
	*($4) = *($6)
	*(($8 + [-20])) = *($1)
	$4 = ($1 + [4])
	*($5) = *($4)
	*($4) = [0]
	*(($4 = ($8 + [-12]))) = (int_64)0
	*($6) = (int_64)0
	*(($5 = ($8 + [-4]))) = [0]
	$6 = ($1 + [8])
	*($4) = *($6)
	*(($8 + [-8])) = *(($1 + [12]))
	$4 = ($1 + [16])
	*($5) = *($4)
	*($4) = [0]
	*($6) = (int_64)0
	$8 = ($8 + [-40])
	$1 = ($1 + [-40])
	if ( ((int_32)($1 + $3) != (int_32)[-20]) ){ goto $label$11 }
	$4 = *(($0 + [4]))
	$5 = *($0)
	goto $label$9 
	
.LABEL $label$10
	$5 = $4
	
.LABEL $label$9
	*($0) = $8
	*(($0 + [4])) = $7
	*(($0 + [8])) = $2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$12 }
	$1 = ([0] - $5)
	$7 = ($4 + [-24])
	
.LOOP $label$13:
	$8 = *(($7 + [12]))
	if ( ($8 == 0) ){ goto $label$14 }
	*(($7 + [16])) = $8
	CALL $104($8)
	
.LABEL $label$14
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$15 }
	*(($7 + [4])) = $8
	CALL $104($8)
	
.LABEL $label$15
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $1) != (int_32)[-24]) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($5 == 0) ){ goto $label$1 }
	CALL $104($5)
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $97 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [704])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$2 = *($1 + [4])
	$6 = int_32(($2 - $7) >> [4])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$4 }
	CALL $98($1, ($4 - $6))
	$2 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$5 }
	$2 = ($7 + ($4 << [4]))
	*(($1 + [4])) = $2
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($0 + [4])
	$6 = *($4)
	
.LOOP $label$6:
	$3 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[7]), [688])
	CALL memcpy($7, *($4), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[7]), [688])
	CALL memcpy(($7 + [8]), *($4), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

int_32 .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [704])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$3 = *($1)
	$7 = *($1 + [4])
	$5 = int_32(($7 - $3) >> [4])
	$4 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$3 }
	CALL $95($1, ($4 - $5))
	$7 = *(($1 + [4]))
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$4 >= (uint_32)$5) ){ goto $label$2 }
	$4 = ($4 << [4])
	$2 = ($3 + $4)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$3 = (([0] - $3) - $4)
	$4 = ($7 + [-12])
	
.LOOP $label$5:
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	*(($4 + [4])) = $5
	CALL $104($5)
	
.LABEL $label$6
	$4 = ($4 + [-16])
	if ( ((int_32)($4 + $3) != (int_32)[-12]) ){ goto $label$5 }
	
.LABEL $label$4
	*(($1 + [4])) = $2
	$7 = $2
	
.LABEL $label$2
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$7 }
	$3 = ($0 + [8])
	
.LOOP $label$8:
	$5 = ($0 + [4])
	CALL eosio_assert(((uint_32)(*($3) - *($5)) > (uint_32)[1]), [688])
	CALL memcpy($4, *($5), [2])
	*($5) = (*($5) + [2])
	CALL $31($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$7
	return $0
}

int_32 .FUNC $91 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*($0) = *($1)
	*(($0 + [8])) = *(($1 + [8]))
	*($0 + [16 align=4]) = (int_64)0
	*(($0 + [24])) = [0]
	$4 = (*(($1 + [20])) - *($1 + [16]))
	$5 = int_32($4 >> [4])
	if ( ($5 == 0) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$2 }
	$4 = CALL $103($4)
	*(($0 + [16])) = $4
	*(($0 + [24])) = ($4 + ($5 << [4]))
	*(($5 = ($0 + [20]))) = $4
	$2 = *(($1 + [16]))
	$3 = (*(($1 + [20])) - $2)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($4, $2, $3)
	*($5) = (*($5) + $3)
	
.LABEL $label$3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$4 = (*(($1 + [32])) - *($1 + [28]))
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$1 }
	$5 = CALL $103($4)
	*(($0 + [28])) = $5
	*(($0 + [36])) = ($5 + $4)
	*(($4 = ($0 + [32]))) = $5
	$3 = *(($1 + [28]))
	$1 = (*(($1 + [32])) - $3)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($5, $3, $1)
	*($4) = (*($4) + $1)
	
.LABEL $label$4
	return $0
	
.LABEL $label$2
	CALL $113(($0 + [16]))
	
.LABEL $label$1
	CALL $113(($0 + [28]))
	(unreachable)
	return (unreachable)
}

void .FUNC $92 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	$2 = *($1 + [8])
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [16]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)9) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	CALL eosio_assert(((int_64)$2 == (int_64)$7), [4976])
	$2 = *($1)
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [32]
	$7 = (int_64)0
	
.LOOP $label$7:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$8 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$3 = ($3 + [165])
	goto $label$9 
	
.LABEL $label$10
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$8
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$7 }
	CALL eosio_assert(((int_64)$2 == (int_64)$7), [4992])
	$4 = *($1 + [28])
	CALL $93($0, $4, (*(($1 + [32])) - $4))
}

void .FUNC $93 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = (int_64)1398362884
	CALL eosio_assert([1], [976])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [1040])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	*($6 + [12]) = $1
	*($6 + [8]) = $1
	*($6 + [16]) = ($1 + $2)
	*($6 + [24]) = ($6 + [8])
	*($6 + [36]) = ($0 + [8])
	*($6 + [32]) = $0
	*($6 + [40]) = ($0 + [16])
	*($6 + [44]) = ($0 + [32])
	CALL $94(($6 + [32]), ($6 + [24]))
	*([0] + [4]) = ($6 + [48])
}

int_32 .FUNC $115 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = ($8 & [1])
	$8 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($8 >> [1]) : $5 )
	if ( ($8 <= $2) ){ goto $label$1 }
	$8 = ($8 - $2)
	$3 = ( $8 ? $3 : ($8 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($3 + [16]) & [-16])
	$8 = CALL $103($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($8, (( $6 ? ($1 + [1]) : $5 ) + $2), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $121 ()
{
	(unreachable)
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

int_32 .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$6 = *($0)
	*($0) = ($6 + [10])
	$6 = ($6 + [11])
	$8 = *($1 + [12])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	*($0) = $6
	$8 = *($1 + [20])
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	*($0) = $6
	$7 = *($1 + [24])
	$2 = *(($1 + [28]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$7
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$8:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$5 }
	*($0) = $6
	
.LABEL $label$4
	$7 = *($1 + [36])
	$2 = *(($1 + [40]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$9 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$12:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$13 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$13
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$14:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$14 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	*($0) = $6
	
.LABEL $label$10
	$7 = *($1 + [48])
	$5 = *(($1 + [52]))
	$8 = (CASTING uint_64)(uint_32 int_32(($5 - $7) >> [4]))
	
.LOOP $label$15:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$15 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = *($7 + [4])
	$3 = *(($7 + [8]))
	$6 = ((($6 + $3) + [2]) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$18:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$18 }
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	*($0) = $6
	
.LABEL $label$16
	return $0
}

void .FUNC $49 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $103(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $113($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $104($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $104($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [688])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [688])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [688])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [12])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [688])
	CALL memcpy($2, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [928])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [928])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [928])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [928])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [928])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($7 + [15]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [928])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$2 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$3 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[1]), [928])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $4, [2])
	*($6) = (*($6) + [2])
	CALL $42($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$6 = *($6)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [928])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [928])
	CALL memcpy(*($4), $7, [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [928])
	CALL memcpy(*($4), ($7 + [8]), [8])
	*($4) = (*($4) + [8])
	CALL $42(CALL $43($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$6 = *($4)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $47 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1152])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1200])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1264])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $104($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $104($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
}

int_32 .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [944])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $103([48])) + [32]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [8])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [16])
	*($8 + [44]) = ($6 + [24])
	CALL $48(($8 + [32]), ($8 + [24]))
	*($6 + [36]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [36])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $49(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $104($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [928])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [928])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $44 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $103([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [16])
	$1 = ( *(($4 + [20])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [16])
	$2 = (CASTING uint_64)(uint_32 $1)
	$5 = ($4 + [16])
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $32($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9) = $8
	*($9 + [8]) = $1
	CALL eosio_assert(((int_32)($1 - $8) > (int_32)[7]), [928])
	CALL memcpy($8, $4, [8])
	$6 = ($8 + [8])
	CALL eosio_assert(((int_32)($1 - $6) > (int_32)[7]), [928])
	CALL memcpy($6, ($4 + [8]), [8])
	*($9 + [4]) = ($8 + [16])
	CALL $45($9, $5)
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $8 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = ($3 & [1])
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : $5 )
	$3 = *($2)
	$4 = ( *($2 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$8 = ($4 + $3)
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$8 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($8 + [16]) & [-16])
	$8 = CALL $103($7)
	*($0) = ($7 | [1])
	*(($0 + [8])) = $8
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($8, ( $6 ? ($1 + [1]) : $5 ), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	CALL $107($0, ( *($2 + [8]) ? ($2 + [1]) : (*($2) & [1]) ), $4)
	return (unreachable)
	
.LABEL $label$1
	CALL $105($0)
}

void .FUNC $9 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0)
	$2 = ((int_32)(*($0 + [4]) - $6) / (int_32)[12])
	$4 = ($2 + [1])
	if ( ((uint_32)$4 >= (uint_32)[357913942]) ){ goto $label$2 }
	$5 = [357913941]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[12])
	if ( ((uint_32)$6 > (uint_32)[178956969]) ){ goto $label$4 }
	$5 = ($6 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $103(((int_32)$5 * (int_32)[12]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $113($0)
	
.LABEL $label$1
	$6 = ($4 + ((int_32)$2 * (int_32)[12]))
	CALL $114($6, $1)
	$2 = ($4 + ((int_32)$5 * (int_32)[12]))
	$3 = ($6 + [12])
	$5 = *($0)
	$4 = *(($0 + [4]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$6 }
	$1 = ([0] - $5)
	$5 = ($4 + [-12])
	
.LOOP $label$7:
	*(($6 + [-12])) = *($5)
	$4 = ($5 + [8])
	*(($6 + [-4])) = *($4)
	*($5) = [0]
	*(($5 + [4])) = [0]
	*($4) = [0]
	$6 = ($6 + [-12])
	$5 = ($5 + [-12])
	if ( ((int_32)($5 + $1) != (int_32)[-12]) ){ goto $label$7 }
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $5
	
.LABEL $label$5
	*($0) = $6
	*(($0 + [4])) = $3
	*(($0 + [8])) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$8 }
	$6 = ([0] - $4)
	$5 = ($5 + [-12])
	
.LOOP $label$9:
	if ( ((*($5) & [1]) == 0) ){ goto $label$10 }
	CALL $104(*(($5 + [8])))
	
.LABEL $label$10
	$5 = ($5 + [-12])
	if ( ((int_32)($5 + $6) != (int_32)[-12]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $104($4)
	
.LABEL $label$11
	(unreachable)
}

int_64 .FUNC _ZN11dbetonedice13transfer_args11get_accountEv ()
{
	int_32 $0
	int_32 $1
	int_64 $2
	int_64 $3
	int_64 $4
	int_64 $5
	$3 = (int_64)0
	$2 = (int_64)59
	$1 = [32]
	$4 = (int_64)0
	
.LOOP $label$1:
	$5 = (int_64)0
	if ( ((uint_64)$3 > (uint_64)(int_64)11) ){ goto $label$2 }
	$0 = *($1)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$0 = ($0 + [165])
	goto $label$3 
	
.LABEL $label$4
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($0 & [31])) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$2
	$1 = ($1 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	$4 = ((int_64)$5 | (int_64)$4)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$1 }
	return $4
}

void .FUNC _ZN11dbetonedice5splitERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_ (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [48])
	*([0] + [4]) = $16
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$9 = *($1)
	$15 = CALL strlen([48])
	if ( ((int_32)$15 != (int_32)( *($1 + [4]) ? uint_32($9 >> [1]) : ($9 & [1]) )) ){ goto $label$2 }
	if ( (CALL $112($1, [0], [-1], [48], $15) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL $8(($16 + [32]), $1, $2)
	$4 = ($2 + [1])
	$15 = *($16 + [32])
	$3 = (($16 + [32]) | [1])
	$10 = ($1 & [1])
	$1 = *($2)
	$1 = ( *($2 + [4]) ? uint_32($1 >> [1]) : $10 )
	if ( ($1 == 0) ){ goto $label$6 }
	$14 = (($16 + [32]) | [4])
	$11 = ($15 & [1])
	$9 = ( *($16 + [36]) ? uint_32($15 >> [1]) : $11 )
	if ( ((int_32)$9 < (int_32)$1) ){ goto $label$4 }
	$13 = ( *($16 + [40]) ? $3 : $11 )
	$8 = ($13 + $9)
	$11 = ( *($2 + [8]) ? $4 : $10 )
	$10 = *($11)
	$15 = $13
	
.LOOP $label$8:
	$9 = (($9 - $1) + [1])
	if ( ($9 == 0) ){ goto $label$7 }
	$9 = CALL memchr($15, $10, $9)
	if ( ($9 == 0) ){ goto $label$7 }
	if ( (CALL memcmp($9, $11, $1) == 0) ){ goto $label$5 }
	$15 = ($9 + [1])
	$9 = ($8 - $15)
	if ( ((int_32)$9 >= (int_32)$1) ){ goto $label$8 }
	
.LABEL $label$7
	$15 = *($16 + [32])
	goto $label$4 
	
.LABEL $label$6
	$14 = (($16 + [32]) | [4])
	$1 = [0]
	goto $label$3 
	
.LABEL $label$5
	$15 = *($16 + [32])
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$4 }
	$1 = ($9 - $13)
	goto $label$3 
	
.LABEL $label$4
	$1 = [-1]
	
.LABEL $label$3
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$9 }
	$5 = ( *($14) ? uint_32(($15 & [254]) >> [1]) : ($15 & [1]) )
	$6 = (($16 + [16]) | [1])
	$13 = ($0 + [4])
	
.LOOP $label$10:
	CALL $115(($16 + [16]), ($16 + [32]), [0], $1, ($16 + [32]))
	CALL prints([64])
	CALL prints([96])
	CALL prints([112])
	CALL printi((int_64)22)
	CALL prints([112])
	CALL prints([128])
	$9 = *($16 + [16])
	$15 = ($9 & [1])
	$12 = (($16 + [16]) + [8])
	CALL prints_l(( *($12) ? $6 : $15 ), ( *($16 + [20]) ? uint_32($9 >> [1]) : $15 ))
	CALL prints([144])
	$9 = *($13)
	if ( ((int_32)$9 == (int_32)*(($0 + [8]))) ){ goto $label$12 }
	CALL $114($9, ($16 + [16]))
	*($13) = (*($13) + [12])
	goto $label$11 
	
.LABEL $label$12
	CALL $9($0, ($16 + [16]))
	
.LABEL $label$11
	CALL $115($16, ($16 + [32]), ($1 + [1]), $5, ($16 + [32]))
	if ( (*($16 + [32]) & [1]) ){ goto $label$14 }
	*($16 + [32]) = [0]
	goto $label$13 
	
.LABEL $label$14
	*(*((($16 + [32]) + [8]))) = [0]
	*($14) = [0]
	
.LABEL $label$13
	$1 = [0]
	CALL $106(($16 + [32]), [0])
	$15 = *(($16 + [8]))
	*((($16 + [32]) + [8])) = $15
	*($16 + [32]) = *($16)
	$11 = ($9 & [1])
	$9 = *($2)
	$9 = ( *(($2 + [4])) ? uint_32($9 >> [1]) : $11 )
	if ( ($9 == 0) ){ goto $label$15 }
	$15 = ( *($14) ? uint_32($1 >> [1]) : $10 )
	$1 = *($16 + [32])
	$10 = ($1 & [1])
	$7 = ( $15 ? $3 : $10 )
	$10 = ($7 + $15)
	$1 = $10
	if ( ((int_32)$15 < (int_32)$9) ){ goto $label$16 }
	$8 = ( *(($2 + [8])) ? $4 : $11 )
	$11 = *($8)
	$1 = $7
	
.LOOP $label$18:
	$15 = (($15 - $9) + [1])
	if ( ($15 == 0) ){ goto $label$17 }
	$1 = CALL memchr($1, $11, $15)
	if ( ($1 == 0) ){ goto $label$17 }
	if ( (CALL memcmp($1, $8, $9) == 0) ){ goto $label$16 }
	$1 = ($1 + [1])
	$15 = ($10 - $1)
	if ( ((int_32)$15 >= (int_32)$9) ){ goto $label$18 }
	
.LABEL $label$17
	$1 = $10
	
.LABEL $label$16
	$1 = ( [-1] ? ($1 - $7) : ((int_32)$1 == (int_32)$10) )
	
.LABEL $label$15
	if ( ((*($16 + [16]) & [1]) == 0) ){ goto $label$19 }
	CALL $104(*($12))
	
.LABEL $label$19
	if ( ((int_32)$1 != (int_32)[-1]) ){ goto $label$10 }
	$15 = *($16 + [32])
	
.LABEL $label$9
	if ( (($15 & [1]) == 0) ){ goto $label$1 }
	CALL $104(*(($16 + [40])))
	
.LABEL $label$1
	*([0] + [4]) = ($16 + [48])
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

int_64 .FUNC _ZN11dbetonedice13transfer_args8get_nameEv ()
{
	int_32 $0
	int_32 $1
	int_64 $2
	int_64 $3
	int_64 $4
	int_64 $5
	$3 = (int_64)0
	$2 = (int_64)59
	$1 = [16]
	$4 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$3 > (uint_64)(int_64)9) ){ goto $label$6 }
	$0 = *($1)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$0 = ($0 + [165])
	goto $label$4 
	
.LABEL $label$6
	$5 = (int_64)0
	if ( ((uint_64)$3 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$2
	$1 = ($1 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	$4 = ((int_64)$5 | (int_64)$4)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$1 }
	return $4
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC $14 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [16])
	$3 = $2
	*([0] + [4]) = $2
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	*(($0 + [24])) = [0]
	*($0 + [16 align=4]) = (int_64)0
	*($3 + [8]) = ($2 + $1)
	*($3) = $2
	CALL eosio_assert(((uint_32)$1 > (uint_32)[15]), [688])
	CALL memcpy($0, $2, [16])
	*($3 + [4]) = ($2 + [16])
	CALL $31($3, ($0 + [16]))
	if ( ($1 <= [513]) ){ goto $label$3 }
	CALL free($2)
	
.LABEL $label$3
	*([0] + [4]) = ($3 + [16])
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_64 $20
	int_32 $21
	$21 = (*([0] + [4]) - [304])
	*([0] + [4]) = $21
	CALL prints([64])
	CALL prints([4768])
	CALL prints([112])
	CALL printi((int_64)9)
	CALL prints([112])
	CALL prints([4784])
	$7 = *(($1 + [20]))
	$15 = *($1 + [16])
	$17 = CALL current_time()
	*(($21 + [252])) = [0]
	*(($21 + [256])) = [0]
	*($21 + [236]) = [0]
	*($21 + [240]) = [0]
	*($21 + [244]) = [0]
	*($21 + [248]) = [0]
	*($21 + [224]) = ((CASTING uint_32)(uint_64 ((uint_64)$17 / (uint_64)(int_64)1000000)) + [60])
	*($21 + [260]) = [0]
	*(($21 + [264])) = [0]
	*(($21 + [268])) = [0]
	*($21 + [272]) = [0]
	*(($21 + [276])) = [0]
	*(($21 + [280])) = [0]
	*($21 + [116]) = $15
	*($21 + [112]) = $15
	*($21 + [120]) = $7
	CALL $88(($21 + [112]), ($21 + [224]))
	CALL $90(CALL $89(CALL $89(($21 + [112]), ($21 + [248])), ($21 + [260])), ($21 + [272]))
	*(($21 + [216])) = [0]
	*($21 + [208]) = (int_64)0
	$15 = CALL strlen([4816])
	if ( ((uint_32)$15 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$15 >= (uint_32)[11]) ){ goto $label$4 }
	*($21 + [208]) = ($15 << [1])
	$7 = (($21 + [208]) | [1])
	if ( $15 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$14 = (($15 + [16]) & [-16])
	$7 = CALL $103($14)
	*($21 + [208]) = ($14 | [1])
	*($21 + [216]) = $7
	*($21 + [212]) = $15
	
.LABEL $label$3
	CALL memcpy($7, [4816], $15)
	
.LABEL $label$2
	*(($7 + $15)) = [0]
	$2 = *((($21 + [224]) + [40]))
	$14 = *(($21 + [260]))
	if ( ((int_32)$14 == (int_32)$2) ){ goto $label$5 }
	$5 = (($21 + [8]) + [32])
	$4 = (($21 + [8]) + [16])
	$3 = (($21 + [112]) + [16])
	$10 = ($21 + [136])
	$11 = (($21 + [72]) + [28])
	$13 = (($21 + [8]) + [40])
	$12 = (($21 + [72]) + [20])
	
.LOOP $label$6:
	$6 = CALL $91(($21 + [168]), $14)
	$9 = (($21 + [168]) + [8])
	$17 = *($9)
	$19 = *($21 + [168])
	CALL prints([64])
	CALL prints([4768])
	CALL prints([112])
	CALL printi((int_64)15)
	CALL prints([112])
	CALL prints([4848])
	$16 = *($1)
	*($21 + [120]) = *(($1 + [8]))
	*($21 + [112]) = $16
	CALL printui128(($21 + [112]))
	CALL prints([4880])
	CALL printn($17)
	CALL prints([4896])
	CALL printn($19)
	CALL prints([144])
	$20 = *($9)
	$17 = (int_64)0
	$16 = (int_64)59
	$15 = [16]
	$18 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$17 > (uint_64)(int_64)9) ){ goto $label$12 }
	$7 = *($15)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$7 = ($7 + [165])
	goto $label$10 
	
.LABEL $label$12
	$19 = (int_64)0
	if ( ((uint_64)$17 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$8
	$15 = ($15 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$18 = ((int_64)$19 | (int_64)$18)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$7 }
	if ( ((int_64)$20 != (int_64)$18) ){ goto $label$13 }
	CALL $92(($21 + [112]), $6)
	$17 = *($9)
	$19 = *($21 + [168])
	CALL prints([64])
	CALL prints([4768])
	CALL prints([112])
	CALL printi((int_64)21)
	CALL prints([112])
	CALL prints([4912])
	CALL printn($17)
	CALL prints([4928])
	CALL printn($19)
	CALL prints([144])
	$17 = *($21 + [112])
	CALL prints([64])
	CALL prints([4768])
	CALL prints([112])
	CALL printi((int_64)22)
	CALL prints([112])
	CALL prints([4944])
	CALL $60($3)
	CALL prints([4960])
	CALL printn($17)
	CALL prints([144])
	$17 = *($10)
	if ( ((int_64)$17 > (int_64)297481618435) ){ goto $label$18 }
	if ( ((int_64)$17 == (int_64)1397703940) ){ goto $label$16 }
	if ( ((int_64)$17 != (int_64)293455873288) ){ goto $label$17 }
	$8 = *((($21 + [112]) + [8]))
	$17 = (int_64)0
	$16 = (int_64)59
	$15 = [832]
	$18 = (int_64)0
	
.LOOP $label$19:
	if ( ((uint_64)$17 > (uint_64)(int_64)5) ){ goto $label$24 }
	$7 = *($15)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$7 = ($7 + [165])
	goto $label$22 
	
.LABEL $label$24
	$19 = (int_64)0
	if ( ((uint_64)$17 <= (uint_64)(int_64)11) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$21
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$20
	$15 = ($15 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$18 = ((int_64)$19 | (int_64)$18)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$19 }
	*((($21 + [56]) + [8])) = $18
	*($21 + [56]) = $8
	$17 = (int_64)0
	$19 = (int_64)59
	$15 = [480]
	$18 = (int_64)0
	
.LOOP $label$25:
	$16 = (int_64)0
	if ( ((uint_64)$17 > (uint_64)(int_64)11) ){ goto $label$26 }
	$7 = *($15)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$7 = ($7 + [165])
	goto $label$27 
	
.LABEL $label$28
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$16 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$19 & (int_64)4294967295))
	
.LABEL $label$26
	$15 = ($15 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$18 = ((int_64)$16 | (int_64)$18)
	$19 = ((int_64)$19 + (int_64)-5)
	if ( ((int_64)$19 != (int_64)-6) ){ goto $label$25 }
	$17 = (int_64)0
	$16 = (int_64)59
	$15 = [496]
	$20 = (int_64)0
	
.LOOP $label$29:
	if ( ((uint_64)$17 > (uint_64)(int_64)7) ){ goto $label$34 }
	$7 = *($15)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$7 = ($7 + [165])
	goto $label$32 
	
.LABEL $label$34
	$19 = (int_64)0
	if ( ((uint_64)$17 <= (uint_64)(int_64)11) ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$33
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$32
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$31
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$30
	$15 = ($15 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$20 = ((int_64)$19 | (int_64)$20)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$29 }
	*($4) = *($3)
	*($21 + [8]) = $8
	*((($21 + [8]) + [8])) = *($21 + [112])
	*(($4 + [12])) = *(($3 + [12]))
	*(($4 + [8])) = *(($3 + [8]))
	*(($4 + [4])) = *(($3 + [4]))
	CALL $114($5, ($21 + [208]))
	CALL $70(($21 + [288]), CALL $74(($21 + [72]), ($21 + [56]), $18, $20, ($21 + [8])))
	$15 = *($21 + [288])
	CALL send_inline($15, (*($21 + [292]) - $15))
	$15 = *($21 + [288])
	if ( ($15 == 0) ){ goto $label$35 }
	*($21 + [292]) = $15
	CALL $104($15)
	
.LABEL $label$35
	$15 = *($11)
	if ( ($15 == 0) ){ goto $label$36 }
	*((($21 + [72]) + [32])) = $15
	CALL $104($15)
	
.LABEL $label$36
	$15 = *((($21 + [72]) + [16]))
	if ( ($15 == 0) ){ goto $label$37 }
	*($12) = $15
	CALL $104($15)
	
.LABEL $label$37
	if ( ((*($5) & [1]) == 0) ){ goto $label$14 }
	CALL $104(*($13))
	goto $label$14 
	
.LABEL $label$18
	if ( ((int_64)$17 == (int_64)297481618436) ){ goto $label$15 }
	if ( ((int_64)$17 != (int_64)340414906884) ){ goto $label$17 }
	$8 = *((($21 + [112]) + [8]))
	$17 = (int_64)0
	$16 = (int_64)59
	$15 = [832]
	$18 = (int_64)0
	
.LOOP $label$38:
	if ( ((uint_64)$17 > (uint_64)(int_64)5) ){ goto $label$43 }
	$7 = *($15)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$42 }
	$7 = ($7 + [165])
	goto $label$41 
	
.LABEL $label$43
	$19 = (int_64)0
	if ( ((uint_64)$17 <= (uint_64)(int_64)11) ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$42
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$41
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$40
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$39
	$15 = ($15 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$18 = ((int_64)$19 | (int_64)$18)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$38 }
	*((($21 + [56]) + [8])) = $18
	*($21 + [56]) = $8
	$17 = (int_64)0
	$19 = (int_64)59
	$15 = [448]
	$18 = (int_64)0
	
.LOOP $label$44:
	$16 = (int_64)0
	if ( ((uint_64)$17 > (uint_64)(int_64)11) ){ goto $label$45 }
	$7 = *($15)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$47 }
	$7 = ($7 + [165])
	goto $label$46 
	
.LABEL $label$47
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$46
	$16 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$19 & (int_64)4294967295))
	
.LABEL $label$45
	$15 = ($15 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$18 = ((int_64)$16 | (int_64)$18)
	$19 = ((int_64)$19 + (int_64)-5)
	if ( ((int_64)$19 != (int_64)-6) ){ goto $label$44 }
	$17 = (int_64)0
	$16 = (int_64)59
	$15 = [496]
	$20 = (int_64)0
	
.LOOP $label$48:
	if ( ((uint_64)$17 > (uint_64)(int_64)7) ){ goto $label$53 }
	$7 = *($15)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$52 }
	$7 = ($7 + [165])
	goto $label$51 
	
.LABEL $label$53
	$19 = (int_64)0
	if ( ((uint_64)$17 <= (uint_64)(int_64)11) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$52
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$51
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$50
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$49
	$15 = ($15 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$20 = ((int_64)$19 | (int_64)$20)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$48 }
	*($4) = *($3)
	*($21 + [8]) = $8
	*((($21 + [8]) + [8])) = *($21 + [112])
	*(($4 + [12])) = *(($3 + [12]))
	*(($4 + [8])) = *(($3 + [8]))
	*(($4 + [4])) = *(($3 + [4]))
	CALL $114($5, ($21 + [208]))
	CALL $70(($21 + [288]), CALL $74(($21 + [72]), ($21 + [56]), $18, $20, ($21 + [8])))
	$15 = *($21 + [288])
	CALL send_inline($15, (*($21 + [292]) - $15))
	$15 = *($21 + [288])
	if ( ($15 == 0) ){ goto $label$54 }
	*($21 + [292]) = $15
	CALL $104($15)
	
.LABEL $label$54
	$15 = *($11)
	if ( ($15 == 0) ){ goto $label$55 }
	*((($21 + [72]) + [32])) = $15
	CALL $104($15)
	
.LABEL $label$55
	$15 = *((($21 + [72]) + [16]))
	if ( ($15 == 0) ){ goto $label$56 }
	*($12) = $15
	CALL $104($15)
	
.LABEL $label$56
	if ( ((*($5) & [1]) == 0) ){ goto $label$14 }
	CALL $104(*($13))
	goto $label$14 
	
.LABEL $label$17
	CALL eosio_assert([0], [3264])
	goto $label$14 
	
.LABEL $label$16
	$8 = *((($21 + [112]) + [8]))
	$17 = (int_64)0
	$16 = (int_64)59
	$15 = [832]
	$18 = (int_64)0
	
.LOOP $label$57:
	if ( ((uint_64)$17 > (uint_64)(int_64)5) ){ goto $label$62 }
	$7 = *($15)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$61 }
	$7 = ($7 + [165])
	goto $label$60 
	
.LABEL $label$62
	$19 = (int_64)0
	if ( ((uint_64)$17 <= (uint_64)(int_64)11) ){ goto $label$59 }
	goto $label$58 
	
.LABEL $label$61
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$60
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$59
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$58
	$15 = ($15 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$18 = ((int_64)$19 | (int_64)$18)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$57 }
	*((($21 + [56]) + [8])) = $18
	*($21 + [56]) = $8
	$17 = (int_64)0
	$16 = (int_64)59
	$15 = [432]
	$18 = (int_64)0
	
.LOOP $label$63:
	if ( ((uint_64)$17 > (uint_64)(int_64)10) ){ goto $label$68 }
	$7 = *($15)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$67 }
	$7 = ($7 + [165])
	goto $label$66 
	
.LABEL $label$68
	$19 = (int_64)0
	if ( ((int_64)$17 == (int_64)11) ){ goto $label$65 }
	goto $label$64 
	
.LABEL $label$67
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$66
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$65
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$64
	$15 = ($15 + [1])
	$16 = ((int_64)$16 + (int_64)-5)
	$18 = ((int_64)$19 | (int_64)$18)
	$17 = ((int_64)$17 + (int_64)1)
	if ( ((int_64)$17 != (int_64)13) ){ goto $label$63 }
	$17 = (int_64)0
	$16 = (int_64)59
	$15 = [496]
	$20 = (int_64)0
	
.LOOP $label$69:
	if ( ((uint_64)$17 > (uint_64)(int_64)7) ){ goto $label$74 }
	$7 = *($15)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$73 }
	$7 = ($7 + [165])
	goto $label$72 
	
.LABEL $label$74
	$19 = (int_64)0
	if ( ((uint_64)$17 <= (uint_64)(int_64)11) ){ goto $label$71 }
	goto $label$70 
	
.LABEL $label$73
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$72
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$71
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$70
	$15 = ($15 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$20 = ((int_64)$19 | (int_64)$20)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$69 }
	*($4) = *($3)
	*($21 + [8]) = $8
	*((($21 + [8]) + [8])) = *($21 + [112])
	*(($4 + [12])) = *(($3 + [12]))
	*(($4 + [8])) = *(($3 + [8]))
	*(($4 + [4])) = *(($3 + [4]))
	CALL $114($5, ($21 + [208]))
	CALL $70(($21 + [288]), CALL $74(($21 + [72]), ($21 + [56]), $18, $20, ($21 + [8])))
	$15 = *($21 + [288])
	CALL send_inline($15, (*($21 + [292]) - $15))
	$15 = *($21 + [288])
	if ( ($15 == 0) ){ goto $label$75 }
	*($21 + [292]) = $15
	CALL $104($15)
	
.LABEL $label$75
	$15 = *($11)
	if ( ($15 == 0) ){ goto $label$76 }
	*((($21 + [72]) + [32])) = $15
	CALL $104($15)
	
.LABEL $label$76
	$15 = *((($21 + [72]) + [16]))
	if ( ($15 == 0) ){ goto $label$77 }
	*($12) = $15
	CALL $104($15)
	
.LABEL $label$77
	if ( ((*($5) & [1]) == 0) ){ goto $label$14 }
	CALL $104(*($13))
	goto $label$14 
	
.LABEL $label$15
	$8 = *((($21 + [112]) + [8]))
	$17 = (int_64)0
	$16 = (int_64)59
	$15 = [832]
	$18 = (int_64)0
	
.LOOP $label$78:
	if ( ((uint_64)$17 > (uint_64)(int_64)5) ){ goto $label$83 }
	$7 = *($15)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$82 }
	$7 = ($7 + [165])
	goto $label$81 
	
.LABEL $label$83
	$19 = (int_64)0
	if ( ((uint_64)$17 <= (uint_64)(int_64)11) ){ goto $label$80 }
	goto $label$79 
	
.LABEL $label$82
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$81
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$80
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$79
	$15 = ($15 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$18 = ((int_64)$19 | (int_64)$18)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$78 }
	*((($21 + [56]) + [8])) = $18
	*($21 + [56]) = $8
	$17 = (int_64)0
	$19 = (int_64)59
	$15 = [464]
	$18 = (int_64)0
	
.LOOP $label$84:
	$16 = (int_64)0
	if ( ((uint_64)$17 > (uint_64)(int_64)11) ){ goto $label$85 }
	$7 = *($15)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$87 }
	$7 = ($7 + [165])
	goto $label$86 
	
.LABEL $label$87
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$86
	$16 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$19 & (int_64)4294967295))
	
.LABEL $label$85
	$15 = ($15 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$18 = ((int_64)$16 | (int_64)$18)
	$19 = ((int_64)$19 + (int_64)-5)
	if ( ((int_64)$19 != (int_64)-6) ){ goto $label$84 }
	$17 = (int_64)0
	$16 = (int_64)59
	$15 = [496]
	$20 = (int_64)0
	
.LOOP $label$88:
	if ( ((uint_64)$17 > (uint_64)(int_64)7) ){ goto $label$93 }
	$7 = *($15)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$92 }
	$7 = ($7 + [165])
	goto $label$91 
	
.LABEL $label$93
	$19 = (int_64)0
	if ( ((uint_64)$17 <= (uint_64)(int_64)11) ){ goto $label$90 }
	goto $label$89 
	
.LABEL $label$92
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$91
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$90
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$89
	$15 = ($15 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$20 = ((int_64)$19 | (int_64)$20)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$88 }
	*($4) = *($3)
	*($21 + [8]) = $8
	*((($21 + [8]) + [8])) = *($21 + [112])
	*(($4 + [12])) = *(($3 + [12]))
	*(($4 + [8])) = *(($3 + [8]))
	*(($4 + [4])) = *(($3 + [4]))
	CALL $114($5, ($21 + [208]))
	CALL $70(($21 + [288]), CALL $74(($21 + [72]), ($21 + [56]), $18, $20, ($21 + [8])))
	$15 = *($21 + [288])
	CALL send_inline($15, (*($21 + [292]) - $15))
	$15 = *($21 + [288])
	if ( ($15 == 0) ){ goto $label$94 }
	*($21 + [292]) = $15
	CALL $104($15)
	
.LABEL $label$94
	$15 = *($11)
	if ( ($15 == 0) ){ goto $label$95 }
	*((($21 + [72]) + [32])) = $15
	CALL $104($15)
	
.LABEL $label$95
	$15 = *((($21 + [72]) + [16]))
	if ( ($15 == 0) ){ goto $label$96 }
	*($12) = $15
	CALL $104($15)
	
.LABEL $label$96
	if ( ((*($5) & [1]) == 0) ){ goto $label$14 }
	CALL $104(*($13))
	
.LABEL $label$14
	if ( ((*((($21 + [112]) + [32])) & [1]) == 0) ){ goto $label$13 }
	CALL $104(*((($21 + [112]) + [40])))
	
.LABEL $label$13
	$15 = *((($21 + [168]) + [28]))
	if ( ($15 == 0) ){ goto $label$97 }
	*((($21 + [168]) + [32])) = $15
	CALL $104($15)
	
.LABEL $label$97
	$15 = *((($21 + [168]) + [16]))
	if ( ($15 == 0) ){ goto $label$98 }
	*((($21 + [168]) + [20])) = $15
	CALL $104($15)
	
.LABEL $label$98
	$14 = ($14 + [40])
	if ( ((int_32)$14 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$5
	if ( ((*($21 + [208]) & [1]) == 0) ){ goto $label$99 }
	CALL $104(*($21 + [216]))
	
.LABEL $label$99
	CALL $37(($21 + [224]))
	*([0] + [4]) = ($21 + [304])
	return (unreachable)
	
.LABEL $label$1
	CALL $105(($21 + [208]))
}

void .FUNC _ZN11dbetonedice8dbetdice8transferEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [272])
	*([0] + [4]) = $15
	*($15 + [128]) = $1
	*($15 + [8]) = $2
	*($15 + [232]) = *($0)
	CALL prints([64])
	CALL prints([3184])
	CALL prints([112])
	CALL printi((int_64)14)
	CALL $86([112], [4528], ($15 + [128]), [1488], ($15 + [8]), [1504], $3, [4576], $4, [1536], ($15 + [232]), [144])
	$11 = *($0)
	if ( ((int_64)$11 == (int_64)$1) ){ goto $label$1 }
	if ( ((int_64)$11 != (int_64)$2) ){ goto $label$1 }
	$14 = *($4)
	$6 = ($14 & [1])
	if ( $6 ){ goto $label$6 }
	if ( uint_32($14 >> [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( (*($4 + [4]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	if ( $6 ){ goto $label$8 }
	$6 = uint_32($14 >> [1])
	$8 = ($4 + [1])
	goto $label$7 
	
.LABEL $label$8
	$6 = *($4 + [4])
	$8 = *($4 + [8])
	
.LABEL $label$7
	$14 = CALL strlen([1616])
	if ( ($14 == 0) ){ goto $label$9 }
	if ( ((int_32)$6 < (int_32)$14) ){ goto $label$4 }
	$5 = ($8 + $6)
	$9 = $8
	
.LOOP $label$10:
	$6 = (($6 - $14) + [1])
	if ( ($6 == 0) ){ goto $label$4 }
	$6 = CALL memchr($9, [45], $6)
	if ( ($6 == 0) ){ goto $label$4 }
	if ( (CALL memcmp($6, [1616], $14) == 0) ){ goto $label$11 }
	$9 = ($6 + [1])
	$6 = ($5 - $9)
	if ( ((int_32)$6 >= (int_32)$14) ){ goto $label$10 }
	goto $label$4 
	
.LABEL $label$11
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	if ( ((int_32)($6 - $8) == (int_32)[-1]) ){ goto $label$4 }
	
.LABEL $label$9
	$6 = [0]
	if ( ((uint_64)((int_64)*($3) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$2 }
	$11 = (uint_64)*(($3 + [8])) >> (uint_64)(int_64)8)
	$14 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	
.LOOP $label$14:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$3 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$14 }
	
.LABEL $label$13
	$6 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$12 }
	goto $label$2 
	
.LABEL $label$4
	CALL prints([64])
	CALL prints([3184])
	CALL prints([112])
	CALL printi((int_64)22)
	CALL prints([112])
	CALL prints([4592])
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	
.LABEL $label$2
	CALL eosio_assert($6, [1552])
	CALL eosio_assert(((int_64)*($3) > (int_64)0), [1584])
	$11 = *(($3 + [8]))
	*((($15 + [232]) + [32])) = [0]
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	*($15 + [240]) = $11)
	*($15 + [248]) = (int_64)-1
	*($15 + [256]) = (int_64)0
	$13 = *($0)
	*($15 + [232]) = $13
	$14 = CALL db_find_i64($13, $11, (int_64)-3020376800539705344, $1)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$15 }
	$14 = CALL $46(($15 + [232]), $14)
	CALL eosio_assert(((int_32)*($14 + [32]) == (int_32)($15 + [232])), [752])
	if ( ((uint_64)*($14 + [16]) > (uint_64)(int_64)2) ){ goto $label$16 }
	if ( ((((uint_64)*($14 + [8]) > (uint_64)(int_64)9) & ((float_64)*($14 + [24]) >= (float_64)(float_64)10)) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL eosio_assert([0], [3504])
	
.LABEL $label$15
	*((($15 + [192]) + [32])) = [0]
	*($15 + [208]) = (int_64)-1
	*($15 + [216]) = (int_64)0
	$13 = *($0)
	*($15 + [192]) = $13
	*($15 + [200]) = $11
	$14 = CALL db_find_i64($13, $11, (int_64)-5918304704032407552, $11)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$17 }
	$14 = CALL $51(($15 + [192]), $14)
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)($15 + [192])), [752])
	if ( (uint_64)(*($14 + [16]) <= (int_64)3) ){ goto $label$17 }
	CALL eosio_assert([0], [3696])
	
.LABEL $label$17
	$14 = *($4)
	if ( ($14 & [1]) ){ goto $label$19 }
	$6 = uint_32($14 >> [1])
	$8 = ($4 + [1])
	goto $label$18 
	
.LABEL $label$19
	$6 = *($4 + [4])
	$8 = *($4 + [8])
	
.LABEL $label$18
	$14 = CALL strlen([4624])
	if ( ($14 == 0) ){ goto $label$23 }
	if ( ((int_32)$6 < (int_32)$14) ){ goto $label$22 }
	$5 = ($8 + $6)
	$9 = $8
	
.LOOP $label$24:
	$6 = (($6 - $14) + [1])
	if ( ($6 == 0) ){ goto $label$22 }
	$6 = CALL memchr($9, [100], $6)
	if ( ($6 == 0) ){ goto $label$22 }
	if ( (CALL memcmp($6, [4624], $14) == 0) ){ goto $label$25 }
	$9 = ($6 + [1])
	$6 = ($5 - $9)
	if ( ((int_32)$6 >= (int_32)$14) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$25
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$22 }
	if ( ((int_32)($6 - $8) == (int_32)[-1]) ){ goto $label$22 }
	
.LABEL $label$23
	CALL prints([64])
	CALL prints([3184])
	CALL prints([112])
	CALL printi((int_64)66)
	CALL prints([112])
	CALL prints([4640])
	$11 = CALL current_time()
	*(($15 + [156])) = [0]
	*(($15 + [160])) = [0]
	*($15 + [140]) = [0]
	*($15 + [144]) = [0]
	*($15 + [148]) = [0]
	*($15 + [152]) = [0]
	*($15 + [128]) = ((CASTING uint_32)(uint_64 ((uint_64)$11 / (uint_64)(int_64)1000000)) + [60])
	*($15 + [164]) = [0]
	*(($15 + [168])) = [0]
	*(($15 + [172])) = [0]
	*($15 + [176]) = [0]
	*(($15 + [180])) = [0]
	*(($15 + [184])) = [0]
	$13 = CALL current_time()
	$11 = (int_64)0
	*($15 + [120]) = (int_64)0
	*($15 + [112]) = ((int_64)((int_64)((uint_64)$13 / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)$1)
	$9 = ($15 + [164])
	$7 = *($0)
	$10 = (int_64)59
	$14 = [832]
	$12 = (int_64)0
	
.LOOP $label$26:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$31 }
	$6 = *($14)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$30 }
	$6 = ($6 + [165])
	goto $label$29 
	
.LABEL $label$31
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$30
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$29
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$28
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$27
	$14 = ($14 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$26 }
	*($15 + [64]) = $12
	*($15 + [56]) = $7
	$11 = (int_64)0
	$10 = (int_64)59
	$14 = [512]
	$12 = (int_64)0
	
.LOOP $label$32:
	if ( ((uint_64)$11 > (uint_64)(int_64)7) ){ goto $label$37 }
	$6 = *($14)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$36 }
	$6 = ($6 + [165])
	goto $label$35 
	
.LABEL $label$37
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$36
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$35
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$34
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$33
	$14 = ($14 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$32 }
	*(($15 + [36])) = *(($3 + [12]))
	*(($15 + [32])) = *(($3 + [8]))
	*(($15 + [28])) = *(($3 + [4]))
	*($15 + [16]) = $2
	*($15 + [8]) = $1
	*($15 + [24]) = *($3)
	CALL $114((($15 + [8]) + [32]), $4)
	$14 = CALL $74(($15 + [72]), ($15 + [56]), $7, $12, ($15 + [8]))
	CALL $84($9, $14)
	$6 = *($14 + [28])
	if ( ($6 == 0) ){ goto $label$38 }
	*(($14 + [32])) = $6
	CALL $104($6)
	
.LABEL $label$38
	$6 = *($14 + [16])
	if ( ($6 == 0) ){ goto $label$39 }
	*(($14 + [20])) = $6
	CALL $104($6)
	
.LABEL $label$39
	if ( ((*($15 + [40]) & [1]) == 0) ){ goto $label$40 }
	CALL $104(*(($15 + [48])))
	
.LABEL $label$40
	*(($15 + [148])) = [1]
	$11 = *($0)
	CALL $35(($15 + [8]), ($15 + [128]))
	$14 = *($15 + [8])
	CALL send_deferred(($15 + [112]), $11, $14, (*($15 + [12]) - $14), [0])
	$14 = *($15 + [8])
	if ( ($14 == 0) ){ goto $label$41 }
	*($15 + [12]) = $14
	CALL $104($14)
	
.LABEL $label$41
	CALL $37(($15 + [128]))
	*($15 + [128]) = $1
	*($15 + [8]) = $2
	*($15 + [72]) = *($0)
	CALL prints([64])
	CALL prints([3184])
	CALL prints([112])
	CALL printi((int_64)85)
	CALL $87([112], [4672], ($15 + [128]), [1488], ($15 + [8]), [1504], $3, [4576], $4, [1536], ($15 + [72]), [144])
	$0 = *($15 + [216])
	if ( ($0 == 0) ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$22
	CALL prints([64])
	CALL prints([3184])
	CALL prints([112])
	CALL printi((int_64)82)
	CALL prints([112])
	CALL prints([4704])
	$0 = *($15 + [216])
	if ( ($0 == 0) ){ goto $label$20 }
	
.LABEL $label$21
	$3 = ($15 + [220])
	$14 = *($3)
	if ( ((int_32)$14 == (int_32)$0) ){ goto $label$43 }
	
.LOOP $label$44:
	$14 = ($14 + [-24])
	$4 = *($14)
	*($14) = [0]
	if ( ($4 == 0) ){ goto $label$45 }
	CALL $104($4)
	
.LABEL $label$45
	if ( ((int_32)$0 != (int_32)$14) ){ goto $label$44 }
	$14 = *(($15 + [216]))
	goto $label$42 
	
.LABEL $label$43
	$14 = $0
	
.LABEL $label$42
	*($3) = $0
	CALL $104($14)
	
.LABEL $label$20
	$0 = *($15 + [256])
	if ( ($0 == 0) ){ goto $label$1 }
	$3 = ($15 + [260])
	$14 = *($3)
	if ( ((int_32)$14 == (int_32)$0) ){ goto $label$47 }
	
.LOOP $label$48:
	$14 = ($14 + [-24])
	$4 = *($14)
	*($14) = [0]
	if ( ($4 == 0) ){ goto $label$49 }
	CALL $104($4)
	
.LABEL $label$49
	if ( ((int_32)$0 != (int_32)$14) ){ goto $label$48 }
	$14 = *(($15 + [256]))
	goto $label$46 
	
.LABEL $label$47
	$14 = $0
	
.LABEL $label$46
	*($3) = $0
	CALL $104($14)
	
.LABEL $label$1
	*([0] + [4]) = ($15 + [272])
}

int_32 .FUNC $17 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [976])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [1040])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [68]) = $0
	*($5 + [64]) = $0
	*($5 + [72]) = ($0 + $2)
	*($5 + [80]) = ($5 + [64])
	*($5 + [88]) = $5
	CALL $82(($5 + [88]), ($5 + [80]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $85(($5 + [64]), $5)
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $104(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [96])
	return [1]
}

int_32 .FUNC _ZN11dbetonedice8isdecnumENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$1 = ($0 + [1])
	$5 = [0]
	$4 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$2:
	$6 = *($0)
	$2 = ($6 & [1])
	if ( $2 ){ goto $label$4 }
	if ( ($5 <= uint_32($6 >> [1])) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	if ( ((uint_32)$5 >= (uint_32)*($3)) ){ goto $label$1 }
	
.LABEL $label$3
	$6 = $1
	if ( ($2 == 0) ){ goto $label$5 }
	$6 = *($4)
	
.LABEL $label$5
	$6 = ($6 + $5)
	$5 = ($5 + [1])
	if ( CALL isdigit(*($6)) ){ goto $label$2 }
	return [0]
	
.LABEL $label$1
	return [1]
}

int_32 .FUNC _ZN11dbetonedice8isdecnumEPKc (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	if ( ($0 == 0) ){ goto $label$6 }
	*(($6 + [24])) = [0]
	*($6 + [16]) = (int_64)0
	$4 = CALL strlen($0)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$5 }
	*($6 + [16]) = ($4 << [1])
	$2 = (($6 + [16]) | [1])
	if ( $4 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$5 = [0]
	goto $label$2 
	
.LABEL $label$5
	$1 = (($4 + [16]) & [-16])
	$2 = CALL $103($1)
	*($6 + [16]) = ($1 | [1])
	*($6 + [24]) = $2
	*($6 + [20]) = $4
	
.LABEL $label$4
	CALL memcpy($2, $0, $4)
	
.LABEL $label$3
	$0 = [0]
	*(($2 + $4)) = [0]
	CALL $114($6, ($6 + [16]))
	$5 = [1]
	$1 = ($6 | [1])
	$3 = ($6 + [8])
	
.LOOP $label$8:
	$2 = ($4 & [1])
	$4 = *($6)
	if ( ((uint_32)$0 >= (uint_32)( *($6 + [4]) ? uint_32($4 >> [1]) : $2 )) ){ goto $label$7 }
	$4 = (( *($3) ? $1 : $2 ) + $0)
	$0 = ($0 + [1])
	if ( CALL isdigit(*($4)) ){ goto $label$8 }
	$5 = [0]
	$4 = *($6)
	
.LABEL $label$7
	if ( (($4 & [1]) == 0) ){ goto $label$9 }
	CALL $104(*(($6 + [8])))
	
.LABEL $label$9
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $104(*($6 + [24]))
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [32])
	return $5
	
.LABEL $label$1
	CALL $105(($6 + [16]))
	return (unreachable)
}

void .FUNC _ZN11dbetonedice16_generateRandNumEyPt (int_64 $0, int_32 $1)
{
	int_32 $2
	$2 = (*([0] + [4]) - [80])
	*([0] + [4]) = $2
	*($2 + [8]) = ((int_64)((int_64)((int_64)((int_64)(uint_64)$0 >> (uint_64)(int_64)20) & (int_64)16777215) * (int_64)((int_64)$0 & (int_64)1048575)) + (int_64)(uint_64)$0 >> (uint_64)(int_64)38)) + (int_64)(CASTING int_64)(int_32 ((int_32)CALL tapos_block_num() * (int_32)CALL $fimport$36())))
	CALL sha512(($2 + [8]), [4], ($2 + [16]))
	*($1) = *($2 + [16])
	*($1 + [4]) = *($2 + [20])
	*($1 + [6]) = *($2 + [22])
	*($1 + [8]) = *($2 + [24])
	*($1 + [10]) = *($2 + [26])
	*($1 + [12]) = *($2 + [28])
	*($1 + [14]) = *($2 + [30])
	*($1 + [16]) = *($2 + [32])
	*($1 + [18]) = *($2 + [34])
	*([0] + [4]) = ($2 + [80])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [240])
	*([0] + [4]) = $11
	CALL prints([64])
	CALL prints([160])
	CALL prints([112])
	CALL printi((int_64)125)
	CALL prints([112])
	CALL prints([176])
	CALL prints([64])
	CALL prints([160])
	CALL prints([112])
	CALL printi((int_64)125)
	CALL prints([112])
	CALL prints([224])
	CALL printn($0)
	CALL prints([256])
	CALL printn($1)
	CALL prints([272])
	CALL printn($2)
	CALL prints([288])
	CALL printn($0)
	CALL prints([144])
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [304]
	$9 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$8 > (uint_64)(int_64)4) ){ goto $label$6 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$9 != (int_64)$1) ){ goto $label$7 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [320]
	$9 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$8 > (uint_64)(int_64)6) ){ goto $label$13 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$9
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$8 }
	if ( ((int_64)$9 != (int_64)$2) ){ goto $label$7 }
	CALL prints([64])
	CALL prints([160])
	CALL prints([112])
	CALL printi((int_64)125)
	CALL prints([112])
	CALL prints([336])
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [304]
	$9 = (int_64)0
	
.LOOP $label$14:
	if ( ((uint_64)$8 > (uint_64)(int_64)4) ){ goto $label$19 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$18 }
	$3 = ($3 + [165])
	goto $label$17 
	
.LABEL $label$19
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$17
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$16
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$15
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$14 }
	CALL eosio_assert(((int_64)$9 == (int_64)$1), [368])
	*(($11 + [168])) = $0
	*(($11 + [176])) = (int_64)-1
	*(($11 + [184])) = (int_64)0
	*(($11 + [192])) = [0]
	*($11 + [160]) = $0
	*($11 + [152]) = $0
	*(($11 + [196])) = [0]
	*($11 + [200]) = $0
	*(($11 + [208])) = $0
	*(($11 + [216])) = (int_64)-1
	*(($3 = ($11 + [224]))) = [0]
	*(($11 + [228])) = [0]
	*(($11 + [232])) = [0]
	CALL $14(($11 + [112]))
	CALL $15(($11 + [152]), ($11 + [112]))
	$6 = *($11 + [128])
	if ( ($6 == 0) ){ goto $label$20 }
	*(($11 + [132])) = $6
	CALL $104($6)
	
.LABEL $label$20
	$4 = *($3)
	if ( ($4 == 0) ){ goto $label$21 }
	$5 = ($11 + [228])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$23 }
	
.LOOP $label$24:
	$6 = ($6 + [-24])
	$3 = *($6)
	*($6) = [0]
	if ( ($3 == 0) ){ goto $label$25 }
	CALL $104($3)
	
.LABEL $label$25
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$24 }
	$6 = *(($11 + [224]))
	goto $label$22 
	
.LABEL $label$23
	$6 = $4
	
.LABEL $label$22
	*($5) = $4
	CALL $104($6)
	
.LABEL $label$21
	$4 = *(($11 + [184]))
	if ( ($4 == 0) ){ goto $label$7 }
	$5 = ($11 + [188])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$27 }
	
.LOOP $label$28:
	$6 = ($6 + [-24])
	$3 = *($6)
	*($6) = [0]
	if ( ($3 == 0) ){ goto $label$29 }
	CALL $104($3)
	
.LABEL $label$29
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$28 }
	$6 = *(($11 + [184]))
	goto $label$26 
	
.LABEL $label$27
	$6 = $4
	
.LABEL $label$26
	*($5) = $4
	CALL $104($6)
	
.LABEL $label$7
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [432]
	$9 = (int_64)0
	
.LOOP $label$30:
	if ( ((uint_64)$8 > (uint_64)(int_64)10) ){ goto $label$35 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$3 = ($3 + [165])
	goto $label$33 
	
.LABEL $label$35
	$10 = (int_64)0
	if ( ((int_64)$8 == (int_64)11) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$34
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$32
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$31
	$6 = ($6 + [1])
	$7 = ((int_64)$7 + (int_64)-5)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)1)
	if ( ((int_64)$8 != (int_64)13) ){ goto $label$30 }
	if ( ((int_64)$9 == (int_64)$1) ){ goto $label$39 }
	$8 = (int_64)0
	$10 = (int_64)59
	$6 = [448]
	$9 = (int_64)0
	
.LOOP $label$40:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$41 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$43 }
	$3 = ($3 + [165])
	goto $label$42 
	
.LABEL $label$43
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$42
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$41
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$7 | (int_64)$9)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$40 }
	if ( ((int_64)$9 == (int_64)$1) ){ goto $label$39 }
	$8 = (int_64)0
	$10 = (int_64)59
	$6 = [464]
	$9 = (int_64)0
	
.LOOP $label$44:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$45 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$47 }
	$3 = ($3 + [165])
	goto $label$46 
	
.LABEL $label$47
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$46
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$45
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$7 | (int_64)$9)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$44 }
	if ( ((int_64)$9 == (int_64)$1) ){ goto $label$39 }
	$8 = (int_64)0
	$10 = (int_64)59
	$6 = [480]
	$9 = (int_64)0
	
.LOOP $label$48:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$49 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$51 }
	$3 = ($3 + [165])
	goto $label$50 
	
.LABEL $label$51
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$50
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$49
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$7 | (int_64)$9)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$48 }
	if ( ((int_64)$9 != (int_64)$1) ){ goto $label$38 }
	
.LABEL $label$39
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [496]
	$9 = (int_64)0
	
.LOOP $label$52:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$57 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$56 }
	$3 = ($3 + [165])
	goto $label$55 
	
.LABEL $label$57
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$54 }
	goto $label$53 
	
.LABEL $label$56
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$55
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$54
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$53
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$52 }
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$37 }
	
.LABEL $label$38
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$36 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [512]
	$9 = (int_64)0
	
.LOOP $label$58:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$63 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$62 }
	$3 = ($3 + [165])
	goto $label$61 
	
.LABEL $label$63
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$60 }
	goto $label$59 
	
.LABEL $label$62
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$61
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$60
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$59
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$58 }
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$37 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [16]
	$9 = (int_64)0
	
.LOOP $label$64:
	if ( ((uint_64)$8 > (uint_64)(int_64)9) ){ goto $label$69 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$68 }
	$3 = ($3 + [165])
	goto $label$67 
	
.LABEL $label$69
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$66 }
	goto $label$65 
	
.LABEL $label$68
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$67
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$66
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$65
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$64 }
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$37 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [528]
	$9 = (int_64)0
	
.LOOP $label$70:
	if ( ((uint_64)$8 > (uint_64)(int_64)4) ){ goto $label$75 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$74 }
	$3 = ($3 + [165])
	goto $label$73 
	
.LABEL $label$75
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$72 }
	goto $label$71 
	
.LABEL $label$74
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$73
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$72
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$71
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$70 }
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$37 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [544]
	$9 = (int_64)0
	
.LOOP $label$76:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$81 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$80 }
	$3 = ($3 + [165])
	goto $label$79 
	
.LABEL $label$81
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$78 }
	goto $label$77 
	
.LABEL $label$80
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$79
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$78
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$77
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$76 }
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$37 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [560]
	$9 = (int_64)0
	
.LOOP $label$82:
	if ( ((uint_64)$8 > (uint_64)(int_64)9) ){ goto $label$87 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$86 }
	$3 = ($3 + [165])
	goto $label$85 
	
.LABEL $label$87
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$84 }
	goto $label$83 
	
.LABEL $label$86
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$85
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$84
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$83
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$82 }
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$37 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [576]
	$9 = (int_64)0
	
.LOOP $label$88:
	if ( ((uint_64)$8 > (uint_64)(int_64)4) ){ goto $label$93 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$92 }
	$3 = ($3 + [165])
	goto $label$91 
	
.LABEL $label$93
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$90 }
	goto $label$89 
	
.LABEL $label$92
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$91
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$90
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$89
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$88 }
	if ( ((int_64)$9 != (int_64)$2) ){ goto $label$36 }
	
.LABEL $label$37
	CALL prints([64])
	CALL prints([160])
	CALL prints([112])
	CALL printi((int_64)125)
	CALL prints([112])
	CALL prints([592])
	CALL printn($2)
	CALL prints([624])
	*(($11 + [168])) = $0
	*(($11 + [176])) = (int_64)-1
	*(($11 + [184])) = (int_64)0
	*(($11 + [192])) = [0]
	*($11 + [160]) = $0
	*($11 + [152]) = $0
	*(($11 + [196])) = [0]
	*($11 + [200]) = $0
	*(($11 + [208])) = $0
	*(($11 + [216])) = (int_64)-1
	*(($11 + [224])) = [0]
	*(($11 + [228])) = [0]
	*(($11 + [232])) = [0]
	if ( ((int_64)$2 <= (int_64)4730643280948101119) ){ goto $label$100 }
	if ( ((int_64)$2 > (int_64)5391622577058496511) ){ goto $label$99 }
	if ( ((int_64)$2 == (int_64)4730643280948101120) ){ goto $label$98 }
	if ( ((int_64)$2 != (int_64)4923678490122780672) ){ goto $label$94 }
	*($11 + [84]) = [0]
	*($11 + [80]) = [1]
	*($11 + [24 align=4]) = *($11 + [80])
	CALL $22(($11 + [152]), ($11 + [24]))
	goto $label$94 
	
.LABEL $label$100
	if ( ((int_64)$2 == (int_64)-7954134735498772480) ){ goto $label$97 }
	if ( ((int_64)$2 == (int_64)-3617168760277827584) ){ goto $label$96 }
	if ( ((int_64)$2 != (int_64)-3106564261919997952) ){ goto $label$94 }
	*($11 + [68]) = [0]
	*($11 + [64]) = [2]
	*($11 + [40 align=4]) = *($11 + [64])
	CALL $26(($11 + [152]), ($11 + [40]))
	goto $label$94 
	
.LABEL $label$99
	if ( ((int_64)$2 == (int_64)5391622577058496512) ){ goto $label$95 }
	if ( ((int_64)$2 != (int_64)5445040868744495104) ){ goto $label$94 }
	*($11 + [100]) = [0]
	*($11 + [96]) = [3]
	*($11 + [8 align=4]) = *($11 + [96])
	CALL $19(($11 + [152]), ($11 + [8]))
	goto $label$94 
	
.LABEL $label$98
	*($11 + [60]) = [0]
	*($11 + [56]) = [4]
	*($11 + [48 align=4]) = *($11 + [56])
	CALL $28(($11 + [152]), ($11 + [48]))
	goto $label$94 
	
.LABEL $label$97
	*($11 + [76]) = [0]
	*($11 + [72]) = [5]
	*($11 + [32 align=4]) = *($11 + [72])
	CALL $24(($11 + [152]), ($11 + [32]))
	goto $label$94 
	
.LABEL $label$96
	*($11 + [108]) = [0]
	*($11 + [104]) = [6]
	*($11) = *($11 + [104])
	CALL $17(($11 + [152]), $11)
	goto $label$94 
	
.LABEL $label$95
	*($11 + [92]) = [0]
	*($11 + [88]) = [7]
	*($11 + [16 align=4]) = *($11 + [88])
	CALL $19(($11 + [152]), ($11 + [16]))
	
.LABEL $label$94
	$4 = *(($11 + [224]))
	if ( ($4 == 0) ){ goto $label$101 }
	$5 = ($11 + [228])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$103 }
	
.LOOP $label$104:
	$6 = ($6 + [-24])
	$3 = *($6)
	*($6) = [0]
	if ( ($3 == 0) ){ goto $label$105 }
	CALL $104($3)
	
.LABEL $label$105
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$104 }
	$6 = *(($11 + [224]))
	goto $label$102 
	
.LABEL $label$103
	$6 = $4
	
.LABEL $label$102
	*($5) = $4
	CALL $104($6)
	
.LABEL $label$101
	$4 = *(($11 + [184]))
	if ( ($4 == 0) ){ goto $label$36 }
	$5 = ($11 + [188])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$107 }
	
.LOOP $label$108:
	$6 = ($6 + [-24])
	$3 = *($6)
	*($6) = [0]
	if ( ($3 == 0) ){ goto $label$109 }
	CALL $104($3)
	
.LABEL $label$109
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$108 }
	$6 = *(($11 + [184]))
	goto $label$106 
	
.LABEL $label$107
	$6 = $4
	
.LABEL $label$106
	*($5) = $4
	CALL $104($6)
	
.LABEL $label$36
	CALL prints([64])
	CALL prints([160])
	CALL prints([112])
	CALL printi((int_64)125)
	CALL prints([112])
	CALL prints([640])
	*([0] + [4]) = ($11 + [240])
}

void .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [928])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [928])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [928])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [928])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $45(*($1), ($0 + [32]))
}

void .FUNC _ZN11dbetonedice8dbetdice8dicerollEyyRKN5eosio5assetENSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [192])
	*([0] + [4]) = $13
	CALL require_auth(*($0))
	$10 = CALL current_time()
	*(($13 + [156])) = [0]
	*(($13 + [160])) = [0]
	*($13 + [140]) = [0]
	*($13 + [144]) = [0]
	*($13 + [148]) = [0]
	*($13 + [152]) = [0]
	*($13 + [128]) = ((CASTING uint_32)(uint_64 ((uint_64)$10 / (uint_64)(int_64)1000000)) + [60])
	*($13 + [164]) = [0]
	*(($13 + [168])) = [0]
	*(($13 + [172])) = [0]
	*($13 + [176]) = [0]
	*(($13 + [180])) = [0]
	*(($13 + [184])) = [0]
	$12 = CALL current_time()
	$10 = (int_64)0
	*($13 + [120]) = (int_64)0
	*($13 + [112]) = ((int_64)((int_64)$1 + (int_64)((int_64)((uint_64)$12 / (uint_64)(int_64)1000000) & (int_64)4294967295)) + (int_64)99)
	$6 = ($13 + [164])
	$5 = *($0)
	$9 = (int_64)59
	$8 = [832]
	$11 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$6 }
	$7 = *($8)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$7 = ($7 + [165])
	goto $label$4 
	
.LABEL $label$6
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$2
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$1 }
	*($13 + [64]) = $11
	*($13 + [56]) = $5
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [16]
	$11 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$10 > (uint_64)(int_64)9) ){ goto $label$12 }
	$7 = *($8)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$7 = ($7 + [165])
	goto $label$10 
	
.LABEL $label$12
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$8
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$7 }
	*(($13 + [36])) = *(($3 + [12]))
	*(($13 + [32])) = *(($3 + [8]))
	*(($13 + [28])) = *(($3 + [4]))
	*($13 + [16]) = $2
	*($13 + [8]) = $1
	*($13 + [24]) = *($3)
	CALL $114((($13 + [8]) + [32]), $4)
	$8 = CALL $74(($13 + [72]), ($13 + [56]), $5, $11, ($13 + [8]))
	CALL $84($6, $8)
	$7 = *($8 + [28])
	if ( ($7 == 0) ){ goto $label$13 }
	*(($8 + [32])) = $7
	CALL $104($7)
	
.LABEL $label$13
	$7 = *($8 + [16])
	if ( ($7 == 0) ){ goto $label$14 }
	*(($8 + [20])) = $7
	CALL $104($7)
	
.LABEL $label$14
	if ( ((*($13 + [40]) & [1]) == 0) ){ goto $label$15 }
	CALL $104(*(($13 + [48])))
	
.LABEL $label$15
	*(($13 + [148])) = [0]
	$10 = *($0)
	CALL $35(($13 + [8]), ($13 + [128]))
	$8 = *($13 + [8])
	CALL send_deferred(($13 + [112]), $10, $8, (*($13 + [12]) - $8), [0])
	$8 = *($13 + [8])
	if ( ($8 == 0) ){ goto $label$16 }
	*($13 + [12]) = $8
	CALL $104($8)
	
.LABEL $label$16
	CALL $37(($13 + [128]))
	*([0] + [4]) = ($13 + [192])
}

int_32 .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [976])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [1040])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [68]) = $0
	*($5 + [64]) = $0
	*($5 + [72]) = ($0 + $2)
	*($5 + [80]) = ($5 + [64])
	*($5 + [88]) = $5
	CALL $82(($5 + [88]), ($5 + [80]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $83(($5 + [64]), $5)
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $104(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [96])
	return [1]
}

int_32 .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [688])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [688])
	CALL memcpy(($1 + [80]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [688])
	CALL memcpy(($1 + [84]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

void .FUNC $59 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $103(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $113($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $104($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $104($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $50 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [976])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [1040])
	CALL eosio_assert(((uint_32)$2 > (uint_32)[7]), [688])
	CALL memcpy($0, $1, [8])
	CALL eosio_assert(((int_32)($2 & [-8]) != (int_32)[8]), [688])
	CALL memcpy(($0 + [8]), ($1 + [8]), [8])
}

int_32 .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [944])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $103([40])
	$6 = CALL $53($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	*($8 + [8]) = $5)
	$1 = *($4 + [28])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $54(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $104($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $52 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [1152])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1200])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1 + [8])
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( (uint_64)(((int_64)*(*($8) + [8]) ^ (int_64)$2) <= (int_64)256) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1264])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $104($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $104($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
}

int_32 .FUNC $53 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [976])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [1040])
	*($0 + [24]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [688])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [688])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [688])
	CALL memcpy(($0 + [16]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [28]) = *(*($2 + [8]))
	return $0
}

void .FUNC $54 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $103(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $113($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $104($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $104($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $34 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$8 = *($0)
	$9 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$5 = ($9 + [1])
	if ( ((uint_32)$5 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$7 = ($8 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = CALL $103(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $113($0)
	
.LABEL $label$1
	$5 = ($8 + ((int_32)$7 * (int_32)[40]))
	$9 = ($8 + ((int_32)$9 * (int_32)[40]))
	$8 = CALL $44($9, $1, *($2), *($3), $4)
	$6 = ($8 + [40])
	$7 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$6 }
	$4 = ([0] - $7)
	$7 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($7 + [-12]))
	*(($8 + [-40])) = *(($7 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($2 = ($8 + [-16]))) = [0]
	$3 = ($7 + [-4])
	*($1) = *($3)
	*(($8 + [-20])) = *($7)
	$1 = ($7 + [4])
	*($2) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($3) = (int_64)0
	*(($2 = ($8 + [-4]))) = [0]
	$3 = ($7 + [8])
	*($1) = *($3)
	*(($8 + [-8])) = *(($7 + [12]))
	$8 = ($7 + [16])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$9 = ($9 + [-40])
	$8 = $9
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $4) != (int_32)[-20]) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$1 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$1 = $7
	
.LABEL $label$5
	*($0) = $9
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$8 }
	$9 = ([0] - $1)
	$7 = ($7 + [-24])
	
.LOOP $label$9:
	$8 = *(($7 + [12]))
	if ( ($8 == 0) ){ goto $label$10 }
	*(($7 + [16])) = $8
	CALL $104($8)
	
.LABEL $label$10
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$11 }
	*(($7 + [4])) = $8
	CALL $104($8)
	
.LABEL $label$11
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $9) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $104($1)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $56 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [1152])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [1200])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1264])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $104($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $104($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [92]))
	$7 = *(($1 + [96]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5445040692176502784, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	$7 = *(($1 + [100]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$12 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5445040692176502785, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$11 }
	
.LABEL $label$12
	CALL db_idx64_remove($7)
	
.LABEL $label$11
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $57 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [32]) = (int_64)0
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	CALL eosio_assert([1], [976])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1040])
	*(($2 = ($0 + [56]))) = (int_64)1398362884
	*($0 + [48]) = (int_64)0
	CALL eosio_assert([1], [976])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [1040])
	*($0 + [80]) = [0]
	return $0
}

int_32 .FUNC isdigit (int_32 $0)
{
	return (($0 + [-48]) <= [10])
}

int_64 .FUNC atoll (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	
.LOOP $label$1:
	$3 = *($0)
	$1 = int_32(($3 << [24]) >> [24])
	$2 = ($1 + [-9])
	$4 = ($0 + [1])
	$0 = $4
	if ( ((int_32)$3 == (int_32)[32]) ){ goto $label$1 }
	$0 = $4
	if ( ($2 <= [5]) ){ goto $label$1 }
	if ( ((int_32)$1 == (int_32)[43]) ){ goto $label$5 }
	if ( ((int_32)$1 != (int_32)[45]) ){ goto $label$3 }
	$2 = [1]
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	
.LABEL $label$4
	$3 = *($4)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($4 + [-1])
	$2 = [0]
	
.LABEL $label$2
	$5 = (int_64)0
	$3 = (int_32(($3 << [24]) >> [24]) + [-48])
	if ( ((uint_32)$3 > (uint_32)[9]) ){ goto $label$6 }
	$0 = ($4 + [1])
	$5 = (int_64)0
	
.LOOP $label$7:
	$5 = (int_64))(((int_64)$5 * (int_64)10) - (CASTING int_64)(int_32 $3))
	$3 = *($0)
	$0 = ($0 + [1])
	$3 = ($3 + [-48])
	if ( ($3 <= [10]) ){ goto $label$7 }
	
.LABEL $label$6
	return ( $5 ? (int_64))((int_64)0 - $5) : $2 )
}

int_32 .FUNC $114 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $103($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($4) = [0]
	CALL $38($4, $1)
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $32($0, $2)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($4 + [4]) = $0
	*($4) = $0
	*($4 + [8]) = $3
	CALL $39($4, $1)
	CALL $41(CALL $40(CALL $40($4, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $112 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$6 = *($0)
	$5 = ($6 & [1])
	if ( $5 ){ goto $label$2 }
	$6 = uint_32($6 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($0 + [4])
	
.LABEL $label$1
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	if ( ($6 <= $1) ){ goto $label$3 }
	$6 = ($6 - $1)
	$6 = ( $6 ? $2 : ($6 <= $2) )
	if ( $5 ){ goto $label$5 }
	$0 = ($0 + [1])
	goto $label$4 
	
.LABEL $label$5
	$0 = *($0 + [8])
	
.LABEL $label$4
	$5 = ((uint_32)$6 > (uint_32)$4)
	$2 = ( $4 ? $6 : $5 )
	if ( ($2 == 0) ){ goto $label$6 }
	$1 = CALL memcmp(($0 + $1), $3, $2)
	if ( ($1 == 0) ){ goto $label$6 }
	return $1
	
.LABEL $label$6
	return ( [-1] ? $5 : ($6 <= $4) )
	
.LABEL $label$3
	CALL abort()
	return (unreachable)
}

void .FUNC $113 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $110 (int_32 $0, int_32 $1, int_32 $2)
{
	return CALL $111($0, $1, $2, CALL $120($2))
}

int_32 .FUNC $111 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$3 }
	$4 = uint_32($5 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( $6 ){ goto $label$5 }
	$6 = [10]
	goto $label$4 
	
.LABEL $label$5
	$5 = *($0)
	$6 = (($5 & [-2]) + [-1])
	
.LABEL $label$4
	if ( ((uint_32)($6 - $4) >= (uint_32)$3) ){ goto $label$6 }
	CALL $108($0, $6, (($4 + $3) - $6), $4, $1, [0], $3, $2)
	return $0
	
.LABEL $label$6
	if ( ($3 == 0) ){ goto $label$9 }
	if ( ($5 & [1]) ){ goto $label$8 }
	$5 = ($0 + [1])
	goto $label$7 
	
.LABEL $label$9
	return $0
	
.LABEL $label$8
	$5 = *($0 + [8])
	
.LABEL $label$7
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( ($1 == 0) ){ goto $label$10 }
	CALL memmove(($6 + $3), $6, $1)
	$2 = ( ( ($2 + $3) ? $2 : ((uint_32)($5 + $4) > (uint_32)$2) ) ? $2 : ((uint_32)$6 <= (uint_32)$2) )
	
.LABEL $label$10
	CALL memmove($6, $2, $3)
	$3 = ($4 + $3)
	if ( (*($0) & [1]) ){ goto $label$12 }
	*($0) = ($3 << [1])
	goto $label$11 
	
.LABEL $label$12
	*($0 + [4]) = $3
	
.LABEL $label$11
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC memchr (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = [0]
	$4 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$7:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$3 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$4 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	$5 = $2
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = $2
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)($1 & [255])) ){ goto $label$8 }
	if ( ($5 <= [4]) ){ goto $label$10 }
	$4 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$4)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$8 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$8
	$6 = $5
	
.LABEL $label$1
	return ( $0 ? [0] : $6 )
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $31($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $106($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $103($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $106($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $104($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $105($7)
	return (unreachable)
}

int_32 .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [64])
	*([0] + [4]) = $4
	*(($3 = $4) + [44]) = $0
	*($3 + [32]) = *($1)
	*($3 + [36]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($4 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($3 + [24])) = [0]
	*($3 + [8]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [48]) = $1
	$4 = ($1 + $0)
	*($3 + [56]) = $4
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [688])
	CALL memcpy($3, $1, [8])
	$2 = ($1 + [8])
	CALL eosio_assert(((uint_32)($4 - $2) > (uint_32)[7]), [688])
	CALL memcpy(($3 + [8]), $2, [8])
	*($3 + [52]) = ($1 + [16])
	CALL $29(($3 + [48]), ($3 + [16]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($3 + [52]) = ($3 + [32])
	*($3 + [48]) = ($3 + [44])
	CALL $30(($3 + [48]), $3)
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $104(*(($3 + [24])))
	
.LABEL $label$5
	*([0] + [4]) = ($3 + [64])
	return [1]
}

int_32 .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [944])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $103([104])
	$4 = CALL $57($6)
	*($6 + [88]) = $0
	CALL $58(($8 + [32]), $4)
	*($6 + [96]) = [-1]
	*($6 + [92]) = $1
	*($6 + [100]) = [-1]
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [92])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $59(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $104($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $107 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$3 = *($0)
	$4 = (($3 & [-2]) + [-1])
	
.LABEL $label$1
	if ( ($3 & [1]) ){ goto $label$3 }
	$5 = uint_32(($3 & [254]) >> [1])
	goto $label$2 
	
.LABEL $label$3
	$5 = *($0 + [4])
	
.LABEL $label$2
	if ( ((uint_32)($4 - $5) >= (uint_32)$2) ){ goto $label$4 }
	CALL $108($0, $4, (($2 - $4) + $5), $5, $5, [0], $2, $1)
	return $0
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$7 }
	if ( ($3 & [1]) ){ goto $label$6 }
	$4 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$7
	return $0
	
.LABEL $label$6
	$4 = *($0 + [8])
	
.LABEL $label$5
	CALL memcpy(($4 + $5), $1, $2)
	$2 = ($5 + $2)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($4 + $2)) = [0]
	return $0
}

void .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $103(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $104($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC _ZN11dbetonedice8dbetdice5clearEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	$3 = *($0)
	CALL prints([64])
	CALL prints([1328])
	CALL prints([112])
	CALL printi((int_64)59)
	CALL prints([112])
	CALL prints([1360])
	CALL printn($3)
	CALL prints([1376])
	CALL printui($1)
	CALL prints([144])
	CALL require_auth(*($0))
	$5 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)5445040692176502784, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$2 = ($0 + [8])
	$0 = CALL $55($2, $5)
	
.LOOP $label$2:
	if ( ((uint_64)*($0) > (uint_64)$1) ){ goto $label$1 }
	CALL prints([64])
	CALL prints([1328])
	CALL prints([112])
	CALL printi((int_64)64)
	CALL prints([112])
	CALL prints([1392])
	CALL printui(*($0))
	CALL prints([1408])
	$5 = [0]
	$4 = ((int_32)$0 != (int_32)[0])
	CALL eosio_assert($4, [1072])
	CALL eosio_assert($4, [1120])
	$4 = CALL db_next_i64(*($0 + [92]), ($6 + [8]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $55($2, $4)
	
.LABEL $label$3
	CALL $56($2, $0)
	$0 = $5
	if ( $5 ){ goto $label$2 }
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [16])
}

void .FUNC _ZN11dbetonedice8dbetdice10dfdicerollEyyRKN5eosio5assetENSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_32 $16
	$16 = (*([0] + [4]) - [448])
	*([0] + [4]) = $16
	$10 = *($0)
	CALL prints([64])
	CALL prints([1424])
	CALL prints([112])
	CALL printi((int_64)85)
	CALL prints([112])
	CALL prints([1440])
	CALL printn($1)
	CALL prints([1488])
	CALL printn($2)
	CALL prints([1504])
	CALL $60($3)
	CALL prints([1520])
	CALL prints([1536])
	CALL printn($10)
	CALL prints([144])
	CALL require_auth(*($0))
	$9 = [0]
	if ( ((uint_64)((int_64)*($3) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$2 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8)
	$13 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$9 = [1]
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	
.LABEL $label$1
	CALL eosio_assert($9, [1552])
	CALL eosio_assert(((int_64)*($3) > (int_64)0), [1584])
	*(($16 + [392])) = [0]
	*($16 + [384]) = (int_64)0
	$13 = CALL strlen([1616])
	if ( ((uint_32)$13 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$13 >= (uint_32)[11]) ){ goto $label$9 }
	*($16 + [384]) = ($13 << [1])
	$9 = (($16 + [384]) | [1])
	if ( $13 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$5 = (($13 + [16]) & [-16])
	$9 = CALL $103($5)
	*($16 + [384]) = ($5 | [1])
	*($16 + [392]) = $9
	*($16 + [388]) = $13
	
.LABEL $label$8
	CALL memcpy($9, [1616], $13)
	
.LABEL $label$7
	*(($9 + $13)) = [0]
	CALL _ZN11dbetonedice5splitERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(($16 + [368]), $4, ($16 + [384]))
	if ( ((*($16 + [384]) & [1]) == 0) ){ goto $label$10 }
	CALL $104(*($16 + [392]))
	
.LABEL $label$10
	$13 = *($16 + [368])
	$9 = *($16 + [372])
	CALL prints([64])
	CALL prints([1424])
	CALL prints([112])
	CALL printi((int_64)93)
	CALL prints([112])
	CALL prints([1632])
	$5 = *($4)
	$8 = ($5 & [1])
	CALL prints_l(( *($4 + [8]) ? ($4 + [1]) : $8 ), ( *($4 + [4]) ? uint_32($5 >> [1]) : $8 ))
	CALL prints([1648])
	CALL printui((CASTING uint_64)(uint_32 ((int_32)($9 - $13) / (int_32)[12])))
	CALL prints([144])
	$13 = *($16 + [368])
	if ( ((int_32)(*($16 + [372]) - $13) != (int_32)[72]) ){ goto $label$18 }
	CALL $114(($16 + [352]), $13)
	CALL $114(($16 + [336]), (*($16 + [368]) + [12]))
	CALL $114(($16 + [320]), (*($16 + [368]) + [24]))
	CALL $114(($16 + [304]), (*($16 + [368]) + [36]))
	CALL $114(($16 + [288]), (*($16 + [368]) + [48]))
	CALL $114(($16 + [272]), (*($16 + [368]) + [60]))
	*($16 + [384]) = [110]
	CALL $61([64], [1424], [112], ($16 + [384]), [112], [1760], ($16 + [352]), [1776], ($16 + [336]), [1808], ($16 + [320]), [1824], ($16 + [304]), [1840], ($16 + [288]), [1872], ($16 + [272]), [144])
	CALL $114(($16 + [256]), ($16 + [336]))
	$5 = (($16 + [256]) | [1])
	$13 = [0]
	$8 = ($16 + [264])
	
.LOOP $label$19:
	$4 = ($4 & [1])
	$4 = *($16 + [256])
	if ( ((uint_32)$13 >= (uint_32)( *($16 + [260]) ? uint_32($4 >> [1]) : $4 )) ){ goto $label$17 }
	$4 = (( *($8) ? $5 : $4 ) + $13)
	$9 = [1]
	$13 = ($13 + [1])
	if ( CALL isdigit(*($4)) ){ goto $label$19 }
	goto $label$16 
	
.LABEL $label$18
	CALL prints([64])
	CALL prints([1424])
	CALL prints([112])
	CALL printi((int_64)98)
	CALL prints([112])
	CALL prints([1680])
	$9 = *($16 + [368])
	if ( $9 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	CALL $114(($16 + [240]), ($16 + [320]))
	$5 = (($16 + [240]) | [1])
	$13 = [0]
	$8 = ($16 + [248])
	
.LOOP $label$22:
	$4 = ($4 & [1])
	$4 = *($16 + [240])
	if ( ((uint_32)$13 >= (uint_32)( *($16 + [244]) ? uint_32($4 >> [1]) : $4 )) ){ goto $label$21 }
	$4 = (( *($8) ? $5 : $4 ) + $13)
	$9 = [1]
	$13 = ($13 + [1])
	if ( CALL isdigit(*($4)) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	CALL $114(($16 + [224]), ($16 + [288]))
	$5 = (($16 + [224]) | [1])
	$13 = [0]
	$8 = ($16 + [232])
	
.LOOP $label$25:
	$4 = ($4 & [1])
	$4 = *($16 + [224])
	if ( ((uint_32)$13 >= (uint_32)( *($16 + [228]) ? uint_32($4 >> [1]) : $4 )) ){ goto $label$24 }
	$4 = (( *($8) ? $5 : $4 ) + $13)
	$9 = [1]
	$13 = ($13 + [1])
	if ( CALL isdigit(*($4)) ){ goto $label$25 }
	goto $label$23 
	
.LABEL $label$24
	CALL $114(($16 + [208]), ($16 + [272]))
	$8 = (($16 + [208]) | [1])
	$9 = [0]
	$7 = ($16 + [216])
	$13 = [0]
	
.LOOP $label$27:
	$5 = ($4 & [1])
	$4 = *($16 + [208])
	if ( ((uint_32)$13 >= (uint_32)( *($16 + [212]) ? uint_32($4 >> [1]) : $5 )) ){ goto $label$26 }
	$4 = (( *($7) ? $8 : $5 ) + $13)
	$13 = ($13 + [1])
	if ( CALL isdigit(*($4)) ){ goto $label$27 }
	$9 = [1]
	$4 = *($16 + [208])
	
.LABEL $label$26
	if ( (($4 & [1]) == 0) ){ goto $label$23 }
	CALL $104(*(($16 + [216])))
	
.LABEL $label$23
	if ( ((*($16 + [224]) & [1]) == 0) ){ goto $label$20 }
	CALL $104(*(($16 + [232])))
	
.LABEL $label$20
	if ( ((*($16 + [240]) & [1]) == 0) ){ goto $label$16 }
	CALL $104(*(($16 + [248])))
	
.LABEL $label$16
	if ( ((*($16 + [256]) & [1]) == 0) ){ goto $label$28 }
	CALL $104(*(($16 + [264])))
	
.LABEL $label$28
	if ( ($9 == 0) ){ goto $label$30 }
	CALL prints([64])
	CALL prints([1424])
	CALL prints([112])
	CALL printi((int_64)121)
	CALL prints([112])
	CALL prints([1904])
	goto $label$29 
	
.LABEL $label$30
	$12 = (int_64)0
	$13 = ($13 & [1])
	$13 = *($16 + [304])
	if ( ((int_32)( *($16 + [308]) ? uint_32($13 >> [1]) : $13 ) != (int_32)[12]) ){ goto $label$31 }
	$13 = ( *($16 + [312]) ? (($16 + [304]) | [1]) : $13 )
	$4 = [-1]
	
.LOOP $label$32:
	$9 = ($13 + $4)
	$5 = ($4 + [1])
	$4 = $5
	if ( *(($9 + [1])) ){ goto $label$32 }
	$14 = (CASTING uint_64)(uint_32 $5)
	$2 = (int_64)0
	$10 = (int_64)59
	$11 = (int_64)0
	
.LOOP $label$33:
	$12 = (int_64)0
	if ( ((uint_64)$2 >= (uint_64)$14) ){ goto $label$34 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$36 }
	$4 = ($4 + [165])
	goto $label$35 
	
.LABEL $label$36
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$35
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$34
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$38 }
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	goto $label$37 
	
.LABEL $label$38
	$12 = ((int_64)$12 & (int_64)15)
	
.LABEL $label$37
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$33 }
	$12 = ( $11 ? (int_64)0 : CALL is_account($11) )
	
.LABEL $label$31
	$11 = CALL atoll(( *($16 + [344]) ? (($16 + [336]) | [1]) : (*($16 + [336]) & [1]) ))
	*($16 + [200]) = CALL atoll(( *($16 + [328]) ? (($16 + [320]) | [1]) : (*($16 + [320]) & [1]) ))
	*($16 + [192]) = CALL atoll(( *($16 + [296]) ? (($16 + [288]) | [1]) : (*($16 + [288]) & [1]) ))
	CALL atoll(( *($16 + [280]) ? (($16 + [272]) | [1]) : (*($16 + [272]) & [1]) ))
	if ( ((uint_64)((int_64)*($16 + [192]) + (int_64)-2) > (uint_64)(int_64)98) ){ goto $label$41 }
	if ( ((int_64)$11 == (int_64)1) ){ goto $label$42 }
	if ( ((int_64)$11 != (int_64)10) ){ goto $label$41 }
	
.LABEL $label$42
	CALL _ZN11dbetonedice14quantity_judgeERKN5eosio5assetEy($3, $11)
	*($16 + [184]) = ($0 + [8])
	CALL prints([64])
	CALL prints([1424])
	CALL prints([112])
	CALL printi((int_64)155)
	CALL prints([112])
	CALL prints([2176])
	CALL printui(*($16 + [200]))
	CALL prints([144])
	CALL $63(($16 + [384]), ($16 + [184]), ($16 + [200]))
	$4 = [0]
	$13 = [0]
	$9 = *($16 + [388])
	if ( ($9 == 0) ){ goto $label$43 }
	$13 = ( $9 ? [0] : ((int_64)*($16 + [200]) == (int_64)*($9 + [24])) )
	
.LABEL $label$43
	CALL eosio_assert(($13 == 0), [2192])
	$2 = *($16 + [200])
	*($16 + [24]) = ((int_64)((int_64)((int_64)((int_64)(uint_64)$2 >> (uint_64)(int_64)20) & (int_64)16777215) * (int_64)((int_64)$2 & (int_64)1048575)) + (int_64)(uint_64)$2 >> (uint_64)(int_64)38)) + (int_64)(CASTING int_64)(int_32 ((int_32)CALL tapos_block_num() * (int_32)CALL $fimport$36())))
	CALL sha512(($16 + [24]), [4], ($16 + [384]))
	$5 = *($16 + [384])
	*($16 + [160]) = $5
	*($16 + [162]) = *($16 + [386])
	*($16 + [164]) = *($16 + [388])
	*($16 + [166]) = *($16 + [390])
	*($16 + [168]) = *($16 + [392])
	*($16 + [170]) = *($16 + [394])
	*($16 + [172]) = *($16 + [396])
	*($16 + [174]) = *($16 + [398])
	*($16 + [176]) = *($16 + [400])
	*($16 + [178]) = *($16 + [402])
	*($16 + [144]) = (int_64)0
	*($16 + [152]) = *($3 + [8])
	CALL eosio_assert([1], [976])
	$2 = (uint_64)*($16 + [152]) >> (uint_64)(int_64)8)
	
.LOOP $label$44:
	$13 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$40 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$45 }
	
.LOOP $label$46:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$40 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$46 }
	
.LABEL $label$45
	$9 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$44 }
	goto $label$39 
	
.LABEL $label$41
	CALL prints([64])
	CALL prints([1424])
	CALL prints([112])
	CALL printi((int_64)145)
	CALL prints([112])
	CALL prints([2048])
	goto $label$29 
	
.LABEL $label$40
	$9 = [0]
	
.LABEL $label$39
	CALL eosio_assert($9, [1040])
	*($16 + [144]) = ((uint_64)((uint_64)((uint_64)((int_64)*($3) * (int_64)987000) / (uint_64)$11) / (uint_64)((int_64)*($16 + [192]) + (int_64)-1)) / (uint_64)(int_64)10000)
	*($16 + [128]) = (int_64)0
	*($16 + [136]) = *(($3 + [8]))
	CALL eosio_assert([1], [976])
	$2 = (uint_64)*($16 + [136]) >> (uint_64)(int_64)8)
	
.LOOP $label$49:
	$4 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$48 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$50 }
	
.LOOP $label$51:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$48 }
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$51 }
	
.LABEL $label$50
	$9 = [1]
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$49 }
	goto $label$47 
	
.LABEL $label$48
	$9 = [0]
	
.LABEL $label$47
	CALL eosio_assert($9, [1040])
	*($16 + [128]) = ((uint_64)*($3) / (uint_64)$11)
	CALL prints([64])
	CALL prints([1424])
	CALL prints([112])
	CALL printi((int_64)181)
	CALL prints([112])
	CALL prints([2224])
	CALL $60(($16 + [128]))
	CALL prints([2256])
	CALL $60(($16 + [144]))
	CALL prints([144])
	*($16 + [112]) = (int_64)0
	*($16 + [120]) = *(($3 + [8]))
	CALL eosio_assert([1], [976])
	$2 = (uint_64)*($16 + [120]) >> (uint_64)(int_64)8)
	
.LOOP $label$53:
	$13 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$52 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$54 }
	
.LOOP $label$55:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$52 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$55 }
	
.LABEL $label$54
	$13 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$53 }
	
.LABEL $label$52
	CALL eosio_assert($13, [1040])
	if ( ((int_64)$11 == (int_64)10) ){ goto $label$57 }
	if ( ((int_64)$11 != (int_64)1) ){ goto $label$56 }
	
.LABEL $label$57
	$9 = [0]
	
.LOOP $label$58:
	*($16 + [24]) = (CASTING uint_64)(uint_32 (((uint_32)((($9 + ($5 & [65535])) + (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))) + [99]) % (uint_32)[100]) + [1]))
	*(($5 = (($16 + [384]) + [8]))) = *(($3 + [8]))
	*($16 + [384]) = (int_64)0
	CALL eosio_assert([1], [976])
	$2 = (uint_64)*($5) >> (uint_64)(int_64)8)
	$13 = [0]
	
.LOOP $label$60:
	$4 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$59 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$61 }
	
.LOOP $label$62:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$59 }
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$62 }
	
.LABEL $label$61
	$4 = [1]
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$60 }
	
.LABEL $label$59
	CALL eosio_assert($4, [1040])
	$10 = *($16 + [192])
	$2 = *($16 + [24])
	if ( ((uint_64)$2 >= (uint_64)$10) ){ goto $label$63 }
	CALL prints([64])
	CALL prints([1424])
	CALL prints([112])
	CALL printi((int_64)202)
	CALL prints([112])
	CALL prints([2304])
	$13 = (($16 + [144]) + [8])
	CALL eosio_assert(((int_64)*($13) == (int_64)*((($16 + [112]) + [8]))), [2320])
	$2 = ((int_64)*($16 + [112]) + (int_64)*($16 + [144]))
	*($16 + [112]) = $2
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [2368])
	CALL eosio_assert(((int_64)*($16 + [112]) < (int_64)4611686018427387904), [2400])
	*($5) = *($13)
	*($16 + [384]) = *($16 + [144])
	$2 = *($16 + [24])
	$10 = *($16 + [192])
	
.LABEL $label$63
	CALL _ZN11dbetonedice8dbetdice6recordEyyyRKN5eosio5assetES4_yy($0, $1, $12, *($16 + [200]), ($16 + [128]), ($16 + [384]), $10, $2)
	CALL prints([64])
	CALL prints([1424])
	CALL prints([112])
	CALL printi((int_64)211)
	CALL prints([112])
	CALL prints([2432])
	CALL printn($1)
	CALL prints([2448])
	CALL printn($12)
	CALL prints([2464])
	CALL $65(($16 + [200]), [2480], $3, [2496], ($16 + [112]), [2512], ($16 + [128]), [2544], ($16 + [384]), [2560], ($16 + [192]), [2592], ($16 + [24]), [144])
	$9 = ($9 + [1])
	if ( ((uint_64)(CASTING uint_64)(uint_32 $9) >= (uint_64)$11) ){ goto $label$56 }
	$5 = *((($16 + [160]) + ($9 << [1])))
	goto $label$58 
	
.LABEL $label$56
	*($16 + [96]) = (int_64)0
	*($16 + [104]) = *(($3 + [8]))
	CALL eosio_assert([1], [976])
	$2 = (uint_64)*($16 + [104]) >> (uint_64)(int_64)8)
	$13 = [0]
	
.LOOP $label$66:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$65 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$67 }
	
.LOOP $label$68:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$65 }
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$68 }
	
.LABEL $label$67
	$4 = [1]
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$66 }
	goto $label$64 
	
.LABEL $label$65
	$4 = [0]
	
.LABEL $label$64
	CALL eosio_assert($4, [1040])
	$2 = *($3)
	$10 = *(($3 + [8]))
	CALL eosio_assert(((int_64)*((($16 + [112]) + [8])) == (int_64)$10), [2624])
	$2 = (int_64)
	CALL eosio_assert(((int_64)$2($2 - *($16 + [112]))) > (int_64)-4611686018427387904), [2672])
	CALL eosio_assert(((int_64)$2 < (int_64)4611686018427387904), [2704])
	*((($16 + [96]) + [8])) = $10
	*($16 + [96]) = $2
	CALL prints([64])
	CALL prints([1424])
	CALL prints([112])
	CALL printi((int_64)238)
	CALL prints([112])
	CALL prints([2736])
	CALL printi(*($16 + [96]))
	CALL prints([144])
	CALL _ZN11dbetonedice8dbetdice8overfaceEyRKN5eosio5assetES4_($0, $1, $3, ($16 + [96]))
	if ( (int_64)($12 == 0) ){ goto $label$69 }
	if ( ((int_64)$12 == (int_64)$1) ){ goto $label$69 }
	CALL prints([64])
	CALL prints([1424])
	CALL prints([112])
	CALL printi((int_64)247)
	CALL prints([112])
	CALL prints([2768])
	CALL printn($12)
	CALL prints([144])
	*($16 + [392]) = (int_64)1398362884
	*($16 + [384]) = (int_64)0
	CALL eosio_assert([1], [976])
	$2 = (uint_64)*($16 + [392]) >> (uint_64)(int_64)8)
	$13 = [0]
	
.LOOP $label$72:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$71 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$73 }
	
.LOOP $label$74:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$71 }
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$74 }
	
.LABEL $label$73
	$4 = [1]
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$72 }
	goto $label$70 
	
.LABEL $label$71
	$4 = [0]
	
.LABEL $label$70
	CALL eosio_assert($4, [1040])
	CALL _ZN11dbetonedice14inviter_chargeERKN5eosio5assetERS1_y($3, ($16 + [384]), $11)
	*($16 + [8]) = $1
	$2 = CALL current_time()
	CALL $68(($16 + [64]), ($16 + [8]))
	$13 = CALL $110(($16 + [64]), [0], [2800])
	$4 = ($13 + [8])
	*((($16 + [80]) + [8])) = *($4)
	*($16 + [80]) = *($13)
	*($13) = [0]
	*(($13 + [4])) = [0]
	*($4) = [0]
	$13 = CALL $109(($16 + [80]), [2880])
	$4 = ($13 + [8])
	*((($16 + [24]) + [8])) = *($4)
	*($16 + [24]) = *($13)
	*($13) = [0]
	*(($13 + [4])) = [0]
	*($4) = [0]
	CALL _ZN11dbetonedice8dbetdice10transfertoEyRKN5eosio5assetERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEo($0, $12, ($16 + [384]), ($16 + [24]), ((int_64)((int_64)((uint_64)$2 / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)$1), $12)
	if ( ((*($16 + [24]) & [1]) == 0) ){ goto $label$75 }
	CALL $104(*($16 + [32]))
	
.LABEL $label$75
	if ( ((*($16 + [80]) & [1]) == 0) ){ goto $label$76 }
	CALL $104(*($16 + [88]))
	
.LABEL $label$76
	if ( ((*($16 + [64]) & [1]) == 0) ){ goto $label$77 }
	CALL $104(*($16 + [72]))
	
.LABEL $label$77
	CALL eosio_assert(((int_64)*((($16 + [384]) + [8])) == (int_64)*((($16 + [96]) + [8]))), [2624])
	$2 = (int_64)
	*($16 + [96]) = $2(*($16 + [96]) - *($16 + [384])))
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [2672])
	CALL eosio_assert(((int_64)*($16 + [96]) < (int_64)4611686018427387904), [2704])
	CALL prints([64])
	CALL prints([1424])
	CALL prints([112])
	CALL printi((int_64)262)
	CALL prints([112])
	CALL prints([2736])
	CALL printi(*($16 + [96]))
	CALL prints([144])
	
.LABEL $label$69
	$6 = *($0)
	$2 = (int_64)0
	$12 = (int_64)59
	$13 = [832]
	$11 = (int_64)0
	
.LOOP $label$78:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$83 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$82 }
	$4 = ($4 + [165])
	goto $label$81 
	
.LABEL $label$83
	$10 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$80 }
	goto $label$79 
	
.LABEL $label$82
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$81
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$80
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$79
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$78 }
	$2 = (int_64)0
	$10 = (int_64)59
	$13 = [720]
	$14 = (int_64)0
	
.LOOP $label$84:
	$12 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$85 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$87 }
	$4 = ($4 + [165])
	goto $label$86 
	
.LABEL $label$87
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$86
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$85
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$14 = ((int_64)$12 | (int_64)$14)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$84 }
	$2 = (int_64)0
	$12 = (int_64)59
	$13 = [2896]
	$15 = (int_64)0
	
.LOOP $label$88:
	if ( ((uint_64)$2 > (uint_64)(int_64)9) ){ goto $label$93 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$92 }
	$4 = ($4 + [165])
	goto $label$91 
	
.LABEL $label$93
	$10 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$90 }
	goto $label$89 
	
.LABEL $label$92
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$91
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$90
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$89
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$15 = ((int_64)$10 | (int_64)$15)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$88 }
	*((($16 + [24]) + [12])) = *($16 + [100])
	*((($16 + [24]) + [20])) = *((($16 + [96]) + [12]))
	*(($9 = (($16 + [24]) + [16]))) = *((($16 + [96]) + [8]))
	*($16 + [24]) = $6
	*($16 + [32]) = *($16 + [96])
	*($16 + [384]) = $14
	*($16 + [392]) = $15
	*($16 + [400]) = [0]
	*(($4 = (($16 + [384]) + [20]))) = [0]
	*(($5 = (($16 + [384]) + [24]))) = [0]
	*(($13 = CALL $103([16]))) = $6
	*($13 + [8]) = $11
	*(($8 = ($16 + [416]))) = [0]
	$7 = ($13 + [16])
	*($5) = $7
	*($4) = $7
	*($16 + [400]) = $13
	*($16 + [412]) = [0]
	*(($16 + [420])) = [0]
	CALL $32(($16 + [412]), [24])
	$13 = *($16 + [412])
	$4 = (*($8) - $13)
	CALL eosio_assert(((int_32)$4 > (int_32)[7]), [928])
	CALL memcpy($13, ($16 + [24]), [8])
	CALL eosio_assert(((int_32)($4 + [-8]) > (int_32)[7]), [928])
	CALL memcpy(($13 + [8]), (($16 + [24]) + [8]), [8])
	CALL eosio_assert(((int_32)($4 + [-16]) > (int_32)[7]), [928])
	CALL memcpy(($13 + [16]), $9, [8])
	CALL $70(($16 + [80]), ($16 + [384]))
	$13 = *($16 + [80])
	CALL send_inline($13, (*($16 + [84]) - $13))
	$13 = *($16 + [80])
	if ( ($13 == 0) ){ goto $label$94 }
	*($16 + [84]) = $13
	CALL $104($13)
	
.LABEL $label$94
	$13 = *($16 + [412])
	if ( ($13 == 0) ){ goto $label$95 }
	*(($16 + [416])) = $13
	CALL $104($13)
	
.LABEL $label$95
	$13 = *($16 + [400])
	if ( ($13 == 0) ){ goto $label$96 }
	*(($16 + [404])) = $13
	CALL $104($13)
	
.LABEL $label$96
	if ( ((int_64)*($16 + [96]) < (int_64)1) ){ goto $label$97 }
	$2 = (int_64)0
	$10 = (int_64)59
	$13 = [720]
	$11 = (int_64)0
	
.LOOP $label$98:
	$12 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$99 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$101 }
	$4 = ($4 + [165])
	goto $label$100 
	
.LABEL $label$101
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$100
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$99
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$98 }
	*(($16 + [392])) = [0]
	*($16 + [384]) = (int_64)0
	$13 = CALL strlen([48])
	if ( ((uint_32)$13 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$13 >= (uint_32)[11]) ){ goto $label$104 }
	*($16 + [384]) = ($13 << [1])
	$4 = (($16 + [384]) | [1])
	if ( $13 ){ goto $label$103 }
	goto $label$102 
	
.LABEL $label$104
	$9 = (($13 + [16]) & [-16])
	$4 = CALL $103($9)
	*($16 + [384]) = ($9 | [1])
	*($16 + [392]) = $4
	*($16 + [388]) = $13
	
.LABEL $label$103
	CALL memcpy($4, [48], $13)
	
.LABEL $label$102
	*(($4 + $13)) = [0]
	$2 = (int_64)0
	$10 = (int_64)59
	$13 = [720]
	$14 = (int_64)0
	
.LOOP $label$105:
	$12 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$106 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$108 }
	$4 = ($4 + [165])
	goto $label$107 
	
.LABEL $label$108
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$107
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$106
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$14 = ((int_64)$12 | (int_64)$14)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$105 }
	CALL _ZN11dbetonedice8dbetdice10transfertoEyRKN5eosio5assetERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEo($0, $11, ($16 + [96]), ($16 + [384]), ((int_64)((int_64)((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)$14), (int_64)0)
	if ( ((*($16 + [384]) & [1]) == 0) ){ goto $label$97 }
	CALL $104(*($16 + [392]))
	
.LABEL $label$97
	CALL prints([64])
	CALL prints([1424])
	CALL prints([112])
	CALL printi((int_64)285)
	CALL prints([112])
	CALL prints([2912])
	$2 = *(($3 + [8]))
	if ( ((int_64)$2 != (int_64)1397703940) ){ goto $label$110 }
	CALL prints([64])
	CALL prints([1424])
	CALL prints([112])
	CALL printi((int_64)288)
	CALL prints([112])
	CALL prints([2944])
	$14 = *($0)
	$2 = (int_64)0
	$12 = (int_64)59
	$13 = [2992]
	$11 = (int_64)0
	
.LOOP $label$111:
	if ( ((uint_64)$2 > (uint_64)(int_64)8) ){ goto $label$116 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$115 }
	$4 = ($4 + [165])
	goto $label$114 
	
.LABEL $label$116
	$10 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$113 }
	goto $label$112 
	
.LABEL $label$115
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$114
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$113
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$112
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$111 }
	$2 = (int_64)0
	*($16 + [80]) = (int_64)0
	*($16 + [88]) = ((int_64)$11 + (int_64)$14)
	$11 = *($16 + [80])
	$12 = ((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) | (int_64)((int_64)$1 << (int_64)32))
	$10 = ((int_64)$12 + (int_64)$11)
	*($16 + [80]) = $10
	*($16 + [88]) = ((int_64)*($16 + [88]) + (int_64)( (int_64)1 ? (CASTING uint_64)(uint_32 (uint_64)($10 <= $12)) : (uint_64)($10 <= $11) ))
	$10 = CALL current_time()
	*(($16 + [412])) = [0]
	*(($16 + [416])) = [0]
	*($16 + [396]) = [0]
	*($16 + [400]) = [0]
	*($16 + [404]) = [0]
	*($16 + [408]) = [0]
	*($16 + [384]) = ((CASTING uint_32)(uint_64 ((uint_64)$10 / (uint_64)(int_64)1000000)) + [60])
	*($16 + [420]) = [0]
	*(($16 + [424])) = [0]
	*(($16 + [428])) = [0]
	*($16 + [432]) = [0]
	*(($16 + [436])) = [0]
	*(($16 + [440])) = [0]
	$9 = ($16 + [420])
	$14 = *($0)
	$12 = (int_64)59
	$13 = [832]
	$11 = (int_64)0
	
.LOOP $label$117:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$122 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$121 }
	$4 = ($4 + [165])
	goto $label$120 
	
.LABEL $label$122
	$10 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$119 }
	goto $label$118 
	
.LABEL $label$121
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$120
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$119
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$118
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$117 }
	*($16 + [72]) = $11
	*($16 + [64]) = $14
	$2 = (int_64)0
	$10 = (int_64)59
	$13 = [3008]
	$11 = (int_64)0
	
.LOOP $label$123:
	$12 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$124 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$126 }
	$4 = ($4 + [165])
	goto $label$125 
	
.LABEL $label$126
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$125
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$124
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$123 }
	*($16 + [8]) = $11
	$2 = (int_64)0
	$12 = (int_64)59
	$13 = [2992]
	$11 = (int_64)0
	
.LOOP $label$127:
	if ( ((uint_64)$2 > (uint_64)(int_64)8) ){ goto $label$132 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$131 }
	$4 = ($4 + [165])
	goto $label$130 
	
.LABEL $label$132
	$10 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$129 }
	goto $label$128 
	
.LABEL $label$131
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$130
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$129
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$128
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$127 }
	*($16 + [56]) = $11
	$2 = (int_64)0
	$10 = (int_64)59
	$13 = [32]
	$11 = (int_64)0
	
.LOOP $label$133:
	$12 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$134 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$136 }
	$4 = ($4 + [165])
	goto $label$135 
	
.LABEL $label$136
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$135
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$134
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$133 }
	*($16 + [24]) = $11
	*($16 + [32]) = $1
	*($16 + [40]) = *($3)
	CALL $71($9, ($16 + [64]), ($16 + [8]), ($16 + [56]), ($16 + [24]))
	$2 = *($0)
	*(($16 + [404])) = [0]
	CALL $35(($16 + [24]), ($16 + [384]))
	$13 = *($16 + [24])
	CALL send_deferred(($16 + [80]), $2, $13, (*($16 + [28]) - $13), [0])
	$13 = *($16 + [24])
	if ( ($13 == 0) ){ goto $label$137 }
	*($16 + [28]) = $13
	CALL $104($13)
	
.LABEL $label$137
	CALL $37(($16 + [384]))
	goto $label$109 
	
.LABEL $label$110
	CALL prints([64])
	CALL prints([1424])
	CALL prints([112])
	if ( ((int_64)$2 != (int_64)293455873288) ){ goto $label$138 }
	CALL printi((int_64)304)
	CALL prints([112])
	CALL prints([3024])
	$14 = *($0)
	$2 = (int_64)0
	$12 = (int_64)59
	$13 = [2992]
	$11 = (int_64)0
	
.LOOP $label$139:
	if ( ((uint_64)$2 > (uint_64)(int_64)8) ){ goto $label$144 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$143 }
	$4 = ($4 + [165])
	goto $label$142 
	
.LABEL $label$144
	$10 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$141 }
	goto $label$140 
	
.LABEL $label$143
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$142
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$141
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$140
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$139 }
	$2 = (int_64)0
	*($16 + [80]) = (int_64)0
	*($16 + [88]) = ((int_64)$11 + (int_64)$14)
	$11 = *($16 + [80])
	$12 = ((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) | (int_64)((int_64)$1 << (int_64)32))
	$10 = ((int_64)$12 + (int_64)$11)
	*($16 + [80]) = $10
	*($16 + [88]) = ((int_64)*($16 + [88]) + (int_64)( (int_64)1 ? (CASTING uint_64)(uint_32 (uint_64)($10 <= $12)) : (uint_64)($10 <= $11) ))
	$10 = CALL current_time()
	*(($16 + [412])) = [0]
	*(($16 + [416])) = [0]
	*($16 + [396]) = [0]
	*($16 + [400]) = [0]
	*($16 + [404]) = [0]
	*($16 + [408]) = [0]
	*($16 + [384]) = ((CASTING uint_32)(uint_64 ((uint_64)$10 / (uint_64)(int_64)1000000)) + [60])
	*($16 + [420]) = [0]
	*(($16 + [424])) = [0]
	*(($16 + [428])) = [0]
	*($16 + [432]) = [0]
	*(($16 + [436])) = [0]
	*(($16 + [440])) = [0]
	$9 = ($16 + [420])
	$14 = *($0)
	$12 = (int_64)59
	$13 = [832]
	$11 = (int_64)0
	
.LOOP $label$145:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$150 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$149 }
	$4 = ($4 + [165])
	goto $label$148 
	
.LABEL $label$150
	$10 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$147 }
	goto $label$146 
	
.LABEL $label$149
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$148
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$147
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$146
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$145 }
	*($16 + [72]) = $11
	*($16 + [64]) = $14
	$2 = (int_64)0
	$10 = (int_64)59
	$13 = [3008]
	$11 = (int_64)0
	
.LOOP $label$151:
	$12 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$152 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$154 }
	$4 = ($4 + [165])
	goto $label$153 
	
.LABEL $label$154
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$153
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$152
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$151 }
	*($16 + [8]) = $11
	$2 = (int_64)0
	$12 = (int_64)59
	$13 = [2992]
	$11 = (int_64)0
	
.LOOP $label$155:
	if ( ((uint_64)$2 > (uint_64)(int_64)8) ){ goto $label$160 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$159 }
	$4 = ($4 + [165])
	goto $label$158 
	
.LABEL $label$160
	$10 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$157 }
	goto $label$156 
	
.LABEL $label$159
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$158
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$157
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$156
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$155 }
	*($16 + [56]) = $11
	$2 = (int_64)0
	$10 = (int_64)59
	$13 = [32]
	$11 = (int_64)0
	
.LOOP $label$161:
	$12 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$162 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$164 }
	$4 = ($4 + [165])
	goto $label$163 
	
.LABEL $label$164
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$163
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$162
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$161 }
	*($16 + [24]) = $11
	*($16 + [32]) = $1
	*($16 + [40]) = ((uint_32)*($3) / (uint_32)[20000])
	CALL $71($9, ($16 + [64]), ($16 + [8]), ($16 + [56]), ($16 + [24]))
	$2 = *($0)
	*(($16 + [404])) = [0]
	CALL $35(($16 + [24]), ($16 + [384]))
	$13 = *($16 + [24])
	CALL send_deferred(($16 + [80]), $2, $13, (*($16 + [28]) - $13), [0])
	$13 = *($16 + [24])
	if ( ($13 == 0) ){ goto $label$165 }
	*($16 + [28]) = $13
	CALL $104($13)
	
.LABEL $label$165
	CALL $37(($16 + [384]))
	goto $label$109 
	
.LABEL $label$138
	CALL printi((int_64)320)
	CALL prints([112])
	CALL prints([3088])
	
.LABEL $label$109
	$14 = *($0)
	$2 = (int_64)0
	$12 = (int_64)59
	$13 = [576]
	$11 = (int_64)0
	
.LOOP $label$166:
	if ( ((uint_64)$2 > (uint_64)(int_64)4) ){ goto $label$171 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$170 }
	$4 = ($4 + [165])
	goto $label$169 
	
.LABEL $label$171
	$10 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$168 }
	goto $label$167 
	
.LABEL $label$170
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$169
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$168
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$167
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$166 }
	$2 = (int_64)0
	*($16 + [80]) = (int_64)0
	*($16 + [88]) = ((int_64)$11 + (int_64)$14)
	$11 = *($16 + [80])
	$12 = ((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) | (int_64)((int_64)$1 << (int_64)32))
	$10 = ((int_64)$12 + (int_64)$11)
	*($16 + [80]) = $10
	*($16 + [88]) = ((int_64)*($16 + [88]) + (int_64)( (int_64)1 ? (CASTING uint_64)(uint_32 (uint_64)($10 <= $12)) : (uint_64)($10 <= $11) ))
	$10 = CALL current_time()
	*(($16 + [412])) = [0]
	*(($16 + [416])) = [0]
	*($16 + [396]) = [0]
	*($16 + [400]) = [0]
	*($16 + [404]) = [0]
	*($16 + [408]) = [0]
	*($16 + [384]) = ((CASTING uint_32)(uint_64 ((uint_64)$10 / (uint_64)(int_64)1000000)) + [60])
	*($16 + [420]) = [0]
	*(($16 + [424])) = [0]
	*(($16 + [428])) = [0]
	*($16 + [432]) = [0]
	*(($16 + [436])) = [0]
	*(($16 + [440])) = [0]
	$9 = ($16 + [420])
	$14 = *($0)
	$12 = (int_64)59
	$13 = [832]
	$11 = (int_64)0
	
.LOOP $label$172:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$177 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$176 }
	$4 = ($4 + [165])
	goto $label$175 
	
.LABEL $label$177
	$10 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$174 }
	goto $label$173 
	
.LABEL $label$176
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$175
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$174
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$173
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$172 }
	*($16 + [72]) = $11
	*($16 + [64]) = $14
	$2 = (int_64)0
	$12 = (int_64)59
	$13 = [576]
	$11 = (int_64)0
	
.LOOP $label$178:
	if ( ((uint_64)$2 > (uint_64)(int_64)4) ){ goto $label$183 }
	$4 = *($13)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$182 }
	$4 = ($4 + [165])
	goto $label$181 
	
.LABEL $label$183
	$10 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$180 }
	goto $label$179 
	
.LABEL $label$182
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$181
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$180
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$179
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$178 }
	*($16 + [56]) = $11
	*(($16 + [16])) = [0]
	*($16 + [8]) = (int_64)0
	$13 = CALL strlen([48])
	if ( ((uint_32)$13 >= (uint_32)[-16]) ){ goto $label$13 }
	if ( ((uint_32)$13 >= (uint_32)[11]) ){ goto $label$186 }
	*($16 + [8]) = ($13 << [1])
	$4 = (($16 + [8]) | [1])
	if ( $13 ){ goto $label$185 }
	goto $label$184 
	
.LABEL $label$186
	$3 = (($13 + [16]) & [-16])
	$4 = CALL $103($3)
	*($16 + [8]) = ($3 | [1])
	*($16 + [16]) = $4
	*($16 + [12]) = $13
	
.LABEL $label$185
	CALL memcpy($4, [48], $13)
	
.LABEL $label$184
	*(($4 + $13)) = [0]
	*(($16 + [44])) = *($16 + [12])
	*($16 + [32]) = $1
	$13 = ($16 + [16])
	*(($16 + [48])) = *($13)
	$2 = *($0)
	*($16 + [24]) = $2
	*($16 + [40]) = *($16 + [8])
	*($16 + [8]) = [0]
	*($16 + [12]) = [0]
	*($13) = [0]
	$13 = (($16 + [384]) + [40])
	$4 = *($13)
	if ( ((uint_32)$4 >= (uint_32)*(($16 + [428]))) ){ goto $label$188 }
	CALL $44($4, ($16 + [64]), $2, *($16 + [56]), ($16 + [24]))
	*($13) = (*($13) + [40])
	goto $label$187 
	
.LABEL $label$188
	CALL $72($9, ($16 + [64]), $0, ($16 + [56]), ($16 + [24]))
	
.LABEL $label$187
	if ( ((*(($16 + [40])) & [1]) == 0) ){ goto $label$189 }
	CALL $104(*(($16 + [48])))
	
.LABEL $label$189
	if ( ((*($16 + [8]) & [1]) == 0) ){ goto $label$190 }
	CALL $104(*(($16 + [16])))
	
.LABEL $label$190
	*(($16 + [404])) = [0]
	$2 = *($0)
	CALL $35(($16 + [24]), ($16 + [384]))
	$13 = *($16 + [24])
	CALL send_deferred(($16 + [80]), $2, $13, (*($16 + [28]) - $13), [0])
	$13 = *($16 + [24])
	if ( ($13 == 0) ){ goto $label$191 }
	*($16 + [28]) = $13
	CALL $104($13)
	
.LABEL $label$191
	if ( ((int_64)*($16 + [112]) < (int_64)1) ){ goto $label$192 }
	*(($16 + [32])) = [0]
	*($16 + [24]) = (int_64)0
	$13 = CALL strlen([48])
	if ( ((uint_32)$13 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$13 >= (uint_32)[11]) ){ goto $label$195 }
	*($16 + [24]) = ($13 << [1])
	$4 = (($16 + [24]) | [1])
	if ( $13 ){ goto $label$194 }
	goto $label$193 
	
.LABEL $label$195
	$9 = (($13 + [16]) & [-16])
	$4 = CALL $103($9)
	*($16 + [24]) = ($9 | [1])
	*($16 + [32]) = $4
	*($16 + [28]) = $13
	
.LABEL $label$194
	CALL memcpy($4, [48], $13)
	
.LABEL $label$193
	*(($4 + $13)) = [0]
	CALL _ZN11dbetonedice8dbetdice10transfertoEyRKN5eosio5assetERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEo($0, $1, ($16 + [112]), ($16 + [24]), ((int_64)*($16 + [200]) + (int_64)((int_64)((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000) & (int_64)4294967295)), (int_64)0)
	if ( ((*($16 + [24]) & [1]) == 0) ){ goto $label$192 }
	CALL $104(*($16 + [32]))
	
.LABEL $label$192
	CALL prints([64])
	CALL prints([1424])
	CALL prints([112])
	CALL printi((int_64)349)
	CALL prints([112])
	CALL prints([3152])
	CALL $37(($16 + [384]))
	
.LABEL $label$29
	if ( ((*($16 + [272]) & [1]) == 0) ){ goto $label$196 }
	CALL $104(*($16 + [280]))
	
.LABEL $label$196
	if ( ((*($16 + [288]) & [1]) == 0) ){ goto $label$197 }
	CALL $104(*($16 + [296]))
	
.LABEL $label$197
	if ( ((*($16 + [304]) & [1]) == 0) ){ goto $label$198 }
	CALL $104(*($16 + [312]))
	
.LABEL $label$198
	if ( ((*($16 + [320]) & [1]) == 0) ){ goto $label$199 }
	CALL $104(*($16 + [328]))
	
.LABEL $label$199
	if ( ((*($16 + [336]) & [1]) == 0) ){ goto $label$200 }
	CALL $104(*($16 + [344]))
	
.LABEL $label$200
	if ( ((*($16 + [352]) & [1]) == 0) ){ goto $label$201 }
	CALL $104(*($16 + [360]))
	
.LABEL $label$201
	$9 = *($16 + [368])
	if ( ($9 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$13 = *($16 + [372])
	if ( ((int_32)$13 == (int_32)$9) ){ goto $label$203 }
	$4 = ([0] - $9)
	$13 = ($13 + [-12])
	
.LOOP $label$204:
	if ( ((*($13) & [1]) == 0) ){ goto $label$205 }
	CALL $104(*(($13 + [8])))
	
.LABEL $label$205
	$13 = ($13 + [-12])
	if ( ((int_32)($13 + $4) != (int_32)[-12]) ){ goto $label$204 }
	$13 = *($16 + [368])
	goto $label$202 
	
.LABEL $label$203
	$13 = $9
	
.LABEL $label$202
	*($16 + [372]) = $9
	CALL $104($13)
	
.LABEL $label$14
	*([0] + [4]) = ($16 + [448])
	return (unreachable)
	
.LABEL $label$13
	CALL $105(($16 + [8]))
	
.LABEL $label$12
	CALL $105(($16 + [384]))
	
.LABEL $label$11
	CALL $105(($16 + [24]))
	
.LABEL $label$6
	CALL $105(($16 + [384]))
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC _ZN11dbetonedice8dbetdice8maintainEN5eosio5assetE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	$4 = *($1 + [8])
	*(($6 + [32])) = [0]
	*($6 + [16]) = (int_64)-1
	*($6 + [24]) = (int_64)0
	$3 = *($0)
	*($6) = $3
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	*($6 + [8]) = $4)
	$0 = CALL db_find_i64($3, $4, (int_64)-5918304704032407552, $4)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $51($6, $0)
	CALL eosio_assert(((int_32)*($0 + [24]) == (int_32)$6), [752])
	CALL eosio_assert([1], [1072])
	CALL eosio_assert([1], [1120])
	$1 = CALL db_next_i64(*($0 + [28]), ($6 + [40]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	CALL $51($6, $1)
	
.LABEL $label$2
	CALL $52($6, $0)
	
.LABEL $label$1
	$2 = *($6 + [24])
	if ( ($2 == 0) ){ goto $label$3 }
	$5 = ($6 + [28])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$7 }
	CALL $104($1)
	
.LABEL $label$7
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($6 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $2
	
.LABEL $label$4
	*($5) = $2
	CALL $104($0)
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [48])
}

int_32 .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [688])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

void .FUNC _ZN11dbetonedice8dbetdice10unlockuserEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	CALL require_auth(*($0))
	$4 = *($2 + [8])
	*(($7 + [32])) = [0]
	*($7 + [16]) = (int_64)-1
	*($7 + [24]) = (int_64)0
	$5 = *($0)
	*($7) = $5
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	*($7 + [8]) = $4)
	$0 = CALL db_find_i64($5, $4, (int_64)-3020376800539705344, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $46($7, $0)
	CALL eosio_assert(((int_32)*($0 + [32]) == (int_32)$7), [752])
	CALL eosio_assert([1], [1072])
	CALL eosio_assert([1], [1120])
	$2 = CALL db_next_i64(*($0 + [36]), ($7 + [40]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	CALL $46($7, $2)
	
.LABEL $label$2
	CALL $47($7, $0)
	
.LABEL $label$1
	$3 = *($7 + [24])
	if ( ($3 == 0) ){ goto $label$3 }
	$6 = ($7 + [28])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $104($2)
	
.LABEL $label$7
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($7 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $3
	
.LABEL $label$4
	*($6) = $3
	CALL $104($0)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [80])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	CALL $50(($6 + [16]), $4, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	*(($1 = (($6 + [32]) + [8]))) = *((($6 + [16]) + [8]))
	*($6 + [32]) = *($6 + [16])
	*((($6 + [48]) + [8])) = *($1)
	*($6 + [48]) = *($6 + [32])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	$3 = *((($6 + [48]) + [8]))
	*((($6 + [64]) + [8])) = $3
	*(($6 + [8])) = $3
	$3 = *($6 + [48])
	*($6 + [64]) = $3
	*($6) = $3
	CALL void $1((int_32 $6), (int_32 $5))
	*([0] + [4]) = ($6 + [80])
	return [1]
}

void .FUNC _ZN11dbetonedice8dbetdice5candyEyyNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [144])
	*([0] + [4]) = $13
	if ( ((int_64)*($0) == (int_64)$1) ){ goto $label$3 }
	$8 = (int_64)0
	$12 = (int_64)59
	$7 = [720]
	$9 = (int_64)0
	
.LOOP $label$4:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$5 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$4 = ($4 + [165])
	goto $label$6 
	
.LABEL $label$7
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$5
	$7 = ($7 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$4 }
	if ( ((int_64)$9 != (int_64)$1) ){ goto $label$2 }
	
.LABEL $label$3
	CALL require_auth($1)
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [736])
	
.LABEL $label$1
	$5 = *(($0 + [72]))
	$11 = *(($0 + [76]))
	if ( ((int_32)$11 == (int_32)$5) ){ goto $label$8 }
	$7 = ($11 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$9:
	if ( ((int_64)*(*($7)) == (int_64)$2) ){ goto $label$8 }
	$11 = $7
	$4 = ($7 + [-24])
	$7 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	$6 = ($0 + [48])
	if ( ((int_32)$11 == (int_32)$5) ){ goto $label$12 }
	$7 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [8]) == (int_32)$6), [752])
	if ( $7 ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$12
	$7 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)5445032382844370944, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$11 }
	CALL eosio_assert(((int_32)*(CALL $33($6, $7) + [8]) == (int_32)$6), [752])
	goto $label$10 
	
.LABEL $label$11
	$1 = *($0)
	$8 = (int_64)0
	$10 = (int_64)59
	$7 = [816]
	$9 = (int_64)0
	
.LOOP $label$13:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$18 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$4 = ($4 + [165])
	goto $label$16 
	
.LABEL $label$18
	$12 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$14
	$7 = ($7 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$12 | (int_64)$9)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$13 }
	$8 = CALL current_time()
	*($13 + [136]) = ((int_64)$9 + (int_64)$1)
	*($13 + [128]) = ((int_64)((int_64)((uint_64)$8 / (uint_64)(int_64)1000000) & (int_64)4294967295) | (int_64)((int_64)$2 << (int_64)32))
	$8 = CALL current_time()
	*(($13 + [92])) = [0]
	*(($13 + [96])) = [0]
	*($13 + [76]) = [0]
	*($13 + [80]) = [0]
	*($13 + [84]) = [0]
	*($13 + [88]) = [0]
	*($13 + [64]) = ((CASTING uint_32)(uint_64 ((uint_64)$8 / (uint_64)(int_64)1000000)) + [60])
	*($13 + [100]) = [0]
	*(($13 + [104])) = [0]
	*(($13 + [108])) = [0]
	*($13 + [112]) = [0]
	*(($13 + [116])) = [0]
	*(($13 + [120])) = [0]
	$11 = ($13 + [100])
	$1 = *($0)
	$8 = (int_64)0
	$10 = (int_64)59
	$7 = [832]
	$9 = (int_64)0
	
.LOOP $label$19:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$24 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$4 = ($4 + [165])
	goto $label$22 
	
.LABEL $label$24
	$12 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$21
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$20
	$7 = ($7 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$12 | (int_64)$9)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$19 }
	*($13 + [56]) = $9
	*($13 + [48]) = $1
	$8 = (int_64)0
	$12 = (int_64)59
	$7 = [848]
	$9 = (int_64)0
	
.LOOP $label$25:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$26 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$4 = ($4 + [165])
	goto $label$27 
	
.LABEL $label$28
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$26
	$7 = ($7 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$25 }
	*($13 + [40]) = $9
	$8 = (int_64)0
	$10 = (int_64)59
	$7 = [816]
	$9 = (int_64)0
	
.LOOP $label$29:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$34 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$4 = ($4 + [165])
	goto $label$32 
	
.LABEL $label$34
	$12 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$33
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$32
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$31
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$30
	$7 = ($7 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$12 | (int_64)$9)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$29 }
	*($13 + [32]) = $9
	*($13 + [8]) = $2
	*($13) = $1
	CALL $114(($13 + [16]), $3)
	CALL $34($11, ($13 + [48]), ($13 + [40]), ($13 + [32]), $13)
	if ( ((*($13 + [16]) & [1]) == 0) ){ goto $label$35 }
	CALL $104(*(($13 + [24])))
	
.LABEL $label$35
	*(($13 + [84])) = [0]
	$8 = *($0)
	CALL $35($13, ($13 + [64]))
	$7 = *($13)
	CALL send_deferred(($13 + [128]), $8, $7, (*($13 + [4]) - $7), [0])
	$7 = *($13)
	if ( ($7 == 0) ){ goto $label$36 }
	*($13 + [4]) = $7
	CALL $104($7)
	
.LABEL $label$36
	$12 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [48])) == (int_64)CALL $fimport$2()), [864])
	*(($7 = CALL $103([24])) + [8]) = $6
	*($7) = $2
	CALL eosio_assert([1], [928])
	CALL memcpy($13, $7, [8])
	$8 = *($7)
	$11 = CALL db_store_i64(*(($0 + [56])), (int_64)5445032382844370944, $12, $8, $13, [8])
	*($7 + [12]) = $11
	$4 = ($0 + [64])
	if ( (uint_64)($8 <= *($4)) ){ goto $label$37 }
	*($4) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$37
	*($13 + [48]) = $7
	$8 = *($7)
	*($13) = $8
	*($13 + [40]) = $11
	$6 = ($0 + [76])
	$4 = *($6)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [80]))) ){ goto $label$39 }
	*($4 + [8]) = $8
	*($4 + [16]) = $11
	*($13 + [48]) = [0]
	*($4) = $7
	*($6) = ($4 + [24])
	goto $label$38 
	
.LABEL $label$39
	CALL $36(($0 + [72]), ($13 + [48]), $13, ($13 + [40]))
	
.LABEL $label$38
	$7 = *($13 + [48])
	*($13 + [48]) = [0]
	if ( ($7 == 0) ){ goto $label$40 }
	CALL $104($7)
	
.LABEL $label$40
	CALL $37(($13 + [64]))
	
.LABEL $label$10
	*([0] + [4]) = ($13 + [144])
}

int_32 .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [96])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$5 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*(($9 + [40])) = (int_64)1398362884
	*($9 + [32]) = (int_64)0
	*($9 + [24]) = (int_64)0
	CALL eosio_assert([1], [976])
	$6 = (int_64)5462355
	
.LOOP $label$5:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($7, [1040])
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [688])
	CALL memcpy(($9 + [24]), $5, [8])
	$7 = ($3 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [688])
	$1 = (($9 + [24]) + [8])
	CALL memcpy($1, ($5 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [688])
	CALL memcpy((($9 + [24]) + [16]), ($5 + [16]), [8])
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	*(($7 = (($9 + [48]) + [8]))) = *(($1 + [8]))
	$6 = *($9 + [24])
	*($9 + [48]) = *($1)
	*((($9 + [64]) + [8])) = *($7)
	*($9 + [64]) = *($9 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$8 = *((*($1) + $8))
	
.LABEL $label$9
	$4 = *((($9 + [64]) + [8]))
	*((($9 + [80]) + [8])) = $4
	*((($9 + [8]) + [8])) = $4
	$4 = *($9 + [64])
	*($9 + [80]) = $4
	*($9 + [8]) = $4
	CALL void $1((int_32 $6), (int_64 ($9 + [8])), (int_32 $8))
	*([0] + [4]) = ($9 + [96])
	return [1]
}

int_32 .FUNC $109 (int_32 $0, int_32 $1)
{
	return CALL $107($0, $1, CALL $120($1))
}

void .FUNC _ZN11dbetonedice8dbetdice10transfertoEyRKN5eosio5assetERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEo (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_64 $4, int_64 $5)
{
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [160])
	*([0] + [4]) = $12
	$10 = *($0)
	CALL prints([64])
	CALL prints([3184])
	CALL prints([112])
	CALL printi((int_64)91)
	CALL prints([112])
	CALL prints([3200])
	CALL printn($10)
	CALL prints([1488])
	CALL printn($1)
	CALL prints([1504])
	CALL $60($2)
	CALL prints([144])
	CALL prints([64])
	CALL prints([3184])
	CALL prints([112])
	CALL printi((int_64)92)
	CALL prints([112])
	CALL prints([1632])
	$9 = *($3)
	$8 = ($9 & [1])
	CALL prints_l(( *($3 + [8]) ? ($3 + [1]) : $8 ), ( *($3 + [4]) ? uint_32($9 >> [1]) : $8 ))
	CALL prints([3248])
	*($12 + [88]) = $5
	*($12 + [80]) = $4
	CALL printui128(($12 + [80]))
	CALL prints([144])
	*($12 + [152]) = $5
	*($12 + [144]) = $4
	$4 = *($2 + [8])
	if ( ((int_64)$4 != (int_64)1397703940) ){ goto $label$2 }
	$4 = CALL current_time()
	*(($12 + [108])) = [0]
	*(($12 + [112])) = [0]
	*($12 + [92]) = [0]
	*($12 + [96]) = [0]
	*($12 + [100]) = [0]
	*($12 + [104]) = [0]
	*($12 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$4 / (uint_64)(int_64)1000000)) + [60])
	*($12 + [116]) = [0]
	*(($12 + [120])) = [0]
	*(($12 + [124])) = [0]
	*($12 + [128]) = [0]
	*(($12 + [132])) = [0]
	*(($12 + [136])) = [0]
	$7 = ($12 + [116])
	$6 = *($0)
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [832]
	$11 = (int_64)0
	
.LOOP $label$3:
	if ( ((uint_64)$4 > (uint_64)(int_64)5) ){ goto $label$8 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$8 = ($8 + [165])
	goto $label$6 
	
.LABEL $label$8
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$5
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$4
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$3 }
	*($12 + [72]) = $11
	*($12 + [64]) = $6
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [432]
	$11 = (int_64)0
	
.LOOP $label$9:
	if ( ((uint_64)$4 > (uint_64)(int_64)10) ){ goto $label$14 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$8 = ($8 + [165])
	goto $label$12 
	
.LABEL $label$14
	$5 = (int_64)0
	if ( ((int_64)$4 == (int_64)11) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$13
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$11
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$10
	$9 = ($9 + [1])
	$10 = ((int_64)$10 + (int_64)-5)
	$11 = ((int_64)$5 | (int_64)$11)
	$4 = ((int_64)$4 + (int_64)1)
	if ( ((int_64)$4 != (int_64)13) ){ goto $label$9 }
	*($12 + [56]) = $11
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [496]
	$11 = (int_64)0
	
.LOOP $label$15:
	if ( ((uint_64)$4 > (uint_64)(int_64)7) ){ goto $label$20 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$8 = ($8 + [165])
	goto $label$18 
	
.LABEL $label$20
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$19
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$17
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$16
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$15 }
	*($12 + [48]) = $11
	*(($12 + [28])) = *(($2 + [12]))
	*(($12 + [24])) = *(($2 + [8]))
	*(($12 + [20])) = *(($2 + [4]))
	*($12 + [8]) = $1
	*($12) = $6
	*($12 + [16]) = *($2)
	CALL $114(($12 + [32]), $3)
	CALL $73($7, ($12 + [64]), ($12 + [56]), ($12 + [48]), $12)
	if ( ((*($12 + [32]) & [1]) == 0) ){ goto $label$21 }
	CALL $104(*(($12 + [40])))
	
.LABEL $label$21
	*((($12 + [80]) + [20])) = [0]
	$4 = *($0)
	CALL $35($12, ($12 + [80]))
	$9 = *($12)
	CALL send_deferred(($12 + [144]), $4, $9, (*($12 + [4]) - $9), [0])
	$9 = *($12)
	if ( ($9 == 0) ){ goto $label$22 }
	*($12 + [4]) = $9
	CALL $104($9)
	
.LABEL $label$22
	CALL $37(($12 + [80]))
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_64)$4 != (int_64)340414906884) ){ goto $label$23 }
	$4 = CALL current_time()
	*(($12 + [108])) = [0]
	*(($12 + [112])) = [0]
	*($12 + [92]) = [0]
	*($12 + [96]) = [0]
	*($12 + [100]) = [0]
	*($12 + [104]) = [0]
	*($12 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$4 / (uint_64)(int_64)1000000)) + [60])
	*($12 + [116]) = [0]
	*(($12 + [120])) = [0]
	*(($12 + [124])) = [0]
	*($12 + [128]) = [0]
	*(($12 + [132])) = [0]
	*(($12 + [136])) = [0]
	$7 = ($12 + [116])
	$6 = *($0)
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [832]
	$11 = (int_64)0
	
.LOOP $label$24:
	if ( ((uint_64)$4 > (uint_64)(int_64)5) ){ goto $label$29 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$8 = ($8 + [165])
	goto $label$27 
	
.LABEL $label$29
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$28
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$26
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$25
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$24 }
	*($12 + [72]) = $11
	*($12 + [64]) = $6
	$4 = (int_64)0
	$5 = (int_64)59
	$9 = [448]
	$11 = (int_64)0
	
.LOOP $label$30:
	$10 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$31 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$8 = ($8 + [165])
	goto $label$32 
	
.LABEL $label$33
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$32
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($8 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$31
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$30 }
	*($12 + [56]) = $11
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [496]
	$11 = (int_64)0
	
.LOOP $label$34:
	if ( ((uint_64)$4 > (uint_64)(int_64)7) ){ goto $label$39 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$38 }
	$8 = ($8 + [165])
	goto $label$37 
	
.LABEL $label$39
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$38
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$37
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$36
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$35
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$34 }
	*($12 + [48]) = $11
	*(($12 + [28])) = *(($2 + [12]))
	*(($12 + [24])) = *(($2 + [8]))
	*(($12 + [20])) = *(($2 + [4]))
	*($12 + [8]) = $1
	*($12) = $6
	*($12 + [16]) = *($2)
	CALL $114(($12 + [32]), $3)
	CALL $73($7, ($12 + [64]), ($12 + [56]), ($12 + [48]), $12)
	if ( ((*($12 + [32]) & [1]) == 0) ){ goto $label$40 }
	CALL $104(*(($12 + [40])))
	
.LABEL $label$40
	*((($12 + [80]) + [20])) = [0]
	$4 = *($0)
	CALL $35($12, ($12 + [80]))
	$9 = *($12)
	CALL send_deferred(($12 + [144]), $4, $9, (*($12 + [4]) - $9), [0])
	$9 = *($12)
	if ( ($9 == 0) ){ goto $label$41 }
	*($12 + [4]) = $9
	CALL $104($9)
	
.LABEL $label$41
	CALL $37(($12 + [80]))
	goto $label$1 
	
.LABEL $label$23
	if ( ((int_64)$4 != (int_64)297481618436) ){ goto $label$42 }
	$4 = CALL current_time()
	*(($12 + [108])) = [0]
	*(($12 + [112])) = [0]
	*($12 + [92]) = [0]
	*($12 + [96]) = [0]
	*($12 + [100]) = [0]
	*($12 + [104]) = [0]
	*($12 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$4 / (uint_64)(int_64)1000000)) + [60])
	*($12 + [116]) = [0]
	*(($12 + [120])) = [0]
	*(($12 + [124])) = [0]
	*($12 + [128]) = [0]
	*(($12 + [132])) = [0]
	*(($12 + [136])) = [0]
	$7 = ($12 + [116])
	$6 = *($0)
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [832]
	$11 = (int_64)0
	
.LOOP $label$43:
	if ( ((uint_64)$4 > (uint_64)(int_64)5) ){ goto $label$48 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$47 }
	$8 = ($8 + [165])
	goto $label$46 
	
.LABEL $label$48
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$47
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$46
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$45
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$44
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$43 }
	*($12 + [72]) = $11
	*($12 + [64]) = $6
	$4 = (int_64)0
	$5 = (int_64)59
	$9 = [464]
	$11 = (int_64)0
	
.LOOP $label$49:
	$10 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$50 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$52 }
	$8 = ($8 + [165])
	goto $label$51 
	
.LABEL $label$52
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$51
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($8 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$50
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$49 }
	*($12 + [56]) = $11
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [496]
	$11 = (int_64)0
	
.LOOP $label$53:
	if ( ((uint_64)$4 > (uint_64)(int_64)7) ){ goto $label$58 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$57 }
	$8 = ($8 + [165])
	goto $label$56 
	
.LABEL $label$58
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$57
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$56
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$55
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$54
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$53 }
	*($12 + [48]) = $11
	*(($12 + [28])) = *(($2 + [12]))
	*(($12 + [24])) = *(($2 + [8]))
	*(($12 + [20])) = *(($2 + [4]))
	*($12 + [8]) = $1
	*($12) = $6
	*($12 + [16]) = *($2)
	CALL $114(($12 + [32]), $3)
	CALL $73($7, ($12 + [64]), ($12 + [56]), ($12 + [48]), $12)
	if ( ((*($12 + [32]) & [1]) == 0) ){ goto $label$59 }
	CALL $104(*(($12 + [40])))
	
.LABEL $label$59
	*((($12 + [80]) + [20])) = [0]
	$4 = *($0)
	CALL $35($12, ($12 + [80]))
	$9 = *($12)
	CALL send_deferred(($12 + [144]), $4, $9, (*($12 + [4]) - $9), [0])
	$9 = *($12)
	if ( ($9 == 0) ){ goto $label$60 }
	*($12 + [4]) = $9
	CALL $104($9)
	
.LABEL $label$60
	CALL $37(($12 + [80]))
	goto $label$1 
	
.LABEL $label$42
	if ( ((int_64)$4 != (int_64)293455873288) ){ goto $label$61 }
	$4 = CALL current_time()
	*(($12 + [108])) = [0]
	*(($12 + [112])) = [0]
	*($12 + [92]) = [0]
	*($12 + [96]) = [0]
	*($12 + [100]) = [0]
	*($12 + [104]) = [0]
	*($12 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$4 / (uint_64)(int_64)1000000)) + [60])
	*($12 + [116]) = [0]
	*(($12 + [120])) = [0]
	*(($12 + [124])) = [0]
	*($12 + [128]) = [0]
	*(($12 + [132])) = [0]
	*(($12 + [136])) = [0]
	$7 = ($12 + [116])
	$6 = *($0)
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [832]
	$11 = (int_64)0
	
.LOOP $label$62:
	if ( ((uint_64)$4 > (uint_64)(int_64)5) ){ goto $label$67 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$66 }
	$8 = ($8 + [165])
	goto $label$65 
	
.LABEL $label$67
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$64 }
	goto $label$63 
	
.LABEL $label$66
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$65
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$64
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$63
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$62 }
	*($12 + [72]) = $11
	*($12 + [64]) = $6
	$4 = (int_64)0
	$5 = (int_64)59
	$9 = [480]
	$11 = (int_64)0
	
.LOOP $label$68:
	$10 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$69 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$71 }
	$8 = ($8 + [165])
	goto $label$70 
	
.LABEL $label$71
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$70
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($8 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$69
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$68 }
	*($12 + [56]) = $11
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [496]
	$11 = (int_64)0
	
.LOOP $label$72:
	if ( ((uint_64)$4 > (uint_64)(int_64)7) ){ goto $label$77 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$76 }
	$8 = ($8 + [165])
	goto $label$75 
	
.LABEL $label$77
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$74 }
	goto $label$73 
	
.LABEL $label$76
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$75
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$74
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$73
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$72 }
	*($12 + [48]) = $11
	*(($12 + [28])) = *(($2 + [12]))
	*(($12 + [24])) = *(($2 + [8]))
	*(($12 + [20])) = *(($2 + [4]))
	*($12 + [8]) = $1
	*($12) = $6
	*($12 + [16]) = *($2)
	CALL $114(($12 + [32]), $3)
	CALL $73($7, ($12 + [64]), ($12 + [56]), ($12 + [48]), $12)
	if ( ((*($12 + [32]) & [1]) == 0) ){ goto $label$78 }
	CALL $104(*(($12 + [40])))
	
.LABEL $label$78
	*((($12 + [80]) + [20])) = [0]
	$4 = *($0)
	CALL $35($12, ($12 + [80]))
	$9 = *($12)
	CALL send_deferred(($12 + [144]), $4, $9, (*($12 + [4]) - $9), [0])
	$9 = *($12)
	if ( ($9 == 0) ){ goto $label$79 }
	*($12 + [4]) = $9
	CALL $104($9)
	
.LABEL $label$79
	CALL $37(($12 + [80]))
	goto $label$1 
	
.LABEL $label$61
	CALL eosio_assert([0], [3264])
	
.LABEL $label$1
	CALL prints([64])
	CALL prints([3184])
	CALL prints([112])
	CALL printi((int_64)143)
	CALL prints([112])
	CALL prints([3312])
	CALL prints([144])
	*([0] + [4]) = ($12 + [160])
}

void .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$6 = CALL $103([16])
	*($0 + [8]) = $6
	*($0) = (int_64)55834574865
	CALL memset($6, [46], [13])
	*($6 + [13]) = [0]
	$2 = ($0 + [1])
	$8 = *($1)
	$7 = [17]
	$5 = ($0 + [8])
	$6 = [12]
	
.LOOP $label$1:
	$4 = ((int_32)$6 == (int_32)[12])
	$3 = *((*([0] + [3340]) + (CASTING uint_32)(uint_64 ((int_64)( (int_64)15 ? (int_64)31 : $4 ) & (int_64)$8))))
	$1 = $2
	if ( (($7 & [1]) == 0) ){ goto $label$2 }
	$1 = *($5)
	
.LABEL $label$2
	*(($1 + $6)) = $3
	if ( ($6 == 0) ){ goto $label$3 }
	$6 = ($6 + [-1])
	$8 = (uint_64)$8 >> (uint_64)( (int_64)4 ? (int_64)5 : $4 ))
	$7 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$1 = ($6 & [1])
	$6 = *($0)
	$6 = ( *(($0 + [4])) ? uint_32($6 >> [1]) : $1 )
	$7 = ( *(($0 + [8])) ? $2 : $1 )
	
.LOOP $label$5:
	if ( ($6 == 0) ){ goto $label$4 }
	$1 = ($7 + $6)
	$3 = ($6 + [-1])
	$6 = $3
	if ( ((int_32)*(($1 + [-1])) == (int_32)[46]) ){ goto $label$5 }
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	CALL $115($9, $0, [0], ($3 + [1]), $0)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = [0]
	goto $label$6 
	
.LABEL $label$7
	*(*(($0 + [8]))) = [0]
	*(($0 + [4])) = [0]
	
.LABEL $label$6
	CALL $106($0, [0])
	*(($0 + [8])) = *(($9 + [8]))
	*($0) = *($9)
	
.LABEL $label$4
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $108 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$9 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [8])
	
.LABEL $label$2
	$10 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$10 = [11]
	$2 = ($2 + $1)
	$8 = ($1 << [1])
	$2 = ( $8 ? $2 : ($2 <= $8) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$10 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $103($10)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $9, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($9 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $104($9)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($10 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $65 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10, int_32 $11, int_32 $12, int_32 $13)
{
	CALL printui(*($0))
	CALL prints($1)
	CALL $60($2)
	CALL prints($3)
	CALL $60($4)
	CALL prints($5)
	CALL $60($6)
	CALL prints($7)
	CALL $60($8)
	CALL prints($9)
	CALL printui(*($10))
	CALL prints($11)
	CALL printui(*($12))
	CALL prints($13)
}

void .FUNC _ZN11dbetonedice8dbetdice6recordEyyyRKN5eosio5assetES4_yy (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5, int_64 $6, int_64 $7)
{
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [112])
	*([0] + [4]) = $16
	$8 = ($0 + [8])
	$14 = ($0 + [24])
	$10 = *($14)
	if ( ((int_64)$10 != (int_64)-1) ){ goto $label$1 }
	$10 = (int_64)0
	$13 = CALL db_lowerbound_i64(*($8), *(($0 + [16])), (int_64)5445040692176502784, (int_64)0)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$2 }
	CALL $55($8, $13)
	*($16 + [4]) = [0]
	*($16) = $8
	$10 = *(*(CALL $78($16) + [4]))
	$10 = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($0 + [24])) = $10
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($10 <= (int_64)-2), [3792])
	$9 = *($14)
	if ( (uint_64)($9 <= (int_64)100000) ){ goto $label$6 }
	$10 = ((int_64)$9 + (int_64)-100000)
	$11 = *(($0 + [32]))
	$15 = *(($0 + [36]))
	if ( ((int_32)$15 == (int_32)$11) ){ goto $label$7 }
	$14 = ($15 + [-24])
	$12 = ([0] - $11)
	
.LOOP $label$8:
	if ( ((int_64)*(*($14)) == (int_64)$10) ){ goto $label$7 }
	$15 = $14
	$13 = ($14 + [-24])
	$14 = $13
	if ( ((int_32)($13 + $12) != (int_32)[-24]) ){ goto $label$8 }
	
.LABEL $label$7
	if ( ((int_32)$15 == (int_32)$11) ){ goto $label$10 }
	$14 = *(($15 + [-24]))
	CALL eosio_assert(((int_32)*($14 + [88]) == (int_32)$8), [752])
	if ( $14 ){ goto $label$9 }
	goto $label$6 
	
.LABEL $label$10
	$14 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)5445040692176502784, $10)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$6 }
	$14 = CALL $55($8, $14)
	CALL eosio_assert(((int_32)*($14 + [88]) == (int_32)$8), [752])
	
.LABEL $label$9
	CALL eosio_assert([1], [1072])
	CALL eosio_assert([1], [1120])
	$13 = CALL db_next_i64(*($14 + [92]), $16)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$11 }
	CALL $55($8, $13)
	
.LABEL $label$11
	CALL $56($8, $14)
	$10 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$2()), [864])
	$14 = CALL $103([104])
	$13 = CALL $57($14)
	*($14 + [88]) = $8
	*($14 + [8]) = $1
	*($14) = $9
	*($14 + [16]) = ( (int_64)0 ? $2 : ((int_64)$2 == (int_64)$1) )
	*($14 + [24]) = $3
	*(($14 + [44])) = *(($4 + [12]))
	*(($14 + [40])) = *(($4 + [8]))
	*(($14 + [36])) = *(($4 + [4]))
	*($14 + [32]) = *($4)
	*(($14 + [56])) = *(($5 + [8]))
	*($14 + [48]) = *($5)
	*($14 + [64]) = $6
	*($14 + [72]) = $7
	$1 = CALL current_time()
	*($14 + [84]) = [0]
	*($14 + [80]) = ((uint_64)$1 / (uint_64)(int_64)1000000)
	*($16 + [96]) = ($16 + [85])
	*($16 + [92]) = $16
	*($16 + [88]) = $16
	CALL $79(($16 + [88]), $13)
	$1 = *($14)
	$13 = ($0 + [16])
	*($14 + [92]) = CALL db_store_i64(*($13), (int_64)5445040692176502784, $10, $1, $16, [85])
	$15 = ($0 + [24])
	if ( (uint_64)($1 <= *($15)) ){ goto $label$12 }
	*($15) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	$1 = *($13)
	$2 = *($14)
	*($16 + [104]) = *(($14 + [24]))
	*($14 + [96]) = CALL db_idx64_store($1, (int_64)5445040692176502784, $10, $2, ($16 + [104]))
	$1 = *($13)
	$2 = *($14)
	*($16 + [104]) = *(($14 + [8]))
	*($14 + [100]) = CALL db_idx64_store($1, (int_64)5445040692176502785, $10, $2, ($16 + [104]))
	*($16 + [88]) = $14
	$10 = *($14)
	*($16) = $10
	$15 = *(($14 + [92]))
	*($16 + [104]) = $15
	$13 = *(($0 + [36]))
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [40]))) ){ goto $label$5 }
	*($13 + [8]) = $10
	*($13 + [16]) = $15
	*($16 + [88]) = [0]
	*($13) = $14
	*(($0 + [36])) = ($13 + [24])
	goto $label$4 
	
.LABEL $label$6
	$10 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$2()), [864])
	$14 = CALL $103([104])
	$13 = CALL $57($14)
	*($14 + [88]) = $8
	*($14 + [8]) = $1
	*($14) = $9
	*($14 + [16]) = ( (int_64)0 ? $2 : ((int_64)$2 == (int_64)$1) )
	*($14 + [24]) = $3
	*(($14 + [44])) = *(($4 + [12]))
	*(($14 + [40])) = *(($4 + [8]))
	*(($14 + [36])) = *(($4 + [4]))
	*($14 + [32]) = *($4)
	*(($14 + [56])) = *(($5 + [8]))
	*($14 + [48]) = *($5)
	*($14 + [64]) = $6
	*($14 + [72]) = $7
	$1 = CALL current_time()
	*($14 + [84]) = [0]
	*($14 + [80]) = ((uint_64)$1 / (uint_64)(int_64)1000000)
	*($16 + [96]) = ($16 + [85])
	*($16 + [92]) = $16
	*($16 + [88]) = $16
	CALL $79(($16 + [88]), $13)
	$1 = *($14)
	$13 = ($0 + [16])
	*($14 + [92]) = CALL db_store_i64(*($13), (int_64)5445040692176502784, $10, $1, $16, [85])
	$15 = ($0 + [24])
	if ( (uint_64)($1 <= *($15)) ){ goto $label$13 }
	*($15) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	$1 = *($13)
	$2 = *($14)
	*($16 + [104]) = *(($14 + [24]))
	*($14 + [96]) = CALL db_idx64_store($1, (int_64)5445040692176502784, $10, $2, ($16 + [104]))
	$1 = *($13)
	$2 = *($14)
	*($16 + [104]) = *(($14 + [8]))
	*($14 + [100]) = CALL db_idx64_store($1, (int_64)5445040692176502785, $10, $2, ($16 + [104]))
	*($16 + [88]) = $14
	$10 = *($14)
	*($16) = $10
	$15 = *(($14 + [92]))
	*($16 + [104]) = $15
	$13 = *(($0 + [36]))
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [40]))) ){ goto $label$15 }
	*($13 + [8]) = $10
	*($13 + [16]) = $15
	*($16 + [88]) = [0]
	*($13) = $14
	*(($0 + [36])) = ($13 + [24])
	goto $label$14 
	
.LABEL $label$15
	CALL $59(($0 + [32]), ($16 + [88]), $16, ($16 + [104]))
	
.LABEL $label$14
	$14 = *($16 + [88])
	*($16 + [88]) = [0]
	if ( ($14 == 0) ){ goto $label$3 }
	CALL $104($14)
	goto $label$3 
	
.LABEL $label$5
	CALL $59(($0 + [32]), ($16 + [88]), $16, ($16 + [104]))
	
.LABEL $label$4
	$14 = *($16 + [88])
	*($16 + [88]) = [0]
	if ( ($14 == 0) ){ goto $label$3 }
	CALL $104($14)
	
.LABEL $label$3
	*([0] + [4]) = ($16 + [112])
}

void .FUNC _ZN11dbetonedice14inviter_chargeERKN5eosio5assetERS1_y (int_32 $0, int_32 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	*($1) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 *($0)) * (float_64)(float_64)0.002))
	*($1 + [8]) = *($0 + [8])
	$3 = *($0 + [8])
	if ( ((int_64)$3 != (int_64)1397703940) ){ goto $label$12 }
	$3 = ((int_64)$2 * (int_64)10000)
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [976])
	$2 = (int_64)5459781
	$0 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$4 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$13 }
	goto $label$10 
	
.LABEL $label$12
	if ( ((int_64)$3 != (int_64)340414906884) ){ goto $label$9 }
	$3 = ((int_64)$2 * (int_64)10000000)
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [976])
	$2 = (int_64)1329745730
	$0 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	
.LOOP $label$18:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$18 }
	
.LABEL $label$17
	$4 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$16 }
	goto $label$7 
	
.LABEL $label$11
	$4 = [0]
	
.LABEL $label$10
	CALL eosio_assert($4, [1040])
	CALL eosio_assert(((int_64)*(($1 + [8])) == (int_64)1397703940), [3392])
	CALL eosio_assert(((int_64)*($1) < (int_64)$3), [3456])
	return 
	
.LABEL $label$9
	if ( ((int_64)$3 != (int_64)297481618436) ){ goto $label$6 }
	$3 = ((int_64)$2 * (int_64)1000000)
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [976])
	$2 = (int_64)1162037572
	$0 = [0]
	
.LOOP $label$19:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$20 }
	
.LOOP $label$21:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$21 }
	
.LABEL $label$20
	$4 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$19 }
	goto $label$4 
	
.LABEL $label$8
	$4 = [0]
	
.LABEL $label$7
	CALL eosio_assert($4, [1040])
	CALL eosio_assert(((int_64)*(($1 + [8])) == (int_64)340414906884), [3392])
	CALL eosio_assert(((int_64)*($1) < (int_64)$3), [3456])
	return 
	
.LABEL $label$6
	if ( ((int_64)$3 != (int_64)293455873288) ){ goto $label$3 }
	$3 = ((int_64)$2 * (int_64)100000000)
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [976])
	$2 = (int_64)1146312005
	$0 = [0]
	
.LOOP $label$22:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$23 }
	
.LOOP $label$24:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$24 }
	
.LABEL $label$23
	$4 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$22 }
	goto $label$1 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [1040])
	CALL eosio_assert(((int_64)*(($1 + [8])) == (int_64)297481618436), [3392])
	CALL eosio_assert(((int_64)*($1) < (int_64)$3), [3456])
	return 
	
.LABEL $label$3
	CALL eosio_assert([0], [3264])
	return 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [1040])
	CALL eosio_assert(((int_64)*(($1 + [8])) == (int_64)293455873288), [3392])
	CALL eosio_assert(((int_64)*($1) < (int_64)$3), [3456])
}

void .FUNC _ZN11dbetonedice8dbetdice8overfaceEyRKN5eosio5assetES4_ (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	float_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [144])
	*([0] + [4]) = $9
	$5 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	*($9 + [56]) = $5)
	$8 = [0]
	*(($9 + [48])) = [0]
	*($9 + [24]) = $5
	*($9 + [32]) = (int_64)-1
	*($9 + [40]) = (int_64)0
	$6 = *($0)
	*($9 + [16]) = $6
	$4 = CALL db_find_i64($6, $5, (int_64)-3020376800539705344, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $46(($9 + [16]), $4)
	CALL eosio_assert(((int_32)*($8 + [32]) == (int_32)($9 + [16])), [752])
	
.LABEL $label$1
	$5 = *($3)
	if ( ((int_64)$5 <= (int_64)-1) ){ goto $label$5 }
	if ( ($8 == 0) ){ goto $label$4 }
	if ( ((uint_64)*($8 + [16]) > (uint_64)(int_64)2) ){ goto $label$4 }
	if ( (((uint_64)*($8 + [8]) > (uint_64)(int_64)9) & ((float_64)*($8 + [24]) >= (float_64)(float_64)10)) ){ goto $label$4 }
	CALL eosio_assert([1], [1072])
	CALL eosio_assert([1], [1120])
	$2 = CALL db_next_i64(*($8 + [36]), ($9 + [64]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$6 }
	CALL $46(($9 + [16]), $2)
	
.LABEL $label$6
	CALL $47(($9 + [16]), $8)
	$0 = *($9 + [40])
	if ( $0 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$7 = ((float_64)(CASTING float_64)(int_64 $5) / (float_64)(CASTING float_64)(int_64 *($2)))
	*($9 + [8]) = (CASTING uint_64)(uint_32 ((float_64)$7 < (float_64)(float_64)-10))
	*($9) = !(float_64)$7
	if ( ($8 == 0) ){ goto $label$10 }
	if ( ((uint_64)*($8 + [16]) > (uint_64)(int_64)2) ){ goto $label$9 }
	if ( (((uint_64)*($8 + [8]) > (uint_64)(int_64)9) & ((float_64)*($8 + [24]) >= (float_64)(float_64)10)) ){ goto $label$9 }
	*($9 + [72]) = $0
	*($9 + [80]) = $2
	*($9 + [68]) = $9
	*($9 + [64]) = ($9 + [8])
	*($9 + [76]) = ($9 + [56])
	CALL eosio_assert([1], [3536])
	CALL $77(($9 + [16]), $8, ($9 + [64]))
	$0 = *($9 + [40])
	if ( $0 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$10
	$6 = *($0)
	CALL eosio_assert(((int_64)*($9 + [16]) == (int_64)CALL $fimport$2()), [864])
	*(($8 = CALL $103([48])) + [32]) = ($9 + [16])
	*($8 + [8]) = (int_64)1
	*($8) = $1
	*($8 + [16]) = *($9 + [8])
	*($8 + [24]) = *($9)
	CALL prints([64])
	CALL prints([3472])
	CALL prints([112])
	CALL printi((int_64)27)
	CALL prints([112])
	CALL prints([3488])
	CALL printn($1)
	CALL prints([144])
	*($9 + [112]) = (($9 + [64]) + [32])
	*($9 + [108]) = ($9 + [64])
	*($9 + [104]) = ($9 + [64])
	*($9 + [120]) = ($9 + [104])
	*($9 + [132]) = ($8 + [8])
	*($9 + [128]) = $8
	*($9 + [136]) = ($8 + [16])
	*($9 + [140]) = ($8 + [24])
	CALL $76(($9 + [128]), ($9 + [120]))
	$5 = *($8)
	$0 = CALL db_store_i64(*((($9 + [16]) + [8])), (int_64)-3020376800539705344, $6, $5, ($9 + [64]), [32])
	*($8 + [36]) = $0
	$2 = (($9 + [16]) + [16])
	if ( (uint_64)($5 <= *($2)) ){ goto $label$11 }
	*($2) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*($9 + [128]) = $8
	$5 = *($8)
	*($9 + [64]) = $5
	*($9 + [104]) = $0
	$3 = ($9 + [44])
	$2 = *($3)
	if ( ((uint_32)$2 >= (uint_32)*((($9 + [16]) + [32]))) ){ goto $label$8 }
	*($2 + [8]) = $5
	*($2 + [16]) = $0
	*($9 + [128]) = [0]
	*($2) = $8
	*($3) = ($2 + [24])
	goto $label$7 
	
.LABEL $label$9
	CALL eosio_assert([0], [3504])
	$0 = *($9 + [40])
	if ( $0 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$8
	CALL $49(($9 + [40]), ($9 + [128]), ($9 + [64]), ($9 + [104]))
	
.LABEL $label$7
	$8 = *($9 + [128])
	*($9 + [128]) = [0]
	if ( ($8 == 0) ){ goto $label$4 }
	CALL $104($8)
	
.LABEL $label$4
	$0 = *($9 + [40])
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = ($9 + [44])
	$8 = *($3)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$13 }
	
.LOOP $label$14:
	$8 = ($8 + [-24])
	$2 = *($8)
	*($8) = [0]
	if ( ($2 == 0) ){ goto $label$15 }
	CALL $104($2)
	
.LABEL $label$15
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$14 }
	$8 = *(($9 + [40]))
	goto $label$12 
	
.LABEL $label$13
	$8 = $0
	
.LABEL $label$12
	*($3) = $0
	CALL $104($8)
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [144])
}

void .FUNC $61 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10, int_32 $11, int_32 $12, int_32 $13, int_32 $14, int_32 $15, int_32 $16, int_32 $17)
{
	CALL prints($0)
	CALL prints($1)
	CALL prints($2)
	CALL printi(*($3))
	CALL prints($4)
	CALL prints($5)
	$5 = *($6)
	$4 = ($5 & [1])
	CALL prints_l(( *($6 + [8]) ? ($6 + [1]) : $4 ), ( *($6 + [4]) ? uint_32($5 >> [1]) : $4 ))
	CALL prints($7)
	$6 = *($8)
	$7 = ($6 & [1])
	CALL prints_l(( *($8 + [8]) ? ($8 + [1]) : $7 ), ( *($8 + [4]) ? uint_32($6 >> [1]) : $7 ))
	CALL $80($9, $10, $11, $12, $13, $14, $15, $16, $17)
}

void .FUNC $60 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$2 = *([0] + [4])
	$10 = $2
	$7 = (int_64)1
	$8 = *($0 + [8])
	$5 = (int_64)($8 == 0)
	if ( $5 ){ goto $label$1 }
	$9 = ((int_64)$8 + (int_64)1)
	$7 = (int_64)1
	
.LOOP $label$2:
	$7 = ((int_64)$7 * (int_64)10)
	$9 = ((int_64)$9 + (int_64)-1)
	if ( ((int_64)$9 > (int_64)1) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = ($0 + [8])
	$2 = ($2 - (((CASTING uint_32)(uint_64 ((int_64)$8 + (int_64)1)) + [15]) & [1008]))
	*([0] + [4]) = $2
	*(($6 = ($2 + ($3 = (CASTING uint_32)(uint_64 $8))))) = [0]
	$4 = *($0)
	if ( $5 ){ goto $label$3 }
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$4 % (int_64)$7)
	$0 = ($6 + [-1])
	
.LOOP $label$4:
	*($0) = ((int_64)((int_64)$9 % (int_64)10) + (int_64)48)
	$0 = ($0 + [-1])
	$9 = ((int_64)$9 / (int_64)10)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 > (int_64)1) ){ goto $label$4 }
	
.LABEL $label$3
	CALL printi(((int_64)$4 / (int_64)$7))
	CALL prints([4480])
	CALL prints_l($2, $3)
	CALL prints([4496])
	CALL $81($1, [0])
	*([0] + [4]) = $10
}

void .FUNC $63 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)5445040692176502784, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [88]) == (int_32)$4), [752])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $55($4, CALL $fimport$5(*($4), *($4 + [8]), (int_64)5445040692176502784, $5))
	CALL eosio_assert(((int_32)*($2 + [88]) == (int_32)$4), [752])
	
.LABEL $label$4
	*($2 + [96]) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC _ZN11dbetonedice14quantity_judgeERKN5eosio5assetEy (int_32 $0, int_64 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	CALL prints([64])
	CALL prints([1424])
	CALL prints([112])
	CALL printi((int_64)11)
	CALL prints([112])
	CALL prints([3968])
	CALL $60($0)
	CALL prints([3984])
	CALL printui($1)
	CALL prints([144])
	$3 = *($0 + [8])
	if ( ((int_64)$3 != (int_64)1397703940) ){ goto $label$13 }
	$2 = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 $1) * (float_64)(float_64)1e3))
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [976])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	
.LOOP $label$16:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$16 }
	
.LABEL $label$15
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$14 }
	goto $label$11 
	
.LABEL $label$13
	if ( ((int_64)$3 != (int_64)340414906884) ){ goto $label$10 }
	$2 = ((int_64)$1 * (int_64)1000000)
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [976])
	$3 = (int_64)1329745730
	$4 = [0]
	
.LOOP $label$17:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	
.LOOP $label$19:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$19 }
	
.LABEL $label$18
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$17 }
	goto $label$8 
	
.LABEL $label$12
	$5 = [0]
	
.LABEL $label$11
	CALL eosio_assert($5, [1040])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)1397703940), [3392])
	CALL eosio_assert(((int_64)*($0) >= (int_64)$2), [4000])
	$1 = ((int_64)$1 * (int_64)1000000)
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [976])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$22:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$21 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$23 }
	
.LOOP $label$24:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$21 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$24 }
	
.LABEL $label$23
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	$5 = [0]
	
.LABEL $label$20
	CALL eosio_assert($5, [1040])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)1397703940), [3392])
	CALL eosio_assert(((int_64)*($0) <= (int_64)$1), [4048])
	goto $label$1 
	
.LABEL $label$10
	if ( ((int_64)$3 != (int_64)297481618436) ){ goto $label$7 }
	$2 = ((int_64)$1 * (int_64)100000)
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [976])
	$3 = (int_64)1162037572
	$4 = [0]
	
.LOOP $label$25:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$6 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$26 }
	
.LOOP $label$27:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$27 }
	
.LABEL $label$26
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$25 }
	goto $label$5 
	
.LABEL $label$9
	$5 = [0]
	
.LABEL $label$8
	CALL eosio_assert($5, [1040])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)340414906884), [3392])
	CALL eosio_assert(((int_64)*($0) >= (int_64)$2), [4096])
	$1 = ((int_64)$1 * (int_64)100000000)
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [976])
	$3 = (int_64)1329745730
	$4 = [0]
	
.LOOP $label$30:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$29 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$31 }
	
.LOOP $label$32:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$29 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$32 }
	
.LABEL $label$31
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$30 }
	goto $label$28 
	
.LABEL $label$29
	$5 = [0]
	
.LABEL $label$28
	CALL eosio_assert($5, [1040])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)340414906884), [3392])
	CALL eosio_assert(((int_64)*($0) <= (int_64)$1), [4144])
	goto $label$1 
	
.LABEL $label$7
	if ( ((int_64)$3 != (int_64)293455873288) ){ goto $label$4 }
	*($6 + [24]) = (int_64)293455873288
	$2 = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 $1) * (float_64)(float_64)1e7))
	*($6 + [16]) = $2
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [976])
	$3 = (int_64)1146312005
	$4 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$34 }
	
.LOOP $label$35:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$3 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$35 }
	
.LABEL $label$34
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$33 }
	goto $label$2 
	
.LABEL $label$6
	$5 = [0]
	
.LABEL $label$5
	CALL eosio_assert($5, [1040])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)297481618436), [3392])
	CALL eosio_assert(((int_64)*($0) >= (int_64)$2), [4192])
	$1 = ((int_64)$1 * (int_64)10000000)
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [976])
	$3 = (int_64)1162037572
	$4 = [0]
	
.LOOP $label$38:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$37 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$39 }
	
.LOOP $label$40:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$37 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$40 }
	
.LABEL $label$39
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$38 }
	goto $label$36 
	
.LABEL $label$37
	$5 = [0]
	
.LABEL $label$36
	CALL eosio_assert($5, [1040])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)297481618436), [3392])
	CALL eosio_assert(((int_64)*($0) <= (int_64)$1), [4240])
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert([0], [3264])
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	
.LABEL $label$2
	CALL eosio_assert($5, [1040])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)293455873288), [3392])
	CALL eosio_assert(((int_64)*($0) >= (int_64)$2), [4288])
	CALL prints([64])
	CALL prints([1424])
	CALL prints([112])
	CALL printi((int_64)41)
	CALL prints([112])
	CALL prints([3968])
	CALL $60($0)
	CALL prints([4336])
	CALL $60(($6 + [16]))
	CALL prints([4352])
	CALL printdf((float_64)1e7)
	CALL prints([144])
	*($6 + [8]) = (int_64)293455873288
	$3 = ((int_64)$1 * (int_64)10000000000)
	*($6) = $3
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [976])
	$3 = (int_64)1146312005
	$4 = [0]
	
.LOOP $label$43:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$42 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$44 }
	
.LOOP $label$45:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$42 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$45 }
	
.LABEL $label$44
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$43 }
	goto $label$41 
	
.LABEL $label$42
	$5 = [0]
	
.LABEL $label$41
	CALL eosio_assert($5, [1040])
	CALL prints([64])
	CALL prints([1424])
	CALL prints([112])
	CALL printi((int_64)44)
	CALL prints([112])
	CALL prints([3968])
	CALL $60($0)
	CALL prints([4384])
	CALL $60($6)
	CALL prints([4400])
	CALL printi((int_64)10000000000)
	CALL prints([144])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)*(($6 + [8]))), [3392])
	CALL eosio_assert(((int_64)*($0) <= (int_64)*($6)), [4432])
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [32])
}

int_32 .FUNC $101 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [13494]) == 0) ){ goto $label$2 }
	$7 = *([0] + [13496])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [13494]) = [1]
	$7 = ($7 << [16])
	*([0] + [13496]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [13496])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [13496]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [13494]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [13494]) = [1]
	$3 = ($3 << [16])
	*([0] + [13496]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [13496])
	
.LABEL $label$8
	*([0] + [13496]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

int_32 .FUNC $100 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $101($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [13408])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $103 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [13500])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [13392])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [13200]
	$1 = (((int_32)$2 * (int_32)[12]) + [13200])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

void .FUNC $105 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $104 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

int_32 .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [704])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$6 = *($1)
	$2 = *($1 + [4])
	$7 = ((int_32)($2 - $6) / (int_32)[40])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$7) ){ goto $label$3 }
	CALL $96($1, ($4 - $7))
	$2 = *(($1 + [4]))
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$4 >= (uint_32)$7) ){ goto $label$2 }
	$4 = ((int_32)$4 * (int_32)[40])
	$3 = ($6 + $4)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$4 }
	$6 = (([0] - $6) - $4)
	$4 = ($2 + [-24])
	
.LOOP $label$5:
	$7 = *(($4 + [12]))
	if ( ($7 == 0) ){ goto $label$6 }
	*(($4 + [16])) = $7
	CALL $104($7)
	
.LABEL $label$6
	$7 = *($4)
	if ( ($7 == 0) ){ goto $label$7 }
	*(($4 + [4])) = $7
	CALL $104($7)
	
.LABEL $label$7
	$4 = ($4 + [-40])
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$5 }
	
.LABEL $label$4
	*(($1 + [4])) = $3
	$2 = $3
	
.LABEL $label$2
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	$4 = ($0 + [4])
	
.LOOP $label$9:
	$6 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($6) - *($4)) > (uint_32)[7]), [688])
	CALL memcpy($7, *($4), [8])
	$3 = (*($4) + [8])
	*($4) = $3
	CALL eosio_assert(((uint_32)(*($6) - $3) > (uint_32)[7]), [688])
	CALL memcpy(($7 + [8]), *($4), [8])
	*($4) = (*($4) + [8])
	CALL $31(CALL $97($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$9 }
	
.LABEL $label$8
	return $0
}

int_32 .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [688])
	CALL memcpy($1, *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [688])
	CALL memcpy(($1 + [4]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [688])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	$6 = [0]
	$5 = (int_64)0
	
.LOOP $label$1:
	CALL eosio_assert(($4 <= *(($0 + [8]))), [704])
	$7 = ($0 + [4])
	$4 = *($7)
	$2 = *($4)
	$4 = ($4 + [1])
	*($7) = $4
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($2 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($2 >> [7]) ){ goto $label$1 }
	*($1 + [12]) = $5
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)*($3) != (int_32)$4), [688])
	$4 = ($0 + [4])
	CALL memcpy(($1 + [16]), *($4), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	$7 = [0]
	$5 = (int_64)0
	
.LOOP $label$2:
	CALL eosio_assert(($6 <= *($3)), [704])
	$6 = *($4)
	$2 = *($6)
	$6 = ($6 + [1])
	*($4) = $6
	$7 = ($7 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($2 & [127]) << $7)) | (int_64)$5)
	$7 = ($7 + [7])
	if ( uint_32($2 >> [7]) ){ goto $label$2 }
	*($1 + [20]) = $5
	return $0
}

void .FUNC $87 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10, int_32 $11)
{
	CALL prints($0)
	CALL prints($1)
	CALL printn(*($2))
	CALL prints($3)
	CALL printn(*($4))
	CALL prints($5)
	CALL $60($6)
	CALL prints($7)
	$7 = *($8)
	$6 = ($7 & [1])
	CALL prints_l(( *($8 + [8]) ? ($8 + [1]) : $6 ), ( *($8 + [4]) ? uint_32($7 >> [1]) : $6 ))
	CALL prints($9)
	CALL printn(*($10))
	CALL prints($11)
}

void .FUNC $86 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10, int_32 $11)
{
	CALL prints($0)
	CALL prints($1)
	CALL printn(*($2))
	CALL prints($3)
	CALL printn(*($4))
	CALL prints($5)
	CALL $60($6)
	CALL prints($7)
	$7 = *($8)
	$6 = ($7 & [1])
	CALL prints_l(( *($8 + [8]) ? ($8 + [1]) : $6 ), ( *($8 + [4]) ? uint_32($7 >> [1]) : $6 ))
	CALL prints($9)
	CALL printn(*($10))
	CALL prints($11)
}

void .FUNC $85 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	*(($5 + [44])) = *(($1 + [28]))
	*(($4 = (($5 + [32]) + [8]))) = *(($1 + [24]))
	*($5 + [32]) = *($1 + [16])
	*($5 + [36]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $114(($5 + [16]), ($1 + [32]))
	*((($5 + [48]) + [8])) = *($4)
	*($5 + [48]) = *($5 + [32])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($5 + [80]) + [8]))) = *((($5 + [48]) + [8]))
	*($5 + [80]) = *($5 + [48])
	CALL $114(($5 + [64]), ($5 + [16]))
	*(($5 + [8])) = *($4)
	*($5) = *($5 + [80])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 $5), (int_32 ($5 + [64])), (int_32 $1))
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $104(*($5 + [72]))
	
.LABEL $label$2
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $104(*($5 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [96])
}

void .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$7 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$6 = ($7 + [1])
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$2 }
	$5 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$5 = ( $6 ? $8 : ($8 <= $6) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $103(((int_32)$5 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $113($0)
	
.LABEL $label$1
	*(($8 = ($6 + ((int_32)$7 * (int_32)[40])))) = *($1)
	*($8 + [16]) = *($1 + [16])
	*(($8 + [8])) = *(($1 + [8]))
	$7 = ($1 + [20])
	*(($8 + [20])) = *($7)
	*($7) = [0]
	$7 = ($1 + [24])
	$3 = *($7)
	*($7) = [0]
	*(($8 + [24])) = $3
	*($1 + [16]) = [0]
	*($8 + [28]) = *($1 + [28])
	$7 = ($1 + [32])
	*(($8 + [32])) = *($7)
	$3 = ($1 + [36])
	$4 = *($3)
	*($3) = [0]
	*(($8 + [36])) = $4
	*($7) = [0]
	*($1 + [28]) = [0]
	$4 = ($6 + ((int_32)$5 * (int_32)[40]))
	$2 = ($8 + [40])
	$1 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$6 }
	$3 = ([0] - $1)
	$1 = ($5 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($1 + [-12]))
	*(($8 + [-40])) = *(($1 + [-20]))
	*(($5 = ($8 + [-24]))) = (int_64)0
	*(($6 = ($8 + [-16]))) = [0]
	$7 = ($1 + [-4])
	*($5) = *($7)
	*(($8 + [-20])) = *($1)
	$5 = ($1 + [4])
	*($6) = *($5)
	*($5) = [0]
	*(($5 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($6 = ($8 + [-4]))) = [0]
	$7 = ($1 + [8])
	*($5) = *($7)
	*(($8 + [-8])) = *(($1 + [12]))
	$5 = ($1 + [16])
	*($6) = *($5)
	*($5) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$1 = ($1 + [-40])
	if ( ((int_32)($1 + $3) != (int_32)[-20]) ){ goto $label$7 }
	$1 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $1
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $2
	*(($0 + [8])) = $4
	if ( ((int_32)$1 == (int_32)$6) ){ goto $label$8 }
	$5 = ([0] - $6)
	$8 = ($1 + [-24])
	
.LOOP $label$9:
	$1 = *(($8 + [12]))
	if ( ($1 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $1
	CALL $104($1)
	
.LABEL $label$10
	$1 = *($8)
	if ( ($1 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $1
	CALL $104($1)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $5) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $104($6)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $83 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [64])
	*([0] + [4]) = $5
	*(($5 + [28])) = *(($1 + [28]))
	*(($4 = (($5 + [16]) + [8]))) = *(($1 + [24]))
	*($5 + [16]) = *($1 + [16])
	*($5 + [20]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $114($5, ($1 + [32]))
	*((($5 + [32]) + [8])) = *($4)
	*($5 + [32]) = *($5 + [16])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	CALL $114(($5 + [48]), $5)
	CALL void $0((int_32 $2), (int_64 $3), (int_64 ($5 + [32])), (int_32 ($5 + [48])), (int_32 $1))
	if ( ((*($5 + [48]) & [1]) == 0) ){ goto $label$2 }
	CALL $104(*($5 + [56]))
	
.LABEL $label$2
	if ( ((*($5) & [1]) == 0) ){ goto $label$3 }
	CALL $104(*($5 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [64])
}

void .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [688])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [688])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [688])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [688])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $29(*($1), ($0 + [32]))
}

void .FUNC $81 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	if ( ($1 == 0) ){ goto $label$1 }
	CALL printui(*($0))
	CALL prints([4512])
	
.LABEL $label$1
	$2 = *($0)
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)8)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)16)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)24)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)40)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)56)
	*($3 + [15]) = $0)
	if ( ($0 == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	
.LABEL $label$2
	*([0] + [4]) = ($3 + [16])
}

void .FUNC $80 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8)
{
	int_32 $9
	CALL prints($0)
	$0 = *($1)
	$9 = ($0 & [1])
	CALL prints_l(( *($1 + [8]) ? ($1 + [1]) : $9 ), ( *($1 + [4]) ? uint_32($0 >> [1]) : $9 ))
	CALL prints($2)
	$1 = *($3)
	$2 = ($1 & [1])
	CALL prints_l(( *($3 + [8]) ? ($3 + [1]) : $2 ), ( *($3 + [4]) ? uint_32($1 >> [1]) : $2 ))
	CALL prints($4)
	$3 = *($5)
	$1 = ($3 & [1])
	CALL prints_l(( *($5 + [8]) ? ($5 + [1]) : $1 ), ( *($5 + [4]) ? uint_32($3 >> [1]) : $1 ))
	CALL prints($6)
	$5 = *($7)
	$3 = ($5 & [1])
	CALL prints_l(( *($7 + [8]) ? ($7 + [1]) : $3 ), ( *($7 + [4]) ? uint_32($5 >> [1]) : $3 ))
	CALL prints($8)
}

void .FUNC $72 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$8 = *($0)
	$9 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$5 = ($9 + [1])
	if ( ((uint_32)$5 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$7 = ($8 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = CALL $103(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $113($0)
	
.LABEL $label$1
	$5 = ($8 + ((int_32)$7 * (int_32)[40]))
	$9 = ($8 + ((int_32)$9 * (int_32)[40]))
	$8 = CALL $44($9, $1, *($2), *($3), $4)
	$6 = ($8 + [40])
	$7 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$6 }
	$4 = ([0] - $7)
	$7 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($7 + [-12]))
	*(($8 + [-40])) = *(($7 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($2 = ($8 + [-16]))) = [0]
	$3 = ($7 + [-4])
	*($1) = *($3)
	*(($8 + [-20])) = *($7)
	$1 = ($7 + [4])
	*($2) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($3) = (int_64)0
	*(($2 = ($8 + [-4]))) = [0]
	$3 = ($7 + [8])
	*($1) = *($3)
	*(($8 + [-8])) = *(($7 + [12]))
	$8 = ($7 + [16])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$9 = ($9 + [-40])
	$8 = $9
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $4) != (int_32)[-20]) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$1 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$1 = $7
	
.LABEL $label$5
	*($0) = $9
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$8 }
	$9 = ([0] - $1)
	$7 = ($7 + [-24])
	
.LOOP $label$9:
	$8 = *(($7 + [12]))
	if ( ($8 == 0) ){ goto $label$10 }
	*(($7 + [16])) = $8
	CALL $104($8)
	
.LABEL $label$10
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$11 }
	*(($7 + [4])) = $8
	CALL $104($8)
	
.LABEL $label$11
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $9) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $104($1)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $73 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$8 = *($0)
	$9 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$5 = ($9 + [1])
	if ( ((uint_32)$5 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$7 = ($8 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = CALL $103(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $113($0)
	
.LABEL $label$1
	$5 = ($8 + ((int_32)$7 * (int_32)[40]))
	$9 = ($8 + ((int_32)$9 * (int_32)[40]))
	$8 = CALL $74($9, $1, *($2), *($3), $4)
	$6 = ($8 + [40])
	$7 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$6 }
	$4 = ([0] - $7)
	$7 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($7 + [-12]))
	*(($8 + [-40])) = *(($7 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($2 = ($8 + [-16]))) = [0]
	$3 = ($7 + [-4])
	*($1) = *($3)
	*(($8 + [-20])) = *($7)
	$1 = ($7 + [4])
	*($2) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($3) = (int_64)0
	*(($2 = ($8 + [-4]))) = [0]
	$3 = ($7 + [8])
	*($1) = *($3)
	*(($8 + [-8])) = *(($7 + [12]))
	$8 = ($7 + [16])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$9 = ($9 + [-40])
	$8 = $9
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $4) != (int_32)[-20]) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$1 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$1 = $7
	
.LABEL $label$5
	*($0) = $9
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$8 }
	$9 = ([0] - $1)
	$7 = ($7 + [-24])
	
.LOOP $label$9:
	$8 = *(($7 + [12]))
	if ( ($8 == 0) ){ goto $label$10 }
	*(($7 + [16])) = $8
	CALL $104($8)
	
.LABEL $label$10
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$11 }
	*(($7 + [4])) = $8
	CALL $104($8)
	
.LABEL $label$11
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $9) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $104($1)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $32($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [928])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [928])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $42(CALL $43($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $71 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$7 = ( $6 ? $8 : ($8 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $103(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $113($0)
	
.LABEL $label$1
	*(($8 = ($6 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($8 + [8]) = *($3)
	*($8 + [16 align=4]) = (int_64)0
	*(($3 = ($8 + [24]))) = [0]
	$2 = CALL $103([16])
	*($8 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($8 + [20])) = $5
	*($8 + [28]) = [0]
	*(($2 = ($8 + [32]))) = [0]
	*(($8 + [36])) = [0]
	CALL $32(($8 + [28]), [20])
	$2 = *($8 + [28])
	$1 = (*($2) - $2)
	CALL eosio_assert(((int_32)$1 > (int_32)[7]), [928])
	CALL memcpy($2, $4, [8])
	CALL eosio_assert(((int_32)($1 + [-8]) > (int_32)[7]), [928])
	CALL memcpy(($2 + [8]), ($4 + [8]), [8])
	CALL eosio_assert(((int_32)($1 + [-16]) > (int_32)[3]), [928])
	CALL memcpy(($2 + [16]), ($4 + [16]), [4])
	$3 = ($6 + ((int_32)$7 * (int_32)[40]))
	$5 = ($8 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$6 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($2 + [-12]))
	*(($8 + [-40])) = *(($2 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($4 = ($8 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($8 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($4) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($4 = ($8 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($8 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($4) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $6) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $2
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $5
	*(($0 + [8])) = $3
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$1 = ([0] - $4)
	$8 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($8 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $2
	CALL $104($2)
	
.LABEL $label$10
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $2
	CALL $104($2)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL $104($4)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [928])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [928])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [928])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [12])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [928])
	CALL memcpy(*($0 + [4]), $2, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $77 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	float_64 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [96])
	$15 = $16
	*([0] + [4]) = $16
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [3584])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [3632])
	$10 = ((int_64)*($1 + [8]) + (int_64)1)
	*($1 + [8]) = $10
	$13 = ((int_64)*($1 + [16]) + (int_64)*(*($2)))
	*($1 + [16]) = $13
	$9 = *($2 + [8])
	$3 = *($1)
	$11 = ((float_64)*(*($2 + [4])) + (float_64)*($1 + [24]))
	*($1 + [24]) = $11
	$6 = ($1 + [24])
	$5 = ($1 + [16])
	$4 = ($1 + [8])
	if ( ((uint_64)$13 > (uint_64)(int_64)2) ){ goto $label$2 }
	$13 = $3
	if ( ((((uint_64)$10 > (uint_64)(int_64)9) & ((float_64)$11 >= (float_64)(float_64)10)) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$12 = *($2 + [12])
	$13 = *($12)
	$10 = *($9)
	*($15 + [8]) = $10
	*($15 + [16]) = $13
	*($15 + [24]) = (int_64)-1
	$14 = [0]
	*($15 + [32]) = [0]
	*(($15 + [36])) = [0]
	*(($15 + [40])) = [0]
	$12 = CALL db_find_i64($10, $13, (int_64)-5918304704032407552, *($12))
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$9 }
	$14 = CALL $51(($15 + [8]), $12)
	CALL eosio_assert(((int_32)*($14 + [24]) == (int_32)($15 + [8])), [752])
	if ( (uint_64)(*($14 + [16]) <= (int_64)3) ){ goto $label$8 }
	CALL eosio_assert([0], [3696])
	$9 = *($15 + [32])
	if ( $9 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$9
	$12 = *($2 + [16])
	$7 = *($9)
	CALL eosio_assert(((int_64)$10 == (int_64)CALL $fimport$2()), [864])
	*(($2 = CALL $103([40])) + [8]) = (int_64)1398362884
	*($2) = (int_64)0
	CALL eosio_assert([1], [976])
	$8 = ($2 + [8])
	$13 = (int_64)5462355
	
.LOOP $label$11:
	$9 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$9 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	CALL eosio_assert($9, [1040])
	*($2 + [24]) = ($15 + [8])
	$13 = *(($12 + [8]))
	*($2 + [16]) = (int_64)1
	*(($14 = ($2 + [8]))) = $13
	CALL eosio_assert([1], [928])
	CALL memcpy(($15 + [48]), $2, [8])
	CALL eosio_assert([1], [928])
	CALL memcpy((($15 + [48]) | [8]), $8, [8])
	CALL eosio_assert([1], [928])
	CALL memcpy((($15 + [48]) + [16]), ($2 + [16]), [8])
	$13 = (uint_64)*($14) >> (uint_64)(int_64)8
	$9 = CALL db_store_i64(*((($15 + [8]) + [8])), (int_64)-5918304704032407552, $7, $13), ($15 + [48]), [24]
	*($2 + [28]) = $9)
	$12 = (($15 + [8]) + [16])
	if ( (uint_64)($13 <= *($12)) ){ goto $label$14 }
	*($12) = ((int_64)$13 + (int_64)1)
	
.LABEL $label$14
	*($15 + [88]) = $2
	$13 = (uint_64)*($14) >> (uint_64)(int_64)8
	*($15 + [48]) = $13)
	*($15 + [84]) = $9
	$12 = ($15 + [36])
	$14 = *($12)
	if ( ((uint_32)$14 >= (uint_32)*(($15 + [40]))) ){ goto $label$7 }
	*($14 + [8]) = $13
	*($14 + [16]) = $9
	*($15 + [88]) = [0]
	*($14) = $2
	*($12) = ($14 + [24])
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([1], [3536])
	CALL eosio_assert(((int_32)*(($14 + [24])) == (int_32)($15 + [8])), [3584])
	CALL eosio_assert(((int_64)*($15 + [8]) == (int_64)CALL $fimport$2()), [3632])
	*(($2 = ($14 + [16]))) = ((int_64)*($2) + (int_64)1)
	$13 = *($14 + [8])
	CALL eosio_assert([1], [3728])
	CALL eosio_assert([1], [928])
	CALL memcpy(($15 + [48]), $14, [8])
	CALL eosio_assert([1], [928])
	CALL memcpy((($15 + [48]) | [8]), ($14 + [8]), [8])
	CALL eosio_assert([1], [928])
	CALL memcpy((($15 + [48]) + [16]), $2, [8])
	CALL db_update_i64(*($14 + [28]), (int_64)0, ($15 + [48]), [24])
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( (uint_64)($13) <= *((($15 + [8]) + [16]))) ){ goto $label$5 }
	*(($15 + [24])) = ((int_64)$13 + (int_64)1)
	$9 = *($15 + [32])
	if ( $9 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$7
	CALL $54(($15 + [32]), ($15 + [88]), ($15 + [48]), ($15 + [84]))
	
.LABEL $label$6
	$14 = *($15 + [88])
	*($15 + [88]) = [0]
	if ( ($14 == 0) ){ goto $label$5 }
	CALL $104($14)
	
.LABEL $label$5
	$9 = *($15 + [32])
	if ( ($9 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$12 = ($15 + [36])
	$14 = *($12)
	if ( ((int_32)$14 == (int_32)$9) ){ goto $label$16 }
	
.LOOP $label$17:
	$14 = ($14 + [-24])
	$2 = *($14)
	*($14) = [0]
	if ( ($2 == 0) ){ goto $label$18 }
	CALL $104($2)
	
.LABEL $label$18
	if ( ((int_32)$9 != (int_32)$14) ){ goto $label$17 }
	$14 = *(($15 + [32]))
	goto $label$15 
	
.LABEL $label$16
	$14 = $9
	
.LABEL $label$15
	*($12) = $9
	CALL $104($14)
	
.LABEL $label$3
	$13 = *($1)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$3 == (int_64)$13), [3728])
	$2 = $16
	$14 = ($2 + [-32])
	*([0] + [4]) = $14
	*($15 + [52]) = $14
	*($15 + [48]) = $14
	*($15 + [56]) = $2
	*($15 + [88]) = ($15 + [48])
	*($15 + [12]) = $4
	*($15 + [16]) = $5
	*($15 + [20]) = $6
	*($15 + [8]) = $1
	CALL $76(($15 + [8]), ($15 + [88]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $14, [32])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$19 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$19
	*([0] + [4]) = ($15 + [96])
}

int_32 .FUNC $74 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $103([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $32($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = $1
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	CALL $75(($9 + [24]), ($9 + [16]))
	*([0] + [4]) = ($9 + [32])
	return $0
}

int_32 .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [928])
	CALL memcpy(*($0 + [4]), $1, [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[1]), [928])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$4 = (*($0 + [4]) + [2])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[3]), [928])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$5 = (*($0 + [4]) + [4])
	*($0 + [4]) = $5
	$6 = *($1 + [12])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$2 = ((int_64)$6) != (int_64)0
	*($7 + [14]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) > (int_32)[0]), [928])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [14]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $2 ){ goto $label$1 }
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [928])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($1 + [16]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	$6 = *($1 + [20])
	
.LOOP $label$2:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$1 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($1) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [928])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $1 ){ goto $label$2 }
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $36 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $103(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $113($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $104($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $104($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $37 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($0 + [52])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$3 }
	$2 = ([0] - $1)
	$5 = ($5 + [-12])
	
.LOOP $label$4:
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$5 }
	*(($5 + [4])) = $3
	CALL $104($3)
	
.LABEL $label$5
	$5 = ($5 + [-16])
	if ( ((int_32)($5 + $2) != (int_32)[-12]) ){ goto $label$4 }
	$5 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $104($5)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$4 = ($0 + [40])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$9:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($5 + [16])) = $3
	CALL $104($3)
	
.LABEL $label$10
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$11 }
	*(($5 + [4])) = $3
	CALL $104($3)
	
.LABEL $label$11
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$9 }
	$5 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($4) = $1
	CALL $104($5)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$14 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$15:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$16 }
	*(($5 + [16])) = $3
	CALL $104($3)
	
.LABEL $label$16
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$17 }
	*(($5 + [4])) = $3
	CALL $104($3)
	
.LABEL $label$17
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$15 }
	$5 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$13
	*($4) = $1
	CALL $104($5)
	
.LABEL $label$12
	return $0
}

int_32 .FUNC $78 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [92]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [3920])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)5445040692176502784)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [3856])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [3856])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $55(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [928])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [928])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [928])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [928])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [928])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [928])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [928])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [928])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [928])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [928])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [928])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [928])
	CALL memcpy(*($0 + [4]), ($1 + [84]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

void .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $103($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $113($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $104($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [944])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $103([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [688])
	CALL memcpy($6, $7, [8])
	*($6 + [12]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [12])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $36(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $104($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $30 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $114($5, ($1 + [16]))
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	CALL $114(($5 + [16]), $5)
	CALL void $0((int_32 $2), (int_64 $3), (int_64 ($5 + [16])), (int_32 $1))
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $104(*($5 + [24]))
	
.LABEL $label$2
	if ( ((*($5) & [1]) == 0) ){ goto $label$3 }
	CALL $104(*($5 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [32])
}

int_32 .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [704])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $32($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [688])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}