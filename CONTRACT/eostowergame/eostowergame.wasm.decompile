(data (i32.const 8192) "pushresult\00")
(data (i32.const 8203) "There is no search history for this condition.\00malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 8336) "PVP\00")
(data (i32.const 8340) "eostowergame\00")
(data (i32.const 8353) "active\00")
(data (i32.const 8360) "sendfreepvp\00")
(data (i32.const 8372) "free game participate bonus 0.4000 PVP\00")
(data (i32.const 8411) "EOS\00")
(data (i32.const 8415) "You have no game to be refunded.\00")
(data (i32.const 8448) "replaydotcom\00%d\00")
(data (i32.const 8464) "tr1replaydot\00")
(data (i32.const 8477) "PVP_\00")
(data (i32.const 8482) "Invalid asset\00")
(data (i32.const 8496) "\00\e8vH\17\00\00\00\00\\\b2\ec\"\00\00\00\00\d0\ed\90.\00\00\00\00D)5:\00\00\00\00\b8d\d9E\00\00\00\00,\a0}Q\00\00\00\00\a0\db!]\00\00\00\00\14\17\c6h\00\00\00\00\88Rjt\00\00\00\00\fc\8d\0e\80\00\00\00\00p\c9\b2\8b\00\00\00\00\e4\04W\97\00\00\00\00X@\fb\a2\00\00\00")
(data (i32.const 8608) "\c0\d4\01\00\00\00\00\00\a0\86\01\00\00\00\00\00P\c3\00\00\00\00\00\00\a8a\00\00\00\00\00\00\d40\00\00\00\00\00\00j\18\00\00\00\00\00\005\0c\00\00\00\00\00\00\1b\06\00\00\00\00\00\00\0d\03\00\00\00\00\00\00\87\01\00\00\00\00\00\00\c3\00\00\00\00\00\00\00b\00\00\00\00\00\00\001\00\00\00\00\00\00\00")
(data (i32.const 8712) "eosio.token\00")
(data (i32.const 8724) "transfer\00%llu\00")
(data (i32.const 8738) "receiving from pvpgame\00")
(data (i32.const 8761) "sendbonus\00")
(data (i32.const 8771) "game participate bonus\00")
(data (i32.const 8794) "notifyresult\00")
(data (i32.const 8807) "{\"type\":1}\00")
(data (i32.const 8818) "{\"type\":2,\"user1\":\"\00")
(data (i32.const 8838) "\",\"score1\":\00")
(data (i32.const 8850) ",\"time1\":\00")
(data (i32.const 8860) ",\"user2\":\"\00")
(data (i32.const 8871) "\",\"score2\":\00")
(data (i32.const 8883) ",\"time2\":\00")
(data (i32.const 8893) ",\"result\":\00")
(data (i32.const 8904) ",\"bet_asset\":\"\00")
(data (i32.const 8919) "\",\"start_time\":\00")
(data (i32.const 8935) ",\"end_time\":\00")
(data (i32.const 8948) ",\"bonus_asset1\":\"\00")
(data (i32.const 8966) "\",\"bonus_asset2\":\"\00")
(data (i32.const 8985) "\"}\00")
(data (i32.const 8988) "Must transfer EOS\00")
(data (i32.const 9006) "Must execute pvpgame contract\00")
(data (i32.const 9036) "string is too long to be a valid name\00")
(data (i32.const 9074) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 9141) "character is not in allowed character set for names\00")
(data (i32.const 9193) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 9252) "multiplication overflow\00")
(data (i32.const 9276) "multiplication underflow\00")
(data (i32.const 9301) "string is too long to be a valid symbol_code\00")
(data (i32.const 9346) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 9399) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 9448) "invalid symbol name\00")
(data (i32.const 9468) "write\00")
(data (i32.const 9474) "attempt to add asset with different symbol\00")
(data (i32.const 9517) "addition underflow\00")
(data (i32.const 9536) "addition overflow\00")
(data (i32.const 9554) "error reading iterator\00")
(data (i32.const 9577) "read\00")
(data (i32.const 9582) "cannot increment end iterator\00")
(data (i32.const 9612) "attempt to subtract asset with different symbol\00")
(data (i32.const 9660) "subtraction underflow\00")
(data (i32.const 9682) "subtraction overflow\00")
(data (i32.const 9704) "\ec%\00\00")
(data (i32.const 9708) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 9741) "-%lld.%s %s\00")
(data (i32.const 9753) "%lld.%s %s\00")
(data (i32.const 9764) "get\00")
(data (i32.const 9768) "cannot pass end iterator to erase\00")
(data (i32.const 9802) "object passed to erase is not in multi_index\00")
(data (i32.const 9847) "cannot erase objects in table of another contract\00")
(data (i32.const 9897) "attempt to remove object that was not in multi_index\00")
(data (i32.const 9950) "cannot create objects in table of another contract\00")
(data (i32.const 10001) "next primary key in table is at autoincrement limit\00")
(data (i32.const 10053) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 10107) "cannot decrement iterator at beginning of table\00")
(data (i32.const 10155) "object passed to modify is not in multi_index\00")
(data (i32.const 10201) "cannot modify objects in table of another contract\00")
(data (i32.const 10252) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 10303) "eosio\00")
(data (i32.const 10309) "pvpgametoken\00")
(data (i32.const 10322) "pvpgameowner\00")
(data (i32.const 18752) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA")
(import "env" "require_auth2" (func $fimport$0 (param i64 i64)))
(import "env" "db_lowerbound_i64" (func $fimport$1 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$2 (param i32 i32) (result i32)))
(import "env" "eosio_assert" (func $fimport$3 (param i32 i32)))
(import "env" "current_time" (func $fimport$4 (result i64)))
(import "env" "current_receiver" (func $fimport$5 (result i64)))
(import "env" "memcpy" (func $fimport$6 (param i32 i32 i32) (result i32)))
(import "env" "__multi3" (func $fimport$7 (param i32 i64 i64 i64 i64)))
(import "env" "is_account" (func $fimport$8 (param i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$9 (param i64 i64 i64 i64) (result i32)))
(import "env" "send_inline" (func $fimport$10 (param i32 i32)))
(import "env" "require_auth" (func $fimport$11 (param i64)))
(import "env" "require_recipient" (func $fimport$12 (param i64)))
(import "env" "action_data_size" (func $fimport$13 (result i32)))
(import "env" "read_action_data" (func $fimport$14 (param i32 i32) (result i32)))
(import "env" "db_get_i64" (func $fimport$15 (param i32 i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$16 (param i32)))
(import "env" "db_idx64_find_primary" (func $fimport$17 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$18 (param i32)))
(import "env" "db_store_i64" (func $fimport$19 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_store" (func $fimport$20 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$21 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$22 (param i64 i64 i64) (result i32)))
(import "env" "db_update_i64" (func $fimport$23 (param i32 i64 i32 i32)))
(import "env" "db_idx64_update" (func $fimport$24 (param i32 i64 i32)))
(import "env" "abort" (func $fimport$25))
(import "env" "memset" (func $fimport$26 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$27 (param i32 i32 i32) (result i32)))
(import "env" "prints_l" (func $fimport$28 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$29 (param i64 i64 i64 i64) (result i32)))
(import "env" "__eqtf2" (func $fimport$30 (param i64 i64 i64 i64) (result i32)))
(import "env" "__multf3" (func $fimport$31 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$32 (param i32 i64 i64 i64 i64)))
(import "env" "__subtf3" (func $fimport$33 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$34 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$35 (param i64 i64) (result i32)))
(import "env" "__floatunsitf" (func $fimport$36 (param i32 i32)))
(import "env" "__fixtfsi" (func $fimport$37 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$38 (param i32 i32)))
(import "env" "__extenddftf2" (func $fimport$39 (param i32 f64)))
(import "env" "__extendsftf2" (func $fimport$40 (param i32 f32)))
(import "env" "__divtf3" (func $fimport$41 (param i32 i64 i64 i64 i64)))
(import "env" "__letf2" (func $fimport$42 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfdf2" (func $fimport$43 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$44 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$45 (param i64 i64) (result f32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$46 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$47 (param i32 i32) (result i32)))
(export "memory" (memory $0))
(export "__heap_base" (global $global$1))
(export "__data_end" (global $global$2))
(export "apply" (func $62))
(export "_Znwj" (func $98))
(export "_ZdlPv" (func $100))
(export "_Znaj" (func $99))
(export "_ZdaPv" (func $101))
(export "_ZnwjSt11align_val_t" (func $102))
(export "_ZnajSt11align_val_t" (func $103))
(export "_ZdlPvSt11align_val_t" (func $104))
(export "_ZdaPvSt11align_val_t" (func $105))
(table $0 13 13 anyfunc)
(elem (i32.const 1) $52 $50 $51 $42 $27 $46 $39 $49 $45 $1 $124 $126)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 18832))
(global $global$2 i32 (i32.const 18832))


int_32 .FUNC _Znwj (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $132($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [10336])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $132($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC _Znaj (int_32 $0)
{
	return CALL _Znwj($0)
}

int_32 .FUNC $94 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [60]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10107])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)4229865212519383040)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [10053])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10053])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $3(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9468])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9468])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9468])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9468])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9468])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $89(*($1), *($0 + [16]))
	$4 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [9468])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($1, $4, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9577])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9577])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9577])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9577])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $97 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9468])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9468])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9468])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9468])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

int_32 .FUNC $90 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [124]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10107])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-8279445702455590912)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [10053])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10053])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $47(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $91 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9468])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9468])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9468])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9468])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9468])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9468])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9468])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9468])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [9468])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [9468])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [9468])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [9468])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [9468])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [44])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [9468])
	$1 = *(($0 + [4]))
	
.LABEL $label$14
	CALL memcpy($1, $4, [8])
	$1 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $1
	*($2 + [8]) = *($4 + [8])
	if ( ((int_32)(*(($0 + [8])) - $1) > (int_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [9468])
	$1 = *(($0 + [4]))
	
.LABEL $label$15
	CALL memcpy($1, ($2 + [8]), [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [44])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [9577])
	$1 = *(($0 + [4]))
	
.LABEL $label$14
	CALL memcpy($4, $1, [8])
	$1 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $1
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $1) > (uint_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [9577])
	$1 = *(($0 + [4]))
	
.LABEL $label$15
	CALL memcpy(($2 + [8]), $1, [8])
	*($4 + [8]) = *($2 + [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $93 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$8 = ($global$0 - [16])
	$global$0 = $8
	$9 = *($0)
	$10 = *($9 + [4])
	$11 = *($10 + [128])
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$2 }
	$11 = *($9)
	$11 = CALL db_idx64_find_primary(*($11), *($11 + [8]), (int_64)-8279445702455590912, ($8 + [8]), *($10))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx64_remove($11)
	
.LABEL $label$1
	$9 = *($0)
	$10 = *($9 + [4])
	$11 = *(($10 + [132]))
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$4 }
	$11 = *($9)
	$11 = CALL db_idx64_find_primary(*($11), *($11 + [8]), (int_64)-8279445702455590911, ($8 + [8]), *($10))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx64_remove($11)
	
.LABEL $label$3
	$9 = *($0)
	$10 = *($9 + [4])
	$11 = *(($10 + [136]))
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$6 }
	$11 = *($9)
	$11 = CALL db_idx64_find_primary(*($11), *($11 + [8]), (int_64)-8279445702455590910, ($8 + [8]), *($10))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL db_idx64_remove($11)
	
.LABEL $label$5
	$9 = *($0)
	$10 = *($9 + [4])
	$11 = *(($10 + [140]))
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$8 }
	$11 = *($9)
	$11 = CALL db_idx64_find_primary(*($11), *($11 + [8]), (int_64)-8279445702455590909, ($8 + [8]), *($10))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$7 }
	
.LABEL $label$8
	CALL db_idx64_remove($11)
	
.LABEL $label$7
	$9 = *($0)
	$10 = *($9 + [4])
	$11 = *(($10 + [144]))
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$10 }
	$11 = *($9)
	$11 = CALL db_idx64_find_primary(*($11), *($11 + [8]), (int_64)-8279445702455590908, ($8 + [8]), *($10))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($11)
	
.LABEL $label$9
	$9 = *($0)
	$10 = *($9 + [4])
	$11 = *(($10 + [148]))
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$12 }
	$11 = *($9)
	$11 = CALL db_idx64_find_primary(*($11), *($11 + [8]), (int_64)-8279445702455590907, ($8 + [8]), *($10))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$11 }
	
.LABEL $label$12
	CALL db_idx64_remove($11)
	
.LABEL $label$11
	$11 = *($0)
	$9 = *($11 + [4])
	$0 = *(($9 + [152]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$14 }
	$0 = *($11)
	$0 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-8279445702455590906, ($8 + [8]), *($9))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$13 }
	
.LABEL $label$14
	CALL db_idx64_remove($0)
	
.LABEL $label$13
	$global$0 = ($8 + [16])
}

int_32 .FUNC $123 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	float_64 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	float_64 $24
	float_64 $25
	float_64 $26
	int_32 $27
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = ( $0 ? [11] : $1 )
	$7 = [0]
	
.LOOP $label$1:
	$9 = $7
	$10 = ([0] - $9)
	$0 = ($3 + [2])
	$11 = [0]
	$7 = *(($3 + [0]))
	if ( ($7 == 0) ){ goto $label$5 }
	
.LOOP $label$7:
	$12 = ($9 + $11)
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$6 }
	CALL void int_32(($7 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$10 = ($10 + [-1])
	$0 = ($0 + [1])
	$11 = ($11 + [1])
	$7 = *(($3 + $11))
	if ( $7 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$13 = [0]
	
.LOOP $label$9:
	$8 = ($0 + [-1])
	$7 = *($8)
	$14 = ($7 + [-32])
	if ( ((uint_32)$14 > (uint_32)[16]) ){ goto $label$8 }
	$3 = [1]
	goto $label$14 
	
.LABEL $label$14
	$3 = [8]
	goto $label$10 
	
.LABEL $label$13
	$3 = [16]
	goto $label$10 
	
.LABEL $label$12
	$3 = [4]
	goto $label$10 
	
.LABEL $label$11
	$3 = [2]
	
.LABEL $label$10
	$0 = ($0 + [1])
	$13 = ($13 | $3)
	goto $label$9 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$15 }
	$3 = [0]
	
.LOOP $label$16:
	$3 = ((((int_32)$3 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$16 }
	$14 = [0]
	if ( ((int_32)($7 & [255]) != (int_32)[46]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$15
	$3 = [0]
	if ( ((int_32)$7 != (int_32)[42]) ){ goto $label$17 }
	$7 = *($4)
	$13 = ( ($13 | [2]) ? $13 : ((int_32)$7 < (int_32)[0]) )
	$3 = int_32($7 >> [31])
	$3 = ((int_32)($7 + $3) ^ (int_32)$3)
	$4 = ($4 + [4])
	$14 = [0]
	$7 = *($0)
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$17
	$0 = $8
	$14 = [0]
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$0 = ($9 + $11)
	CALL void [0]((int_32 $1), (int_32 ( $0 ? ($2 + [-1]) : ($0 <= $2) )), (int_32 $2), (int_32 $6))
	$global$0 = ($5 + [32])
	return $0
	
.LABEL $label$4
	$8 = $0
	goto $label$2 
	
.LABEL $label$3
	$8 = ($0 + [1])
	$13 = ($13 | [1024])
	$7 = *($0 + [1])
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$18 }
	$14 = [0]
	
.LOOP $label$19:
	$14 = ((((int_32)$14 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$19 }
	$8 = $0
	goto $label$2 
	
.LABEL $label$18
	if ( ((int_32)($7 & [255]) != (int_32)[42]) ){ goto $label$2 }
	$7 = *($4)
	$14 = ( $7 ? [0] : ((int_32)$7 > (int_32)[0]) )
	$8 = ($0 + [2])
	$4 = ($4 + [4])
	$7 = *($0 + [2])
	
.LABEL $label$2
	$0 = (rotl((int_32) (int_32(($7 << [24]) >> [24]) + [-104])))
	if ( ((uint_32)$0 > (uint_32)[31]) ){ goto $label$23 }
	goto $label$26 
	
.LABEL $label$27
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	goto $label$23 
	
.LABEL $label$26
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[104]) ){ goto $label$22 }
	$8 = ($8 + [2])
	$13 = ($13 | [192])
	goto $label$23 
	
.LABEL $label$25
	$8 = ($8 + [1])
	$13 = ($13 | [512])
	goto $label$23 
	
.LABEL $label$24
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[108]) ){ goto $label$21 }
	$8 = ($8 + [2])
	$13 = ($13 | [768])
	
.LABEL $label$23
	$0 = *($8)
	goto $label$20 
	
.LABEL $label$22
	$8 = ($8 + [1])
	$13 = ($13 | [128])
	goto $label$20 
	
.LABEL $label$21
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	
.LABEL $label$20
	$15 = int_32(($0 << [24]) >> [24])
	$7 = ($15 + [-37])
	if ( ((uint_32)$7 > (uint_32)[83]) ){ goto $label$51 }
	goto $label$55 
	
.LABEL $label$62
	$11 = ($0 & [255])
	$7 = ($11 + [-88])
	if ( ((uint_32)$7 > (uint_32)[32]) ){ goto $label$60 }
	$0 = [8]
	$10 = [16]
	goto $label$59 
	
.LABEL $label$63
	$0 = [2]
	goto $label$58 
	
.LABEL $label$61
	$18 = ((float_64)$17 < (float_64)(float_64)0)
	$16 = (($4 + [7]) & [-8])
	$17 = *($16)
	$17 = ( (float_64))((float_64)0 - $17) ? $17 : $18 )
	$0 = ( $14 ? [6] : ($13 & [1024]) )
	if ( ($0 <= [10]) ){ goto $label$48 }
	$14 = [1]
	
.LOOP $label$65:
	*((($5 + ($7 = $14)) + [-1])) = [48]
	$14 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$64 }
	if ( ((uint_32)$0 > (uint_32)[9]) ){ goto $label$65 }
	
.LABEL $label$64
	$19 = ($7 <= [32])
	$14 = ($14 + [-1])
	goto $label$47 
	
.LABEL $label$60
	$13 = ($13 & [-17])
	$10 = [10]
	
.LABEL $label$59
	$13 = ( ($13 | [32]) ? $13 : ((int_32)$11 == (int_32)[88]) )
	if ( ((int_32)$11 == (int_32)[100]) ){ goto $label$57 }
	$0 = $10
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$56 }
	
.LABEL $label$58
	$13 = ($13 & [-13])
	goto $label$56 
	
.LABEL $label$57
	$0 = $10
	
.LABEL $label$56
	$7 = ( ($13 & [-2]) ? $13 : ($13 & [1024]) )
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$70 }
	if ( ((int_32)$11 != (int_32)[100]) ){ goto $label$69 }
	
.LABEL $label$70
	if ( ($7 & [512]) ){ goto $label$68 }
	if ( ($7 & [256]) ){ goto $label$67 }
	if ( ($7 & [64]) ){ goto $label$46 }
	$11 = *($4)
	$15 = ( int_32(($11 << [16]) >> [16]) ? $11 : ($7 & [128]) )
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$69
	if ( ($7 & [512]) ){ goto $label$66 }
	if ( ($7 & [256]) ){ goto $label$45 }
	if ( ($7 & [64]) ){ goto $label$44 }
	$11 = *($4)
	$11 = ( ($11 & [65535]) ? $11 : ($7 & [128]) )
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( ($11 == 0) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$68
	$9 = (($4 + [7]) & [-8])
	$20 = *($9)
	$11 = ((int_64)$20 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$72 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$71 }
	
.LABEL $label$72
	$21 = (CASTING uint_64)(uint_32 $0)
	$22 = (int_64)$20 >> (int_64)63
	$22 = ((int_64)((int_64)$20 + (int_64)$22)) ^ (int_64)$22)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$73:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$71 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$73 }
	
.LABEL $label$71
	$4 = ($9 + [8])
	$7 = CALL $125($6, $1, $12, $2, $5, $11, (CASTING uint_32)(uint_64 (uint_64)$20 >> (uint_64)(int_64)63)), $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$67
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$75 }
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$74 }
	
.LABEL $label$75
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$76:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$74 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$76 }
	
.LABEL $label$74
	$4 = ($4 + [4])
	$7 = CALL $125($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$66
	$9 = (($4 + [7]) & [-8])
	$22 = *($9)
	$11 = ((int_64)$22 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$78 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$77 }
	
.LABEL $label$78
	$21 = (CASTING uint_64)(uint_32 $0)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$79:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$77 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$79 }
	
.LABEL $label$77
	$4 = ($9 + [8])
	$7 = CALL $125($6, $1, $12, $2, $5, $11, [0], $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$55
	CALL void [37]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	goto $label$50 
	
.LABEL $label$54
	$10 = [1]
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$80 }
	$10 = [2]
	if ( ($3 <= [2]) ){ goto $label$80 }
	$0 = ($3 + [-1])
	$10 = ($3 + [1])
	
.LOOP $label$81:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$81 }
	$12 = ((($3 + $9) + $11) + [-1])
	
.LABEL $label$80
	CALL void *($4)((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$7 = ($12 + [1])
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$49 }
	if ( ((uint_32)$10 >= (uint_32)$3) ){ goto $label$49 }
	$0 = ($3 - $10)
	$11 = ($7 + $3)
	
.LOOP $label$82:
	CALL void [32]((int_32 $1), (int_32 $7), (int_32 $2), (int_32 $6))
	$7 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$82 }
	$7 = ($11 - $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$53
	$0 = *($4)
	$0 = ($13 | [33])
	$10 = ( $0 ? ($0 & [-17]) : $0 )
	if ( $0 ){ goto $label$84 }
	$11 = [0]
	if ( ($10 & [1024]) ){ goto $label$83 }
	
.LABEL $label$84
	$11 = [0]
	
.LOOP $label$85:
	$7 = ($0 & [15])
	*(($5 + $11)) = (( [48] ? [55] : ($7 <= [10]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$83 }
	$7 = ((uint_32)$0 > (uint_32)[15])
	$0 = uint_32($0 >> [4])
	if ( $7 ){ goto $label$85 }
	
.LABEL $label$83
	$4 = ($4 + [4])
	$7 = CALL $125($6, $1, $12, $2, $5, $11, [0], [16], $14, [8], $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$52
	$10 = *($4)
	$0 = ($10 + [-1])
	
.LOOP $label$86:
	$0 = ($0 + [1])
	if ( *($0) ){ goto $label$86 }
	$15 = ($13 & [1024])
	$0 = ($0 - $10)
	$7 = ( ( $0 ? $14 : ($0 <= $14) ) ? $0 : uint_32($15 >> [10]) )
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$39 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$40 }
	$0 = (($9 + ($3 - $7)) + $11)
	
.LOOP $label$87:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$7 = ($7 + [1])
	if ( ($7 <= $3) ){ goto $label$87 }
	$7 = ($3 + [1])
	$12 = $0
	$0 = *($10)
	if ( $0 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$51
	CALL void $15((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	
.LABEL $label$50
	$7 = ($12 + [1])
	
.LABEL $label$49
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$48
	$19 = [1]
	$14 = [0]
	
.LABEL $label$47
	$24 = *((($0 << [3]) + [18752]))
	$25 = ((float_64)(float_64))($17 - (Rounds 0)($17)) * (float_64)$24
	$26 = (float_64)
	$7 = ((float_64)$26($25) - (Rounds 0)($25))) > (float_64)(float_64)0.5)
	if ( (((float_64)$25 < (float_64)(float_64)4294967296) & ((float_64)$25 >= (float_64)(float_64)0)) ){ goto $label$89 }
	$4 = [0]
	goto $label$88 
	
.LABEL $label$89
	$4 = (CASTING uint_32)(float_64 $25)
	
.LABEL $label$88
	$7 = ((int_32)$7 ^ (int_32)[1])
	if ( ((float_64)(float_64)|$17| < (float_64)(float_64)2147483648) ){ goto $label$91 }
	$15 = [-2147483648]
	if ( ($7 == 0) ){ goto $label$90 }
	goto $label$36 
	
.LABEL $label$91
	$15 = (CASTING int_32)(float_64 $17)
	if ( $7 ){ goto $label$36 }
	
.LABEL $label$90
	$4 = ($4 + [1])
	if ( ((int_32)((float_64)$24 <= (float_64)(CASTING float_64)(uint_32 $4)) ^ (int_32)[1]) ){ goto $label$35 }
	$15 = ($15 + [1])
	$4 = [0]
	goto $label$35 
	
.LABEL $label$46
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( ($15 == 0) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$45
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$93 }
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$92 }
	
.LABEL $label$93
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$94:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$92 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$94 }
	
.LABEL $label$92
	$4 = ($4 + [4])
	$7 = CALL $125($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$44
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$42 }
	
.LABEL $label$43
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$41 }
	
.LABEL $label$42
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$95:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$41 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$95 }
	
.LABEL $label$41
	$4 = ($4 + [4])
	$7 = CALL $125($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$40
	$7 = ($7 + [1])
	
.LABEL $label$39
	$0 = *($10)
	if ( ($0 == 0) ){ goto $label$37 }
	
.LABEL $label$38
	if ( ($15 == 0) ){ goto $label$96 }
	$11 = ($10 + [1])
	
.LOOP $label$97:
	if ( ($14 == 0) ){ goto $label$37 }
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$14 = ($14 + [-1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$97 }
	goto $label$37 
	
.LABEL $label$96
	$11 = ($10 + [1])
	
.LOOP $label$98:
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$98 }
	
.LABEL $label$37
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$100 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$99 }
	$0 = ($3 - $7)
	$11 = ($12 + $3)
	
.LOOP $label$101:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$101 }
	$7 = ($11 - $7)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$100
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$99
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$36
	if ( ((float_64)$26 != (float_64)(float_64)0.5) ){ goto $label$35 }
	$4 = ((($4 & [1]) | ($4 == 0)) + $4)
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$35
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	
.LABEL $label$34
	if ( ($0 == 0) ){ goto $label$105 }
	$7 = [32]
	if ( ($19 == 0) ){ goto $label$102 }
	
.LOOP $label$107:
	$7 = ((uint_32)$4 / (uint_32)[10])
	*(($5 + $14)) = (($4 - ((int_32)$7 * (int_32)[10])) | [48])
	$0 = ($0 + [-1])
	$14 = ($14 + [1])
	if ( ($4 <= [10]) ){ goto $label$106 }
	$4 = $7
	if ( ($14 <= [32]) ){ goto $label$107 }
	
.LABEL $label$106
	$4 = ($14 <= [32])
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$108 }
	if ( ($0 == 0) ){ goto $label$108 }
	$19 = ($0 + [-1])
	$27 = ($5 + $14)
	$0 = [0]
	
.LOOP $label$110:
	*(($27 + $0)) = [48]
	$7 = ($0 + [1])
	$4 = (($14 + $0) + [1])
	if ( ((int_32)$19 == (int_32)$0) ){ goto $label$109 }
	$0 = $7
	if ( ($4 <= [32]) ){ goto $label$110 }
	
.LABEL $label$109
	$4 = ($4 <= [32])
	$14 = ($14 + $7)
	
.LABEL $label$108
	if ( ($4 == 0) ){ goto $label$103 }
	*(($5 + $14)) = [46]
	$7 = [32]
	$14 = ($14 + [1])
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$105
	$17 = (float_64)
	if ( ((int_32)((float_64)$17($17 - (CASTING float_64)(int_32 $15))) > (float_64)(float_64)0.5) ^ (int_32)[1]) ){ goto $label$111 }
	$15 = ($15 + [1])
	$7 = [32]
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$111
	$15 = ($15 + ($15 & ((float_64)$17 == (float_64)(float_64)0.5)))
	$7 = [32]
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$102 }
	
.LABEL $label$104
	$7 = $14
	
.LOOP $label$112:
	$0 = ((int_32)$15 / (int_32)[10])
	*(($5 + $7)) = (($15 - ((int_32)$0 * (int_32)[10])) + [48])
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$102 }
	$14 = ($15 + [9])
	$15 = $0
	if ( ((uint_32)$14 > (uint_32)[18]) ){ goto $label$112 }
	goto $label$102 
	
.LABEL $label$103
	$7 = $14
	
.LABEL $label$102
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ((int_32)($13 & [3]) != (int_32)[1]) ){ goto $label$113 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$113 }
	
.LOOP $label$114:
	*(($5 + $7)) = [48]
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ($7 <= $3) ){ goto $label$114 }
	
.LABEL $label$113
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$115 }
	$7 = ($3 - (((int_32)($13 & [12]) != (int_32)[0]) | $18))
	
.LABEL $label$115
	$0 = ($13 & [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$116 }
	if ( ((int_32)$18 ^ (int_32)[1]) ){ goto $label$118 }
	*(($5 + $7)) = [45]
	goto $label$117 
	
.LABEL $label$118
	if ( ($13 & [4]) ){ goto $label$119 }
	if ( (($13 & [8]) == 0) ){ goto $label$116 }
	*(($5 + $7)) = [32]
	goto $label$117 
	
.LABEL $label$119
	*(($5 + $7)) = [43]
	
.LABEL $label$117
	$7 = ($7 + [1])
	
.LABEL $label$116
	$14 = ($13 & [2])
	if ( $0 ){ goto $label$120 }
	if ( $14 ){ goto $label$120 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$120 }
	$0 = ($3 - $7)
	
.LOOP $label$121:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$121 }
	$12 = (($9 + ($3 - $7)) + $11)
	
.LABEL $label$120
	if ( ($7 == 0) ){ goto $label$122 }
	$0 = ($7 + [-1])
	$13 = $12
	
.LOOP $label$123:
	CALL void *(($5 + $0))((int_32 $1), (int_32 $13), (int_32 $2), (int_32 $6))
	$13 = ($13 + [1])
	$0 = ($0 + [-1])
	if ( ((int_32)$0 != (int_32)[-1]) ){ goto $label$123 }
	$12 = ($12 + $7)
	
.LABEL $label$122
	if ( ($14 == 0) ){ goto $label$31 }
	if ( ((uint_32)(($12 - $9) - $11) >= (uint_32)$3) ){ goto $label$32 }
	$0 = ($12 + $10)
	
.LOOP $label$124:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [1])
	if ( ($0 <= $3) ){ goto $label$124 }
	$7 = (($3 + $9) + $11)
	
.LABEL $label$33
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$32
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$31
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$30
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$28 }
	
.LABEL $label$29
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$125:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$28 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$125 }
	
.LABEL $label$28
	$4 = ($4 + [4])
	$7 = CALL $125($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	$14
	[9]
	$0
	$7
	return $7
}

int_32 .FUNC $115 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *($0)
	$5 = ($4 & [1])
	if ( $5 ){ goto $label$5 }
	$4 = uint_32($4 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = [10]
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$6
	if ( ((uint_32)($6 - $4) >= (uint_32)$3) ){ goto $label$10 }
	CALL $109($0, $6, (($4 + $3) - $6), $4, $1, [0], $3, $2)
	goto $label$9 
	
.LABEL $label$10
	if ( ($3 == 0) ){ goto $label$9 }
	if ( $5 ){ goto $label$8 }
	$5 = ($0 + [1])
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( ($1 == 0) ){ goto $label$7 }
	goto $label$2 
	
.LABEL $label$9
	return $0
	
.LABEL $label$8
	$5 = *($0 + [8])
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( $1 ){ goto $label$2 }
	
.LABEL $label$7
	CALL memmove($6, $2, $3)
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL memmove(($6 + $3), $6, $1)
	CALL memmove($6, ( ( ($2 + $3) ? $2 : ((uint_32)($5 + $4) > (uint_32)$2) ) ? $2 : ((uint_32)$6 <= (uint_32)$2) ), $3)
	
.LABEL $label$1
	$3 = ($4 + $3)
	if ( (*($0) & [1]) ){ goto $label$11 }
	*($0) = ($3 << [1])
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$11
	*($0 + [4]) = $3
	*(($5 + $3)) = [0]
	(unreachable)
	return $0
}

void .FUNC $122 (int_32 $0)
{
}

int_32 .FUNC $130 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $121())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $131($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $131 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $132($1)
	
.LABEL $label$2
	*(CALL $121()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $132(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $135($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

int_32 .FUNC $132 (int_32 $0)
{
	return CALL $133([10356], $0)
}

int_32 .FUNC $133 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [8384])
	if ( $2 ){ goto $label$2 }
	$2 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$3 = (($1 + [4]) & [7])
	$3 = ( (($1 + [8]) - $3) ? $1 : $3 )
	$4 = *($0 + [8388])
	if ( ((uint_32)$4 >= (uint_32)$2) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$4 * (int_32)[12])) + [8192])
	if ( $4 ){ goto $label$6 }
	$2 = ($0 + [8196])
	if ( *($2) ){ goto $label$6 }
	*($1) = [8192]
	*($2) = $0
	
.LABEL $label$6
	$4 = ($3 + [4])
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( ((uint_32)($2 + $4) > (uint_32)*($1)) ){ goto $label$8 }
	*(($2 = (*($1 + [4]) + $2))) = ((*($2) & [-2147483648]) | $3)
	*(($1 = ($1 + [8]))) = (*($1) + $4)
	*($2) = (*($2) | [-2147483648])
	$1 = ($2 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $134($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$5 = ([2147483644] - $3)
	$6 = ($0 + [8392])
	$7 = ($0 + [8384])
	$8 = *($0 + [8392])
	$2 = $8
	
.LOOP $label$9:
	$9 = ($1 + [8192])
	$1 = ($0 + ((int_32)$2 * (int_32)[12]))
	if ( ((int_32)*(($1 + [8200])) == (int_32)*($9)) ){ goto $label$10 }
	CALL eosio_assert([0], [8250])
	
.LABEL $label$10
	$10 = *(($1 + [8196]))
	$2 = ($10 + [4])
	
.LOOP $label$11:
	$11 = ($10 + *($9))
	$12 = ($2 + [-4])
	$13 = *($12)
	$1 = ($13 & [2147483647])
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$12 }
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($2 + $1)
	if ( ((uint_32)$4 >= (uint_32)$11) ){ goto $label$13 }
	$4 = *($4)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$13 }
	$1 = (($1 + ($4 & [2147483647])) + [4])
	if ( ($1 <= $3) ){ goto $label$14 }
	
.LABEL $label$13
	*($12) = (( $1 ? $3 : ($1 <= $3) ) | ($13 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$3) ){ goto $label$15 }
	*(($2 + $3)) = (($5 + $1) & [2147483647])
	
.LABEL $label$15
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$3 }
	
.LABEL $label$12
	$2 = (($2 + $1) + [4])
	if ( ($2 <= $11) ){ goto $label$11 }
	$1 = [0]
	$2 = (*($6) + [1])
	$2 = ( [0] ? $2 : ((int_32)$2 == (int_32)*($7)) )
	*($6) = $2
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($12) = (*($12) | [-2147483648])
	return $2
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $134 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [10348]) == 0) ){ goto $label$2 }
	$2 = *([0] + [10352])
	goto $label$1 
	
.LABEL $label$2
	$2 = (current_memory)
	*([0] + [10348]) = [1]
	$2 = ($2 << [16])
	*([0] + [10352]) = $2
	
.LABEL $label$1
	$3 = $2
	$5 = (current_memory)
	$4 = uint_32(($2 + [65535]) >> [16])
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$6 }
	($4 - $5)
	$5 = [0]
	if ( ((int_32)$4 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [10352])
	
.LABEL $label$6
	$5 = [0]
	*([0] + [10352]) = $3
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$4 = ((int_32)$1 * (int_32)[12])
	$5 = ($2 & [65535])
	if ( ((uint_32)$5 > (uint_32)[64512]) ){ goto $label$8 }
	$5 = (($2 + [65536]) - $5)
	goto $label$7 
	
.LABEL $label$8
	$5 = (($2 + [131072]) - ($2 & [131071]))
	
.LABEL $label$7
	$4 = ($0 + $4)
	$2 = ($5 - $2)
	if ( *([0] + [10348]) ){ goto $label$9 }
	$3 = (current_memory)
	*([0] + [10348]) = [1]
	$3 = ($3 << [16])
	*([0] + [10352]) = $3
	
.LABEL $label$9
	$4 = ($4 + [8192])
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$8 = (current_memory)
	$7 = (($2 + [7]) & [-8])
	$5 = uint_32((($7 + $3) + [65535]) >> [16])
	if ( ((uint_32)$5 <= (uint_32)$8) ){ goto $label$10 }
	($5 - $8)
	if ( ((int_32)$5 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [10352])
	
.LABEL $label$10
	*([0] + [10352]) = ($6 + $7)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$5 = *($4)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $5) == (int_32)$3) ){ goto $label$3 }
	$7 = ($1 + [8200])
	$1 = *($7)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$11 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $5))
	*($7) = *($4)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$11
	$4 = (*($4) + [1])
	*(($4 = ($0 + [8388]))) = $4
	*(($5 = (($0 = ($0 + ((int_32)$4 * (int_32)[12]))) + [8192]))) = $2
	*(($0 + [8196])) = $3
	
.LABEL $label$5
	return $5
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$2 = *($1)
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$12 }
	*(($3 = (*(($3 + [8196])) + $2))) = ((*($3) & [-2147483648]) | (([-4] - $2) + $5))
	*($1) = *($4)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$12
	$2 = ($0 + [8388])
	$3 = (*($2) + [1])
	*($0 + [8384]) = $3
	*($2) = $3
	return [0]
	
.LABEL $label$3
	*($4) = ($5 + $2)
	return $4
}

int_32 .FUNC $121 ()
{
	return [10340]
}

void .FUNC $120 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = *(*($4 + [4]))
	$5 = ($1 + [8])
	$6 = *($0)
	$7 = *(*($4 + [8]))
	if ( ((int_32)$7 != (int_32)[1]) ){ goto $label$2 }
	*($1 + [48]) = [3]
	$4 = ($1 + [48])
	goto $label$1 
	
.LABEL $label$2
	$4 = ($1 + [48])
	if ( ((int_32)$7 != (int_32)[2]) ){ goto $label$3 }
	*($4) = [1]
	goto $label$1 
	
.LABEL $label$3
	*($4) = [2]
	
.LABEL $label$1
	$7 = $2
	$2 = ($7 + [-64])
	$global$0 = $2
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($7 + [-12])
	*($3 + [16]) = $3
	*($3 + [28]) = $5
	*($3 + [24]) = $1
	*($3 + [32]) = ($1 + [16])
	*($3 + [36]) = ($1 + [24])
	*($3 + [40]) = ($1 + [32])
	*($3 + [44]) = ($1 + [40])
	*($3 + [48]) = $4
	*($3 + [52]) = ($1 + [49])
	*($3 + [56]) = ($1 + [50])
	*($3 + [60]) = ($1 + [51])
	CALL $88(($3 + [24]), ($3 + [16]))
	$8 = *($1)
	*($1 + [56]) = CALL db_store_i64(*($6 + [8]), (int_64)-7948142257121525760, *(*($0 + [8])), $8, $2, [52])
	if ( (uint_64)($8 <= *($6 + [16])) ){ goto $label$4 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$global$0 = ($3 + [64])
}

void .FUNC $126 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$1 }
	*(($1 + $2)) = $0
	
.LABEL $label$1
}

void .FUNC $49 (int_32 $0, int_64 $1, int_32 $2)
{
	CALL require_auth(*($0))
	CALL require_recipient($1)
}

void .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9802])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9847])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [9897])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL _ZdlPv($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [124]))
	*($2 + [4]) = $1
	*($2) = $0
	*($2 + [8]) = $2
	CALL $93(($2 + [8]), ($0 + [36]), ($0 + [37]), ($0 + [38]), ($0 + [39]), ($0 + [40]), ($0 + [41]), ($0 + [42]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $125 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10)
{
	int_32 $11
	$11 = ($10 & [2])
	if ( $11 ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$1 }
	
.LOOP $label$2:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ($5 <= [32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)($10 & [3]) != (int_32)[1]) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$3 }
	
.LOOP $label$4:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ($5 <= [32]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( (($10 & [16]) == 0) ){ goto $label$5 }
	if ( ($10 & [1024]) ){ goto $label$11 }
	if ( ($5 == 0) ){ goto $label$11 }
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$10 }
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_32)$7 != (int_32)[16]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$5 = ($5 + [-1])
	$5 = ( ( ($5 + [-2]) ? $5 : $5 ) ? $5 : ((int_32)$7 == (int_32)[16]) )
	if ( ((int_32)$7 == (int_32)[16]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((int_32)$7 != (int_32)[2]) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [98]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$8 = ($10 & [32])
	if ( $8 ){ goto $label$12 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$12 }
	*(($4 + $5)) = [120]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$12
	if ( ($8 == 0) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [88]
	$5 = ($5 + [1])
	
.LABEL $label$7
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$5 }
	
.LABEL $label$6
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	
.LABEL $label$5
	if ( ($5 == 0) ){ goto $label$13 }
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$13 }
	$5 = ($9 - (((int_32)($10 & [12]) != (int_32)[0]) | $6))
	
.LABEL $label$13
	$8 = ($10 & [1])
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$16 }
	if ( ($6 == 0) ){ goto $label$17 }
	*(($4 + $5)) = [45]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	if ( ($10 & [4]) ){ goto $label$18 }
	if ( (($10 & [8]) == 0) ){ goto $label$16 }
	*(($4 + $5)) = [32]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$18
	*(($4 + $5)) = [43]
	$5 = ($5 + [1])
	
.LABEL $label$16
	$6 = $2
	if ( $8 ){ goto $label$14 }
	
.LABEL $label$15
	$6 = $2
	if ( $11 ){ goto $label$14 }
	$6 = $2
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$14 }
	$10 = ($9 - $5)
	$6 = ($9 + $2)
	$8 = $2
	
.LOOP $label$19:
	CALL void [32]((int_32 $1), (int_32 $8), (int_32 $3), (int_32 $0))
	$8 = ($8 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$19 }
	$6 = ($6 - $5)
	
.LABEL $label$14
	if ( ($5 == 0) ){ goto $label$20 }
	$8 = ($5 + [-1])
	$10 = $6
	
.LOOP $label$21:
	CALL void *(($4 + $8))((int_32 $1), (int_32 $10), (int_32 $3), (int_32 $0))
	$10 = ($10 + [1])
	$8 = ($8 + [-1])
	if ( ((int_32)$8 != (int_32)[-1]) ){ goto $label$21 }
	$6 = ($5 + $6)
	
.LABEL $label$20
	if ( ($11 == 0) ){ goto $label$22 }
	if ( ((uint_32)($6 - $2) >= (uint_32)$9) ){ goto $label$22 }
	$5 = ([0] - $2)
	
.LOOP $label$23:
	CALL void [32]((int_32 $1), (int_32 $6), (int_32 $3), (int_32 $0))
	$6 = ($6 + [1])
	if ( (($5 + $6) <= $9) ){ goto $label$23 }
	$6 = ($9 + $2)
	
.LABEL $label$22
	return $6
}

void .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-8279445702455590912, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $47($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $90(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [10001])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	*($3 + [8]) = [10303]
	*($3 + [12]) = CALL $129([10303])
	*($3) = *($3 + [8])
	*($1 + [16]) = *(CALL $2(($3 + [32]), $3))
	$6 = *($5 + [8])
	*($1 + [24]) = *($6)
	*($1 + [32]) = *($6)
	$6 = *($5 + [12])
	*($1 + [40]) = *($6)
	*($1 + [48]) = *($6)
	*($1 + [56]) = *(*($5 + [16]))
	*($1 + [64]) = *(*($5 + [20]))
	$6 = *($5 + [24])
	*(($1 + [80])) = *(($6 + [8]))
	*($1 + [72]) = *($6)
	$6 = *($5 + [28])
	*($1 + [88]) = *($6)
	*(($1 + [96])) = *(($6 + [8]))
	$5 = *($5 + [28])
	*($1 + [104]) = *($5)
	*(($1 + [112])) = *(($5 + [8]))
	$6 = $2
	$5 = ($6 + [-128])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($6 + [-8])
	*($3 + [24]) = ($3 + [8])
	$6 = ($1 + [8])
	*($3 + [36]) = $6
	*($3 + [32]) = $1
	$2 = ($1 + [16])
	*($3 + [40]) = $2
	$8 = ($1 + [24])
	*($3 + [44]) = $8
	$9 = ($1 + [32])
	*($3 + [48]) = $9
	*($3 + [52]) = ($1 + [40])
	*($3 + [56]) = ($1 + [48])
	$10 = ($1 + [56])
	*($3 + [60]) = $10
	$11 = ($1 + [64])
	*($3 + [64]) = $11
	*($3 + [68]) = ($1 + [72])
	*($3 + [72]) = ($1 + [88])
	*($3 + [76]) = ($1 + [104])
	CALL $91(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [124]) = CALL db_store_i64(*($4 + [8]), (int_64)-8279445702455590912, *(*($0 + [8])), $7, $5, [120])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$5 = ($4 + [8])
	$7 = *($5)
	$0 = *(($0 + [8]))
	$12 = *($0)
	$13 = *($1)
	*($3 + [32]) = *($6)
	*($1 + [128]) = CALL db_idx64_store($7, (int_64)-8279445702455590912, $12, $13, ($3 + [32]))
	$7 = *($0)
	$12 = *($5)
	$13 = *($1)
	*($3 + [32]) = *($2)
	*(($1 + [132])) = CALL db_idx64_store($12, (int_64)-8279445702455590911, $7, $13, ($3 + [32]))
	$7 = *($0)
	$12 = *($5)
	$13 = *($1)
	*($3 + [32]) = *($8)
	*(($1 + [136])) = CALL db_idx64_store($12, (int_64)-8279445702455590910, $7, $13, ($3 + [32]))
	$7 = *($0)
	$12 = *($5)
	$13 = *($1)
	*($3 + [32]) = *($9)
	*(($1 + [140])) = CALL db_idx64_store($12, (int_64)-8279445702455590909, $7, $13, ($3 + [32]))
	$7 = *($0)
	$12 = *($5)
	$13 = *($1)
	*($3 + [32]) = *($10)
	*(($1 + [144])) = CALL db_idx64_store($12, (int_64)-8279445702455590908, $7, $13, ($3 + [32]))
	$7 = *($0)
	$12 = *($5)
	$13 = *($1)
	*($3 + [32]) = *($11)
	*(($1 + [148])) = CALL db_idx64_store($12, (int_64)-8279445702455590907, $7, $13, ($3 + [32]))
	$7 = *($0)
	$12 = *($5)
	$13 = *($1)
	*($3 + [32]) = *($1 + [72])
	*(($1 + [152])) = CALL db_idx64_store($12, (int_64)-8279445702455590906, $7, $13, ($3 + [32]))
	$global$0 = ($3 + [80])
}

void .FUNC $42 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$3 = ($global$0 - [400])
	$global$0 = $3
	CALL require_auth($1)
	$4 = CALL $129([8411])
	if ( ($4 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [9301])
	goto $label$3 
	
.LABEL $label$4
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = (int_64)0
	
.LOOP $label$5:
	$6 = *(($4 + [8410]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [9346])
	
.LABEL $label$6
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$5 }
	$7 = ((int_64)$5 << (int_64)8)
	goto $label$1 
	
.LABEL $label$2
	$7 = (int_64)0
	
.LABEL $label$1
	$5 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_64)$7 | (int_64)4)
	$4 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$7 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$5 = $7
	$6 = $4
	$4 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$5 = $7
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$6 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $6 ){ goto $label$11 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [9448])
	
.LABEL $label$7
	*($3 + [352]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000)
	$4 = [0]
	*(($3 + [344])) = [0]
	*($3 + [328]) = (int_64)-1
	$5 = (int_64)0
	*($3 + [336]) = (int_64)0
	*($3 + [348]) = [0]
	$7 = *($0)
	*($3 + [312]) = $7
	*($3 + [320]) = $7
	$6 = [0]
	$9 = CALL db_find_i64($7, $7, (int_64)7035937633859534848, $2)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$12 }
	$4 = CALL $5(($3 + [312]), $9)
	if ( ((int_32)*($4 + [72]) == (int_32)($3 + [312])) ){ goto $label$13 }
	CALL eosio_assert([0], [10252])
	
.LABEL $label$13
	$6 = ((int_64)*($4 + [8]) == (int_64)$1)
	
.LABEL $label$12
	CALL eosio_assert($6, [8203])
	if ( ((int_64)*($4 + [8]) != (int_64)$1) ){ goto $label$14 }
	$7 = *($4 + [48])
	if ( ((uint_64)((int_64)$7 + (int_64)86400000) >= (uint_64)*($3 + [352])) ){ goto $label$14 }
	*(($6 = (($3 + [296]) + [8]))) = *(($4 + [24]))
	*($3 + [296]) = *($4 + [16])
	*($3 + [288]) = *(($4 + [8]))
	*($3 + [280]) = *($4 + [32])
	*($3 + [272]) = *($4 + [40])
	*($3 + [264]) = $7
	if ( ((int_64)*($6) == (int_64)$8) ){ goto $label$15 }
	CALL eosio_assert([0], [9474])
	
.LABEL $label$15
	$5 = *($3 + [296])
	if ( ((int_64)$5 <= (int_64)-4611686018427387904) ){ goto $label$19 }
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$18 }
	CALL eosio_assert([0], [9536])
	if ( $4 ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$19
	CALL eosio_assert([0], [9517])
	
.LABEL $label$18
	if ( $4 ){ goto $label$16 }
	
.LABEL $label$17
	CALL eosio_assert([0], [9768])
	CALL eosio_assert([0], [9582])
	
.LABEL $label$16
	$6 = CALL db_next_i64(*($4 + [76]), ($3 + [152]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$20 }
	CALL $5(($3 + [312]), $6)
	
.LABEL $label$20
	CALL __multi3(($3 + [88]), $5, (int_64)$5 >> (int_64)63), (int_64)10, (int_64)0)
	CALL $9(($3 + [312]), $4)
	$4 = (int_64)($7 == 0)
	$7 = *(($3 + [96]))
	$2 = *($3 + [88])
	if ( (( (uint_64)($2 <= (int_64)4611686018427387904) ? ((int_64)$7 < (int_64)0) : $4 ) == 0) ){ goto $label$22 }
	if ( ( ((uint_64)$2 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$7 > (int_64)-1) : ((int_64)$7 == (int_64)-1) ) ){ goto $label$21 }
	CALL eosio_assert([0], [9276])
	goto $label$21 
	
.LABEL $label$22
	CALL eosio_assert([0], [9252])
	
.LABEL $label$21
	*(($3 + [80])) = $8
	*($3 + [240]) = $8
	$10 = ((int_64)$2 / (int_64)100)
	*($3 + [72]) = $10
	*($3 + [232]) = $10
	CALL $11(($3 + [248]), $0, ($3 + [72]))
	if ( (( (uint_64)($2 <= (int_64)4611686018427387904) ? ((int_64)$7 < (int_64)0) : $4 ) == 0) ){ goto $label$24 }
	if ( ( ((uint_64)$2 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$7 > (int_64)-1) : ((int_64)$7 == (int_64)-1) ) ){ goto $label$23 }
	CALL eosio_assert([0], [9276])
	goto $label$23 
	
.LABEL $label$24
	CALL eosio_assert([0], [9252])
	
.LABEL $label$23
	*((($3 + [56]) + [8])) = $8
	$7 = *((($3 + [248]) + [8]))
	*((($3 + [200]) + [8])) = $7
	*((($3 + [40]) + [8])) = $7
	*($3 + [216]) = $10
	*($3 + [224]) = $8
	$7 = *($3 + [248])
	*($3 + [200]) = $7
	*($3 + [56]) = $10
	*($3 + [40]) = $7
	CALL $12($0, $1, ($3 + [56]), ($3 + [40]))
	*(($9 = ($3 + [184]))) = (int_64)0
	*(($3 + [194])) = [0]
	*(($3 + [192])) = [0]
	*($3 + [168]) = (int_64)-1
	*($3 + [176]) = (int_64)0
	$7 = *($0)
	*($3 + [152]) = $7
	*($3 + [160]) = $7
	*($3 + [124]) = ($3 + [288])
	*($3 + [120]) = ($3 + [152])
	*($3 + [128]) = ($3 + [280])
	*($3 + [132]) = ($3 + [272])
	*($3 + [136]) = ($3 + [264])
	*($3 + [140]) = ($3 + [352])
	*($3 + [144]) = ($3 + [296])
	*($3 + [148]) = ($3 + [248])
	*($3 + [392]) = $7
	if ( ((int_64)$7 == (int_64)CALL current_receiver()) ){ goto $label$25 }
	CALL eosio_assert([0], [9950])
	
.LABEL $label$25
	*($3 + [372]) = ($3 + [120])
	*($3 + [368]) = ($3 + [152])
	*($3 + [376]) = ($3 + [392])
	*(($4 = CALL _Znwj([160])) + [16]) = (int_64)0
	*($4 + [8]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [112]) = (int_64)0
	*($4 + [120]) = ($3 + [152])
	CALL $43(($3 + [368]), $4)
	*($3 + [384]) = $4
	$7 = *($4)
	*($3 + [368]) = $7
	$11 = *($4 + [124])
	*($3 + [364]) = $11
	$12 = ($3 + [180])
	$6 = *($12)
	if ( ((uint_32)$6 >= (uint_32)*($9)) ){ goto $label$28 }
	*($6 + [8]) = $7
	*($6 + [16]) = $11
	*($3 + [384]) = [0]
	*($6) = $4
	*($12) = ($6 + [24])
	$4 = *($3 + [384])
	*($3 + [384]) = [0]
	if ( $4 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	CALL $44(($3 + [176]), ($3 + [384]), ($3 + [368]), ($3 + [364]))
	$4 = *($3 + [384])
	*($3 + [384]) = [0]
	if ( ($4 == 0) ){ goto $label$26 }
	
.LABEL $label$27
	CALL _ZdlPv($4)
	
.LABEL $label$26
	$9 = *($3 + [176])
	if ( ($9 == 0) ){ goto $label$14 }
	$11 = ($3 + [180])
	$4 = *($11)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$30 }
	
.LOOP $label$31:
	$4 = ($4 + [-24])
	$6 = *($4)
	*($4) = [0]
	if ( ($6 == 0) ){ goto $label$32 }
	CALL _ZdlPv($6)
	
.LABEL $label$32
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$31 }
	$4 = *(($3 + [176]))
	goto $label$29 
	
.LABEL $label$30
	$4 = $9
	
.LABEL $label$29
	*($11) = $9
	CALL _ZdlPv($4)
	
.LABEL $label$14
	CALL __multi3(($3 + [24]), $5, (int_64)$5 >> (int_64)63), (int_64)90, (int_64)0)
	CALL eosio_assert(((int_64)$5 != (int_64)0), [8415])
	$5 = *(($3 + [32]))
	$7 = *($3 + [24])
	if ( (( (uint_64)($7 <= (int_64)4611686018427387904) ? ((int_64)$5 < (int_64)0) : (int_64)($5 == 0) ) == 0) ){ goto $label$34 }
	if ( ( ((uint_64)$7 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$5 > (int_64)-1) : ((int_64)$5 == (int_64)-1) ) ){ goto $label$33 }
	CALL eosio_assert([0], [9276])
	goto $label$33 
	
.LABEL $label$34
	CALL eosio_assert([0], [9252])
	
.LABEL $label$33
	*(($3 + [16])) = $8
	*($3 + [112]) = $8
	$5 = ((int_64)$7 / (int_64)100)
	*($3 + [8]) = $5
	*($3 + [104]) = $5
	CALL $10($0, $1, ($3 + [8]))
	$9 = *($3 + [336])
	if ( ($9 == 0) ){ goto $label$35 }
	$0 = ($3 + [340])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$37 }
	
.LOOP $label$38:
	$4 = ($4 + [-24])
	$6 = *($4)
	*($4) = [0]
	if ( ($6 == 0) ){ goto $label$39 }
	CALL _ZdlPv($6)
	
.LABEL $label$39
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$38 }
	$4 = *(($3 + [336]))
	goto $label$36 
	
.LABEL $label$37
	$4 = $9
	
.LABEL $label$36
	*($0) = $9
	CALL _ZdlPv($4)
	
.LABEL $label$35
	$global$0 = ($3 + [400])
}

int_32 .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $76(CALL $75($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9468])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9468])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9468])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9468])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $89(*($1), ($4 + [16]))
}

int_32 .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9554])
	
.LABEL $label$5
	$4 = CALL $132($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([160])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = (int_64)0
	*($5 + [96]) = (int_64)0
	*($5 + [104]) = (int_64)0
	*($5 + [112]) = (int_64)0
	*($5 + [120]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [32])
	*($3 + [52]) = ($5 + [40])
	*($3 + [56]) = ($5 + [48])
	*($3 + [60]) = ($5 + [56])
	*($3 + [64]) = ($5 + [64])
	*($3 + [68]) = ($5 + [72])
	*($3 + [72]) = ($5 + [88])
	*($3 + [76]) = ($5 + [104])
	CALL $92(($3 + [32]), ($3 + [24]))
	*($5 + [124]) = $1
	*($5 + [128 align=4]) = (int_64)-1
	*($5 + [136 align=4]) = (int_64)-1
	*($5 + [144 align=4]) = (int_64)-1
	*($5 + [152]) = [-1]
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $44(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $135($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

void .FUNC $46 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [64])
	$global$0 = $3
	CALL require_auth(*($0))
	$4 = CALL current_time()
	$5 = (int_64)0
	*(($3 + [40])) = (int_64)0
	*(($3 + [50])) = [0]
	*(($3 + [48])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$6 = *($0)
	*($3 + [8]) = $6
	*($3 + [16]) = $6
	$4 = ((uint_64)$4 / (uint_64)(int_64)1000)
	$0 = CALL db_lowerbound_i64($6, $6, (int_64)-8279445702455590912, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$6 = ((int_64)( $1 ? (int_64)7 : ((uint_64)$1 > (uint_64)(int_64)7) ) * (int_64)86400000)
	$0 = CALL $47(($3 + [8]), $0)
	
.LOOP $label$2:
	if ( ((uint_64)((int_64)*($0 + [64]) + (int_64)$6) >= (uint_64)$4) ){ goto $label$4 }
	if ( $0 ){ goto $label$5 }
	CALL eosio_assert([0], [9768])
	CALL eosio_assert([0], [9582])
	
.LABEL $label$5
	$7 = [0]
	$8 = CALL db_next_i64(*($0 + [124]), ($3 + [56]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$6 }
	$7 = CALL $47(($3 + [8]), $8)
	
.LABEL $label$6
	CALL $48(($3 + [8]), $0)
	$5 = ((int_64)$5 + (int_64)1)
	if ( ((int_64)$5 != (int_64)$2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$0 = CALL db_next_i64(*($0 + [124]), ($3 + [56]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $47(($3 + [8]), $0)
	
.LABEL $label$3
	$0 = $7
	if ( $7 ){ goto $label$2 }
	
.LABEL $label$1
	$8 = *($3 + [32])
	if ( ($8 == 0) ){ goto $label$7 }
	$9 = ($3 + [36])
	$0 = *($9)
	if ( ((int_32)$0 == (int_32)$8) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$11 }
	CALL _ZdlPv($7)
	
.LABEL $label$11
	if ( ((int_32)$8 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($3 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $8
	
.LABEL $label$8
	*($9) = $8
	CALL _ZdlPv($0)
	
.LABEL $label$7
	$global$0 = ($3 + [64])
}

void .FUNC $45 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [80])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = CALL $129([8411])
	if ( ($3 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [9301])
	goto $label$3 
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = (int_64)0
	
.LOOP $label$5:
	$5 = *(($3 + [8410]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [9346])
	
.LABEL $label$6
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$5 }
	$6 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$6 = (int_64)4
	
.LABEL $label$1
	$4 = (uint_64)$6 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$7 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$4 = $7
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$4 = $7
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$8 = ($3 + [1])
	$3 = $8
	if ( $5 ){ goto $label$11 }
	$3 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [9448])
	
.LABEL $label$7
	$4 = CALL current_time()
	*(($2 + [64])) = [0]
	*($2 + [48]) = (int_64)-1
	*($2 + [56]) = (int_64)0
	*($2 + [68]) = [0]
	$9 = *($0)
	*($2 + [32]) = $9
	*($2 + [40]) = $9
	$7 = ((uint_64)$4 / (uint_64)(int_64)1000)
	$4 = (int_64)0
	$3 = CALL db_lowerbound_i64($9, $9, (int_64)4229865212519383040, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$12 }
	$3 = CALL $3(($2 + [32]), $3)
	$4 = (int_64)0
	
.LOOP $label$13:
	if ( ((int_64)*($3 + [8]) != (int_64)$1) ){ goto $label$18 }
	if ( ((uint_64)((int_64)*($3 + [32]) + (int_64)86400000) >= (uint_64)$7) ){ goto $label$18 }
	if ( ((int_64)*(($3 + [24])) == (int_64)$6) ){ goto $label$19 }
	CALL eosio_assert([0], [9474])
	
.LABEL $label$19
	$4 = ((int_64)*($3 + [16]) + (int_64)$4)
	if ( ((int_64)$4 <= (int_64)-4611686018427387904) ){ goto $label$17 }
	if ( ((int_64)$4 < (int_64)4611686018427387904) ){ goto $label$16 }
	CALL eosio_assert([0], [9536])
	if ( ($3 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$18
	$5 = *($3 + [60])
	$3 = [0]
	$5 = CALL db_next_i64($5, ($2 + [72]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$20 }
	$3 = CALL $3(($2 + [32]), $5)
	
.LABEL $label$20
	if ( $3 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$17
	CALL eosio_assert([0], [9517])
	
.LABEL $label$16
	if ( $3 ){ goto $label$14 }
	
.LABEL $label$15
	CALL eosio_assert([0], [9768])
	CALL eosio_assert([0], [9582])
	
.LABEL $label$14
	$5 = [0]
	$8 = CALL db_next_i64(*($3 + [60]), ($2 + [72]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$21 }
	$5 = CALL $3(($2 + [32]), $8)
	
.LABEL $label$21
	CALL $4(($2 + [32]), $3)
	$3 = $5
	if ( $3 ){ goto $label$13 }
	
.LABEL $label$12
	CALL eosio_assert(((int_64)$4 != (int_64)0), [8415])
	*(($2 + [8])) = $6
	*($2 + [24]) = $6
	*($2) = $4
	*($2 + [16]) = $4
	CALL $10($0, $1, $2)
	$8 = *($2 + [56])
	if ( ($8 == 0) ){ goto $label$22 }
	$0 = ($2 + [60])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$24 }
	
.LOOP $label$25:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$26 }
	if ( ((*($5 + [40]) & [1]) == 0) ){ goto $label$27 }
	CALL _ZdlPv(*(($5 + [48])))
	
.LABEL $label$27
	CALL _ZdlPv($5)
	
.LABEL $label$26
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$25 }
	$3 = *(($2 + [56]))
	goto $label$23 
	
.LABEL $label$24
	$3 = $8
	
.LABEL $label$23
	*($0) = $8
	CALL _ZdlPv($3)
	
.LABEL $label$22
	$global$0 = ($2 + [80])
}

void .FUNC $44 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $120($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $124 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
}

int_32 .FUNC $128 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

void .FUNC $8 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	$3 = ($global$0 - [112])
	$global$0 = $3
	$4 = *($0)
	*($3 + [56]) = [8353]
	*($3 + [60]) = CALL $129([8353])
	*($3 + [8]) = *($3 + [56])
	$5 = *(CALL $2(($3 + [64]), ($3 + [8])))
	$6 = *($0)
	*($3 + [40]) = [8794]
	*($3 + [44]) = CALL $129([8794])
	*($3) = *($3 + [40])
	$0 = CALL $2(($3 + [48]), $3)
	*($3 + [16]) = $1
	CALL $107(($3 + [24]), $2)
	*($3 + [72]) = $6
	*($3 + [80]) = *($0)
	*(($0 = CALL _Znwj([16]))) = $4
	*($0 + [8]) = $5
	$2 = ($0 + [16])
	*(($3 + [96])) = $2
	*(($3 + [92])) = $2
	*($3 + [88]) = $0
	CALL $20(($3 + [100]), ($3 + [16]))
	CALL $21(($3 + [72]))
	$0 = *($3 + [100])
	if ( ($0 == 0) ){ goto $label$1 }
	*(($3 + [104])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$1
	$0 = *($3 + [88])
	if ( ($0 == 0) ){ goto $label$2 }
	*(($3 + [92])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$2
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$3 }
	CALL _ZdlPv(*(($3 + [32])))
	
.LABEL $label$3
	$global$0 = ($3 + [112])
}

void .FUNC $9 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [72]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9802])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9847])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [9897])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL _ZdlPv($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [76]))
	$9 = *(($1 + [80]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937633859534848, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

void .FUNC $6 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)7035937633859534848, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $5($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $82(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [10001])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	$6 = *($5 + [8])
	*(($1 + [24])) = *(($6 + [8]))
	*($1 + [16]) = *($6)
	*($1 + [32]) = *(*($5 + [12]))
	*($1 + [40]) = *(*($5 + [16]))
	*($1 + [48]) = *(*($5 + [20]))
	$5 = CALL $129([8336])
	if ( ($5 <= [8]) ){ goto $label$8 }
	CALL eosio_assert([0], [9301])
	goto $label$7 
	
.LABEL $label$8
	if ( ($5 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$7 = (int_64)0
	
.LOOP $label$9:
	$6 = *(($5 + [8335]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$10 }
	CALL eosio_assert([0], [9346])
	
.LABEL $label$10
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$9 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$5 
	
.LABEL $label$6
	$9 = (int_64)4
	
.LABEL $label$5
	$10 = ($1 + [48])
	$11 = ($1 + [40])
	$12 = ($1 + [32])
	$13 = ($1 + [16])
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$14 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$7 = $14
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$14
	$7 = $14
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $6 ){ goto $label$15 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	CALL eosio_assert([0], [9448])
	
.LABEL $label$11
	*($1 + [56]) = (int_64)0
	*(($1 + [64])) = $9
	$6 = $2
	$5 = ($6 + [-80])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($6 + [-8])
	*($3 + [24]) = ($3 + [8])
	$6 = ($1 + [8])
	*($3 + [36]) = $6
	*($3 + [32]) = $1
	*($3 + [40]) = $13
	*($3 + [44]) = $12
	*($3 + [48]) = $11
	*($3 + [52]) = $10
	*($3 + [56]) = ($1 + [56])
	CALL $83(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [76]) = CALL db_store_i64(*($4 + [8]), (int_64)7035937633859534848, *(*($0 + [8])), $7, $5, [72])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$16 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	$7 = *(($4 + [8]))
	$14 = *(*(($0 + [8])))
	$9 = *($1)
	*($3 + [32]) = *($6)
	*($1 + [80]) = CALL db_idx64_store($7, (int_64)7035937633859534848, $14, $9, ($3 + [32]))
	$global$0 = ($3 + [64])
}

void .FUNC $7 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $120($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $4 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9802])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9847])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [9897])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	if ( ((*($6 + [40]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*(($6 + [48])))
	
.LABEL $label$13
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$15 }
	if ( ((*($9 + [40]) & [1]) == 0) ){ goto $label$16 }
	CALL _ZdlPv(*(($9 + [48])))
	
.LABEL $label$16
	CALL _ZdlPv($9)
	
.LABEL $label$15
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [60]))
	$9 = *(($1 + [64]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4229865212519383040, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($9)
	
.LABEL $label$17
	$global$0 = ($2 + [16])
}

int_32 .FUNC $5 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9554])
	
.LABEL $label$5
	$4 = CALL $132($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([88])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [32])
	*($3 + [48]) = ($5 + [40])
	*($3 + [52]) = ($5 + [48])
	*($3 + [56]) = ($5 + [56])
	CALL $81(($3 + [32]), ($3 + [24]))
	*($5 + [80]) = [-1]
	*($5 + [76]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $7(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $135($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

int_32 .FUNC $2 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$5 }
	CALL eosio_assert([0], [9036])
	$3 = [12]
	goto $label$4 
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$6:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$8 }
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$9 }
	$7 = ($7 + [-48])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [-91])
	goto $label$7 
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert([0], [9141])
	$4 = *($0)
	
.LABEL $label$7
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$2
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [9074])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [9141])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $3 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9554])
	
.LABEL $label$5
	$4 = CALL $132($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL _Znwj([72])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [40 align=4]) = (int_64)0
	*($5 + [48]) = [0]
	*($5 + [56]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [32])
	*($3 + [56]) = ($5 + [40])
	*($3 + [60]) = ($5 + [52])
	CALL $79(($3 + [40]), ($3 + [32]))
	*($5 + [64]) = [-1]
	*($5 + [60]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $55(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $135($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [40]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [48])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC memory ()
{
}

void .FUNC $1 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	$6 = ($global$0 - [1120])
	$global$0 = $6
	*($6 + [1064]) = $2
	*($6 + [1072]) = $1
	*($6 + [1056]) = $3
	$3 = *($0)
	*($6 + [1048]) = [8192]
	*($6 + [1052]) = CALL $129([8192])
	*($6 + [504]) = *($6 + [1048])
	CALL $2(($6 + [1008]), ($6 + [504]))
	CALL require_auth2($3, (int_64)-5858941587277594624)
	*(($6 + [1040])) = [0]
	*($6 + [1024]) = (int_64)-1
	*($6 + [1044]) = [0]
	$3 = *($0)
	*($6 + [1008]) = $3
	*($6 + [1016]) = $3
	*($6 + [1032]) = (int_64)0
	$7 = CALL db_lowerbound_i64($3, $3, (int_64)4229865212519383040, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$8 = ($5 + [1])
	$9 = ($5 + [4])
	$10 = ($5 + [8])
	$11 = CALL $3(($6 + [1008]), $7)
	if ( ((int_64)*($11 + [8]) != (int_64)*($6 + [1072])) ){ goto $label$3 }
	$12 = [2]
	goto $label$1 
	
.LABEL $label$3
	$12 = [0]
	goto $label$1 
	
.LABEL $label$2
	$12 = [204]
	
.LABEL $label$1
	
.LOOP $label$4:
	goto $label$355 
	
.LABEL $label$364
	$11 = CALL $3(($6 + [1008]), $7)
	if ( ((int_64)*($11 + [8]) != (int_64)*($6 + [1072])) ){ goto $label$153 }
	$12 = [2]
	goto $label$4 
	
.LABEL $label$363
	$16 = ($7 & [1])
	$7 = *($5)
	$14 = ($7 & [1])
	$7 = *($11 + [40])
	$13 = uint_32($7 >> [1])
	$15 = ( *(($11 + [44])) ? $13 : $14 )
	if ( ((int_32)$15 != (int_32)( *($9) ? uint_32($7 >> [1]) : $16 )) ){ goto $label$156 }
	$12 = [3]
	goto $label$4 
	
.LABEL $label$362
	$7 = (($11 + [40]) + [1])
	$16 = ( *($10) ? $8 : $16 )
	if ( $14 ){ goto $label$152 }
	$12 = [200]
	goto $label$4 
	
.LABEL $label$361
	if ( ($15 == 0) ){ goto $label$150 }
	$12 = [201]
	goto $label$4 
	
.LABEL $label$360
	$14 = ([0] - $13)
	$12 = [202]
	goto $label$4 
	
.LABEL $label$359
	if ( ((int_32)*($7) != (int_32)*($16)) ){ goto $label$154 }
	$12 = [203]
	goto $label$4 
	
.LABEL $label$358
	$16 = ($16 + [1])
	$7 = ($7 + [1])
	$14 = ($14 + [1])
	if ( $14 ){ goto $label$148 }
	goto $label$149 
	
.LABEL $label$357
	if ( ($15 == 0) ){ goto $label$151 }
	$12 = [5]
	goto $label$4 
	
.LABEL $label$356
	if ( (CALL $128(( *(($11 + [48])) ? $7 : $14 ), $16, $15) == 0) ){ goto $label$155 }
	$12 = [0]
	goto $label$4 
	
.LABEL $label$355
	$7 = CALL db_next_i64(*($11 + [60]), ($6 + [960]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$157 }
	$12 = [204]
	goto $label$4 
	
.LABEL $label$354
	CALL eosio_assert([0], [8203])
	CALL eosio_assert([0], [9768])
	CALL eosio_assert([0], [9582])
	$11 = [0]
	goto $label$147 
	
.LABEL $label$353
	CALL eosio_assert([1], [8203])
	$12 = [7]
	goto $label$4 
	
.LABEL $label$352
	$7 = CALL db_next_i64(*($11 + [60]), ($6 + [960]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$146 }
	$12 = [8]
	goto $label$4 
	
.LABEL $label$351
	CALL $3(($6 + [1008]), $7)
	$12 = [9]
	goto $label$4 
	
.LABEL $label$350
	CALL $4(($6 + [1008]), $11)
	*($6 + [1000]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000)
	*(($6 + [992])) = [0]
	*($6 + [976]) = (int_64)-1
	*($6 + [996]) = [0]
	$3 = *($0)
	*($6 + [960]) = $3
	*($6 + [968]) = $3
	*($6 + [984]) = (int_64)0
	$7 = CALL db_lowerbound_i64($3, $3, (int_64)7035937633859534848, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$145 }
	$12 = [10]
	goto $label$4 
	
.LABEL $label$349
	$16 = ($4 + [8])
	$7 = CALL $5(($6 + [960]), $7)
	if ( ((int_64)*($7 + [8]) == (int_64)*($6 + [1072])) ){ goto $label$144 }
	goto $label$143 
	
.LABEL $label$348
	$7 = CALL $5(($6 + [960]), $7)
	if ( ((int_64)*($7 + [8]) == (int_64)*($6 + [1072])) ){ goto $label$142 }
	$12 = [11]
	goto $label$4 
	
.LABEL $label$347
	if ( ((int_64)*(($7 + [24])) == (int_64)*($16)) ){ goto $label$141 }
	$12 = [12]
	goto $label$4 
	
.LABEL $label$346
	CALL eosio_assert([0], [9193])
	$12 = [13]
	goto $label$4 
	
.LABEL $label$345
	if ( ((int_64)*($7 + [16]) != (int_64)*($4)) ){ goto $label$158 }
	$12 = [51]
	goto $label$4 
	
.LABEL $label$344
	$1 = *($7 + [48])
	if ( ((uint_64)((int_64)$1 + (int_64)86400000) >= (uint_64)*($6 + [1000])) ){ goto $label$159 }
	$12 = [14]
	goto $label$4 
	
.LABEL $label$343
	$7 = CALL db_next_i64(*($7 + [76]), ($6 + [528]))
	if ( ((int_32)$7 >= (int_32)[0]) ){ goto $label$140 }
	$12 = [16]
	goto $label$4 
	
.LABEL $label$342
	$3 = *($0)
	*($6 + [536]) = $4
	*($6 + [532]) = ($6 + [1072])
	*($6 + [528]) = ($6 + [960])
	*($6 + [540]) = ($6 + [1064])
	*($6 + [544]) = ($6 + [1056])
	*($6 + [548]) = ($6 + [1000])
	*($6 + [1088]) = $3
	if ( ((int_64)*($6 + [960]) == (int_64)CALL current_receiver()) ){ goto $label$139 }
	$12 = [17]
	goto $label$4 
	
.LABEL $label$341
	CALL eosio_assert([0], [9950])
	$12 = [18]
	goto $label$4 
	
.LABEL $label$340
	*($6 + [516]) = ($6 + [528])
	*($6 + [512]) = ($6 + [960])
	*($6 + [520]) = ($6 + [1088])
	*(($7 = CALL _Znwj([88])) + [16]) = (int_64)0
	*($7 + [8]) = (int_64)0
	*($7 + [24]) = (int_64)0
	*($7 + [56]) = (int_64)0
	*($7 + [64]) = (int_64)0
	*($7 + [72]) = ($6 + [960])
	CALL $6(($6 + [512]), $7)
	*($6 + [648]) = $7
	$3 = *($7)
	*($6 + [512]) = $3
	$14 = *($7 + [76])
	*($6 + [1112]) = $14
	$11 = ($6 + [988])
	$16 = *($11)
	if ( ((uint_32)$16 >= (uint_32)*(($6 + [992]))) ){ goto $label$138 }
	$12 = [50]
	goto $label$4 
	
.LABEL $label$339
	*($16 + [8]) = $3
	*($16 + [16]) = $14
	*($6 + [648]) = [0]
	*($16) = $7
	*($11) = ($16 + [24])
	$7 = *($6 + [648])
	$16 = [0]
	*($6 + [648]) = [0]
	if ( $7 ){ goto $label$135 }
	goto $label$136 
	
.LABEL $label$338
	CALL $7(($6 + [984]), ($6 + [648]), ($6 + [512]), ($6 + [1112]))
	$7 = *($6 + [648])
	$16 = [0]
	*($6 + [648]) = [0]
	if ( ($7 == 0) ){ goto $label$137 }
	$12 = [20]
	goto $label$4 
	
.LABEL $label$337
	CALL _ZdlPv($7)
	$12 = [21]
	goto $label$4 
	
.LABEL $label$336
	*(($6 + [952])) = $16
	*($6 + [944]) = (int_64)0
	$3 = *($6 + [1072])
	$7 = CALL $129([8807])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$134 }
	$12 = [22]
	goto $label$4 
	
.LABEL $label$335
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$133 }
	$12 = [48]
	goto $label$4 
	
.LABEL $label$334
	*($6 + [944]) = ($7 << [1])
	$16 = (($6 + [944]) | [1])
	if ( $7 ){ goto $label$131 }
	goto $label$132 
	
.LABEL $label$333
	$14 = (($7 + [16]) & [-16])
	$16 = CALL _Znwj($14)
	*($6 + [944]) = ($14 | [1])
	*($6 + [952]) = $16
	*($6 + [948]) = $7
	$12 = [24]
	goto $label$4 
	
.LABEL $label$332
	CALL memcpy($16, [8807], $7)
	$12 = [25]
	goto $label$4 
	
.LABEL $label$331
	*(($16 + $7)) = [0]
	CALL $8($0, $3, ($6 + [944]))
	if ( ((*($6 + [944]) & [1]) == 0) ){ goto $label$130 }
	$12 = [26]
	goto $label$4 
	
.LABEL $label$330
	CALL _ZdlPv(*($6 + [952]))
	$12 = [27]
	goto $label$4 
	
.LABEL $label$329
	$14 = *($6 + [984])
	if ( ($14 == 0) ){ goto $label$128 }
	$12 = [28]
	goto $label$4 
	
.LABEL $label$328
	$11 = ($6 + [988])
	$7 = *($11)
	if ( ((int_32)$7 == (int_32)$14) ){ goto $label$125 }
	$12 = [29]
	goto $label$4 
	
.LABEL $label$327
	$12 = [30]
	goto $label$4 
	
.LABEL $label$326
	$7 = ($7 + [-24])
	$16 = *($7)
	*($7) = [0]
	if ( ($16 == 0) ){ goto $label$123 }
	$12 = [31]
	goto $label$4 
	
.LABEL $label$325
	CALL _ZdlPv($16)
	$12 = [32]
	goto $label$4 
	
.LABEL $label$324
	if ( ((int_32)$14 != (int_32)$7) ){ goto $label$124 }
	$12 = [33]
	goto $label$4 
	
.LABEL $label$323
	$7 = *(($6 + [984]))
	goto $label$122 
	
.LABEL $label$322
	$7 = $14
	$12 = [34]
	goto $label$4 
	
.LABEL $label$321
	*($11) = $14
	CALL _ZdlPv($7)
	$12 = [35]
	goto $label$4 
	
.LABEL $label$320
	$14 = *($6 + [1032])
	if ( ($14 == 0) ){ goto $label$121 }
	$12 = [36]
	goto $label$4 
	
.LABEL $label$319
	$11 = ($6 + [1036])
	$7 = *($11)
	if ( ((int_32)$7 == (int_32)$14) ){ goto $label$120 }
	$12 = [37]
	goto $label$4 
	
.LABEL $label$318
	$12 = [38]
	goto $label$4 
	
.LABEL $label$317
	$7 = ($7 + [-24])
	$16 = *($7)
	*($7) = [0]
	if ( ($16 == 0) ){ goto $label$118 }
	$12 = [39]
	goto $label$4 
	
.LABEL $label$316
	if ( ((*($16 + [40]) & [1]) == 0) ){ goto $label$117 }
	$12 = [40]
	goto $label$4 
	
.LABEL $label$315
	CALL _ZdlPv(*(($16 + [48])))
	$12 = [41]
	goto $label$4 
	
.LABEL $label$314
	CALL _ZdlPv($16)
	$12 = [42]
	goto $label$4 
	
.LABEL $label$313
	if ( ((int_32)$14 != (int_32)$7) ){ goto $label$119 }
	$12 = [43]
	goto $label$4 
	
.LABEL $label$312
	$7 = *(($6 + [1032]))
	goto $label$116 
	
.LABEL $label$311
	$7 = $14
	$12 = [44]
	goto $label$4 
	
.LABEL $label$310
	*($11) = $14
	CALL _ZdlPv($7)
	$12 = [45]
	goto $label$4 
	
.LABEL $label$309
	$global$0 = ($6 + [1120])
	return (unreachable)
	
.LABEL $label$308
	*($6 + [936]) = *($7 + [8])
	*($6 + [928]) = *($7 + [32])
	$17 = *($7 + [40])
	$16 = CALL db_next_i64(*($7 + [76]), ($6 + [528]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$115 }
	$12 = [53]
	goto $label$4 
	
.LABEL $label$307
	CALL $5(($6 + [960]), $16)
	$12 = [54]
	goto $label$4 
	
.LABEL $label$306
	CALL $9(($6 + [960]), $7)
	*($6 + [927]) = [0]
	$2 = *($6 + [1064])
	$3 = *($6 + [928])
	if ( ((uint_64)$3 > (uint_64)$2) ){ goto $label$114 }
	$12 = [55]
	goto $label$4 
	
.LABEL $label$305
	$18 = *($6 + [1056])
	if ( ((int_64)$3 != (int_64)$2) ){ goto $label$113 }
	$12 = [190]
	goto $label$4 
	
.LABEL $label$304
	if ( ((uint_64)$17 >= (uint_64)$18) ){ goto $label$112 }
	$12 = [191]
	goto $label$4 
	
.LABEL $label$303
	$3 = *(($4 + [8]))
	$19 = *($6 + [936])
	$2 = *($4)
	if ( ((int_64)$2 >= (int_64)2305843009213693952) ){ goto $label$10 }
	$12 = [198]
	goto $label$4 
	
.LABEL $label$302
	if ( ((int_64)$2 > (int_64)-2305843009213693952) ){ goto $label$9 }
	$12 = [199]
	goto $label$4 
	
.LABEL $label$301
	CALL eosio_assert([0], [9276])
	goto $label$8 
	
.LABEL $label$300
	CALL eosio_assert([0], [9252])
	$12 = [193]
	goto $label$4 
	
.LABEL $label$299
	$2 = ((int_64)$2 << (int_64)1)
	CALL __multi3(($6 + [392]), $2, (int_64)$2 >> (int_64)63), (int_64)90, (int_64)0)
	$2 = *(($6 + [400]))
	$18 = *($6 + [392])
	if ( (( (uint_64)($18 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ) == 0) ){ goto $label$7 }
	$12 = [196]
	goto $label$4 
	
.LABEL $label$298
	if ( ( ((uint_64)$18 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ) ){ goto $label$6 }
	$12 = [197]
	goto $label$4 
	
.LABEL $label$297
	CALL eosio_assert([0], [9276])
	goto $label$5 
	
.LABEL $label$296
	CALL eosio_assert([0], [9252])
	$12 = [195]
	goto $label$4 
	
.LABEL $label$295
	*(($6 + [384])) = $3
	*($6 + [912]) = $3
	$3 = ((int_64)$18 / (int_64)100)
	*($6 + [376]) = $3
	*($6 + [904]) = $3
	CALL $10($0, $19, ($6 + [376]))
	*($6 + [927]) = [1]
	$12 = [63]
	goto $label$4 
	
.LABEL $label$294
	$7 = CALL $129([8336])
	if ( ($7 <= [8]) ){ goto $label$101 }
	$12 = [176]
	goto $label$4 
	
.LABEL $label$293
	CALL eosio_assert([0], [9301])
	goto $label$99 
	
.LABEL $label$292
	if ( ($7 == 0) ){ goto $label$100 }
	$12 = [65]
	goto $label$4 
	
.LABEL $label$291
	$3 = (int_64)0
	$12 = [66]
	goto $label$4 
	
.LABEL $label$290
	$16 = *(($7 + [8335]))
	if ( ((($16 + [-65]) & [255]) <= [26]) ){ goto $label$97 }
	$12 = [174]
	goto $label$4 
	
.LABEL $label$289
	CALL eosio_assert([0], [9346])
	$12 = [67]
	goto $label$4 
	
.LABEL $label$288
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$98 }
	$12 = [68]
	goto $label$4 
	
.LABEL $label$287
	$2 = ((int_64)$3 << (int_64)8)
	$12 = [69]
	goto $label$4 
	
.LABEL $label$286
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	$18 = ((int_64)$2 | (int_64)4)
	$7 = [0]
	$12 = [70]
	goto $label$4 
	
.LABEL $label$285
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$91 }
	$12 = [168]
	goto $label$4 
	
.LABEL $label$284
	$2 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$18 }
	$12 = [169]
	goto $label$4 
	
.LABEL $label$283
	$3 = $2
	$16 = $7
	$7 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[6]) ){ goto $label$93 }
	goto $label$92 
	
.LABEL $label$282
	$3 = $2
	$12 = [171]
	goto $label$4 
	
.LABEL $label$281
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$90 }
	$12 = [172]
	goto $label$4 
	
.LABEL $label$280
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$16 = ((int_32)$7 < (int_32)[6])
	$14 = ($7 + [1])
	$7 = $14
	if ( $16 ){ goto $label$17 }
	$12 = [173]
	goto $label$4 
	
.LABEL $label$279
	$7 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$95 }
	goto $label$94 
	
.LABEL $label$278
	CALL eosio_assert([0], [9448])
	$12 = [72]
	goto $label$4 
	
.LABEL $label$277
	$7 = CALL $129([8336])
	if ( ($7 <= [8]) ){ goto $label$89 }
	$12 = [167]
	goto $label$4 
	
.LABEL $label$276
	CALL eosio_assert([0], [9301])
	goto $label$87 
	
.LABEL $label$275
	if ( ($7 == 0) ){ goto $label$88 }
	$12 = [74]
	goto $label$4 
	
.LABEL $label$274
	$3 = (int_64)0
	$12 = [75]
	goto $label$4 
	
.LABEL $label$273
	$16 = *(($7 + [8335]))
	if ( ((($16 + [-65]) & [255]) <= [26]) ){ goto $label$85 }
	$12 = [165]
	goto $label$4 
	
.LABEL $label$272
	CALL eosio_assert([0], [9346])
	$12 = [76]
	goto $label$4 
	
.LABEL $label$271
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$86 }
	$12 = [77]
	goto $label$4 
	
.LABEL $label$270
	$2 = ((int_64)$3 << (int_64)8)
	$12 = [78]
	goto $label$4 
	
.LABEL $label$269
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	$19 = ((int_64)$2 | (int_64)4)
	$7 = [0]
	$12 = [79]
	goto $label$4 
	
.LABEL $label$268
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$79 }
	$12 = [159]
	goto $label$4 
	
.LABEL $label$267
	$2 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$20 }
	$12 = [160]
	goto $label$4 
	
.LABEL $label$266
	$3 = $2
	$16 = $7
	$7 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[6]) ){ goto $label$81 }
	goto $label$80 
	
.LABEL $label$265
	$3 = $2
	$12 = [162]
	goto $label$4 
	
.LABEL $label$264
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$78 }
	$12 = [163]
	goto $label$4 
	
.LABEL $label$263
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$16 = ((int_32)$7 < (int_32)[6])
	$14 = ($7 + [1])
	$7 = $14
	if ( $16 ){ goto $label$19 }
	$12 = [164]
	goto $label$4 
	
.LABEL $label$262
	$7 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$83 }
	goto $label$82 
	
.LABEL $label$261
	CALL eosio_assert([0], [9448])
	$12 = [81]
	goto $label$4 
	
.LABEL $label$260
	$7 = *($6 + [927])
	if ( ((int_32)$7 == (int_32)[2]) ){ goto $label$77 }
	$12 = [82]
	goto $label$4 
	
.LABEL $label$259
	if ( ((int_32)$7 != (int_32)[1]) ){ goto $label$76 }
	$12 = [141]
	goto $label$4 
	
.LABEL $label$258
	$3 = *($4)
	CALL __multi3(($6 + [280]), $3, (int_64)$3 >> (int_64)63), (int_64)10, (int_64)0)
	$2 = *(($4 + [8]))
	$3 = *((($6 + [280]) + [8]))
	$19 = *($6 + [280])
	if ( (( (uint_64)($19 <= (int_64)4611686018427387904) ? ((int_64)$3 < (int_64)0) : (int_64)($3 == 0) ) == 0) ){ goto $label$32 }
	$12 = [148]
	goto $label$4 
	
.LABEL $label$257
	if ( ( ((uint_64)$19 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$3 > (int_64)-1) : ((int_64)$3 == (int_64)-1) ) ){ goto $label$31 }
	$12 = [149]
	goto $label$4 
	
.LABEL $label$256
	CALL eosio_assert([0], [9276])
	goto $label$30 
	
.LABEL $label$255
	$3 = *($4)
	CALL __multi3(($6 + [360]), $3, (int_64)$3 >> (int_64)63), (int_64)10, (int_64)0)
	$2 = *(($4 + [8]))
	$3 = *((($6 + [360]) + [8]))
	$18 = *($6 + [360])
	if ( (( (uint_64)($18 <= (int_64)4611686018427387904) ? ((int_64)$3 < (int_64)0) : (int_64)($3 == 0) ) == 0) ){ goto $label$26 }
	$12 = [157]
	goto $label$4 
	
.LABEL $label$254
	if ( ( ((uint_64)$18 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$3 > (int_64)-1) : ((int_64)$3 == (int_64)-1) ) ){ goto $label$25 }
	$12 = [158]
	goto $label$4 
	
.LABEL $label$253
	CALL eosio_assert([0], [9276])
	goto $label$24 
	
.LABEL $label$252
	$3 = *($4)
	CALL __multi3(($6 + [200]), $3, (int_64)$3 >> (int_64)63), (int_64)10, (int_64)0)
	$2 = *(($4 + [8]))
	$3 = *((($6 + [200]) + [8]))
	$18 = *($6 + [200])
	if ( (( (uint_64)($18 <= (int_64)4611686018427387904) ? ((int_64)$3 < (int_64)0) : (int_64)($3 == 0) ) == 0) ){ goto $label$75 }
	$12 = [139]
	goto $label$4 
	
.LABEL $label$251
	if ( ( ((uint_64)$18 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$3 > (int_64)-1) : ((int_64)$3 == (int_64)-1) ) ){ goto $label$74 }
	$12 = [140]
	goto $label$4 
	
.LABEL $label$250
	CALL eosio_assert([0], [9276])
	goto $label$73 
	
.LABEL $label$249
	if ( (uint_64)($3 <= $2) ){ goto $label$111 }
	$12 = [57]
	goto $label$4 
	
.LABEL $label$248
	if ( (((int_64)$3 == (int_64)$2) & ((uint_64)$17 > (uint_64)$18)) ){ goto $label$110 }
	$12 = [58]
	goto $label$4 
	
.LABEL $label$247
	$3 = *($4)
	CALL __multi3(($6 + [488]), $3, (int_64)$3 >> (int_64)63), (int_64)90, (int_64)0)
	$3 = *(($4 + [8]))
	$19 = *($6 + [936])
	$2 = *((($6 + [488]) + [8]))
	$18 = *($6 + [488])
	if ( (( (uint_64)($18 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ) == 0) ){ goto $label$109 }
	$12 = [179]
	goto $label$4 
	
.LABEL $label$246
	if ( ( ((uint_64)$18 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ) ){ goto $label$108 }
	$12 = [180]
	goto $label$4 
	
.LABEL $label$245
	CALL eosio_assert([0], [9276])
	goto $label$107 
	
.LABEL $label$244
	$2 = (int_64)0
	goto $label$96 
	
.LABEL $label$243
	$2 = (int_64)0
	goto $label$84 
	
.LABEL $label$242
	CALL eosio_assert([0], [9252])
	$12 = [143]
	goto $label$4 
	
.LABEL $label$241
	*((($6 + [264]) + [8])) = $2
	*($6 + [848]) = $2
	$3 = ((int_64)$19 / (int_64)50)
	*($6 + [264]) = $3
	*($6 + [840]) = $3
	CALL $11(($6 + [528]), $0, ($6 + [264]))
	$19 = *($6 + [536])
	$2 = *($6 + [528])
	$3 = *($4)
	CALL __multi3(($6 + [248]), $3, (int_64)$3 >> (int_64)63), (int_64)10, (int_64)0)
	$20 = *(($4 + [8]))
	$21 = *($6 + [1072])
	$3 = *((($6 + [248]) + [8]))
	$22 = *($6 + [248])
	if ( (( (uint_64)($22 <= (int_64)4611686018427387904) ? ((int_64)$3 < (int_64)0) : (int_64)($3 == 0) ) == 0) ){ goto $label$29 }
	$12 = [146]
	goto $label$4 
	
.LABEL $label$240
	if ( ( ((uint_64)$22 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$3 > (int_64)-1) : ((int_64)$3 == (int_64)-1) ) ){ goto $label$28 }
	$12 = [147]
	goto $label$4 
	
.LABEL $label$239
	CALL eosio_assert([0], [9276])
	goto $label$27 
	
.LABEL $label$238
	CALL eosio_assert([0], [9252])
	$12 = [152]
	goto $label$4 
	
.LABEL $label$237
	*((($6 + [344]) + [8])) = $2
	*($6 + [800]) = $2
	$3 = ((int_64)$18 / (int_64)50)
	*($6 + [344]) = $3
	*($6 + [792]) = $3
	CALL $11(($6 + [528]), $0, ($6 + [344]))
	$18 = *($6 + [536])
	$3 = *($6 + [528])
	$2 = *($4)
	CALL __multi3(($6 + [328]), $2, (int_64)$2 >> (int_64)63), (int_64)10, (int_64)0)
	$20 = *(($4 + [8]))
	$21 = *($6 + [936])
	$2 = *((($6 + [328]) + [8]))
	$22 = *($6 + [328])
	if ( (( (uint_64)($22 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ) == 0) ){ goto $label$23 }
	$12 = [155]
	goto $label$4 
	
.LABEL $label$236
	if ( ( ((uint_64)$22 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ) ){ goto $label$22 }
	$12 = [156]
	goto $label$4 
	
.LABEL $label$235
	CALL eosio_assert([0], [9276])
	goto $label$21 
	
.LABEL $label$234
	CALL eosio_assert([0], [9252])
	$12 = [85]
	goto $label$4 
	
.LABEL $label$233
	*((($6 + [184]) + [8])) = $2
	*($6 + [752]) = $2
	$3 = ((int_64)$18 / (int_64)100)
	*($6 + [184]) = $3
	*($6 + [744]) = $3
	CALL $11(($6 + [528]), $0, ($6 + [184]))
	$18 = *($6 + [536])
	$3 = *($6 + [528])
	$2 = *($4)
	CALL __multi3(($6 + [168]), $2, (int_64)$2 >> (int_64)63), (int_64)10, (int_64)0)
	$19 = *(($4 + [8]))
	$22 = *($6 + [936])
	$2 = *((($6 + [168]) + [8]))
	$20 = *($6 + [168])
	if ( (( (uint_64)($20 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ) == 0) ){ goto $label$72 }
	$12 = [137]
	goto $label$4 
	
.LABEL $label$232
	if ( ( ((uint_64)$20 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ) ){ goto $label$71 }
	$12 = [138]
	goto $label$4 
	
.LABEL $label$231
	CALL eosio_assert([0], [9276])
	goto $label$70 
	
.LABEL $label$230
	CALL eosio_assert([0], [9252])
	$12 = [145]
	goto $label$4 
	
.LABEL $label$229
	*((($6 + [232]) + [8])) = $20
	*((($6 + [216]) + [8])) = $19
	*($6 + [832]) = $20
	*($6 + [808]) = $2
	*($6 + [816]) = $19
	*($6 + [216]) = $2
	$3 = ((int_64)$22 / (int_64)50)
	*($6 + [824]) = $3
	*($6 + [232]) = $3
	CALL $12($0, $21, ($6 + [232]), ($6 + [216]))
	$3 = (int_64)0
	goto $label$62 
	
.LABEL $label$228
	CALL eosio_assert([0], [9252])
	$12 = [154]
	goto $label$4 
	
.LABEL $label$227
	*((($6 + [312]) + [8])) = $20
	*((($6 + [296]) + [8])) = $18
	*($6 + [784]) = $20
	*($6 + [760]) = $3
	*($6 + [768]) = $18
	*($6 + [296]) = $3
	$2 = ((int_64)$22 / (int_64)50)
	*($6 + [776]) = $2
	*($6 + [312]) = $2
	CALL $12($0, $21, ($6 + [312]), ($6 + [296]))
	$2 = (int_64)0
	goto $label$63 
	
.LABEL $label$226
	CALL eosio_assert([0], [9252])
	$12 = [87]
	goto $label$4 
	
.LABEL $label$225
	*((($6 + [152]) + [8])) = $19
	*((($6 + [136]) + [8])) = $18
	*($6 + [736]) = $19
	*($6 + [712]) = $3
	*($6 + [720]) = $18
	*($6 + [136]) = $3
	$2 = ((int_64)$20 / (int_64)100)
	*($6 + [728]) = $2
	*($6 + [152]) = $2
	CALL $12($0, $22, ($6 + [152]), ($6 + [136]))
	$2 = *($4)
	CALL __multi3(($6 + [120]), $2, (int_64)$2 >> (int_64)63), (int_64)10, (int_64)0)
	$19 = *(($4 + [8]))
	$2 = *((($6 + [120]) + [8]))
	$20 = *($6 + [120])
	if ( (( (uint_64)($20 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ) == 0) ){ goto $label$69 }
	$12 = [135]
	goto $label$4 
	
.LABEL $label$224
	if ( ( ((uint_64)$20 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ) ){ goto $label$68 }
	$12 = [136]
	goto $label$4 
	
.LABEL $label$223
	CALL eosio_assert([0], [9276])
	goto $label$67 
	
.LABEL $label$222
	CALL eosio_assert([0], [9252])
	$12 = [89]
	goto $label$4 
	
.LABEL $label$221
	*((($6 + [104]) + [8])) = $19
	*($6 + [704]) = $19
	$2 = ((int_64)$20 / (int_64)100)
	*($6 + [104]) = $2
	*($6 + [696]) = $2
	CALL $11(($6 + [528]), $0, ($6 + [104]))
	$19 = *($6 + [536])
	$2 = *($6 + [528])
	$20 = *($4)
	CALL __multi3(($6 + [88]), $20, (int_64)$20 >> (int_64)63), (int_64)10, (int_64)0)
	$22 = *(($4 + [8]))
	$23 = *($6 + [1072])
	$20 = *((($6 + [88]) + [8]))
	$21 = *($6 + [88])
	if ( (( (uint_64)($21 <= (int_64)4611686018427387904) ? ((int_64)$20 < (int_64)0) : (int_64)($20 == 0) ) == 0) ){ goto $label$66 }
	$12 = [133]
	goto $label$4 
	
.LABEL $label$220
	if ( ( ((uint_64)$21 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$20 > (int_64)-1) : ((int_64)$20 == (int_64)-1) ) ){ goto $label$65 }
	$12 = [134]
	goto $label$4 
	
.LABEL $label$219
	CALL eosio_assert([0], [9276])
	goto $label$64 
	
.LABEL $label$218
	CALL eosio_assert([0], [9252])
	$12 = [91]
	goto $label$4 
	
.LABEL $label$217
	*((($6 + [72]) + [8])) = $22
	*((($6 + [56]) + [8])) = $19
	*($6 + [688]) = $22
	*($6 + [664]) = $2
	*($6 + [672]) = $19
	*($6 + [56]) = $2
	$20 = ((int_64)$21 / (int_64)100)
	*($6 + [680]) = $20
	*($6 + [72]) = $20
	CALL $12($0, $23, ($6 + [72]), ($6 + [56]))
	$12 = [92]
	goto $label$4 
	
.LABEL $label$216
	$22 = *(($4 + [8]))
	*((($6 + [632]) + [8])) = $22
	$20 = *($4)
	*((($6 + [40]) + [8])) = $22
	*((($6 + [24]) + [8])) = $18
	*($6 + [616]) = $3
	*($6 + [624]) = $18
	*($6 + [600]) = $2
	*($6 + [608]) = $19
	*($6 + [632]) = $20
	*($6 + [40]) = $20
	*($6 + [24]) = $3
	$3 = *($6 + [936])
	$2 = *($6 + [1072])
	$18 = *($6 + [928])
	$20 = *($6 + [1064])
	$22 = *($6 + [1056])
	$21 = *($6 + [1000])
	$7 = *($6 + [927])
	*((($6 + [8]) + [8])) = $19
	*($6 + [8]) = *($6 + [600])
	CALL $13(($6 + [648]), $6, ($6 + [40]), ($6 + [24]), ($6 + [8]), $3, $2, $18, $20, $17, $22, $1, $21, $7)
	$7 = CALL $107(($6 + [584]), ($6 + [648]))
	CALL $8($0, *($6 + [1072]), $7)
	if ( ((*($7) & [1]) == 0) ){ goto $label$61 }
	$12 = [93]
	goto $label$4 
	
.LABEL $label$215
	CALL _ZdlPv(*($7 + [8]))
	$12 = [94]
	goto $label$4 
	
.LABEL $label$214
	$7 = CALL $107(($6 + [568]), ($6 + [648]))
	CALL $8($0, *($6 + [936]), $7)
	if ( ((*($7) & [1]) == 0) ){ goto $label$60 }
	$12 = [95]
	goto $label$4 
	
.LABEL $label$213
	CALL _ZdlPv(*($7 + [8]))
	$12 = [96]
	goto $label$4 
	
.LABEL $label$212
	*(($6 + [560])) = [0]
	*($6 + [544]) = (int_64)-1
	*($6 + [564]) = [0]
	$3 = *($0)
	*($6 + [528]) = $3
	*($6 + [536]) = $3
	*($6 + [552]) = (int_64)0
	$7 = CALL db_lowerbound_i64($3, $3, (int_64)-3020371635640205312, (int_64)0)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$59 }
	$12 = [97]
	goto $label$4 
	
.LABEL $label$211
	$7 = CALL $14(($6 + [528]), $7)
	if ( ((int_64)*($7 + [8]) == (int_64)*($6 + [936])) ){ goto $label$58 }
	$12 = [98]
	goto $label$4 
	
.LABEL $label$210
	$12 = [99]
	goto $label$4 
	
.LABEL $label$209
	$7 = CALL db_next_i64(*($7 + [60]), ($6 + [512]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$56 }
	$12 = [100]
	goto $label$4 
	
.LABEL $label$208
	$7 = CALL $14(($6 + [528]), $7)
	if ( ((int_64)*($7 + [8]) != (int_64)*($6 + [936])) ){ goto $label$57 }
	$12 = [101]
	goto $label$4 
	
.LABEL $label$207
	$3 = *($0)
	*($6 + [516]) = ($6 + [928])
	*($6 + [512]) = ($6 + [927])
	CALL $15(($6 + [528]), $7, $3, ($6 + [512]))
	$16 = ($6 + [528])
	goto $label$55 
	
.LABEL $label$206
	$16 = ($6 + [528])
	goto $label$35 
	
.LABEL $label$205
	$16 = ($6 + [528])
	$12 = [126]
	goto $label$4 
	
.LABEL $label$204
	$3 = *($0)
	*($6 + [516]) = ($6 + [936])
	*($6 + [512]) = ($6 + [528])
	*($6 + [520]) = ($6 + [927])
	*($6 + [524]) = ($6 + [928])
	*($6 + [1112]) = $3
	if ( ((int_64)*($6 + [528]) == (int_64)CALL current_receiver()) ){ goto $label$34 }
	$12 = [127]
	goto $label$4 
	
.LABEL $label$203
	CALL eosio_assert([0], [9950])
	$12 = [128]
	goto $label$4 
	
.LABEL $label$202
	*($6 + [1092]) = ($6 + [512])
	*($6 + [1088]) = ($6 + [528])
	*($6 + [1096]) = ($6 + [1112])
	*(($7 = CALL _Znwj([72])) + [56]) = $16
	*($7 + [8]) = (int_64)0
	CALL $16(($6 + [1088]), $7)
	*($6 + [1104]) = $7
	$3 = *($7)
	*($6 + [1088]) = $3
	$11 = *($7 + [60])
	*($6 + [1084]) = $11
	$4 = ($6 + [556])
	$14 = *($4)
	if ( ((uint_32)$14 >= (uint_32)*(($6 + [560]))) ){ goto $label$33 }
	$12 = [131]
	goto $label$4 
	
.LABEL $label$201
	*($14 + [8]) = $3
	*($14 + [16]) = $11
	*($6 + [1104]) = [0]
	*($14) = $7
	*($4) = ($14 + [24])
	$7 = *($6 + [1104])
	*($6 + [1104]) = [0]
	if ( $7 ){ goto $label$53 }
	goto $label$54 
	
.LABEL $label$200
	CALL $17(($6 + [552]), ($6 + [1104]), ($6 + [1088]), ($6 + [1084]))
	$7 = *($6 + [1104])
	*($6 + [1104]) = [0]
	if ( ($7 == 0) ){ goto $label$52 }
	$12 = [130]
	goto $label$4 
	
.LABEL $label$199
	CALL _ZdlPv($7)
	$12 = [102]
	goto $label$4 
	
.LABEL $label$198
	$7 = CALL db_lowerbound_i64(*($6 + [528]), *(($6 + [536])), (int_64)-3020371635640205312, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$51 }
	$12 = [103]
	goto $label$4 
	
.LABEL $label$197
	$7 = CALL $14(($6 + [528]), $7)
	if ( ((int_64)*($7 + [8]) == (int_64)*($6 + [1072])) ){ goto $label$50 }
	$12 = [104]
	goto $label$4 
	
.LABEL $label$196
	$12 = [105]
	goto $label$4 
	
.LABEL $label$195
	$7 = CALL db_next_i64(*($7 + [60]), ($6 + [512]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$48 }
	$12 = [106]
	goto $label$4 
	
.LABEL $label$194
	$7 = CALL $14(($6 + [528]), $7)
	if ( ((int_64)*($7 + [8]) != (int_64)*($6 + [1072])) ){ goto $label$49 }
	$12 = [107]
	goto $label$4 
	
.LABEL $label$193
	$3 = *($0)
	*($6 + [516]) = ($6 + [1064])
	*($6 + [512]) = ($6 + [927])
	CALL $18(($6 + [528]), $7, $3, ($6 + [512]))
	$14 = *($6 + [552])
	if ( $14 ){ goto $label$45 }
	goto $label$46 
	
.LABEL $label$192
	$3 = *($0)
	*($6 + [516]) = ($6 + [1072])
	*($6 + [512]) = ($6 + [528])
	*($6 + [520]) = ($6 + [927])
	*($6 + [524]) = ($6 + [1064])
	*($6 + [1112]) = $3
	if ( ((int_64)*($6 + [528]) == (int_64)CALL current_receiver()) ){ goto $label$40 }
	$12 = [119]
	goto $label$4 
	
.LABEL $label$191
	CALL eosio_assert([0], [9950])
	$12 = [120]
	goto $label$4 
	
.LABEL $label$190
	*($6 + [1092]) = ($6 + [512])
	*($6 + [1088]) = ($6 + [528])
	*($6 + [1096]) = ($6 + [1112])
	*(($7 = CALL _Znwj([72])) + [56]) = $16
	*($7 + [8]) = (int_64)0
	CALL $19(($6 + [1088]), $7)
	*($6 + [1104]) = $7
	$3 = *($7)
	*($6 + [1088]) = $3
	$14 = *($7 + [60])
	*($6 + [1084]) = $14
	$11 = ($6 + [556])
	$16 = *($11)
	if ( ((uint_32)$16 >= (uint_32)*(($6 + [560]))) ){ goto $label$39 }
	$12 = [124]
	goto $label$4 
	
.LABEL $label$189
	*($16 + [8]) = $3
	*($16 + [16]) = $14
	*($6 + [1104]) = [0]
	*($16) = $7
	*($11) = ($16 + [24])
	$7 = *($6 + [1104])
	*($6 + [1104]) = [0]
	if ( $7 ){ goto $label$37 }
	goto $label$38 
	
.LABEL $label$188
	CALL $17(($6 + [552]), ($6 + [1104]), ($6 + [1088]), ($6 + [1084]))
	$7 = *($6 + [1104])
	*($6 + [1104]) = [0]
	if ( ($7 == 0) ){ goto $label$36 }
	$12 = [122]
	goto $label$4 
	
.LABEL $label$187
	CALL _ZdlPv($7)
	$12 = [123]
	goto $label$4 
	
.LABEL $label$186
	$14 = *($6 + [552])
	if ( ($14 == 0) ){ goto $label$47 }
	$12 = [108]
	goto $label$4 
	
.LABEL $label$185
	$11 = ($6 + [556])
	$7 = *($11)
	if ( ((int_32)$7 == (int_32)$14) ){ goto $label$44 }
	$12 = [109]
	goto $label$4 
	
.LABEL $label$184
	$12 = [110]
	goto $label$4 
	
.LABEL $label$183
	$7 = ($7 + [-24])
	$16 = *($7)
	*($7) = [0]
	if ( ($16 == 0) ){ goto $label$42 }
	$12 = [111]
	goto $label$4 
	
.LABEL $label$182
	CALL _ZdlPv($16)
	$12 = [112]
	goto $label$4 
	
.LABEL $label$181
	if ( ((int_32)$14 != (int_32)$7) ){ goto $label$43 }
	$12 = [113]
	goto $label$4 
	
.LABEL $label$180
	$7 = *(($6 + [552]))
	goto $label$41 
	
.LABEL $label$179
	$7 = $14
	$12 = [114]
	goto $label$4 
	
.LABEL $label$178
	*($11) = $14
	CALL _ZdlPv($7)
	$12 = [115]
	goto $label$4 
	
.LABEL $label$177
	if ( ((*($6 + [648]) & [1]) == 0) ){ goto $label$129 }
	$12 = [116]
	goto $label$4 
	
.LABEL $label$176
	CALL _ZdlPv(*($6 + [656]))
	$14 = *($6 + [984])
	if ( $14 ){ goto $label$126 }
	goto $label$127 
	
.LABEL $label$175
	$3 = *(($4 + [8]))
	$19 = *($6 + [1072])
	$2 = *($4)
	if ( ((int_64)$2 >= (int_64)2305843009213693952) ){ goto $label$16 }
	$12 = [188]
	goto $label$4 
	
.LABEL $label$174
	if ( ((int_64)$2 > (int_64)-2305843009213693952) ){ goto $label$15 }
	$12 = [189]
	goto $label$4 
	
.LABEL $label$173
	CALL eosio_assert([0], [9276])
	goto $label$14 
	
.LABEL $label$172
	CALL eosio_assert([0], [9252])
	$12 = [60]
	goto $label$4 
	
.LABEL $label$171
	*((($6 + [472]) + [8])) = $3
	*($6 + [880]) = $3
	$3 = ((int_64)$18 / (int_64)100)
	*($6 + [472]) = $3
	*($6 + [872]) = $3
	CALL $10($0, $19, ($6 + [472]))
	$3 = *($4)
	CALL __multi3(($6 + [456]), $3, (int_64)$3 >> (int_64)63), (int_64)90, (int_64)0)
	$3 = *(($4 + [8]))
	$19 = *($6 + [1072])
	$2 = *((($6 + [456]) + [8]))
	$18 = *($6 + [456])
	if ( (( (uint_64)($18 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ) == 0) ){ goto $label$106 }
	$12 = [177]
	goto $label$4 
	
.LABEL $label$170
	if ( ( ((uint_64)$18 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ) ){ goto $label$105 }
	$12 = [178]
	goto $label$4 
	
.LABEL $label$169
	CALL eosio_assert([0], [9276])
	goto $label$104 
	
.LABEL $label$168
	CALL eosio_assert([0], [9252])
	$12 = [183]
	goto $label$4 
	
.LABEL $label$167
	$2 = ((int_64)$2 << (int_64)1)
	CALL __multi3(($6 + [424]), $2, (int_64)$2 >> (int_64)63), (int_64)90, (int_64)0)
	$2 = *(($6 + [432]))
	$18 = *($6 + [424])
	if ( (( (uint_64)($18 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ) == 0) ){ goto $label$13 }
	$12 = [186]
	goto $label$4 
	
.LABEL $label$166
	if ( ( ((uint_64)$18 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ) ){ goto $label$12 }
	$12 = [187]
	goto $label$4 
	
.LABEL $label$165
	CALL eosio_assert([0], [9276])
	goto $label$11 
	
.LABEL $label$164
	CALL eosio_assert([0], [9252])
	$12 = [62]
	goto $label$4 
	
.LABEL $label$163
	*(($6 + [448])) = $3
	*($6 + [864]) = $3
	$3 = ((int_64)$18 / (int_64)100)
	*($6 + [440]) = $3
	*($6 + [856]) = $3
	CALL $10($0, $19, ($6 + [440]))
	goto $label$103 
	
.LABEL $label$162
	CALL eosio_assert([0], [9252])
	$12 = [185]
	goto $label$4 
	
.LABEL $label$161
	*(($6 + [416])) = $3
	*($6 + [896]) = $3
	$3 = ((int_64)$18 / (int_64)100)
	*($6 + [408]) = $3
	*($6 + [888]) = $3
	CALL $10($0, $19, ($6 + [408]))
	*($6 + [927]) = [2]
	goto $label$102 
	
.LABEL $label$160
	CALL $106(($6 + [944]))
	
.LABEL $label$159
	$12 = [52]
	goto $label$4 
	
.LABEL $label$158
	$12 = [14]
	goto $label$4 
	
.LABEL $label$157
	$12 = [1]
	goto $label$4 
	
.LABEL $label$156
	$12 = [0]
	goto $label$4 
	
.LABEL $label$155
	$12 = [6]
	goto $label$4 
	
.LABEL $label$154
	$12 = [0]
	goto $label$4 
	
.LABEL $label$153
	$12 = [0]
	goto $label$4 
	
.LABEL $label$152
	$12 = [4]
	goto $label$4 
	
.LABEL $label$151
	$12 = [6]
	goto $label$4 
	
.LABEL $label$150
	$12 = [6]
	goto $label$4 
	
.LABEL $label$149
	$12 = [6]
	goto $label$4 
	
.LABEL $label$148
	$12 = [202]
	goto $label$4 
	
.LABEL $label$147
	$12 = [7]
	goto $label$4 
	
.LABEL $label$146
	$12 = [9]
	goto $label$4 
	
.LABEL $label$145
	$12 = [16]
	goto $label$4 
	
.LABEL $label$144
	$12 = [14]
	goto $label$4 
	
.LABEL $label$143
	$12 = [11]
	goto $label$4 
	
.LABEL $label$142
	$12 = [14]
	goto $label$4 
	
.LABEL $label$141
	$12 = [13]
	goto $label$4 
	
.LABEL $label$140
	$12 = [15]
	goto $label$4 
	
.LABEL $label$139
	$12 = [18]
	goto $label$4 
	
.LABEL $label$138
	$12 = [19]
	goto $label$4 
	
.LABEL $label$137
	$12 = [21]
	goto $label$4 
	
.LABEL $label$136
	$12 = [21]
	goto $label$4 
	
.LABEL $label$135
	$12 = [20]
	goto $label$4 
	
.LABEL $label$134
	$12 = [49]
	goto $label$4 
	
.LABEL $label$133
	$12 = [23]
	goto $label$4 
	
.LABEL $label$132
	$12 = [25]
	goto $label$4 
	
.LABEL $label$131
	$12 = [24]
	goto $label$4 
	
.LABEL $label$130
	$12 = [27]
	goto $label$4 
	
.LABEL $label$129
	$12 = [27]
	goto $label$4 
	
.LABEL $label$128
	$12 = [35]
	goto $label$4 
	
.LABEL $label$127
	$12 = [35]
	goto $label$4 
	
.LABEL $label$126
	$12 = [28]
	goto $label$4 
	
.LABEL $label$125
	$12 = [47]
	goto $label$4 
	
.LABEL $label$124
	$12 = [30]
	goto $label$4 
	
.LABEL $label$123
	$12 = [32]
	goto $label$4 
	
.LABEL $label$122
	$12 = [34]
	goto $label$4 
	
.LABEL $label$121
	$12 = [45]
	goto $label$4 
	
.LABEL $label$120
	$12 = [46]
	goto $label$4 
	
.LABEL $label$119
	$12 = [38]
	goto $label$4 
	
.LABEL $label$118
	$12 = [42]
	goto $label$4 
	
.LABEL $label$117
	$12 = [41]
	goto $label$4 
	
.LABEL $label$116
	$12 = [44]
	goto $label$4 
	
.LABEL $label$115
	$12 = [54]
	goto $label$4 
	
.LABEL $label$114
	$12 = [191]
	goto $label$4 
	
.LABEL $label$113
	$12 = [56]
	goto $label$4 
	
.LABEL $label$112
	$12 = [56]
	goto $label$4 
	
.LABEL $label$111
	$12 = [181]
	goto $label$4 
	
.LABEL $label$110
	$12 = [181]
	goto $label$4 
	
.LABEL $label$109
	$12 = [59]
	goto $label$4 
	
.LABEL $label$108
	$12 = [60]
	goto $label$4 
	
.LABEL $label$107
	$12 = [60]
	goto $label$4 
	
.LABEL $label$106
	$12 = [61]
	goto $label$4 
	
.LABEL $label$105
	$12 = [62]
	goto $label$4 
	
.LABEL $label$104
	$12 = [62]
	goto $label$4 
	
.LABEL $label$103
	$12 = [63]
	goto $label$4 
	
.LABEL $label$102
	$12 = [63]
	goto $label$4 
	
.LABEL $label$101
	$12 = [64]
	goto $label$4 
	
.LABEL $label$100
	$12 = [175]
	goto $label$4 
	
.LABEL $label$99
	$12 = [65]
	goto $label$4 
	
.LABEL $label$98
	$12 = [66]
	goto $label$4 
	
.LABEL $label$97
	$12 = [67]
	goto $label$4 
	
.LABEL $label$96
	$12 = [69]
	goto $label$4 
	
.LABEL $label$95
	$12 = [70]
	goto $label$4 
	
.LABEL $label$94
	$12 = [72]
	goto $label$4 
	
.LABEL $label$93
	$12 = [70]
	goto $label$4 
	
.LABEL $label$92
	$12 = [72]
	goto $label$4 
	
.LABEL $label$91
	$12 = [71]
	goto $label$4 
	
.LABEL $label$90
	$12 = [71]
	goto $label$4 
	
.LABEL $label$89
	$12 = [73]
	goto $label$4 
	
.LABEL $label$88
	$12 = [166]
	goto $label$4 
	
.LABEL $label$87
	$12 = [74]
	goto $label$4 
	
.LABEL $label$86
	$12 = [75]
	goto $label$4 
	
.LABEL $label$85
	$12 = [76]
	goto $label$4 
	
.LABEL $label$84
	$12 = [78]
	goto $label$4 
	
.LABEL $label$83
	$12 = [79]
	goto $label$4 
	
.LABEL $label$82
	$12 = [81]
	goto $label$4 
	
.LABEL $label$81
	$12 = [79]
	goto $label$4 
	
.LABEL $label$80
	$12 = [81]
	goto $label$4 
	
.LABEL $label$79
	$12 = [80]
	goto $label$4 
	
.LABEL $label$78
	$12 = [80]
	goto $label$4 
	
.LABEL $label$77
	$12 = [150]
	goto $label$4 
	
.LABEL $label$76
	$12 = [83]
	goto $label$4 
	
.LABEL $label$75
	$12 = [84]
	goto $label$4 
	
.LABEL $label$74
	$12 = [85]
	goto $label$4 
	
.LABEL $label$73
	$12 = [85]
	goto $label$4 
	
.LABEL $label$72
	$12 = [86]
	goto $label$4 
	
.LABEL $label$71
	$12 = [87]
	goto $label$4 
	
.LABEL $label$70
	$12 = [87]
	goto $label$4 
	
.LABEL $label$69
	$12 = [88]
	goto $label$4 
	
.LABEL $label$68
	$12 = [89]
	goto $label$4 
	
.LABEL $label$67
	$12 = [89]
	goto $label$4 
	
.LABEL $label$66
	$12 = [90]
	goto $label$4 
	
.LABEL $label$65
	$12 = [91]
	goto $label$4 
	
.LABEL $label$64
	$12 = [91]
	goto $label$4 
	
.LABEL $label$63
	$12 = [92]
	goto $label$4 
	
.LABEL $label$62
	$12 = [92]
	goto $label$4 
	
.LABEL $label$61
	$12 = [94]
	goto $label$4 
	
.LABEL $label$60
	$12 = [96]
	goto $label$4 
	
.LABEL $label$59
	$12 = [132]
	goto $label$4 
	
.LABEL $label$58
	$12 = [101]
	goto $label$4 
	
.LABEL $label$57
	$12 = [99]
	goto $label$4 
	
.LABEL $label$56
	$12 = [125]
	goto $label$4 
	
.LABEL $label$55
	$12 = [102]
	goto $label$4 
	
.LABEL $label$54
	$12 = [102]
	goto $label$4 
	
.LABEL $label$53
	$12 = [130]
	goto $label$4 
	
.LABEL $label$52
	$12 = [102]
	goto $label$4 
	
.LABEL $label$51
	$12 = [118]
	goto $label$4 
	
.LABEL $label$50
	$12 = [107]
	goto $label$4 
	
.LABEL $label$49
	$12 = [105]
	goto $label$4 
	
.LABEL $label$48
	$12 = [118]
	goto $label$4 
	
.LABEL $label$47
	$12 = [115]
	goto $label$4 
	
.LABEL $label$46
	$12 = [115]
	goto $label$4 
	
.LABEL $label$45
	$12 = [108]
	goto $label$4 
	
.LABEL $label$44
	$12 = [117]
	goto $label$4 
	
.LABEL $label$43
	$12 = [110]
	goto $label$4 
	
.LABEL $label$42
	$12 = [112]
	goto $label$4 
	
.LABEL $label$41
	$12 = [114]
	goto $label$4 
	
.LABEL $label$40
	$12 = [120]
	goto $label$4 
	
.LABEL $label$39
	$12 = [121]
	goto $label$4 
	
.LABEL $label$38
	$12 = [123]
	goto $label$4 
	
.LABEL $label$37
	$12 = [122]
	goto $label$4 
	
.LABEL $label$36
	$12 = [123]
	goto $label$4 
	
.LABEL $label$35
	$12 = [126]
	goto $label$4 
	
.LABEL $label$34
	$12 = [128]
	goto $label$4 
	
.LABEL $label$33
	$12 = [129]
	goto $label$4 
	
.LABEL $label$32
	$12 = [142]
	goto $label$4 
	
.LABEL $label$31
	$12 = [143]
	goto $label$4 
	
.LABEL $label$30
	$12 = [143]
	goto $label$4 
	
.LABEL $label$29
	$12 = [144]
	goto $label$4 
	
.LABEL $label$28
	$12 = [145]
	goto $label$4 
	
.LABEL $label$27
	$12 = [145]
	goto $label$4 
	
.LABEL $label$26
	$12 = [151]
	goto $label$4 
	
.LABEL $label$25
	$12 = [152]
	goto $label$4 
	
.LABEL $label$24
	$12 = [152]
	goto $label$4 
	
.LABEL $label$23
	$12 = [153]
	goto $label$4 
	
.LABEL $label$22
	$12 = [154]
	goto $label$4 
	
.LABEL $label$21
	$12 = [154]
	goto $label$4 
	
.LABEL $label$20
	$12 = [161]
	goto $label$4 
	
.LABEL $label$19
	$12 = [162]
	goto $label$4 
	
.LABEL $label$18
	$12 = [170]
	goto $label$4 
	
.LABEL $label$17
	$12 = [171]
	goto $label$4 
	
.LABEL $label$16
	$12 = [182]
	goto $label$4 
	
.LABEL $label$15
	$12 = [183]
	goto $label$4 
	
.LABEL $label$14
	$12 = [183]
	goto $label$4 
	
.LABEL $label$13
	$12 = [184]
	goto $label$4 
	
.LABEL $label$12
	$12 = [185]
	goto $label$4 
	
.LABEL $label$11
	$12 = [185]
	goto $label$4 
	
.LABEL $label$10
	$12 = [192]
	goto $label$4 
	
.LABEL $label$9
	$12 = [193]
	goto $label$4 
	
.LABEL $label$8
	$12 = [193]
	goto $label$4 
	
.LABEL $label$7
	$12 = [194]
	goto $label$4 
	
.LABEL $label$6
	$12 = [195]
	goto $label$4 
	
.LABEL $label$5
	$12 = [195]
	goto $label$4 
	$12
}

int_32 .FUNC $14 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9554])
	
.LABEL $label$5
	$4 = CALL $132($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([72])) + [56]) = $0
	*($5 + [8]) = (int_64)0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [32])
	*($3 + [52]) = ($5 + [40])
	*($3 + [56]) = ($5 + [48])
	CALL $84(($3 + [32]), ($3 + [24]))
	*($5 + [64]) = [-1]
	*($5 + [60]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $17(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $135($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $15 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_64 $14
	int_32 $15
	int_32 $16
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10155])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10201])
	
.LABEL $label$2
	$6 = ($1 + [8])
	*($5 + [16]) = *($6)
	$7 = ($1 + [24])
	$8 = ($1 + [32])
	$11 = *($1 + [24])
	$10 = *($1 + [16])
	$9 = *($1 + [32])
	$12 = ((int_64)((int_64)$9 + (int_64)$10) + (int_64)$11)
	$13 = *(($3 + [4]))
	$14 = *($1)
	$15 = ($1 + [16])
	$16 = $15
	$3 = *(*($3))
	if ( ((int_32)$3 == (int_32)[1]) ){ goto $label$3 }
	$10 = $9
	$16 = $8
	if ( ((int_32)$3 == (int_32)[2]) ){ goto $label$3 }
	$10 = $11
	$16 = $7
	
.LABEL $label$3
	*($16) = ((int_64)$10 + (int_64)1)
	$9 = *($13)
	$10 = *($1 + [40])
	*($1 + [40]) = ( $10 ? $9 : ((uint_64)$10 > (uint_64)$9) )
	*($1 + [48]) = ((float_64)((float_64)((float_64)*($1 + [48]) * (float_64)(CASTING float_64)(uint_64 $12)) + (float_64)(CASTING float_64)(uint_64 *($13))) / (float_64)(CASTING float_64)(uint_64 ((int_64)$12 + (int_64)1)))
	$4 = $4
	$3 = ($4 + [-64])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-8])
	*($5 + [24]) = $5
	*($5 + [36]) = $6
	*($5 + [32]) = $1
	*($5 + [40]) = $15
	*($5 + [44]) = $7
	*($5 + [48]) = $8
	*($5 + [52]) = ($1 + [40])
	*($5 + [56]) = ($1 + [48])
	CALL $86(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [60]), $2, $3, [56])
	if ( (uint_64)($14 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$14 + (int_64)1) : ((uint_64)$14 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($5 + [32]) = *(($1 + [8]))
	if ( (CALL $128(($5 + [16]), ($5 + [32]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [64])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$6 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371635640205312, ($5 + [24]), $14)
	*($3) = $1
	
.LABEL $label$6
	CALL db_idx64_update($1, $2, ($5 + [32]))
	
.LABEL $label$5
	$global$0 = ($5 + [64])
}

void .FUNC $16 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-3020371635640205312, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $14($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $85(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [10001])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	$6 = *(*($5 + [8]))
	if ( ((int_32)$6 != (int_32)[1]) ){ goto $label$6 }
	*($1 + [32]) = (int_64)0
	*($1 + [16]) = (int_64)1
	*($1 + [24]) = (int_64)0
	$6 = ($1 + [24])
	$8 = ($1 + [32])
	$9 = ($1 + [16])
	goto $label$5 
	
.LABEL $label$6
	*($1 + [16]) = (int_64)0
	$8 = ($1 + [32])
	$9 = ($1 + [16])
	if ( ((int_32)$6 != (int_32)[2]) ){ goto $label$7 }
	*($1 + [24]) = (int_64)0
	*(($1 + [32])) = (int_64)1
	$6 = ($1 + [24])
	goto $label$5 
	
.LABEL $label$7
	*($1 + [24]) = (int_64)1
	*(($1 + [32])) = (int_64)0
	$6 = ($1 + [24])
	
.LABEL $label$5
	$5 = *($5 + [12])
	*($1 + [40]) = *($5)
	*($1 + [48]) = (CASTING float_64)(uint_64 *($5))
	$2 = $2
	$5 = ($2 + [-64])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($2 + [-8])
	*($3 + [24]) = ($3 + [8])
	$2 = ($1 + [8])
	*($3 + [36]) = $2
	*($3 + [32]) = $1
	*($3 + [40]) = $9
	*($3 + [44]) = $6
	*($3 + [48]) = $8
	*($3 + [52]) = ($1 + [40])
	*($3 + [56]) = ($1 + [48])
	CALL $86(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [60]) = CALL db_store_i64(*($4 + [8]), (int_64)-3020371635640205312, *(*($0 + [8])), $7, $5, [56])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$8 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$7 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$11 = *($1)
	*($3 + [32]) = *($2)
	*($1 + [64]) = CALL db_idx64_store($7, (int_64)-3020371635640205312, $10, $11, ($3 + [32]))
	$global$0 = ($3 + [64])
}

void .FUNC $17 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $120($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $10 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [208])
	$global$0 = $3
	$4 = *($0)
	*($3 + [120]) = [8353]
	*($3 + [124]) = CALL $129([8353])
	*($3 + [16]) = *($3 + [120])
	$5 = *(CALL $2(($3 + [128]), ($3 + [16])))
	*($3 + [104]) = [8712]
	*($3 + [108]) = CALL $129([8712])
	*($3 + [8]) = *($3 + [104])
	$6 = CALL $2(($3 + [112]), ($3 + [8]))
	*($3 + [88]) = [8724]
	*($3 + [92]) = CALL $129([8724])
	*($3) = *($3 + [88])
	$7 = CALL $2(($3 + [96]), $3)
	$8 = *($0)
	*(($3 + [32])) = [0]
	*($3 + [24]) = (int_64)0
	$0 = CALL $129([8738])
	if ( ((uint_32)$0 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$0 >= (uint_32)[11]) ){ goto $label$5 }
	*($3 + [24]) = ($0 << [1])
	$9 = (($3 + [24]) | [1])
	if ( $0 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$10 = (($0 + [16]) & [-16])
	$9 = CALL _Znwj($10)
	*($3 + [24]) = ($10 | [1])
	*($3 + [32]) = $9
	*($3 + [28]) = $0
	
.LABEL $label$4
	CALL memcpy($9, [8738], $0)
	
.LABEL $label$3
	*(($9 + $0)) = [0]
	*((($3 + [40]) + [24])) = *(($2 + [8]))
	$0 = (($3 + [24]) + [8])
	*(($3 + [80])) = *($0)
	*($0) = [0]
	*($3 + [48]) = $1
	*($3 + [40]) = $8
	*($3 + [56]) = *($2)
	*($3 + [72]) = *($3 + [24])
	*($3 + [24]) = (int_64)0
	*($3 + [136]) = *($6)
	*($3 + [144]) = *($7)
	*(($0 = CALL _Znwj([16]))) = $4
	*($0 + [8]) = $5
	*((($3 + [136]) + [36])) = [0]
	$9 = ($0 + [16])
	*((($3 + [136]) + [24])) = $9
	*(($3 + [156])) = $9
	*($3 + [152]) = $0
	*($3 + [164 align=4]) = (int_64)0
	$0 = *($3 + [72])
	$9 = ( *((($3 + [40]) + [36])) ? uint_32($0 >> [1]) : ($0 & [1]) )
	$0 = ($9 + [32])
	$1 = (CASTING uint_64)(uint_32 $9)
	$9 = ($3 + [164])
	
.LOOP $label$6:
	$0 = ($0 + [1])
	$1 = (uint_64)$1 >> (uint_64)(int_64)7
	if ( ((int_64)$1) != (int_64)0) ){ goto $label$6 }
	if ( ($0 == 0) ){ goto $label$8 }
	CALL $22($9, $0)
	$9 = *(($3 + [168]))
	$0 = *(($3 + [164]))
	goto $label$7 
	
.LABEL $label$8
	$9 = [0]
	$0 = [0]
	
.LABEL $label$7
	*($3 + [180]) = $0
	*($3 + [176]) = $0
	*($3 + [184]) = $9
	*($3 + [192]) = ($3 + [176])
	*($3 + [200]) = ($3 + [40])
	CALL $23(($3 + [200]), ($3 + [192]))
	CALL $21(($3 + [136]))
	$0 = *($3 + [164])
	if ( ($0 == 0) ){ goto $label$9 }
	*(($3 + [168])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$9
	$0 = *($3 + [152])
	if ( ($0 == 0) ){ goto $label$10 }
	*(($3 + [156])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$10
	if ( (*(($3 + [72])) & [1]) ){ goto $label$12 }
	if ( (*($3 + [24]) & [1]) ){ goto $label$11 }
	goto $label$1 
	
.LABEL $label$12
	CALL _ZdlPv(*(($3 + [80])))
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$11
	CALL _ZdlPv(*(($3 + [32])))
	$global$0 = ($3 + [208])
	return (unreachable)
	
.LABEL $label$2
	CALL $106(($3 + [24]))
	
.LABEL $label$1
	$global$0 = ($3 + [208])
}

void .FUNC $11 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_64 $12
	$3 = ($global$0 - [112])
	$global$0 = $3
	$4 = CALL $129([8336])
	if ( ($4 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [9301])
	goto $label$3 
	
.LABEL $label$4
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = (int_64)0
	
.LOOP $label$5:
	$6 = *(($4 + [8335]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [9346])
	
.LABEL $label$6
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$5 }
	$7 = ((int_64)$5 << (int_64)8)
	goto $label$1 
	
.LABEL $label$2
	$7 = (int_64)0
	
.LABEL $label$1
	*(($4 = (($3 + [16]) + [8]))) = *(($1 + [24]))
	*($3 + [16]) = *($1 + [16 align=4])
	$5 = *($1 + [32])
	$4 = *($4)
	*((($3 + [80]) + [8])) = $4
	*(($6 = (($3 + [96]) + [8]))) = $4
	$8 = *($3 + [16])
	*($3 + [96]) = $8
	*($3 + [80]) = $8
	$4 = *($6)
	*((($3 + [64]) + [8])) = $4
	*((($3 + [32]) + [24])) = $4
	*($3 + [32]) = $5
	*($3 + [40]) = $5
	$5 = *($3 + [96])
	*($3 + [48]) = $5
	*($3 + [64]) = $5
	$9 = ((int_64)$7 | (int_64)4)
	CALL $24(($3 + [64]), ($3 + [32]), *($1 + [40]), $9)
	$5 = (int_64)-1
	$4 = [-8]
	$10 = *($3 + [64])
	
.LOOP $label$8:
	$6 = ($4 + [8])
	$8 = *(($4 + [8504]))
	$5 = ((int_64)$5 + (int_64)1)
	if ( ((uint_64)$5 > (uint_64)(int_64)12) ){ goto $label$7 }
	$4 = $6
	if ( ((uint_64)$10 > (uint_64)$8) ){ goto $label$8 }
	
.LABEL $label$7
	if ( (uint_64)($5 <= (int_64)13) ){ goto $label$12 }
	*($0 + [8]) = $9
	*($0) = (int_64)0
	$5 = (uint_64)$7 >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$8 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$15 }
	$5 = $8
	$6 = $4
	$4 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$15
	$5 = $8
	
.LOOP $label$16:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$6 = ((int_32)$4 < (int_32)[6])
	$1 = ($4 + [1])
	$4 = $1
	if ( $6 ){ goto $label$16 }
	$4 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[6]) ){ goto $label$13 }
	
.LABEL $label$14
	$global$0 = ($3 + [112])
	return 
	
.LABEL $label$12
	if ( (uint_64)(((int_64)$8 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$17 }
	CALL eosio_assert([0], [9399])
	
.LABEL $label$17
	$4 = [0]
	$5 = (uint_64)$7 >> (uint_64)(int_64)8
	$10 = $5)
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$7 = (uint_64)$10 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$10 & (int_64)65280) == (int_64)0) ){ goto $label$19 }
	$10 = $7
	$1 = $4
	$4 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[6]) ){ goto $label$18 }
	goto $label$9 
	
.LABEL $label$19
	$10 = $7
	
.LOOP $label$20:
	if ( ((int_64)((int_64)$10 & (int_64)65280) != (int_64)0) ){ goto $label$10 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$1 = ((int_32)$4 < (int_32)[6])
	$11 = ($4 + [1])
	$4 = $11
	if ( $1 ){ goto $label$20 }
	$4 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$18 }
	goto $label$9 
	
.LABEL $label$11
	CALL eosio_assert([0], [9448])
	$global$0 = ($3 + [112])
	return 
	
.LABEL $label$10
	CALL eosio_assert([0], [9448])
	
.LABEL $label$9
	if ( ((int_64)*($3 + [72]) == (int_64)$9) ){ goto $label$21 }
	CALL eosio_assert([0], [9612])
	
.LABEL $label$21
	$7 = (int_64)
	if ( ((int_64)$7($8 - *($3 + [64]))) <= (int_64)-4611686018427387904) ){ goto $label$23 }
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$22 }
	CALL eosio_assert([0], [9682])
	goto $label$22 
	
.LABEL $label$23
	CALL eosio_assert([0], [9660])
	
.LABEL $label$22
	$12 = ((uint_64)((int_64)*(($6 + [8608])) * (int_64)*($2)) / (uint_64)(int_64)10000)
	$4 = [0]
	$8 = $5
	
.LOOP $label$26:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$25 }
	$10 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$27 }
	$8 = $10
	$6 = $4
	$4 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$27
	$8 = $10
	
.LOOP $label$28:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$25 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$6 = ((int_32)$4 < (int_32)[6])
	$1 = ($4 + [1])
	$4 = $1
	if ( $6 ){ goto $label$28 }
	$4 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[6]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$25
	CALL eosio_assert([0], [9448])
	
.LABEL $label$24
	$4 = [0]
	
.LOOP $label$31:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$30 }
	$8 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$32 }
	$5 = $8
	$6 = $4
	$4 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$32
	$5 = $8
	
.LOOP $label$33:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$30 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$6 = ((int_32)$4 < (int_32)[6])
	$1 = ($4 + [1])
	$4 = $1
	if ( $6 ){ goto $label$33 }
	$4 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[6]) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$30
	CALL eosio_assert([0], [9448])
	
.LABEL $label$29
	$5 = ( $7 ? $12 : ((int_64)$12 > (int_64)$7) )
	if ( ((int_64)$5 <= (int_64)-4611686018427387904) ){ goto $label$35 }
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$34 }
	CALL eosio_assert([0], [9536])
	goto $label$34 
	
.LABEL $label$35
	CALL eosio_assert([0], [9517])
	
.LABEL $label$34
	CALL __multi3($3, $5, (int_64)$5 >> (int_64)63), (int_64)5, (int_64)0)
	*($0 + [8]) = $9
	*($0) = $5
	$5 = *(($3 + [8]))
	$8 = *($3)
	if ( (( (uint_64)($8 <= (int_64)4611686018427387904) ? ((int_64)$5 < (int_64)0) : (int_64)($5 == 0) ) == 0) ){ goto $label$37 }
	if ( ( ((uint_64)$8 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$5 > (int_64)-1) : ((int_64)$5 == (int_64)-1) ) ){ goto $label$36 }
	CALL eosio_assert([0], [9276])
	goto $label$36 
	
.LABEL $label$37
	CALL eosio_assert([0], [9252])
	
.LABEL $label$36
	*($0) = $8
	$global$0 = ($3 + [112])
}

void .FUNC $12 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [208])
	$global$0 = $4
	$5 = *($0)
	*($4 + [120]) = [8353]
	*($4 + [124]) = CALL $129([8353])
	*($4 + [16]) = *($4 + [120])
	$6 = CALL $2(($4 + [128]), ($4 + [16]))
	$7 = *($0 + [32])
	$8 = *($6)
	*($4 + [104]) = [8761]
	*($4 + [108]) = CALL $129([8761])
	*($4 + [8]) = *($4 + [104])
	$9 = CALL $2(($4 + [112]), ($4 + [8]))
	*(($4 + [32])) = [0]
	*($4 + [24]) = (int_64)0
	$6 = CALL $129([8771])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$5 }
	*($4 + [24]) = ($6 << [1])
	$10 = (($4 + [24]) | [1])
	if ( $6 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$11 = (($6 + [16]) & [-16])
	$10 = CALL _Znwj($11)
	*($4 + [24]) = ($11 | [1])
	*($4 + [32]) = $10
	*($4 + [28]) = $6
	
.LABEL $label$4
	CALL memcpy($10, [8771], $6)
	
.LABEL $label$3
	*(($10 + $6)) = [0]
	*((($4 + [40]) + [24])) = *(($2 + [8]))
	*(($4 + [80])) = *(($3 + [8]))
	$6 = (($4 + [24]) + [8])
	*(($4 + [96])) = *($6)
	*($6) = [0]
	*($4 + [48]) = $1
	*($4 + [40]) = *($0 + [40])
	*($4 + [56]) = *($2)
	*($4 + [72]) = *($3)
	*($4 + [88]) = *($4 + [24])
	*($4 + [24]) = (int_64)0
	$1 = *($9)
	*($4 + [136]) = $7
	*($4 + [144]) = $1
	*(($6 = CALL _Znwj([16]))) = $5
	*($6 + [8]) = $8
	*(($4 + [172])) = [0]
	$0 = ($6 + [16])
	*((($4 + [136]) + [24])) = $0
	*(($4 + [156])) = $0
	*($4 + [152]) = $6
	*($4 + [164 align=4]) = (int_64)0
	$6 = *($4 + [88])
	$0 = ( *(($4 + [92])) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$6 = ($0 + [48])
	$1 = (CASTING uint_64)(uint_32 $0)
	$0 = ($4 + [164])
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$1 = (uint_64)$1 >> (uint_64)(int_64)7
	if ( ((int_64)$1) != (int_64)0) ){ goto $label$6 }
	if ( ($6 == 0) ){ goto $label$8 }
	CALL $22($0, $6)
	$0 = *(($4 + [168]))
	$6 = *(($4 + [164]))
	goto $label$7 
	
.LABEL $label$8
	$0 = [0]
	$6 = [0]
	
.LABEL $label$7
	*($4 + [180]) = $6
	*($4 + [176]) = $6
	*($4 + [184]) = $0
	*($4 + [192]) = ($4 + [176])
	*($4 + [200]) = ($4 + [40])
	CALL $25(($4 + [200]), ($4 + [192]))
	CALL $21(($4 + [136]))
	$6 = *($4 + [164])
	if ( ($6 == 0) ){ goto $label$9 }
	*(($4 + [168])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$9
	$6 = *($4 + [152])
	if ( ($6 == 0) ){ goto $label$10 }
	*(($4 + [156])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$10
	if ( (*(($4 + [88])) & [1]) ){ goto $label$12 }
	if ( (*($4 + [24]) & [1]) ){ goto $label$11 }
	goto $label$1 
	
.LABEL $label$12
	CALL _ZdlPv(*(($4 + [96])))
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$11
	CALL _ZdlPv(*(($4 + [32])))
	$global$0 = ($4 + [208])
	return (unreachable)
	
.LABEL $label$2
	CALL $106(($4 + [24]))
	
.LABEL $label$1
	$global$0 = ($4 + [208])
}

void .FUNC $13 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_64 $5, int_64 $6, int_64 $7, int_64 $8, int_64 $9, int_64 $10, int_64 $11, int_64 $12, int_32 $13)
{
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	$14 = ($global$0 - [560])
	$global$0 = $14
	if ( ((int_64)$5 == (int_64)0) ){ goto $label$4 }
	$15 = [0]
	$16 = *([0] + [9704])
	
.LOOP $label$6:
	*((($14 + [544]) + ($17 = $15))) = *(($16 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$5 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$17 == (int_32)[12]) )))))
	$15 = ($17 + [1])
	if ( ((uint_32)$17 > (uint_32)[11]) ){ goto $label$5 }
	$5 = ((int_64)$5 << (int_64)5)
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$6 }
	
.LABEL $label$5
	*(($14 + [184])) = [0]
	*($14 + [176]) = (int_64)0
	if ( ((uint_32)$15 >= (uint_32)[11]) ){ goto $label$3 }
	*($14 + [176]) = ($15 << [1])
	$16 = (($14 + [176]) | [1])
	goto $label$2 
	
.LABEL $label$4
	*(($14 + [184])) = [0]
	*($14 + [176]) = (int_64)0
	*($14 + [176]) = [0]
	$17 = (($14 + [176]) | [1])
	goto $label$1 
	
.LABEL $label$3
	$18 = (($15 + [16]) & [-16])
	$16 = CALL _Znwj($18)
	*($14 + [176]) = ($18 | [1])
	*($14 + [184]) = $16
	*($14 + [180]) = $15
	
.LABEL $label$2
	$18 = ($17 + [1])
	$17 = [0]
	
.LOOP $label$7:
	*(($16 + $17)) = *((($14 + [544]) + $17))
	$17 = ($17 + [1])
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$7 }
	$17 = ($16 + $15)
	
.LABEL $label$1
	$15 = [0]
	*($17) = [0]
	$17 = CALL $116(($14 + [176]), [0], [8818])
	$16 = ($17 + [8])
	*((($14 + [192]) + [8])) = *($16)
	*($14 + [192]) = *($17)
	*($17) = (int_64)0
	*($16) = [0]
	$17 = CALL $113(($14 + [192]), [8838])
	$16 = ($17 + [8])
	*((($14 + [208]) + [8])) = *($16)
	*($14 + [208]) = *($17)
	*($17) = (int_64)0
	*($16) = [0]
	CALL $119(($14 + [160]), $7)
	$17 = *($14 + [160])
	$16 = ($17 & [1])
	$17 = CALL $114(($14 + [208]), ( *($14 + [168]) ? (($14 + [160]) | [1]) : $16 ), ( *($14 + [164]) ? uint_32($17 >> [1]) : $16 ))
	$16 = ($17 + [8])
	*((($14 + [224]) + [8])) = *($16)
	*($14 + [224]) = *($17)
	*($17) = (int_64)0
	*($16) = [0]
	$17 = CALL $113(($14 + [224]), [8850])
	$16 = ($17 + [8])
	*((($14 + [240]) + [8])) = *($16)
	*($14 + [240]) = *($17)
	*($17) = (int_64)0
	*($16) = [0]
	CALL $119(($14 + [144]), $9)
	$17 = *($14 + [144])
	$16 = ($17 & [1])
	$17 = CALL $114(($14 + [240]), ( *($14 + [152]) ? (($14 + [144]) | [1]) : $16 ), ( *($14 + [148]) ? uint_32($17 >> [1]) : $16 ))
	$16 = ($17 + [8])
	*((($14 + [256]) + [8])) = *($16)
	*($14 + [256]) = *($17)
	*($17) = (int_64)0
	*($16) = [0]
	$17 = CALL $113(($14 + [256]), [8860])
	$16 = ($17 + [8])
	*((($14 + [272]) + [8])) = *($16)
	*($14 + [272]) = *($17)
	*($17) = (int_64)0
	*($16) = [0]
	if ( ((int_64)$6 == (int_64)0) ){ goto $label$11 }
	$16 = *([0] + [9704])
	
.LOOP $label$13:
	*((($14 + [544]) + ($17 = $15))) = *(($16 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$6 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$17 == (int_32)[12]) )))))
	$15 = ($17 + [1])
	if ( ((uint_32)$17 > (uint_32)[11]) ){ goto $label$12 }
	$6 = ((int_64)$6 << (int_64)5)
	if ( ((int_64)$6 != (int_64)0) ){ goto $label$13 }
	
.LABEL $label$12
	*(($14 + [136])) = [0]
	*($14 + [128]) = (int_64)0
	if ( ((uint_32)$15 >= (uint_32)[11]) ){ goto $label$10 }
	*($14 + [128]) = ($15 << [1])
	$16 = (($14 + [128]) | [1])
	goto $label$9 
	
.LABEL $label$11
	*((($14 + [128]) + [8])) = [0]
	*($14 + [128]) = (int_64)0
	*($14 + [128]) = [0]
	$17 = (($14 + [128]) | [1])
	$15 = $17
	goto $label$8 
	
.LABEL $label$10
	$18 = (($15 + [16]) & [-16])
	$16 = CALL _Znwj($18)
	*($14 + [128]) = ($18 | [1])
	*($14 + [136]) = $16
	*($14 + [132]) = $15
	
.LABEL $label$9
	$18 = ($17 + [1])
	$17 = [0]
	
.LOOP $label$14:
	*(($16 + $17)) = *((($14 + [544]) + $17))
	$17 = ($17 + [1])
	if ( ((int_32)$18 != (int_32)$17) ){ goto $label$14 }
	$15 = ($16 + $15)
	$17 = (($14 + [128]) | [1])
	
.LABEL $label$8
	*($15) = [0]
	$15 = *($14 + [128])
	$16 = ($15 & [1])
	$17 = CALL $114(($14 + [272]), ( *($14 + [136]) ? $17 : $16 ), ( *($14 + [132]) ? uint_32($15 >> [1]) : $16 ))
	$15 = ($17 + [8])
	*((($14 + [288]) + [8])) = *($15)
	*($14 + [288]) = *($17)
	*($17) = (int_64)0
	*($15) = [0]
	$17 = CALL $113(($14 + [288]), [8871])
	$15 = ($17 + [8])
	*((($14 + [304]) + [8])) = *($15)
	*($14 + [304]) = *($17)
	*($17) = (int_64)0
	*($15) = [0]
	CALL $119(($14 + [112]), $8)
	$17 = *($14 + [112])
	$15 = ($17 & [1])
	$17 = CALL $114(($14 + [304]), ( *($14 + [120]) ? (($14 + [112]) | [1]) : $15 ), ( *($14 + [116]) ? uint_32($17 >> [1]) : $15 ))
	$15 = ($17 + [8])
	*((($14 + [320]) + [8])) = *($15)
	*($14 + [320]) = *($17)
	*($17) = (int_64)0
	*($15) = [0]
	$17 = CALL $113(($14 + [320]), [8883])
	$15 = ($17 + [8])
	*((($14 + [336]) + [8])) = *($15)
	*($14 + [336]) = *($17)
	*($17) = (int_64)0
	*($15) = [0]
	CALL $119(($14 + [96]), $10)
	$17 = *($14 + [96])
	$15 = ($17 & [1])
	$17 = CALL $114(($14 + [336]), ( *($14 + [104]) ? (($14 + [96]) | [1]) : $15 ), ( *($14 + [100]) ? uint_32($17 >> [1]) : $15 ))
	$15 = ($17 + [8])
	*((($14 + [352]) + [8])) = *($15)
	*($14 + [352]) = *($17)
	*($17) = (int_64)0
	*($15) = [0]
	$17 = CALL $113(($14 + [352]), [8893])
	$15 = ($17 + [8])
	*((($14 + [368]) + [8])) = *($15)
	*($14 + [368]) = *($17)
	*($17) = (int_64)0
	*($15) = [0]
	CALL $118(($14 + [80]), $13)
	$17 = *($14 + [80])
	$15 = ($17 & [1])
	$17 = CALL $114(($14 + [368]), ( *($14 + [88]) ? (($14 + [80]) | [1]) : $15 ), ( *($14 + [84]) ? uint_32($17 >> [1]) : $15 ))
	$15 = ($17 + [8])
	*((($14 + [384]) + [8])) = *($15)
	*($14 + [384]) = *($17)
	*($17) = (int_64)0
	*($15) = [0]
	$17 = CALL $113(($14 + [384]), [8904])
	$15 = ($17 + [8])
	*((($14 + [400]) + [8])) = *($15)
	*($14 + [400]) = *($17)
	*($17) = (int_64)0
	*($15) = [0]
	CALL $26(($14 + [64]), $2)
	$17 = *($14 + [64])
	$15 = ($17 & [1])
	$17 = CALL $114(($14 + [400]), ( *($14 + [72]) ? (($14 + [64]) | [1]) : $15 ), ( *($14 + [68]) ? uint_32($17 >> [1]) : $15 ))
	$15 = ($17 + [8])
	*((($14 + [416]) + [8])) = *($15)
	*($14 + [416]) = *($17)
	*($17) = (int_64)0
	*($15) = [0]
	$17 = CALL $113(($14 + [416]), [8919])
	$15 = ($17 + [8])
	*((($14 + [432]) + [8])) = *($15)
	*($14 + [432]) = *($17)
	*($17) = (int_64)0
	*($15) = [0]
	CALL $119(($14 + [48]), $11)
	$17 = *($14 + [48])
	$15 = ($17 & [1])
	$17 = CALL $114(($14 + [432]), ( *($14 + [56]) ? (($14 + [48]) | [1]) : $15 ), ( *($14 + [52]) ? uint_32($17 >> [1]) : $15 ))
	$15 = ($17 + [8])
	*((($14 + [448]) + [8])) = *($15)
	*($14 + [448]) = *($17)
	*($17) = (int_64)0
	*($15) = [0]
	$17 = CALL $113(($14 + [448]), [8935])
	$15 = ($17 + [8])
	*((($14 + [464]) + [8])) = *($15)
	*($14 + [464]) = *($17)
	*($17) = (int_64)0
	*($15) = [0]
	CALL $119(($14 + [32]), $12)
	$17 = *($14 + [32])
	$15 = ($17 & [1])
	$17 = CALL $114(($14 + [464]), ( *($14 + [40]) ? (($14 + [32]) | [1]) : $15 ), ( *($14 + [36]) ? uint_32($17 >> [1]) : $15 ))
	$15 = ($17 + [8])
	*((($14 + [480]) + [8])) = *($15)
	*($14 + [480]) = *($17)
	*($17) = (int_64)0
	*($15) = [0]
	$17 = CALL $113(($14 + [480]), [8948])
	$15 = ($17 + [8])
	*((($14 + [496]) + [8])) = *($15)
	*($14 + [496]) = *($17)
	*($17) = (int_64)0
	*($15) = [0]
	CALL $26(($14 + [16]), $3)
	$17 = *($14 + [16])
	$15 = ($17 & [1])
	$17 = CALL $114(($14 + [496]), ( *($14 + [24]) ? (($14 + [16]) | [1]) : $15 ), ( *($14 + [20]) ? uint_32($17 >> [1]) : $15 ))
	$15 = ($17 + [8])
	*((($14 + [512]) + [8])) = *($15)
	*($14 + [512]) = *($17)
	*($17) = (int_64)0
	*($15) = [0]
	$17 = CALL $113(($14 + [512]), [8966])
	$15 = ($17 + [8])
	*((($14 + [528]) + [8])) = *($15)
	*($14 + [528]) = *($17)
	*($17) = (int_64)0
	*($15) = [0]
	CALL $26($14, $4)
	$17 = *($14)
	$15 = ($17 & [1])
	$17 = CALL $114(($14 + [528]), ( *($14 + [8]) ? ($14 | [1]) : $15 ), ( *($14 + [4]) ? uint_32($17 >> [1]) : $15 ))
	$15 = ($17 + [8])
	*((($14 + [544]) + [8])) = *($15)
	*($14 + [544]) = *($17)
	*($17) = (int_64)0
	*($15) = [0]
	$17 = CALL $113(($14 + [544]), [8985])
	$6 = *($17)
	*($17) = (int_64)0
	*($0) = $6
	$17 = ($17 + [8])
	*(($0 + [8])) = *($17)
	*($17) = [0]
	if ( (*($14 + [544]) & [1]) ){ goto $label$83 }
	if ( (*($14) & [1]) ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$83
	CALL _ZdlPv(*($14 + [552]))
	if ( ((*($14) & [1]) == 0) ){ goto $label$81 }
	
.LABEL $label$82
	CALL _ZdlPv(*(($14 + [8])))
	$17 = [1]
	if ( ((*($14 + [528]) & [1]) == 0) ){ goto $label$80 }
	goto $label$79 
	
.LABEL $label$81
	$17 = [1]
	if ( (*($14 + [528]) & [1]) ){ goto $label$79 }
	
.LABEL $label$80
	if ( (*($14 + [512]) & $17) ){ goto $label$78 }
	goto $label$77 
	
.LABEL $label$79
	CALL _ZdlPv(*($14 + [536]))
	if ( ((*($14 + [512]) & $17) == 0) ){ goto $label$77 }
	
.LABEL $label$78
	CALL _ZdlPv(*($14 + [520]))
	$17 = [1]
	if ( ((*($14 + [16]) & [1]) == 0) ){ goto $label$76 }
	goto $label$75 
	
.LABEL $label$77
	$17 = [1]
	if ( (*($14 + [16]) & [1]) ){ goto $label$75 }
	
.LABEL $label$76
	if ( (*($14 + [496]) & $17) ){ goto $label$74 }
	goto $label$73 
	
.LABEL $label$75
	CALL _ZdlPv(*(($14 + [24])))
	if ( ((*($14 + [496]) & $17) == 0) ){ goto $label$73 }
	
.LABEL $label$74
	CALL _ZdlPv(*($14 + [504]))
	$17 = [1]
	if ( ((*($14 + [480]) & [1]) == 0) ){ goto $label$72 }
	goto $label$71 
	
.LABEL $label$73
	$17 = [1]
	if ( (*($14 + [480]) & [1]) ){ goto $label$71 }
	
.LABEL $label$72
	if ( (*($14 + [32]) & $17) ){ goto $label$70 }
	goto $label$69 
	
.LABEL $label$71
	CALL _ZdlPv(*($14 + [488]))
	if ( ((*($14 + [32]) & $17) == 0) ){ goto $label$69 }
	
.LABEL $label$70
	CALL _ZdlPv(*(($14 + [40])))
	$17 = [1]
	if ( ((*($14 + [464]) & [1]) == 0) ){ goto $label$68 }
	goto $label$67 
	
.LABEL $label$69
	$17 = [1]
	if ( (*($14 + [464]) & [1]) ){ goto $label$67 }
	
.LABEL $label$68
	if ( (*($14 + [448]) & $17) ){ goto $label$66 }
	goto $label$65 
	
.LABEL $label$67
	CALL _ZdlPv(*($14 + [472]))
	if ( ((*($14 + [448]) & $17) == 0) ){ goto $label$65 }
	
.LABEL $label$66
	CALL _ZdlPv(*($14 + [456]))
	$17 = [1]
	if ( ((*($14 + [48]) & [1]) == 0) ){ goto $label$64 }
	goto $label$63 
	
.LABEL $label$65
	$17 = [1]
	if ( (*($14 + [48]) & [1]) ){ goto $label$63 }
	
.LABEL $label$64
	if ( (*($14 + [432]) & $17) ){ goto $label$62 }
	goto $label$61 
	
.LABEL $label$63
	CALL _ZdlPv(*(($14 + [56])))
	if ( ((*($14 + [432]) & $17) == 0) ){ goto $label$61 }
	
.LABEL $label$62
	CALL _ZdlPv(*($14 + [440]))
	$17 = [1]
	if ( ((*($14 + [416]) & [1]) == 0) ){ goto $label$60 }
	goto $label$59 
	
.LABEL $label$61
	$17 = [1]
	if ( (*($14 + [416]) & [1]) ){ goto $label$59 }
	
.LABEL $label$60
	if ( (*($14 + [64]) & $17) ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$59
	CALL _ZdlPv(*($14 + [424]))
	if ( ((*($14 + [64]) & $17) == 0) ){ goto $label$57 }
	
.LABEL $label$58
	CALL _ZdlPv(*(($14 + [72])))
	$17 = [1]
	if ( ((*($14 + [400]) & [1]) == 0) ){ goto $label$56 }
	goto $label$55 
	
.LABEL $label$57
	$17 = [1]
	if ( (*($14 + [400]) & [1]) ){ goto $label$55 }
	
.LABEL $label$56
	if ( (*($14 + [384]) & $17) ){ goto $label$54 }
	goto $label$53 
	
.LABEL $label$55
	CALL _ZdlPv(*($14 + [408]))
	if ( ((*($14 + [384]) & $17) == 0) ){ goto $label$53 }
	
.LABEL $label$54
	CALL _ZdlPv(*($14 + [392]))
	$17 = [1]
	if ( ((*($14 + [80]) & [1]) == 0) ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$53
	$17 = [1]
	if ( (*($14 + [80]) & [1]) ){ goto $label$51 }
	
.LABEL $label$52
	if ( (*($14 + [368]) & $17) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$51
	CALL _ZdlPv(*(($14 + [88])))
	if ( ((*($14 + [368]) & $17) == 0) ){ goto $label$49 }
	
.LABEL $label$50
	CALL _ZdlPv(*($14 + [376]))
	$17 = [1]
	if ( ((*($14 + [352]) & [1]) == 0) ){ goto $label$48 }
	goto $label$47 
	
.LABEL $label$49
	$17 = [1]
	if ( (*($14 + [352]) & [1]) ){ goto $label$47 }
	
.LABEL $label$48
	if ( (*($14 + [96]) & $17) ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$47
	CALL _ZdlPv(*($14 + [360]))
	if ( ((*($14 + [96]) & $17) == 0) ){ goto $label$45 }
	
.LABEL $label$46
	CALL _ZdlPv(*(($14 + [104])))
	$17 = [1]
	if ( ((*($14 + [336]) & [1]) == 0) ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$45
	$17 = [1]
	if ( (*($14 + [336]) & [1]) ){ goto $label$43 }
	
.LABEL $label$44
	if ( (*($14 + [320]) & $17) ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$43
	CALL _ZdlPv(*($14 + [344]))
	if ( ((*($14 + [320]) & $17) == 0) ){ goto $label$41 }
	
.LABEL $label$42
	CALL _ZdlPv(*($14 + [328]))
	$17 = [1]
	if ( ((*($14 + [112]) & [1]) == 0) ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$41
	$17 = [1]
	if ( (*($14 + [112]) & [1]) ){ goto $label$39 }
	
.LABEL $label$40
	if ( (*($14 + [304]) & $17) ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$39
	CALL _ZdlPv(*(($14 + [120])))
	if ( ((*($14 + [304]) & $17) == 0) ){ goto $label$37 }
	
.LABEL $label$38
	CALL _ZdlPv(*($14 + [312]))
	$17 = [1]
	if ( ((*($14 + [288]) & [1]) == 0) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$37
	$17 = [1]
	if ( (*($14 + [288]) & [1]) ){ goto $label$35 }
	
.LABEL $label$36
	if ( (*($14 + [128]) & $17) ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$35
	CALL _ZdlPv(*($14 + [296]))
	if ( ((*($14 + [128]) & $17) == 0) ){ goto $label$33 }
	
.LABEL $label$34
	CALL _ZdlPv(*(($14 + [136])))
	$17 = [1]
	if ( ((*($14 + [272]) & [1]) == 0) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$33
	$17 = [1]
	if ( (*($14 + [272]) & [1]) ){ goto $label$31 }
	
.LABEL $label$32
	if ( (*($14 + [256]) & $17) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$31
	CALL _ZdlPv(*($14 + [280]))
	if ( ((*($14 + [256]) & $17) == 0) ){ goto $label$29 }
	
.LABEL $label$30
	CALL _ZdlPv(*($14 + [264]))
	$17 = [1]
	if ( ((*($14 + [144]) & [1]) == 0) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	$17 = [1]
	if ( (*($14 + [144]) & [1]) ){ goto $label$27 }
	
.LABEL $label$28
	if ( (*($14 + [240]) & $17) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	CALL _ZdlPv(*(($14 + [152])))
	if ( ((*($14 + [240]) & $17) == 0) ){ goto $label$25 }
	
.LABEL $label$26
	CALL _ZdlPv(*($14 + [248]))
	$17 = [1]
	if ( ((*($14 + [224]) & [1]) == 0) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$17 = [1]
	if ( (*($14 + [224]) & [1]) ){ goto $label$23 }
	
.LABEL $label$24
	if ( (*($14 + [160]) & $17) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	CALL _ZdlPv(*($14 + [232]))
	if ( ((*($14 + [160]) & $17) == 0) ){ goto $label$21 }
	
.LABEL $label$22
	CALL _ZdlPv(*(($14 + [168])))
	$17 = [1]
	if ( ((*($14 + [208]) & [1]) == 0) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	$17 = [1]
	if ( (*($14 + [208]) & [1]) ){ goto $label$19 }
	
.LABEL $label$20
	if ( (*($14 + [192]) & $17) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL _ZdlPv(*($14 + [216]))
	if ( ((*($14 + [192]) & $17) == 0) ){ goto $label$17 }
	
.LABEL $label$18
	CALL _ZdlPv(*($14 + [200]))
	if ( ((*($14 + [176]) & [1]) == 0) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	if ( (*($14 + [176]) & [1]) ){ goto $label$15 }
	
.LABEL $label$16
	$global$0 = ($14 + [560])
	return 
	
.LABEL $label$15
	CALL _ZdlPv(*($14 + [184]))
	$global$0 = ($14 + [560])
}

int_32 .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9468])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9468])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9468])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $18 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_64 $14
	int_32 $15
	int_32 $16
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10155])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10201])
	
.LABEL $label$2
	$6 = ($1 + [8])
	*($5 + [16]) = *($6)
	$7 = ($1 + [24])
	$8 = ($1 + [16])
	$11 = *($1 + [24])
	$10 = *($1 + [16])
	$9 = *($1 + [32])
	$12 = ((int_64)((int_64)$9 + (int_64)$10) + (int_64)$11)
	$13 = *(($3 + [4]))
	$14 = *($1)
	$15 = ($1 + [32])
	$16 = $15
	$3 = *(*($3))
	if ( ((int_32)$3 == (int_32)[1]) ){ goto $label$3 }
	$9 = $10
	$16 = $8
	if ( ((int_32)$3 == (int_32)[2]) ){ goto $label$3 }
	$9 = $11
	$16 = $7
	
.LABEL $label$3
	*($16) = ((int_64)$9 + (int_64)1)
	$10 = *($13)
	$9 = *($1 + [40])
	*($1 + [40]) = ( $9 ? $10 : ((uint_64)$9 > (uint_64)$10) )
	*($1 + [48]) = ((float_64)((float_64)((float_64)*($1 + [48]) * (float_64)(CASTING float_64)(uint_64 $12)) + (float_64)(CASTING float_64)(uint_64 *($13))) / (float_64)(CASTING float_64)(uint_64 ((int_64)$12 + (int_64)1)))
	$4 = $4
	$3 = ($4 + [-64])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-8])
	*($5 + [24]) = $5
	*($5 + [36]) = $6
	*($5 + [32]) = $1
	*($5 + [40]) = $8
	*($5 + [44]) = $7
	*($5 + [48]) = $15
	*($5 + [52]) = ($1 + [40])
	*($5 + [56]) = ($1 + [48])
	CALL $86(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [60]), $2, $3, [56])
	if ( (uint_64)($14 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$14 + (int_64)1) : ((uint_64)$14 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($5 + [32]) = *(($1 + [8]))
	if ( (CALL $128(($5 + [16]), ($5 + [32]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [64])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$6 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371635640205312, ($5 + [24]), $14)
	*($3) = $1
	
.LABEL $label$6
	CALL db_idx64_update($1, $2, ($5 + [32]))
	
.LABEL $label$5
	$global$0 = ($5 + [64])
}

void .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-3020371635640205312, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $14($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $85(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [10001])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	$6 = *(*($5 + [8]))
	if ( ((int_32)$6 != (int_32)[1]) ){ goto $label$6 }
	*($1 + [32]) = (int_64)1
	*($1 + [16]) = (int_64)0
	*($1 + [24]) = (int_64)0
	$6 = ($1 + [24])
	$8 = ($1 + [32])
	$9 = ($1 + [16])
	goto $label$5 
	
.LABEL $label$6
	$9 = ($1 + [16])
	if ( ((int_32)$6 != (int_32)[2]) ){ goto $label$7 }
	*($1 + [32]) = (int_64)0
	*($1 + [24]) = (int_64)0
	*(($1 + [16])) = (int_64)1
	$6 = ($1 + [24])
	$8 = ($1 + [32])
	goto $label$5 
	
.LABEL $label$7
	*($1 + [32]) = (int_64)0
	*($1 + [24]) = (int_64)1
	*(($1 + [16])) = (int_64)0
	$6 = ($1 + [24])
	$8 = ($1 + [32])
	
.LABEL $label$5
	$5 = *($5 + [12])
	*($1 + [40]) = *($5)
	*($1 + [48]) = (CASTING float_64)(uint_64 *($5))
	$2 = $2
	$5 = ($2 + [-64])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($2 + [-8])
	*($3 + [24]) = ($3 + [8])
	$2 = ($1 + [8])
	*($3 + [36]) = $2
	*($3 + [32]) = $1
	*($3 + [40]) = $9
	*($3 + [44]) = $6
	*($3 + [48]) = $8
	*($3 + [52]) = ($1 + [40])
	*($3 + [56]) = ($1 + [48])
	CALL $86(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [60]) = CALL db_store_i64(*($4 + [8]), (int_64)-3020371635640205312, *(*($0 + [8])), $7, $5, [56])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$8 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$7 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$11 = *($1)
	*($3 + [32]) = *($2)
	*($1 + [64]) = CALL db_idx64_store($7, (int_64)-3020371635640205312, $10, $11, ($3 + [32]))
	$global$0 = ($3 + [64])
}

void .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = (int_64)0
	*($1 + [16]) = (int_64)0
	*($1 + [24]) = (int_64)0
	$5 = ($1 + [24])
	$6 = ($1 + [16])
	$7 = *($0)
	$8 = ($1 + [8])
	$9 = $8
	$4 = *(*(($4 + [4])))
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$2 }
	if ( ((int_32)$4 == (int_32)[3]) ){ goto $label$3 }
	$9 = $6
	if ( ((int_32)$4 == (int_32)[2]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$9 = $5
	
.LABEL $label$2
	*($9) = (int_64)1
	
.LABEL $label$1
	$9 = $2
	$2 = ($9 + [-32])
	$global$0 = $2
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = $9
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $8
	*($3 + [32]) = $1
	*($3 + [40]) = $6
	*($3 + [44]) = $5
	CALL $97(($3 + [32]), ($3 + [24]))
	$10 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($7 + [8]), (int_64)-4157495357179166720, *(*($0 + [8])), $10, $2, [32])
	if ( (uint_64)($10 <= *($7 + [16])) ){ goto $label$4 }
	*(($7 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$global$0 = ($3 + [48])
}

void .FUNC $59 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $120($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $50 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [96])
	$global$0 = $2
	CALL require_auth(*($0))
	*(($2 + [80])) = [0]
	*($2 + [64]) = (int_64)-1
	*($2 + [84]) = [0]
	$3 = *($0)
	*($2 + [48]) = $3
	*($2 + [56]) = $3
	*($2 + [72]) = (int_64)0
	$0 = CALL db_lowerbound_i64($3, $3, (int_64)4229865212519383040, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $3(($2 + [48]), $0)
	$4 = [0]
	
.LOOP $label$2:
	*($2 + [40]) = [8448]
	*($2 + [44]) = CALL $129([8448])
	*($2 + [16]) = *($2 + [40])
	CALL $2(($2 + [88]), ($2 + [16]))
	if ( ((int_64)*($0 + [8]) == (int_64)*($2 + [88])) ){ goto $label$5 }
	*($2 + [24]) = [8464]
	*($2 + [28]) = CALL $129([8464])
	*($2 + [8]) = *($2 + [24])
	CALL $2(($2 + [32]), ($2 + [8]))
	if ( ((int_64)*(($0 + [8])) != (int_64)*($2 + [32])) ){ goto $label$4 }
	
.LABEL $label$5
	if ( $0 ){ goto $label$6 }
	CALL eosio_assert([0], [9768])
	CALL eosio_assert([0], [9582])
	
.LABEL $label$6
	$5 = [0]
	$6 = CALL db_next_i64(*($0 + [60]), ($2 + [88]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$7 }
	$5 = CALL $3(($2 + [48]), $6)
	
.LABEL $label$7
	CALL $4(($2 + [48]), $0)
	$4 = ($4 + [1])
	if ( ((uint_64)(CASTING int_64)(int_32 $4) >= (uint_64)$1) ){ goto $label$1 }
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	$0 = CALL db_next_i64(*($0 + [60]), ($2 + [88]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $3(($2 + [48]), $0)
	$0 = $5
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$0 = $5
	if ( $5 ){ goto $label$2 }
	
.LABEL $label$1
	$4 = *($2 + [72])
	if ( ($4 == 0) ){ goto $label$8 }
	$6 = ($2 + [76])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [40]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*(($5 + [48])))
	
.LABEL $label$13
	CALL _ZdlPv($5)
	
.LABEL $label$12
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$11 }
	$0 = *(($2 + [72]))
	goto $label$9 
	
.LABEL $label$10
	$0 = $4
	
.LABEL $label$9
	*($6) = $4
	CALL _ZdlPv($0)
	
.LABEL $label$8
	$global$0 = ($2 + [96])
}

void .FUNC $51 (int_32 $0, int_64 $1)
{
	CALL require_auth($1)
	CALL require_recipient(*($0))
}

void .FUNC $52 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	$3 = ($global$0 - [208])
	$global$0 = $3
	CALL $53(($3 + [120]))
	$4 = *($0)
	if ( ((int_64)*($3 + [120]) == (int_64)$4) ){ goto $label$1 }
	if ( ((int_64)*($3 + [128]) != (int_64)$4) ){ goto $label$1 }
	$5 = *(($3 + [156]))
	$6 = ( $5 ? uint_32($6 >> [1]) : $7 )
	$9 = CALL $129([8477])
	$7 = ( $9 ? $6 : ((uint_32)$6 > (uint_32)$9) )
	$6 = *($3 + [152])
	$7 = ($6 & [1])
	$8 = ( *(($3 + [160])) ? ($3 + [153]) : $7 )
	$10 = ($8 + $7)
	$5 = $10
	if ( ($9 == 0) ){ goto $label$3 }
	$5 = $10
	if ( ((int_32)$7 < (int_32)$9) ){ goto $label$3 }
	$6 = ((int_32)$6 ^ (int_32)[-1])
	$5 = ((int_32)$9 ^ (int_32)[-1])
	$11 = ($8 + ([-3] - ( $5 ? $6 : ((uint_32)$5 > (uint_32)$6) )))
	$12 = ($9 + [8476])
	$14 = $10
	$13 = (($8 + $9) + [-1])
	if ( ((int_32)$13 == (int_32)$14) ){ goto $label$5 }
	
.LOOP $label$6:
	$5 = $9
	$6 = $11
	$14 = ($14 + [-1])
	if ( ((int_32)*($14) != (int_32)*($12)) ){ goto $label$7 }
	
.LOOP $label$8:
	if ( ((int_32)$5 == (int_32)[1]) ){ goto $label$4 }
	$7 = ($5 + [8475])
	$15 = *($6)
	$5 = ($5 + [-1])
	$6 = ($6 + [-1])
	if ( ((int_32)$15 == (int_32)*($7)) ){ goto $label$8 }
	
.LABEL $label$7
	$11 = ($11 + [-1])
	if ( ((int_32)$13 != (int_32)$14) ){ goto $label$6 }
	
.LABEL $label$5
	$5 = $10
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$5 = ($6 + [1])
	
.LABEL $label$3
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ((($9 == 0) | ((int_32)$5 != (int_32)$10)) == 0) ){ goto $label$1 }
	$6 = [0]
	if ( ((uint_64)((int_64)*($3 + [136]) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$9 }
	$4 = (uint_64)*((($3 + [120]) + [24])) >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$16 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$12 }
	$4 = $16
	$6 = [1]
	$7 = $5
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$12
	$4 = $16
	
.LOOP $label$13:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$10 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $6 ){ goto $label$13 }
	$6 = [1]
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$6 = [0]
	
.LABEL $label$9
	CALL eosio_assert($6, [8482])
	*($3 + [112]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000)
	*(($7 = ($3 + [104]))) = [0]
	*($3 + [88]) = (int_64)-1
	*($3 + [96]) = (int_64)0
	*($3 + [108]) = [0]
	$4 = *($0)
	*($3 + [72]) = $4
	*($3 + [80]) = $4
	*($3 + [180]) = ($3 + [120])
	*($3 + [176]) = ($3 + [72])
	*($3 + [184]) = ($3 + [112])
	*($3 + [200]) = $4
	if ( ((int_64)$4 == (int_64)CALL current_receiver()) ){ goto $label$14 }
	CALL eosio_assert([0], [9950])
	
.LABEL $label$14
	*($3 + [20]) = ($3 + [176])
	*($3 + [16]) = ($3 + [72])
	*($3 + [24]) = ($3 + [200])
	*(($5 = CALL _Znwj([72])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [40 align=4]) = (int_64)0
	*($5 + [48]) = [0]
	*($5 + [56]) = ($3 + [72])
	CALL $54(($3 + [16]), $5)
	*($3 + [56]) = $5
	$4 = *($5)
	*($3 + [16]) = $4
	$15 = *($5 + [60])
	*($3 + [8]) = $15
	$9 = ($3 + [100])
	$6 = *($9)
	if ( ((uint_32)$6 >= (uint_32)*($7)) ){ goto $label$17 }
	*($6 + [8]) = $4
	*($6 + [16]) = $15
	*($3 + [56]) = [0]
	*($6) = $5
	*($9) = ($6 + [24])
	$5 = *($3 + [56])
	$6 = [0]
	*($3 + [56]) = [0]
	if ( $5 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL $55(($3 + [96]), ($3 + [56]), ($3 + [16]), ($3 + [8]))
	$5 = *($3 + [56])
	$6 = [0]
	*($3 + [56]) = [0]
	if ( ($5 == 0) ){ goto $label$15 }
	
.LABEL $label$16
	if ( ((*($5 + [40]) & [1]) == 0) ){ goto $label$18 }
	CALL _ZdlPv(*(($5 + [48])))
	
.LABEL $label$18
	CALL _ZdlPv($5)
	
.LABEL $label$15
	*($3 + [68]) = $6
	$4 = *(($3 + [136]))
	if ( ((int_64)$4 == (int_64)50000) ){ goto $label$21 }
	if ( ((int_64)$4 == (int_64)10000) ){ goto $label$20 }
	if ( ((int_64)$4 != (int_64)1000) ){ goto $label$19 }
	*($3 + [68]) = [1]
	goto $label$19 
	
.LABEL $label$21
	*($3 + [68]) = [3]
	goto $label$19 
	
.LABEL $label$20
	*($3 + [68]) = [2]
	
.LABEL $label$19
	$4 = ((int_64)*($3 + [112]) + (int_64)-1549584000000)
	$16 = ((int_64))($4 - ((uint_64)$4 % (uint_64)(int_64)86400000)) + (int_64)1549584000000
	*($3 + [56]) = $16)
	*(($3 + [48])) = [0]
	*($3 + [32]) = (int_64)-1
	*($3 + [40]) = (int_64)0
	$4 = *($0)
	*($3 + [16]) = $4
	*($3 + [24]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)-4157495357179166720, $16)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$24 }
	$5 = CALL $56(($3 + [16]), $5)
	if ( ((int_32)*($5 + [32]) == (int_32)($3 + [16])) ){ goto $label$25 }
	CALL eosio_assert([0], [10252])
	
.LABEL $label$25
	$4 = *($0)
	*($3 + [176]) = ($3 + [68])
	CALL $57(($3 + [16]), $5, $4, ($3 + [176]))
	$7 = *($3 + [40])
	if ( $7 ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	$16 = *($0)
	*($3 + [12]) = ($3 + [68])
	*($3 + [8]) = ($3 + [56])
	*($3 + [200]) = $16
	if ( ((int_64)$4 == (int_64)CALL current_receiver()) ){ goto $label$26 }
	CALL eosio_assert([0], [9950])
	
.LABEL $label$26
	*($3 + [180]) = ($3 + [8])
	*($3 + [176]) = ($3 + [16])
	*($3 + [184]) = ($3 + [200])
	*(($5 = CALL _Znwj([48])) + [32]) = ($3 + [16])
	CALL $58(($3 + [176]), $5)
	*($3 + [192]) = $5
	$4 = *($5)
	*($3 + [176]) = $4
	$7 = *($5 + [36])
	*($3 + [172]) = $7
	$15 = ($3 + [44])
	$6 = *($15)
	if ( ((uint_32)$6 >= (uint_32)*(($3 + [48]))) ){ goto $label$29 }
	*($6 + [8]) = $4
	*($6 + [16]) = $7
	*($3 + [192]) = [0]
	*($6) = $5
	*($15) = ($6 + [24])
	$5 = *($3 + [192])
	*($3 + [192]) = [0]
	if ( ($5 == 0) ){ goto $label$27 }
	goto $label$28 
	
.LABEL $label$29
	CALL $59(($3 + [40]), ($3 + [192]), ($3 + [176]), ($3 + [172]))
	$5 = *($3 + [192])
	*($3 + [192]) = [0]
	if ( ($5 == 0) ){ goto $label$27 }
	
.LABEL $label$28
	CALL _ZdlPv($5)
	
.LABEL $label$27
	$7 = *($3 + [40])
	if ( ($7 == 0) ){ goto $label$22 }
	
.LABEL $label$23
	$15 = ($3 + [44])
	$5 = *($15)
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$31 }
	
.LOOP $label$32:
	$5 = ($5 + [-24])
	$6 = *($5)
	*($5) = [0]
	if ( ($6 == 0) ){ goto $label$33 }
	CALL _ZdlPv($6)
	
.LABEL $label$33
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$32 }
	$5 = *(($3 + [40]))
	goto $label$30 
	
.LABEL $label$31
	$5 = $7
	
.LABEL $label$30
	*($15) = $7
	CALL _ZdlPv($5)
	
.LABEL $label$22
	$7 = *($3 + [96])
	if ( ($7 == 0) ){ goto $label$1 }
	$15 = ($3 + [100])
	$5 = *($15)
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$35 }
	
.LOOP $label$36:
	$5 = ($5 + [-24])
	$6 = *($5)
	*($5) = [0]
	if ( ($6 == 0) ){ goto $label$37 }
	if ( ((*($6 + [40]) & [1]) == 0) ){ goto $label$38 }
	CALL _ZdlPv(*(($6 + [48])))
	
.LABEL $label$38
	CALL _ZdlPv($6)
	
.LABEL $label$37
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$36 }
	$5 = *(($3 + [96]))
	goto $label$34 
	
.LABEL $label$35
	$5 = $7
	
.LABEL $label$34
	*($15) = $7
	CALL _ZdlPv($5)
	
.LABEL $label$1
	if ( ((*($3 + [152]) & [1]) == 0) ){ goto $label$39 }
	CALL _ZdlPv(*(($3 + [160])))
	
.LABEL $label$39
	$global$0 = ($3 + [208])
}

void .FUNC $53 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = ($global$0 - [48])
	$2 = $1
	$global$0 = $1
	$3 = CALL action_data_size()
	if ( ($3 <= [513]) ){ goto $label$2 }
	$1 = CALL $132($3)
	goto $label$1 
	
.LABEL $label$2
	$1 = ($1 - (($3 + [15]) & [-16]))
	$global$0 = $1
	
.LABEL $label$1
	CALL read_action_data($1, $3)
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = (int_64)0
	*($0 + [32 align=4]) = (int_64)0
	*(($0 + [40])) = [0]
	*($2 + [12]) = $1
	*($2 + [8]) = $1
	*($2 + [16]) = ($1 + $3)
	*($2 + [24]) = ($2 + [8])
	*($2 + [36]) = ($0 + [8])
	*($2 + [32]) = $0
	*($2 + [40]) = ($0 + [16])
	*($2 + [44]) = ($0 + [32])
	CALL $60(($2 + [32]), ($2 + [24]))
	$global$0 = ($2 + [48])
}

void .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)4229865212519383040, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $3($6, $8)
	*($3 + [28]) = [0]
	*($3 + [24]) = $6
	$7 = *(*(CALL $94(($3 + [24])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [10001])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	$6 = *($5 + [4])
	*($1 + [8]) = *($6)
	*($1 + [16]) = *($6 + [16])
	*(($1 + [24])) = *(($6 + [24]))
	$8 = ($1 + [40])
	CALL $108($8, (*($5 + [4]) + [32]))
	*($1 + [52]) = [1]
	*($1 + [32]) = *(*($5 + [8]))
	$5 = *($1 + [40])
	$6 = ( *(($1 + [44])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($6 + [41])
	$7 = (CASTING uint_64)(uint_32 $6)
	$9 = ($1 + [32])
	$10 = ($1 + [52])
	$11 = ($1 + [16])
	
.LOOP $label$5:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$5 }
	if ( ($5 <= [513]) ){ goto $label$7 }
	$6 = CALL $132($5)
	goto $label$6 
	
.LABEL $label$7
	$6 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$6
	*($3 + [4]) = $6
	*($3) = $6
	*($3 + [8]) = ($6 + $5)
	*($3 + [16]) = $3
	*($3 + [28]) = ($1 + [8])
	*($3 + [24]) = $1
	*($3 + [32]) = $11
	*($3 + [36]) = $9
	*($3 + [40]) = $8
	*($3 + [44]) = $10
	CALL $95(($3 + [24]), ($3 + [16]))
	$7 = *($1)
	*($1 + [60]) = CALL db_store_i64(*($4 + [8]), (int_64)4229865212519383040, *(*($0 + [8])), $7, $6, $5)
	if ( ($5 <= [513]) ){ goto $label$8 }
	CALL $135($6)
	
.LABEL $label$8
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$9 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$7 = *(($4 + [8]))
	$12 = *(*(($0 + [8])))
	$13 = *($1)
	*($3 + [24]) = *(($1 + [8]))
	*($1 + [64]) = CALL db_idx64_store($7, (int_64)4229865212519383040, $12, $13, ($3 + [24]))
	$global$0 = ($3 + [48])
}

void .FUNC $34 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [52]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10155])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10201])
	
.LABEL $label$2
	*($1 + [40]) = *($1 + [32])
	$6 = *($1 + [24])
	*($1 + [24]) = *($1 + [16])
	*($1 + [32]) = $6
	*($1 + [16]) = *($1 + [8])
	*($1 + [51]) = *($1 + [50])
	*($1 + [8]) = *(*($3))
	*($1 + [50]) = *($1 + [49])
	$3 = *(($3 + [4]))
	$6 = *($1)
	*($1 + [49]) = *($1 + [48])
	$3 = *($3)
	*($1 + [48]) = ( [1] ? ( [3] ? [2] : ((int_32)$3 == (int_32)[2]) ) : ((int_32)$3 == (int_32)[1]) )
	$4 = $4
	$3 = ($4 + [-64])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-12])
	*($5 + [16]) = $5
	*($5 + [28]) = ($1 + [8])
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [24])
	*($5 + [40]) = ($1 + [32])
	*($5 + [44]) = ($1 + [40])
	*($5 + [48]) = ($1 + [48])
	*($5 + [52]) = ($1 + [49])
	*($5 + [56]) = ($1 + [50])
	*($5 + [60]) = ($1 + [51])
	CALL $88(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [56]), $2, $3, [52])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [64])
}

int_32 .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9554])
	
.LABEL $label$5
	$4 = CALL $132($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([48])) + [32]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	CALL $96(($3 + [32]), ($3 + [24]))
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $59(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $135($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $57 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10155])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10201])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *(*($3))
	if ( ((int_32)$3 == (int_32)[3]) ){ goto $label$6 }
	if ( ((int_32)$3 == (int_32)[2]) ){ goto $label$5 }
	if ( ((int_32)$3 != (int_32)[1]) ){ goto $label$3 }
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$6
	$3 = ($1 + [24])
	goto $label$4 
	
.LABEL $label$5
	$3 = ($1 + [16])
	
.LABEL $label$4
	*($3) = ((int_64)*($3) + (int_64)1)
	
.LABEL $label$3
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = $3
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [24])
	CALL $97(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [36]), $2, $4, [32])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$global$0 = ($5 + [48])
}

int_32 .FUNC $116 (int_32 $0, int_32 $1, int_32 $2)
{
	return CALL $115($0, $1, $2, CALL $129($2))
}

int_32 .FUNC $117 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$5 }
	$5 = uint_32($5 >> [1])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ($5 <= $1) ){ goto $label$3 }
	$5 = ($5 - $1)
	$2 = ( $5 ? $2 : ($5 <= $2) )
	if ( $6 ){ goto $label$6 }
	$0 = ($0 + [1])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( ($5 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$6
	$0 = *($0 + [8])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$1 = CALL $128(($0 + $1), $3, $5)
	if ( ($1 == 0) ){ goto $label$1 }
	return $1
	
.LABEL $label$1
	(unreachable)
	return ( [-1] ? $6 : ($2 <= $4) )
}

int_32 .FUNC $114 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $109($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

void .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = *(*($4 + [4]))
	$5 = ($1 + [8])
	$6 = *($0)
	$7 = *(*($4 + [8]))
	if ( ((int_32)$7 != (int_32)[1]) ){ goto $label$2 }
	*($1 + [48]) = [1]
	$4 = ($1 + [48])
	goto $label$1 
	
.LABEL $label$2
	$4 = ($1 + [48])
	if ( ((int_32)$7 != (int_32)[2]) ){ goto $label$3 }
	*($4) = [3]
	goto $label$1 
	
.LABEL $label$3
	*($4) = [2]
	
.LABEL $label$1
	$7 = $2
	$2 = ($7 + [-64])
	$global$0 = $2
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($7 + [-12])
	*($3 + [16]) = $3
	*($3 + [28]) = $5
	*($3 + [24]) = $1
	*($3 + [32]) = ($1 + [16])
	*($3 + [36]) = ($1 + [24])
	*($3 + [40]) = ($1 + [32])
	*($3 + [44]) = ($1 + [40])
	*($3 + [48]) = $4
	*($3 + [52]) = ($1 + [49])
	*($3 + [56]) = ($1 + [50])
	*($3 + [60]) = ($1 + [51])
	CALL $88(($3 + [24]), ($3 + [16]))
	$8 = *($1)
	*($1 + [56]) = CALL db_store_i64(*($6 + [8]), (int_64)-7948142257121525760, *(*($0 + [8])), $8, $2, [52])
	if ( (uint_64)($8 <= *($6 + [16])) ){ goto $label$4 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$global$0 = ($3 + [64])
}

void .FUNC $112 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$7 = ($0 + [1])
	$8 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = *($0 + [8])
	$8 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = [11]
	$2 = ($2 + $1)
	$9 = ($1 << [1])
	$2 = ( $9 ? $2 : ($2 <= $9) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$8 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL _Znwj($8)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $7, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($7 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL _ZdlPv($7)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($8 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $113 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $129($1)
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $109($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

void .FUNC $110 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL _Znwj(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL _ZdlPv($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $111 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$5 }
	$5 = uint_32($3 >> [1])
	if ( ($5 <= $1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$3 }
	
.LABEL $label$4
	$1 = ($1 - $5)
	if ( ($1 == 0) ){ goto $label$2 }
	if ( $4 ){ goto $label$8 }
	$5 = [10]
	$4 = uint_32($3 >> [1])
	if ( (([10] - $4) <= $1) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$4 = *($0 + [4])
	$3 = *($0)
	$5 = (($3 & [-2]) + [-1])
	if ( ((uint_32)($5 - $4) >= (uint_32)$1) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $112($0, $5, (($4 + $1) - $5), $4, $4, [0], [0])
	$3 = *($0)
	
.LABEL $label$6
	if ( ($3 & [1]) ){ goto $label$10 }
	$3 = ($0 + [1])
	goto $label$9 
	
.LABEL $label$10
	$3 = *($0 + [8])
	
.LABEL $label$9
	CALL memset(($3 + $4), ($2 & [255]), $1)
	$1 = ($4 + $1)
	if ( (*($0) & [1]) ){ goto $label$11 }
	*($0) = ($1 << [1])
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$11
	*($0 + [4]) = $1
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$3
	if ( $4 ){ goto $label$1 }
	*((($0 + $1) + [1])) = [0]
	*($0) = ($1 << [1])
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*((*($0 + [8]) + $1)) = [0]
	*($0 + [4]) = $1
}

void .FUNC $118 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $111(($2 + [16]), [10], [0])
	$3 = *($2 + [16])
	$4 = ( *($2 + [20]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = (($2 + [16]) | [1])
	$6 = ($2 + [24])
	
.LOOP $label$2:
	*($2) = $1
	$3 = CALL $127(( *($6) ? $5 : ($3 & [1]) ), ($4 + [1]), [8461], $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$1 }
	$4 = $3
	goto $label$3 
	
.LABEL $label$4
	$4 = (($4 << [1]) | [1])
	
.LABEL $label$3
	CALL $111(($2 + [16]), $4, [0])
	$3 = *($2 + [16])
	goto $label$2 
	
.LABEL $label$1
	CALL $111(($2 + [16]), $3, [0])
	*(($0 + [8])) = *((($2 + [16]) + [8]))
	*($0) = *($2 + [16])
	$global$0 = ($2 + [32])
}

void .FUNC $119 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $111(($2 + [16]), [10], [0])
	$3 = *($2 + [16])
	$4 = ( *($2 + [20]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = (($2 + [16]) | [1])
	$6 = ($2 + [24])
	
.LOOP $label$2:
	*($2) = $1
	$3 = CALL $127(( *($6) ? $5 : ($3 & [1]) ), ($4 + [1]), [8733], $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$1 }
	$4 = $3
	goto $label$3 
	
.LABEL $label$4
	$4 = (($4 << [1]) | [1])
	
.LABEL $label$3
	CALL $111(($2 + [16]), $4, [0])
	$3 = *($2 + [16])
	goto $label$2 
	
.LABEL $label$1
	CALL $111(($2 + [16]), $3, [0])
	*(($0 + [8])) = *((($2 + [16]) + [8]))
	*($0) = *($2 + [16])
	$global$0 = ($2 + [32])
}

void .FUNC $29 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_64 $14
	int_32 $15
	int_32 $16
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10155])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10201])
	
.LABEL $label$2
	$6 = ($1 + [8])
	*($5 + [16]) = *($6)
	$7 = ($1 + [24])
	$8 = ($1 + [32])
	$11 = *($1 + [24])
	$10 = *($1 + [16])
	$9 = *($1 + [32])
	$12 = ((int_64)((int_64)$9 + (int_64)$10) + (int_64)$11)
	$13 = *(($3 + [4]))
	$14 = *($1)
	$15 = ($1 + [16])
	$16 = $15
	$3 = *(*($3))
	if ( ((int_32)$3 == (int_32)[1]) ){ goto $label$3 }
	$10 = $9
	$16 = $8
	if ( ((int_32)$3 == (int_32)[2]) ){ goto $label$3 }
	$10 = $11
	$16 = $7
	
.LABEL $label$3
	*($16) = ((int_64)$10 + (int_64)1)
	$9 = *($13)
	$10 = *($1 + [40])
	*($1 + [40]) = ( $10 ? $9 : ((uint_64)$10 > (uint_64)$9) )
	*($1 + [48]) = ((float_64)((float_64)((float_64)*($1 + [48]) * (float_64)(CASTING float_64)(uint_64 $12)) + (float_64)(CASTING float_64)(uint_64 *($13))) / (float_64)(CASTING float_64)(uint_64 ((int_64)$12 + (int_64)1)))
	$4 = $4
	$3 = ($4 + [-64])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-8])
	*($5 + [24]) = $5
	*($5 + [36]) = $6
	*($5 + [32]) = $1
	*($5 + [40]) = $15
	*($5 + [44]) = $7
	*($5 + [48]) = $8
	*($5 + [52]) = ($1 + [40])
	*($5 + [56]) = ($1 + [48])
	CALL $86(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [60]), $2, $3, [56])
	if ( (uint_64)($14 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$14 + (int_64)1) : ((uint_64)$14 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($5 + [32]) = *(($1 + [8]))
	if ( (CALL $128(($5 + [16]), ($5 + [32]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [64])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$6 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371635640205312, ($5 + [24]), $14)
	*($3) = $1
	
.LABEL $label$6
	CALL db_idx64_update($1, $2, ($5 + [32]))
	
.LABEL $label$5
	$global$0 = ($5 + [64])
}

void .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)7035937633859534848, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $5($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $82(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [10001])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	$6 = *($5 + [8])
	*(($1 + [24])) = *(($6 + [8]))
	*($1 + [16]) = *($6)
	*($1 + [32]) = *(*($5 + [12]))
	*($1 + [40]) = *(*($5 + [16]))
	*($1 + [48]) = *(*($5 + [20]))
	$5 = CALL $129([8336])
	if ( ($5 <= [8]) ){ goto $label$8 }
	CALL eosio_assert([0], [9301])
	goto $label$7 
	
.LABEL $label$8
	if ( ($5 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$7 = (int_64)0
	
.LOOP $label$9:
	$6 = *(($5 + [8335]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$10 }
	CALL eosio_assert([0], [9346])
	
.LABEL $label$10
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$9 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$5 
	
.LABEL $label$6
	$9 = (int_64)4
	
.LABEL $label$5
	$10 = ($1 + [48])
	$11 = ($1 + [40])
	$12 = ($1 + [32])
	$13 = ($1 + [16])
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$14 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$7 = $14
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$14
	$7 = $14
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $6 ){ goto $label$15 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	CALL eosio_assert([0], [9448])
	
.LABEL $label$11
	*($1 + [56]) = (int_64)0
	*(($1 + [64])) = $9
	$6 = $2
	$5 = ($6 + [-80])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($6 + [-8])
	*($3 + [24]) = ($3 + [8])
	$6 = ($1 + [8])
	*($3 + [36]) = $6
	*($3 + [32]) = $1
	*($3 + [40]) = $13
	*($3 + [44]) = $12
	*($3 + [48]) = $11
	*($3 + [52]) = $10
	*($3 + [56]) = ($1 + [56])
	CALL $83(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [76]) = CALL db_store_i64(*($4 + [8]), (int_64)7035937633859534848, *(*($0 + [8])), $7, $5, [72])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$16 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	$7 = *(($4 + [8]))
	$14 = *(*(($0 + [8])))
	$9 = *($1)
	*($3 + [32]) = *($6)
	*($1 + [80]) = CALL db_idx64_store($7, (int_64)7035937633859534848, $14, $9, ($3 + [32]))
	$global$0 = ($3 + [64])
}

void .FUNC $55 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $120($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [40]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [48])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL _ZdlPv($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $107 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL _Znwj($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $106 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $21 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $22($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $41(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

void .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = *($1 + [8])
	$4 = ( *(($1 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ([-8] - $4)
	$5 = (CASTING uint_64)(uint_32 $4)
	$6 = ($1 + [8])
	
.LOOP $label$1:
	$3 = ($3 + [-1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	$4 = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	CALL $22($0, ([0] - $3))
	$4 = *(($0 + [4]))
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$3 = [0]
	
.LABEL $label$2
	*($2 + [4]) = $3
	*($2) = $3
	*($2 + [8]) = $4
	if ( ((int_32)($4 - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9468])
	
.LABEL $label$4
	CALL memcpy($3, $1, [8])
	*($2 + [4]) = ($3 + [8])
	CALL $89($2, $6)
	$global$0 = ($2 + [16])
}

void .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9468])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9468])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9468])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9468])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $89(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $120($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9468])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9468])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9468])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($4 + [24]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9468])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = ($4 + [32])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9468])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($4 + [40]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9468])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	CALL $89(*($1), ($4 + [48]))
	$global$0 = ($2 + [16])
}

void .FUNC $24 (int_32 $0, int_32 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$global$0 = $4
	$5 = [0]
	*(($4 + [32])) = [0]
	*($4 + [8]) = $2
	*($4 + [16]) = (int_64)-1
	$6 = *($1)
	*($4) = $6
	*($4 + [24]) = (int_64)0
	$1 = CALL db_lowerbound_i64($6, $2, (int_64)4406679876405297152, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	$1 = CALL $61($4, $1)
	if ( ((int_64)*($1 + [8]) != (int_64)$2) ){ goto $label$3 }
	$7 = [2]
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	$7 = [13]
	
.LABEL $label$1
	
.LOOP $label$4:
	goto $label$42 
	
.LABEL $label$44
	$1 = CALL $61($4, $1)
	if ( ((int_64)*($1 + [8]) != (int_64)$2) ){ goto $label$19 }
	$7 = [2]
	goto $label$4 
	
.LABEL $label$43
	if ( ((int_64)*(($1 + [40])) == (int_64)$3) ){ goto $label$20 }
	$7 = [0]
	goto $label$4 
	
.LABEL $label$42
	$1 = CALL db_next_i64(*($1 + [52]), ($4 + [40]))
	if ( ((int_32)$1 >= (int_32)[0]) ){ goto $label$21 }
	$7 = [13]
	goto $label$4 
	
.LABEL $label$41
	*($0 + [8]) = $3
	*($0) = (int_64)0
	$2 = (uint_64)$3 >> (uint_64)(int_64)8)
	$7 = [14]
	goto $label$4 
	
.LABEL $label$40
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$7 = [17]
	goto $label$4 
	
.LABEL $label$39
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$7 = [18]
	goto $label$4 
	
.LABEL $label$38
	$2 = $3
	$1 = $5
	$5 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[6]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$37
	$2 = $3
	$7 = [20]
	goto $label$4 
	
.LABEL $label$36
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$7 = [21]
	goto $label$4 
	
.LABEL $label$35
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$1 = ((int_32)$5 < (int_32)[6])
	$0 = ($5 + [1])
	$5 = $0
	if ( $1 ){ goto $label$5 }
	$7 = [22]
	goto $label$4 
	
.LABEL $label$34
	$5 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[6]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$33
	CALL eosio_assert([0], [9448])
	$7 = [16]
	goto $label$4 
	
.LABEL $label$32
	$0 = *($4 + [24])
	if ( ($0 == 0) ){ goto $label$18 }
	$7 = [4]
	goto $label$4 
	
.LABEL $label$31
	$8 = ($4 + [28])
	$5 = *($8)
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$16 }
	$7 = [5]
	goto $label$4 
	
.LABEL $label$30
	$7 = [6]
	goto $label$4 
	
.LABEL $label$29
	$5 = ($5 + [-24])
	$1 = *($5)
	*($5) = [0]
	if ( ($1 == 0) ){ goto $label$14 }
	$7 = [7]
	goto $label$4 
	
.LABEL $label$28
	CALL _ZdlPv($1)
	$7 = [8]
	goto $label$4 
	
.LABEL $label$27
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$15 }
	$7 = [9]
	goto $label$4 
	
.LABEL $label$26
	$5 = *(($4 + [24]))
	goto $label$13 
	
.LABEL $label$25
	*($0) = *($1 + [32])
	*(($0 + [8])) = *(($1 + [40]))
	$0 = *($4 + [24])
	if ( $0 ){ goto $label$17 }
	$7 = [12]
	goto $label$4 
	
.LABEL $label$24
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$23
	$5 = $0
	$7 = [10]
	goto $label$4 
	
.LABEL $label$22
	*($8) = $0
	CALL _ZdlPv($5)
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$21
	$7 = [1]
	goto $label$4 
	
.LABEL $label$20
	$7 = [3]
	goto $label$4 
	
.LABEL $label$19
	$7 = [0]
	goto $label$4 
	
.LABEL $label$18
	$7 = [12]
	goto $label$4 
	
.LABEL $label$17
	$7 = [4]
	goto $label$4 
	
.LABEL $label$16
	$7 = [11]
	goto $label$4 
	
.LABEL $label$15
	$7 = [6]
	goto $label$4 
	
.LABEL $label$14
	$7 = [8]
	goto $label$4 
	
.LABEL $label$13
	$7 = [10]
	goto $label$4 
	
.LABEL $label$12
	$7 = [14]
	goto $label$4 
	
.LABEL $label$11
	$7 = [16]
	goto $label$4 
	
.LABEL $label$10
	$7 = [14]
	goto $label$4 
	
.LABEL $label$9
	$7 = [16]
	goto $label$4 
	
.LABEL $label$8
	$7 = [15]
	goto $label$4 
	
.LABEL $label$7
	$7 = [15]
	goto $label$4 
	
.LABEL $label$6
	$7 = [19]
	goto $label$4 
	
.LABEL $label$5
	$7 = [20]
	goto $label$4 
	$7
}

void .FUNC $27 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_64 $18
	int_64 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	int_64 $24
	$7 = ($global$0 - [1216])
	$global$0 = $7
	*($7 + [1160]) = $2
	*($7 + [1168]) = $1
	*($7 + [1152]) = $3
	*(($7 + [1144])) = [0]
	*($7 + [1128]) = (int_64)-1
	*($7 + [1148]) = [0]
	$3 = *($0)
	*($7 + [1112]) = $3
	*($7 + [1120]) = $3
	*($7 + [1136]) = (int_64)0
	$8 = CALL db_lowerbound_i64($3, $3, (int_64)4229865212519383040, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$2 }
	$9 = ($6 + [1])
	$10 = ($6 + [4])
	$11 = ($6 + [8])
	$12 = CALL $3(($7 + [1112]), $8)
	if ( ((int_64)*($12 + [8]) != (int_64)*($7 + [1168])) ){ goto $label$3 }
	$13 = [2]
	goto $label$1 
	
.LABEL $label$3
	$13 = [0]
	goto $label$1 
	
.LABEL $label$2
	$13 = [251]
	
.LABEL $label$1
	
.LOOP $label$4:
	goto $label$437 
	
.LABEL $label$446
	$12 = CALL $3(($7 + [1112]), $8)
	if ( ((int_64)*($12 + [8]) != (int_64)*($7 + [1168])) ){ goto $label$189 }
	$13 = [2]
	goto $label$4 
	
.LABEL $label$445
	$17 = ($8 & [1])
	$8 = *($6)
	$15 = ($8 & [1])
	$8 = *($12 + [40])
	$14 = uint_32($8 >> [1])
	$16 = ( *(($12 + [44])) ? $14 : $15 )
	if ( ((int_32)$16 != (int_32)( *($10) ? uint_32($8 >> [1]) : $17 )) ){ goto $label$192 }
	$13 = [3]
	goto $label$4 
	
.LABEL $label$444
	$8 = (($12 + [40]) + [1])
	$17 = ( *($11) ? $9 : $17 )
	if ( $15 ){ goto $label$188 }
	$13 = [247]
	goto $label$4 
	
.LABEL $label$443
	if ( ($16 == 0) ){ goto $label$186 }
	$13 = [248]
	goto $label$4 
	
.LABEL $label$442
	$16 = ([0] - $14)
	$13 = [249]
	goto $label$4 
	
.LABEL $label$441
	if ( ((int_32)*($8) != (int_32)*($17)) ){ goto $label$190 }
	$13 = [250]
	goto $label$4 
	
.LABEL $label$440
	$17 = ($17 + [1])
	$8 = ($8 + [1])
	$16 = ($16 + [1])
	if ( $16 ){ goto $label$184 }
	goto $label$185 
	
.LABEL $label$439
	if ( ($16 == 0) ){ goto $label$187 }
	$13 = [5]
	goto $label$4 
	
.LABEL $label$438
	if ( (CALL $128(( *(($12 + [48])) ? $8 : $15 ), $17, $16) == 0) ){ goto $label$191 }
	$13 = [0]
	goto $label$4 
	
.LABEL $label$437
	$8 = CALL db_next_i64(*($12 + [60]), ($7 + [1016]))
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$193 }
	$13 = [251]
	goto $label$4 
	
.LABEL $label$436
	CALL eosio_assert([0], [8203])
	CALL eosio_assert([0], [9768])
	CALL eosio_assert([0], [9582])
	$12 = [0]
	goto $label$183 
	
.LABEL $label$435
	CALL eosio_assert([1], [8203])
	$13 = [7]
	goto $label$4 
	
.LABEL $label$434
	$8 = CALL db_next_i64(*($12 + [60]), ($7 + [1016]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$182 }
	$13 = [8]
	goto $label$4 
	
.LABEL $label$433
	CALL $3(($7 + [1112]), $8)
	$13 = [9]
	goto $label$4 
	
.LABEL $label$432
	CALL $4(($7 + [1112]), $12)
	$8 = *($5)
	$17 = CALL $129([8340])
	if ( ((int_32)$17 != (int_32)( *($5 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$181 }
	$13 = [245]
	goto $label$4 
	
.LABEL $label$431
	if ( (CALL $117($5, [0], [-1], [8340], $17) == 0) ){ goto $label$178 }
	$13 = [246]
	goto $label$4 
	
.LABEL $label$430
	$8 = *($5)
	$13 = [10]
	goto $label$4 
	
.LABEL $label$429
	if ( ($8 & [1]) ){ goto $label$180 }
	$13 = [244]
	goto $label$4 
	
.LABEL $label$428
	$17 = ($5 + [1])
	$8 = uint_32(($8 & [254]) >> [1])
	goto $label$179 
	
.LABEL $label$427
	$8 = *(($5 + [4]))
	$17 = *($5 + [8])
	$13 = [12]
	goto $label$4 
	
.LABEL $label$426
	*($7 + [1100]) = $8
	*($7 + [1096]) = $17
	*($7 + [520]) = *($7 + [1096])
	if ( (CALL is_account(*(CALL $2(($7 + [1104]), ($7 + [520])))) == 0) ){ goto $label$177 }
	$13 = [240]
	goto $label$4 
	
.LABEL $label$425
	$8 = *($5)
	if ( ($8 & [1]) ){ goto $label$6 }
	$13 = [243]
	goto $label$4 
	
.LABEL $label$424
	$8 = uint_32($8 >> [1])
	$17 = ($5 + [1])
	goto $label$5 
	
.LABEL $label$423
	$8 = *(($5 + [4]))
	$17 = *($5 + [8])
	$13 = [242]
	goto $label$4 
	
.LABEL $label$422
	*($7 + [1084]) = $8
	*($7 + [1080]) = $17
	*($7 + [512]) = *($7 + [1080])
	$8 = CALL $2(($7 + [1088]), ($7 + [512]))
	$3 = *(($4 + [8]))
	*((($7 + [1064]) + [8])) = $3
	$1 = *($8)
	$2 = *($4)
	*((($7 + [496]) + [8])) = $3
	$3 = ((int_64)$2 / (int_64)200)
	*($7 + [1064]) = $3
	*($7 + [496]) = $3
	CALL $10($0, $1, ($7 + [496]))
	$13 = [13]
	goto $label$4 
	
.LABEL $label$421
	*($7 + [1056]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000)
	*(($7 + [1048])) = [0]
	*($7 + [1032]) = (int_64)-1
	*($7 + [1052]) = [0]
	$3 = *($0)
	*($7 + [1016]) = $3
	*($7 + [1024]) = $3
	*($7 + [1040]) = (int_64)0
	$8 = CALL db_lowerbound_i64($3, $3, (int_64)7035937633859534848, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$176 }
	$13 = [14]
	goto $label$4 
	
.LABEL $label$420
	$17 = ($4 + [8])
	$8 = CALL $5(($7 + [1016]), $8)
	if ( ((int_64)*($8 + [8]) == (int_64)*($7 + [1168])) ){ goto $label$175 }
	goto $label$174 
	
.LABEL $label$419
	$8 = CALL $5(($7 + [1016]), $8)
	if ( ((int_64)*($8 + [8]) == (int_64)*($7 + [1168])) ){ goto $label$173 }
	$13 = [15]
	goto $label$4 
	
.LABEL $label$418
	if ( ((int_64)*(($8 + [24])) == (int_64)*($17)) ){ goto $label$172 }
	$13 = [16]
	goto $label$4 
	
.LABEL $label$417
	CALL eosio_assert([0], [9193])
	$13 = [17]
	goto $label$4 
	
.LABEL $label$416
	if ( ((int_64)*($8 + [16]) == (int_64)*($4)) ){ goto $label$194 }
	$13 = [18]
	goto $label$4 
	
.LABEL $label$415
	$8 = CALL db_next_i64(*($8 + [76]), ($7 + [584]))
	if ( ((int_32)$8 >= (int_32)[0]) ){ goto $label$171 }
	$13 = [20]
	goto $label$4 
	
.LABEL $label$414
	$3 = *($0)
	*($7 + [592]) = $4
	*($7 + [588]) = ($7 + [1168])
	*($7 + [584]) = ($7 + [1016])
	*($7 + [596]) = ($7 + [1160])
	*($7 + [600]) = ($7 + [1152])
	*($7 + [604]) = ($7 + [1056])
	*($7 + [1184]) = $3
	if ( ((int_64)*($7 + [1016]) == (int_64)CALL current_receiver()) ){ goto $label$170 }
	$13 = [21]
	goto $label$4 
	
.LABEL $label$413
	CALL eosio_assert([0], [9950])
	$13 = [22]
	goto $label$4 
	
.LABEL $label$412
	*($7 + [548]) = ($7 + [584])
	*($7 + [544]) = ($7 + [1016])
	*($7 + [552]) = ($7 + [1184])
	*(($8 = CALL _Znwj([88])) + [16]) = (int_64)0
	*($8 + [8]) = (int_64)0
	*($8 + [24]) = (int_64)0
	*($8 + [56]) = (int_64)0
	*($8 + [64]) = (int_64)0
	*($8 + [72]) = ($7 + [1016])
	CALL $28(($7 + [544]), $8)
	*($7 + [704]) = $8
	$3 = *($8)
	*($7 + [544]) = $3
	$16 = *($8 + [76])
	*($7 + [528]) = $16
	$12 = ($7 + [1044])
	$17 = *($12)
	if ( ((uint_32)$17 >= (uint_32)*(($7 + [1048]))) ){ goto $label$169 }
	$13 = [54]
	goto $label$4 
	
.LABEL $label$411
	*($17 + [8]) = $3
	*($17 + [16]) = $16
	*($7 + [704]) = [0]
	*($17) = $8
	*($12) = ($17 + [24])
	$8 = *($7 + [704])
	$17 = [0]
	*($7 + [704]) = [0]
	if ( $8 ){ goto $label$166 }
	goto $label$167 
	
.LABEL $label$410
	CALL $7(($7 + [1040]), ($7 + [704]), ($7 + [544]), ($7 + [528]))
	$8 = *($7 + [704])
	$17 = [0]
	*($7 + [704]) = [0]
	if ( ($8 == 0) ){ goto $label$168 }
	$13 = [24]
	goto $label$4 
	
.LABEL $label$409
	CALL _ZdlPv($8)
	$13 = [25]
	goto $label$4 
	
.LABEL $label$408
	*(($7 + [1008])) = $17
	*($7 + [1000]) = (int_64)0
	$3 = *($7 + [1168])
	$8 = CALL $129([8807])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$165 }
	$13 = [26]
	goto $label$4 
	
.LABEL $label$407
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$164 }
	$13 = [52]
	goto $label$4 
	
.LABEL $label$406
	*($7 + [1000]) = ($8 << [1])
	$17 = (($7 + [1000]) | [1])
	if ( $8 ){ goto $label$162 }
	goto $label$163 
	
.LABEL $label$405
	$16 = (($8 + [16]) & [-16])
	$17 = CALL _Znwj($16)
	*($7 + [1000]) = ($16 | [1])
	*($7 + [1008]) = $17
	*($7 + [1004]) = $8
	$13 = [28]
	goto $label$4 
	
.LABEL $label$404
	CALL memcpy($17, [8807], $8)
	$13 = [29]
	goto $label$4 
	
.LABEL $label$403
	*(($17 + $8)) = [0]
	CALL $8($0, $3, ($7 + [1000]))
	if ( ((*($7 + [1000]) & [1]) == 0) ){ goto $label$161 }
	$13 = [30]
	goto $label$4 
	
.LABEL $label$402
	CALL _ZdlPv(*($7 + [1008]))
	$16 = *($7 + [1040])
	if ( $16 ){ goto $label$158 }
	goto $label$159 
	
.LABEL $label$401
	*($7 + [992]) = *($8 + [8])
	*($7 + [984]) = *($8 + [32])
	$18 = *($8 + [40])
	$19 = *($8 + [48])
	$17 = CALL db_next_i64(*($8 + [76]), ($7 + [584]))
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$146 }
	$13 = [56]
	goto $label$4 
	
.LABEL $label$400
	CALL $5(($7 + [1016]), $17)
	$13 = [57]
	goto $label$4 
	
.LABEL $label$399
	CALL $9(($7 + [1016]), $8)
	*($7 + [983]) = [0]
	$1 = *($7 + [1160])
	$3 = *($7 + [984])
	if ( ((uint_64)$3 > (uint_64)$1) ){ goto $label$145 }
	$13 = [58]
	goto $label$4 
	
.LABEL $label$398
	$2 = *($7 + [1152])
	if ( ((int_64)$3 != (int_64)$1) ){ goto $label$144 }
	$13 = [230]
	goto $label$4 
	
.LABEL $label$397
	if ( ((uint_64)$18 >= (uint_64)$2) ){ goto $label$143 }
	$13 = [231]
	goto $label$4 
	
.LABEL $label$396
	$3 = *(($4 + [8]))
	$20 = *($7 + [992])
	$1 = *($4)
	if ( ((int_64)$1 >= (int_64)2305843009213693952) ){ goto $label$12 }
	$13 = [238]
	goto $label$4 
	
.LABEL $label$395
	if ( ((int_64)$1 > (int_64)-2305843009213693952) ){ goto $label$11 }
	$13 = [239]
	goto $label$4 
	
.LABEL $label$394
	CALL eosio_assert([0], [9276])
	goto $label$10 
	
.LABEL $label$393
	CALL eosio_assert([0], [9252])
	$13 = [233]
	goto $label$4 
	
.LABEL $label$392
	$1 = ((int_64)$1 << (int_64)1)
	CALL __multi3(($7 + [384]), $1, (int_64)$1 >> (int_64)63), (int_64)90, (int_64)0)
	$1 = *(($7 + [392]))
	$2 = *($7 + [384])
	if ( (( (uint_64)($2 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ) == 0) ){ goto $label$9 }
	$13 = [236]
	goto $label$4 
	
.LABEL $label$391
	if ( ( ((uint_64)$2 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ) ){ goto $label$8 }
	$13 = [237]
	goto $label$4 
	
.LABEL $label$390
	CALL eosio_assert([0], [9276])
	goto $label$7 
	
.LABEL $label$389
	CALL eosio_assert([0], [9252])
	$13 = [235]
	goto $label$4 
	
.LABEL $label$388
	*(($7 + [376])) = $3
	*($7 + [968]) = $3
	$3 = ((int_64)$2 / (int_64)100)
	*($7 + [368]) = $3
	*($7 + [960]) = $3
	CALL $10($0, $20, ($7 + [368]))
	*($7 + [983]) = [1]
	$13 = [66]
	goto $label$4 
	
.LABEL $label$387
	$8 = CALL $129([8336])
	if ( ($8 <= [8]) ){ goto $label$132 }
	$13 = [216]
	goto $label$4 
	
.LABEL $label$386
	CALL eosio_assert([0], [9301])
	goto $label$130 
	
.LABEL $label$385
	if ( ($8 == 0) ){ goto $label$131 }
	$13 = [68]
	goto $label$4 
	
.LABEL $label$384
	$3 = (int_64)0
	$13 = [69]
	goto $label$4 
	
.LABEL $label$383
	$17 = *(($8 + [8335]))
	if ( ((($17 + [-65]) & [255]) <= [26]) ){ goto $label$128 }
	$13 = [214]
	goto $label$4 
	
.LABEL $label$382
	CALL eosio_assert([0], [9346])
	$13 = [70]
	goto $label$4 
	
.LABEL $label$381
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$129 }
	$13 = [71]
	goto $label$4 
	
.LABEL $label$380
	$1 = ((int_64)$3 << (int_64)8)
	$13 = [72]
	goto $label$4 
	
.LABEL $label$379
	$3 = (uint_64)$1 >> (uint_64)(int_64)8)
	$2 = ((int_64)$1 | (int_64)4)
	$8 = [0]
	$13 = [73]
	goto $label$4 
	
.LABEL $label$378
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$122 }
	$13 = [208]
	goto $label$4 
	
.LABEL $label$377
	$1 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$20 }
	$13 = [209]
	goto $label$4 
	
.LABEL $label$376
	$3 = $1
	$17 = $8
	$8 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[6]) ){ goto $label$124 }
	goto $label$123 
	
.LABEL $label$375
	$3 = $1
	$13 = [211]
	goto $label$4 
	
.LABEL $label$374
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$121 }
	$13 = [212]
	goto $label$4 
	
.LABEL $label$373
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$17 = ((int_32)$8 < (int_32)[6])
	$16 = ($8 + [1])
	$8 = $16
	if ( $17 ){ goto $label$19 }
	$13 = [213]
	goto $label$4 
	
.LABEL $label$372
	$8 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[6]) ){ goto $label$126 }
	goto $label$125 
	
.LABEL $label$371
	CALL eosio_assert([0], [9448])
	$13 = [75]
	goto $label$4 
	
.LABEL $label$370
	$8 = CALL $129([8336])
	if ( ($8 <= [8]) ){ goto $label$120 }
	$13 = [207]
	goto $label$4 
	
.LABEL $label$369
	CALL eosio_assert([0], [9301])
	goto $label$118 
	
.LABEL $label$368
	if ( ($8 == 0) ){ goto $label$119 }
	$13 = [77]
	goto $label$4 
	
.LABEL $label$367
	$3 = (int_64)0
	$13 = [78]
	goto $label$4 
	
.LABEL $label$366
	$17 = *(($8 + [8335]))
	if ( ((($17 + [-65]) & [255]) <= [26]) ){ goto $label$116 }
	$13 = [205]
	goto $label$4 
	
.LABEL $label$365
	CALL eosio_assert([0], [9346])
	$13 = [79]
	goto $label$4 
	
.LABEL $label$364
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $17) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$117 }
	$13 = [80]
	goto $label$4 
	
.LABEL $label$363
	$1 = ((int_64)$3 << (int_64)8)
	$13 = [81]
	goto $label$4 
	
.LABEL $label$362
	$3 = (uint_64)$1 >> (uint_64)(int_64)8)
	$20 = ((int_64)$1 | (int_64)4)
	$8 = [0]
	$13 = [82]
	goto $label$4 
	
.LABEL $label$361
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$110 }
	$13 = [199]
	goto $label$4 
	
.LABEL $label$360
	$1 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$22 }
	$13 = [200]
	goto $label$4 
	
.LABEL $label$359
	$3 = $1
	$17 = $8
	$8 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[6]) ){ goto $label$112 }
	goto $label$111 
	
.LABEL $label$358
	$3 = $1
	$13 = [202]
	goto $label$4 
	
.LABEL $label$357
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$109 }
	$13 = [203]
	goto $label$4 
	
.LABEL $label$356
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$17 = ((int_32)$8 < (int_32)[6])
	$16 = ($8 + [1])
	$8 = $16
	if ( $17 ){ goto $label$21 }
	$13 = [204]
	goto $label$4 
	
.LABEL $label$355
	$8 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[6]) ){ goto $label$114 }
	goto $label$113 
	
.LABEL $label$354
	CALL eosio_assert([0], [9448])
	$13 = [84]
	goto $label$4 
	
.LABEL $label$353
	$8 = *($7 + [983])
	if ( ((int_32)$8 == (int_32)[2]) ){ goto $label$108 }
	$13 = [85]
	goto $label$4 
	
.LABEL $label$352
	if ( ((int_32)$8 != (int_32)[1]) ){ goto $label$107 }
	$13 = [181]
	goto $label$4 
	
.LABEL $label$351
	$3 = *($4)
	CALL __multi3(($7 + [272]), $3, (int_64)$3 >> (int_64)63), (int_64)10, (int_64)0)
	$1 = *(($4 + [8]))
	$3 = *((($7 + [272]) + [8]))
	$20 = *($7 + [272])
	if ( (( (uint_64)($20 <= (int_64)4611686018427387904) ? ((int_64)$3 < (int_64)0) : (int_64)($3 == 0) ) == 0) ){ goto $label$34 }
	$13 = [188]
	goto $label$4 
	
.LABEL $label$350
	if ( ( ((uint_64)$20 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$3 > (int_64)-1) : ((int_64)$3 == (int_64)-1) ) ){ goto $label$33 }
	$13 = [189]
	goto $label$4 
	
.LABEL $label$349
	CALL eosio_assert([0], [9276])
	goto $label$32 
	
.LABEL $label$348
	$3 = *($4)
	CALL __multi3(($7 + [352]), $3, (int_64)$3 >> (int_64)63), (int_64)10, (int_64)0)
	$1 = *(($4 + [8]))
	$3 = *((($7 + [352]) + [8]))
	$2 = *($7 + [352])
	if ( (( (uint_64)($2 <= (int_64)4611686018427387904) ? ((int_64)$3 < (int_64)0) : (int_64)($3 == 0) ) == 0) ){ goto $label$28 }
	$13 = [197]
	goto $label$4 
	
.LABEL $label$347
	if ( ( ((uint_64)$2 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$3 > (int_64)-1) : ((int_64)$3 == (int_64)-1) ) ){ goto $label$27 }
	$13 = [198]
	goto $label$4 
	
.LABEL $label$346
	CALL eosio_assert([0], [9276])
	goto $label$26 
	
.LABEL $label$345
	$3 = *($4)
	CALL __multi3(($7 + [192]), $3, (int_64)$3 >> (int_64)63), (int_64)10, (int_64)0)
	$1 = *(($4 + [8]))
	$3 = *((($7 + [192]) + [8]))
	$2 = *($7 + [192])
	if ( (( (uint_64)($2 <= (int_64)4611686018427387904) ? ((int_64)$3 < (int_64)0) : (int_64)($3 == 0) ) == 0) ){ goto $label$106 }
	$13 = [179]
	goto $label$4 
	
.LABEL $label$344
	if ( ( ((uint_64)$2 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$3 > (int_64)-1) : ((int_64)$3 == (int_64)-1) ) ){ goto $label$105 }
	$13 = [180]
	goto $label$4 
	
.LABEL $label$343
	CALL eosio_assert([0], [9276])
	goto $label$104 
	
.LABEL $label$342
	if ( (uint_64)($3 <= $1) ){ goto $label$142 }
	$13 = [60]
	goto $label$4 
	
.LABEL $label$341
	if ( (((int_64)$3 == (int_64)$1) & ((uint_64)$18 > (uint_64)$2)) ){ goto $label$141 }
	$13 = [61]
	goto $label$4 
	
.LABEL $label$340
	$3 = *($4)
	CALL __multi3(($7 + [480]), $3, (int_64)$3 >> (int_64)63), (int_64)90, (int_64)0)
	$3 = *(($4 + [8]))
	$20 = *($7 + [992])
	$1 = *((($7 + [480]) + [8]))
	$2 = *($7 + [480])
	if ( (( (uint_64)($2 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ) == 0) ){ goto $label$140 }
	$13 = [219]
	goto $label$4 
	
.LABEL $label$339
	if ( ( ((uint_64)$2 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ) ){ goto $label$139 }
	$13 = [220]
	goto $label$4 
	
.LABEL $label$338
	CALL eosio_assert([0], [9276])
	goto $label$138 
	
.LABEL $label$337
	$1 = (int_64)0
	goto $label$127 
	
.LABEL $label$336
	$1 = (int_64)0
	goto $label$115 
	
.LABEL $label$335
	CALL eosio_assert([0], [9252])
	$13 = [183]
	goto $label$4 
	
.LABEL $label$334
	*((($7 + [256]) + [8])) = $1
	*($7 + [904]) = $1
	$3 = ((int_64)$20 / (int_64)50)
	*($7 + [256]) = $3
	*($7 + [896]) = $3
	CALL $11(($7 + [584]), $0, ($7 + [256]))
	$20 = *($7 + [592])
	$1 = *($7 + [584])
	$3 = *($4)
	CALL __multi3(($7 + [240]), $3, (int_64)$3 >> (int_64)63), (int_64)10, (int_64)0)
	$21 = *(($4 + [8]))
	$22 = *($7 + [1168])
	$3 = *((($7 + [240]) + [8]))
	$23 = *($7 + [240])
	if ( (( (uint_64)($23 <= (int_64)4611686018427387904) ? ((int_64)$3 < (int_64)0) : (int_64)($3 == 0) ) == 0) ){ goto $label$31 }
	$13 = [186]
	goto $label$4 
	
.LABEL $label$333
	if ( ( ((uint_64)$23 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$3 > (int_64)-1) : ((int_64)$3 == (int_64)-1) ) ){ goto $label$30 }
	$13 = [187]
	goto $label$4 
	
.LABEL $label$332
	CALL eosio_assert([0], [9276])
	goto $label$29 
	
.LABEL $label$331
	CALL eosio_assert([0], [9252])
	$13 = [192]
	goto $label$4 
	
.LABEL $label$330
	*((($7 + [336]) + [8])) = $1
	*($7 + [856]) = $1
	$3 = ((int_64)$2 / (int_64)50)
	*($7 + [336]) = $3
	*($7 + [848]) = $3
	CALL $11(($7 + [584]), $0, ($7 + [336]))
	$2 = *($7 + [592])
	$3 = *($7 + [584])
	$1 = *($4)
	CALL __multi3(($7 + [320]), $1, (int_64)$1 >> (int_64)63), (int_64)10, (int_64)0)
	$21 = *(($4 + [8]))
	$22 = *($7 + [992])
	$1 = *((($7 + [320]) + [8]))
	$23 = *($7 + [320])
	if ( (( (uint_64)($23 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ) == 0) ){ goto $label$25 }
	$13 = [195]
	goto $label$4 
	
.LABEL $label$329
	if ( ( ((uint_64)$23 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ) ){ goto $label$24 }
	$13 = [196]
	goto $label$4 
	
.LABEL $label$328
	CALL eosio_assert([0], [9276])
	goto $label$23 
	
.LABEL $label$327
	CALL eosio_assert([0], [9252])
	$13 = [185]
	goto $label$4 
	
.LABEL $label$326
	*((($7 + [224]) + [8])) = $21
	*((($7 + [208]) + [8])) = $20
	*($7 + [888]) = $21
	*($7 + [864]) = $1
	*($7 + [872]) = $20
	*($7 + [208]) = $1
	$3 = ((int_64)$23 / (int_64)50)
	*($7 + [880]) = $3
	*($7 + [224]) = $3
	CALL $12($0, $22, ($7 + [224]), ($7 + [208]))
	$3 = (int_64)0
	goto $label$93 
	
.LABEL $label$325
	CALL eosio_assert([0], [9252])
	$13 = [194]
	goto $label$4 
	
.LABEL $label$324
	*((($7 + [304]) + [8])) = $21
	*((($7 + [288]) + [8])) = $2
	*($7 + [840]) = $21
	*($7 + [816]) = $3
	*($7 + [824]) = $2
	*($7 + [288]) = $3
	$1 = ((int_64)$23 / (int_64)50)
	*($7 + [832]) = $1
	*($7 + [304]) = $1
	CALL $12($0, $22, ($7 + [304]), ($7 + [288]))
	$1 = (int_64)0
	goto $label$94 
	
.LABEL $label$323
	CALL eosio_assert([0], [9252])
	$13 = [88]
	goto $label$4 
	
.LABEL $label$322
	*((($7 + [176]) + [8])) = $1
	*($7 + [808]) = $1
	$3 = ((int_64)$2 / (int_64)100)
	*($7 + [176]) = $3
	*($7 + [800]) = $3
	CALL $11(($7 + [584]), $0, ($7 + [176]))
	$2 = *($7 + [592])
	$3 = *($7 + [584])
	$1 = *($4)
	CALL __multi3(($7 + [160]), $1, (int_64)$1 >> (int_64)63), (int_64)10, (int_64)0)
	$20 = *(($4 + [8]))
	$23 = *($7 + [992])
	$1 = *((($7 + [160]) + [8]))
	$21 = *($7 + [160])
	if ( (( (uint_64)($21 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ) == 0) ){ goto $label$103 }
	$13 = [177]
	goto $label$4 
	
.LABEL $label$321
	if ( ( ((uint_64)$21 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ) ){ goto $label$102 }
	$13 = [178]
	goto $label$4 
	
.LABEL $label$320
	CALL eosio_assert([0], [9276])
	goto $label$101 
	
.LABEL $label$319
	CALL eosio_assert([0], [9252])
	$13 = [90]
	goto $label$4 
	
.LABEL $label$318
	*((($7 + [144]) + [8])) = $20
	*((($7 + [128]) + [8])) = $2
	*($7 + [792]) = $20
	*($7 + [768]) = $3
	*($7 + [776]) = $2
	*($7 + [128]) = $3
	$1 = ((int_64)$21 / (int_64)100)
	*($7 + [784]) = $1
	*($7 + [144]) = $1
	CALL $12($0, $23, ($7 + [144]), ($7 + [128]))
	$1 = *($4)
	CALL __multi3(($7 + [112]), $1, (int_64)$1 >> (int_64)63), (int_64)10, (int_64)0)
	$20 = *(($4 + [8]))
	$1 = *((($7 + [112]) + [8]))
	$21 = *($7 + [112])
	if ( (( (uint_64)($21 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ) == 0) ){ goto $label$100 }
	$13 = [175]
	goto $label$4 
	
.LABEL $label$317
	if ( ( ((uint_64)$21 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ) ){ goto $label$99 }
	$13 = [176]
	goto $label$4 
	
.LABEL $label$316
	CALL eosio_assert([0], [9276])
	goto $label$98 
	
.LABEL $label$315
	CALL eosio_assert([0], [9252])
	$13 = [92]
	goto $label$4 
	
.LABEL $label$314
	*((($7 + [96]) + [8])) = $20
	*($7 + [760]) = $20
	$1 = ((int_64)$21 / (int_64)100)
	*($7 + [96]) = $1
	*($7 + [752]) = $1
	CALL $11(($7 + [584]), $0, ($7 + [96]))
	$20 = *($7 + [592])
	$1 = *($7 + [584])
	$21 = *($4)
	CALL __multi3(($7 + [80]), $21, (int_64)$21 >> (int_64)63), (int_64)10, (int_64)0)
	$23 = *(($4 + [8]))
	$24 = *($7 + [1168])
	$21 = *((($7 + [80]) + [8]))
	$22 = *($7 + [80])
	if ( (( (uint_64)($22 <= (int_64)4611686018427387904) ? ((int_64)$21 < (int_64)0) : (int_64)($21 == 0) ) == 0) ){ goto $label$97 }
	$13 = [173]
	goto $label$4 
	
.LABEL $label$313
	if ( ( ((uint_64)$22 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$21 > (int_64)-1) : ((int_64)$21 == (int_64)-1) ) ){ goto $label$96 }
	$13 = [174]
	goto $label$4 
	
.LABEL $label$312
	CALL eosio_assert([0], [9276])
	goto $label$95 
	
.LABEL $label$311
	CALL eosio_assert([0], [9252])
	$13 = [94]
	goto $label$4 
	
.LABEL $label$310
	*((($7 + [64]) + [8])) = $23
	*((($7 + [48]) + [8])) = $20
	*($7 + [744]) = $23
	*($7 + [720]) = $1
	*($7 + [728]) = $20
	*($7 + [48]) = $1
	$21 = ((int_64)$22 / (int_64)100)
	*($7 + [736]) = $21
	*($7 + [64]) = $21
	CALL $12($0, $24, ($7 + [64]), ($7 + [48]))
	$13 = [95]
	goto $label$4 
	
.LABEL $label$309
	$23 = *(($4 + [8]))
	*((($7 + [688]) + [8])) = $23
	$21 = *($4)
	*((($7 + [32]) + [8])) = $23
	*((($7 + [16]) + [8])) = $2
	*($7 + [672]) = $3
	*($7 + [680]) = $2
	*($7 + [656]) = $1
	*($7 + [664]) = $20
	*($7 + [688]) = $21
	*($7 + [32]) = $21
	*($7 + [16]) = $3
	$3 = *($7 + [992])
	$1 = *($7 + [1168])
	$2 = *($7 + [984])
	$21 = *($7 + [1160])
	$23 = *($7 + [1152])
	$22 = *($7 + [1056])
	$8 = *($7 + [983])
	*(($7 + [8])) = $20
	*($7) = *($7 + [656])
	CALL $13(($7 + [704]), $7, ($7 + [32]), ($7 + [16]), $7, $3, $1, $2, $21, $18, $23, $19, $22, $8)
	$8 = CALL $107(($7 + [640]), ($7 + [704]))
	CALL $8($0, *($7 + [1168]), $8)
	if ( ((*($8) & [1]) == 0) ){ goto $label$92 }
	$13 = [96]
	goto $label$4 
	
.LABEL $label$308
	CALL _ZdlPv(*($8 + [8]))
	$13 = [97]
	goto $label$4 
	
.LABEL $label$307
	$8 = CALL $107(($7 + [624]), ($7 + [704]))
	CALL $8($0, *($7 + [992]), $8)
	if ( ((*($8) & [1]) == 0) ){ goto $label$91 }
	$13 = [98]
	goto $label$4 
	
.LABEL $label$306
	CALL _ZdlPv(*($8 + [8]))
	$13 = [99]
	goto $label$4 
	
.LABEL $label$305
	*(($7 + [616])) = [0]
	*($7 + [600]) = (int_64)-1
	*($7 + [620]) = [0]
	$3 = *($0)
	*($7 + [584]) = $3
	*($7 + [592]) = $3
	*($7 + [608]) = (int_64)0
	$8 = CALL db_lowerbound_i64($3, $3, (int_64)-3020371635640205312, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$90 }
	$13 = [100]
	goto $label$4 
	
.LABEL $label$304
	$8 = CALL $14(($7 + [584]), $8)
	if ( ((int_64)*($8 + [8]) == (int_64)*($7 + [992])) ){ goto $label$89 }
	$13 = [101]
	goto $label$4 
	
.LABEL $label$303
	$13 = [102]
	goto $label$4 
	
.LABEL $label$302
	$8 = CALL db_next_i64(*($8 + [60]), ($7 + [544]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$87 }
	$13 = [103]
	goto $label$4 
	
.LABEL $label$301
	$8 = CALL $14(($7 + [584]), $8)
	if ( ((int_64)*($8 + [8]) != (int_64)*($7 + [992])) ){ goto $label$88 }
	$13 = [104]
	goto $label$4 
	
.LABEL $label$300
	$3 = *($0)
	*($7 + [548]) = ($7 + [984])
	*($7 + [544]) = ($7 + [983])
	CALL $29(($7 + [584]), $8, $3, ($7 + [544]))
	$17 = ($7 + [584])
	goto $label$86 
	
.LABEL $label$299
	$17 = ($7 + [584])
	goto $label$37 
	
.LABEL $label$298
	$17 = ($7 + [584])
	$13 = [166]
	goto $label$4 
	
.LABEL $label$297
	$3 = *($0)
	*($7 + [548]) = ($7 + [992])
	*($7 + [544]) = ($7 + [584])
	*($7 + [552]) = ($7 + [983])
	*($7 + [556]) = ($7 + [984])
	*($7 + [528]) = $3
	if ( ((int_64)*($7 + [584]) == (int_64)CALL current_receiver()) ){ goto $label$36 }
	$13 = [167]
	goto $label$4 
	
.LABEL $label$296
	CALL eosio_assert([0], [9950])
	$13 = [168]
	goto $label$4 
	
.LABEL $label$295
	*($7 + [1188]) = ($7 + [544])
	*($7 + [1184]) = ($7 + [584])
	*($7 + [1192]) = ($7 + [528])
	*(($8 = CALL _Znwj([72])) + [56]) = $17
	*($8 + [8]) = (int_64)0
	CALL $30(($7 + [1184]), $8)
	*($7 + [1208]) = $8
	$3 = *($8)
	*($7 + [1184]) = $3
	$12 = *($8 + [60])
	*($7 + [1200]) = $12
	$4 = ($7 + [612])
	$16 = *($4)
	if ( ((uint_32)$16 >= (uint_32)*(($7 + [616]))) ){ goto $label$35 }
	$13 = [171]
	goto $label$4 
	
.LABEL $label$294
	*($16 + [8]) = $3
	*($16 + [16]) = $12
	*($7 + [1208]) = [0]
	*($16) = $8
	*($4) = ($16 + [24])
	$8 = *($7 + [1208])
	*($7 + [1208]) = [0]
	if ( $8 ){ goto $label$83 }
	goto $label$84 
	
.LABEL $label$293
	CALL $17(($7 + [608]), ($7 + [1208]), ($7 + [1184]), ($7 + [1200]))
	$8 = *($7 + [1208])
	*($7 + [1208]) = [0]
	if ( ($8 == 0) ){ goto $label$85 }
	$13 = [170]
	goto $label$4 
	
.LABEL $label$292
	CALL _ZdlPv($8)
	$13 = [105]
	goto $label$4 
	
.LABEL $label$291
	$8 = CALL db_lowerbound_i64(*($7 + [584]), *(($7 + [592])), (int_64)-3020371635640205312, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$82 }
	$13 = [106]
	goto $label$4 
	
.LABEL $label$290
	$8 = CALL $14(($7 + [584]), $8)
	if ( ((int_64)*($8 + [8]) == (int_64)*($7 + [1168])) ){ goto $label$81 }
	$13 = [107]
	goto $label$4 
	
.LABEL $label$289
	$13 = [108]
	goto $label$4 
	
.LABEL $label$288
	$8 = CALL db_next_i64(*($8 + [60]), ($7 + [544]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$79 }
	$13 = [109]
	goto $label$4 
	
.LABEL $label$287
	$8 = CALL $14(($7 + [584]), $8)
	if ( ((int_64)*($8 + [8]) != (int_64)*($7 + [1168])) ){ goto $label$80 }
	$13 = [110]
	goto $label$4 
	
.LABEL $label$286
	$3 = *($0)
	*($7 + [548]) = ($7 + [1160])
	*($7 + [544]) = ($7 + [983])
	CALL $31(($7 + [584]), $8, $3, ($7 + [544]))
	goto $label$78 
	
.LABEL $label$285
	$3 = *($0)
	*($7 + [548]) = ($7 + [1168])
	*($7 + [544]) = ($7 + [584])
	*($7 + [552]) = ($7 + [983])
	*($7 + [556]) = ($7 + [1160])
	*($7 + [528]) = $3
	if ( ((int_64)*($7 + [584]) == (int_64)CALL current_receiver()) ){ goto $label$39 }
	$13 = [160]
	goto $label$4 
	
.LABEL $label$284
	CALL eosio_assert([0], [9950])
	$13 = [161]
	goto $label$4 
	
.LABEL $label$283
	*($7 + [1188]) = ($7 + [544])
	*($7 + [1184]) = ($7 + [584])
	*($7 + [1192]) = ($7 + [528])
	*(($8 = CALL _Znwj([72])) + [56]) = $17
	*($8 + [8]) = (int_64)0
	CALL $32(($7 + [1184]), $8)
	*($7 + [1208]) = $8
	$3 = *($8)
	*($7 + [1184]) = $3
	$16 = *($8 + [60])
	*($7 + [1200]) = $16
	$12 = ($7 + [612])
	$17 = *($12)
	if ( ((uint_32)$17 >= (uint_32)*(($7 + [616]))) ){ goto $label$38 }
	$13 = [164]
	goto $label$4 
	
.LABEL $label$282
	*($17 + [8]) = $3
	*($17 + [16]) = $16
	*($7 + [1208]) = [0]
	*($17) = $8
	*($12) = ($17 + [24])
	$8 = *($7 + [1208])
	*($7 + [1208]) = [0]
	if ( $8 ){ goto $label$75 }
	goto $label$76 
	
.LABEL $label$281
	CALL $17(($7 + [608]), ($7 + [1208]), ($7 + [1184]), ($7 + [1200]))
	$8 = *($7 + [1208])
	*($7 + [1208]) = [0]
	if ( ($8 == 0) ){ goto $label$77 }
	$13 = [163]
	goto $label$4 
	
.LABEL $label$280
	CALL _ZdlPv($8)
	$13 = [111]
	goto $label$4 
	
.LABEL $label$279
	*(($7 + [576])) = [0]
	*($7 + [560]) = (int_64)-1
	*($7 + [568]) = (int_64)0
	$3 = *($0)
	*($7 + [544]) = $3
	*($7 + [552]) = $3
	$8 = CALL db_find_i64($3, $3, (int_64)-7948142257121525760, *($7 + [992]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$74 }
	$13 = [112]
	goto $label$4 
	
.LABEL $label$278
	$8 = CALL $33(($7 + [544]), $8)
	if ( ((int_32)*($8 + [52]) == (int_32)($7 + [544])) ){ goto $label$73 }
	$13 = [113]
	goto $label$4 
	
.LABEL $label$277
	CALL eosio_assert([0], [10252])
	$13 = [114]
	goto $label$4 
	
.LABEL $label$276
	$3 = *($0)
	*($7 + [1188]) = ($7 + [983])
	*($7 + [1184]) = ($7 + [984])
	CALL $34(($7 + [544]), $8, $3, ($7 + [1184]))
	goto $label$72 
	
.LABEL $label$275
	$3 = *($0)
	*($7 + [532]) = ($7 + [984])
	*($7 + [528]) = ($7 + [992])
	*($7 + [536]) = ($7 + [983])
	*($7 + [1208]) = $3
	if ( ((int_64)*($7 + [544]) == (int_64)CALL current_receiver()) ){ goto $label$41 }
	$13 = [154]
	goto $label$4 
	
.LABEL $label$274
	CALL eosio_assert([0], [9950])
	$13 = [155]
	goto $label$4 
	
.LABEL $label$273
	*($7 + [1188]) = ($7 + [528])
	*($7 + [1184]) = ($7 + [544])
	*($7 + [1192]) = ($7 + [1208])
	*(($8 = CALL _Znwj([64]))) = (int_64)0
	*($8 + [52]) = ($7 + [544])
	CALL $35(($7 + [1184]), $8)
	*($7 + [1200]) = $8
	$3 = *($8)
	*($7 + [1184]) = $3
	$16 = *($8 + [56])
	*($7 + [1180]) = $16
	$12 = ($7 + [572])
	$17 = *($12)
	if ( ((uint_32)$17 >= (uint_32)*(($7 + [576]))) ){ goto $label$40 }
	$13 = [158]
	goto $label$4 
	
.LABEL $label$272
	*($17 + [8]) = $3
	*($17 + [16]) = $16
	*($7 + [1200]) = [0]
	*($17) = $8
	*($12) = ($17 + [24])
	$8 = *($7 + [1200])
	*($7 + [1200]) = [0]
	if ( $8 ){ goto $label$70 }
	goto $label$71 
	
.LABEL $label$271
	CALL $36(($7 + [568]), ($7 + [1200]), ($7 + [1184]), ($7 + [1180]))
	$8 = *($7 + [1200])
	*($7 + [1200]) = [0]
	if ( ($8 == 0) ){ goto $label$69 }
	$13 = [157]
	goto $label$4 
	
.LABEL $label$270
	CALL _ZdlPv($8)
	$13 = [115]
	goto $label$4 
	
.LABEL $label$269
	$3 = *($7 + [1168])
	$17 = *(($7 + [572]))
	$12 = *(($7 + [568]))
	if ( ((int_32)$12 == (int_32)$17) ){ goto $label$68 }
	$13 = [116]
	goto $label$4 
	
.LABEL $label$268
	$13 = [117]
	goto $label$4 
	
.LABEL $label$267
	$8 = ($17 + [-24])
	$16 = *($8)
	if ( ((int_64)*($16) == (int_64)$3) ){ goto $label$65 }
	$13 = [118]
	goto $label$4 
	
.LABEL $label$266
	$17 = $8
	if ( ((int_32)$12 != (int_32)$8) ){ goto $label$66 }
	goto $label$67 
	
.LABEL $label$265
	if ( ((int_32)$12 == (int_32)$17) ){ goto $label$64 }
	$13 = [150]
	goto $label$4 
	
.LABEL $label$264
	if ( ((int_32)*($16 + [52]) == (int_32)($7 + [544])) ){ goto $label$42 }
	$13 = [151]
	goto $label$4 
	
.LABEL $label$263
	CALL eosio_assert([0], [10252])
	$13 = [152]
	goto $label$4 
	
.LABEL $label$262
	if ( $16 ){ goto $label$60 }
	goto $label$61 
	
.LABEL $label$261
	$8 = CALL db_find_i64(*($7 + [544]), *(($7 + [552])), (int_64)-7948142257121525760, $3)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$63 }
	$13 = [120]
	goto $label$4 
	
.LABEL $label$260
	$16 = CALL $33(($7 + [544]), $8)
	if ( ((int_32)*($16 + [52]) == (int_32)($7 + [544])) ){ goto $label$62 }
	$13 = [121]
	goto $label$4 
	
.LABEL $label$259
	CALL eosio_assert([0], [10252])
	$13 = [122]
	goto $label$4 
	
.LABEL $label$258
	$3 = *($0)
	*($7 + [1188]) = ($7 + [983])
	*($7 + [1184]) = ($7 + [1160])
	CALL $37(($7 + [544]), $16, $3, ($7 + [1184]))
	$16 = *($7 + [568])
	if ( $16 ){ goto $label$57 }
	goto $label$58 
	
.LABEL $label$257
	$3 = *($0)
	*($7 + [532]) = ($7 + [1160])
	*($7 + [528]) = ($7 + [1168])
	*($7 + [536]) = ($7 + [983])
	*($7 + [1208]) = $3
	if ( ((int_64)*($7 + [544]) == (int_64)CALL current_receiver()) ){ goto $label$47 }
	$13 = [143]
	goto $label$4 
	
.LABEL $label$256
	CALL eosio_assert([0], [9950])
	$13 = [144]
	goto $label$4 
	
.LABEL $label$255
	*($7 + [1188]) = ($7 + [528])
	*($7 + [1184]) = ($7 + [544])
	*($7 + [1192]) = ($7 + [1208])
	*(($8 = CALL _Znwj([64]))) = (int_64)0
	*($8 + [52]) = ($7 + [544])
	CALL $38(($7 + [1184]), $8)
	*($7 + [1200]) = $8
	$3 = *($8)
	*($7 + [1184]) = $3
	$16 = *($8 + [56])
	*($7 + [1180]) = $16
	$12 = ($7 + [572])
	$17 = *($12)
	if ( ((uint_32)$17 >= (uint_32)*(($7 + [576]))) ){ goto $label$46 }
	$13 = [148]
	goto $label$4 
	
.LABEL $label$254
	*($17 + [8]) = $3
	*($17 + [16]) = $16
	*($7 + [1200]) = [0]
	*($17) = $8
	*($12) = ($17 + [24])
	$8 = *($7 + [1200])
	*($7 + [1200]) = [0]
	if ( $8 ){ goto $label$44 }
	goto $label$45 
	
.LABEL $label$253
	CALL $36(($7 + [568]), ($7 + [1200]), ($7 + [1184]), ($7 + [1180]))
	$8 = *($7 + [1200])
	*($7 + [1200]) = [0]
	if ( ($8 == 0) ){ goto $label$43 }
	$13 = [146]
	goto $label$4 
	
.LABEL $label$252
	CALL _ZdlPv($8)
	$13 = [147]
	goto $label$4 
	
.LABEL $label$251
	$16 = *($7 + [568])
	if ( ($16 == 0) ){ goto $label$59 }
	$13 = [123]
	goto $label$4 
	
.LABEL $label$250
	$12 = ($7 + [572])
	$8 = *($12)
	if ( ((int_32)$8 == (int_32)$16) ){ goto $label$56 }
	$13 = [124]
	goto $label$4 
	
.LABEL $label$249
	$13 = [125]
	goto $label$4 
	
.LABEL $label$248
	$8 = ($8 + [-24])
	$17 = *($8)
	*($8) = [0]
	if ( ($17 == 0) ){ goto $label$54 }
	$13 = [126]
	goto $label$4 
	
.LABEL $label$247
	CALL _ZdlPv($17)
	$13 = [127]
	goto $label$4 
	
.LABEL $label$246
	if ( ((int_32)$16 != (int_32)$8) ){ goto $label$55 }
	$13 = [128]
	goto $label$4 
	
.LABEL $label$245
	$8 = *(($7 + [568]))
	goto $label$53 
	
.LABEL $label$244
	$8 = $16
	$13 = [129]
	goto $label$4 
	
.LABEL $label$243
	*($12) = $16
	CALL _ZdlPv($8)
	$13 = [130]
	goto $label$4 
	
.LABEL $label$242
	$16 = *($7 + [608])
	if ( ($16 == 0) ){ goto $label$52 }
	$13 = [131]
	goto $label$4 
	
.LABEL $label$241
	$12 = ($7 + [612])
	$8 = *($12)
	if ( ((int_32)$8 == (int_32)$16) ){ goto $label$51 }
	$13 = [132]
	goto $label$4 
	
.LABEL $label$240
	$13 = [133]
	goto $label$4 
	
.LABEL $label$239
	$8 = ($8 + [-24])
	$17 = *($8)
	*($8) = [0]
	if ( ($17 == 0) ){ goto $label$49 }
	$13 = [134]
	goto $label$4 
	
.LABEL $label$238
	CALL _ZdlPv($17)
	$13 = [135]
	goto $label$4 
	
.LABEL $label$237
	if ( ((int_32)$16 != (int_32)$8) ){ goto $label$50 }
	$13 = [136]
	goto $label$4 
	
.LABEL $label$236
	$8 = *(($7 + [608]))
	goto $label$48 
	
.LABEL $label$235
	$8 = $16
	$13 = [137]
	goto $label$4 
	
.LABEL $label$234
	*($12) = $16
	CALL _ZdlPv($8)
	$13 = [138]
	goto $label$4 
	
.LABEL $label$233
	if ( ((*($7 + [704]) & [1]) == 0) ){ goto $label$147 }
	$13 = [139]
	goto $label$4 
	
.LABEL $label$232
	CALL _ZdlPv(*($7 + [712]))
	$13 = [51]
	goto $label$4 
	
.LABEL $label$231
	$16 = *($7 + [1040])
	if ( ($16 == 0) ){ goto $label$160 }
	$13 = [31]
	goto $label$4 
	
.LABEL $label$230
	$12 = ($7 + [1044])
	$8 = *($12)
	if ( ((int_32)$8 == (int_32)$16) ){ goto $label$157 }
	$13 = [32]
	goto $label$4 
	
.LABEL $label$229
	$13 = [33]
	goto $label$4 
	
.LABEL $label$228
	$8 = ($8 + [-24])
	$17 = *($8)
	*($8) = [0]
	if ( ($17 == 0) ){ goto $label$155 }
	$13 = [34]
	goto $label$4 
	
.LABEL $label$227
	CALL _ZdlPv($17)
	$13 = [35]
	goto $label$4 
	
.LABEL $label$226
	if ( ((int_32)$16 != (int_32)$8) ){ goto $label$156 }
	$13 = [36]
	goto $label$4 
	
.LABEL $label$225
	$8 = *(($7 + [1040]))
	goto $label$154 
	
.LABEL $label$224
	$8 = $16
	$13 = [37]
	goto $label$4 
	
.LABEL $label$223
	*($12) = $16
	CALL _ZdlPv($8)
	$13 = [38]
	goto $label$4 
	
.LABEL $label$222
	$16 = *($7 + [1136])
	if ( ($16 == 0) ){ goto $label$153 }
	$13 = [39]
	goto $label$4 
	
.LABEL $label$221
	$12 = ($7 + [1140])
	$8 = *($12)
	if ( ((int_32)$8 == (int_32)$16) ){ goto $label$152 }
	$13 = [40]
	goto $label$4 
	
.LABEL $label$220
	$13 = [41]
	goto $label$4 
	
.LABEL $label$219
	$8 = ($8 + [-24])
	$17 = *($8)
	*($8) = [0]
	if ( ($17 == 0) ){ goto $label$150 }
	$13 = [42]
	goto $label$4 
	
.LABEL $label$218
	if ( ((*($17 + [40]) & [1]) == 0) ){ goto $label$149 }
	$13 = [43]
	goto $label$4 
	
.LABEL $label$217
	CALL _ZdlPv(*(($17 + [48])))
	$13 = [44]
	goto $label$4 
	
.LABEL $label$216
	CALL _ZdlPv($17)
	$13 = [45]
	goto $label$4 
	
.LABEL $label$215
	if ( ((int_32)$16 != (int_32)$8) ){ goto $label$151 }
	$13 = [46]
	goto $label$4 
	
.LABEL $label$214
	$8 = *(($7 + [1136]))
	goto $label$148 
	
.LABEL $label$213
	$8 = $16
	$13 = [47]
	goto $label$4 
	
.LABEL $label$212
	*($12) = $16
	CALL _ZdlPv($8)
	$13 = [48]
	goto $label$4 
	
.LABEL $label$211
	$global$0 = ($7 + [1216])
	return (unreachable)
	
.LABEL $label$210
	$3 = *(($4 + [8]))
	$20 = *($7 + [1168])
	$1 = *($4)
	if ( ((int_64)$1 >= (int_64)2305843009213693952) ){ goto $label$18 }
	$13 = [228]
	goto $label$4 
	
.LABEL $label$209
	if ( ((int_64)$1 > (int_64)-2305843009213693952) ){ goto $label$17 }
	$13 = [229]
	goto $label$4 
	
.LABEL $label$208
	CALL eosio_assert([0], [9276])
	goto $label$16 
	
.LABEL $label$207
	CALL eosio_assert([0], [9252])
	$13 = [223]
	goto $label$4 
	
.LABEL $label$206
	$1 = ((int_64)$1 << (int_64)1)
	CALL __multi3(($7 + [416]), $1, (int_64)$1 >> (int_64)63), (int_64)90, (int_64)0)
	$1 = *(($7 + [424]))
	$2 = *($7 + [416])
	if ( (( (uint_64)($2 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ) == 0) ){ goto $label$15 }
	$13 = [226]
	goto $label$4 
	
.LABEL $label$205
	if ( ( ((uint_64)$2 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ) ){ goto $label$14 }
	$13 = [227]
	goto $label$4 
	
.LABEL $label$204
	CALL eosio_assert([0], [9276])
	goto $label$13 
	
.LABEL $label$203
	CALL eosio_assert([0], [9252])
	$13 = [225]
	goto $label$4 
	
.LABEL $label$202
	*(($7 + [408])) = $3
	*($7 + [952]) = $3
	$3 = ((int_64)$2 / (int_64)100)
	*($7 + [400]) = $3
	*($7 + [944]) = $3
	CALL $10($0, $20, ($7 + [400]))
	*($7 + [983]) = [2]
	goto $label$133 
	
.LABEL $label$201
	CALL eosio_assert([0], [9252])
	$13 = [63]
	goto $label$4 
	
.LABEL $label$200
	*((($7 + [464]) + [8])) = $3
	*($7 + [936]) = $3
	$3 = ((int_64)$2 / (int_64)100)
	*($7 + [464]) = $3
	*($7 + [928]) = $3
	CALL $10($0, $20, ($7 + [464]))
	$3 = *($4)
	CALL __multi3(($7 + [448]), $3, (int_64)$3 >> (int_64)63), (int_64)90, (int_64)0)
	$3 = *(($4 + [8]))
	$20 = *($7 + [1168])
	$1 = *((($7 + [448]) + [8]))
	$2 = *($7 + [448])
	if ( (( (uint_64)($2 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ) == 0) ){ goto $label$137 }
	$13 = [217]
	goto $label$4 
	
.LABEL $label$199
	if ( ( ((uint_64)$2 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ) ){ goto $label$136 }
	$13 = [218]
	goto $label$4 
	
.LABEL $label$198
	CALL eosio_assert([0], [9276])
	goto $label$135 
	
.LABEL $label$197
	CALL eosio_assert([0], [9252])
	$13 = [65]
	goto $label$4 
	
.LABEL $label$196
	*(($7 + [440])) = $3
	*($7 + [920]) = $3
	$3 = ((int_64)$2 / (int_64)100)
	*($7 + [432]) = $3
	*($7 + [912]) = $3
	CALL $10($0, $20, ($7 + [432]))
	goto $label$134 
	
.LABEL $label$195
	CALL $106(($7 + [1000]))
	
.LABEL $label$194
	$13 = [55]
	goto $label$4 
	
.LABEL $label$193
	$13 = [1]
	goto $label$4 
	
.LABEL $label$192
	$13 = [0]
	goto $label$4 
	
.LABEL $label$191
	$13 = [6]
	goto $label$4 
	
.LABEL $label$190
	$13 = [0]
	goto $label$4 
	
.LABEL $label$189
	$13 = [0]
	goto $label$4 
	
.LABEL $label$188
	$13 = [4]
	goto $label$4 
	
.LABEL $label$187
	$13 = [6]
	goto $label$4 
	
.LABEL $label$186
	$13 = [6]
	goto $label$4 
	
.LABEL $label$185
	$13 = [6]
	goto $label$4 
	
.LABEL $label$184
	$13 = [249]
	goto $label$4 
	
.LABEL $label$183
	$13 = [7]
	goto $label$4 
	
.LABEL $label$182
	$13 = [9]
	goto $label$4 
	
.LABEL $label$181
	$13 = [10]
	goto $label$4 
	
.LABEL $label$180
	$13 = [11]
	goto $label$4 
	
.LABEL $label$179
	$13 = [12]
	goto $label$4 
	
.LABEL $label$178
	$13 = [13]
	goto $label$4 
	
.LABEL $label$177
	$13 = [13]
	goto $label$4 
	
.LABEL $label$176
	$13 = [20]
	goto $label$4 
	
.LABEL $label$175
	$13 = [18]
	goto $label$4 
	
.LABEL $label$174
	$13 = [15]
	goto $label$4 
	
.LABEL $label$173
	$13 = [18]
	goto $label$4 
	
.LABEL $label$172
	$13 = [17]
	goto $label$4 
	
.LABEL $label$171
	$13 = [19]
	goto $label$4 
	
.LABEL $label$170
	$13 = [22]
	goto $label$4 
	
.LABEL $label$169
	$13 = [23]
	goto $label$4 
	
.LABEL $label$168
	$13 = [25]
	goto $label$4 
	
.LABEL $label$167
	$13 = [25]
	goto $label$4 
	
.LABEL $label$166
	$13 = [24]
	goto $label$4 
	
.LABEL $label$165
	$13 = [53]
	goto $label$4 
	
.LABEL $label$164
	$13 = [27]
	goto $label$4 
	
.LABEL $label$163
	$13 = [29]
	goto $label$4 
	
.LABEL $label$162
	$13 = [28]
	goto $label$4 
	
.LABEL $label$161
	$13 = [51]
	goto $label$4 
	
.LABEL $label$160
	$13 = [38]
	goto $label$4 
	
.LABEL $label$159
	$13 = [38]
	goto $label$4 
	
.LABEL $label$158
	$13 = [31]
	goto $label$4 
	
.LABEL $label$157
	$13 = [50]
	goto $label$4 
	
.LABEL $label$156
	$13 = [33]
	goto $label$4 
	
.LABEL $label$155
	$13 = [35]
	goto $label$4 
	
.LABEL $label$154
	$13 = [37]
	goto $label$4 
	
.LABEL $label$153
	$13 = [48]
	goto $label$4 
	
.LABEL $label$152
	$13 = [49]
	goto $label$4 
	
.LABEL $label$151
	$13 = [41]
	goto $label$4 
	
.LABEL $label$150
	$13 = [45]
	goto $label$4 
	
.LABEL $label$149
	$13 = [44]
	goto $label$4 
	
.LABEL $label$148
	$13 = [47]
	goto $label$4 
	
.LABEL $label$147
	$13 = [51]
	goto $label$4 
	
.LABEL $label$146
	$13 = [57]
	goto $label$4 
	
.LABEL $label$145
	$13 = [231]
	goto $label$4 
	
.LABEL $label$144
	$13 = [59]
	goto $label$4 
	
.LABEL $label$143
	$13 = [59]
	goto $label$4 
	
.LABEL $label$142
	$13 = [221]
	goto $label$4 
	
.LABEL $label$141
	$13 = [221]
	goto $label$4 
	
.LABEL $label$140
	$13 = [62]
	goto $label$4 
	
.LABEL $label$139
	$13 = [63]
	goto $label$4 
	
.LABEL $label$138
	$13 = [63]
	goto $label$4 
	
.LABEL $label$137
	$13 = [64]
	goto $label$4 
	
.LABEL $label$136
	$13 = [65]
	goto $label$4 
	
.LABEL $label$135
	$13 = [65]
	goto $label$4 
	
.LABEL $label$134
	$13 = [66]
	goto $label$4 
	
.LABEL $label$133
	$13 = [66]
	goto $label$4 
	
.LABEL $label$132
	$13 = [67]
	goto $label$4 
	
.LABEL $label$131
	$13 = [215]
	goto $label$4 
	
.LABEL $label$130
	$13 = [68]
	goto $label$4 
	
.LABEL $label$129
	$13 = [69]
	goto $label$4 
	
.LABEL $label$128
	$13 = [70]
	goto $label$4 
	
.LABEL $label$127
	$13 = [72]
	goto $label$4 
	
.LABEL $label$126
	$13 = [73]
	goto $label$4 
	
.LABEL $label$125
	$13 = [75]
	goto $label$4 
	
.LABEL $label$124
	$13 = [73]
	goto $label$4 
	
.LABEL $label$123
	$13 = [75]
	goto $label$4 
	
.LABEL $label$122
	$13 = [74]
	goto $label$4 
	
.LABEL $label$121
	$13 = [74]
	goto $label$4 
	
.LABEL $label$120
	$13 = [76]
	goto $label$4 
	
.LABEL $label$119
	$13 = [206]
	goto $label$4 
	
.LABEL $label$118
	$13 = [77]
	goto $label$4 
	
.LABEL $label$117
	$13 = [78]
	goto $label$4 
	
.LABEL $label$116
	$13 = [79]
	goto $label$4 
	
.LABEL $label$115
	$13 = [81]
	goto $label$4 
	
.LABEL $label$114
	$13 = [82]
	goto $label$4 
	
.LABEL $label$113
	$13 = [84]
	goto $label$4 
	
.LABEL $label$112
	$13 = [82]
	goto $label$4 
	
.LABEL $label$111
	$13 = [84]
	goto $label$4 
	
.LABEL $label$110
	$13 = [83]
	goto $label$4 
	
.LABEL $label$109
	$13 = [83]
	goto $label$4 
	
.LABEL $label$108
	$13 = [190]
	goto $label$4 
	
.LABEL $label$107
	$13 = [86]
	goto $label$4 
	
.LABEL $label$106
	$13 = [87]
	goto $label$4 
	
.LABEL $label$105
	$13 = [88]
	goto $label$4 
	
.LABEL $label$104
	$13 = [88]
	goto $label$4 
	
.LABEL $label$103
	$13 = [89]
	goto $label$4 
	
.LABEL $label$102
	$13 = [90]
	goto $label$4 
	
.LABEL $label$101
	$13 = [90]
	goto $label$4 
	
.LABEL $label$100
	$13 = [91]
	goto $label$4 
	
.LABEL $label$99
	$13 = [92]
	goto $label$4 
	
.LABEL $label$98
	$13 = [92]
	goto $label$4 
	
.LABEL $label$97
	$13 = [93]
	goto $label$4 
	
.LABEL $label$96
	$13 = [94]
	goto $label$4 
	
.LABEL $label$95
	$13 = [94]
	goto $label$4 
	
.LABEL $label$94
	$13 = [95]
	goto $label$4 
	
.LABEL $label$93
	$13 = [95]
	goto $label$4 
	
.LABEL $label$92
	$13 = [97]
	goto $label$4 
	
.LABEL $label$91
	$13 = [99]
	goto $label$4 
	
.LABEL $label$90
	$13 = [172]
	goto $label$4 
	
.LABEL $label$89
	$13 = [104]
	goto $label$4 
	
.LABEL $label$88
	$13 = [102]
	goto $label$4 
	
.LABEL $label$87
	$13 = [165]
	goto $label$4 
	
.LABEL $label$86
	$13 = [105]
	goto $label$4 
	
.LABEL $label$85
	$13 = [105]
	goto $label$4 
	
.LABEL $label$84
	$13 = [105]
	goto $label$4 
	
.LABEL $label$83
	$13 = [170]
	goto $label$4 
	
.LABEL $label$82
	$13 = [159]
	goto $label$4 
	
.LABEL $label$81
	$13 = [110]
	goto $label$4 
	
.LABEL $label$80
	$13 = [108]
	goto $label$4 
	
.LABEL $label$79
	$13 = [159]
	goto $label$4 
	
.LABEL $label$78
	$13 = [111]
	goto $label$4 
	
.LABEL $label$77
	$13 = [111]
	goto $label$4 
	
.LABEL $label$76
	$13 = [111]
	goto $label$4 
	
.LABEL $label$75
	$13 = [163]
	goto $label$4 
	
.LABEL $label$74
	$13 = [153]
	goto $label$4 
	
.LABEL $label$73
	$13 = [114]
	goto $label$4 
	
.LABEL $label$72
	$13 = [115]
	goto $label$4 
	
.LABEL $label$71
	$13 = [115]
	goto $label$4 
	
.LABEL $label$70
	$13 = [157]
	goto $label$4 
	
.LABEL $label$69
	$13 = [115]
	goto $label$4 
	
.LABEL $label$68
	$13 = [119]
	goto $label$4 
	
.LABEL $label$67
	$13 = [119]
	goto $label$4 
	
.LABEL $label$66
	$13 = [117]
	goto $label$4 
	
.LABEL $label$65
	$13 = [149]
	goto $label$4 
	
.LABEL $label$64
	$13 = [119]
	goto $label$4 
	
.LABEL $label$63
	$13 = [142]
	goto $label$4 
	
.LABEL $label$62
	$13 = [122]
	goto $label$4 
	
.LABEL $label$61
	$13 = [142]
	goto $label$4 
	
.LABEL $label$60
	$13 = [122]
	goto $label$4 
	
.LABEL $label$59
	$13 = [130]
	goto $label$4 
	
.LABEL $label$58
	$13 = [130]
	goto $label$4 
	
.LABEL $label$57
	$13 = [123]
	goto $label$4 
	
.LABEL $label$56
	$13 = [141]
	goto $label$4 
	
.LABEL $label$55
	$13 = [125]
	goto $label$4 
	
.LABEL $label$54
	$13 = [127]
	goto $label$4 
	
.LABEL $label$53
	$13 = [129]
	goto $label$4 
	
.LABEL $label$52
	$13 = [138]
	goto $label$4 
	
.LABEL $label$51
	$13 = [140]
	goto $label$4 
	
.LABEL $label$50
	$13 = [133]
	goto $label$4 
	
.LABEL $label$49
	$13 = [135]
	goto $label$4 
	
.LABEL $label$48
	$13 = [137]
	goto $label$4 
	
.LABEL $label$47
	$13 = [144]
	goto $label$4 
	
.LABEL $label$46
	$13 = [145]
	goto $label$4 
	
.LABEL $label$45
	$13 = [147]
	goto $label$4 
	
.LABEL $label$44
	$13 = [146]
	goto $label$4 
	
.LABEL $label$43
	$13 = [147]
	goto $label$4 
	
.LABEL $label$42
	$13 = [152]
	goto $label$4 
	
.LABEL $label$41
	$13 = [155]
	goto $label$4 
	
.LABEL $label$40
	$13 = [156]
	goto $label$4 
	
.LABEL $label$39
	$13 = [161]
	goto $label$4 
	
.LABEL $label$38
	$13 = [162]
	goto $label$4 
	
.LABEL $label$37
	$13 = [166]
	goto $label$4 
	
.LABEL $label$36
	$13 = [168]
	goto $label$4 
	
.LABEL $label$35
	$13 = [169]
	goto $label$4 
	
.LABEL $label$34
	$13 = [182]
	goto $label$4 
	
.LABEL $label$33
	$13 = [183]
	goto $label$4 
	
.LABEL $label$32
	$13 = [183]
	goto $label$4 
	
.LABEL $label$31
	$13 = [184]
	goto $label$4 
	
.LABEL $label$30
	$13 = [185]
	goto $label$4 
	
.LABEL $label$29
	$13 = [185]
	goto $label$4 
	
.LABEL $label$28
	$13 = [191]
	goto $label$4 
	
.LABEL $label$27
	$13 = [192]
	goto $label$4 
	
.LABEL $label$26
	$13 = [192]
	goto $label$4 
	
.LABEL $label$25
	$13 = [193]
	goto $label$4 
	
.LABEL $label$24
	$13 = [194]
	goto $label$4 
	
.LABEL $label$23
	$13 = [194]
	goto $label$4 
	
.LABEL $label$22
	$13 = [201]
	goto $label$4 
	
.LABEL $label$21
	$13 = [202]
	goto $label$4 
	
.LABEL $label$20
	$13 = [210]
	goto $label$4 
	
.LABEL $label$19
	$13 = [211]
	goto $label$4 
	
.LABEL $label$18
	$13 = [222]
	goto $label$4 
	
.LABEL $label$17
	$13 = [223]
	goto $label$4 
	
.LABEL $label$16
	$13 = [223]
	goto $label$4 
	
.LABEL $label$15
	$13 = [224]
	goto $label$4 
	
.LABEL $label$14
	$13 = [225]
	goto $label$4 
	
.LABEL $label$13
	$13 = [225]
	goto $label$4 
	
.LABEL $label$12
	$13 = [232]
	goto $label$4 
	
.LABEL $label$11
	$13 = [233]
	goto $label$4 
	
.LABEL $label$10
	$13 = [233]
	goto $label$4 
	
.LABEL $label$9
	$13 = [234]
	goto $label$4 
	
.LABEL $label$8
	$13 = [235]
	goto $label$4 
	
.LABEL $label$7
	$13 = [235]
	goto $label$4 
	
.LABEL $label$6
	$13 = [241]
	goto $label$4 
	
.LABEL $label$5
	$13 = [242]
	goto $label$4 
	$13
}

void .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_32 $15
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($1 + [8])
	$5 = (CASTING uint_32)(uint_64 $4)
	$6 = ((int_64)$4 & (int_64)255)
	$7 = (int_64)($6 == 0)
	if ( $7 ){ goto $label$2 }
	$8 = ((int_64)$6 + (int_64)1)
	$9 = (int_64)1
	
.LOOP $label$3:
	$9 = ((int_64)$9 * (int_64)10)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 > (int_64)1) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = (int_64)1
	
.LABEL $label$1
	$5 = ($5 & [255])
	$10 = ($2 - (($5 + [16]) & [496]))
	$11 = $10
	$global$0 = $11
	*(($12 = ($10 + $5))) = [0]
	$13 = *($1)
	$2 = ((int_64)$13 < (int_64)0)
	if ( $7 ){ goto $label$4 }
	$8 = ((int_64)( (int_64)-1 ? (int_64)1 : $2 ) * (int_64)((int_64)$13 % (int_64)$9))
	$6 = ((int_64)$6 + (int_64)1)
	$1 = ($12 + [-1])
	
.LOOP $label$5:
	$14 = ((int_64)$8 / (int_64)10)
	*($1) = ((CASTING uint_32)(uint_64 (int_64))($8 - ((int_64)$14 * (int_64)10))) + [48])
	$1 = ($1 + [-1])
	$8 = $14
	$6 = ((int_64)$6 + (int_64)-1)
	if ( ((int_64)$6 > (int_64)1) ){ goto $label$5 }
	
.LABEL $label$4
	$12 = ( [9741] ? [9753] : $2 )
	$9 = ((int_64)$13 / (int_64)$9)
	$15 = ($5 + [32])
	$11 = ($11 - (($5 + [47]) & [496]))
	$global$0 = $11
	$8 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( (int_64)($8) == 0) ){ goto $label$9 }
	$5 = [0]
	
.LOOP $label$11:
	*((($3 + [41]) + ($1 = $5))) = $8
	$5 = ($1 + [1])
	if ( ((uint_32)$1 > (uint_32)[5]) ){ goto $label$10 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$11 }
	
.LABEL $label$10
	*(($3 + [32])) = [0]
	*($3 + [24]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$8 }
	*($3 + [24]) = ($5 << [1])
	$2 = (($3 + [24]) | [1])
	goto $label$7 
	
.LABEL $label$9
	*(($3 + [32])) = [0]
	*($3 + [24]) = (int_64)0
	*($3 + [24]) = [0]
	$1 = (($3 + [24]) | [1])
	$5 = $1
	goto $label$6 
	
.LABEL $label$8
	$7 = (($5 + [16]) & [-16])
	$2 = CALL _Znwj($7)
	*($3 + [24]) = ($7 | [1])
	*($3 + [32]) = $2
	*($3 + [28]) = $5
	
.LABEL $label$7
	$7 = ($1 + [1])
	$1 = [0]
	
.LOOP $label$12:
	*(($2 + $1)) = *((($3 + [41]) + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$12 }
	$5 = ($2 + $5)
	$1 = (($3 + [24]) | [1])
	
.LABEL $label$6
	*($5) = [0]
	*($3 + [8]) = $10
	*($3) = $9
	*($3 + [12]) = ( *($3 + [32]) ? $1 : (*($3 + [24]) & [1]) )
	CALL $127($11, $15, $12, $3)
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*(($3 + [32])))
	
.LABEL $label$13
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$1 = CALL $129($11)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$17 }
	*($0) = ($1 << [1])
	$5 = ($0 + [1])
	if ( $1 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$2 = (($1 + [16]) & [-16])
	$5 = CALL _Znwj($2)
	*($0) = ($2 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $1
	
.LABEL $label$16
	CALL memcpy($5, $11, $1)
	
.LABEL $label$15
	*(($5 + $1)) = [0]
	$global$0 = ($3 + [48])
	return (unreachable)
	
.LABEL $label$14
	CALL $106($0)
}

void .FUNC $109 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL _Znwj($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL _ZdlPv($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $135 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$1 = *([0] + [18740])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	$2 = [18548]
	$3 = (((int_32)$1 * (int_32)[12]) + [18548])
	
.LOOP $label$3:
	$1 = *(($2 + [4]))
	if ( ($1 == 0) ){ goto $label$2 }
	if ( ((uint_32)($1 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($1 + *($2)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$2 = ($2 + [12])
	if ( ($2 <= $3) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($2 = ($0 + [-4]))) = (*($2) & [2147483647])
}

int_32 .FUNC $69 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [224])
	$global$0 = $3
	*(($4 = $3) + [160]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $132($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [104]) + [32])) = (int_64)0
	*(($4 + [152])) = [0]
	*($4 + [112]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [120]) = (int_64)0
	*($4 + [128]) = (int_64)0
	*($4 + [144]) = (int_64)0
	*($4 + [92]) = $2
	*($4 + [88]) = $2
	*($4 + [96]) = ($2 + $5)
	*($4 + [208]) = ($4 + [88])
	*($4 + [40]) = ($4 + [104])
	CALL $70(($4 + [40]), ($4 + [208]))
	*(($3 = (($4 + [24]) + [8]))) = *($4 + [96])
	*($4 + [24]) = *($4 + [88])
	$3 = *($3)
	*((($4 + [168]) + [8])) = $3
	*(($6 = (($4 + [192]) + [8]))) = $3
	$7 = *($4 + [24])
	*($4 + [192]) = $7
	*($4 + [168]) = $7
	$3 = *($6)
	*((($4 + [208]) + [8])) = $3
	*(($4 + [64])) = $3
	*($4 + [40]) = $0
	*($4 + [48]) = $1
	$0 = *($4 + [192])
	*($4 + [56]) = $0
	*($4 + [208]) = $0
	*($4 + [208]) = [10309]
	*($4 + [212]) = CALL $129([10309])
	*($4 + [16]) = *($4 + [208])
	CALL $2((($4 + [40]) + [32]), ($4 + [16]))
	*($4 + [184]) = [10322]
	*($4 + [188]) = CALL $129([10322])
	*($4 + [8]) = *($4 + [184])
	CALL $2(($4 + [80]), ($4 + [8]))
	*($4 + [212]) = ($4 + [160])
	*($4 + [208]) = ($4 + [40])
	CALL $71(($4 + [208]), ($4 + [104]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = [1]
	if ( (*($4 + [144]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $135($2)
	$2 = [1]
	if ( ((*($4 + [144]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL _ZdlPv(*(($4 + [152])))
	$global$0 = ($4 + [224])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [224])
	return $2
}

int_32 .FUNC $68 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$3 = ($global$0 - [176])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $132($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [112])) = [0]
	*($4 + [96]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [84]) = $2
	*($4 + [80]) = $2
	*($4 + [88]) = ($2 + $7)
	$3 = $2
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9577])
	$3 = *($4 + [84])
	
.LABEL $label$4
	CALL memcpy(($4 + [96]), $3, [8])
	*($4 + [84]) = ($3 + [8])
	$8 = (($4 + [96]) + [8])
	CALL $74(($4 + [80]), $8)
	*(($3 = (($4 + [16]) + [8]))) = *((($4 + [80]) + [8]))
	*($4 + [16]) = *($4 + [80])
	$3 = *($3)
	*((($4 + [120]) + [8])) = $3
	*(($9 = (($4 + [144]) + [8]))) = $3
	$10 = *($4 + [16])
	*($4 + [144]) = $10
	*($4 + [120]) = $10
	$3 = *($9)
	*((($4 + [160]) + [8])) = $3
	*(($4 + [56])) = $3
	*($4 + [32]) = $0
	*($4 + [40]) = $1
	$0 = *($4 + [144])
	*($4 + [48]) = $0
	*($4 + [160]) = $0
	*($4 + [160]) = [10309]
	*($4 + [164]) = CALL $129([10309])
	*($4 + [8]) = *($4 + [160])
	CALL $2(($4 + [64]), ($4 + [8]))
	*($4 + [136]) = [10322]
	*($4 + [140]) = CALL $129([10322])
	*($4) = *($4 + [136])
	CALL $2(($4 + [72]), $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$0 = *($4 + [96])
	$8 = CALL $107(($4 + [144]), $8)
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$5 = CALL $107(($4 + [160]), $8)
	CALL void $3((int_32 $0), (int_64 $5), (int_32 $6))
	if ( (*($4 + [160]) & [1]) ){ goto $label$12 }
	if ( (*($4 + [144]) & [1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL _ZdlPv(*($5 + [8]))
	if ( ((*($4 + [144]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL _ZdlPv(*($8 + [8]))
	if ( ($7 <= [513]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$8 }
	
.LABEL $label$9
	$2 = [1]
	if ( (*($4 + [104]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $135($2)
	$2 = [1]
	if ( ((*($4 + [104]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL _ZdlPv(*(($4 + [112])))
	$global$0 = ($4 + [176])
	return $2
	
.LABEL $label$6
	$global$0 = ($4 + [176])
	return $2
}

int_32 .FUNC $108 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $109($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

int_32 .FUNC $65 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $132($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [72]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9577])
	
.LABEL $label$5
	CALL memcpy(($4 + [72]), $2, [8])
	*(($4 + [44])) = ($2 + [8])
	*(($4 + [48])) = $3
	*($4 + [32]) = $1
	*($4 + [24]) = $0
	*($4 + [40]) = $2
	*($4 + [88]) = [10309]
	*($4 + [92]) = CALL $129([10309])
	*($4 + [16]) = *($4 + [88])
	CALL $2(($4 + [56]), ($4 + [16]))
	*($4 + [80]) = [10322]
	*($4 + [84]) = CALL $129([10322])
	*($4 + [8]) = *($4 + [80])
	CALL $2(($4 + [64]), ($4 + [8]))
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$0 = *($4 + [72])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $135($2)
	
.LABEL $label$7
	$global$0 = ($4 + [96])
	return [1]
}

int_32 .FUNC $64 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $132($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [72]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9577])
	
.LABEL $label$5
	CALL memcpy(($4 + [72]), $2, [8])
	*(($4 + [44])) = ($2 + [8])
	*(($4 + [48])) = $3
	*($4 + [32]) = $1
	*($4 + [24]) = $0
	*($4 + [40]) = $2
	*($4 + [88]) = [10309]
	*($4 + [92]) = CALL $129([10309])
	*($4 + [16]) = *($4 + [88])
	CALL $2(($4 + [56]), ($4 + [16]))
	*($4 + [80]) = [10322]
	*($4 + [84]) = CALL $129([10322])
	*($4 + [8]) = *($4 + [80])
	CALL $2(($4 + [64]), ($4 + [8]))
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$0 = *($4 + [72])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $135($2)
	
.LABEL $label$7
	$global$0 = ($4 + [96])
	return [1]
}

int_32 .FUNC $67 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [224])
	$global$0 = $3
	*(($4 = $3) + [160]) = *($2)
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$3 = CALL $132($2)
	goto $label$2 
	
.LABEL $label$4
	$3 = [0]
	goto $label$1 
	
.LABEL $label$3
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$2
	CALL read_action_data($3, $2)
	
.LABEL $label$1
	*((($4 + [96]) + [32])) = (int_64)0
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [112]) = (int_64)0
	*($4 + [120]) = (int_64)0
	*($4 + [136]) = (int_64)0
	*($4 + [84]) = $3
	*($4 + [80]) = $3
	*($4 + [88]) = ($3 + $2)
	*($4 + [208]) = ($4 + [80])
	*($4 + [32]) = ($4 + [96])
	CALL $72(($4 + [32]), ($4 + [208]))
	*(($5 = (($4 + [16]) + [8]))) = *($4 + [88])
	*($4 + [16]) = *($4 + [80])
	$5 = *($5)
	*((($4 + [168]) + [8])) = $5
	*(($6 = (($4 + [192]) + [8]))) = $5
	$7 = *($4 + [16])
	*($4 + [192]) = $7
	*($4 + [168]) = $7
	$5 = *($6)
	*((($4 + [208]) + [8])) = $5
	*(($4 + [56])) = $5
	*($4 + [32]) = $0
	*($4 + [40]) = $1
	$0 = *($4 + [192])
	*($4 + [48]) = $0
	*($4 + [208]) = $0
	*($4 + [208]) = [10309]
	*($4 + [212]) = CALL $129([10309])
	*($4 + [8]) = *($4 + [208])
	CALL $2((($4 + [32]) + [32]), ($4 + [8]))
	*($4 + [184]) = [10322]
	*($4 + [188]) = CALL $129([10322])
	*($4) = *($4 + [184])
	CALL $2(($4 + [72]), $4)
	*($4 + [212]) = ($4 + [160])
	*($4 + [208]) = ($4 + [32])
	CALL $73(($4 + [208]), ($4 + [96]))
	if ( ((uint_32)$2 >= (uint_32)[513]) ){ goto $label$9 }
	$3 = [1]
	if ( (*($4 + [148]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $135($3)
	$3 = [1]
	if ( ((*($4 + [148]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL _ZdlPv(*(($4 + [156])))
	if ( (*($4 + [136]) & $3) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ((*($4 + [136]) & $3) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL _ZdlPv(*(($4 + [144])))
	
.LABEL $label$5
	$global$0 = ($4 + [224])
	return [1]
}

int_32 .FUNC $66 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $132($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [72]) = (int_64)0
	*($4 + [64]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9577])
	
.LABEL $label$5
	$3 = ($2 + $7)
	$8 = (($4 + [64]) + [8])
	CALL memcpy(($4 + [64]), $2, [8])
	$9 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9577])
	
.LABEL $label$6
	CALL memcpy($8, $9, [8])
	*(($4 + [40])) = $3
	*($4 + [32]) = $2
	*(($4 + [36])) = ($2 + [16])
	*($4 + [24]) = $1
	*($4 + [16]) = $0
	*($4 + [88]) = [10309]
	*($4 + [92]) = CALL $129([10309])
	*($4 + [8]) = *($4 + [88])
	CALL $2(($4 + [48]), ($4 + [8]))
	*($4 + [80]) = [10322]
	*($4 + [84]) = CALL $129([10322])
	*($4) = *($4 + [80])
	CALL $2(($4 + [56]), $4)
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$0 = *((($4 + [64]) + [8]))
	$1 = *($4 + [64])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $135($2)
	
.LABEL $label$8
	$global$0 = ($4 + [96])
	return [1]
}

int_32 .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9554])
	
.LABEL $label$5
	$4 = CALL $132($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([64])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [32])
	CALL $77(($3 + [32]), ($3 + [24]))
	*($5 + [52]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $78(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $135($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9577])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	CALL $74(*($1), *($0 + [12]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $63 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [96])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $132($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [72]) = (int_64)0
	*($4 + [64]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9577])
	
.LABEL $label$5
	$3 = ($2 + $7)
	$8 = (($4 + [64]) + [8])
	CALL memcpy(($4 + [64]), $2, [8])
	$9 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9577])
	
.LABEL $label$6
	CALL memcpy($8, $9, [8])
	*(($4 + [40])) = $3
	*($4 + [32]) = $2
	*(($4 + [36])) = ($2 + [16])
	*($4 + [24]) = $1
	*($4 + [16]) = $0
	*($4 + [88]) = [10309]
	*($4 + [92]) = CALL $129([10309])
	*($4 + [8]) = *($4 + [88])
	CALL $2(($4 + [48]), ($4 + [8]))
	*($4 + [80]) = [10322]
	*($4 + [84]) = CALL $129([10322])
	*($4) = *($4 + [80])
	CALL $2(($4 + [56]), $4)
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$0 = *((($4 + [64]) + [8]))
	$1 = *($4 + [64])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $135($2)
	
.LABEL $label$8
	$global$0 = ($4 + [96])
	return [1]
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [240])
	$global$0 = $3
	CALL memory()
	if ( ((int_64)$1 == (int_64)$0) ){ goto $label$2 }
	*($3 + [224]) = [8712]
	*($3 + [228]) = CALL $129([8712])
	*($3 + [112]) = *($3 + [224])
	CALL $2(($3 + [232]), ($3 + [112]))
	if ( ((int_64)$1 != (int_64)6138663591592764928) ){ goto $label$1 }
	
.LABEL $label$2
	*($3 + [216]) = [8724]
	*($3 + [220]) = CALL $129([8724])
	*($3 + [104]) = *($3 + [216])
	CALL $2(($3 + [232]), ($3 + [104]))
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$3 }
	*($3 + [208]) = [8712]
	*($3 + [212]) = CALL $129([8712])
	*($3 + [16]) = *($3 + [208])
	CALL $2(($3 + [232]), ($3 + [16]))
	CALL eosio_assert(((int_64)$1 == (int_64)6138663591592764928), [8988])
	*($3 + [132]) = [0]
	*($3 + [128]) = [1]
	*($3 + [8]) = *($3 + [128])
	CALL $63($0, $1, ($3 + [8]))
	goto $label$1 
	
.LABEL $label$3
	*($3 + [200]) = [8712]
	*($3 + [204]) = CALL $129([8712])
	*($3 + [96]) = *($3 + [200])
	CALL $2(($3 + [232]), ($3 + [96]))
	CALL eosio_assert(((int_64)$1 != (int_64)6138663591592764928), [9006])
	if ( ((int_64)$2 <= (int_64)-5001342335695277569) ){ goto $label$11 }
	if ( ((int_64)$2 <= (int_64)-4997502823273093985) ){ goto $label$10 }
	if ( ((int_64)$2 == (int_64)-4997502823273093984) ){ goto $label$8 }
	if ( ((int_64)$2 == (int_64)-4420681206544274944) ){ goto $label$7 }
	if ( ((int_64)$2 != (int_64)5378050752056918016) ){ goto $label$1 }
	*($3 + [140]) = [0]
	*($3 + [136]) = [2]
	*($3 + [80]) = *($3 + [136])
	CALL $64($0, $1, ($3 + [80]))
	goto $label$1 
	
.LABEL $label$11
	if ( ((int_64)$2 > (int_64)-5858941587277594625) ){ goto $label$9 }
	if ( ((int_64)$2 == (int_64)-7119375195075861616) ){ goto $label$6 }
	if ( ((int_64)$2 != (int_64)-6030911587380779872) ){ goto $label$1 }
	*($3 + [172]) = [0]
	*($3 + [168]) = [3]
	*($3 + [48]) = *($3 + [168])
	CALL $65($0, $1, ($3 + [48]))
	goto $label$1 
	
.LABEL $label$10
	if ( ((int_64)$2 == (int_64)-5001342335695277568) ){ goto $label$5 }
	if ( ((int_64)$2 != (int_64)-5001342332779200512) ){ goto $label$1 }
	*($3 + [164]) = [0]
	*($3 + [160]) = [4]
	*($3 + [56]) = *($3 + [160])
	CALL $66($0, $1, ($3 + [56]))
	goto $label$1 
	
.LABEL $label$9
	if ( ((int_64)$2 == (int_64)-5858941587277594624) ){ goto $label$4 }
	if ( ((int_64)$2 != (int_64)-5858941587277582677) ){ goto $label$1 }
	*($3 + [188]) = [0]
	*($3 + [184]) = [5]
	*($3 + [32]) = *($3 + [184])
	CALL $67($0, $1, ($3 + [32]))
	goto $label$1 
	
.LABEL $label$8
	*($3 + [148]) = [0]
	*($3 + [144]) = [6]
	*($3 + [72]) = *($3 + [144])
	CALL $63($0, $1, ($3 + [72]))
	goto $label$1 
	
.LABEL $label$7
	*($3 + [180]) = [0]
	*($3 + [176]) = [7]
	*($3 + [40]) = *($3 + [176])
	CALL $65($0, $1, ($3 + [40]))
	goto $label$1 
	
.LABEL $label$6
	*($3 + [124]) = [0]
	*($3 + [120]) = [8]
	*($3 + [88]) = *($3 + [120])
	CALL $68($0, $1, ($3 + [88]))
	goto $label$1 
	
.LABEL $label$5
	*($3 + [156]) = [0]
	*($3 + [152]) = [9]
	*($3 + [64]) = *($3 + [152])
	CALL $65($0, $1, ($3 + [64]))
	goto $label$1 
	
.LABEL $label$4
	*($3 + [196]) = [0]
	*($3 + [192]) = [10]
	*($3 + [24]) = *($3 + [192])
	CALL $69($0, $1, ($3 + [24]))
	
.LABEL $label$1
	CALL $122([0])
	$global$0 = ($3 + [240])
}

void .FUNC _ZdaPv (int_32 $0)
{
	CALL _ZdlPv($0)
}

void .FUNC _ZdlPv (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $135($0)
	
.LABEL $label$1
}

int_32 .FUNC _ZnajSt11align_val_t (int_32 $0, int_32 $1)
{
	return CALL _ZnwjSt11align_val_t($0, $1)
}

int_32 .FUNC _ZnwjSt11align_val_t (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $130(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [10336])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $130(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC _ZdaPvSt11align_val_t (int_32 $0, int_32 $1)
{
	CALL _ZdlPvSt11align_val_t($0, $1)
}

void .FUNC _ZdlPvSt11align_val_t (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $135($0)
	
.LABEL $label$1
}

int_32 .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9468])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [9468])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9468])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9468])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9468])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9468])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9468])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9468])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert([0], [9468])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [9468])
	$4 = *(($3 + [4]))
	
.LABEL $label$8
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$9 }
	CALL eosio_assert([0], [9468])
	$4 = *(($3 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($0 + [36])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$10 }
	CALL eosio_assert([0], [9468])
	$1 = *(($0 + [4]))
	
.LABEL $label$10
	CALL memcpy($1, $3, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
}

void .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9577])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9577])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9577])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9577])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9577])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9577])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$7 }
	CALL eosio_assert([0], [9577])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$8 }
	CALL eosio_assert([0], [9577])
	$4 = *(($3 + [4]))
	
.LABEL $label$8
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$9 }
	CALL eosio_assert([0], [9577])
	$4 = *(($3 + [4]))
	
.LABEL $label$9
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($0 + [36])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$10 }
	CALL eosio_assert([0], [9577])
	$1 = *(($0 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
}

void .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9468])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9468])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9468])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9468])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9468])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9468])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [24])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9468])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

int_32 .FUNC $85 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [60]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10107])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-3020371635640205312)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [10053])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10053])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $14(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9577])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9577])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9577])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9577])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9577])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9577])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [24])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9577])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $83 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9468])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9468])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9468])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9468])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9468])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9468])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9468])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [24])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9468])
	$1 = *(($0 + [4]))
	
.LABEL $label$8
	CALL memcpy($1, $4, [8])
	$1 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $1
	*($2 + [8]) = *($4 + [8])
	if ( ((int_32)(*(($0 + [8])) - $1) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [9468])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($1, ($2 + [8]), [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $82 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [76]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10107])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)7035937633859534848)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [10053])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10053])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $5(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9577])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [24])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9577])
	$1 = *(($0 + [4]))
	
.LABEL $label$8
	CALL memcpy($4, $1, [8])
	$1 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $1
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $1) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [9577])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy(($2 + [8]), $1, [8])
	*($4 + [8]) = *($2 + [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [9764])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $22($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [9577])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9577])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9577])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9577])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9577])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*(($4 + [32])) = *($2 + [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	CALL $74(*($1), ($4 + [40]))
	CALL $74(*($1), ($4 + [52]))
	$global$0 = ($2 + [16])
}

void .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [128])
	$global$0 = $2
	*(($3 = (($2 + [48]) + [8]))) = *(($1 + [32]))
	*($2 + [48]) = *($1 + [24])
	$4 = *($1 + [16])
	$5 = *($1 + [8])
	$6 = *($1)
	$7 = CALL $107(($2 + [32]), ($1 + [40]))
	$1 = CALL $107(($2 + [16]), ($1 + [52]))
	*((($2 + [64]) + [8])) = *($3)
	*($2 + [64]) = *($2 + [48])
	$0 = *($0 + [4])
	$8 = *($0 + [4])
	$3 = (*($0) + int_32($8 >> [1]))
	$0 = *($0)
	if ( (($8 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($9 = (($2 + [112]) + [8]))) = *((($2 + [64]) + [8]))
	*($2 + [112]) = *($2 + [64])
	$8 = CALL $107(($2 + [96]), $7)
	$10 = CALL $107(($2 + [80]), $1)
	*(($2 + [8])) = *($9)
	*($2) = *($2 + [112])
	CALL void $3((int_32 $6), (int_64 $5), (int_64 $4), (int_64 $2), (int_32 $8), (int_32 $10), (int_32 $0))
	if ( (*($2 + [80]) & [1]) ){ goto $label$8 }
	if ( (*($2 + [96]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL _ZdlPv(*($10 + [8]))
	if ( ((*($2 + [96]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL _ZdlPv(*($8 + [8]))
	$0 = [1]
	if ( ((*($1) & [1]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$0 = [1]
	if ( (*($1) & [1]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( (*($7) & $0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($1 + [8]))
	if ( ((*($7) & $0) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($7 + [8]))
	$global$0 = ($2 + [128])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [128])
}

void .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$3 = ($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*(($0 + [32])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $74(*($1), ($0 + [40]))
	$global$0 = ($2 + [16])
}

void .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [32]))
	*($2 + [32]) = *($1 + [24])
	$4 = *($1 + [16])
	$5 = *($1 + [8])
	$6 = *($1)
	$1 = CALL $107(($2 + [16]), ($1 + [40]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$7 = *($0 + [4])
	$3 = (*($0) + int_32($7 >> [1]))
	$0 = *($0)
	if ( (($7 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($8 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$7 = CALL $107(($2 + [64]), $1)
	*(($2 + [8])) = *($8)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $6), (int_64 $5), (int_64 $4), (int_64 $2), (int_32 $7), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($7 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

int_32 .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9468])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9468])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9577])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$5 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9577])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $1, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9577])
	$4 = *($1)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $4, [8])
	*($5 + [8]) = *($2 + [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $80($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $110($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $110($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $106($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $39 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [192])
	$global$0 = $2
	$3 = *($0)
	*($2 + [152]) = [8192]
	*($2 + [156]) = CALL $129([8192])
	*($2 + [24]) = *($2 + [152])
	CALL $2(($2 + [112]), ($2 + [24]))
	CALL require_auth2($3, (int_64)-5858941587277594624)
	$3 = *($0)
	*($2 + [96]) = [8353]
	*($2 + [100]) = CALL $129([8353])
	*($2 + [16]) = *($2 + [96])
	$4 = CALL $2(($2 + [104]), ($2 + [16]))
	$5 = *($0 + [32])
	$6 = *($4)
	*($2 + [80]) = [8360]
	*($2 + [84]) = CALL $129([8360])
	*($2 + [8]) = *($2 + [80])
	$7 = CALL $2(($2 + [88]), ($2 + [8]))
	*(($2 + [40])) = [0]
	*($2 + [32]) = (int_64)0
	$4 = CALL $129([8372])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$5 }
	*($2 + [32]) = ($4 << [1])
	$8 = (($2 + [32]) | [1])
	if ( $4 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$9 = (($4 + [16]) & [-16])
	$8 = CALL _Znwj($9)
	*($2 + [32]) = ($9 | [1])
	*($2 + [40]) = $8
	*($2 + [36]) = $4
	
.LABEL $label$4
	CALL memcpy($8, [8372], $4)
	
.LABEL $label$3
	*(($8 + $4)) = [0]
	$4 = ($2 + [40])
	*((($2 + [48]) + [24])) = *($4)
	*($4) = [0]
	*($2 + [56]) = $1
	*($2 + [112]) = $5
	*($2 + [48]) = *($0 + [40])
	*($2 + [64]) = *($2 + [32])
	*($2 + [32]) = (int_64)0
	*($2 + [120]) = *($7)
	*(($4 = CALL _Znwj([16]))) = $3
	*($4 + [8]) = $6
	*(($2 + [148])) = [0]
	$0 = ($4 + [16])
	*((($2 + [112]) + [24])) = $0
	*((($2 + [112]) + [20])) = $0
	*($2 + [128]) = $4
	*($2 + [140 align=4]) = (int_64)0
	$4 = *($2 + [64])
	$0 = ( *((($2 + [48]) + [20])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($0 + [16])
	$1 = (CASTING uint_64)(uint_32 $0)
	$0 = ($2 + [140])
	
.LOOP $label$6:
	$4 = ($4 + [1])
	$1 = (uint_64)$1 >> (uint_64)(int_64)7
	if ( ((int_64)$1) != (int_64)0) ){ goto $label$6 }
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $22($0, $4)
	$0 = *(($2 + [144]))
	$4 = *(($2 + [140]))
	goto $label$7 
	
.LABEL $label$8
	$0 = [0]
	$4 = [0]
	
.LABEL $label$7
	*($2 + [164]) = $4
	*($2 + [160]) = $4
	*($2 + [168]) = $0
	*($2 + [176]) = ($2 + [160])
	*($2 + [184]) = ($2 + [48])
	CALL $40(($2 + [184]), ($2 + [176]))
	CALL $21(($2 + [112]))
	$4 = *($2 + [140])
	if ( ($4 == 0) ){ goto $label$9 }
	*(($2 + [144])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$9
	$4 = *($2 + [128])
	if ( ($4 == 0) ){ goto $label$10 }
	*(($2 + [132])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$10
	if ( (*(($2 + [64])) & [1]) ){ goto $label$12 }
	if ( (*($2 + [32]) & [1]) ){ goto $label$11 }
	goto $label$1 
	
.LABEL $label$12
	CALL _ZdlPv(*(($2 + [72])))
	if ( ((*($2 + [32]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$11
	CALL _ZdlPv(*(($2 + [40])))
	$global$0 = ($2 + [192])
	return (unreachable)
	
.LABEL $label$2
	CALL $106(($2 + [32]))
	
.LABEL $label$1
	$global$0 = ($2 + [192])
}

void .FUNC $36 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $120($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $37 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [52]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10155])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10201])
	
.LABEL $label$2
	*($1 + [40]) = *($1 + [32])
	$6 = *($1 + [24])
	*($1 + [24]) = *($1 + [16])
	*($1 + [32]) = $6
	*($1 + [16]) = *($1 + [8])
	*($1 + [51]) = *($1 + [50])
	*($1 + [8]) = *(*($3))
	*($1 + [50]) = *($1 + [49])
	$3 = *(($3 + [4]))
	$6 = *($1)
	*($1 + [49]) = *($1 + [48])
	$3 = *($3)
	*($1 + [48]) = ( [3] ? ( [1] ? [2] : ((int_32)$3 == (int_32)[2]) ) : ((int_32)$3 == (int_32)[1]) )
	$4 = $4
	$3 = ($4 + [-64])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-12])
	*($5 + [16]) = $5
	*($5 + [28]) = ($1 + [8])
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [24])
	*($5 + [40]) = ($1 + [32])
	*($5 + [44]) = ($1 + [40])
	*($5 + [48]) = ($1 + [48])
	*($5 + [52]) = ($1 + [49])
	*($5 + [56]) = ($1 + [50])
	*($5 + [60]) = ($1 + [51])
	CALL $88(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [56]), $2, $3, [52])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [64])
}

void .FUNC $78 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $120($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9577])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9577])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $74(*($1), *($0 + [16]))
	$4 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [9577])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-3020371635640205312, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $14($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $85(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [10001])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	$6 = *(*($5 + [8]))
	if ( ((int_32)$6 != (int_32)[1]) ){ goto $label$6 }
	*($1 + [32]) = (int_64)1
	*($1 + [16]) = (int_64)0
	*($1 + [24]) = (int_64)0
	$6 = ($1 + [24])
	$8 = ($1 + [32])
	$9 = ($1 + [16])
	goto $label$5 
	
.LABEL $label$6
	$9 = ($1 + [16])
	if ( ((int_32)$6 != (int_32)[2]) ){ goto $label$7 }
	*($1 + [32]) = (int_64)0
	*($1 + [24]) = (int_64)0
	*(($1 + [16])) = (int_64)1
	$6 = ($1 + [24])
	$8 = ($1 + [32])
	goto $label$5 
	
.LABEL $label$7
	*($1 + [32]) = (int_64)0
	*($1 + [24]) = (int_64)1
	*(($1 + [16])) = (int_64)0
	$6 = ($1 + [24])
	$8 = ($1 + [32])
	
.LABEL $label$5
	$5 = *($5 + [12])
	*($1 + [40]) = *($5)
	*($1 + [48]) = (CASTING float_64)(uint_64 *($5))
	$2 = $2
	$5 = ($2 + [-64])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($2 + [-8])
	*($3 + [24]) = ($3 + [8])
	$2 = ($1 + [8])
	*($3 + [36]) = $2
	*($3 + [32]) = $1
	*($3 + [40]) = $9
	*($3 + [44]) = $6
	*($3 + [48]) = $8
	*($3 + [52]) = ($1 + [40])
	*($3 + [56]) = ($1 + [48])
	CALL $86(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [60]) = CALL db_store_i64(*($4 + [8]), (int_64)-3020371635640205312, *(*($0 + [8])), $7, $5, [56])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$8 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$7 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$11 = *($1)
	*($3 + [32]) = *($2)
	*($1 + [64]) = CALL db_idx64_store($7, (int_64)-3020371635640205312, $10, $11, ($3 + [32]))
	$global$0 = ($3 + [64])
}

int_32 .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9554])
	
.LABEL $label$5
	$4 = CALL $132($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL _Znwj([64])) + [52]) = $0
	*($5) = (int_64)0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	*($3 + [60]) = ($5 + [40])
	*($3 + [64]) = ($5 + [48])
	*($3 + [68]) = ($5 + [49])
	*($3 + [72]) = ($5 + [50])
	*($3 + [76]) = ($5 + [51])
	CALL $87(($3 + [40]), ($3 + [32]))
	*($5 + [56]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $36(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $135($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

void .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-3020371635640205312, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $14($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $85(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [10001])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	$6 = *(*($5 + [8]))
	if ( ((int_32)$6 != (int_32)[1]) ){ goto $label$6 }
	*($1 + [32]) = (int_64)0
	*($1 + [16]) = (int_64)1
	*($1 + [24]) = (int_64)0
	$6 = ($1 + [24])
	$8 = ($1 + [32])
	$9 = ($1 + [16])
	goto $label$5 
	
.LABEL $label$6
	*($1 + [16]) = (int_64)0
	$8 = ($1 + [32])
	$9 = ($1 + [16])
	if ( ((int_32)$6 != (int_32)[2]) ){ goto $label$7 }
	*($1 + [24]) = (int_64)0
	*(($1 + [32])) = (int_64)1
	$6 = ($1 + [24])
	goto $label$5 
	
.LABEL $label$7
	*($1 + [24]) = (int_64)1
	*(($1 + [32])) = (int_64)0
	$6 = ($1 + [24])
	
.LABEL $label$5
	$5 = *($5 + [12])
	*($1 + [40]) = *($5)
	*($1 + [48]) = (CASTING float_64)(uint_64 *($5))
	$2 = $2
	$5 = ($2 + [-64])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($2 + [-8])
	*($3 + [24]) = ($3 + [8])
	$2 = ($1 + [8])
	*($3 + [36]) = $2
	*($3 + [32]) = $1
	*($3 + [40]) = $9
	*($3 + [44]) = $6
	*($3 + [48]) = $8
	*($3 + [52]) = ($1 + [40])
	*($3 + [56]) = ($1 + [48])
	CALL $86(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [60]) = CALL db_store_i64(*($4 + [8]), (int_64)-3020371635640205312, *(*($0 + [8])), $7, $5, [56])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$8 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$7 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$11 = *($1)
	*($3 + [32]) = *($2)
	*($1 + [64]) = CALL db_idx64_store($7, (int_64)-3020371635640205312, $10, $11, ($3 + [32]))
	$global$0 = ($3 + [64])
}

void .FUNC $31 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_64 $14
	int_32 $15
	int_32 $16
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10155])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10201])
	
.LABEL $label$2
	$6 = ($1 + [8])
	*($5 + [16]) = *($6)
	$7 = ($1 + [24])
	$8 = ($1 + [16])
	$11 = *($1 + [24])
	$10 = *($1 + [16])
	$9 = *($1 + [32])
	$12 = ((int_64)((int_64)$9 + (int_64)$10) + (int_64)$11)
	$13 = *(($3 + [4]))
	$14 = *($1)
	$15 = ($1 + [32])
	$16 = $15
	$3 = *(*($3))
	if ( ((int_32)$3 == (int_32)[1]) ){ goto $label$3 }
	$9 = $10
	$16 = $8
	if ( ((int_32)$3 == (int_32)[2]) ){ goto $label$3 }
	$9 = $11
	$16 = $7
	
.LABEL $label$3
	*($16) = ((int_64)$9 + (int_64)1)
	$10 = *($13)
	$9 = *($1 + [40])
	*($1 + [40]) = ( $9 ? $10 : ((uint_64)$9 > (uint_64)$10) )
	*($1 + [48]) = ((float_64)((float_64)((float_64)*($1 + [48]) * (float_64)(CASTING float_64)(uint_64 $12)) + (float_64)(CASTING float_64)(uint_64 *($13))) / (float_64)(CASTING float_64)(uint_64 ((int_64)$12 + (int_64)1)))
	$4 = $4
	$3 = ($4 + [-64])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-8])
	*($5 + [24]) = $5
	*($5 + [36]) = $6
	*($5 + [32]) = $1
	*($5 + [40]) = $8
	*($5 + [44]) = $7
	*($5 + [48]) = $15
	*($5 + [52]) = ($1 + [40])
	*($5 + [56]) = ($1 + [48])
	CALL $86(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [60]), $2, $3, [56])
	if ( (uint_64)($14 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$14 + (int_64)1) : ((uint_64)$14 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($5 + [32]) = *(($1 + [8]))
	if ( (CALL $128(($5 + [16]), ($5 + [32]), [8]) == 0) ){ goto $label$5 }
	$3 = ($1 + [64])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$6 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371635640205312, ($5 + [24]), $14)
	*($3) = $1
	
.LABEL $label$6
	CALL db_idx64_update($1, $2, ($5 + [32]))
	
.LABEL $label$5
	$global$0 = ($5 + [64])
}

int_32 .FUNC $129 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $127 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [12]) = $3
	$3 = CALL $123([12], $0, $1, $2, $3)
	$global$0 = ($4 + [16])
	return $3
}