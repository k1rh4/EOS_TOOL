(data (i32.const 4) "\f0}\00\00")
(data (i32.const 16) "onerror\00")
(data (i32.const 32) "eosio\00")
(data (i32.const 48) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 112) "transfer\00")
(data (i32.const 128) "eosio.token\00")
(data (i32.const 144) "fight22death\00")
(data (i32.const 160) "cannot pass end iterator to erase\00")
(data (i32.const 208) "cannot increment end iterator\00")
(data (i32.const 240) "object passed to erase is not in multi_index\00")
(data (i32.const 288) "cannot erase objects in table of another contract\00")
(data (i32.const 352) "attempt to remove object that was not in multi_index\00")
(data (i32.const 416) "error reading iterator\00")
(data (i32.const 448) "read\00")
(data (i32.const 464) "get\00")
(data (i32.const 480) "invalid symbol name\00")
(data (i32.const 512) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 576) "fight2death1\00")
(data (i32.const 592) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 656) "gun not exists.\00")
(data (i32.const 672) "the gun is already unlocked.\00")
(data (i32.const 704) "the gun is not owned by anyone.\00")
(data (i32.const 736) "gun is not unlocking.\00")
(data (i32.const 768) "object passed to modify is not in multi_index\00")
(data (i32.const 816) "cannot modify objects in table of another contract\00")
(data (i32.const 880) "attempt to add asset with different symbol\00")
(data (i32.const 928) "addition underflow\00")
(data (i32.const 960) "addition overflow\00")
(data (i32.const 992) "updater cannot change primary key when modifying an object\00")
(data (i32.const 1056) "write\00")
(data (i32.const 1072) "gun\'s camp not exists.\00")
(data (i32.const 1104) "gun\'s camp is ended, the gun is frozen.\00")
(data (i32.const 1152) "invalid token transfer.\00")
(data (i32.const 1184) "quantity must be positive.\00")
(data (i32.const 1216) "STAKE\00")
(data (i32.const 1232) "player must sign up first.\00")
(data (i32.const 1264) "game not start yet.\00")
(data (i32.const 1296) "game is ended, you can\'t stake now.\00")
(data (i32.const 1344) "player\'s camp invalid.\00")
(data (i32.const 1376) "HEAL:\00")
(data (i32.const 1392) "wrong format memo of heal.\00")
(data (i32.const 1424) "UNLOCK GUN:\00")
(data (i32.const 1440) "wrong format memo of unlock gun.\00")
(data (i32.const 1488) "CHANGE CAMP:\00")
(data (i32.const 1504) "wrong format memo of change camp.\00")
(data (i32.const 1552) "only NFT support.\00")
(data (i32.const 1584) "not enough balance to change camp.\00")
(data (i32.const 1632) "active\00")
(data (i32.const 1648) "fightdestroy\00")
(data (i32.const 1664) "Christmas Battle change camp.\00")
(data (i32.const 1696) "player must signup first.\00")
(data (i32.const 1728) "you already in this camp.\00")
(data (i32.const 1760) "camp not exists.\00")
(data (i32.const 1792) "player\'s demage is bigger than camp\'s.\00")
(data (i32.const 1840) "player\'s heal is bigger than camp\'s.\00")
(data (i32.const 1888) "cannot create objects in table of another contract\00")
(data (i32.const 1952) "stakeback\00")
(data (i32.const 1968) "multiplication overflow\00")
(data (i32.const 2000) "multiplication underflow\00")
(data (i32.const 2032) "divide by zero\00")
(data (i32.const 2048) "signed division overflow\00")
(data (i32.const 2080) "validate balance failed when unlock gun.\00")
(data (i32.const 2128) "game not initialized.\00")
(data (i32.const 2160) "game is ended.\00")
(data (i32.const 2176) "player does not exist.\00")
(data (i32.const 2208) "the gun can not unlock now.\00")
(data (i32.const 2240) "player does not own the gun.\00")
(data (i32.const 2272) "gun\' level must be 30+ when unlock use NFT.\00")
(data (i32.const 2320) "Christmas Battle unlock 30+ level gun.\00")
(data (i32.const 2368) "healer must be an account.\00")
(data (i32.const 2400) "you can\'t heal camp with 0 snow.\00")
(data (i32.const 2448) "validate balance failed when buy snow to heal camp.\00")
(data (i32.const 2512) "you can\'t heal enemy\'s camp.\00")
(data (i32.const 2544) "camp\'s hp is full.\00")
(data (i32.const 2576) "camp alreay down, you are too late.\00")
(data (i32.const 2624) "not enough snow available.\00")
(data (i32.const 2656) "Christmas Battle heal.\00")
(data (i32.const 2688) "|\00")
(data (i32.const 2692) "\17\00\00\00\18\00\00\00")
(data (i32.const 2704) "T = \00")
(data (i32.const 2720) "static const char *boost::detail::ctti<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::n() [T = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]\00")
(data (i32.const 2944) "player not exists.\00")
(data (i32.const 2976) "player\'s camp not exists.\00")
(data (i32.const 3008) "player\'s camp is ended, you can only wait for game to end.\00")
(data (i32.const 3072) "BUY GUN:\00")
(data (i32.const 3088) "wrong format memo of buy gun.\00")
(data (i32.const 3120) "LVL UP GUN:\00")
(data (i32.const 3136) "wrong format memo of level up.\00")
(data (i32.const 3168) "ATTACK:\00")
(data (i32.const 3184) "wrong format memo of attack.\00")
(data (i32.const 3216) "gun is already unlokcing.\00")
(data (i32.const 3248) "CHAT\00")
(data (i32.const 3264) "only EOS support.\00")
(data (i32.const 3296) "balance must be positive.\00")
(data (i32.const 3328) "game hasn\'t been initialized yet.\00")
(data (i32.const 3376) "Referral reward.\00")
(data (i32.const 3408) "attempt to subtract asset with different symbol\00")
(data (i32.const 3456) "subtraction underflow\00")
(data (i32.const 3488) "subtraction overflow\00")
(data (i32.const 3520) "game does not start yet.\00")
(data (i32.const 3552) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 3616) "not enough mine tokens.\00")
(data (i32.const 3648) "fightgamesio\00")
(data (i32.const 3664) "mine rewards.\00")
(data (i32.const 3680) "unable to find key\00")
(data (i32.const 3712) "attacker must be an account.\00")
(data (i32.const 3744) "snowball can\'t be 0.\00")
(data (i32.const 3776) "validate balance failed when buy snow to attack camp.\00")
(data (i32.const 3840) "camp not exists .\00")
(data (i32.const 3872) "camp already down, you can\'t attack it.\00")
(data (i32.const 3920) "you can\'t attack your own camp.\00")
(data (i32.const 3952) "you don\'t own the gun.\00")
(data (i32.const 3984) "gun\'s level deos not match loaded snow.\00")
(data (i32.const 4032) "the gun is not reach the time to fire again.\00")
(data (i32.const 4080) "only 1 snow per time without gun\00")
(data (i32.const 4128) "unknown error during attack.\00")
(data (i32.const 4160) "unkown error, bonus invalid.\00")
(data (i32.const 4192) "camp invalid.\00")
(data (i32.const 4208) "Last attack reward!\00")
(data (i32.const 4240) "unkown error, camp can\'t be taken down twice.\00")
(data (i32.const 4288) "unknown error\00")
(data (i32.const 4304) "unknown error while validate last live camp.\00")
(data (i32.const 4352) "unknown error during enum ended camps.\00")
(data (i32.const 4400) "you can only level up your own gun.\00")
(data (i32.const 4448) "validate balance failed when level up gun.\00")
(data (i32.const 4496) "player can only level up his own gun.\00")
(data (i32.const 4544) "gun\'s camp does not exists.\00")
(data (i32.const 4576) "you can\'t level up gun, \'cause the gun is not reach time yet.\00")
(data (i32.const 4640) "buyer must be an account.\00")
(data (i32.const 4672) "player\'s camp is fail, you must get your bonus and then sign up other camps.\00")
(data (i32.const 4752) "validate balance failed when buy gun.\00")
(data (i32.const 4800) "gun is unlocking, you can\'t buy it now.\00")
(data (i32.const 4848) "you can only buy other camps\' gun when it\'s unlocked.\00")
(data (i32.const 4912) "seller not exists.\00")
(data (i32.const 4944) "seller\'s camp not exists.\00")
(data (i32.const 4976) "price must be positive.\00")
(data (i32.const 5008) "only unlocked gun can be set price manually.\00")
(data (i32.const 5056) "invalid token.\00")
(data (i32.const 5072) "no enough staked asset.\00")
(data (i32.const 5104) "camp\'s stake is smaller than player\'s.\00")
(data (i32.const 5152) "refund\00")
(data (i32.const 5168) "refund request not found\00")
(data (i32.const 5200) "refund is not available yet\00")
(data (i32.const 5232) "refund staked token.\00")
(data (i32.const 5264) "player has not valid income.\00")
(data (i32.const 5296) "income.\00")
(data (i32.const 5312) "game is not end, you can\'t get bonus now.\00")
(data (i32.const 5360) "you already get your bonus.\00")
(data (i32.const 5392) "the battle is going on, you can\'t get bonus now.\00")
(data (i32.const 5456) "camp total staked is smaller than player\'s staked.\00")
(data (i32.const 5520) "camp staked weight can\'t be zero.\00")
(data (i32.const 5568) "camp total attack can\'t be zero.\00")
(data (i32.const 5616) "camp total heal can\'t be zero.\00")
(data (i32.const 5648) "firstbonus invalid.\00")
(data (i32.const 5680) "not enough bonus.\00")
(data (i32.const 5712) "stake NFT bonus\00")
(data (i32.const 5728) "first attack bonus invalid.\00")
(data (i32.const 5760) "attack bonus\00")
(data (i32.const 5776) "first heal bonus invalid.\00")
(data (i32.const 5808) "heal bonus\00")
(data (i32.const 5824) "secondbonus invalid.\00")
(data (i32.const 5856) "second attack bonus invalid.\00")
(data (i32.const 5888) "second heal bonus invalid.\00")
(data (i32.const 5920) "player must stake first.\00")
(data (i32.const 5952) "you can\'t claim rewards now.\00")
(data (i32.const 5984) "rewards not ready yet.\00")
(data (i32.const 6016) "you already claim your dividend within one day.\00")
(data (i32.const 6064) "unknown error, total weight is 0.\00")
(data (i32.const 6112) "unknown error, balance is bigger than left reward.\00")
(data (i32.const 6176) "rewards\00")
(data (i32.const 6192) "referral can\'t be yourself.\00")
(data (i32.const 6224) "game already ended.\00")
(data (i32.const 6256) "player already registered.\00")
(data (i32.const 6288) "snowing must be positive.\00")
(data (i32.const 6320) "hp must be positive.\00")
(data (i32.const 6352) "elapse must be positive.\00")
(data (i32.const 6384) "camp already down, you are late.\00")
(data (i32.const 6432) "game does not start.\00")
(data (i32.const 6464) "weathervoter\00")
(data (i32.const 6480) "wrong weather value.\00")
(data (i32.const 6512) "camps not initialized yet.\00")
(data (i32.const 6544) "\n\00\00\00\00\00\00\00\n\00\00\00\00\00\00\00\f6\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\f6\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00")
(data (i32.const 6592) "\0f\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\f1\ff\ff\ff\ff\ff\ff\ff\f1\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\0f\00\00\00\00\00\00\00")
(data (i32.const 6640) "\00\00\00\00\00\00\00\00\c4\ff\ff\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\c4\ff\ff\ff\ff\ff\ff\ff<\00\00\00\00\00\00\00<\00\00\00\00\00\00\00")
(data (i32.const 6688) "game hasn\'t been initialized.\00")
(data (i32.const 6720) "game didn\'t start, you can\'t update camp.\00")
(data (i32.const 6768) "camps must be initialized first.\00")
(data (i32.const 6816) "guns must be initialized first.\00")
(data (i32.const 6848) "count must be positive.\00")
(data (i32.const 6880) "cid illegal.\00")
(data (i32.const 6896) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 6960) "cannot decrement iterator at beginning of table\00")
(data (i32.const 15408) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 15504) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00\f8?")
(data (i32.const 15520) "\00\00\00\00\00\00\00\00\06\d0\cfC\eb\fdL>")
(data (i32.const 15536) "\00\00\00\00\00\00\00\00\00\00\00@\03\b8\e2?")
(data (i32.const 15552) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\01\02\03\04\05\06\07\08\t\ff\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
(data (i32.const 15824) "\00\01\02\04\07\03\06\05\00")
(import "env" "__multi3" (func $fimport$0 (param i32 i64 i64 i64 i64)))
(import "env" "abort" (func $fimport$1))
(import "env" "action_data_size" (func $fimport$2 (result i32)))
(import "env" "cancel_deferred" (func $fimport$3 (param i32) (result i32)))
(import "env" "current_receiver" (func $fimport$4 (result i64)))
(import "env" "current_time" (func $fimport$5 (result i64)))
(import "env" "db_end_i64" (func $fimport$6 (param i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$7 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$8 (param i32 i32 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$9 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$10 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$11 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$12 (param i32)))
(import "env" "db_store_i64" (func $fimport$13 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$14 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$15 (param i32 i32)))
(import "env" "is_account" (func $fimport$16 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$17 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$18 (param i32 i32 i32) (result i32)))
(import "env" "read_action_data" (func $fimport$19 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$20 (param i64)))
(import "env" "require_auth2" (func $fimport$21 (param i64 i64)))
(import "env" "send_deferred" (func $fimport$22 (param i32 i64 i32 i32 i32)))
(import "env" "send_inline" (func $fimport$23 (param i32 i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_Z25gun_level_up_cooling_timey" (func $5))
(export "_Z13attack_factory" (func $6))
(export "_Z17gun_load_min_snowy" (func $7))
(export "_Z17gun_load_max_snowy" (func $8))
(export "_Z22validate_gun_load_snowyy" (func $9))
(export "_Z16gun_level_up_feey" (func $10))
(export "_Z17gun_trade_min_feey" (func $11))
(export "_Z12attack_scorexxxRx" (func $12))
(export "_Z10heal_scorexxxRx" (func $13))
(export "apply" (func $14))
(export "_ZN7campwar8initcampEv" (func $15))
(export "_ZN7campwar7initgunExy" (func $17))
(export "_ZN7campwar10initconfigEy" (func $19))
(export "_ZN7campwar10updatecampEv" (func $21))
(export "_ZN7campwar10setweatherEx" (func $22))
(export "_ZN7campwar10openrewardEv" (func $24))
(export "_ZN7campwar9setshieldEyxx" (func $25))
(export "_ZN7campwar7setsnowEyx" (func $27))
(export "_ZN7campwar8addbonusEN5eosio5assetE" (func $29))
(export "_ZN7campwar9addrewardEN5eosio5assetE" (func $31))
(export "_ZN7campwar6foobarEyy" (func $32))
(export "_ZN7campwar6signupEyyy" (func $34))
(export "_ZN7campwar12claimrewardsEy" (func $36))
(export "_ZN7campwar8getbonusEy" (func $37))
(export "_ZN7campwar9getincomeEy" (func $38))
(export "_ZN7campwar6refundEy" (func $39))
(export "_ZN7campwar9stakebackEy" (func $40))
(export "_ZN7campwar7unstakeEyN5eosio5assetE" (func $41))
(export "_ZN7campwar11setgunpriceEyyN5eosio5assetE" (func $43))
(export "_ZN7campwar8transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $45))
(export "_ZN7campwar9unlockgunEyy" (func $47))
(export "_ZN7campwar8clearallEv" (func $48))
(export "_ZN7campwar25validate_gun_is_availableEy" (func $58))
(export "_ZN7campwar12eos_transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $75))
(export "_ZN7campwar14fight_transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $76))
(export "_ZN7campwar22validate_player_activeEy" (func $77))
(export "_ZN7campwar15parse_memo_healERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERyS9_" (func $81))
(export "_ZN7campwar4healEN5eosio4nameEyyNS0_5assetE" (func $82))
(export "_ZN7campwar20unlock_gun_use_fightEyyN5eosio5assetE" (func $83))
(export "_ZN7campwar21change_camp_use_fightEyyN5eosio5assetE" (func $84))
(export "_ZN7campwar10changecampEyyN5eosio5assetE" (func $85))
(export "_ZN7campwar7buy_gunEN5eosio4nameEyNS0_5assetE" (func $130))
(export "_ZN7campwar8level_upEN5eosio4nameEyNS0_5assetE" (func $131))
(export "_ZN7campwar17parse_memo_attackERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERyS9_S9_" (func $132))
(export "_ZN7campwar6attackEN5eosio4nameEyyyNS0_5assetE" (func $133))
(export "_ZN7campwar18unlock_gun_use_eosEyyN5eosio5assetE" (func $134))
(export "_ZN7campwar19change_camp_use_eosEyyN5eosio5assetE" (func $135))
(export "_ZN7campwar21save_realtime_rewardsEN5eosio5assetE" (func $137))
(export "_ZN7campwar10save_bonusEN5eosio5assetE" (func $138))
(export "_ZN7campwar8cal_mineEx" (func $146))
(export "_ZN7campwar15distribute_mineEN5eosio4nameENS0_5assetE" (func $147))
(export "_ZN7campwar12camp_downingEN5eosio4nameEy" (func $161))
(export "_ZN7campwar24validate_buy_gun_balanceEyyN5eosio5assetE" (func $183))
(export "_ZN7campwar17weather_influenceEx" (func $210))
(export "_ZN7campwarC2Ey" (func $222))
(export "_ZN7campwar18current_time_pointEv" (func $223))
(export "_ZN7campwar18parse_memo_buy_gunERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERy" (func $224))
(export "_ZN7campwar19parse_memo_level_upERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERy" (func $225))
(export "_ZN7campwar21parse_memo_unlock_gunERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERy" (func $226))
(export "_ZN7campwar22parse_memo_change_campERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERy" (func $227))
(export "malloc" (func $228))
(export "free" (func $231))
(export "pow" (func $248))
(export "sqrt" (func $249))
(export "fabs" (func $250))
(export "scalbn" (func $251))
(export "strtoll" (func $252))
(export "__shlim" (func $253))
(export "__intscan" (func $254))
(export "__errno_location" (func $255))
(export "__shgetc" (func $256))
(export "__uflow" (func $257))
(export "__toread" (func $258))
(export "memchr" (func $259))
(export "strlen" (func $260))
(export "memcmp" (func $261))
(table $0 25 25 anyfunc)
(elem (i32.const 0) $262 $40 $38 $27 $48 $41 $15 $39 $29 $22 $34 $32 $37 $43 $25 $31 $36 $45 $47 $19 $24 $21 $17 $123 $124)



void .FUNC $220 (int_32 $0, int_32 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$4 = (*([0] + [4]) - [16])
	$7 = $4
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [144]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	$3 = *($1)
	if ( (*([0] + [1332]) == 0) ){ goto $label$2 }
	$6 = *([0] + [1336])
	$5 = $3
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL current_time()
	*([0] + [1332]) = [1]
	$6 = (CASTING uint_32)(uint_64 ((uint_64)$5 / (uint_64)(int_64)1000000))
	*([0] + [1336]) = $6
	$5 = *($1)
	
.LABEL $label$1
	*($1 + [96]) = $6
	*($1 + [56]) = $6
	CALL eosio_assert(((int_64)$3 == (int_64)$5), [992])
	$6 = $4
	$4 = ($6 + [-144])
	*([0] + [4]) = $4
	*($7 + [4]) = $4
	*($7) = $4
	*($7 + [8]) = ($6 + [-8])
	CALL $80($7, $1)
	CALL db_update_i64(*($1 + [148]), $2, $4, [136])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $174 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [16])
	$10 = $9
	*([0] + [4]) = $9
	*($1) = *(*(*($0 + [4])))
	$2 = *($0)
	if ( (*([0] + [1332]) == 0) ){ goto $label$2 }
	$7 = *([0] + [1336])
	goto $label$1 
	
.LABEL $label$2
	$8 = CALL current_time()
	*([0] + [1332]) = [1]
	$7 = (CASTING uint_32)(uint_64 ((uint_64)$8 / (uint_64)(int_64)1000000))
	*([0] + [1336]) = $7
	
.LABEL $label$1
	*($1 + [8]) = $7
	$7 = [12]
	$3 = ($1 + [12])
	CALL $178($3, [0], [0])
	$5 = *($1 + [12])
	$4 = *(($1 + [16]))
	$6 = ($4 - $5)
	$8 = (CASTING uint_64)(uint_32 int_32($6 >> [3]))
	
.LOOP $label$3:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	$7 = (($6 & [-8]) + $7)
	
.LABEL $label$4
	if ( ($7 <= [513]) ){ goto $label$6 }
	$9 = CALL malloc($7)
	goto $label$5 
	
.LABEL $label$6
	$9 = ($9 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$5
	*($10) = $9
	$4 = ($9 + $7)
	*($10 + [8]) = $4
	CALL eosio_assert(((int_32)$7 > (int_32)[7]), [1056])
	CALL memcpy($9, $1, [8])
	$5 = ($9 + [8])
	CALL eosio_assert(((int_32)($4 - $5) > (int_32)[3]), [1056])
	CALL memcpy($5, ($1 + [8]), [4])
	*($10 + [4]) = ($9 + [12])
	CALL $103($10, $3)
	$8 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-2042605236735967232, *(*($0 + [8])), $8, $9, $7)
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL free($9)
	
.LABEL $label$7
	if ( (uint_64)($8 <= *($2 + [16])) ){ goto $label$8 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($10 + [16])
}

int_64 .FUNC _Z13attack_factory (int_64 $0)
{
	return ((int_64)(Rounds 0)(CALL pow((CASTING float_64)(uint_64 $0), (float_64)2)) + (int_64)3)
}

int_32 .FUNC $176 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [416])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	$7 = ($4 + $6)
	*($8 + [40]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [40]))
	$4 = *($8 + [36])
	
.LABEL $label$7
	*(($6 = CALL $238([40])) + [8 align=4]) = (int_64)0
	*($6 + [16 align=4]) = (int_64)0
	*($6 + [24]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [448])
	CALL memcpy($6, $4, [8])
	$3 = ($4 + [8])
	CALL eosio_assert(((uint_32)($7 - $3) > (uint_32)[3]), [448])
	CALL memcpy(($6 + [8]), $3, [4])
	*($8 + [36]) = ($4 + [12])
	CALL $55(($8 + [32]), ($6 + [12]))
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $175(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [12])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [16])) = $7
	CALL $240($7)
	
.LABEL $label$10
	CALL $240($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $177 (int_32 $0, int_32 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$10 = (*([0] + [4]) - [16])
	$11 = $10
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	$3 = *($1)
	if ( (*([0] + [1332]) == 0) ){ goto $label$2 }
	$8 = *([0] + [1336])
	goto $label$1 
	
.LABEL $label$2
	$9 = CALL current_time()
	*([0] + [1332]) = [1]
	$8 = (CASTING uint_32)(uint_64 ((uint_64)$9 / (uint_64)(int_64)1000000))
	*([0] + [1336]) = $8
	
.LABEL $label$1
	*($1 + [8]) = $8
	$8 = [12]
	$4 = ($1 + [12])
	CALL $178($4, [0], [0])
	CALL eosio_assert(((int_64)$3 == (int_64)*($1)), [992])
	$6 = *($1 + [12])
	$5 = *(($1 + [16]))
	$7 = ($5 - $6)
	$9 = (CASTING uint_64)(uint_32 int_32($7 >> [3]))
	
.LOOP $label$3:
	$8 = ($8 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	$8 = (($7 & [-8]) + $8)
	
.LABEL $label$4
	if ( ($8 <= [513]) ){ goto $label$6 }
	$10 = CALL malloc($8)
	goto $label$5 
	
.LABEL $label$6
	$10 = ($10 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$5
	*($11) = $10
	$5 = ($10 + $8)
	*($11 + [8]) = $5
	CALL eosio_assert(((int_32)$8 > (int_32)[7]), [1056])
	CALL memcpy($10, $1, [8])
	$6 = ($10 + [8])
	CALL eosio_assert(((int_32)($5 - $6) > (int_32)[3]), [1056])
	CALL memcpy($6, ($1 + [8]), [4])
	*($11 + [4]) = ($10 + [12])
	CALL $103($11, $4)
	CALL db_update_i64(*($1 + [28]), $2, $10, $8)
	if ( ($8 <= [513]) ){ goto $label$7 }
	CALL free($10)
	
.LABEL $label$7
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($11 + [16])
}

int_32 .FUNC $170 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [416])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $238([56])
	$4 = CALL $141($6)
	*($6 + [40]) = $0
	CALL $142(($8 + [32]), $4)
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [44])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $171(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $240($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $171 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $238(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $244($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $240($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $240($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $172 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [416])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $238([56])
	$4 = CALL $141($6)
	*($6 + [40]) = $0
	CALL $142(($8 + [32]), $4)
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [44])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $173(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $240($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_64 .FUNC _Z17gun_load_min_snowy (int_64 $0)
{
	return $0
}

int_32 .FUNC $246 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $238($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $178 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = *($0)
	$8 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [3])
	if ( ((uint_32)$4 <= (uint_32)int_32(($8 - $5) >> [3])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $240($5)
	$8 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$1 }
	$5 = [536870911]
	if ( ((uint_32)int_32($8 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$5 = $4
	$2 = int_32($8 >> [2])
	if ( ($2 <= $4) ){ goto $label$6 }
	$5 = $2
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($5 << [3])
	$5 = CALL $238($4)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($5, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	return 
	
.LABEL $label$4
	$3 = int_32($3 >> [3])
	$3 = (*($0 + [4]) - $5)
	$8 = ( ($1 + $3) ? $2 : ((uint_32)$4 > (uint_32)$3) )
	$6 = ($8 - $1)
	$7 = int_32($6 >> [3])
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memmove($5, $1, $6)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$3) ){ goto $label$2 }
	$1 = ($2 - $8)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $8, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + ($7 << [3]))
	return (unreachable)
	
.LABEL $label$1
	CALL $244($0)
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

int_32 .FUNC $221 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [92]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [6960])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)7396599438002618368)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [6896])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [6896])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $57(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC _Z25gun_level_up_cooling_timey (int_64 $0)
{
	return ((CASTING uint_32)(float_64 ((float_64)((float_64)CALL pow((CASTING float_64)(uint_64 ((int_64)$0 << (int_64)1)), (float_64)2) * (float_64)(float_64)60) / (float_64)(float_64)10)) + [60])
}

int_32 .FUNC $127 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [40]) = (int_64)0
	$2 = [0]
	*($0 + [24]) = [0]
	*(($3 = ($0 + [48]))) = (int_64)1397703940
	CALL eosio_assert([1], [512])
	$1 = (uint_64)*($3) >> (uint_64)(int_64)8)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [480])
	*(($2 = ($0 + [64]))) = (int_64)1397703940
	*($0 + [56]) = (int_64)0
	CALL eosio_assert([1], [512])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [480])
	return $0
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

void .FUNC $189 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *([0] + [4])
	$7 = $5
	$6 = *($0 + [4])
	*($1) = *(*($6))
	$2 = *($0)
	$6 = *($6 + [4])
	*($1 + [16]) = *($6)
	*(($1 + [24])) = *(($6 + [8]))
	$3 = ($1 + [16])
	if ( (*([0] + [1332]) == 0) ){ goto $label$2 }
	$6 = *([0] + [1336])
	goto $label$1 
	
.LABEL $label$2
	$4 = CALL current_time()
	*([0] + [1332]) = [1]
	$6 = (CASTING uint_32)(uint_64 ((uint_64)$4 / (uint_64)(int_64)1000000))
	*([0] + [1336]) = $6
	
.LABEL $label$1
	*($1 + [8]) = $6
	$5 = $5
	$6 = ($5 + [-32])
	*([0] + [4]) = $6
	CALL eosio_assert([1], [1056])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy(($5 + [-24]), ($1 + [8]), [4])
	CALL eosio_assert([1], [1056])
	CALL memcpy(($5 + [-20]), $3, [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy(($5 + [-12]), ($1 + [24]), [8])
	$4 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($2 + [8]), (int_64)-5001342326447013888, *(*($0 + [8])), $4, $6, [28])
	if ( (uint_64)($4 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = $7
}

void .FUNC $188 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [16])
	$10 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [324]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	$4 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [64]))), [3408])
	$8 = (int_64)
	*($1 + [56]) = $8(*($1 + [56]) - *($3)))
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [3456])
	CALL eosio_assert(((int_64)*($1 + [56]) < (int_64)4611686018427387904), [3488])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [992])
	$6 = *($1 + [312])
	$5 = *(($1 + [316]))
	$7 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 int_32($7 >> [3]))
	$3 = [308]
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$2 }
	$3 = (($7 & [-8]) + $3)
	
.LABEL $label$2
	if ( ($3 <= [513]) ){ goto $label$4 }
	$9 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$9 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$3
	*($10 + [4]) = $9
	*($10) = $9
	*($10 + [8]) = ($9 + $3)
	CALL $102($10, $1)
	CALL db_update_i64(*($1 + [328]), $2, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($9)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $49 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *(($0 + [752]))
	if ( ($3 == 0) ){ goto $label$1 }
	$1 = ($0 + [756])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$3 }
	
.LOOP $label$4:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	CALL $240($2)
	
.LABEL $label$5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	$5 = *(($0 + [752]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $3
	
.LABEL $label$2
	*($1) = $3
	CALL $240($5)
	
.LABEL $label$1
	$3 = *(($0 + [712]))
	if ( ($3 == 0) ){ goto $label$6 }
	$1 = ($0 + [716])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	CALL $240($2)
	
.LABEL $label$10
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$9 }
	$5 = *(($0 + [712]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $3
	
.LABEL $label$7
	*($1) = $3
	CALL $240($5)
	
.LABEL $label$6
	$3 = *(($0 + [672]))
	if ( ($3 == 0) ){ goto $label$11 }
	$1 = ($0 + [676])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$15 }
	CALL $240($2)
	
.LABEL $label$15
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$14 }
	$5 = *(($0 + [672]))
	goto $label$12 
	
.LABEL $label$13
	$5 = $3
	
.LABEL $label$12
	*($1) = $3
	CALL $240($5)
	
.LABEL $label$11
	$3 = *(($0 + [632]))
	if ( ($3 == 0) ){ goto $label$16 }
	$1 = ($0 + [636])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$18 }
	
.LOOP $label$19:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$20 }
	CALL $240($2)
	
.LABEL $label$20
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$19 }
	$5 = *(($0 + [632]))
	goto $label$17 
	
.LABEL $label$18
	$5 = $3
	
.LABEL $label$17
	*($1) = $3
	CALL $240($5)
	
.LABEL $label$16
	$3 = *(($0 + [592]))
	if ( ($3 == 0) ){ goto $label$21 }
	$1 = ($0 + [596])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$23 }
	
.LOOP $label$24:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$25 }
	CALL $240($2)
	
.LABEL $label$25
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$24 }
	$5 = *(($0 + [592]))
	goto $label$22 
	
.LABEL $label$23
	$5 = $3
	
.LABEL $label$22
	*($1) = $3
	CALL $240($5)
	
.LABEL $label$21
	$3 = *(($0 + [552]))
	if ( ($3 == 0) ){ goto $label$26 }
	$1 = ($0 + [556])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$28 }
	
.LOOP $label$29:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$30 }
	CALL $240($2)
	
.LABEL $label$30
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$29 }
	$5 = *(($0 + [552]))
	goto $label$27 
	
.LABEL $label$28
	$5 = $3
	
.LABEL $label$27
	*($1) = $3
	CALL $240($5)
	
.LABEL $label$26
	$1 = *(($0 + [512]))
	if ( ($1 == 0) ){ goto $label$31 }
	$4 = ($0 + [516])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$33 }
	
.LOOP $label$34:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$35 }
	$3 = *($2 + [12])
	if ( ($3 == 0) ){ goto $label$36 }
	*(($2 + [16])) = $3
	CALL $240($3)
	
.LABEL $label$36
	CALL $240($2)
	
.LABEL $label$35
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$34 }
	$5 = *(($0 + [512]))
	goto $label$32 
	
.LABEL $label$33
	$5 = $1
	
.LABEL $label$32
	*($4) = $1
	CALL $240($5)
	
.LABEL $label$31
	$1 = *(($0 + [472]))
	if ( ($1 == 0) ){ goto $label$37 }
	$4 = ($0 + [476])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$39 }
	
.LOOP $label$40:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$41 }
	$3 = *($2 + [12])
	if ( ($3 == 0) ){ goto $label$42 }
	*(($2 + [16])) = $3
	CALL $240($3)
	
.LABEL $label$42
	CALL $240($2)
	
.LABEL $label$41
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$40 }
	$5 = *(($0 + [472]))
	goto $label$38 
	
.LABEL $label$39
	$5 = $1
	
.LABEL $label$38
	*($4) = $1
	CALL $240($5)
	
.LABEL $label$37
	$3 = *(($0 + [432]))
	if ( ($3 == 0) ){ goto $label$43 }
	$1 = ($0 + [436])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$45 }
	
.LOOP $label$46:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$47 }
	CALL $240($2)
	
.LABEL $label$47
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$46 }
	$5 = *(($0 + [432]))
	goto $label$44 
	
.LABEL $label$45
	$5 = $3
	
.LABEL $label$44
	*($1) = $3
	CALL $240($5)
	
.LABEL $label$43
	$3 = *(($0 + [392]))
	if ( ($3 == 0) ){ goto $label$48 }
	$1 = ($0 + [396])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$50 }
	
.LOOP $label$51:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$52 }
	CALL $240($2)
	
.LABEL $label$52
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$51 }
	$5 = *(($0 + [392]))
	goto $label$49 
	
.LABEL $label$50
	$5 = $3
	
.LABEL $label$49
	*($1) = $3
	CALL $240($5)
	
.LABEL $label$48
	$3 = *(($0 + [352]))
	if ( ($3 == 0) ){ goto $label$53 }
	$1 = ($0 + [356])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$55 }
	
.LOOP $label$56:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$57 }
	CALL $240($2)
	
.LABEL $label$57
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$56 }
	$5 = *(($0 + [352]))
	goto $label$54 
	
.LABEL $label$55
	$5 = $3
	
.LABEL $label$54
	*($1) = $3
	CALL $240($5)
	
.LABEL $label$53
	$3 = *(($0 + [312]))
	if ( ($3 == 0) ){ goto $label$58 }
	$1 = ($0 + [316])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$60 }
	
.LOOP $label$61:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$62 }
	CALL $240($2)
	
.LABEL $label$62
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$61 }
	$5 = *(($0 + [312]))
	goto $label$59 
	
.LABEL $label$60
	$5 = $3
	
.LABEL $label$59
	*($1) = $3
	CALL $240($5)
	
.LABEL $label$58
	$3 = *(($0 + [272]))
	if ( ($3 == 0) ){ goto $label$63 }
	$1 = ($0 + [276])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$65 }
	
.LOOP $label$66:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$67 }
	CALL $240($2)
	
.LABEL $label$67
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$66 }
	$5 = *(($0 + [272]))
	goto $label$64 
	
.LABEL $label$65
	$5 = $3
	
.LABEL $label$64
	*($1) = $3
	CALL $240($5)
	
.LABEL $label$63
	$3 = *(($0 + [232]))
	if ( ($3 == 0) ){ goto $label$68 }
	$1 = ($0 + [236])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$70 }
	
.LOOP $label$71:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$72 }
	CALL $240($2)
	
.LABEL $label$72
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$71 }
	$5 = *(($0 + [232]))
	goto $label$69 
	
.LABEL $label$70
	$5 = $3
	
.LABEL $label$69
	*($1) = $3
	CALL $240($5)
	
.LABEL $label$68
	$3 = *(($0 + [192]))
	if ( ($3 == 0) ){ goto $label$73 }
	$1 = ($0 + [196])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$75 }
	
.LOOP $label$76:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$77 }
	CALL $240($2)
	
.LABEL $label$77
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$76 }
	$5 = *(($0 + [192]))
	goto $label$74 
	
.LABEL $label$75
	$5 = $3
	
.LABEL $label$74
	*($1) = $3
	CALL $240($5)
	
.LABEL $label$73
	$3 = *(($0 + [152]))
	if ( ($3 == 0) ){ goto $label$78 }
	$1 = ($0 + [156])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$80 }
	
.LOOP $label$81:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$82 }
	CALL $240($2)
	
.LABEL $label$82
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$81 }
	$5 = *(($0 + [152]))
	goto $label$79 
	
.LABEL $label$80
	$5 = $3
	
.LABEL $label$79
	*($1) = $3
	CALL $240($5)
	
.LABEL $label$78
	$3 = *(($0 + [112]))
	if ( ($3 == 0) ){ goto $label$83 }
	$1 = ($0 + [116])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$85 }
	
.LOOP $label$86:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$87 }
	CALL $240($2)
	
.LABEL $label$87
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$86 }
	$5 = *(($0 + [112]))
	goto $label$84 
	
.LABEL $label$85
	$5 = $3
	
.LABEL $label$84
	*($1) = $3
	CALL $240($5)
	
.LABEL $label$83
	$1 = *(($0 + [72]))
	if ( ($1 == 0) ){ goto $label$88 }
	$4 = ($0 + [76])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$90 }
	
.LOOP $label$91:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$92 }
	$3 = *($2 + [312])
	if ( ($3 == 0) ){ goto $label$93 }
	*(($2 + [316])) = $3
	CALL $240($3)
	
.LABEL $label$93
	CALL $240($2)
	
.LABEL $label$92
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$91 }
	$5 = *(($0 + [72]))
	goto $label$89 
	
.LABEL $label$90
	$5 = $1
	
.LABEL $label$89
	*($4) = $1
	CALL $240($5)
	
.LABEL $label$88
	$3 = *(($0 + [32]))
	if ( ($3 == 0) ){ goto $label$94 }
	$1 = ($0 + [36])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$96 }
	
.LOOP $label$97:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$98 }
	CALL $240($2)
	
.LABEL $label$98
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$97 }
	$5 = *(($0 + [32]))
	goto $label$95 
	
.LABEL $label$96
	$5 = $3
	
.LABEL $label$95
	*($1) = $3
	CALL $240($5)
	
.LABEL $label$94
	return $0
}

void .FUNC _ZN7campwar8clearallEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	CALL require_auth(*($0))
	$3 = CALL db_lowerbound_i64(*($0 + [48]), *(($0 + [56])), (int_64)-6030912142679474176, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$1 = ($0 + [48])
	$3 = CALL $50($1, $3)
	
.LOOP $label$2:
	CALL eosio_assert([1], [160])
	CALL eosio_assert([1], [208])
	$0 = [0]
	$2 = CALL db_next_i64(*($3 + [328]), ($4 + [8]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $50($1, $2)
	
.LABEL $label$3
	CALL $51($1, $3)
	$3 = $0
	if ( $0 ){ goto $label$2 }
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC $236 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$7 = *($2)
	$6 = *($0)
	$8 = *($1)
	if ( ((uint_64)$8 >= (uint_64)$6) ){ goto $label$5 }
	if ( ((uint_64)$7 >= (uint_64)$8) ){ goto $label$4 }
	*($0) = $7
	*($2) = $6
	$9 = [1]
	goto $label$3 
	
.LABEL $label$5
	$9 = [0]
	if ( ((uint_64)$7 >= (uint_64)$8) ){ goto $label$2 }
	*($1) = $7
	*($2) = $8
	$9 = [1]
	$6 = *($0)
	$7 = *($1)
	if ( ((uint_64)$7 >= (uint_64)$6) ){ goto $label$1 }
	*($0) = $7
	*($1) = $6
	$8 = *($2)
	$9 = [2]
	goto $label$1 
	
.LABEL $label$4
	*($0) = $8
	*($1) = $6
	$9 = [1]
	$8 = *($2)
	if ( ((uint_64)$8 >= (uint_64)$6) ){ goto $label$1 }
	*($1) = $8
	*($2) = $6
	$9 = [2]
	
.LABEL $label$3
	$8 = $6
	goto $label$1 
	
.LABEL $label$2
	$8 = $7
	
.LABEL $label$1
	$7 = *($3)
	if ( ((uint_64)$7 >= (uint_64)$8) ){ goto $label$6 }
	*($2) = $7
	*($3) = $8
	$7 = *($1)
	$8 = *($2)
	if ( ((uint_64)$8 >= (uint_64)$7) ){ goto $label$8 }
	*($1) = $8
	*($2) = $7
	$7 = *($0)
	$8 = *($1)
	if ( ((uint_64)$8 >= (uint_64)$7) ){ goto $label$7 }
	*($0) = $8
	*($1) = $7
	$9 = ($9 + [3])
	goto $label$6 
	
.LABEL $label$8
	$9 = ($9 + [1])
	goto $label$6 
	
.LABEL $label$7
	$9 = ($9 + [2])
	
.LABEL $label$6
	$7 = *($3)
	$8 = *($4)
	if ( ((uint_64)$8 >= (uint_64)$7) ){ goto $label$12 }
	*($3) = $8
	*($4) = $7
	$7 = *($2)
	$8 = *($3)
	if ( ((uint_64)$8 >= (uint_64)$7) ){ goto $label$11 }
	*($2) = $8
	*($3) = $7
	$7 = *($1)
	$8 = *($2)
	if ( ((uint_64)$8 >= (uint_64)$7) ){ goto $label$10 }
	*($1) = $8
	*($2) = $7
	$7 = *($0)
	$8 = *($1)
	if ( ((uint_64)$8 >= (uint_64)$7) ){ goto $label$9 }
	*($0) = $8
	*($1) = $7
	$9 = ($9 + [4])
	
.LABEL $label$12
	return $9
	
.LABEL $label$11
	return ($9 + [1])
	
.LABEL $label$10
	return ($9 + [2])
	
.LABEL $label$9
	return ($9 + [3])
}

void .FUNC _ZN7campwar11setgunpriceEyyN5eosio5assetE (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [112])
	*([0] + [4]) = $11
	CALL require_auth($1)
	$8 = *($3 + [8])
	CALL eosio_assert(((int_64)$8 == (int_64)1397703940), [3264])
	$10 = [0]
	$7 = [0]
	$4 = *($3)
	if ( ((uint_64)((int_64)$4 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$7 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [1152])
	CALL eosio_assert(((int_64)$4 > (int_64)0), [4976])
	$9 = CALL db_lowerbound_i64(*($0 + [128]), *(($0 + [136])), (int_64)4982871454518345728, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$6 }
	$10 = CALL $78(($0 + [128]), $9)
	
.LABEL $label$6
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [3328])
	CALL eosio_assert(*($10 + [8]), [1264])
	$5 = *(($0 + [72]))
	$10 = *(($0 + [76]))
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$7 }
	$9 = ($10 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$8:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$7 }
	$10 = $9
	$7 = ($9 + [-24])
	$9 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$8 }
	
.LABEL $label$7
	$7 = ($0 + [48])
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$10 }
	$9 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [324]) == (int_32)$7), [592])
	goto $label$9 
	
.LABEL $label$10
	$9 = [0]
	$10 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$9 }
	$9 = CALL $50($7, $10)
	CALL eosio_assert(((int_32)*($9 + [324]) == (int_32)$7), [592])
	
.LABEL $label$9
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [1232])
	CALL _ZN7campwar22validate_player_activeEy($0, $1)
	$5 = *(($0 + [112]))
	$10 = *(($0 + [116]))
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$11 }
	$9 = ($10 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$12:
	if ( ((int_64)*(*($9)) == (int_64)$2) ){ goto $label$11 }
	$10 = $9
	$7 = ($9 + [-24])
	$9 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	$7 = ($0 + [88])
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$14 }
	$9 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [88]) == (int_32)$7), [592])
	goto $label$13 
	
.LABEL $label$14
	$9 = [0]
	$10 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)7396599438002618368, $2)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$13 }
	$9 = CALL $57($7, $10)
	CALL eosio_assert(((int_32)*($9 + [88]) == (int_32)$7), [592])
	
.LABEL $label$13
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [656])
	CALL eosio_assert(((int_64)*($9 + [40]) == (int_64)$1), [3952])
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)1), [5008])
	CALL _ZN7campwar25validate_gun_is_availableEy($0, $2)
	$1 = *($0)
	CALL eosio_assert(((int_32)*($9 + [88]) == (int_32)$7), [768])
	CALL eosio_assert(((int_64)*(($0 + [88])) == (int_64)CALL $fimport$4()), [816])
	*(($9 + [60])) = *(($3 + [12]))
	*(($9 + [56])) = *(($3 + [8]))
	*(($9 + [52])) = *(($3 + [4]))
	*($9 + [48]) = *($3)
	$8 = *($9)
	CALL eosio_assert([1], [992])
	*($11 + [104]) = ($11 + [88])
	*($11 + [100]) = $11
	*($11 + [96]) = $11
	CALL $62(($11 + [96]), $9)
	CALL db_update_i64(*($9 + [92]), $1, $11, [88])
	$9 = ($0 + [104])
	if ( (uint_64)($8 <= *($9)) ){ goto $label$15 }
	*($9) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	*([0] + [4]) = ($11 + [112])
}

int_32 .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [96])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$5 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*(($9 + [40])) = (int_64)1397703940
	*($9 + [32]) = (int_64)0
	*($9 + [24]) = (int_64)0
	CALL eosio_assert([1], [512])
	$6 = (int_64)5459781
	
.LOOP $label$5:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($7, [480])
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [448])
	CALL memcpy(($9 + [24]), $5, [8])
	$7 = ($3 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [448])
	$1 = (($9 + [24]) + [8])
	CALL memcpy($1, ($5 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [448])
	CALL memcpy((($9 + [24]) + [16]), ($5 + [16]), [8])
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	*(($7 = (($9 + [48]) + [8]))) = *(($1 + [8]))
	$6 = *($9 + [24])
	*($9 + [48]) = *($1)
	*((($9 + [64]) + [8])) = *($7)
	*($9 + [64]) = *($9 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$8 = *((*($1) + $8))
	
.LABEL $label$9
	$4 = *((($9 + [64]) + [8]))
	*((($9 + [80]) + [8])) = $4
	*((($9 + [8]) + [8])) = $4
	$4 = *($9 + [64])
	*($9 + [80]) = $4
	*($9 + [8]) = $4
	CALL void $1((int_32 $6), (int_64 ($9 + [8])), (int_32 $8))
	*([0] + [4]) = ($9 + [96])
	return [1]
}

void .FUNC _ZN7campwar7unstakeEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [208])
	*([0] + [4]) = $12
	*($12 + [24]) = $1
	CALL require_auth($1)
	CALL _ZN7campwar22validate_player_activeEy($0, $1)
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)1413893636), [1552])
	$6 = [0]
	if ( ((uint_64)((int_64)*($2) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$10 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [5056])
	CALL eosio_assert(((int_64)*($2) > (int_64)0), [1184])
	$3 = *(($0 + [72]))
	$7 = *(($0 + [76]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$6 }
	$8 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$7:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$6 }
	$7 = $8
	$6 = ($8 + [-24])
	$8 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$6 = ($0 + [48])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$9 }
	$8 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [324]) == (int_32)$6), [592])
	goto $label$8 
	
.LABEL $label$9
	$8 = [0]
	$7 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$8 }
	$8 = CALL $50($6, $7)
	CALL eosio_assert(((int_32)*($8 + [324]) == (int_32)$6), [592])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [1232])
	CALL eosio_assert(((int_64)*($8 + [56]) >= (int_64)*($2)), [5072])
	$1 = *($8 + [304])
	$9 = *($2)
	$10 = *($0)
	*($12 + [48]) = $2
	CALL $188($6, $8, $10, ($12 + [48]))
	$10 = *($8 + [8])
	$3 = *(($0 + [32]))
	$7 = *(($0 + [36]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$10 }
	$8 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$11:
	if ( ((int_64)*(*($8)) == (int_64)$10) ){ goto $label$10 }
	$7 = $8
	$6 = ($8 + [-24])
	$8 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$11 }
	
.LABEL $label$10
	$6 = ($0 + [8])
	$1 = ((int_64)$1 * (int_64)$9)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	$8 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [144]) == (int_32)$6), [592])
	goto $label$12 
	
.LABEL $label$13
	$8 = [0]
	$7 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)4730274944552796160, $10)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$12 }
	$8 = CALL $66($6, $7)
	CALL eosio_assert(((int_32)*($8 + [144]) == (int_32)$6), [592])
	
.LABEL $label$12
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [1344])
	CALL eosio_assert(((int_64)*($8 + [120]) >= (int_64)*($2)), [5104])
	$9 = *($0)
	CALL eosio_assert(((int_32)*($8 + [144]) == (int_32)$6), [768])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$4()), [816])
	$10 = *($8)
	CALL eosio_assert(((int_64)*(($2 + [8])) == (int_64)*(($8 + [128]))), [3408])
	$11 = (int_64)
	*($8 + [120]) = $11(*($8 + [120]) - *($2)))
	CALL eosio_assert(((int_64)$11 > (int_64)-4611686018427387904), [3456])
	CALL eosio_assert(((int_64)*($8 + [120]) < (int_64)4611686018427387904), [3488])
	*($8 + [136]) = (int_64))(*($8 + [136]) - $1)
	CALL eosio_assert(((int_64)$10 == (int_64)*($8)), [992])
	*($12 + [8]) = (($12 + [48]) + [136])
	*($12 + [4]) = ($12 + [48])
	*($12) = ($12 + [48])
	CALL $80($12, $8)
	CALL db_update_i64(*($8 + [148]), $9, ($12 + [48]), [136])
	$8 = ($0 + [24])
	if ( (uint_64)($10 <= *($8)) ){ goto $label$14 }
	*($8) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$14
	$10 = *($12 + [24])
	$3 = *(($0 + [432]))
	$7 = *(($0 + [436]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$15 }
	$8 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$16:
	if ( ((int_64)*(*($8)) == (int_64)$10) ){ goto $label$15 }
	$7 = $8
	$6 = ($8 + [-24])
	$8 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$16 }
	
.LABEL $label$15
	$6 = ($0 + [408])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$20 }
	$8 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [32]) == (int_32)$6), [592])
	if ( $8 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	$8 = CALL db_find_i64(*(($0 + [408])), *(($0 + [416])), (int_64)-5001342326447013888, $10)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$18 }
	$8 = CALL $94($6, $8)
	CALL eosio_assert(((int_32)*($8 + [32]) == (int_32)$6), [592])
	
.LABEL $label$19
	$10 = *($0)
	*($12 + [48]) = $2
	CALL $190($6, $8, $10, ($12 + [48]))
	goto $label$17 
	
.LABEL $label$18
	$10 = *($0)
	*($12 + [36]) = $2
	*($12 + [32]) = ($12 + [24])
	*($12) = $10
	CALL eosio_assert(((int_64)*(($0 + [408])) == (int_64)CALL $fimport$4()), [1888])
	*($12 + [48]) = $6
	*($12 + [52]) = ($12 + [32])
	*($12 + [56]) = $12
	*(($7 = CALL $238([48])) + [16]) = (int_64)0
	*($7 + [8]) = [0]
	*($7 + [24]) = (int_64)1397703940
	CALL eosio_assert([1], [512])
	$10 = (int_64)5459781
	$8 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	
.LOOP $label$25:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$25 }
	
.LABEL $label$24
	$2 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$2 = [0]
	
.LABEL $label$21
	CALL eosio_assert($2, [480])
	*($7 + [32]) = $6
	CALL $189(($12 + [48]), $7)
	*($12 + [200]) = $7
	$10 = *($7)
	*($12 + [48]) = $10
	$6 = *($7 + [36])
	*($12 + [196]) = $6
	$2 = ($0 + [436])
	$8 = *($2)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [440]))) ){ goto $label$27 }
	*($8 + [8]) = $10
	*($8 + [16]) = $6
	*($12 + [200]) = [0]
	*($8) = $7
	*($2) = ($8 + [24])
	goto $label$26 
	
.LABEL $label$27
	CALL $96(($0 + [432]), ($12 + [200]), ($12 + [48]), ($12 + [196]))
	
.LABEL $label$26
	$8 = *($12 + [200])
	*($12 + [200]) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $240($8)
	
.LABEL $label$17
	$10 = CALL current_time()
	*(($12 + [76])) = [0]
	*(($12 + [80])) = [0]
	*($12 + [60]) = [0]
	*($12 + [64]) = [0]
	*($12 + [68]) = [0]
	*($12 + [72]) = [0]
	*($12 + [48]) = ((CASTING uint_32)(uint_64 ((uint_64)$10 / (uint_64)(int_64)1000000)) + [60])
	*($12 + [84]) = [0]
	*(($12 + [88])) = [0]
	*(($12 + [92])) = [0]
	*($12 + [96]) = [0]
	*(($12 + [100])) = [0]
	*(($12 + [104])) = [0]
	$7 = ($12 + [84])
	$5 = *($0)
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [1632]
	$11 = (int_64)0
	
.LOOP $label$28:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$33 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$6 = ($6 + [165])
	goto $label$31 
	
.LABEL $label$33
	$1 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$32
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$30
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$29
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$1 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$28 }
	*($12 + [8]) = $11
	*($12) = $5
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [5152]
	$11 = (int_64)0
	
.LOOP $label$34:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$39 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$38 }
	$6 = ($6 + [165])
	goto $label$37 
	
.LABEL $label$39
	$1 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$38
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$37
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$36
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$35
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$1 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$34 }
	*($12 + [32]) = $11
	CALL $98($7, $12, $0, ($12 + [32]), ($12 + [24]))
	$10 = *($12 + [24])
	*(($12 + [68])) = [172800]
	*($12 + [8]) = (int_64)0
	*($12) = $10
	CALL cancel_deferred($12)
	*($12 + [8]) = (int_64)0
	$10 = *($12 + [24])
	*($12) = $10
	CALL $99(($12 + [32]), ($12 + [48]))
	$8 = *($12 + [32])
	CALL send_deferred($12, $10, $8, (*($12 + [36]) - $8), [1])
	$8 = *($12 + [32])
	if ( ($8 == 0) ){ goto $label$40 }
	*($12 + [36]) = $8
	CALL $240($8)
	
.LABEL $label$40
	CALL $100(($12 + [48]))
	*([0] + [4]) = ($12 + [208])
}

void .FUNC _ZN7campwar9stakebackEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [144])
	*([0] + [4]) = $13
	CALL require_auth(*($0))
	$12 = *(($0 + [432]))
	$6 = *(($0 + [436]))
	if ( ((int_32)$6 == (int_32)$12) ){ goto $label$1 }
	$7 = ($6 + [-24])
	$2 = ([0] - $12)
	
.LOOP $label$2:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$1 }
	$6 = $7
	$4 = ($7 + [-24])
	$7 = $4
	if ( ((int_32)($4 + $2) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$2 = ($0 + [408])
	if ( ((int_32)$6 == (int_32)$12) ){ goto $label$4 }
	$6 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [32]) == (int_32)$2), [592])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$7 = CALL db_find_i64(*(($0 + [408])), *(($0 + [416])), (int_64)-5001342326447013888, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $94($2, $7)
	CALL eosio_assert(((int_32)*($6 + [32]) == (int_32)$2), [592])
	
.LABEL $label$3
	$3 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($3, [5168])
	$7 = (*($6 + [8]) + [54000])
	if ( (*([0] + [1332]) == 0) ){ goto $label$6 }
	$4 = *([0] + [1336])
	goto $label$5 
	
.LABEL $label$6
	$1 = CALL current_time()
	*([0] + [1332]) = [1]
	$4 = (CASTING uint_32)(uint_64 ((uint_64)$1 / (uint_64)(int_64)1000000))
	*([0] + [1336]) = $4
	
.LABEL $label$5
	CALL eosio_assert(((uint_32)$7 <= (uint_32)$4), [5200])
	$11 = *($0)
	$1 = (int_64)0
	$8 = (int_64)59
	$7 = [1632]
	$9 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$12 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$4 = ($4 + [165])
	goto $label$10 
	
.LABEL $label$12
	$10 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$8
	$7 = ($7 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$7 }
	*($13 + [80]) = $9
	*($13 + [72]) = $11
	$1 = (int_64)0
	$10 = (int_64)59
	$7 = [144]
	$9 = (int_64)0
	
.LOOP $label$13:
	$8 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$14 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$16 }
	$4 = ($4 + [165])
	goto $label$15 
	
.LABEL $label$16
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$15
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$14
	$7 = ($7 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$9 = ((int_64)$8 | (int_64)$9)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$13 }
	$1 = (int_64)0
	$8 = (int_64)59
	$7 = [112]
	$11 = (int_64)0
	
.LOOP $label$17:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$22 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$4 = ($4 + [165])
	goto $label$20 
	
.LABEL $label$22
	$10 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$19
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$18
	$7 = ($7 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$17 }
	*(($13 + [16])) = [0]
	*($13 + [8]) = (int_64)0
	$7 = CALL strlen([5232])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$23 }
	$4 = ($6 + [16])
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$26 }
	*($13 + [8]) = ($7 << [1])
	$12 = (($13 + [8]) | [1])
	if ( $7 ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	$5 = (($7 + [16]) & [-16])
	$12 = CALL $238($5)
	*($13 + [8]) = ($5 | [1])
	*($13 + [16]) = $12
	*($13 + [12]) = $7
	
.LABEL $label$25
	CALL memcpy($12, [5232], $7)
	
.LABEL $label$24
	*(($12 + $7)) = [0]
	$1 = *($6)
	*(($13 + [48])) = *(($4 + [8]))
	*(($13 + [44])) = *(($4 + [4]))
	*(($13 + [52])) = *(($4 + [12]))
	*($13 + [24]) = *($0)
	*($13 + [32]) = $1
	*($13 + [40]) = *($4)
	*(($13 + [60])) = *($13 + [12 align=4])
	*($13 + [56]) = *($13 + [8])
	*($13 + [8]) = [0]
	*($13 + [12]) = [0]
	*((($13 + [8]) + [8])) = [0]
	$7 = CALL $86(($13 + [88]), ($13 + [72]), $9, $11, ($13 + [24]))
	CALL $87(($13 + [128]), $7)
	$4 = *($13 + [128])
	CALL send_inline($4, (*($13 + [132]) - $4))
	$4 = *($13 + [128])
	if ( ($4 == 0) ){ goto $label$27 }
	*($13 + [132]) = $4
	CALL $240($4)
	
.LABEL $label$27
	$4 = *($7 + [28])
	if ( ($4 == 0) ){ goto $label$28 }
	*(($7 + [32])) = $4
	CALL $240($4)
	
.LABEL $label$28
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$29 }
	*(($7 + [20])) = $4
	CALL $240($4)
	
.LABEL $label$29
	if ( ((*(($13 + [56])) & [1]) == 0) ){ goto $label$30 }
	CALL $240(*(($13 + [64])))
	
.LABEL $label$30
	if ( ((*($13 + [8]) & [1]) == 0) ){ goto $label$31 }
	CALL $240(*(($13 + [16])))
	
.LABEL $label$31
	CALL eosio_assert($3, [160])
	CALL eosio_assert($3, [208])
	$7 = CALL db_next_i64(*($6 + [36]), ($13 + [24]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$32 }
	CALL $94($2, $7)
	
.LABEL $label$32
	CALL $191($2, $6)
	*([0] + [4]) = ($13 + [144])
	return (unreachable)
	
.LABEL $label$23
	CALL $242(($13 + [8]))
}

void .FUNC _ZN7campwar9unlockgunEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [16])
	*([0] + [4]) = $13
	*($13) = $2
	$2 = (int_64)0
	$8 = (int_64)59
	$7 = [576]
	$9 = (int_64)0
	
.LOOP $label$1:
	$10 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($7)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$2
	$7 = ($7 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($9)
	$12 = *(($0 + [112]))
	$11 = *(($0 + [116]))
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$5 }
	$7 = ($11 + [-24])
	$5 = ([0] - $12)
	
.LOOP $label$6:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$5 }
	$11 = $7
	$3 = ($7 + [-24])
	$7 = $3
	if ( ((int_32)($3 + $5) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	$4 = ($0 + [88])
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$8 }
	$12 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [88]) == (int_32)$4), [592])
	goto $label$7 
	
.LABEL $label$8
	$12 = [0]
	$7 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)7396599438002618368, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$7 }
	$12 = CALL $57($4, $7)
	CALL eosio_assert(((int_32)*($12 + [88]) == (int_32)$4), [592])
	
.LABEL $label$7
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [656])
	CALL eosio_assert(((int_64)*($12 + [8]) != (int_64)1), [672])
	CALL eosio_assert(((int_64)*($12 + [40]) != (int_64)0), [704])
	CALL _ZN7campwar25validate_gun_is_availableEy($0, $1)
	$6 = *(($0 + [192]))
	$11 = *(($0 + [196]))
	if ( ((int_32)$11 == (int_32)$6) ){ goto $label$9 }
	$7 = ($11 + [-24])
	$5 = ([0] - $6)
	
.LOOP $label$10:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$9 }
	$11 = $7
	$3 = ($7 + [-24])
	$7 = $3
	if ( ((int_32)($3 + $5) != (int_32)[-24]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = ($0 + [168])
	if ( ((int_32)$11 == (int_32)$6) ){ goto $label$12 }
	$7 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [88]) == (int_32)$3), [592])
	goto $label$11 
	
.LABEL $label$12
	$7 = [0]
	$11 = CALL db_find_i64(*(($0 + [168])), *(($0 + [176])), (int_64)-4279098343512080384, $1)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$11 }
	$7 = CALL $59($3, $11)
	CALL eosio_assert(((int_32)*($7 + [88]) == (int_32)$3), [592])
	
.LABEL $label$11
	$11 = ((int_32)$7 != (int_32)[0])
	CALL eosio_assert($11, [736])
	$2 = *($0)
	*($13 + [8]) = $13
	CALL $60($4, $12, $2, ($13 + [8]))
	CALL eosio_assert($11, [160])
	CALL eosio_assert($11, [208])
	$11 = CALL db_next_i64(*($7 + [92]), ($13 + [8]))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$13 }
	CALL $59($3, $11)
	
.LABEL $label$13
	CALL $61($3, $7)
	*([0] + [4]) = ($13 + [16])
}

int_32 .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1397703940
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [512])
	$3 = (int_64)5459781
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [480])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [68]) = $0
	*($5 + [64]) = $0
	*($5 + [72]) = ($0 + $2)
	*($5 + [80]) = ($5 + [64])
	*($5 + [88]) = $5
	CALL $70(($5 + [88]), ($5 + [80]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $71(($5 + [64]), $5)
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $240(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [96])
	return [1]
}

void .FUNC _ZN7campwar8transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [96])
	*([0] + [4]) = $11
	$10 = *($0)
	if ( ((int_64)$10 == (int_64)$1) ){ goto $label$1 }
	if ( ((int_64)$10 != (int_64)$2) ){ goto $label$1 }
	CALL require_auth($1)
	$5 = *($0 + [768])
	$2 = (int_64)0
	$8 = (int_64)59
	$7 = [128]
	$9 = (int_64)0
	
.LOOP $label$2:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$7 }
	$6 = *($7)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$6 = ($6 + [165])
	goto $label$5 
	
.LABEL $label$7
	$10 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$4
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$3
	$7 = ($7 + [1])
	$8 = ((int_64)$8 + (int_64)-5)
	$9 = ((int_64)$10 | (int_64)$9)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$2 }
	if ( ((int_64)$5 != (int_64)$9) ){ goto $label$8 }
	if ( ((int_64)*($3 + [8]) != (int_64)1397703940) ){ goto $label$8 }
	*(($7 = (($11 + [80]) + [8]))) = *(($3 + [8]))
	*($11 + [80]) = *($3)
	CALL $246(($11 + [64]), $4)
	*(($11 + [8])) = *($7)
	*($11) = *($11 + [80])
	CALL _ZN7campwar12eos_transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $1, $2, $11, ($11 + [64]))
	if ( ((*($11 + [64]) & [1]) == 0) ){ goto $label$1 }
	CALL $240(*($11 + [72]))
	goto $label$1 
	
.LABEL $label$8
	$2 = (int_64)0
	$10 = (int_64)59
	$7 = [144]
	$9 = (int_64)0
	
.LOOP $label$9:
	$8 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$10 }
	$6 = *($7)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$6 = ($6 + [165])
	goto $label$11 
	
.LABEL $label$12
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$10
	$7 = ($7 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$9 = ((int_64)$8 | (int_64)$9)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$9 }
	if ( ((int_64)$5 != (int_64)$9) ){ goto $label$1 }
	if ( ((int_64)*($3 + [8]) != (int_64)1413893636) ){ goto $label$1 }
	*(($7 = (($11 + [48]) + [8]))) = *(($3 + [8]))
	*($11 + [48]) = *($3)
	CALL $246(($11 + [32]), $4)
	*((($11 + [16]) + [8])) = *($7)
	*($11 + [16]) = *($11 + [48])
	CALL _ZN7campwar14fight_transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $1, $2, ($11 + [16]), ($11 + [32]))
	if ( ((*($11 + [32]) & [1]) == 0) ){ goto $label$1 }
	CALL $240(*($11 + [40]))
	
.LABEL $label$1
	*([0] + [4]) = ($11 + [96])
}

int_32 .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$8 = (*([0] + [4]) - [96])
	$10 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$9 = *($1)
	$1 = [0]
	$6 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($8 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $3)
	
.LABEL $label$1
	*((($10 + [16]) + [24])) = (int_64)1397703940
	*($10 + [24]) = (int_64)0
	*($10 + [16]) = (int_64)0
	*($10 + [32]) = (int_64)0
	CALL eosio_assert([1], [512])
	$7 = (int_64)5459781
	
.LOOP $label$5:
	$8 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$8 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($8, [480])
	*($10 + [84]) = $6
	*($10 + [80]) = $6
	*($10 + [88]) = ($6 + $3)
	*($10 + [48]) = ($10 + [80])
	*($10 + [64]) = ($10 + [16])
	CALL $187(($10 + [64]), ($10 + [48]))
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($6)
	
.LABEL $label$8
	$7 = *((($10 + [16]) + [8]))
	*(($10 + [60])) = *(($10 + [44]))
	*(($1 = (($10 + [48]) + [8]))) = *(($10 + [40]))
	$4 = *($10 + [16])
	*($10 + [48]) = *($10 + [32])
	*($10 + [52]) = *(($10 + [36]))
	*((($10 + [64]) + [8])) = *($1)
	*($10 + [64]) = *($10 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$9 = *((*($1) + $9))
	
.LABEL $label$9
	$5 = *((($10 + [64]) + [8]))
	*((($10 + [80]) + [8])) = $5
	*(($10 + [8])) = $5
	$5 = *($10 + [64])
	*($10 + [80]) = $5
	*($10) = $5
	CALL void $1((int_32 $4), (int_64 $7), (int_64 $10), (int_32 $9))
	*([0] + [4]) = ($10 + [96])
	return [1]
}

int_32 .FUNC _ZN7campwarC2Ey (int_32 $0, int_64 $1)
{
	*($0 + [8]) = $1
	*($0) = $1
	*(($0 + [16])) = $1
	*(($0 + [24])) = (int_64)-1
	*(($0 + [32])) = (int_64)0
	*(($0 + [40])) = [0]
	*($0 + [48]) = $1
	*(($0 + [56])) = $1
	*(($0 + [64])) = (int_64)-1
	*(($0 + [72])) = [0]
	*(($0 + [76])) = [0]
	*(($0 + [80])) = [0]
	*($0 + [88]) = $1
	*(($0 + [96])) = $1
	*(($0 + [104])) = (int_64)-1
	*(($0 + [112])) = [0]
	*(($0 + [116])) = [0]
	*(($0 + [120])) = [0]
	*($0 + [128]) = $1
	*(($0 + [136])) = $1
	*(($0 + [144])) = (int_64)-1
	*(($0 + [152])) = [0]
	*(($0 + [156])) = [0]
	*(($0 + [160])) = [0]
	*($0 + [168]) = $1
	*(($0 + [176])) = $1
	*(($0 + [184])) = (int_64)-1
	*(($0 + [192])) = [0]
	*(($0 + [196])) = [0]
	*(($0 + [200])) = [0]
	*($0 + [208]) = $1
	*(($0 + [216])) = $1
	*(($0 + [224])) = (int_64)-1
	*(($0 + [232])) = [0]
	*(($0 + [236])) = [0]
	*(($0 + [240])) = [0]
	*($0 + [248]) = $1
	*(($0 + [256])) = $1
	*(($0 + [264])) = (int_64)-1
	*(($0 + [272])) = [0]
	*(($0 + [276])) = [0]
	*(($0 + [280])) = [0]
	*($0 + [288]) = $1
	*(($0 + [296])) = $1
	*(($0 + [304])) = (int_64)-1
	*(($0 + [312])) = [0]
	*(($0 + [316])) = [0]
	*(($0 + [320])) = [0]
	*($0 + [328]) = $1
	*(($0 + [336])) = $1
	*(($0 + [344])) = (int_64)-1
	*(($0 + [352])) = [0]
	*(($0 + [356])) = [0]
	*(($0 + [360])) = [0]
	$1 = *($0)
	*($0 + [368]) = $1
	*(($0 + [376])) = $1
	*(($0 + [384])) = (int_64)-1
	*(($0 + [392])) = [0]
	*(($0 + [396])) = [0]
	*(($0 + [400])) = [0]
	*($0 + [408]) = $1
	*(($0 + [416])) = $1
	*(($0 + [424])) = (int_64)-1
	*(($0 + [432])) = [0]
	*(($0 + [436])) = [0]
	*(($0 + [440])) = [0]
	*($0 + [448]) = $1
	*(($0 + [456])) = $1
	*(($0 + [464])) = (int_64)-1
	*(($0 + [472])) = [0]
	*(($0 + [476])) = [0]
	*(($0 + [480])) = [0]
	*($0 + [488]) = $1
	*(($0 + [496])) = $1
	*(($0 + [504])) = (int_64)-1
	*(($0 + [512])) = [0]
	*(($0 + [516])) = [0]
	*(($0 + [520])) = [0]
	*($0 + [528]) = $1
	*(($0 + [536])) = $1
	*(($0 + [544])) = (int_64)-1
	*(($0 + [552])) = [0]
	*(($0 + [556])) = [0]
	*(($0 + [560])) = [0]
	*($0 + [568]) = $1
	*(($0 + [576])) = $1
	*(($0 + [584])) = (int_64)-1
	*(($0 + [592])) = [0]
	*(($0 + [596])) = [0]
	*(($0 + [600])) = [0]
	*($0 + [608]) = $1
	*(($0 + [616])) = $1
	*(($0 + [624])) = (int_64)-1
	*(($0 + [632])) = [0]
	*(($0 + [636])) = [0]
	*(($0 + [640])) = [0]
	*($0 + [648]) = $1
	*(($0 + [656])) = $1
	*(($0 + [664])) = (int_64)-1
	*(($0 + [672])) = [0]
	*(($0 + [676])) = [0]
	*(($0 + [680])) = [0]
	*($0 + [688]) = $1
	*(($0 + [696])) = $1
	*(($0 + [704])) = (int_64)-1
	*(($0 + [712])) = [0]
	*(($0 + [716])) = [0]
	*(($0 + [720])) = [0]
	$1 = *($0)
	*($0 + [728]) = $1
	*(($0 + [736])) = $1
	*(($0 + [744])) = (int_64)-1
	*(($0 + [752])) = [0]
	*(($0 + [756])) = [0]
	*(($0 + [760])) = [0]
	return $0
}

int_32 .FUNC $234 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($1 - $0)
	if ( ((uint_32)$4 > (uint_32)[5]) ){ goto $label$19 }
	$8 = [1]
	goto $label$1 
	
.LABEL $label$20
	$3 = *($0)
	$4 = ($1 + [-1])
	$2 = *($4)
	if ( ((int_32)$2 >= (int_32)$3) ){ goto $label$1 }
	*($0) = $2
	*($4) = $3
	goto $label$1 
	
.LABEL $label$19
	$8 = *($0 + [2])
	$2 = *($0)
	$4 = *($0 + [1])
	if ( ((int_32)$4 >= (int_32)$2) ){ goto $label$15 }
	if ( ((int_32)$8 >= (int_32)$4) ){ goto $label$12 }
	*($0) = $8
	*(($0 + [2])) = $2
	goto $label$11 
	
.LABEL $label$18
	$3 = ($1 + [-1])
	$4 = *($3)
	$6 = *($0)
	$2 = *($0 + [1])
	if ( ((int_32)$2 >= (int_32)$6) ){ goto $label$14 }
	if ( ((int_32)$4 >= (int_32)$2) ){ goto $label$4 }
	*($0) = $4
	*($3) = $6
	goto $label$1 
	
.LABEL $label$17
	$8 = [1]
	CALL $233($0, ($0 + [1]), ($0 + [2]), ($0 + [3]), ($1 + [-1]), $2)
	goto $label$1 
	
.LABEL $label$16
	$6 = ($1 + [-1])
	$2 = *($0 + [2])
	$3 = *($0)
	$4 = *($0 + [1])
	if ( ((int_32)$4 >= (int_32)$3) ){ goto $label$13 }
	if ( ((int_32)$2 >= (int_32)$4) ){ goto $label$8 }
	*($0) = $2
	*(($0 + [2])) = $3
	goto $label$7 
	
.LABEL $label$15
	if ( ((int_32)$8 >= (int_32)$4) ){ goto $label$10 }
	*(($0 + [2])) = $4
	*(($3 = ($0 + [1]))) = $8
	if ( ((int_32)$8 >= (int_32)$2) ){ goto $label$9 }
	*($0) = $8
	*($3) = $2
	goto $label$9 
	
.LABEL $label$14
	if ( ((int_32)$4 >= (int_32)$2) ){ goto $label$1 }
	$8 = [1]
	*(($6 = ($0 + [1]))) = $4
	*($3) = $2
	$2 = *($0)
	$4 = *($6)
	if ( ((int_32)$4 >= (int_32)$2) ){ goto $label$1 }
	*($0) = $4
	$8 = [1]
	*(($0 + [1])) = $2
	goto $label$1 
	
.LABEL $label$13
	if ( ((int_32)$2 >= (int_32)$4) ){ goto $label$6 }
	*(($0 + [2])) = $4
	*(($5 = ($0 + [1]))) = $2
	if ( ((int_32)$2 >= (int_32)$3) ){ goto $label$5 }
	*($0) = $2
	*($5) = $3
	goto $label$5 
	
.LABEL $label$12
	*($0) = $4
	*(($4 = ($0 + [1]))) = $2
	if ( ((int_32)$8 >= (int_32)$2) ){ goto $label$10 }
	*(($0 + [2])) = $2
	*($4) = $8
	
.LABEL $label$11
	$4 = $2
	goto $label$9 
	
.LABEL $label$10
	$4 = $8
	
.LABEL $label$9
	$6 = ($0 + [3])
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$3 }
	$5 = [0]
	$7 = [0]
	
.LOOP $label$22:
	$3 = *($6)
	if ( ((int_32)$3 >= (int_32)int_32(($4 << [24]) >> [24])) ){ goto $label$23 }
	$8 = $5
	
.LOOP $label$27:
	*((($2 = ($0 + $8)) + [3])) = $4
	if ( ((int_32)$8 == (int_32)[-2]) ){ goto $label$26 }
	$8 = ($8 + [-1])
	$4 = *(($2 + [1]))
	if ( ((int_32)$3 < (int_32)$4) ){ goto $label$27 }
	goto $label$25 
	
.LABEL $label$26
	$8 = $0
	goto $label$24 
	
.LABEL $label$25
	$8 = (($0 + $8) + [3])
	
.LABEL $label$24
	*($8) = $3
	$7 = ($7 + [1])
	if ( ((int_32)$7 == (int_32)[8]) ){ goto $label$21 }
	
.LABEL $label$23
	$4 = [1]
	$8 = ($6 + [1])
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [1])
	$4 = *($6)
	$6 = $8
	goto $label$22 
	
.LABEL $label$21
	$8 = (((int_32)($6 + [1]) == (int_32)$1) | [0])
	goto $label$1 
	
.LABEL $label$8
	*($0) = $4
	*(($4 = ($0 + [1]))) = $3
	if ( ((int_32)$2 >= (int_32)$3) ){ goto $label$6 }
	*(($0 + [2])) = $3
	*($4) = $2
	
.LABEL $label$7
	$4 = $3
	goto $label$5 
	
.LABEL $label$6
	$4 = $2
	
.LABEL $label$5
	$2 = *($6)
	if ( ((int_32)$2 >= (int_32)$4) ){ goto $label$1 }
	*(($3 = ($0 + [2]))) = $2
	*($6) = $4
	$8 = [1]
	$2 = *(($0 + [1]))
	$4 = *($3)
	if ( ((int_32)$4 >= (int_32)$2) ){ goto $label$1 }
	*($3) = $2
	$8 = [1]
	*(($0 + [1])) = $4
	$2 = *($0)
	if ( ((int_32)$4 >= (int_32)$2) ){ goto $label$1 }
	*($0) = $4
	$8 = [1]
	*(($0 + [1])) = $2
	goto $label$1 
	
.LABEL $label$4
	*($0) = $2
	$8 = [1]
	*(($0 + [1])) = $6
	$4 = *($3)
	if ( ((int_32)$4 >= (int_32)$6) ){ goto $label$1 }
	$8 = [1]
	*(($0 + [1])) = $4
	*($3) = $6
	goto $label$1 
	
.LABEL $label$3
	$4 = [1]
	
.LABEL $label$2
	$8 = ($2 | $4)
	
.LABEL $label$1
	$4
	return ($8 & [1])
}

int_32 .FUNC $233 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = *($2)
	$6 = *($0)
	$8 = *($1)
	if ( ((int_32)$8 >= (int_32)$6) ){ goto $label$5 }
	if ( ((int_32)$7 >= (int_32)$8) ){ goto $label$4 }
	*($0) = $7
	*($2) = $6
	$9 = [1]
	goto $label$3 
	
.LABEL $label$5
	$9 = [0]
	if ( ((int_32)$7 >= (int_32)$8) ){ goto $label$2 }
	*($1) = $7
	*($2) = $8
	$9 = [1]
	$6 = *($0)
	$7 = *($1)
	if ( ((int_32)$7 >= (int_32)$6) ){ goto $label$1 }
	*($0) = $7
	*($1) = $6
	$8 = *($2)
	$9 = [2]
	goto $label$1 
	
.LABEL $label$4
	*($0) = $8
	*($1) = $6
	$9 = [1]
	$8 = *($2)
	if ( ((int_32)$8 >= (int_32)$6) ){ goto $label$1 }
	*($1) = $8
	*($2) = $6
	$9 = [2]
	
.LABEL $label$3
	$8 = $6
	goto $label$1 
	
.LABEL $label$2
	$8 = $7
	
.LABEL $label$1
	$7 = *($3)
	if ( ((int_32)$7 >= (int_32)int_32(($8 << [24]) >> [24])) ){ goto $label$6 }
	*($2) = $7
	*($3) = $8
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 >= (int_32)$7) ){ goto $label$8 }
	*($1) = $8
	*($2) = $7
	$7 = *($0)
	$8 = *($1)
	if ( ((int_32)$8 >= (int_32)$7) ){ goto $label$7 }
	*($0) = $8
	*($1) = $7
	$9 = ($9 + [3])
	goto $label$6 
	
.LABEL $label$8
	$9 = ($9 + [1])
	goto $label$6 
	
.LABEL $label$7
	$9 = ($9 + [2])
	
.LABEL $label$6
	$7 = *($3)
	$8 = *($4)
	if ( ((int_32)$8 >= (int_32)$7) ){ goto $label$12 }
	*($3) = $8
	*($4) = $7
	$7 = *($2)
	$8 = *($3)
	if ( ((int_32)$8 >= (int_32)$7) ){ goto $label$11 }
	*($2) = $8
	*($3) = $7
	$3 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 >= (int_32)$3) ){ goto $label$10 }
	*($1) = $8
	*($2) = $3
	$8 = *($0)
	$2 = *($1)
	if ( ((int_32)$2 >= (int_32)$8) ){ goto $label$9 }
	*($0) = $2
	*($1) = $8
	$9 = ($9 + [4])
	
.LABEL $label$12
	return $9
	
.LABEL $label$11
	return ($9 + [1])
	
.LABEL $label$10
	return ($9 + [2])
	
.LABEL $label$9
	return ($9 + [3])
}

int_64 .FUNC sqrt (float_64 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$1 = (CASTING int_64)(float_64 $0)
	$7 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ((int_32)($7) & [2146435072]) != (int_32)[2146435072]) ){ goto $label$1 }
	return ((float_64)((float_64)$0 * (float_64)$0) + (float_64)$0)
	
.LABEL $label$1
	$2 = (CASTING uint_32)(uint_64 $1)
	if ( ((int_32)$7 <= (int_32)[0]) ){ goto $label$6 }
	$8 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)52)
	if ( $8) ){ goto $label$4 }
	$8 = [1]
	$9 = $2
	goto $label$5 
	
.LABEL $label$6
	if ( ((($7 & [2147483647]) | $2) == 0) ){ goto $label$3 }
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$8 = [1]
	
.LOOP $label$7:
	$8 = ($8 + [-21])
	$7 = uint_32($2 >> [11])
	$9 = ($2 << [21])
	$2 = $9
	if ( ($7 == 0) ){ goto $label$7 }
	
.LABEL $label$5
	$5 = [0]
	if ( ($7 & [1048576]) ){ goto $label$8 }
	$5 = [0]
	
.LOOP $label$9:
	$5 = ($5 + [1])
	$7 = ($7 << [1])
	if ( (($7 & [1048576]) == 0) ){ goto $label$9 }
	
.LABEL $label$8
	$2 = ($9 << $5)
	$8 = ($8 - $5)
	$7 = (uint_32($9 >> ([32] - $5)) | $7)
	
.LABEL $label$4
	$7 = (($7 & [1048575]) | [1048576])
	$10 = ($8 + [-1023])
	if ( (($10 & [1]) == 0) ){ goto $label$10 }
	$7 = (($7 << [1]) | uint_32($2 >> [31]))
	$2 = ($2 << [1])
	
.LABEL $label$10
	$7 = (uint_32($2 >> [31]) | ($7 << [1]))
	$5 = ($2 << [1])
	$4 = [0]
	$9 = [2097152]
	$8 = [0]
	
.LOOP $label$11:
	$6 = $5
	$5 = ($9 + $8)
	if ( ((int_32)$7 < (int_32)$5) ){ goto $label$12 }
	$4 = ($9 + $4)
	$7 = ($7 - $5)
	$8 = ($5 + $9)
	
.LABEL $label$12
	$7 = (($7 << [1]) | (uint_32($2 >> [30]) & [1]))
	$5 = ($6 << [1])
	$2 = $6
	$9 = uint_32($9 >> [1])
	if ( $9 ){ goto $label$11 }
	$3 = uint_32($10 >> [1])
	$9 = [-2147483648]
	$10 = [0]
	$2 = [0]
	
.LOOP $label$13:
	$6 = ($2 + $9)
	if ( ((int_32)$7 > (int_32)$8) ){ goto $label$15 }
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$14 }
	if ( ($5 <= $6) ){ goto $label$14 }
	
.LABEL $label$15
	$7 = (($7 - $8) + ( [-1] ? [0] : ($5 <= $6) ))
	$2 = ($6 + $9)
	$8 = ((((int_32)$6 < (int_32)[0]) & ((int_32)$2 > (int_32)[-1])) + $8)
	$10 = ($10 + $9)
	$5 = ($5 - $6)
	
.LABEL $label$14
	$7 = (uint_32($5 >> [31]) | ($7 << [1]))
	$5 = ($5 << [1])
	$9 = uint_32($9 >> [1])
	if ( $9 ){ goto $label$13 }
	if ( (($5 | $7) == 0) ){ goto $label$16 }
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$17 }
	$10 = (($10 & [1]) + $10)
	goto $label$16 
	
.LABEL $label$17
	$4 = ($4 + [1])
	$10 = [0]
	
.LABEL $label$16
	$0 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 ((($3 << [20]) + int_32($4 >> [1])) + [1071644672])) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 (uint_32($10 >> [1]) | ($4 << [31])))))
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$0 = (float_64)
	return ((float_64)$0($0 - $0)) / (float_64)$0)
}

int_32 .FUNC _ZN7campwar21parse_memo_unlock_gunERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERy (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($3 & [1])
	$3 = *($1)
	if ( (( *($1 + [4]) ? uint_32($3 >> [1]) : $3 ) == 0) ){ goto $label$1 }
	$4 = CALL strtoll(( *($1 + [8]) ? ($1 + [1]) : $3 ), [0], [10])
	*($2) = $4
	return ((int_64)$4 != (int_64)0)
	
.LABEL $label$1
	return [0]
}

void .FUNC $167 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $238(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $244($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $240($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $240($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $166 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [416])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $238([56])
	$4 = CALL $141($6)
	*($6 + [40]) = $0
	CALL $142(($8 + [32]), $4)
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [44])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $167(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $240($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $165 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $238(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $244($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $240($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $240($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $164 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [416])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $238([56])
	$4 = CALL $141($6)
	*($6 + [40]) = $0
	CALL $142(($8 + [32]), $4)
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [44])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $165(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $240($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $163 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $238(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $244($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $240($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $240($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $162 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [416])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $238([56])
	$4 = CALL $141($6)
	*($6 + [40]) = $0
	CALL $142(($8 + [32]), $4)
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [44])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $163(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $240($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC _ZN7campwar12camp_downingEN5eosio4nameEy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_32 $17
	$17 = (*([0] + [4]) - [416])
	*([0] + [4]) = $17
	$3 = ($0 + [208])
	$4 = [0]
	$10 = CALL db_lowerbound_i64(*($0 + [208]), *(($0 + [216])), (int_64)4406679876405297152, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $139($3, $10)
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [4160])
	$6 = *(($0 + [32]))
	$11 = *(($0 + [36]))
	if ( ((int_32)$11 == (int_32)$6) ){ goto $label$2 }
	$10 = ($11 + [-24])
	$5 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($10)) == (int_64)$2) ){ goto $label$2 }
	$11 = $10
	$12 = ($10 + [-24])
	$10 = $12
	if ( ((int_32)($12 + $5) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	$5 = ($0 + [8])
	if ( ((int_32)$11 == (int_32)$6) ){ goto $label$5 }
	$11 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [144]) == (int_32)$5), [592])
	$6 = ($0 + [16])
	goto $label$4 
	
.LABEL $label$5
	$11 = [0]
	$6 = ($0 + [16])
	$10 = CALL db_find_i64(*(($0 + [8])), *($6), (int_64)4730274944552796160, $2)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$4 }
	$11 = CALL $66($5, $10)
	CALL eosio_assert(((int_32)*($11 + [144]) == (int_32)$5), [592])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [4192])
	$10 = CALL db_lowerbound_i64(*($5), *($6), (int_64)4730274944552796160, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$18 }
	$12 = CALL $66($5, $10)
	$2 = *($12 + [8])
	CALL eosio_assert([1], [208])
	$10 = (int_64)($2 == 0)
	$12 = CALL db_next_i64(*($12 + [148]), ($17 + [256]))
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$19 }
	
.LOOP $label$20:
	$12 = CALL $66($5, $12)
	$2 = *($12 + [8])
	CALL eosio_assert([1], [208])
	$10 = ((int_64)($2 == 0) + $10)
	$12 = CALL db_next_i64(*($12 + [148]), ($17 + [256]))
	if ( ((int_32)$12 >= (int_32)[0]) ){ goto $label$20 }
	
.LABEL $label$19
	if ( ((int_32)$10 == (int_32)[1]) ){ goto $label$17 }
	if ( ((int_32)$10 != (int_32)[2]) ){ goto $label$18 }
	$15 = *($0)
	CALL eosio_assert(((int_32)*($11 + [144]) == (int_32)$5), [768])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$4()), [816])
	*($11 + [16]) = (int_64)2
	$2 = *($11)
	CALL eosio_assert([1], [992])
	$7 = (($17 + [256]) + [136])
	*($17 + [224]) = $7
	*($17 + [220]) = ($17 + [256])
	*($17 + [216]) = ($17 + [256])
	CALL $80(($17 + [216]), $11)
	CALL db_update_i64(*($11 + [148]), $15, ($17 + [256]), [136])
	$10 = ($0 + [24])
	if ( (uint_64)($2 <= *($10)) ){ goto $label$21 }
	*($10) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$21
	$16 = *($0)
	$2 = (int_64)0
	$13 = (int_64)59
	$10 = [1632]
	$14 = (int_64)0
	
.LOOP $label$22:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$27 }
	$12 = *($10)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$12 = ($12 + [165])
	goto $label$25 
	
.LABEL $label$27
	$15 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$26
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$24
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$23
	$10 = ($10 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$22 }
	*($17 + [208]) = $14
	*($17 + [200]) = $16
	$2 = (int_64)0
	$13 = (int_64)59
	$10 = [128]
	$14 = (int_64)0
	
.LOOP $label$28:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$33 }
	$12 = *($10)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$12 = ($12 + [165])
	goto $label$31 
	
.LABEL $label$33
	$15 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$32
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$30
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$29
	$10 = ($10 + [1])
	$13 = ((int_64)$13 + (int_64)-5)
	$14 = ((int_64)$15 | (int_64)$14)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$28 }
	$2 = (int_64)0
	$13 = (int_64)59
	$10 = [112]
	$16 = (int_64)0
	
.LOOP $label$34:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$39 }
	$12 = *($10)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$38 }
	$12 = ($12 + [165])
	goto $label$37 
	
.LABEL $label$39
	$15 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$38
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$37
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$36
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$35
	$10 = ($10 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$16 = ((int_64)$15 | (int_64)$16)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$34 }
	$10 = CALL $139($3, CALL $fimport$9(*(($0 + [208])), *(($0 + [216])), (int_64)4406679876405297152, (int_64)0))
	$2 = *($10 + [24])
	CALL __multi3(($17 + [168]), $2, (int_64)$2 >> (int_64)63), (int_64)3, (int_64)0)
	$13 = *(($10 + [32]))
	$2 = *((($17 + [168]) + [8]))
	$15 = *($17 + [168])
	CALL eosio_assert(( (uint_64)($15 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$15 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*((($17 + [184]) + [8])) = [0]
	*($17 + [184]) = (int_64)0
	$2 = ((int_64)$15 / (int_64)100)
	$10 = CALL strlen([4208])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$16 }
	*($17 + [184]) = ($10 << [1])
	$12 = (($17 + [184]) | [1])
	if ( $10 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$18
	CALL eosio_assert([0], [4352])
	goto $label$6 
	
.LABEL $label$17
	$15 = *($0)
	CALL eosio_assert(((int_32)*($11 + [144]) == (int_32)$5), [768])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$4()), [816])
	*($11 + [16]) = (int_64)3
	$2 = *($11)
	CALL eosio_assert([1], [992])
	*($17 + [224]) = (($17 + [256]) + [136])
	*($17 + [220]) = ($17 + [256])
	*($17 + [216]) = ($17 + [256])
	CALL $80(($17 + [216]), $11)
	CALL db_update_i64(*($11 + [148]), $15, ($17 + [256]), [136])
	$10 = ($0 + [24])
	if ( (uint_64)($2 <= *($10)) ){ goto $label$40 }
	*($10) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$40
	if ( (int_64)($1 == 0) ){ goto $label$6 }
	$16 = *($0)
	$2 = (int_64)0
	$13 = (int_64)59
	$10 = [1632]
	$14 = (int_64)0
	
.LOOP $label$41:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$46 }
	$12 = *($10)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$45 }
	$12 = ($12 + [165])
	goto $label$44 
	
.LABEL $label$46
	$15 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$45
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$44
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$43
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$42
	$10 = ($10 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$41 }
	*($17 + [208]) = $14
	*($17 + [200]) = $16
	$2 = (int_64)0
	$13 = (int_64)59
	$10 = [128]
	$14 = (int_64)0
	
.LOOP $label$47:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$52 }
	$12 = *($10)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$51 }
	$12 = ($12 + [165])
	goto $label$50 
	
.LABEL $label$52
	$15 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$51
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$50
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$49
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$48
	$10 = ($10 + [1])
	$13 = ((int_64)$13 + (int_64)-5)
	$14 = ((int_64)$15 | (int_64)$14)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$47 }
	$2 = (int_64)0
	$13 = (int_64)59
	$10 = [112]
	$16 = (int_64)0
	
.LOOP $label$53:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$58 }
	$12 = *($10)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$57 }
	$12 = ($12 + [165])
	goto $label$56 
	
.LABEL $label$58
	$15 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$57
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$56
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$55
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$54
	$10 = ($10 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$16 = ((int_64)$15 | (int_64)$16)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$53 }
	$10 = CALL $139($3, CALL $fimport$9(*(($0 + [208])), *(($0 + [216])), (int_64)4406679876405297152, (int_64)0))
	$13 = *(($10 + [32]))
	$2 = ((int_64)((int_64)$2 >> (int_64)63) << (int_64)1) | (int_64)(uint_64)$2 >> (uint_64)(int_64)63
	$2 = *($10 + [24])
	$15 = ((int_64)$2 << (int_64)1)
	CALL eosio_assert(( (uint_64)($15 <= (int_64)4611686018427387904) ? ((int_64)$2)) < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$15 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*(($17 + [192])) = [0]
	*($17 + [184]) = (int_64)0
	$2 = ((int_64)$15 / (int_64)100)
	$10 = CALL strlen([4208])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$8 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$13 }
	*($17 + [184]) = ($10 << [1])
	$12 = (($17 + [184]) | [1])
	if ( $10 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$16
	$11 = (($10 + [16]) & [-16])
	$12 = CALL $238($11)
	*($17 + [184]) = ($11 | [1])
	*($17 + [192]) = $12
	*($17 + [188]) = $10
	
.LABEL $label$15
	CALL memcpy($12, [4208], $10)
	
.LABEL $label$14
	*(($12 + $10)) = [0]
	*(($17 + [280])) = $13
	*(($17 + [292])) = *($17 + [188])
	*($17 + [264]) = $1
	$10 = ($17 + [192])
	*(($17 + [296])) = *($10)
	*($17 + [256]) = *($0)
	*($17 + [272]) = $2
	*($17 + [288]) = *($17 + [184])
	*($17 + [184]) = [0]
	*($17 + [188]) = [0]
	*($10) = [0]
	$10 = CALL $149(($17 + [216]), ($17 + [200]), $14, $16, ($17 + [256]))
	CALL $87(($17 + [400]), $10)
	$12 = *($17 + [400])
	CALL send_inline($12, (*($17 + [404]) - $12))
	$12 = *($17 + [400])
	if ( ($12 == 0) ){ goto $label$59 }
	*($17 + [404]) = $12
	CALL $240($12)
	
.LABEL $label$59
	$12 = *($10 + [28])
	if ( ($12 == 0) ){ goto $label$60 }
	*(($10 + [32])) = $12
	CALL $240($12)
	
.LABEL $label$60
	$12 = *($10 + [16])
	if ( ($12 == 0) ){ goto $label$61 }
	*(($10 + [20])) = $12
	CALL $240($12)
	
.LABEL $label$61
	if ( ((*(($17 + [288])) & [1]) == 0) ){ goto $label$62 }
	CALL $240(*(($17 + [296])))
	
.LABEL $label$62
	if ( ((*($17 + [184]) & [1]) == 0) ){ goto $label$63 }
	CALL $240(*(($17 + [192])))
	
.LABEL $label$63
	$12 = ($0 + [368])
	$10 = [0]
	$11 = ($0 + [376])
	$3 = CALL db_lowerbound_i64(*($0 + [368]), *($11), (int_64)-4426675985900982272, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$64 }
	$10 = CALL $162($12, $3)
	
.LABEL $label$64
	CALL eosio_assert(($10 == 0), [4240])
	$15 = *($0)
	CALL eosio_assert(((int_64)*($12) == (int_64)CALL $fimport$4()), [1888])
	$10 = CALL $238([56])
	$3 = CALL $141($10)
	*($10 + [40]) = $12
	*($10) = *($0)
	$12 = ($4 + [32])
	$13 = *($12)
	$2 = *($4 + [24])
	CALL eosio_assert(((int_64)$2 < (int_64)4611686018427387904), [1968])
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*($10 + [16]) = $13
	*($10 + [8]) = ((int_64)$2 / (int_64)10)
	$13 = *($12)
	$2 = *($4 + [24])
	CALL eosio_assert(((int_64)$2 < (int_64)4611686018427387904), [1968])
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*($10 + [32]) = $13
	*($10 + [24]) = ((int_64)$2 / (int_64)10)
	$12 = (($17 + [256]) + [40])
	*($17 + [224]) = $12
	*($17 + [220]) = ($17 + [256])
	*($17 + [216]) = ($17 + [256])
	CALL $140(($17 + [216]), $3)
	$2 = *($10)
	$3 = CALL db_store_i64(*($11), (int_64)-4426675985900982272, $15, $2, ($17 + [256]), [40])
	*($10 + [44]) = $3
	$11 = ($0 + [384])
	if ( (uint_64)($2 <= *($11)) ){ goto $label$65 }
	*($11) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$65
	*($17 + [216]) = $10
	$2 = *($10)
	*($17 + [256]) = $2
	*($17 + [200]) = $3
	$8 = ($0 + [396])
	$11 = *($8)
	if ( ((uint_32)$11 >= (uint_32)*(($0 + [400]))) ){ goto $label$67 }
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	*($17 + [216]) = [0]
	*($11) = $10
	*($8) = ($11 + [24])
	goto $label$66 
	
.LABEL $label$67
	CALL $163(($0 + [392]), ($17 + [216]), ($17 + [256]), ($17 + [200]))
	
.LABEL $label$66
	$10 = *($17 + [216])
	$3 = [0]
	*($17 + [216]) = [0]
	if ( ($10 == 0) ){ goto $label$68 }
	CALL $240($10)
	
.LABEL $label$68
	$11 = ($0 + [648])
	$8 = ($0 + [656])
	$10 = CALL db_lowerbound_i64(*($0 + [648]), *($8), (int_64)-4264226321172877312, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$69 }
	$3 = CALL $164($11, $10)
	
.LABEL $label$69
	CALL eosio_assert(($3 == 0), [4240])
	$13 = *($0)
	CALL eosio_assert(((int_64)*($11) == (int_64)CALL $fimport$4()), [1888])
	$10 = CALL $238([56])
	$3 = CALL $141($10)
	*($10 + [40]) = $11
	*($10) = *($0)
	$11 = ($4 + [24])
	$2 = *($11)
	CALL __multi3(($17 + [152]), $2, (int_64)$2 >> (int_64)63), (int_64)12, (int_64)0)
	$9 = ($4 + [32])
	$14 = *($9)
	$2 = *((($17 + [152]) + [8]))
	$15 = *($17 + [152])
	CALL eosio_assert(( (uint_64)($15 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$15 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*($10 + [16]) = $14
	*($10 + [8]) = ((int_64)$15 / (int_64)100)
	$2 = *($11)
	CALL __multi3(($17 + [136]), $2, (int_64)$2 >> (int_64)63), (int_64)12, (int_64)0)
	$14 = *($9)
	$2 = *((($17 + [136]) + [8]))
	$15 = *($17 + [136])
	CALL eosio_assert(( (uint_64)($15 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$15 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*($10 + [32]) = $14
	*($10 + [24]) = ((int_64)$15 / (int_64)100)
	*($17 + [224]) = $12
	*($17 + [220]) = ($17 + [256])
	*($17 + [216]) = ($17 + [256])
	CALL $140(($17 + [216]), $3)
	$2 = *($10)
	$3 = CALL db_store_i64(*($8), (int_64)-4264226321172877312, $13, $2, ($17 + [256]), [40])
	*($10 + [44]) = $3
	$11 = ($0 + [664])
	if ( (uint_64)($2 <= *($11)) ){ goto $label$70 }
	*($11) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$70
	*($17 + [216]) = $10
	$2 = *($10)
	*($17 + [256]) = $2
	*($17 + [200]) = $3
	$8 = ($0 + [676])
	$11 = *($8)
	if ( ((uint_32)$11 >= (uint_32)*(($0 + [680]))) ){ goto $label$72 }
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	*($17 + [216]) = [0]
	*($11) = $10
	*($8) = ($11 + [24])
	goto $label$71 
	
.LABEL $label$72
	CALL $165(($0 + [672]), ($17 + [216]), ($17 + [256]), ($17 + [200]))
	
.LABEL $label$71
	$10 = *($17 + [216])
	$3 = [0]
	*($17 + [216]) = [0]
	if ( ($10 == 0) ){ goto $label$73 }
	CALL $240($10)
	
.LABEL $label$73
	$11 = ($0 + [728])
	$8 = ($0 + [736])
	$10 = CALL db_lowerbound_i64(*($0 + [728]), *($8), (int_64)-4264111588855450240, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$74 }
	$3 = CALL $166($11, $10)
	
.LABEL $label$74
	CALL eosio_assert(($3 == 0), [4240])
	$13 = *($0)
	CALL eosio_assert(((int_64)*($11) == (int_64)CALL $fimport$4()), [1888])
	$10 = CALL $238([56])
	$3 = CALL $141($10)
	*($10 + [40]) = $11
	*($10) = *($0)
	$11 = ($4 + [24])
	$2 = *($11)
	CALL __multi3(($17 + [120]), $2, (int_64)$2 >> (int_64)63), (int_64)3, (int_64)0)
	$9 = ($4 + [32])
	$14 = *($9)
	$2 = *((($17 + [120]) + [8]))
	$15 = *($17 + [120])
	CALL eosio_assert(( (uint_64)($15 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$15 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*($10 + [16]) = $14
	*($10 + [8]) = ((int_64)$15 / (int_64)100)
	$2 = *($11)
	CALL __multi3(($17 + [104]), $2, (int_64)$2 >> (int_64)63), (int_64)3, (int_64)0)
	$14 = *($9)
	$2 = *((($17 + [104]) + [8]))
	$15 = *($17 + [104])
	CALL eosio_assert(( (uint_64)($15 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$15 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*($10 + [32]) = $14
	*($10 + [24]) = ((int_64)$15 / (int_64)100)
	*($17 + [224]) = $12
	*($17 + [220]) = ($17 + [256])
	*($17 + [216]) = ($17 + [256])
	CALL $140(($17 + [216]), $3)
	$2 = *($10)
	$3 = CALL db_store_i64(*($8), (int_64)-4264111588855450240, $13, $2, ($17 + [256]), [40])
	*($10 + [44]) = $3
	$11 = ($0 + [744])
	if ( (uint_64)($2 <= *($11)) ){ goto $label$75 }
	*($11) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$75
	*($17 + [216]) = $10
	$2 = *($10)
	*($17 + [256]) = $2
	*($17 + [200]) = $3
	$8 = ($0 + [756])
	$11 = *($8)
	if ( ((uint_32)$11 >= (uint_32)*(($0 + [760]))) ){ goto $label$77 }
	*($11 + [8]) = $2
	*($11 + [16]) = $3
	*($17 + [216]) = [0]
	*($11) = $10
	*($8) = ($11 + [24])
	goto $label$76 
	
.LABEL $label$77
	CALL $167(($0 + [752]), ($17 + [216]), ($17 + [256]), ($17 + [200]))
	
.LABEL $label$76
	$10 = *($17 + [216])
	*($17 + [216]) = [0]
	if ( ($10 == 0) ){ goto $label$78 }
	CALL $240($10)
	
.LABEL $label$78
	$2 = (int_64)0
	$10 = CALL db_lowerbound_i64(*($5), *($6), (int_64)4730274944552796160, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$7 }
	$10 = CALL $66($5, $10)
	if ( ((int_64)*($10 + [8]) != (int_64)0) ){ goto $label$79 }
	
.LOOP $label$80:
	CALL eosio_assert([1], [208])
	$10 = CALL db_next_i64(*($10 + [148]), ($17 + [256]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$10 }
	$10 = CALL $66($5, $10)
	if ( (int_64)(*($10 + [8]) == 0) ){ goto $label$80 }
	
.LABEL $label$79
	$2 = *($10)
	goto $label$7 
	
.LABEL $label$13
	$5 = (($10 + [16]) & [-16])
	$12 = CALL $238($5)
	*($17 + [184]) = ($5 | [1])
	*($17 + [192]) = $12
	*($17 + [188]) = $10
	
.LABEL $label$12
	CALL memcpy($12, [4208], $10)
	
.LABEL $label$11
	*(($12 + $10)) = [0]
	*(($17 + [280])) = $13
	*(($17 + [292])) = *($17 + [188])
	*($17 + [264]) = $1
	$10 = ($17 + [192])
	*(($17 + [296])) = *($10)
	*($17 + [256]) = *($0)
	*($17 + [272]) = $2
	*($17 + [288]) = *($17 + [184])
	*($17 + [184]) = [0]
	*($17 + [188]) = [0]
	*($10) = [0]
	$10 = CALL $149(($17 + [216]), ($17 + [200]), $14, $16, ($17 + [256]))
	CALL $87(($17 + [400]), $10)
	$12 = *($17 + [400])
	CALL send_inline($12, (*($17 + [404]) - $12))
	$12 = *($17 + [400])
	if ( ($12 == 0) ){ goto $label$81 }
	*($17 + [404]) = $12
	CALL $240($12)
	
.LABEL $label$81
	$12 = *($10 + [28])
	if ( ($12 == 0) ){ goto $label$82 }
	*(($10 + [32])) = $12
	CALL $240($12)
	
.LABEL $label$82
	$12 = *($10 + [16])
	if ( ($12 == 0) ){ goto $label$83 }
	*(($10 + [20])) = $12
	CALL $240($12)
	
.LABEL $label$83
	if ( ((*(($17 + [288])) & [1]) == 0) ){ goto $label$84 }
	CALL $240(*(($17 + [296])))
	
.LABEL $label$84
	if ( ((*($17 + [184]) & [1]) == 0) ){ goto $label$85 }
	CALL $240(*(($17 + [192])))
	
.LABEL $label$85
	$14 = *($0)
	CALL eosio_assert(((int_32)*($4 + [40]) == (int_32)$3), [768])
	CALL eosio_assert(((int_64)*(($0 + [208])) == (int_64)CALL $fimport$4()), [816])
	$10 = ($4 + [32])
	$16 = *($10)
	$15 = *($4)
	$2 = ((int_64)((int_64)$2 >> (int_64)63) << (int_64)1) | (int_64)(uint_64)$2 >> (uint_64)(int_64)63
	$2 = *($4 + [24])
	$13 = ((int_64)$2 << (int_64)1)
	CALL eosio_assert(( (uint_64)($13 <= (int_64)4611686018427387904) ? ((int_64)$2)) < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$13 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	CALL eosio_assert(((int_64)$16 == (int_64)*($10)), [3408])
	$2 = (int_64)
	*($4 + [24]) = $2(*($4 + [24]) - ((int_64)$13 / (int_64)100)))
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [3456])
	CALL eosio_assert(((int_64)*($4 + [24]) < (int_64)4611686018427387904), [3488])
	CALL eosio_assert(((int_64)$15 == (int_64)*($4)), [992])
	*($17 + [224]) = (($17 + [256]) + [40])
	*($17 + [220]) = ($17 + [256])
	*($17 + [216]) = ($17 + [256])
	CALL $140(($17 + [216]), $4)
	CALL db_update_i64(*($4 + [44]), $14, ($17 + [256]), [40])
	$10 = ($0 + [224])
	if ( (uint_64)($15 <= *($10)) ){ goto $label$6 }
	*($10) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	goto $label$6 
	
.LABEL $label$10
	$2 = (int_64)0
	goto $label$7 
	
.LABEL $label$9
	CALL $242(($17 + [184]))
	
.LABEL $label$8
	CALL $242(($17 + [184]))
	
.LABEL $label$7
	CALL eosio_assert((CASTING uint_32)(uint_64 $2), [4288])
	$11 = ($0 + [328])
	$10 = [0]
	$3 = ($0 + [336])
	$8 = CALL db_lowerbound_i64(*($0 + [328]), *($3), (int_64)6606653791088803840, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$86 }
	$10 = CALL $168($11, $8)
	
.LABEL $label$86
	CALL eosio_assert(($10 == 0), [4240])
	$14 = *($0)
	CALL eosio_assert(((int_64)*($11) == (int_64)CALL $fimport$4()), [1888])
	$10 = CALL $238([56])
	$8 = CALL $141($10)
	*($10 + [40]) = $11
	*($10) = *($0)
	$11 = ($4 + [24])
	$15 = *($11)
	CALL __multi3(($17 + [88]), $15, (int_64)$15 >> (int_64)63), (int_64)288, (int_64)0)
	$9 = ($4 + [32])
	$16 = *($9)
	$15 = *((($17 + [88]) + [8]))
	$13 = *($17 + [88])
	CALL eosio_assert(( (uint_64)($13 <= (int_64)4611686018427387904) ? ((int_64)$15 < (int_64)0) : (int_64)($15 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$13 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$15 > (int_64)-1) : ((int_64)$15 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*($10 + [16]) = $16
	*($10 + [8]) = ((int_64)$13 / (int_64)1000)
	$15 = *($11)
	CALL __multi3(($17 + [72]), $15, (int_64)$15 >> (int_64)63), (int_64)288, (int_64)0)
	$16 = *($9)
	$15 = *((($17 + [72]) + [8]))
	$13 = *($17 + [72])
	CALL eosio_assert(( (uint_64)($13 <= (int_64)4611686018427387904) ? ((int_64)$15 < (int_64)0) : (int_64)($15 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$13 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$15 > (int_64)-1) : ((int_64)$15 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*($10 + [32]) = $16
	*($10 + [24]) = ((int_64)$13 / (int_64)1000)
	*($17 + [224]) = $12
	*($17 + [220]) = ($17 + [256])
	*($17 + [216]) = ($17 + [256])
	CALL $140(($17 + [216]), $8)
	$15 = *($10)
	$3 = CALL db_store_i64(*($3), (int_64)6606653791088803840, $14, $15, ($17 + [256]), [40])
	*($10 + [44]) = $3
	$11 = ($0 + [344])
	if ( (uint_64)($15 <= *($11)) ){ goto $label$87 }
	*($11) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	
.LABEL $label$87
	*($17 + [216]) = $10
	$15 = *($10)
	*($17 + [256]) = $15
	*($17 + [200]) = $3
	$8 = ($0 + [356])
	$11 = *($8)
	if ( ((uint_32)$11 >= (uint_32)*(($0 + [360]))) ){ goto $label$89 }
	*($11 + [8]) = $15
	*($11 + [16]) = $3
	*($17 + [216]) = [0]
	*($11) = $10
	*($8) = ($11 + [24])
	goto $label$88 
	
.LABEL $label$89
	CALL $169(($0 + [352]), ($17 + [216]), ($17 + [256]), ($17 + [200]))
	
.LABEL $label$88
	$10 = *($17 + [216])
	$3 = [0]
	*($17 + [216]) = [0]
	if ( ($10 == 0) ){ goto $label$90 }
	CALL $240($10)
	
.LABEL $label$90
	$11 = ($0 + [608])
	$8 = ($0 + [616])
	$10 = CALL db_lowerbound_i64(*($0 + [608]), *($8), (int_64)6787607164394319872, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$91 }
	$3 = CALL $170($11, $10)
	
.LABEL $label$91
	CALL eosio_assert(($3 == 0), [4240])
	$14 = *($0)
	CALL eosio_assert(((int_64)*($11) == (int_64)CALL $fimport$4()), [1888])
	$10 = CALL $238([56])
	$3 = CALL $141($10)
	*($10 + [40]) = $11
	*($10) = *($0)
	$11 = ($4 + [24])
	$15 = *($11)
	CALL __multi3(($17 + [56]), $15, (int_64)$15 >> (int_64)63), (int_64)3456, (int_64)0)
	$9 = ($4 + [32])
	$16 = *($9)
	$15 = *((($17 + [56]) + [8]))
	$13 = *($17 + [56])
	CALL eosio_assert(( (uint_64)($13 <= (int_64)4611686018427387904) ? ((int_64)$15 < (int_64)0) : (int_64)($15 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$13 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$15 > (int_64)-1) : ((int_64)$15 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*($10 + [16]) = $16
	*($10 + [8]) = ((int_64)$13 / (int_64)10000)
	$15 = *($11)
	CALL __multi3(($17 + [40]), $15, (int_64)$15 >> (int_64)63), (int_64)3456, (int_64)0)
	$16 = *($9)
	$15 = *((($17 + [40]) + [8]))
	$13 = *($17 + [40])
	CALL eosio_assert(( (uint_64)($13 <= (int_64)4611686018427387904) ? ((int_64)$15 < (int_64)0) : (int_64)($15 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$13 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$15 > (int_64)-1) : ((int_64)$15 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*($10 + [32]) = $16
	*($10 + [24]) = ((int_64)$13 / (int_64)10000)
	*($17 + [224]) = $12
	*($17 + [220]) = ($17 + [256])
	*($17 + [216]) = ($17 + [256])
	CALL $140(($17 + [216]), $3)
	$15 = *($10)
	$3 = CALL db_store_i64(*($8), (int_64)6787607164394319872, $14, $15, ($17 + [256]), [40])
	*($10 + [44]) = $3
	$11 = ($0 + [624])
	if ( (uint_64)($15 <= *($11)) ){ goto $label$92 }
	*($11) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	
.LABEL $label$92
	*($17 + [216]) = $10
	$15 = *($10)
	*($17 + [256]) = $15
	*($17 + [200]) = $3
	$8 = ($0 + [636])
	$11 = *($8)
	if ( ((uint_32)$11 >= (uint_32)*(($0 + [640]))) ){ goto $label$94 }
	*($11 + [8]) = $15
	*($11 + [16]) = $3
	*($17 + [216]) = [0]
	*($11) = $10
	*($8) = ($11 + [24])
	goto $label$93 
	
.LABEL $label$94
	CALL $171(($0 + [632]), ($17 + [216]), ($17 + [256]), ($17 + [200]))
	
.LABEL $label$93
	$10 = *($17 + [216])
	*($17 + [216]) = [0]
	if ( ($10 == 0) ){ goto $label$95 }
	CALL $240($10)
	
.LABEL $label$95
	$11 = ($0 + [688])
	$10 = [1]
	$3 = ($0 + [696])
	$8 = CALL db_lowerbound_i64(*($0 + [688]), *($3), (int_64)6787721896711746944, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$96 }
	CALL $172($11, $8)
	$10 = [0]
	
.LABEL $label$96
	CALL eosio_assert($10, [4240])
	$14 = *($0)
	CALL eosio_assert(((int_64)*($11) == (int_64)CALL $fimport$4()), [1888])
	$10 = CALL $238([56])
	$8 = CALL $141($10)
	*($10 + [40]) = $11
	*($10) = *($0)
	$11 = ($4 + [24])
	$15 = *($11)
	CALL __multi3(($17 + [24]), $15, (int_64)$15 >> (int_64)63), (int_64)864, (int_64)0)
	$4 = ($4 + [32])
	$16 = *($4)
	$15 = *((($17 + [24]) + [8]))
	$13 = *($17 + [24])
	CALL eosio_assert(( (uint_64)($13 <= (int_64)4611686018427387904) ? ((int_64)$15 < (int_64)0) : (int_64)($15 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$13 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$15 > (int_64)-1) : ((int_64)$15 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*($10 + [16]) = $16
	*($10 + [8]) = ((int_64)$13 / (int_64)10000)
	$15 = *($11)
	CALL __multi3(($17 + [8]), $15, (int_64)$15 >> (int_64)63), (int_64)864, (int_64)0)
	$16 = *($4)
	$15 = *((($17 + [8]) + [8]))
	$13 = *($17 + [8])
	CALL eosio_assert(( (uint_64)($13 <= (int_64)4611686018427387904) ? ((int_64)$15 < (int_64)0) : (int_64)($15 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$13 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$15 > (int_64)-1) : ((int_64)$15 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*($10 + [32]) = $16
	*($10 + [24]) = ((int_64)$13 / (int_64)10000)
	*($17 + [224]) = $12
	*($17 + [220]) = ($17 + [256])
	*($17 + [216]) = ($17 + [256])
	CALL $140(($17 + [216]), $8)
	$15 = *($10)
	$11 = CALL db_store_i64(*($3), (int_64)6787721896711746944, $14, $15, ($17 + [256]), [40])
	*($10 + [44]) = $11
	$12 = ($0 + [704])
	if ( (uint_64)($15 <= *($12)) ){ goto $label$97 }
	*($12) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	
.LABEL $label$97
	*($17 + [216]) = $10
	$15 = *($10)
	*($17 + [256]) = $15
	*($17 + [200]) = $11
	$4 = ($0 + [716])
	$12 = *($4)
	if ( ((uint_32)$12 >= (uint_32)*(($0 + [720]))) ){ goto $label$99 }
	*($12 + [8]) = $15
	*($12 + [16]) = $11
	*($17 + [216]) = [0]
	*($12) = $10
	*($4) = ($12 + [24])
	goto $label$98 
	
.LABEL $label$99
	CALL $173(($0 + [712]), ($17 + [216]), ($17 + [256]), ($17 + [200]))
	
.LABEL $label$98
	$10 = *($17 + [216])
	*($17 + [216]) = [0]
	if ( ($10 == 0) ){ goto $label$100 }
	CALL $240($10)
	
.LABEL $label$100
	$3 = *(($0 + [32]))
	$11 = *(($0 + [36]))
	if ( ((int_32)$11 == (int_32)$3) ){ goto $label$101 }
	$10 = ($11 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$102:
	if ( ((int_64)*(*($10)) == (int_64)$2) ){ goto $label$101 }
	$11 = $10
	$12 = ($10 + [-24])
	$10 = $12
	if ( ((int_32)($12 + $4) != (int_32)[-24]) ){ goto $label$102 }
	
.LABEL $label$101
	if ( ((int_32)$11 == (int_32)$3) ){ goto $label$104 }
	$10 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [144]) == (int_32)$5), [592])
	goto $label$103 
	
.LABEL $label$104
	$10 = [0]
	$12 = CALL db_find_i64(*($5), *($6), (int_64)4730274944552796160, $2)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$103 }
	$10 = CALL $66($5, $12)
	CALL eosio_assert(((int_32)*($10 + [144]) == (int_32)$5), [592])
	
.LABEL $label$103
	$12 = [0]
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [4304])
	$15 = *($0)
	CALL eosio_assert(((int_32)*($10 + [144]) == (int_32)$5), [768])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$4()), [816])
	*($10 + [8]) = (int_64)0
	*($10 + [16]) = (int_64)1
	$2 = *($10)
	CALL eosio_assert([1], [992])
	*($17 + [224]) = $7
	*($17 + [220]) = ($17 + [256])
	*($17 + [216]) = ($17 + [256])
	CALL $80(($17 + [216]), $10)
	CALL db_update_i64(*($10 + [148]), $15, ($17 + [256]), [136])
	$10 = ($0 + [24])
	if ( (uint_64)($2 <= *($10)) ){ goto $label$105 }
	*($10) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$105
	$10 = ($0 + [128])
	$5 = CALL db_lowerbound_i64(*($0 + [128]), *(($0 + [136])), (int_64)4982871454518345728, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$106 }
	$12 = CALL $78($10, $5)
	
.LABEL $label$106
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [2128])
	$15 = *($0)
	CALL eosio_assert(((int_32)*($12 + [72]) == (int_32)$10), [768])
	CALL eosio_assert(((int_64)*($10) == (int_64)CALL $fimport$4()), [816])
	*($12 + [8]) = [0]
	$2 = *($12)
	CALL eosio_assert([1], [992])
	*($17 + [224]) = (($17 + [256]) + [61])
	*($17 + [220]) = ($17 + [256])
	*($17 + [216]) = ($17 + [256])
	CALL $151(($17 + [216]), $12)
	CALL db_update_i64(*($12 + [76]), $15, ($17 + [256]), [61])
	$10 = ($0 + [144])
	if ( (uint_64)($2 <= *($10)) ){ goto $label$107 }
	*($10) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$107
	$10 = ($0 + [488])
	$12 = CALL db_lowerbound_i64(*($0 + [488]), *(($0 + [496])), (int_64)-2042605236735967232, (int_64)0)
	if ( ((int_32)$12 <= (int_32)[-1]) ){ goto $label$108 }
	CALL $177($10, CALL $176($10, $12), *($0))
	goto $label$6 
	
.LABEL $label$108
	$2 = *($0)
	*($17 + [184]) = $0
	*($17 + [216]) = $2
	CALL eosio_assert(((int_64)*($10) == (int_64)CALL $fimport$4()), [1888])
	*($17 + [256]) = $10
	*($17 + [260]) = ($17 + [184])
	*($17 + [264]) = ($17 + [216])
	*(($12 = CALL $238([40])) + [8 align=4]) = (int_64)0
	*($12 + [16 align=4]) = (int_64)0
	*($12 + [24]) = $10
	CALL $174(($17 + [256]), $12)
	*($17 + [200]) = $12
	$2 = *($12)
	*($17 + [256]) = $2
	$5 = *($12 + [28])
	*($17 + [400]) = $5
	$11 = ($0 + [516])
	$10 = *($11)
	if ( ((uint_32)$10 >= (uint_32)*(($0 + [520]))) ){ goto $label$110 }
	*($10 + [8]) = $2
	*($10 + [16]) = $5
	*($17 + [200]) = [0]
	*($10) = $12
	*($11) = ($10 + [24])
	goto $label$109 
	
.LABEL $label$110
	CALL $175(($0 + [512]), ($17 + [200]), ($17 + [256]), ($17 + [400]))
	
.LABEL $label$109
	$10 = *($17 + [200])
	*($17 + [200]) = [0]
	if ( ($10 == 0) ){ goto $label$6 }
	$12 = *($10 + [12])
	if ( ($12 == 0) ){ goto $label$111 }
	*(($10 + [16])) = $12
	CALL $240($12)
	
.LABEL $label$111
	CALL $240($10)
	
.LABEL $label$6
	*([0] + [4]) = ($17 + [416])
	(unreachable)
	(unreachable)
}

void .FUNC $160 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [16])
	$10 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [324]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	*($1 + [280]) = ((int_64)*($1 + [280]) + (int_64)*(*($3)))
	$4 = *($1)
	$6 = *($3 + [4])
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)*(($1 + [112]))), [880])
	$8 = ((int_64)*($1 + [104]) + (int_64)*($6))
	*($1 + [104]) = $8
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($1 + [104]) < (int_64)4611686018427387904), [960])
	$3 = *($3 + [8])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [192]))), [880])
	$8 = ((int_64)*($1 + [184]) + (int_64)*($3))
	*($1 + [184]) = $8
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($1 + [184]) < (int_64)4611686018427387904), [960])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [992])
	$5 = *($1 + [312])
	$6 = *(($1 + [316]))
	$7 = ($6 - $5)
	$8 = (CASTING uint_64)(uint_32 int_32($7 >> [3]))
	$3 = [308]
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	$3 = (($7 & [-8]) + $3)
	
.LABEL $label$2
	if ( ($3 <= [513]) ){ goto $label$4 }
	$9 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$9 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$3
	*($10 + [4]) = $9
	*($10) = $9
	*($10 + [8]) = ($9 + $3)
	CALL $102($10, $1)
	CALL db_update_i64(*($1 + [328]), $2, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($9)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $230 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [15494]) == 0) ){ goto $label$2 }
	$7 = *([0] + [15496])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [15494]) = [1]
	$7 = ($7 << [16])
	*([0] + [15496]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [15496])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [15496]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [15494]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [15494]) = [1]
	$3 = ($3 << [16])
	*([0] + [15496]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [15496])
	
.LABEL $label$8
	*([0] + [15496]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

void .FUNC $244 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $169 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $238(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $244($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $240($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $240($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $168 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [416])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $238([56])
	$4 = CALL $141($6)
	*($6 + [40]) = $0
	CALL $142(($8 + [32]), $4)
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [44])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $169(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $240($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $245 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $175 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $238(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $244($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [12])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [16])) = $6
	CALL $240($6)
	
.LABEL $label$11
	CALL $240($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $240($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $242 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $243 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $238(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $240($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC _ZN7campwar25validate_gun_is_availableEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = *(($0 + [112]))
	$6 = *(($0 + [116]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$5 = ($6 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$2:
	if ( ((int_64)*(*($5)) == (int_64)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [88])
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [88]) == (int_32)$4), [592])
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	$6 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)7396599438002618368, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $57($4, $6)
	CALL eosio_assert(((int_32)*($5 + [88]) == (int_32)$4), [592])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [656])
	$1 = *($5 + [32])
	$2 = *(($0 + [32]))
	$6 = *(($0 + [36]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$5 }
	$5 = ($6 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$6:
	if ( ((int_64)*(*($5)) == (int_64)$1) ){ goto $label$5 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	$4 = ($0 + [8])
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$8 }
	$5 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [144]) == (int_32)$4), [592])
	goto $label$7 
	
.LABEL $label$8
	$5 = [0]
	$6 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)4730274944552796160, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$7 }
	$5 = CALL $66($4, $6)
	CALL eosio_assert(((int_32)*($5 + [144]) == (int_32)$4), [592])
	
.LABEL $label$7
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [1072])
	CALL eosio_assert(*($5 + [8]), [1104])
}

int_32 .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [416])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $238([104])
	$4 = CALL $63($6)
	*($6 + [88]) = $0
	CALL $64(($8 + [32]), $4)
	*($6 + [92]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [92])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $65(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $240($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $240 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

int_32 .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [416])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $238([336])
	$4 = CALL $52($6)
	*($6 + [324]) = $0
	CALL $53(($8 + [32]), $4)
	*($6 + [328]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [328])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $54(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [312])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [316])) = $7
	CALL $240($7)
	
.LABEL $label$10
	CALL $240($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $51 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [324]) == (int_32)$0), [240])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [288])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [352])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	$6 = *($4 + [312])
	if ( ($6 == 0) ){ goto $label$7 }
	*(($4 + [316])) = $6
	CALL $240($6)
	
.LABEL $label$7
	CALL $240($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	$6 = *($4 + [312])
	if ( ($6 == 0) ){ goto $label$10 }
	*(($4 + [316])) = $6
	CALL $240($6)
	
.LABEL $label$10
	CALL $240($4)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [328]))
}

int_32 .FUNC $52 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	$2 = [0]
	*($0 + [16]) = [0]
	*($0) = (int_64)0
	*($0 + [24]) = (int_64)0
	*(($3 = ($0 + [32]))) = (int_64)1397703940
	CALL eosio_assert([1], [512])
	$1 = (uint_64)*($3) >> (uint_64)(int_64)8)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [480])
	*(($2 = ($0 + [48]))) = (int_64)1397703940
	*($0 + [40]) = (int_64)0
	CALL eosio_assert([1], [512])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [480])
	*(($2 = ($0 + [64]))) = (int_64)1397703940
	*($0 + [56]) = (int_64)0
	CALL eosio_assert([1], [512])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [480])
	*(($2 = ($0 + [80]))) = (int_64)1397703940
	*($0 + [72]) = (int_64)0
	CALL eosio_assert([1], [512])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$3 = [0]
	
.LABEL $label$16
	CALL eosio_assert($3, [480])
	*(($2 = ($0 + [96]))) = (int_64)1397703940
	*($0 + [88]) = (int_64)0
	CALL eosio_assert([1], [512])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	
.LOOP $label$25:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$25 }
	
.LABEL $label$24
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$3 = [0]
	
.LABEL $label$21
	CALL eosio_assert($3, [480])
	*(($2 = ($0 + [112]))) = (int_64)1397703940
	*($0 + [104]) = (int_64)0
	CALL eosio_assert([1], [512])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$29 }
	
.LOOP $label$30:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$30 }
	
.LABEL $label$29
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$3 = [0]
	
.LABEL $label$26
	CALL eosio_assert($3, [480])
	*(($2 = ($0 + [128]))) = (int_64)1397703940
	*($0 + [120]) = (int_64)0
	CALL eosio_assert([1], [512])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$34 }
	
.LOOP $label$35:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$32 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$35 }
	
.LABEL $label$34
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$32
	$3 = [0]
	
.LABEL $label$31
	CALL eosio_assert($3, [480])
	*(($2 = ($0 + [144]))) = (int_64)1397703940
	*($0 + [136]) = (int_64)0
	CALL eosio_assert([1], [512])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$38:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$37 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$39 }
	
.LOOP $label$40:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$37 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$40 }
	
.LABEL $label$39
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$38 }
	goto $label$36 
	
.LABEL $label$37
	$3 = [0]
	
.LABEL $label$36
	CALL eosio_assert($3, [480])
	*(($2 = ($0 + [160]))) = (int_64)1397703940
	*($0 + [152]) = (int_64)0
	CALL eosio_assert([1], [512])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$43:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$42 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$44 }
	
.LOOP $label$45:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$42 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$45 }
	
.LABEL $label$44
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$43 }
	goto $label$41 
	
.LABEL $label$42
	$3 = [0]
	
.LABEL $label$41
	CALL eosio_assert($3, [480])
	*(($2 = ($0 + [176]))) = (int_64)1397703940
	*($0 + [168]) = (int_64)0
	CALL eosio_assert([1], [512])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$48:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$47 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$49 }
	
.LOOP $label$50:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$47 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$50 }
	
.LABEL $label$49
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$48 }
	goto $label$46 
	
.LABEL $label$47
	$3 = [0]
	
.LABEL $label$46
	CALL eosio_assert($3, [480])
	*(($2 = ($0 + [192]))) = (int_64)1397703940
	*($0 + [184]) = (int_64)0
	CALL eosio_assert([1], [512])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$53:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$52 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$54 }
	
.LOOP $label$55:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$52 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$55 }
	
.LABEL $label$54
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$53 }
	goto $label$51 
	
.LABEL $label$52
	$3 = [0]
	
.LABEL $label$51
	CALL eosio_assert($3, [480])
	*(($2 = ($0 + [208]))) = (int_64)1397703940
	*($0 + [200]) = (int_64)0
	CALL eosio_assert([1], [512])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$58:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$57 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$59 }
	
.LOOP $label$60:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$57 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$60 }
	
.LABEL $label$59
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$58 }
	goto $label$56 
	
.LABEL $label$57
	$3 = [0]
	
.LABEL $label$56
	CALL eosio_assert($3, [480])
	*(($2 = ($0 + [224]))) = (int_64)1397703940
	*($0 + [216]) = (int_64)0
	CALL eosio_assert([1], [512])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$63:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$62 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$64 }
	
.LOOP $label$65:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$62 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$65 }
	
.LABEL $label$64
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$63 }
	goto $label$61 
	
.LABEL $label$62
	$3 = [0]
	
.LABEL $label$61
	CALL eosio_assert($3, [480])
	*(($2 = ($0 + [240]))) = (int_64)1397703940
	*($0 + [232]) = (int_64)0
	CALL eosio_assert([1], [512])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$68:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$67 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$69 }
	
.LOOP $label$70:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$67 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$70 }
	
.LABEL $label$69
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$68 }
	goto $label$66 
	
.LABEL $label$67
	$3 = [0]
	
.LABEL $label$66
	CALL eosio_assert($3, [480])
	*(($2 = ($0 + [256]))) = (int_64)1397703940
	*($0 + [248]) = (int_64)0
	CALL eosio_assert([1], [512])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$73:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$72 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$74 }
	
.LOOP $label$75:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$72 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$75 }
	
.LABEL $label$74
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$73 }
	goto $label$71 
	
.LABEL $label$72
	$3 = [0]
	
.LABEL $label$71
	CALL eosio_assert($3, [480])
	*(($2 = ($0 + [272]))) = (int_64)1397703940
	*($0 + [264]) = (int_64)0
	CALL eosio_assert([1], [512])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$78:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$77 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$79 }
	
.LOOP $label$80:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$77 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$80 }
	
.LABEL $label$79
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$78 }
	goto $label$76 
	
.LABEL $label$77
	$3 = [0]
	
.LABEL $label$76
	CALL eosio_assert($3, [480])
	*($0 + [296]) = (int_64)0
	*($0 + [312 align=4]) = (int_64)0
	*(($0 + [320])) = [0]
	return $0
}

int_32 .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $55($0, ($1 + [312]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [448])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [448])
	CALL memcpy(($1 + [16]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [88]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [96]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [104]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [112]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [120]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [128]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [136]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [144]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [152]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [160]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [168]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [176]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [184]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [192]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [200]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [208]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [216]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [224]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [232]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [240]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [248]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [256]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [264]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [272]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [280]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [288]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [296]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [304]), *($0 + [4]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $54 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $238(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $244($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [312])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [316])) = $6
	CALL $240($6)
	
.LABEL $label$11
	CALL $240($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $240($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [464])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$3 = *($1 + [4])
	$7 = int_32(($3 - $4) >> [3])
	$5 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$5 <= (uint_32)$7) ){ goto $label$4 }
	CALL $56($1, ($5 - $7))
	$3 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$5 >= (uint_32)$7) ){ goto $label$5 }
	$3 = ($4 + ($5 << [3]))
	*(($1 + [4])) = $3
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = ($0 + [4])
	$7 = *($5)
	
.LOOP $label$6:
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $7) > (uint_32)[7]), [448])
	CALL memcpy($4, *($5), [8])
	$7 = (*($5) + [8])
	*($5) = $7
	$4 = ($4 + [8])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$7 = *($0 + [8])
	if ( ((uint_32)int_32(($7 - $2) >> [3]) >= (uint_32)$1) ){ goto $label$5 }
	$3 = *($0)
	$4 = int_32(($2 - $3) >> [3])
	$2 = ($4 + $1)
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$7 = ($7 - $3)
	if ( ((uint_32)int_32($7 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$6 = int_32($7 >> [2])
	$6 = ( $2 ? $6 : ($6 <= $2) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$6
	$7 = CALL $238(($6 << [3]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $2
	$7 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$7 }
	*(($0 + [4])) = ($2 + ($1 << [3]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $244($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$3 = ($7 + ($6 << [3]))
	$2 = ($7 + ($4 << [3]))
	$6 = $2
	$7 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$8 }
	$4 = ($2 + ($1 << [3]))
	$6 = *($0)
	$5 = ($0 + [4])
	$7 = (*($5) - $6)
	$1 = ($2 - $7)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $7)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($5) = $4
	*(($0 + [8])) = $3
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $240($6)
	
.LABEL $label$10
	(unreachable)
}

int_32 .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [416])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $238([104])
	$4 = CALL $63($6)
	*($6 + [88]) = $0
	CALL $64(($8 + [32]), $4)
	*($6 + [92]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [92])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $69(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $240($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $247 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = ($8 & [1])
	$8 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($8 >> [1]) : $5 )
	if ( ($8 <= $2) ){ goto $label$1 }
	$8 = ($8 - $2)
	$3 = ( $8 ? $3 : ($8 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($3 + [16]) & [-16])
	$8 = CALL $238($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($8, (( $6 ? ($1 + [1]) : $5 ) + $2), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $173 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $238(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $244($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $240($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $240($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $152 (int_32 $0, int_32 $1, int_64 $2, int_64 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	$6 = [0]
	*(($7 + [40])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$4 = *($1)
	*($7 + [8]) = $4
	*($7 + [16]) = $2
	$1 = CALL db_find_i64($4, $2, (int_64)3607749779137757184, $3)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert(((int_32)*(CALL $153(($7 + [8]), $1) + [16]) == (int_32)($7 + [8])), [592])
	$6 = CALL $154(($7 + [8]), $3, [3680])
	*($0) = *($6)
	*(($0 + [8])) = *(($6 + [8]))
	$1 = *($7 + [32])
	if ( ($1 == 0) ){ goto $label$1 }
	$5 = ($7 + [36])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$5:
	$6 = ($6 + [-24])
	$0 = *($6)
	*($6) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	CALL $240($0)
	
.LABEL $label$6
	if ( ((int_32)$1 != (int_32)$6) ){ goto $label$5 }
	$6 = *(($7 + [32]))
	goto $label$2 
	
.LABEL $label$4
	*($0 + [8]) = (int_64)1397703940
	*($0) = (int_64)0
	CALL eosio_assert([1], [512])
	$2 = (int_64)5459781
	
.LOOP $label$8:
	$1 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$1 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	CALL eosio_assert($1, [480])
	*(($0 + [8])) = $3
	*($0) = (int_64)0
	goto $label$1 
	
.LABEL $label$3
	$6 = $1
	
.LABEL $label$2
	*($5) = $1
	CALL $240($6)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $153 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [416])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $238([32])
	$6 = CALL $155($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	*($8 + [8]) = $5)
	$1 = *($4 + [20])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $156(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $240($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $150 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1056])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1056])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1056])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $91(*($1), ($0 + [32]))
}

int_32 .FUNC $151 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	*($3 + [15]) = *($1 + [8])
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [1056])
	CALL memcpy(*($0 + [4]), ($3 + [15]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*([0] + [4]) = ($3 + [16])
	return $0
}

void .FUNC $156 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $238(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $244($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $240($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $240($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $157 (int_32 $0, int_32 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$4 = (*([0] + [4]) - [16])
	$7 = $4
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	$3 = *($1)
	if ( (*([0] + [1332]) == 0) ){ goto $label$2 }
	$6 = *([0] + [1336])
	$5 = $3
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL current_time()
	*([0] + [1332]) = [1]
	$6 = (CASTING uint_32)(uint_64 ((uint_64)$5 / (uint_64)(int_64)1000000))
	*([0] + [1336]) = $6
	$5 = *($1)
	
.LABEL $label$1
	*($1 + [28]) = $6
	CALL eosio_assert(((int_64)$3 == (int_64)$5), [992])
	$6 = $4
	$4 = ($6 + [-96])
	*([0] + [4]) = $4
	*($7 + [4]) = $4
	*($7) = $4
	*($7 + [8]) = ($6 + [-8])
	CALL $62($7, $1)
	CALL db_update_i64(*($1 + [92]), $2, $4, [88])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [16])
}

int_32 .FUNC $154 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)(uint_64)*(*($6) + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [592])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3607749779137757184, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $153($0, $5)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [592])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

int_32 .FUNC $155 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1397703940
	*($0) = (int_64)0
	CALL eosio_assert([1], [512])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [480])
	*($0 + [16]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [448])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [448])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [20]) = *(*($2 + [8]))
	return $0
}

int_32 .FUNC $158 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [416])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $238([48])) + [32]) = $0
	*($6 + [16]) = [0]
	CALL $179(($8 + [32]), $6)
	*($6 + [36]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [36])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $180(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $240($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $159 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [144]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	$4 = *($1)
	$5 = *(*(($3 + [4])))
	if ( ((int_64)*(*(*($3) + [4]) + [32]) <= (int_64)$5) ){ goto $label$2 }
	*(($3 = ($1 + [32]))) = (int_64))(*($3) - $5)
	goto $label$1 
	
.LABEL $label$2
	*($1 + [8]) = (int_64)0
	*(($1 + [32])) = (int_64)0
	
.LABEL $label$1
	CALL eosio_assert([1], [992])
	$7 = $7
	$3 = ($7 + [-144])
	*([0] + [4]) = $3
	*($6 + [4]) = $3
	*($6) = $3
	*($6 + [8]) = ($7 + [-8])
	CALL $80($6, $1)
	CALL db_update_i64(*($1 + [148]), $2, $3, [136])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [16])
}

int_32 .FUNC $179 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [448])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [448])
	CALL memcpy(($1 + [16]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC _ZN7campwar18parse_memo_buy_gunERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERy (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($3 & [1])
	$3 = *($1)
	if ( (( *($1 + [4]) ? uint_32($3 >> [1]) : $3 ) == 0) ){ goto $label$1 }
	$4 = CALL strtoll(( *($1 + [8]) ? ($1 + [1]) : $3 ), [0], [10])
	*($2) = $4
	return ((int_64)$4 != (int_64)0)
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC _ZN7campwar24validate_buy_gun_balanceEyyN5eosio5assetE (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [64])
	*([0] + [4]) = $14
	$13 = [0]
	$4 = *($3)
	if ( ((int_64)$4 < (int_64)1) ){ goto $label$1 }
	$5 = *(($0 + [112]))
	$12 = *(($0 + [116]))
	if ( ((int_32)$12 == (int_32)$5) ){ goto $label$2 }
	$11 = ($12 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$3:
	if ( ((int_64)*(*($11)) == (int_64)$2) ){ goto $label$2 }
	$12 = $11
	$7 = ($11 + [-24])
	$11 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	$7 = ($0 + [88])
	if ( ((int_32)$12 == (int_32)$5) ){ goto $label$5 }
	$11 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [88]) == (int_32)$7), [592])
	if ( $11 ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$5
	$13 = [0]
	$11 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)7396599438002618368, $2)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$1 }
	$11 = CALL $57($7, $11)
	CALL eosio_assert(((int_32)*($11 + [88]) == (int_32)$7), [592])
	
.LABEL $label$4
	if ( ((int_64)*($11 + [40]) == (int_64)0) ){ goto $label$7 }
	$7 = ($11 + [56])
	$2 = *($7)
	$8 = *($11 + [48])
	if ( ((int_64)*($11 + [32]) != (int_64)$1) ){ goto $label$6 }
	CALL __multi3(($14 + [16]), $8, (int_64)$8 >> (int_64)63), (int_64)120, (int_64)0)
	$1 = *((($14 + [16]) + [8]))
	$8 = *($14 + [16])
	CALL eosio_assert(( (uint_64)($8 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$8 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	$1 = *(($11 + [48]))
	CALL __multi3($14, $1, (int_64)$1 >> (int_64)63), (int_64)10, (int_64)0)
	$10 = *($7)
	$1 = *(($14 + [8]))
	$9 = *($14)
	CALL eosio_assert(( (uint_64)($9 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$9 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	CALL eosio_assert(((int_64)$10 == (int_64)$2), [880])
	$1 = ((int_64)((int_64)$9 / (int_64)100) + (int_64)((int_64)$8 / (int_64)100))
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)$1 < (int_64)4611686018427387904), [960])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)$2), [3552])
	$13 = ((int_64)$4 >= (int_64)$1)
	goto $label$1 
	
.LABEL $label$7
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($11 + [56]))), [3552])
	$13 = ((int_64)$4 >= (int_64)*($11 + [48]))
	goto $label$1 
	
.LABEL $label$6
	CALL __multi3(($14 + [48]), $8, (int_64)$8 >> (int_64)63), (int_64)160, (int_64)0)
	$1 = *((($14 + [48]) + [8]))
	$8 = *($14 + [48])
	CALL eosio_assert(( (uint_64)($8 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$8 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	$1 = *(($11 + [48]))
	CALL __multi3(($14 + [32]), $1, (int_64)$1 >> (int_64)63), (int_64)20, (int_64)0)
	$10 = *($7)
	$1 = *((($14 + [32]) + [8]))
	$9 = *($14 + [32])
	CALL eosio_assert(( (uint_64)($9 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$9 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	CALL eosio_assert(((int_64)$10 == (int_64)$2), [880])
	$1 = ((int_64)((int_64)$9 / (int_64)100) + (int_64)((int_64)$8 / (int_64)100))
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)$1 < (int_64)4611686018427387904), [960])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)$2), [3552])
	$13 = ((int_64)$4 >= (int_64)$1)
	
.LABEL $label$1
	*([0] + [4]) = ($14 + [64])
	return $13
}

void .FUNC $69 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $238(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $244($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $240($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $240($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $68 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $238(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $244($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $240($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $240($6)
	
.LABEL $label$11
	(unreachable)
}

int_64 .FUNC pow (float_64 $0, float_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	float_64 $10
	int_64 $11
	float_64 $12
	float_64 $13
	float_64 $14
	float_64 $15
	float_64 $16
	float_64 $17
	float_64 $18
	int_32 $19
	float_64 $20
	float_64 $21
	$21 = (float_64)1
	$6 = (CASTING uint_32)(uint_64 $4)
	$4 = (CASTING int_64)(float_64 $1)
	$5 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	$8 = ($5) & [2147483647]
	if ( (($8) | $6) == 0) ){ goto $label$1 }
	$11 = (CASTING int_64)(float_64 $0)
	$2 = (CASTING uint_32)(uint_64 (uint_64)$11 >> (uint_64)(int_64)32))
	$3 = (CASTING uint_32)(uint_64 $11)
	if ( $3 ){ goto $label$2 }
	if ( ((int_32)$2 == (int_32)[1072693248]) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($2 & [2147483647])
	if ( ((uint_32)$7 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( (((int_32)$3 != (int_32)[0]) & ((int_32)$7 == (int_32)[2146435072])) ){ goto $label$4 }
	if ( ((uint_32)$8 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$3 }
	if ( ((int_32)$8 != (int_32)[2146435072]) ){ goto $label$3 }
	
.LABEL $label$4
	return ((float_64)$0 + (float_64)$1)
	
.LABEL $label$3
	$19 = [0]
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$8 }
	$19 = [2]
	if ( ((uint_32)$8 > (uint_32)[1128267775]) ){ goto $label$8 }
	$19 = [0]
	if ( ($8 <= [1072693248]) ){ goto $label$8 }
	$9 = uint_32($8 >> [20])
	if ( ((int_32)($9 + [-1023]) < (int_32)[21]) ){ goto $label$7 }
	$19 = ([1075] - $9)
	$9 = uint_32($6 >> $19)
	$19 = ( ([2] - ($9 & [1])) ? [0] : ((int_32)($9 << $19) == (int_32)$6) )
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$19 = [0]
	if ( $6 ){ goto $label$5 }
	$6 = ([1043] - $9)
	$19 = uint_32($8 >> $6)
	$19 = ( ([2] - ($19 & [1])) ? [0] : ((int_32)($19 << $6) == (int_32)$8) )
	
.LABEL $label$6
	if ( ((int_32)$8 != (int_32)[2146435072]) ){ goto $label$12 }
	if ( ((($7 + [-1072693248]) | $3) == 0) ){ goto $label$1 }
	if ( ($7 <= [1072693248]) ){ goto $label$11 }
	return ( $1 ? (float_64)0 : ((int_32)$5 > (int_32)[-1]) )
	
.LABEL $label$12
	if ( ((int_32)$8 != (int_32)[1072693248]) ){ goto $label$13 }
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$9 }
	return $0
	
.LABEL $label$13
	if ( ((int_32)$5 != (int_32)[1073741824]) ){ goto $label$10 }
	return ((float_64)$0 * (float_64)$0)
	
.LABEL $label$11
	return ( (float_64)0 ? !(float_64)$1 : ((int_32)$5 > (int_32)[-1]) )
	
.LABEL $label$10
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	if ( ((int_32)$5 != (int_32)[1071644672]) ){ goto $label$5 }
	return CALL sqrt($0)
	
.LABEL $label$9
	return ((float_64)(float_64)1 / (float_64)$0)
	
.LABEL $label$5
	$21 = CALL fabs($0)
	if ( $3 ){ goto $label$18 }
	if ( ($7 == 0) ){ goto $label$17 }
	if ( ((int_32)($7 | [1073741824]) == (int_32)[2146435072]) ){ goto $label$17 }
	
.LABEL $label$18
	$10 = (float_64)1
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$14 }
	if ( ((int_32)$19 == (int_32)[1]) ){ goto $label$16 }
	if ( $19 ){ goto $label$14 }
	$1 = (float_64)
	return ((float_64)$1($0 - $0)) / (float_64)$1)
	
.LABEL $label$17
	$21 = ( ((float_64)(float_64)1 / (float_64)$21) ? $21 : ((int_32)$5 < (int_32)[0]) )
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	if ( (($19 | ($7 + [-1072693248])) == 0) ){ goto $label$15 }
	return ( !(float_64)$21 ? $21 : ((int_32)$19 == (int_32)[1]) )
	
.LABEL $label$16
	$10 = (float_64)-1
	goto $label$14 
	
.LABEL $label$15
	$1 = (float_64)
	return ((float_64)$1($21 - $21)) / (float_64)$1)
	
.LABEL $label$14
	if ( ($8 <= [1105199105]) ){ goto $label$28 }
	if ( ($8 <= [1139802113]) ){ goto $label$27 }
	if ( ((uint_32)$7 > (uint_32)[1072693247]) ){ goto $label$24 }
	return ( (float_64)inf ? (float_64)0 : ((int_32)$5 < (int_32)[0]) )
	
.LABEL $label$28
	$8 = [0]
	if ( ((uint_32)$7 > (uint_32)[1048575]) ){ goto $label$26 }
	$21 = ((float_64)$21 * (float_64)(float_64)9007199254740992)
	$7 = (CASTING uint_32)(uint_64 (uint_64)(CASTING int_64)(float_64 $21) >> (uint_64)(int_64)32))
	$5 = [-53]
	goto $label$25 
	
.LABEL $label$27
	if ( ((uint_32)$7 > (uint_32)[1072693246]) ){ goto $label$23 }
	$1 = ( (float_64)1.e+300 ? (float_64)1e-300 : ((int_32)$5 < (int_32)[0]) )
	return ((float_64)$1 * (float_64)((float_64)$1 * (float_64)$10))
	
.LABEL $label$26
	$5 = [0]
	
.LABEL $label$25
	$6 = ($7 & [1048575])
	$2 = ($6 | [1072693248])
	$5 = ((int_32($7 >> [20]) + $5) + [-1023])
	if ( ($6 <= [235663]) ){ goto $label$21 }
	if ( ((uint_32)$6 >= (uint_32)[767610]) ){ goto $label$22 }
	$8 = [1]
	goto $label$21 
	
.LABEL $label$24
	return ( (float_64)inf ? (float_64)0 : ((int_32)$5 > (int_32)[0]) )
	
.LABEL $label$23
	if ( ($7 <= [1072693249]) ){ goto $label$20 }
	$1 = ( (float_64)1.e+300 ? (float_64)1e-300 : ((int_32)$5 > (int_32)[0]) )
	return ((float_64)$1 * (float_64)((float_64)$1 * (float_64)$10))
	
.LABEL $label$22
	$2 = ($2 + [-1048576])
	$5 = ($5 + [1])
	
.LABEL $label$21
	$13 = ((float_64)*(($6 + [15520])) + (float_64)((float_64)((float_64)(float_64))($21 - (float_64))($0 - $14)) * (float_64)(float_64)0.9617966939259756) + (float_64)((float_64)$0 * (float_64)(float_64)-7.028461650952758e-09)
	$21 = ((float_64)((float_64)$12 * (float_64)$0) + (float_64)((float_64)$21 * (float_64)(float_64))($13 - (float_64))(((float_64)$0 + (float_64)(float_64)-3) - $17))
	$0 = ((float_64)$21 * (float_64)$21)
	$16 = (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 (((int_32($2 >> [1]) | [536870912]) + ($8 << [18])) + [524288])) << (int_64)32))
	$12 = ((float_64)$15 * (float_64)(float_64))((float_64))($14 - ((float_64)$0 * (float_64)$16)) - ((float_64)$0 * (float_64)(float_64))($12 - (float_64))($16 - $13)
	$13 = ((float_64)((float_64)((float_64)$21 + (float_64)$0) * (float_64)$12))
	$17 = ((float_64)$0 * (float_64)$0)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)((float_64)$17 + (float_64)(float_64)3) + (float_64)$13)) + (float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)0.20697501780033842) + (float_64)(float_64)0.23066074577556175)) + (float_64)(float_64)0.272728123808534)) + (float_64)(float_64)0.33333332981837743)) + (float_64)(float_64)0.4285714285785502)) + (float_64)(float_64)0.5999999999999946))))
	$15 = ((float_64)(float_64)1 / (float_64)((float_64)$13 + (float_64)$12))
	$13 = *(($6 + [15504]))
	$12 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)32) | (int_64)((int_64)(CASTING int_64)(float_64 $21) & (int_64)4294967295)))
	$14 = (float_64)
	$21 = ((float_64)$14($12 - $13)) * (float_64)$15
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $21)) & (int_64)-4294967296)
	$14 = ((float_64)$0) * (float_64)$0
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$14 & (int_64)-4294967296))))
	$12 = ((float_64)$0 + (float_64)$21)
	$6 = ($8 << [3])
	$18 = *(($6 + [15536]))
	$20 = (CASTING float_64)(int_32 $5)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$20 + (float_64)((float_64)$18 + (float_64)((float_64)$12)) & (int_64)-4294967296))) * (float_64)(float_64)0.9617967009544373)
	$20 = (float_64))((float_64))((float_64))($0 + (float_64)$13)))))) & (int_64)-4294967296))) - $20) - $18) - $12)
	goto $label$19 
	
.LABEL $label$20
	$13 = ((float_64)((float_64)$0 * (float_64)(float_64)1.9259629911266175e-08) + (float_64)((float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)(float_64))((float_64)0.5 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)-0.25) + (float_64)(float_64)0.3333333333333333)))) * (float_64)(float_64)-1.4426950408889634)
	$0 = ((float_64)$21 + (float_64)(float_64)-1)
	$21 = ((float_64)$0 * (float_64)(float_64)1.4426950216293335)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$21 + (float_64)$13))) & (int_64)-4294967296)
	$20 = (float_64))($0) - $21)
	
.LABEL $label$19
	$1 = ((float_64)((float_64)(float_64))($1 - $12) * (float_64)$0) + (float_64)((float_64)(float_64))($13 - $20) * (float_64)$1
	$12 = (CASTING float_64)(int_64 ((int_64)$4 & (int_64)-4294967296))
	$21 = ((float_64)$12 * (float_64)$0)
	$0 = ((float_64)$21 + (float_64)$1)
	$4 = (CASTING int_64)(float_64 $0)
	$8 = (CASTING uint_32)(uint_64 $4)))
	$2 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( ((int_32)$2) < (int_32)[1083179008]) ){ goto $label$33 }
	if ( ((($2 + [-1083179008]) | $8) == 0) ){ goto $label$32 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$33
	if ( (($2 & [2147482624]) <= [1083231232]) ){ goto $label$30 }
	if ( ((($2 + [1064252416]) | $8) == 0) ){ goto $label$31 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$32
	$0 = (float_64)
	$12 = ((float_64)$1 + (float_64)(float_64)8.008566259537294e-17)
	if ( (((float_64)$12 <= (float_64)$0($0 - $21))) | (((float_64)$12 != (float_64)$12) | ((float_64)$0 != (float_64)$0))) ){ goto $label$30 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$31
	$0 = (float_64)
	if ( ((((float_64)$1 > (float_64)$0($0 - $21))) | (((float_64)$1 != (float_64)$1) | ((float_64)$0 != (float_64)$0))) == 0) ){ goto $label$29 }
	
.LABEL $label$30
	$8 = ($2 & [2147483647])
	if ( ($8 <= [1071644673]) ){ goto $label$35 }
	$6 = (uint_32($8 >> [20]) & [2047])
	$8 = (uint_32([1048576] >> (uint_32($8 >> [20]) + [-1022])) + $2)
	$5 = uint_32((($8 & [1048575]) | [1048576]) >> ([1043] - $6))
	$2 = ( ([0] - $5) ? $5 : ((int_32)$2 < (int_32)[0]) )
	$21 = (float_64))($21 - (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($8 & ((int_32)uint_32([1048575] >> ($6 + [-1023])) ^ (int_32)[-1]))) << (int_64)32)))
	goto $label$34 
	
.LABEL $label$35
	$2 = [0]
	
.LABEL $label$34
	$0 = (float_64)
	$0 = ((float_64)$1 * (float_64)$1)
	$21 = ((float_64)((float_64)(float_64))($1 - (float_64))($0 - $21)) * (float_64)(float_64)0.6931471805599453
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$1 + (float_64)$21)) & (int_64)-4294967296))
	$12 = ((float_64)$0 * (float_64)(float_64)0.6931471824645996)
	$1 = ((float_64)$12 + (float_64)$21 + (float_64)((float_64)$0 * (float_64)(float_64)-1.904654299957768e-09))
	$1 = (float_64)
	$4 = (CASTING int_64)(float_64 $1((float_64)1 - (float_64))((float_64))(((float_64)((float_64)$1)) * (float_64)$0($1 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)4.1381367970572385e-08) + (float_64)(float_64)-1.6533902205465252e-06)) + (float_64)(float_64)6.613756321437934e-05)) + (float_64)(float_64)-2.7777777777015593e-03)) + (float_64)(float_64)0.16666666666666602))))) / (float_64)((float_64)$0 + (float_64)(float_64)-2)
	$8 = ((CASTING uint_32)(uint_64 (uint_64)$4 - ((float_64)$0($21 - (float_64))($1 - $12))) + (float_64)((float_64)$1 * (float_64)$0))
	if ( ((int_32)int_32($8 - $1))))) >> (uint_64)(int_64)32)) + ($2 << [20]))) >> [20]) <= (int_32)[0]) ){ goto $label$36 }
	return ((float_64)$10 * (float_64)(CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)((int_64)$4 & (int_64)4294967295))))
	
.LABEL $label$36
	return ((float_64)$10 * (float_64)CALL scalbn($1, $2))
	
.LABEL $label$29
	return ((float_64)((float_64)$10 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$1
	return $21
}

int_32 .FUNC _ZN7campwar19parse_memo_level_upERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERy (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($3 & [1])
	$3 = *($1)
	if ( (( *($1 + [4]) ? uint_32($3 >> [1]) : $3 ) == 0) ){ goto $label$1 }
	$4 = CALL strtoll(( *($1 + [8]) ? ($1 + [1]) : $3 ), [0], [10])
	*($2) = $4
	return ((int_64)$4 != (int_64)0)
	
.LABEL $label$1
	return [0]
}

void .FUNC $65 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $238(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $244($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $240($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $240($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [448])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [448])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [448])
	CALL memcpy(($1 + [28]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [448])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [448])
	CALL memcpy(($1 + [56]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [88]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [448])
	CALL memcpy(($1 + [96]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [104]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [112]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [120]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [128]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [136]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [416])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $238([160])) + [96]) = [0]
	*($4 + [56]) = [0]
	*($4 + [120]) = (int_64)0
	*($4 + [128]) = (int_64)1397703940
	CALL eosio_assert([1], [512])
	$7 = (int_64)5459781
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [480])
	*($4 + [144]) = $0
	CALL $67(($8 + [32]), $4)
	*($4 + [148]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [148])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $68($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $240($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $61 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [240])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [288])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [352])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $240($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $240($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [92]))
}

void .FUNC $60 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	$7 = $8
	*([0] + [4]) = $8
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	*($1 + [8]) = *(*($3))
	*($1 + [80]) = (int_64)0
	$4 = *($1)
	if ( ((int_64)*(*($3)) != (int_64)1) ){ goto $label$1 }
	CALL eosio_assert([1], [512])
	$5 = (int_64)5459781
	$3 = [0]
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	
.LOOP $label$6:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$3 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	$6 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$6 = [0]
	
.LABEL $label$2
	CALL eosio_assert($6, [480])
	CALL eosio_assert(((int_64)*(($1 + [56])) == (int_64)1397703940), [880])
	$5 = ((int_64)*($1 + [48]) + (int_64)500000)
	*($1 + [48]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($1 + [48]) < (int_64)4611686018427387904), [960])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)29) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)30
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [992])
	$8 = $8
	$3 = ($8 + [-96])
	*([0] + [4]) = $3
	*($7 + [4]) = $3
	*($7) = $3
	*($7 + [8]) = ($8 + [-8])
	CALL $62($7, $1)
	CALL db_update_i64(*($1 + [92]), $2, $3, [88])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*([0] + [4]) = ($7 + [16])
}

int_32 .FUNC $63 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [40]) = (int_64)0
	*($0 + [24 align=4]) = (int_64)0
	*($0 + [48]) = (int_64)0
	*(($2 = ($0 + [56]))) = (int_64)1397703940
	CALL eosio_assert([1], [512])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [480])
	*(($2 = ($0 + [72]))) = (int_64)1397703940
	*($0 + [64]) = (int_64)0
	CALL eosio_assert([1], [512])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [480])
	return $0
}

int_32 .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [28]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZN7campwar22parse_memo_change_campERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERy (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($3 & [1])
	$3 = *($1)
	if ( (( *($1 + [4]) ? uint_32($3 >> [1]) : $3 ) == 0) ){ goto $label$1 }
	$4 = CALL strtoll(( *($1 + [8]) ? ($1 + [1]) : $3 ), [0], [10])
	*($2) = $4
	return ((int_64)$4 != (int_64)0)
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $229([7008], $0)
}

int_32 .FUNC $229 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $230($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [15408])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [1056])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [1056])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [1056])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [1056])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [1056])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $74($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [1056])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [1056])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $89(CALL $88($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

int_32 .FUNC $86 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $238([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $74($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = $1
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	CALL $90(($9 + [24]), ($9 + [16]))
	*([0] + [4]) = ($9 + [32])
	return $0
}

void .FUNC _ZN7campwar10changecampEyyN5eosio5assetE (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_64 $19
	int_64 $20
	int_32 $21
	$21 = (*([0] + [4]) - [240])
	*([0] + [4]) = $21
	*($21 + [56]) = $1
	*($21 + [48]) = $2
	$17 = [0]
	$9 = CALL db_lowerbound_i64(*($0 + [128]), *(($0 + [136])), (int_64)4982871454518345728, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$1 }
	$17 = CALL $78(($0 + [128]), $9)
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$17 != (int_32)[0]), [1264])
	CALL eosio_assert(*($17 + [8]), [1264])
	$16 = *(($0 + [72]))
	$18 = *(($0 + [76]))
	if ( ((int_32)$18 == (int_32)$16) ){ goto $label$2 }
	$17 = ($18 + [-24])
	$8 = ([0] - $16)
	
.LOOP $label$3:
	if ( ((int_64)*(*($17)) == (int_64)$1) ){ goto $label$2 }
	$18 = $17
	$9 = ($17 + [-24])
	$17 = $9
	if ( ((int_32)($9 + $8) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	$4 = ($0 + [48])
	if ( ((int_32)$18 == (int_32)$16) ){ goto $label$5 }
	$8 = *(($18 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [324]) == (int_32)$4), [592])
	*($21 + [44]) = $8
	*($21 + [40]) = $4
	$14 = (($21 + [40]) | [4])
	goto $label$4 
	
.LABEL $label$5
	$17 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$17 <= (int_32)[-1]) ){ goto $label$6 }
	$8 = CALL $50($4, $17)
	CALL eosio_assert(((int_32)*($8 + [324]) == (int_32)$4), [592])
	*($21 + [44]) = $8
	*($21 + [40]) = $4
	$14 = (($21 + [40]) | [4])
	goto $label$4 
	
.LABEL $label$6
	$8 = [0]
	*($21 + [44]) = [0]
	*($21 + [40]) = $4
	$14 = (($21 + [40]) | [4])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [1696])
	CALL eosio_assert(((int_64)*($8 + [8]) != (int_64)$2), [1728])
	$7 = *(($0 + [32]))
	$18 = *(($0 + [36]))
	if ( ((int_32)$18 == (int_32)$7) ){ goto $label$7 }
	$17 = ($18 + [-24])
	$16 = ([0] - $7)
	
.LOOP $label$8:
	if ( ((int_64)*(*($17)) == (int_64)$2) ){ goto $label$7 }
	$18 = $17
	$9 = ($17 + [-24])
	$17 = $9
	if ( ((int_32)($9 + $16) != (int_32)[-24]) ){ goto $label$8 }
	
.LABEL $label$7
	$5 = ($0 + [8])
	if ( ((int_32)$18 == (int_32)$7) ){ goto $label$10 }
	$15 = *(($18 + [-24]))
	CALL eosio_assert(((int_32)*($15 + [144]) == (int_32)$5), [592])
	goto $label$9 
	
.LABEL $label$10
	$15 = [0]
	$17 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)4730274944552796160, $2)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$9 }
	$15 = CALL $66($5, $17)
	CALL eosio_assert(((int_32)*($15 + [144]) == (int_32)$5), [592])
	
.LABEL $label$9
	CALL eosio_assert(((int_32)$15 != (int_32)[0]), [1760])
	*($21 + [32]) = [0]
	*($21 + [24]) = (int_64)0
	$9 = (*(($8 + [316])) - *($8 + [312]))
	$17 = int_32($9 >> [3])
	if ( ($17 == 0) ){ goto $label$12 }
	if ( ((uint_32)$17 >= (uint_32)[536870912]) ){ goto $label$11 }
	$16 = CALL $238($9)
	*(($21 + [32])) = ($16 + ($17 << [3]))
	*($21 + [24]) = $16
	*($21 + [28]) = $16
	$9 = *(($8 + [312]))
	$17 = (*(($8 + [316])) - $9)
	if ( ((int_32)$17 < (int_32)[1]) ){ goto $label$12 }
	CALL memcpy($16, $9, $17)
	*($21 + [28]) = ($16 + $17)
	if ( ($17 == 0) ){ goto $label$12 }
	$6 = ($0 + [88])
	$10 = ($0 + [112])
	$11 = ($0 + [116])
	$12 = ($0 + [96])
	
.LOOP $label$13:
	$2 = *($16)
	$7 = *($10)
	$18 = *($11)
	if ( ((int_32)$18 == (int_32)$7) ){ goto $label$14 }
	$17 = ($18 + [-24])
	$8 = ([0] - $7)
	
.LOOP $label$15:
	if ( ((int_64)*(*($17)) == (int_64)$2) ){ goto $label$14 }
	$18 = $17
	$9 = ($17 + [-24])
	$17 = $9
	if ( ((int_32)($9 + $8) != (int_32)[-24]) ){ goto $label$15 }
	
.LABEL $label$14
	if ( ((int_32)$18 == (int_32)$7) ){ goto $label$17 }
	$17 = *(($18 + [-24]))
	CALL eosio_assert(((int_32)*($17 + [88]) == (int_32)$6), [592])
	goto $label$16 
	
.LABEL $label$17
	$17 = [0]
	$9 = CALL db_find_i64(*($6), *($12), (int_64)7396599438002618368, $2)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$16 }
	$17 = CALL $57($6, $9)
	CALL eosio_assert(((int_32)*($17 + [88]) == (int_32)$6), [592])
	
.LABEL $label$16
	CALL eosio_assert(((int_32)$17 != (int_32)[0]), [656])
	$2 = *($0)
	*($21 + [80]) = ($21 + [48])
	CALL $93($6, $17, $2, ($21 + [80]))
	$16 = ($16 + [8])
	if ( ((int_32)$16 != (int_32)*($21 + [28])) ){ goto $label$13 }
	$8 = *($14)
	
.LABEL $label$12
	$20 = *($8 + [56])
	$13 = *($8 + [304])
	$2 = *($8 + [8])
	$1 = *($8 + [288])
	$19 = *($8 + [280])
	$16 = *(($0 + [32]))
	$18 = *(($0 + [36]))
	if ( ((int_32)$18 == (int_32)$16) ){ goto $label$18 }
	$17 = ($18 + [-24])
	$8 = ([0] - $16)
	
.LOOP $label$19:
	if ( ((int_64)*(*($17)) == (int_64)$2) ){ goto $label$18 }
	$18 = $17
	$9 = ($17 + [-24])
	$17 = $9
	if ( ((int_32)($9 + $8) != (int_32)[-24]) ){ goto $label$19 }
	
.LABEL $label$18
	$20 = ((int_64)$13 * (int_64)$20)
	if ( ((int_32)$18 == (int_32)$16) ){ goto $label$21 }
	$17 = *(($18 + [-24]))
	CALL eosio_assert(((int_32)*($17 + [144]) == (int_32)$5), [592])
	goto $label$20 
	
.LABEL $label$21
	$17 = [0]
	$9 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)4730274944552796160, $2)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$20 }
	$17 = CALL $66($5, $9)
	CALL eosio_assert(((int_32)*($17 + [144]) == (int_32)$5), [592])
	
.LABEL $label$20
	CALL eosio_assert(((int_32)$17 != (int_32)[0]), [1760])
	$13 = *($0)
	CALL eosio_assert(((int_32)*($17 + [144]) == (int_32)$5), [768])
	$9 = ($0 + [8])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$4()), [816])
	*($17 + [136]) = (int_64))(*($17 + [136]) - $20)
	*($17 + [104]) = (int_64))(*($17 + [104]) - (CASTING uint_64)(uint_32 int_32((*($21 + [28]) - *($21 + [24])) >> [3])))
	$2 = *($17)
	CALL eosio_assert([1], [992])
	$18 = (($21 + [80]) + [136])
	*($21 + [8]) = $18
	*($21 + [4]) = ($21 + [80])
	*($21) = ($21 + [80])
	CALL $80($21, $17)
	CALL db_update_i64(*($17 + [148]), $13, ($21 + [80]), [136])
	$17 = ($0 + [24])
	if ( (uint_64)($2 <= *($17)) ){ goto $label$22 }
	*($17) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$22
	$20 = *($0)
	CALL eosio_assert(((int_32)*($15 + [144]) == (int_32)$5), [768])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$4()), [816])
	*($15 + [104]) = ((int_64)(CASTING uint_64)(uint_32 int_32((*($21 + [28]) - *($21 + [24])) >> [3])) + (int_64)*($15 + [104]))
	$2 = *($15)
	CALL eosio_assert([1], [992])
	*($21 + [8]) = $18
	*($21 + [4]) = ($21 + [80])
	*($21) = ($21 + [80])
	CALL $80($21, $15)
	CALL db_update_i64(*($15 + [148]), $20, ($21 + [80]), [136])
	if ( (uint_64)($2 <= *($17)) ){ goto $label$23 }
	*(($0 + [24])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$23
	$2 = *(*($14) + [8])
	$16 = *(($0 + [592]))
	$18 = *(($0 + [596]))
	if ( ((int_32)$18 == (int_32)$16) ){ goto $label$24 }
	$17 = ($18 + [-24])
	$8 = ([0] - $16)
	
.LOOP $label$25:
	if ( ((int_64)*(*($17)) == (int_64)$2) ){ goto $label$24 }
	$18 = $17
	$9 = ($17 + [-24])
	$17 = $9
	if ( ((int_32)($9 + $8) != (int_32)[-24]) ){ goto $label$25 }
	
.LABEL $label$24
	$9 = ($0 + [568])
	if ( ((int_32)$18 == (int_32)$16) ){ goto $label$27 }
	$17 = *(($18 + [-24]))
	CALL eosio_assert(((int_32)*($17 + [32]) == (int_32)$9), [592])
	goto $label$26 
	
.LABEL $label$27
	$17 = [0]
	$18 = CALL db_find_i64(*(($0 + [568])), *(($0 + [576])), (int_64)4730282973792829440, $2)
	if ( ((int_32)$18 < (int_32)[0]) ){ goto $label$26 }
	$17 = CALL $92($9, $18)
	CALL eosio_assert(((int_32)*($17 + [32]) == (int_32)$9), [592])
	
.LABEL $label$26
	CALL eosio_assert(((int_32)$17 != (int_32)[0]), [1264])
	CALL eosio_assert(((uint_64)$19 <= (uint_64)*($17 + [8])), [1792])
	CALL eosio_assert(((uint_64)$1 <= (uint_64)*($17 + [16])), [1840])
	$20 = *($0)
	CALL eosio_assert(((int_32)*($17 + [32]) == (int_32)$9), [768])
	CALL eosio_assert(((int_64)*(($0 + [568])) == (int_64)CALL $fimport$4()), [816])
	*($17 + [8]) = (int_64))(*($17 + [8]) - $19)
	*($17 + [16]) = (int_64))(*($17 + [16]) - $1)
	$2 = *($17)
	CALL eosio_assert([1], [992])
	CALL eosio_assert([1], [1056])
	CALL memcpy(($21 + [80]), $17, [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy((($21 + [80]) | [8]), ($17 + [8]), [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy((($21 + [80]) + [16]), ($17 + [16]), [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy((($21 + [80]) + [24]), ($17 + [24]), [8])
	CALL db_update_i64(*($17 + [36]), $20, ($21 + [80]), [32])
	$17 = ($0 + [584])
	if ( (uint_64)($2 <= *($17)) ){ goto $label$28 }
	*($17) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$28
	$17 = *($14)
	if ( ((int_64)*($17 + [56]) <= (int_64)0) ){ goto $label$29 }
	$2 = *($21 + [56])
	$16 = *(($0 + [432]))
	$18 = *(($0 + [436]))
	if ( ((int_32)$18 == (int_32)$16) ){ goto $label$30 }
	$17 = ($18 + [-24])
	$8 = ([0] - $16)
	
.LOOP $label$31:
	if ( ((int_64)*(*($17)) == (int_64)$2) ){ goto $label$30 }
	$18 = $17
	$9 = ($17 + [-24])
	$17 = $9
	if ( ((int_32)($9 + $8) != (int_32)[-24]) ){ goto $label$31 }
	
.LABEL $label$30
	$9 = ($0 + [408])
	if ( ((int_32)$18 == (int_32)$16) ){ goto $label$35 }
	$17 = *(($18 + [-24]))
	CALL eosio_assert(((int_32)*($17 + [32]) == (int_32)$9), [592])
	if ( $17 ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$35
	$17 = CALL db_find_i64(*(($0 + [408])), *(($0 + [416])), (int_64)-5001342326447013888, $2)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$33 }
	$17 = CALL $94($9, $17)
	CALL eosio_assert(((int_32)*($17 + [32]) == (int_32)$9), [592])
	
.LABEL $label$34
	$2 = *($0)
	*($21 + [80]) = ($21 + [40])
	CALL $97($9, $17, $2, ($21 + [80]))
	goto $label$32 
	
.LABEL $label$33
	$2 = *($0)
	*($21 + [68]) = ($21 + [40])
	*($21 + [64]) = ($21 + [56])
	*($21) = $2
	CALL eosio_assert(((int_64)*(($0 + [408])) == (int_64)CALL $fimport$4()), [1888])
	*($21 + [80]) = $9
	*($21 + [84]) = ($21 + [64])
	*($21 + [88]) = $21
	*(($18 = CALL $238([48])) + [16]) = (int_64)0
	*($18 + [8]) = [0]
	*($18 + [24]) = (int_64)1397703940
	CALL eosio_assert([1], [512])
	$2 = (int_64)5459781
	$17 = [0]
	
.LOOP $label$38:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$37 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$39 }
	
.LOOP $label$40:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$37 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$40 }
	
.LABEL $label$39
	$8 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$38 }
	goto $label$36 
	
.LABEL $label$37
	$8 = [0]
	
.LABEL $label$36
	CALL eosio_assert($8, [480])
	*($18 + [32]) = $9
	CALL $95(($21 + [80]), $18)
	*($21 + [232]) = $18
	$2 = *($18)
	*($21 + [80]) = $2
	$9 = *($18 + [36])
	*($21 + [228]) = $9
	$8 = ($0 + [436])
	$17 = *($8)
	if ( ((uint_32)$17 >= (uint_32)*(($0 + [440]))) ){ goto $label$42 }
	*($17 + [8]) = $2
	*($17 + [16]) = $9
	*($21 + [232]) = [0]
	*($17) = $18
	*($8) = ($17 + [24])
	goto $label$41 
	
.LABEL $label$42
	CALL $96(($0 + [432]), ($21 + [232]), ($21 + [80]), ($21 + [228]))
	
.LABEL $label$41
	$17 = *($21 + [232])
	*($21 + [232]) = [0]
	if ( ($17 == 0) ){ goto $label$32 }
	CALL $240($17)
	
.LABEL $label$32
	$2 = CALL current_time()
	*(($21 + [108])) = [0]
	*(($21 + [112])) = [0]
	*($21 + [92]) = [0]
	*($21 + [96]) = [0]
	*($21 + [100]) = [0]
	*($21 + [104]) = [0]
	*($21 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$2 / (uint_64)(int_64)1000000)) + [60])
	*($21 + [116]) = [0]
	*(($21 + [120])) = [0]
	*(($21 + [124])) = [0]
	*($21 + [128]) = [0]
	*(($21 + [132])) = [0]
	*(($21 + [136])) = [0]
	$18 = ($21 + [116])
	$13 = *($0)
	$2 = (int_64)0
	$19 = (int_64)59
	$17 = [1632]
	$20 = (int_64)0
	
.LOOP $label$43:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$48 }
	$9 = *($17)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$47 }
	$9 = ($9 + [165])
	goto $label$46 
	
.LABEL $label$48
	$1 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$47
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$46
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$45
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$19 & (int_64)4294967295))
	
.LABEL $label$44
	$17 = ($17 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$20 = ((int_64)$1 | (int_64)$20)
	$19 = ((int_64)$19 + (int_64)-5)
	if ( ((int_64)$19 != (int_64)-6) ){ goto $label$43 }
	*($21 + [8]) = $20
	*($21) = $13
	$2 = (int_64)0
	$19 = (int_64)59
	$17 = [1952]
	$20 = (int_64)0
	
.LOOP $label$49:
	if ( ((uint_64)$2 > (uint_64)(int_64)8) ){ goto $label$54 }
	$9 = *($17)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$53 }
	$9 = ($9 + [165])
	goto $label$52 
	
.LABEL $label$54
	$1 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$53
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$52
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$51
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$19 & (int_64)4294967295))
	
.LABEL $label$50
	$17 = ($17 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$20 = ((int_64)$1 | (int_64)$20)
	$19 = ((int_64)$19 + (int_64)-5)
	if ( ((int_64)$19 != (int_64)-6) ){ goto $label$49 }
	*($21 + [64]) = $20
	CALL $98($18, $21, $0, ($21 + [64]), ($21 + [56]))
	$2 = *($21 + [56])
	*(($21 + [100])) = [54000]
	*($21 + [8]) = (int_64)0
	*($21) = $2
	CALL cancel_deferred($21)
	*($21 + [8]) = (int_64)0
	*($21) = *($21 + [56])
	$2 = *($0)
	CALL $99(($21 + [64]), ($21 + [80]))
	$17 = *($21 + [64])
	CALL send_deferred($21, $2, $17, (*($21 + [68]) - $17), [1])
	$17 = *($21 + [64])
	if ( ($17 == 0) ){ goto $label$55 }
	*($21 + [68]) = $17
	CALL $240($17)
	
.LABEL $label$55
	CALL $100(($21 + [80]))
	$17 = *($14)
	
.LABEL $label$29
	$2 = *($0)
	*($21 + [80]) = ($21 + [48])
	CALL $101($4, $17, $2, ($21 + [80]))
	$17 = *($21 + [24])
	if ( ($17 == 0) ){ goto $label$56 }
	*($21 + [28]) = $17
	CALL $240($17)
	
.LABEL $label$56
	*([0] + [4]) = ($21 + [240])
	return (unreachable)
	
.LABEL $label$11
	CALL $244(($21 + [24]))
}

void .FUNC _ZN7campwar21change_camp_use_fightEyyN5eosio5assetE (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [176])
	*([0] + [4]) = $11
	CALL eosio_assert(((int_64)*($3) > (int_64)299999999), [1584])
	*(($6 = (($11 + [144]) + [8]))) = *(($3 + [8]))
	$7 = *($3)
	*((($11 + [8]) + [12])) = *((($11 + [144]) + [12]))
	*((($11 + [8]) + [8])) = *($6)
	*($11 + [144]) = $7
	*($11 + [12]) = *($11 + [148])
	*($11 + [8]) = *($11 + [144])
	CALL _ZN7campwar10changecampEyyN5eosio5assetE($0, $1, $2, ($11 + [8]))
	$9 = *($0)
	$1 = (int_64)0
	$7 = (int_64)59
	$6 = [1632]
	$8 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$6 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$4 = ($4 + [165])
	goto $label$4 
	
.LABEL $label$6
	$2 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$8 = ((int_64)$2 | (int_64)$8)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	*($11 + [96]) = $8
	*($11 + [88]) = $9
	$1 = (int_64)0
	$2 = (int_64)59
	$6 = [144]
	$8 = (int_64)0
	
.LOOP $label$7:
	$7 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$8 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$4 = ($4 + [165])
	goto $label$9 
	
.LABEL $label$10
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$8
	$6 = ($6 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$8 = ((int_64)$7 | (int_64)$8)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$7 }
	$1 = (int_64)0
	$7 = (int_64)59
	$6 = [112]
	$9 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$16 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$4 = ($4 + [165])
	goto $label$14 
	
.LABEL $label$16
	$2 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$12
	$6 = ($6 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$9 = ((int_64)$2 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$11 }
	$1 = (int_64)0
	$2 = (int_64)59
	$6 = [1648]
	$10 = (int_64)0
	
.LOOP $label$17:
	$7 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$18 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$4 = ($4 + [165])
	goto $label$19 
	
.LABEL $label$20
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$18
	$6 = ($6 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$10 = ((int_64)$7 | (int_64)$10)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$17 }
	*(($11 + [32])) = [0]
	*($11 + [24]) = (int_64)0
	$6 = CALL strlen([1664])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$21 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$24 }
	*($11 + [24]) = ($6 << [1])
	$4 = (($11 + [24]) | [1])
	if ( $6 ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	$5 = (($6 + [16]) & [-16])
	$4 = CALL $238($5)
	*($11 + [24]) = ($5 | [1])
	*($11 + [32]) = $4
	*($11 + [28]) = $6
	
.LABEL $label$23
	CALL memcpy($4, [1664], $6)
	
.LABEL $label$22
	*(($4 + $6)) = [0]
	*(($11 + [68])) = *(($3 + [12]))
	*(($11 + [64])) = *(($3 + [8]))
	*(($11 + [60])) = *(($3 + [4]))
	*($11 + [48]) = $10
	*($11 + [40]) = *($0)
	*($11 + [56]) = *($3)
	$6 = (($11 + [24]) + [8])
	*(($11 + [80])) = *($6)
	*($11 + [72]) = *($11 + [24])
	*($11 + [24]) = [0]
	*($11 + [28]) = [0]
	*($6) = [0]
	$6 = CALL $86(($11 + [104]), ($11 + [88]), $8, $9, ($11 + [40]))
	CALL $87(($11 + [160]), $6)
	$4 = *($11 + [160])
	CALL send_inline($4, (*($11 + [164]) - $4))
	$4 = *($11 + [160])
	if ( ($4 == 0) ){ goto $label$25 }
	*($11 + [164]) = $4
	CALL $240($4)
	
.LABEL $label$25
	$4 = *($6 + [28])
	if ( ($4 == 0) ){ goto $label$26 }
	*(($6 + [32])) = $4
	CALL $240($4)
	
.LABEL $label$26
	$4 = *($6 + [16])
	if ( ($4 == 0) ){ goto $label$27 }
	*(($6 + [20])) = $4
	CALL $240($4)
	
.LABEL $label$27
	if ( ((*(($11 + [72])) & [1]) == 0) ){ goto $label$28 }
	CALL $240(*(($11 + [80])))
	
.LABEL $label$28
	if ( ((*($11 + [24]) & [1]) == 0) ){ goto $label$29 }
	CALL $240(*(($11 + [32])))
	
.LABEL $label$29
	*([0] + [4]) = ($11 + [176])
	return (unreachable)
	
.LABEL $label$21
	CALL $242(($11 + [24]))
}

void .FUNC _ZN7campwar20unlock_gun_use_fightEyyN5eosio5assetE (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [144])
	*([0] + [4]) = $13
	CALL eosio_assert(((int_64)*($3) > (int_64)299999999), [2080])
	CALL _ZN7campwar22validate_player_activeEy($0, $1)
	$8 = [0]
	$6 = CALL db_lowerbound_i64(*($0 + [128]), *(($0 + [136])), (int_64)4982871454518345728, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $78(($0 + [128]), $6)
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [2128])
	CALL eosio_assert(*($8 + [8]), [2160])
	$4 = *(($0 + [72]))
	$7 = *(($0 + [76]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$2 }
	$8 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$3:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$2 }
	$7 = $8
	$6 = ($8 + [-24])
	$8 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	$6 = ($0 + [48])
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$8 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [324]) == (int_32)$6), [592])
	goto $label$4 
	
.LABEL $label$5
	$8 = [0]
	$7 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$8 = CALL $50($6, $7)
	CALL eosio_assert(((int_32)*($8 + [324]) == (int_32)$6), [592])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [2176])
	$4 = *(($0 + [112]))
	$7 = *(($0 + [116]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$6 }
	$8 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$6 }
	$7 = $8
	$6 = ($8 + [-24])
	$8 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$6 = ($0 + [88])
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$9 }
	$8 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [88]) == (int_32)$6), [592])
	goto $label$8 
	
.LABEL $label$9
	$8 = [0]
	$7 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)7396599438002618368, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$8 }
	$8 = CALL $57($6, $7)
	CALL eosio_assert(((int_32)*($8 + [88]) == (int_32)$6), [592])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [656])
	CALL eosio_assert((int_64)(*($8 + [8]) == 0), [2208])
	CALL eosio_assert(((int_64)*($8 + [40]) == (int_64)$1), [2240])
	CALL eosio_assert(((uint_64)*($8 + [16]) > (uint_64)(int_64)29), [2272])
	CALL _ZN7campwar25validate_gun_is_availableEy($0, $2)
	CALL $111($6, $8, *($0))
	$11 = *($0)
	$1 = (int_64)0
	$9 = (int_64)59
	$8 = [1632]
	$10 = (int_64)0
	
.LOOP $label$10:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$15 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$14 }
	$6 = ($6 + [165])
	goto $label$13 
	
.LABEL $label$15
	$2 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$14
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$13
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$12
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$11
	$8 = ($8 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$10 = ((int_64)$2 | (int_64)$10)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$10 }
	*($13 + [80]) = $10
	*($13 + [72]) = $11
	$1 = (int_64)0
	$2 = (int_64)59
	$8 = [144]
	$10 = (int_64)0
	
.LOOP $label$16:
	$9 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$17 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$6 = ($6 + [165])
	goto $label$18 
	
.LABEL $label$19
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$17
	$8 = ($8 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$10 = ((int_64)$9 | (int_64)$10)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$16 }
	$1 = (int_64)0
	$9 = (int_64)59
	$8 = [112]
	$11 = (int_64)0
	
.LOOP $label$20:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$25 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$6 = ($6 + [165])
	goto $label$23 
	
.LABEL $label$25
	$2 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$24
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$23
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$22
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$21
	$8 = ($8 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$11 = ((int_64)$2 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$20 }
	$1 = (int_64)0
	$2 = (int_64)59
	$8 = [1648]
	$12 = (int_64)0
	
.LOOP $label$26:
	$9 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$27 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$29 }
	$6 = ($6 + [165])
	goto $label$28 
	
.LABEL $label$29
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$28
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$27
	$8 = ($8 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$12 = ((int_64)$9 | (int_64)$12)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$26 }
	*(($13 + [16])) = [0]
	*($13 + [8]) = (int_64)0
	$8 = CALL strlen([2320])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$30 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$33 }
	*($13 + [8]) = ($8 << [1])
	$6 = (($13 + [8]) | [1])
	if ( $8 ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$33
	$7 = (($8 + [16]) & [-16])
	$6 = CALL $238($7)
	*($13 + [8]) = ($7 | [1])
	*($13 + [16]) = $6
	*($13 + [12]) = $8
	
.LABEL $label$32
	CALL memcpy($6, [2320], $8)
	
.LABEL $label$31
	*(($6 + $8)) = [0]
	*(($13 + [52])) = *(($3 + [12]))
	*(($13 + [48])) = *(($3 + [8]))
	*(($13 + [44])) = *(($3 + [4]))
	*($13 + [32]) = $12
	*($13 + [24]) = *($0)
	*($13 + [40]) = *($3)
	$8 = (($13 + [8]) + [8])
	*(($13 + [64])) = *($8)
	*($13 + [56]) = *($13 + [8])
	*($13 + [8]) = [0]
	*($13 + [12]) = [0]
	*($8) = [0]
	$8 = CALL $86(($13 + [88]), ($13 + [72]), $10, $11, ($13 + [24]))
	CALL $87(($13 + [128]), $8)
	$6 = *($13 + [128])
	CALL send_inline($6, (*($13 + [132]) - $6))
	$6 = *($13 + [128])
	if ( ($6 == 0) ){ goto $label$34 }
	*($13 + [132]) = $6
	CALL $240($6)
	
.LABEL $label$34
	$6 = *($8 + [28])
	if ( ($6 == 0) ){ goto $label$35 }
	*(($8 + [32])) = $6
	CALL $240($6)
	
.LABEL $label$35
	$6 = *($8 + [16])
	if ( ($6 == 0) ){ goto $label$36 }
	*(($8 + [20])) = $6
	CALL $240($6)
	
.LABEL $label$36
	if ( ((*(($13 + [56])) & [1]) == 0) ){ goto $label$37 }
	CALL $240(*(($13 + [64])))
	
.LABEL $label$37
	if ( ((*($13 + [8]) & [1]) == 0) ){ goto $label$38 }
	CALL $240(*(($13 + [16])))
	
.LABEL $label$38
	*([0] + [4]) = ($13 + [144])
	return (unreachable)
	
.LABEL $label$30
	CALL $242(($13 + [8]))
}

void .FUNC _ZN7campwar4healEN5eosio4nameEyyNS0_5assetE (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	$15 = (*([0] + [4]) - [160])
	*([0] + [4]) = $15
	*($15 + [136]) = $2
	CALL eosio_assert(CALL $fimport$16($1), [2368])
	CALL eosio_assert((CASTING uint_32)(uint_64 $2), [2400])
	CALL eosio_assert(((uint_64)*($4) >= (uint_64)((int_64)$2 * (int_64)30000)), [2448])
	CALL _ZN7campwar22validate_player_activeEy($0, $1)
	$11 = [0]
	$8 = CALL db_lowerbound_i64(*($0 + [128]), *(($0 + [136])), (int_64)4982871454518345728, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$11 = CALL $78(($0 + [128]), $8)
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [2128])
	CALL eosio_assert(*($11 + [8]), [2160])
	$10 = *(($0 + [72]))
	$9 = *(($0 + [76]))
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$2 }
	$11 = ($9 + [-24])
	$6 = ([0] - $10)
	
.LOOP $label$3:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$2 }
	$9 = $11
	$8 = ($11 + [-24])
	$11 = $8
	if ( ((int_32)($8 + $6) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	$5 = ($0 + [48])
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$5 }
	$10 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [324]) == (int_32)$5), [592])
	goto $label$4 
	
.LABEL $label$5
	$10 = [0]
	$11 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$4 }
	$10 = CALL $50($5, $11)
	CALL eosio_assert(((int_32)*($10 + [324]) == (int_32)$5), [592])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [1232])
	$7 = *(($0 + [32]))
	$9 = *(($0 + [36]))
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$6 }
	$11 = ($9 + [-24])
	$6 = ([0] - $7)
	
.LOOP $label$7:
	if ( ((int_64)*(*($11)) == (int_64)$3) ){ goto $label$6 }
	$9 = $11
	$8 = ($11 + [-24])
	$11 = $8
	if ( ((int_32)($8 + $6) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$8 = ($0 + [8])
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$9 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [144]) == (int_32)$8), [592])
	goto $label$8 
	
.LABEL $label$9
	$11 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)4730274944552796160, $3)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$10 }
	$11 = CALL $66($8, $11)
	CALL eosio_assert(((int_32)*($11 + [144]) == (int_32)$8), [592])
	goto $label$8 
	
.LABEL $label$10
	$11 = [0]
	
.LABEL $label$8
	*($15 + [132]) = $11
	*($15 + [128]) = $8
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [1760])
	CALL eosio_assert(((int_64)*($10 + [8]) == (int_64)$3), [2512])
	CALL eosio_assert(((int_64)*($11 + [32]) < (int_64)*($11 + [24])), [2544])
	CALL eosio_assert(((int_64)*($11 + [32]) > (int_64)0), [2576])
	CALL _ZN7campwar10updatecampEv($0)
	CALL eosio_assert(((uint_64)*($11 + [72]) >= (uint_64)$2), [2624])
	*($15 + [120]) = ((int_64)$2 * (int_64)25)
	$1 = *($0)
	*($15 + [20]) = ($15 + [120])
	*($15 + [16]) = ($15 + [128])
	*($15 + [24]) = ($15 + [136])
	CALL $112($8, $11, $1, ($15 + [16]))
	$1 = *($0)
	*($15 + [20]) = $4
	*($15 + [16]) = ($15 + [120])
	CALL $113($5, $10, $1, ($15 + [16]))
	$10 = *(($0 + [592]))
	$9 = *(($0 + [596]))
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$11 }
	$11 = ($9 + [-24])
	$6 = ([0] - $10)
	
.LOOP $label$12:
	if ( ((int_64)*(*($11)) == (int_64)$3) ){ goto $label$11 }
	$9 = $11
	$8 = ($11 + [-24])
	$11 = $8
	if ( ((int_32)($8 + $6) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	$8 = ($0 + [568])
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$15 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [32]) == (int_32)$8), [592])
	if ( $11 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$11 = CALL db_find_i64(*(($0 + [568])), *(($0 + [576])), (int_64)4730282973792829440, $3)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$13 }
	$11 = CALL $92($8, $11)
	CALL eosio_assert(((int_32)*($11 + [32]) == (int_32)$8), [592])
	
.LABEL $label$14
	$1 = *($0)
	CALL eosio_assert(((int_32)*($11 + [32]) == (int_32)$8), [768])
	CALL eosio_assert(((int_64)*(($0 + [568])) == (int_64)CALL $fimport$4()), [816])
	*($11 + [16]) = ((int_64)*($11 + [16]) + (int_64)*($15 + [120]))
	$3 = *($11)
	CALL eosio_assert([1], [992])
	CALL eosio_assert([1], [1056])
	CALL memcpy(($15 + [16]), $11, [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy((($15 + [16]) | [8]), ($11 + [8]), [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy((($15 + [16]) + [16]), ($11 + [16]), [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy((($15 + [16]) + [24]), ($11 + [24]), [8])
	CALL db_update_i64(*($11 + [36]), $1, ($15 + [16]), [32])
	$11 = ($0 + [584])
	if ( (uint_64)($3 <= *($11)) ){ goto $label$13 }
	*($11) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	$13 = *($0)
	$3 = (int_64)0
	$2 = (int_64)59
	$11 = [1632]
	$12 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$3 > (uint_64)(int_64)5) ){ goto $label$21 }
	$8 = *($11)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$8 = ($8 + [165])
	goto $label$19 
	
.LABEL $label$21
	$1 = (int_64)0
	if ( ((uint_64)$3 <= (uint_64)(int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$17
	$11 = ($11 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	$12 = ((int_64)$1 | (int_64)$12)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$16 }
	*($15 + [72]) = $12
	*($15 + [64]) = $13
	$3 = (int_64)0
	$1 = (int_64)59
	$11 = [144]
	$12 = (int_64)0
	
.LOOP $label$22:
	$2 = (int_64)0
	if ( ((uint_64)$3 > (uint_64)(int_64)11) ){ goto $label$23 }
	$8 = *($11)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$25 }
	$8 = ($8 + [165])
	goto $label$24 
	
.LABEL $label$25
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$24
	$2 = ((int_64)(CASTING uint_64)(uint_32 ($8 & [31])) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$23
	$11 = ($11 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	$12 = ((int_64)$2 | (int_64)$12)
	$1 = ((int_64)$1 + (int_64)-5)
	if ( ((int_64)$1 != (int_64)-6) ){ goto $label$22 }
	$3 = (int_64)0
	$2 = (int_64)59
	$11 = [112]
	$13 = (int_64)0
	
.LOOP $label$26:
	if ( ((uint_64)$3 > (uint_64)(int_64)7) ){ goto $label$31 }
	$8 = *($11)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$30 }
	$8 = ($8 + [165])
	goto $label$29 
	
.LABEL $label$31
	$1 = (int_64)0
	if ( ((uint_64)$3 <= (uint_64)(int_64)11) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$30
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$29
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$28
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$27
	$11 = ($11 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	$13 = ((int_64)$1 | (int_64)$13)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$26 }
	$3 = (int_64)0
	$1 = (int_64)59
	$11 = [1648]
	$14 = (int_64)0
	
.LOOP $label$32:
	$2 = (int_64)0
	if ( ((uint_64)$3 > (uint_64)(int_64)11) ){ goto $label$33 }
	$8 = *($11)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$35 }
	$8 = ($8 + [165])
	goto $label$34 
	
.LABEL $label$35
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$34
	$2 = ((int_64)(CASTING uint_64)(uint_32 ($8 & [31])) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$33
	$11 = ($11 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	$14 = ((int_64)$2 | (int_64)$14)
	$1 = ((int_64)$1 + (int_64)-5)
	if ( ((int_64)$1 != (int_64)-6) ){ goto $label$32 }
	*(($15 + [8])) = [0]
	*($15) = (int_64)0
	$11 = CALL strlen([2656])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$36 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$39 }
	*($15) = ($11 << [1])
	$8 = ($15 | [1])
	if ( $11 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$39
	$9 = (($11 + [16]) & [-16])
	$8 = CALL $238($9)
	*($15) = ($9 | [1])
	*($15 + [8]) = $8
	*($15 + [4]) = $11
	
.LABEL $label$38
	CALL memcpy($8, [2656], $11)
	
.LABEL $label$37
	*(($8 + $11)) = [0]
	*(($15 + [44])) = *(($4 + [12]))
	*(($15 + [40])) = *(($4 + [8]))
	*(($15 + [36])) = *(($4 + [4]))
	*($15 + [24]) = $14
	*($15 + [16]) = *($0)
	*($15 + [32]) = *($4)
	$11 = ($15 + [8])
	*(($15 + [56])) = *($11)
	*($15 + [48]) = *($15)
	*($15) = [0]
	*($15 + [4]) = [0]
	*($11) = [0]
	$11 = CALL $86(($15 + [80]), ($15 + [64]), $12, $13, ($15 + [16]))
	CALL $87(($15 + [144]), $11)
	$8 = *($15 + [144])
	CALL send_inline($8, (*($15 + [148]) - $8))
	$8 = *($15 + [144])
	if ( ($8 == 0) ){ goto $label$40 }
	*($15 + [148]) = $8
	CALL $240($8)
	
.LABEL $label$40
	$8 = *($11 + [28])
	if ( ($8 == 0) ){ goto $label$41 }
	*(($11 + [32])) = $8
	CALL $240($8)
	
.LABEL $label$41
	$8 = *($11 + [16])
	if ( ($8 == 0) ){ goto $label$42 }
	*(($11 + [20])) = $8
	CALL $240($8)
	
.LABEL $label$42
	if ( ((*(($15 + [48])) & [1]) == 0) ){ goto $label$43 }
	CALL $240(*(($15 + [56])))
	
.LABEL $label$43
	if ( ((*($15) & [1]) == 0) ){ goto $label$44 }
	CALL $240(*(($15 + [8])))
	
.LABEL $label$44
	*([0] + [4]) = ($15 + [160])
	return (unreachable)
	
.LABEL $label$36
	CALL $242($15)
}

int_32 .FUNC _ZN7campwar15parse_memo_healERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERyS9_ (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	$4 = *($1)
	if ( (( *($1 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ) == 0) ){ goto $label$6 }
	$7 = [0]
	*($8 + [32]) = [0]
	*($8 + [24]) = (int_64)0
	$4 = CALL strlen([2688])
	*($8 + [16]) = $4
	*($8 + [8]) = [0]
	if ( ((uint_32)$4 >= (uint_32)[9]) ){ goto $label$5 }
	$6 = ($8 + [8])
	if ( $4 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$7 = [0]
	goto $label$2 
	
.LABEL $label$5
	$6 = CALL $239($4)
	*($8 + [8]) = $6
	
.LABEL $label$4
	CALL memmove($6, [2688], $4)
	$7 = *(($8 + [16]))
	
.LABEL $label$3
	CALL $232($6, ($6 + $7), ($8 + [40]))
	CALL $114(($8 + [24]), $1, ($8 + [8]), [1])
	if ( (*(($8 + [16])) <= [9]) ){ goto $label$7 }
	$1 = *($8 + [8])
	if ( ($1 == 0) ){ goto $label$7 }
	CALL $241($1)
	
.LABEL $label$7
	$7 = [0]
	$6 = *($8 + [24])
	if ( (((int_32)(*($8 + [28]) - $6) / (int_32)[12]) <= [2]) ){ goto $label$8 }
	if ( (*($6) & [1]) ){ goto $label$10 }
	$1 = ($6 + [1])
	goto $label$9 
	
.LABEL $label$10
	$1 = *($6 + [8])
	
.LABEL $label$9
	$7 = [0]
	$5 = CALL strtoll($1, [0], [10])
	*($2) = $5
	if ( (int_64)($5 == 0) ){ goto $label$11 }
	$1 = *($8 + [24])
	if ( ((uint_32)((int_32)(*($8 + [28]) - $1) / (int_32)[12]) <= (uint_32)[1]) ){ goto $label$1 }
	if ( (*($1 + [12]) & [1]) ){ goto $label$13 }
	$1 = (($1 + [12]) + [1])
	goto $label$12 
	
.LABEL $label$13
	$1 = *(($1 + [20]))
	
.LABEL $label$12
	$5 = CALL strtoll($1, [0], [10])
	*($3) = $5
	$7 = ((int_64)$5 != (int_64)0)
	
.LABEL $label$11
	$6 = *($8 + [24])
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$2 }
	$1 = *($8 + [28])
	if ( ((int_32)$1 == (int_32)$6) ){ goto $label$15 }
	$4 = ([0] - $6)
	$1 = ($1 + [-12])
	
.LOOP $label$16:
	if ( ((*($1) & [1]) == 0) ){ goto $label$17 }
	CALL $240(*(($1 + [8])))
	
.LABEL $label$17
	$1 = ($1 + [-12])
	if ( ((int_32)($1 + $4) != (int_32)[-12]) ){ goto $label$16 }
	$1 = *($8 + [24])
	goto $label$14 
	
.LABEL $label$15
	$1 = $6
	
.LABEL $label$14
	*($8 + [28]) = $6
	CALL $240($1)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [48])
	return $7
	
.LABEL $label$1
	CALL $245(($8 + [24]))
	return (unreachable)
}

int_32 .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [88]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [96]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [104]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [112]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [120]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [128]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [136]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $182 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [16])
	$10 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [324]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	$4 = *($1)
	$6 = *($3)
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)*(($1 + [160]))), [880])
	$8 = ((int_64)*($1 + [152]) + (int_64)*($6))
	*($1 + [152]) = $8
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($1 + [152]) < (int_64)4611686018427387904), [960])
	$3 = *($3 + [4])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [240]))), [880])
	$8 = ((int_64)*($1 + [232]) + (int_64)*($3))
	*($1 + [232]) = $8
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($1 + [232]) < (int_64)4611686018427387904), [960])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [992])
	$5 = *($1 + [312])
	$6 = *(($1 + [316]))
	$7 = ($6 - $5)
	$8 = (CASTING uint_64)(uint_32 int_32($7 >> [3]))
	$3 = [308]
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	$3 = (($7 & [-8]) + $3)
	
.LABEL $label$2
	if ( ($3 <= [513]) ){ goto $label$4 }
	$9 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$9 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$3
	*($10 + [4]) = $9
	*($10) = $9
	*($10 + [8]) = ($9 + $3)
	CALL $102($10, $1)
	CALL db_update_i64(*($1 + [328]), $2, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($9)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $149 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $238([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $74($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = $1
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	CALL $150(($9 + [24]), ($9 + [16]))
	*([0] + [4]) = ($9 + [32])
	return $0
}

void .FUNC $148 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [16])
	$10 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [324]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	$4 = *($1)
	$6 = *($3)
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)*(($1 + [176]))), [880])
	$8 = ((int_64)*($1 + [168]) + (int_64)*($6))
	*($1 + [168]) = $8
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($1 + [168]) < (int_64)4611686018427387904), [960])
	$3 = *($3 + [4])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [256]))), [880])
	$8 = ((int_64)*($1 + [248]) + (int_64)*($3))
	*($1 + [248]) = $8
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($1 + [248]) < (int_64)4611686018427387904), [960])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [992])
	$5 = *($1 + [312])
	$6 = *(($1 + [316]))
	$7 = ($6 - $5)
	$8 = (CASTING uint_64)(uint_32 int_32($7 >> [3]))
	$3 = [308]
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	$3 = (($7 & [-8]) + $3)
	
.LABEL $label$2
	if ( ($3 <= [513]) ){ goto $label$4 }
	$9 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$9 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$3
	*($10 + [4]) = $9
	*($10) = $9
	*($10 + [8]) = ($9 + $3)
	CALL $102($10, $1)
	CALL db_update_i64(*($1 + [328]), $2, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($9)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $145 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $238(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $244($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $240($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $240($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $144 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [416])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $238([56])
	$4 = CALL $141($6)
	*($6 + [40]) = $0
	CALL $142(($8 + [32]), $4)
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [44])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $145(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $240($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC _ZN7campwar15distribute_mineEN5eosio4nameENS0_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [160])
	*([0] + [4]) = $12
	$7 = *($2 + [8])
	CALL eosio_assert(((int_64)$7 == (int_64)1413893636), [1552])
	$3 = [0]
	$4 = [0]
	$10 = *($2)
	if ( ((uint_64)((int_64)$10 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [1152])
	CALL eosio_assert(((int_64)$10 > (int_64)0), [1184])
	$5 = ($0 + [128])
	$4 = CALL db_lowerbound_i64(*($0 + [128]), *(($0 + [136])), (int_64)4982871454518345728, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$6 }
	$3 = CALL $78($5, $4)
	
.LABEL $label$6
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [3520])
	$4 = ($3 + [64])
	CALL eosio_assert(((int_64)*($4) == (int_64)$7), [3552])
	CALL eosio_assert(((int_64)*($3 + [56]) > (int_64)$10), [3616])
	$6 = *($0)
	CALL eosio_assert(((int_32)*($3 + [72]) == (int_32)$5), [768])
	CALL eosio_assert(((int_64)*($5) == (int_64)CALL $fimport$4()), [816])
	$8 = *($3)
	CALL eosio_assert(((int_64)$7 == (int_64)*($4)), [3408])
	$10 = (int_64)
	*($3 + [56]) = $10(*($3 + [56]) - $10))
	CALL eosio_assert(((int_64)$10 > (int_64)-4611686018427387904), [3456])
	CALL eosio_assert(((int_64)*($3 + [56]) < (int_64)4611686018427387904), [3488])
	CALL eosio_assert(((int_64)$8 == (int_64)*($3)), [992])
	*($12 + [48]) = (($12 + [96]) + [61])
	*($12 + [44]) = ($12 + [96])
	*($12 + [40]) = ($12 + [96])
	CALL $151(($12 + [40]), $3)
	CALL db_update_i64(*($3 + [76]), $6, ($12 + [96]), [61])
	$5 = ($0 + [144])
	if ( (uint_64)($8 <= *($5)) ){ goto $label$7 }
	*($5) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$8 = (int_64)0
	$10 = (int_64)59
	$5 = [3648]
	$6 = (int_64)0
	
.LOOP $label$8:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$9 }
	$3 = *($5)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$3 = ($3 + [165])
	goto $label$10 
	
.LABEL $label$11
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$9
	$5 = ($5 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$8 }
	$8 = (int_64)0
	$7 = (int_64)59
	$5 = [1632]
	$9 = (int_64)0
	
.LOOP $label$12:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$17 }
	$3 = *($5)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$16 }
	$3 = ($3 + [165])
	goto $label$15 
	
.LABEL $label$17
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$15
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$14
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$13
	$5 = ($5 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$12 }
	*($12 + [32]) = $9
	*($12 + [24]) = $6
	$8 = (int_64)0
	$10 = (int_64)59
	$5 = [144]
	$6 = (int_64)0
	
.LOOP $label$18:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$19 }
	$3 = *($5)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$3 = ($3 + [165])
	goto $label$20 
	
.LABEL $label$21
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$19
	$5 = ($5 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$18 }
	$8 = (int_64)0
	$7 = (int_64)59
	$5 = [112]
	$9 = (int_64)0
	
.LOOP $label$22:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$27 }
	$3 = *($5)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$3 = ($3 + [165])
	goto $label$25 
	
.LABEL $label$27
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$26
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$24
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$23
	$5 = ($5 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$22 }
	$8 = (int_64)0
	$10 = (int_64)59
	$5 = [3648]
	$11 = (int_64)0
	
.LOOP $label$28:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$29 }
	$3 = *($5)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$31 }
	$3 = ($3 + [165])
	goto $label$30 
	
.LABEL $label$31
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$30
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$29
	$5 = ($5 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$11 = ((int_64)$7 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$28 }
	*(($12 + [16])) = [0]
	*($12 + [8]) = (int_64)0
	$5 = CALL strlen([3664])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$32 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$35 }
	*($12 + [8]) = ($5 << [1])
	$3 = (($12 + [8]) | [1])
	if ( $5 ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$35
	$0 = (($5 + [16]) & [-16])
	$3 = CALL $238($0)
	*($12 + [8]) = ($0 | [1])
	*($12 + [16]) = $3
	*($12 + [12]) = $5
	
.LABEL $label$34
	CALL memcpy($3, [3664], $5)
	
.LABEL $label$33
	*(($3 + $5)) = [0]
	*(($12 + [124])) = *(($2 + [12]))
	*(($12 + [120])) = *(($2 + [8]))
	*(($12 + [116])) = *(($2 + [4]))
	*($12 + [104]) = $1
	*($12 + [96]) = $11
	*($12 + [112]) = *($2)
	$5 = (($12 + [8]) + [8])
	*(($12 + [136])) = *($5)
	*($12 + [128]) = *($12 + [8])
	*($12 + [8]) = [0]
	*($12 + [12]) = [0]
	*($5) = [0]
	$5 = CALL $149(($12 + [40]), ($12 + [24]), $6, $9, ($12 + [96]))
	CALL $87(($12 + [80]), $5)
	$3 = *($12 + [80])
	CALL send_inline($3, (*($12 + [84]) - $3))
	$3 = *($12 + [80])
	if ( ($3 == 0) ){ goto $label$36 }
	*($12 + [84]) = $3
	CALL $240($3)
	
.LABEL $label$36
	$3 = *($5 + [28])
	if ( ($3 == 0) ){ goto $label$37 }
	*(($5 + [32])) = $3
	CALL $240($3)
	
.LABEL $label$37
	$3 = *($5 + [16])
	if ( ($3 == 0) ){ goto $label$38 }
	*(($5 + [20])) = $3
	CALL $240($3)
	
.LABEL $label$38
	if ( ((*(($12 + [128])) & [1]) == 0) ){ goto $label$39 }
	CALL $240(*(($12 + [136])))
	
.LABEL $label$39
	if ( ((*($12 + [8]) & [1]) == 0) ){ goto $label$40 }
	CALL $240(*(($12 + [16])))
	
.LABEL $label$40
	*([0] + [4]) = ($12 + [160])
	return (unreachable)
	
.LABEL $label$32
	CALL $242(($12 + [8]))
}

int_64 .FUNC _ZN7campwar8cal_mineEx (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [144]
	$6 = (int_64)0
	
.LOOP $label$1:
	$7 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$2 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$2 = ($2 + [165])
	goto $label$3 
	
.LABEL $label$4
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$2
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$1 }
	*($8 + [8]) = $6
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [3648]
	$6 = (int_64)0
	
.LOOP $label$5:
	$7 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$6 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$2 = ($2 + [165])
	goto $label$7 
	
.LABEL $label$8
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$6
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$5 }
	CALL $152(($8 + [16]), ($8 + [8]), $6, (int_64)5523022)
	$3 = (CASTING int_32)(float_64 ((float_64)((float_64)(CASTING float_64)(int_64 (int_64))((int_64)889849507406 - *($8 + [16]))) / (float_64)(float_64)112e8) + (float_64)(float_64)0.5)
	if ( ((int_32)$3) <= (int_32)[0]) ){ goto $label$9 }
	$1 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $1) * (float_64)CALL pow((float_64)0.9, (CASTING float_64)(int_32 ($3 + [-1])))))
	
.LABEL $label$9
	*([0] + [4]) = ($8 + [32])
	return $1
}

int_32 .FUNC $141 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)0
	*(($2 = ($0 + [16]))) = (int_64)1397703940
	CALL eosio_assert([1], [512])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [480])
	*(($2 = ($0 + [32]))) = (int_64)1397703940
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [512])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [480])
	return $0
}

int_32 .FUNC $140 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $143 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $238(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $244($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $240($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $240($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $142 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [448])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $73($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $243($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $238($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $243($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $240($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $242($7)
	return (unreachable)
}

int_32 .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [464])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $74($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [448])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

void .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [448])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [448])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [448])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $72(*($1), ($0 + [32]))
}

void .FUNC $71 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	*(($5 + [44])) = *(($1 + [28]))
	*(($4 = (($5 + [32]) + [8]))) = *(($1 + [24]))
	*($5 + [32]) = *($1 + [16])
	*($5 + [36]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $246(($5 + [16]), ($1 + [32]))
	*((($5 + [48]) + [8])) = *($4)
	*($5 + [48]) = *($5 + [32])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($5 + [80]) + [8]))) = *((($5 + [48]) + [8]))
	*($5 + [80]) = *($5 + [48])
	CALL $246(($5 + [64]), ($5 + [16]))
	*(($5 + [8])) = *($4)
	*($5) = *($5 + [80])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 $5), (int_32 ($5 + [64])), (int_32 $1))
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $240(*($5 + [72]))
	
.LABEL $label$2
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $240(*($5 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [96])
}

void .FUNC _ZN7campwar14fight_transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [288])
	*([0] + [4]) = $12
	$8 = *($3 + [8])
	CALL eosio_assert(((int_64)$8 == (int_64)1413893636), [1552])
	$7 = [0]
	$5 = *($3)
	if ( ((uint_64)((int_64)$5 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$7 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [1152])
	CALL eosio_assert(((int_64)$5 > (int_64)0), [1184])
	$9 = *($4)
	if ( ($9 & [1]) ){ goto $label$7 }
	$7 = uint_32($9 >> [1])
	$10 = ($4 + [1])
	goto $label$6 
	
.LABEL $label$7
	$7 = *($4 + [4])
	$10 = *($4 + [8])
	
.LABEL $label$6
	$9 = CALL strlen([1216])
	if ( ($9 == 0) ){ goto $label$29 }
	if ( ((int_32)$7 < (int_32)$9) ){ goto $label$28 }
	$6 = ($10 + $7)
	$11 = $10
	
.LOOP $label$30:
	$7 = (($7 - $9) + [1])
	if ( ($7 == 0) ){ goto $label$28 }
	$7 = CALL memchr($11, [83], $7)
	if ( ($7 == 0) ){ goto $label$28 }
	if ( (CALL memcmp($7, [1216], $9) == 0) ){ goto $label$31 }
	$11 = ($7 + [1])
	$7 = ($6 - $11)
	if ( ((int_32)$7 >= (int_32)$9) ){ goto $label$30 }
	goto $label$28 
	
.LABEL $label$31
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$28 }
	if ( ((int_32)$7 != (int_32)$10) ){ goto $label$28 }
	
.LABEL $label$29
	$6 = *(($0 + [72]))
	$4 = *(($0 + [76]))
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$32 }
	$9 = ($4 + [-24])
	$11 = ([0] - $6)
	
.LOOP $label$33:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$32 }
	$4 = $9
	$7 = ($9 + [-24])
	$9 = $7
	if ( ((int_32)($7 + $11) != (int_32)[-24]) ){ goto $label$33 }
	
.LABEL $label$32
	$11 = ($0 + [48])
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$27 }
	$9 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [324]) == (int_32)$11), [592])
	goto $label$26 
	
.LABEL $label$28
	$9 = *($4)
	if ( ($9 & [1]) ){ goto $label$35 }
	$7 = uint_32($9 >> [1])
	$10 = ($4 + [1])
	goto $label$34 
	
.LABEL $label$35
	$7 = *($4 + [4])
	$10 = *($4 + [8])
	
.LABEL $label$34
	$9 = CALL strlen([1376])
	if ( ($9 == 0) ){ goto $label$24 }
	if ( ((int_32)$7 < (int_32)$9) ){ goto $label$23 }
	$6 = ($10 + $7)
	$11 = $10
	
.LOOP $label$36:
	$7 = (($7 - $9) + [1])
	if ( ($7 == 0) ){ goto $label$23 }
	$7 = CALL memchr($11, [72], $7)
	if ( ($7 == 0) ){ goto $label$23 }
	if ( (CALL memcmp($7, [1376], $9) == 0) ){ goto $label$25 }
	$11 = ($7 + [1])
	$7 = ($6 - $11)
	if ( ((int_32)$7 >= (int_32)$9) ){ goto $label$36 }
	goto $label$23 
	
.LABEL $label$27
	$9 = [0]
	$7 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$26 }
	$9 = CALL $50($11, $7)
	CALL eosio_assert(((int_32)*($9 + [324]) == (int_32)$11), [592])
	
.LABEL $label$26
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [1232])
	CALL _ZN7campwar22validate_player_activeEy($0, $1)
	$7 = [0]
	$4 = CALL db_lowerbound_i64(*($0 + [128]), *(($0 + [136])), (int_64)4982871454518345728, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$37 }
	$7 = CALL $78(($0 + [128]), $4)
	
.LABEL $label$37
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [1264])
	CALL eosio_assert(*($7 + [8]), [1296])
	if ( (*([0] + [1332]) == 0) ){ goto $label$39 }
	$7 = *([0] + [1336])
	goto $label$38 
	
.LABEL $label$39
	$8 = CALL current_time()
	*([0] + [1332]) = [1]
	$7 = (CASTING uint_32)(uint_64 ((uint_64)$8 / (uint_64)(int_64)1000000))
	*([0] + [1336]) = $7
	
.LABEL $label$38
	*($12 + [120]) = (Rounds 0)(((float_64)CALL pow((float_64)0.97, (CASTING float_64)(int_32 ((CASTING uint_32)(uint_64 ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $7) + (int_64)-1546344000) / (int_64)86400) + (int_64)1)) + [-1]))) * (float_64)(float_64)360))
	*($12 + [112]) = (int_64)0
	*($12 + [104]) = (int_64)0
	$8 = *($0)
	*($12 + [136]) = $3
	*($12 + [132]) = ($12 + [120])
	*($12 + [128]) = ($12 + [112])
	*($12 + [140]) = ($12 + [104])
	CALL $79($11, $9, $8, ($12 + [128]))
	$8 = *($9 + [8])
	$6 = *(($0 + [32]))
	$4 = *(($0 + [36]))
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$40 }
	$9 = ($4 + [-24])
	$11 = ([0] - $6)
	
.LOOP $label$41:
	if ( ((int_64)*(*($9)) == (int_64)$8) ){ goto $label$40 }
	$4 = $9
	$7 = ($9 + [-24])
	$9 = $7
	if ( ((int_32)($7 + $11) != (int_32)[-24]) ){ goto $label$41 }
	
.LABEL $label$40
	$7 = ($0 + [8])
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$43 }
	$9 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [144]) == (int_32)$7), [592])
	goto $label$42 
	
.LABEL $label$43
	$9 = [0]
	$4 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)4730274944552796160, $8)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$42 }
	$9 = CALL $66($7, $4)
	CALL eosio_assert(((int_32)*($9 + [144]) == (int_32)$7), [592])
	
.LABEL $label$42
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [1344])
	$1 = *($0)
	CALL eosio_assert(((int_32)*($9 + [144]) == (int_32)$7), [768])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$4()), [816])
	$8 = *($9)
	CALL eosio_assert(((int_64)*(($3 + [8])) == (int_64)*(($9 + [128]))), [880])
	$5 = ((int_64)*($9 + [120]) + (int_64)*($3))
	*($9 + [120]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($9 + [120]) < (int_64)4611686018427387904), [960])
	*($9 + [136]) = ((int_64)*($12 + [104]) + (int_64))(*($9 + [136]) - *($12 + [112])))
	CALL eosio_assert(((int_64)$8 == (int_64)*($9)), [992])
	*($12 + [280]) = (($12 + [128]) + [136])
	*($12 + [276]) = ($12 + [128])
	*($12 + [272]) = ($12 + [128])
	CALL $80(($12 + [272]), $9)
	CALL db_update_i64(*($9 + [148]), $1, ($12 + [128]), [136])
	$9 = ($0 + [24])
	if ( (uint_64)($8 <= *($9)) ){ goto $label$11 }
	*($9) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	goto $label$11 
	
.LABEL $label$25
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$23 }
	if ( ((int_32)$7 != (int_32)$10) ){ goto $label$23 }
	
.LABEL $label$24
	*(($12 + [280])) = [0]
	*($12 + [272]) = (int_64)0
	$9 = CALL strlen([1376])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$10 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$22 }
	*($12 + [272]) = ($9 << [1])
	$7 = (($12 + [272]) | [1])
	if ( $9 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$9 = *($4)
	if ( ($9 & [1]) ){ goto $label$45 }
	$7 = uint_32($9 >> [1])
	$10 = ($4 + [1])
	goto $label$44 
	
.LABEL $label$45
	$7 = *($4 + [4])
	$10 = *($4 + [8])
	
.LABEL $label$44
	$9 = CALL strlen([1424])
	if ( ($9 == 0) ){ goto $label$18 }
	if ( ((int_32)$7 < (int_32)$9) ){ goto $label$17 }
	$6 = ($10 + $7)
	$11 = $10
	
.LOOP $label$46:
	$7 = (($7 - $9) + [1])
	if ( ($7 == 0) ){ goto $label$17 }
	$7 = CALL memchr($11, [85], $7)
	if ( ($7 == 0) ){ goto $label$17 }
	if ( (CALL memcmp($7, [1424], $9) == 0) ){ goto $label$19 }
	$11 = ($7 + [1])
	$7 = ($6 - $11)
	if ( ((int_32)$7 >= (int_32)$9) ){ goto $label$46 }
	goto $label$17 
	
.LABEL $label$22
	$11 = (($9 + [16]) & [-16])
	$7 = CALL $238($11)
	*($12 + [272]) = ($11 | [1])
	*($12 + [280]) = $7
	*($12 + [276]) = $9
	
.LABEL $label$21
	CALL memcpy($7, [1376], $9)
	
.LABEL $label$20
	*(($7 + $9)) = [0]
	$9 = *($12 + [272])
	CALL $247(($12 + [128]), $4, ( *($12 + [276]) ? uint_32($9 >> [1]) : ($9 & [1]) ), [-1], $4)
	if ( ((*($12 + [272]) & [1]) == 0) ){ goto $label$47 }
	CALL $240(*($12 + [280]))
	
.LABEL $label$47
	*($12 + [272]) = (int_64)0
	*($12 + [120]) = (int_64)0
	CALL eosio_assert(CALL $81($9, ($12 + [128]), ($12 + [272]), ($12 + [120])), [1392])
	*((($12 + [88]) + [12])) = *(($3 + [12]))
	*(($9 = (($12 + [88]) + [8]))) = *(($3 + [8]))
	$8 = *($12 + [120])
	$5 = *($12 + [272])
	*($12 + [88]) = *($3)
	*((($12 + [8]) + [8])) = *($9)
	*($12 + [8]) = *($12 + [88])
	CALL _ZN7campwar4healEN5eosio4nameEyyNS0_5assetE($0, $1, $5, $8, ($12 + [8]))
	if ( ((*($12 + [128]) & [1]) == 0) ){ goto $label$11 }
	CALL $240(*($12 + [136]))
	goto $label$11 
	
.LABEL $label$19
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$17 }
	if ( ((int_32)$7 != (int_32)$10) ){ goto $label$17 }
	
.LABEL $label$18
	*(($12 + [280])) = [0]
	*($12 + [272]) = (int_64)0
	$9 = CALL strlen([1424])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$16 }
	*($12 + [272]) = ($9 << [1])
	$7 = (($12 + [272]) | [1])
	if ( $9 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$9 = *($4)
	if ( ($9 & [1]) ){ goto $label$49 }
	$7 = uint_32($9 >> [1])
	$10 = ($4 + [1])
	goto $label$48 
	
.LABEL $label$49
	$7 = *($4 + [4])
	$10 = *($4 + [8])
	
.LABEL $label$48
	$9 = CALL strlen([1488])
	if ( ($9 == 0) ){ goto $label$12 }
	if ( ((int_32)$7 < (int_32)$9) ){ goto $label$11 }
	$6 = ($10 + $7)
	$11 = $10
	
.LOOP $label$50:
	$7 = (($7 - $9) + [1])
	if ( ($7 == 0) ){ goto $label$11 }
	$7 = CALL memchr($11, [67], $7)
	if ( ($7 == 0) ){ goto $label$11 }
	if ( (CALL memcmp($7, [1488], $9) == 0) ){ goto $label$13 }
	$11 = ($7 + [1])
	$7 = ($6 - $11)
	if ( ((int_32)$7 >= (int_32)$9) ){ goto $label$50 }
	goto $label$11 
	
.LABEL $label$16
	$11 = (($9 + [16]) & [-16])
	$7 = CALL $238($11)
	*($12 + [272]) = ($11 | [1])
	*($12 + [280]) = $7
	*($12 + [276]) = $9
	
.LABEL $label$15
	CALL memcpy($7, [1424], $9)
	
.LABEL $label$14
	$11 = [0]
	*(($7 + $9)) = [0]
	$9 = *($12 + [272])
	CALL $247(($12 + [128]), $4, ( *($12 + [276]) ? uint_32($9 >> [1]) : ($9 & [1]) ), [-1], $4)
	if ( ((*($12 + [272]) & [1]) == 0) ){ goto $label$51 }
	CALL $240(*($12 + [280]))
	
.LABEL $label$51
	$9 = ($9 & [1])
	$9 = *($12 + [128])
	if ( (( *($12 + [132]) ? uint_32($9 >> [1]) : $9 ) == 0) ){ goto $label$53 }
	$5 = CALL strtoll(( *($12 + [136]) ? (($12 + [128]) | [1]) : $9 ), [0], [10])
	$11 = ((int_64)$5 != (int_64)0)
	goto $label$52 
	
.LABEL $label$53
	$5 = (int_64)0
	
.LABEL $label$52
	CALL eosio_assert($11, [1440])
	*(($9 = (($12 + [72]) + [8]))) = *(($3 + [8]))
	$8 = *($3)
	*((($12 + [24]) + [12])) = *((($12 + [72]) + [12]))
	*((($12 + [24]) + [8])) = *($9)
	*($12 + [72]) = $8
	*($12 + [28]) = *($12 + [76])
	*($12 + [24]) = *($12 + [72])
	CALL _ZN7campwar20unlock_gun_use_fightEyyN5eosio5assetE($0, $1, $5, ($12 + [24]))
	if ( ((*($12 + [128]) & [1]) == 0) ){ goto $label$11 }
	CALL $240(*($12 + [136]))
	goto $label$11 
	
.LABEL $label$13
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$11 }
	if ( ((int_32)$7 != (int_32)$10) ){ goto $label$11 }
	
.LABEL $label$12
	*(($12 + [280])) = [0]
	*($12 + [272]) = (int_64)0
	$9 = CALL strlen([1488])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$8 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$56 }
	*($12 + [272]) = ($9 << [1])
	$7 = (($12 + [272]) | [1])
	if ( $9 ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$56
	$11 = (($9 + [16]) & [-16])
	$7 = CALL $238($11)
	*($12 + [272]) = ($11 | [1])
	*($12 + [280]) = $7
	*($12 + [276]) = $9
	
.LABEL $label$55
	CALL memcpy($7, [1488], $9)
	
.LABEL $label$54
	$11 = [0]
	*(($7 + $9)) = [0]
	$9 = *($12 + [272])
	CALL $247(($12 + [128]), $4, ( *($12 + [276]) ? uint_32($9 >> [1]) : ($9 & [1]) ), [-1], $4)
	if ( ((*($12 + [272]) & [1]) == 0) ){ goto $label$57 }
	CALL $240(*($12 + [280]))
	
.LABEL $label$57
	$9 = ($9 & [1])
	$9 = *($12 + [128])
	if ( (( *($12 + [132]) ? uint_32($9 >> [1]) : $9 ) == 0) ){ goto $label$59 }
	$5 = CALL strtoll(( *($12 + [136]) ? (($12 + [128]) | [1]) : $9 ), [0], [10])
	$11 = ((int_64)$5 != (int_64)0)
	goto $label$58 
	
.LABEL $label$59
	$5 = (int_64)0
	
.LABEL $label$58
	CALL eosio_assert($11, [1504])
	*(($9 = (($12 + [56]) + [8]))) = *(($3 + [8]))
	$8 = *($3)
	*((($12 + [40]) + [12])) = *((($12 + [56]) + [12]))
	*((($12 + [40]) + [8])) = *($9)
	*($12 + [56]) = $8
	*($12 + [44]) = *($12 + [60])
	*($12 + [40]) = *($12 + [56])
	CALL _ZN7campwar21change_camp_use_fightEyyN5eosio5assetE($0, $1, $5, ($12 + [40]))
	if ( ((*($12 + [128]) & [1]) == 0) ){ goto $label$11 }
	CALL $240(*($12 + [136]))
	
.LABEL $label$11
	*([0] + [4]) = ($12 + [288])
	return (unreachable)
	
.LABEL $label$10
	CALL $242(($12 + [272]))
	
.LABEL $label$9
	CALL $242(($12 + [272]))
	
.LABEL $label$8
	CALL $242(($12 + [272]))
	(unreachable)
	(unreachable)
}

void .FUNC _ZN7campwar22validate_player_activeEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = *(($0 + [72]))
	$6 = *(($0 + [76]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$5 = ($6 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$2:
	if ( ((int_64)*(*($5)) == (int_64)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [48])
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [324]) == (int_32)$4), [592])
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	$6 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $50($4, $6)
	CALL eosio_assert(((int_32)*($5 + [324]) == (int_32)$4), [592])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [2944])
	$1 = *($5 + [8])
	$2 = *(($0 + [32]))
	$6 = *(($0 + [36]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$5 }
	$5 = ($6 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$6:
	if ( ((int_64)*(*($5)) == (int_64)$1) ){ goto $label$5 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	$5 = ($0 + [8])
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$8 }
	$4 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [144]) == (int_32)$5), [592])
	goto $label$7 
	
.LABEL $label$8
	$4 = [0]
	$6 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)4730274944552796160, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$7 }
	$4 = CALL $66($5, $6)
	CALL eosio_assert(((int_32)*($4 + [144]) == (int_32)$5), [592])
	
.LABEL $label$7
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [2976])
	$5 = [0]
	$6 = CALL db_lowerbound_i64(*($0 + [128]), *(($0 + [136])), (int_64)4982871454518345728, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$9 }
	$5 = CALL $78(($0 + [128]), $6)
	
.LABEL $label$9
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [2128])
	if ( (*($5 + [8]) == 0) ){ goto $label$10 }
	CALL eosio_assert(*($4 + [8]), [3008])
	
.LABEL $label$10
}

void .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $238($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $244($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $240($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC _ZN7campwar12eos_transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [304])
	*([0] + [4]) = $13
	$9 = *($3 + [8])
	CALL eosio_assert(((int_64)$9 == (int_64)1397703940), [3264])
	$12 = [0]
	$5 = *($3)
	if ( ((uint_64)((int_64)$5 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$11 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$12 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$12 = [0]
	
.LABEL $label$1
	CALL eosio_assert($12, [1152])
	CALL eosio_assert(((int_64)$5 > (int_64)0), [1184])
	$11 = *($4)
	if ( ($11 & [1]) ){ goto $label$7 }
	$12 = uint_32($11 >> [1])
	$10 = ($4 + [1])
	goto $label$6 
	
.LABEL $label$7
	$12 = *($4 + [4])
	$10 = *($4 + [8])
	
.LABEL $label$6
	$11 = CALL strlen([3072])
	if ( ($11 == 0) ){ goto $label$39 }
	if ( ((int_32)$12 < (int_32)$11) ){ goto $label$38 }
	$6 = ($10 + $12)
	$7 = $10
	
.LOOP $label$40:
	$12 = (($12 - $11) + [1])
	if ( ($12 == 0) ){ goto $label$38 }
	$12 = CALL memchr($7, [66], $12)
	if ( ($12 == 0) ){ goto $label$38 }
	if ( (CALL memcmp($12, [3072], $11) == 0) ){ goto $label$41 }
	$7 = ($12 + [1])
	$12 = ($6 - $7)
	if ( ((int_32)$12 >= (int_32)$11) ){ goto $label$40 }
	goto $label$38 
	
.LABEL $label$41
	if ( ((int_32)$12 == (int_32)$6) ){ goto $label$38 }
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$38 }
	
.LABEL $label$39
	*(($13 + [296])) = [0]
	*($13 + [288]) = (int_64)0
	$11 = CALL strlen([3072])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$37 }
	*($13 + [288]) = ($11 << [1])
	$12 = (($13 + [288]) | [1])
	if ( $11 ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$38
	$11 = *($4)
	if ( ($11 & [1]) ){ goto $label$43 }
	$12 = uint_32($11 >> [1])
	$10 = ($4 + [1])
	goto $label$42 
	
.LABEL $label$43
	$12 = *($4 + [4])
	$10 = *($4 + [8])
	
.LABEL $label$42
	$11 = CALL strlen([3120])
	if ( ($11 == 0) ){ goto $label$33 }
	if ( ((int_32)$12 < (int_32)$11) ){ goto $label$32 }
	$6 = ($10 + $12)
	$7 = $10
	
.LOOP $label$44:
	$12 = (($12 - $11) + [1])
	if ( ($12 == 0) ){ goto $label$32 }
	$12 = CALL memchr($7, [76], $12)
	if ( ($12 == 0) ){ goto $label$32 }
	if ( (CALL memcmp($12, [3120], $11) == 0) ){ goto $label$34 }
	$7 = ($12 + [1])
	$12 = ($6 - $7)
	if ( ((int_32)$12 >= (int_32)$11) ){ goto $label$44 }
	goto $label$32 
	
.LABEL $label$37
	$7 = (($11 + [16]) & [-16])
	$12 = CALL $238($7)
	*($13 + [288]) = ($7 | [1])
	*($13 + [296]) = $12
	*($13 + [292]) = $11
	
.LABEL $label$36
	CALL memcpy($12, [3072], $11)
	
.LABEL $label$35
	$7 = [0]
	*(($12 + $11)) = [0]
	$11 = *($13 + [288])
	CALL $247(($13 + [192]), $4, ( *($13 + [292]) ? uint_32($11 >> [1]) : ($11 & [1]) ), [-1], $4)
	if ( ((*($13 + [288]) & [1]) == 0) ){ goto $label$45 }
	CALL $240(*($13 + [296]))
	
.LABEL $label$45
	$11 = ($11 & [1])
	$11 = *($13 + [192])
	if ( (( *($13 + [196]) ? uint_32($11 >> [1]) : $11 ) == 0) ){ goto $label$47 }
	$9 = CALL strtoll(( *($13 + [200]) ? (($13 + [192]) | [1]) : $11 ), [0], [10])
	$7 = ((int_64)$9 != (int_64)0)
	goto $label$46 
	
.LABEL $label$47
	$9 = (int_64)0
	
.LABEL $label$46
	CALL eosio_assert($7, [3088])
	*(($11 = (($13 + [176]) + [8]))) = *(($3 + [8]))
	$5 = *($3)
	*((($13 + [8]) + [12])) = *((($13 + [176]) + [12]))
	*((($13 + [8]) + [8])) = *($11)
	*($13 + [176]) = $5
	*($13 + [12]) = *($13 + [180])
	*($13 + [8]) = *($13 + [176])
	CALL _ZN7campwar7buy_gunEN5eosio4nameEyNS0_5assetE($0, $1, $9, ($13 + [8]))
	if ( ((*($13 + [192]) & [1]) == 0) ){ goto $label$14 }
	CALL $240(*($13 + [200]))
	goto $label$14 
	
.LABEL $label$34
	if ( ((int_32)$12 == (int_32)$6) ){ goto $label$32 }
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$32 }
	
.LABEL $label$33
	*(($13 + [296])) = [0]
	*($13 + [288]) = (int_64)0
	$11 = CALL strlen([3120])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$31 }
	*($13 + [288]) = ($11 << [1])
	$12 = (($13 + [288]) | [1])
	if ( $11 ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$32
	$11 = *($4)
	if ( ($11 & [1]) ){ goto $label$49 }
	$12 = uint_32($11 >> [1])
	$10 = ($4 + [1])
	goto $label$48 
	
.LABEL $label$49
	$12 = *($4 + [4])
	$10 = *($4 + [8])
	
.LABEL $label$48
	$11 = CALL strlen([3168])
	if ( ($11 == 0) ){ goto $label$27 }
	if ( ((int_32)$12 < (int_32)$11) ){ goto $label$26 }
	$6 = ($10 + $12)
	$7 = $10
	
.LOOP $label$50:
	$12 = (($12 - $11) + [1])
	if ( ($12 == 0) ){ goto $label$26 }
	$12 = CALL memchr($7, [65], $12)
	if ( ($12 == 0) ){ goto $label$26 }
	if ( (CALL memcmp($12, [3168], $11) == 0) ){ goto $label$28 }
	$7 = ($12 + [1])
	$12 = ($6 - $7)
	if ( ((int_32)$12 >= (int_32)$11) ){ goto $label$50 }
	goto $label$26 
	
.LABEL $label$31
	$7 = (($11 + [16]) & [-16])
	$12 = CALL $238($7)
	*($13 + [288]) = ($7 | [1])
	*($13 + [296]) = $12
	*($13 + [292]) = $11
	
.LABEL $label$30
	CALL memcpy($12, [3120], $11)
	
.LABEL $label$29
	$7 = [0]
	*(($12 + $11)) = [0]
	$11 = *($13 + [288])
	CALL $247(($13 + [192]), $4, ( *($13 + [292]) ? uint_32($11 >> [1]) : ($11 & [1]) ), [-1], $4)
	if ( ((*($13 + [288]) & [1]) == 0) ){ goto $label$51 }
	CALL $240(*($13 + [296]))
	
.LABEL $label$51
	$11 = ($11 & [1])
	$11 = *($13 + [192])
	if ( (( *($13 + [196]) ? uint_32($11 >> [1]) : $11 ) == 0) ){ goto $label$53 }
	$9 = CALL strtoll(( *($13 + [200]) ? (($13 + [192]) | [1]) : $11 ), [0], [10])
	$7 = ((int_64)$9 != (int_64)0)
	goto $label$52 
	
.LABEL $label$53
	$9 = (int_64)0
	
.LABEL $label$52
	CALL eosio_assert($7, [3136])
	*(($11 = (($13 + [160]) + [8]))) = *(($3 + [8]))
	$5 = *($3)
	*((($13 + [24]) + [12])) = *((($13 + [160]) + [12]))
	*((($13 + [24]) + [8])) = *($11)
	*($13 + [160]) = $5
	*($13 + [28]) = *($13 + [164])
	*($13 + [24]) = *($13 + [160])
	CALL _ZN7campwar8level_upEN5eosio4nameEyNS0_5assetE($0, $1, $9, ($13 + [24]))
	if ( ((*($13 + [192]) & [1]) == 0) ){ goto $label$14 }
	CALL $240(*($13 + [200]))
	goto $label$14 
	
.LABEL $label$28
	if ( ((int_32)$12 == (int_32)$6) ){ goto $label$26 }
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$26 }
	
.LABEL $label$27
	*(($13 + [296])) = [0]
	*($13 + [288]) = (int_64)0
	$11 = CALL strlen([3168])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$10 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$25 }
	*($13 + [288]) = ($11 << [1])
	$12 = (($13 + [288]) | [1])
	if ( $11 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$26
	$11 = *($4)
	if ( ($11 & [1]) ){ goto $label$55 }
	$12 = uint_32($11 >> [1])
	$10 = ($4 + [1])
	goto $label$54 
	
.LABEL $label$55
	$12 = *($4 + [4])
	$10 = *($4 + [8])
	
.LABEL $label$54
	$11 = CALL strlen([1424])
	if ( ($11 == 0) ){ goto $label$21 }
	if ( ((int_32)$12 < (int_32)$11) ){ goto $label$20 }
	$6 = ($10 + $12)
	$7 = $10
	
.LOOP $label$56:
	$12 = (($12 - $11) + [1])
	if ( ($12 == 0) ){ goto $label$20 }
	$12 = CALL memchr($7, [85], $12)
	if ( ($12 == 0) ){ goto $label$20 }
	if ( (CALL memcmp($12, [1424], $11) == 0) ){ goto $label$22 }
	$7 = ($12 + [1])
	$12 = ($6 - $7)
	if ( ((int_32)$12 >= (int_32)$11) ){ goto $label$56 }
	goto $label$20 
	
.LABEL $label$25
	$7 = (($11 + [16]) & [-16])
	$12 = CALL $238($7)
	*($13 + [288]) = ($7 | [1])
	*($13 + [296]) = $12
	*($13 + [292]) = $11
	
.LABEL $label$24
	CALL memcpy($12, [3168], $11)
	
.LABEL $label$23
	*(($12 + $11)) = [0]
	$11 = *($13 + [288])
	CALL $247(($13 + [192]), $4, ( *($13 + [292]) ? uint_32($11 >> [1]) : ($11 & [1]) ), [-1], $4)
	if ( ((*($13 + [288]) & [1]) == 0) ){ goto $label$57 }
	CALL $240(*($13 + [296]))
	
.LABEL $label$57
	*($13 + [288]) = (int_64)0
	*($13 + [120]) = (int_64)0
	*($13 + [152]) = (int_64)0
	CALL eosio_assert(CALL $132($11, ($13 + [192]), ($13 + [288]), ($13 + [120]), ($13 + [152])), [3184])
	*(($11 = (($13 + [136]) + [8]))) = *(($3 + [8]))
	$9 = *($13 + [152])
	$5 = *($13 + [120])
	$8 = *($13 + [288])
	*($13 + [136]) = *($3)
	*((($13 + [40]) + [8])) = *($11)
	*($13 + [40]) = *($13 + [136])
	CALL _ZN7campwar6attackEN5eosio4nameEyyyNS0_5assetE($0, $1, $8, $5, $9, ($13 + [40]))
	if ( ((*($13 + [192]) & [1]) == 0) ){ goto $label$14 }
	CALL $240(*($13 + [200]))
	goto $label$14 
	
.LABEL $label$22
	if ( ((int_32)$12 == (int_32)$6) ){ goto $label$20 }
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$20 }
	
.LABEL $label$21
	*(($13 + [200])) = [0]
	*($13 + [192]) = (int_64)0
	$11 = CALL strlen([1424])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$19 }
	*($13 + [192]) = ($11 << [1])
	$12 = (($13 + [192]) | [1])
	if ( $11 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$11 = *($4)
	if ( ($11 & [1]) ){ goto $label$59 }
	$12 = uint_32($11 >> [1])
	$10 = ($4 + [1])
	goto $label$58 
	
.LABEL $label$59
	$12 = *($4 + [4])
	$10 = *($4 + [8])
	
.LABEL $label$58
	$11 = CALL strlen([3248])
	if ( ($11 == 0) ){ goto $label$14 }
	if ( ((int_32)$12 < (int_32)$11) ){ goto $label$15 }
	$6 = ($10 + $12)
	$7 = $10
	
.LOOP $label$60:
	$12 = (($12 - $11) + [1])
	if ( ($12 == 0) ){ goto $label$15 }
	$12 = CALL memchr($7, [67], $12)
	if ( ($12 == 0) ){ goto $label$15 }
	if ( (CALL memcmp($12, [3248], $11) == 0) ){ goto $label$16 }
	$7 = ($12 + [1])
	$12 = ($6 - $7)
	if ( ((int_32)$12 >= (int_32)$11) ){ goto $label$60 }
	goto $label$15 
	
.LABEL $label$19
	$7 = (($11 + [16]) & [-16])
	$12 = CALL $238($7)
	*($13 + [192]) = ($7 | [1])
	*($13 + [200]) = $12
	*($13 + [196]) = $11
	
.LABEL $label$18
	CALL memcpy($12, [1424], $11)
	
.LABEL $label$17
	$7 = [0]
	*(($12 + $11)) = [0]
	$11 = *($13 + [192])
	CALL $247(($13 + [120]), $4, ( *($13 + [196]) ? uint_32($11 >> [1]) : ($11 & [1]) ), [-1], $4)
	if ( ((*($13 + [192]) & [1]) == 0) ){ goto $label$61 }
	CALL $240(*($13 + [200]))
	
.LABEL $label$61
	$11 = ($11 & [1])
	$11 = *($13 + [120])
	if ( (( *($13 + [124]) ? uint_32($11 >> [1]) : $11 ) == 0) ){ goto $label$63 }
	$9 = CALL strtoll(( *($13 + [128]) ? (($13 + [120]) | [1]) : $11 ), [0], [10])
	$7 = ((int_64)$9 != (int_64)0)
	goto $label$62 
	
.LABEL $label$63
	$9 = (int_64)0
	
.LABEL $label$62
	CALL eosio_assert($7, [1440])
	*(($11 = (($13 + [104]) + [8]))) = *(($3 + [8]))
	$5 = *($3)
	*((($13 + [56]) + [12])) = *((($13 + [104]) + [12]))
	*((($13 + [56]) + [8])) = *($11)
	*($13 + [104]) = $5
	*($13 + [60]) = *($13 + [108])
	*($13 + [56]) = *($13 + [104])
	CALL _ZN7campwar18unlock_gun_use_eosEyyN5eosio5assetE($0, $1, $9, ($13 + [56]))
	$6 = *(($0 + [112]))
	$12 = *(($0 + [116]))
	if ( ((int_32)$12 == (int_32)$6) ){ goto $label$64 }
	$11 = ($12 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$65:
	if ( ((int_64)*(*($11)) == (int_64)$9) ){ goto $label$64 }
	$12 = $11
	$4 = ($11 + [-24])
	$11 = $4
	if ( ((int_32)($4 + $7) != (int_32)[-24]) ){ goto $label$65 }
	
.LABEL $label$64
	$11 = ($0 + [88])
	if ( ((int_32)$12 == (int_32)$6) ){ goto $label$67 }
	$12 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [88]) == (int_32)$11), [592])
	goto $label$66 
	
.LABEL $label$67
	$12 = [0]
	$4 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)7396599438002618368, $9)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$66 }
	$12 = CALL $57($11, $4)
	CALL eosio_assert(((int_32)*($12 + [88]) == (int_32)$11), [592])
	
.LABEL $label$66
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [656])
	$10 = *(($0 + [192]))
	$7 = *(($0 + [196]))
	if ( ((int_32)$7 == (int_32)$10) ){ goto $label$68 }
	$11 = ($7 + [-24])
	$6 = ([0] - $10)
	
.LOOP $label$69:
	if ( ((int_64)*(*($11)) == (int_64)$9) ){ goto $label$68 }
	$7 = $11
	$4 = ($11 + [-24])
	$11 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$69 }
	
.LABEL $label$68
	$4 = ($0 + [168])
	if ( ((int_32)$7 == (int_32)$10) ){ goto $label$71 }
	$11 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [88]) == (int_32)$4), [592])
	$7 = ($0 + [176])
	goto $label$70 
	
.LABEL $label$71
	$11 = [0]
	$7 = ($0 + [176])
	$6 = CALL db_find_i64(*(($0 + [168])), *($7), (int_64)-4279098343512080384, $9)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$70 }
	$11 = CALL $59($4, $6)
	CALL eosio_assert(((int_32)*($11 + [88]) == (int_32)$4), [592])
	
.LABEL $label$70
	CALL eosio_assert(($11 == 0), [3216])
	$5 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [168])) == (int_64)CALL $fimport$4()), [1888])
	$11 = CALL $238([104])
	$6 = CALL $63($11)
	*($11 + [88]) = $4
	*($11) = *($12)
	*($11 + [8]) = *($12 + [8])
	*($11 + [16]) = *($12 + [16])
	*($11 + [24]) = *($12 + [24])
	*($11 + [28]) = *($12 + [28])
	*($11 + [32]) = *($12 + [32])
	*($11 + [40]) = *($12 + [40])
	*(($11 + [56])) = *(($12 + [56]))
	*($11 + [48]) = *($12 + [48])
	*($11 + [64]) = *($12 + [64])
	*(($11 + [72])) = *(($12 + [72]))
	*($11 + [80]) = *($12 + [80])
	*($13 + [296]) = (($13 + [192]) + [88])
	*($13 + [292]) = ($13 + [192])
	*($13 + [288]) = ($13 + [192])
	CALL $62(($13 + [288]), $6)
	$9 = *($11)
	$12 = CALL db_store_i64(*($7), (int_64)-4279098343512080384, $5, $9, ($13 + [192]), [88])
	*($11 + [92]) = $12
	$4 = ($0 + [184])
	if ( (uint_64)($9 <= *($4)) ){ goto $label$72 }
	*($4) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$72
	*($13 + [288]) = $11
	$9 = *($11)
	*($13 + [192]) = $9
	*($13 + [152]) = $12
	$7 = ($0 + [196])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [200]))) ){ goto $label$74 }
	*($4 + [8]) = $9
	*($4 + [16]) = $12
	*($13 + [288]) = [0]
	*($4) = $11
	*($7) = ($4 + [24])
	goto $label$73 
	
.LABEL $label$74
	CALL $65(($0 + [192]), ($13 + [288]), ($13 + [192]), ($13 + [152]))
	
.LABEL $label$73
	$11 = *($13 + [288])
	*($13 + [288]) = [0]
	if ( ($11 == 0) ){ goto $label$75 }
	CALL $240($11)
	
.LABEL $label$75
	if ( ((*($13 + [120]) & [1]) == 0) ){ goto $label$14 }
	CALL $240(*($13 + [128]))
	goto $label$14 
	
.LABEL $label$16
	if ( ((int_32)$12 == (int_32)$6) ){ goto $label$15 }
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$14 }
	
.LABEL $label$15
	$11 = *($4)
	if ( ($11 & [1]) ){ goto $label$77 }
	$12 = uint_32($11 >> [1])
	$10 = ($4 + [1])
	goto $label$76 
	
.LABEL $label$77
	$12 = *($4 + [4])
	$10 = *($4 + [8])
	
.LABEL $label$76
	$11 = CALL strlen([1488])
	if ( ($11 == 0) ){ goto $label$78 }
	if ( ((int_32)$12 < (int_32)$11) ){ goto $label$13 }
	$6 = ($10 + $12)
	$7 = $10
	
.LOOP $label$79:
	$12 = (($12 - $11) + [1])
	if ( ($12 == 0) ){ goto $label$13 }
	$12 = CALL memchr($7, [67], $12)
	if ( ($12 == 0) ){ goto $label$13 }
	if ( (CALL memcmp($12, [1488], $11) == 0) ){ goto $label$80 }
	$7 = ($12 + [1])
	$12 = ($6 - $7)
	if ( ((int_32)$12 >= (int_32)$11) ){ goto $label$79 }
	goto $label$13 
	
.LABEL $label$80
	if ( ((int_32)$12 == (int_32)$6) ){ goto $label$13 }
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$13 }
	
.LABEL $label$78
	*(($13 + [296])) = [0]
	*($13 + [288]) = (int_64)0
	$11 = CALL strlen([1488])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$8 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$83 }
	*($13 + [288]) = ($11 << [1])
	$12 = (($13 + [288]) | [1])
	if ( $11 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$83
	$7 = (($11 + [16]) & [-16])
	$12 = CALL $238($7)
	*($13 + [288]) = ($7 | [1])
	*($13 + [296]) = $12
	*($13 + [292]) = $11
	
.LABEL $label$82
	CALL memcpy($12, [1488], $11)
	
.LABEL $label$81
	$7 = [0]
	*(($12 + $11)) = [0]
	$11 = *($13 + [288])
	CALL $247(($13 + [192]), $4, ( *($13 + [292]) ? uint_32($11 >> [1]) : ($11 & [1]) ), [-1], $4)
	if ( ((*($13 + [288]) & [1]) == 0) ){ goto $label$84 }
	CALL $240(*($13 + [296]))
	
.LABEL $label$84
	$11 = ($11 & [1])
	$11 = *($13 + [192])
	if ( (( *($13 + [196]) ? uint_32($11 >> [1]) : $11 ) == 0) ){ goto $label$86 }
	$5 = CALL strtoll(( *($13 + [200]) ? (($13 + [192]) | [1]) : $11 ), [0], [10])
	$7 = ((int_64)$5 != (int_64)0)
	goto $label$85 
	
.LABEL $label$86
	$5 = (int_64)0
	
.LABEL $label$85
	CALL eosio_assert($7, [1504])
	*(($11 = (($13 + [88]) + [8]))) = *(($3 + [8]))
	$9 = *($3)
	*((($13 + [72]) + [12])) = *((($13 + [88]) + [12]))
	*((($13 + [72]) + [8])) = *($11)
	*($13 + [88]) = $9
	*($13 + [76]) = *($13 + [92])
	*($13 + [72]) = *($13 + [88])
	CALL _ZN7campwar19change_camp_use_eosEyyN5eosio5assetE($0, $1, $5, ($13 + [72]))
	if ( ((*($13 + [192]) & [1]) == 0) ){ goto $label$14 }
	CALL $240(*($13 + [200]))
	
.LABEL $label$14
	$6 = *(($0 + [72]))
	$12 = *(($0 + [76]))
	if ( ((int_32)$12 == (int_32)$6) ){ goto $label$87 }
	$11 = ($12 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$88:
	if ( ((int_64)*(*($11)) == (int_64)$1) ){ goto $label$87 }
	$12 = $11
	$4 = ($11 + [-24])
	$11 = $4
	if ( ((int_32)($4 + $7) != (int_32)[-24]) ){ goto $label$88 }
	
.LABEL $label$87
	$11 = ($0 + [48])
	if ( ((int_32)$12 == (int_32)$6) ){ goto $label$90 }
	$4 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [324]) == (int_32)$11), [592])
	if ( $4 ){ goto $label$89 }
	goto $label$13 
	
.LABEL $label$90
	$4 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$13 }
	$4 = CALL $50($11, $4)
	CALL eosio_assert(((int_32)*($4 + [324]) == (int_32)$11), [592])
	
.LABEL $label$89
	$9 = *($0)
	*($13 + [192]) = $3
	CALL $136($11, $4, $9, ($13 + [192]))
	
.LABEL $label$13
	*([0] + [4]) = ($13 + [304])
	return (unreachable)
	
.LABEL $label$12
	CALL $242(($13 + [288]))
	
.LABEL $label$11
	CALL $242(($13 + [288]))
	
.LABEL $label$10
	CALL $242(($13 + [288]))
	
.LABEL $label$9
	CALL $242(($13 + [192]))
	
.LABEL $label$8
	CALL $242(($13 + [288]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [416])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $238([88])
	$4 = CALL $127($6)
	*($6 + [72]) = $0
	CALL $128(($8 + [32]), $4)
	*($6 + [76]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [76])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $129(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $240($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $79 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	CALL eosio_assert(((int_32)*($1 + [324]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	$4 = *($1)
	$8 = *($1 + [304])
	if ( ((int_64)$8 == (int_64)0) ){ goto $label$1 }
	*(*($3)) = ((int_64)*($1 + [56]) * (int_64)$8)
	$5 = *($1 + [56])
	$8 = *(*($3 + [8]))
	*(($9 = *($3 + [4]))) = ((int_64)((int_64)((int_64)*($9) * (int_64)$8) + (int_64)((int_64)*(($1 + [304])) * (int_64)$5)) / (int_64)((int_64)$8 + (int_64)$5))
	
.LABEL $label$1
	$6 = *(($3 + [8]))
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)*(($1 + [64]))), [880])
	$8 = ((int_64)*($9) + (int_64)*($6))
	*(($9 = ($1 + [56]))) = $8
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($9) < (int_64)4611686018427387904), [960])
	$6 = ($3 + [4])
	*(($1 + [304])) = *(*($6))
	*(*($3 + [12])) = ((int_64)*(*($6)) * (int_64)*($9))
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [992])
	$6 = *($1 + [312])
	$9 = *(($1 + [316]))
	$7 = ($9 - $6)
	$8 = (CASTING uint_64)(uint_32 int_32($7 >> [3]))
	$3 = [308]
	
.LOOP $label$2:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$3 }
	$3 = (($7 & [-8]) + $3)
	
.LABEL $label$3
	if ( ($3 <= [513]) ){ goto $label$5 }
	$9 = CALL malloc($3)
	goto $label$4 
	
.LABEL $label$5
	$9 = ($11 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$4
	*($10 + [4]) = $9
	*($10) = $9
	*($10 + [8]) = ($9 + $3)
	CALL $102($10, $1)
	CALL db_update_i64(*($1 + [328]), $2, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$6 }
	CALL free($9)
	
.LABEL $label$6
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $241 (int_32 $0)
{
	CALL $240($0)
}

int_32 .FUNC memchr (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = [0]
	$4 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$7:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$3 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$4 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	$5 = $2
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = $2
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)($1 & [255])) ){ goto $label$8 }
	if ( ($5 <= [4]) ){ goto $label$10 }
	$4 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$4)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$8 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$8
	$6 = $5
	
.LABEL $label$1
	return ( $0 ? [0] : $6 )
}

int_32 .FUNC __toread (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [255]) | $1)
	if ( ((uint_32)*($0 + [20]) <= (uint_32)*($0 + [28])) ){ goto $label$1 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	
.LABEL $label$1
	*($0 + [16]) = (int_64)0
	*(($0 + [28])) = [0]
	$1 = *($0)
	if ( ($1 & [4]) ){ goto $label$2 }
	$2 = (*($0 + [44]) + *($0 + [48]))
	*($0 + [8]) = $2
	*($0 + [4]) = $2
	return int_32(($1 << [27]) >> [31])
	
.LABEL $label$2
	*($0) = ($1 | [32])
	return [-1]
}

int_32 .FUNC _ZN7campwar18current_time_pointEv ()
{
	int_64 $0
	int_32 $1
	if ( (*([0] + [1332]) == 0) ){ goto $label$1 }
	return *([0] + [1336])
	
.LABEL $label$1
	$0 = CALL current_time()
	*([0] + [1332]) = [1]
	$1 = (CASTING uint_32)(uint_64 ((uint_64)$0 / (uint_64)(int_64)1000000))
	*([0] + [1336]) = $1
	return $1
}

int_64 .FUNC scalbn (float_64 $0, int_32 $1)
{
	int_32 $2
	if ( ((int_32)$1 < (int_32)[1024]) ){ goto $label$4 }
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	$2 = ($1 + [-1023])
	if ( ((int_32)$2 < (int_32)[1024]) ){ goto $label$3 }
	$1 = ($1 + [-2046])
	$1 = ( $1 ? [1023] : ((int_32)$1 < (int_32)[1023]) )
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$1 > (int_32)[-1023]) ){ goto $label$1 }
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	$2 = ($1 + [969])
	if ( ((int_32)$2 > (int_32)[-1023]) ){ goto $label$2 }
	$1 = ($1 + [1938])
	$1 = ( $1 ? [-1022] : ((int_32)$1 > (int_32)[-1022]) )
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	goto $label$1 
	
.LABEL $label$3
	$1 = $2
	goto $label$1 
	
.LABEL $label$2
	$1 = $2
	
.LABEL $label$1
	return ((float_64)$0 * (float_64)(CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($1 + [1023])) << (int_64)52)))
}

int_64 .FUNC fabs (float_64 $0)
{
	return (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $0) & (int_64)9223372036854775807))
}

void .FUNC __shlim (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	*($0 + [112]) = $1
	$2 = *($0 + [4])
	$3 = *($0 + [8])
	$4 = (CASTING int_64)(int_32 ($3 - $2))
	*($0 + [120]) = $4
	*($0 + [104]) = ( ( ($2 + (CASTING uint_32)(uint_64 $1)) ? $3 : ((int_64)$4 > (int_64)$1) ) ? $3 : ((int_64)$1 != (int_64)0) )
}

int_64 .FUNC strtoll (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [144])
	*([0] + [4]) = $4
	*($4 + [4]) = $0
	*($4 + [44]) = $0
	*($4) = [0]
	*($4 + [76]) = [-1]
	*($4 + [8]) = ( [-1] ? ($0 + [2147483647]) : ((int_32)$0 < (int_32)[0]) )
	CALL __shlim($4, (int_64)0)
	$3 = CALL __intscan($4, $2, [1], (int_64)-9223372036854775808)
	if ( ($1 == 0) ){ goto $label$1 }
	*($1) = ($0 + (CASTING uint_32)(uint_64 ((int_64)(CASTING uint_64)(uint_32 (*($4 + [4]) - *(($4 + [8])))) + (int_64)*($4 + [120]))))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [144])
	return $3
}

int_32 .FUNC __errno_location ()
{
	return [15836]
}

int_64 .FUNC __intscan (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_64 $14
	if ( ((uint_32)$1 > (uint_32)[36]) ){ goto $label$4 }
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$4 }
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$5:
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$7 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$6 
	
.LABEL $label$7
	$13 = CALL __shgetc($0)
	
.LABEL $label$6
	$10 = ($13 + [-9])
	if ( ((uint_32)$10 > (uint_32)[36]) ){ goto $label$3 }
	goto $label$5 
	
.LABEL $label$8
	$4 = ( [-1] ? [0] : ((int_32)$13 == (int_32)[45]) )
	$10 = ($0 + [4])
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [104]))) ){ goto $label$2 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$1 
	
.LABEL $label$4
	*(CALL __errno_location()) = [22]
	return (int_64)0
	
.LABEL $label$3
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	$13 = CALL __shgetc($0)
	
.LABEL $label$1
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$20 }
	if ( ((int_32)$13 != (int_32)[48]) ){ goto $label$20 }
	$10 = ($0 + [4])
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [104]))) ){ goto $label$19 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$18 
	
.LABEL $label$20
	$1 = ( $1 ? [10] : $1 )
	if ( (*(($13 + [15553])) <= $1) ){ goto $label$17 }
	if ( (*(($0 + [104])) == 0) ){ goto $label$21 }
	*(($13 = ($0 + [4]))) = (*($13) + [-1])
	
.LABEL $label$21
	CALL __shlim($0, (int_64)0)
	*(CALL __errno_location()) = [22]
	return (int_64)0
	
.LABEL $label$19
	$13 = CALL __shgetc($0)
	
.LABEL $label$18
	if ( ((int_32)($13 | [32]) != (int_32)[120]) ){ goto $label$22 }
	$10 = ($0 + [4])
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [104]))) ){ goto $label$16 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$15 
	
.LABEL $label$22
	if ( ($1 == 0) ){ goto $label$14 }
	
.LABEL $label$17
	if ( ((int_32)$1 != (int_32)[10]) ){ goto $label$13 }
	$14 = (int_64)0
	$9 = ($13 + [-48])
	if ( ((uint_32)$9 > (uint_32)[9]) ){ goto $label$23 }
	$10 = [0]
	$8 = ($0 + [104])
	$1 = ($0 + [4])
	
.LOOP $label$24:
	$10 = ((int_32)$10 * (int_32)[10])
	$13 = *($1)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$26 }
	*($1) = ($13 + [1])
	$13 = *($13)
	goto $label$25 
	
.LABEL $label$26
	$13 = CALL __shgetc($0)
	
.LABEL $label$25
	$10 = ($10 + $9)
	$9 = ($13 + [-48])
	if ( ((uint_32)$9 > (uint_32)[9]) ){ goto $label$27 }
	if ( ($10 <= [429496729]) ){ goto $label$24 }
	
.LABEL $label$27
	$14 = (CASTING uint_64)(uint_32 $10)
	
.LABEL $label$23
	$10 = ($13 + [-48])
	if ( ((uint_32)$10 > (uint_32)[9]) ){ goto $label$11 }
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$28:
	$1 = [10]
	$5 = (CASTING int_64)(int_32 $10)
	$12 = ((int_64)$14 * (int_64)10)
	if ( ((uint_64)$12 > (uint_64)((int_64)$5 ^ (int_64)-1)) ){ goto $label$12 }
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$30 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$29 
	
.LABEL $label$30
	$13 = CALL __shgetc($0)
	
.LABEL $label$29
	$14 = ((int_64)$12 + (int_64)$5)
	$10 = ($13 + [-48])
	if ( ((uint_32)$10 > (uint_32)[9]) ){ goto $label$31 }
	if ( (uint_64)($14 <= (int_64)1844674407370955162) ){ goto $label$28 }
	
.LABEL $label$31
	if ( ((uint_32)$10 <= (uint_32)[9]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$16
	$13 = CALL __shgetc($0)
	
.LABEL $label$15
	$1 = [16]
	if ( (*(($13 + [15553])) <= [16]) ){ goto $label$13 }
	$13 = *(($0 + [104]))
	if ( ($13 == 0) ){ goto $label$32 }
	*(($10 = ($0 + [4]))) = (*($10) + [-1])
	
.LABEL $label$32
	if ( ($2 == 0) ){ goto $label$9 }
	$14 = (int_64)0
	if ( ($13 == 0) ){ goto $label$10 }
	*(($13 = ($0 + [4]))) = (*($13) + [-1])
	return (int_64)0
	
.LABEL $label$14
	$1 = [8]
	
.LABEL $label$13
	if ( ((($1 + [-1]) & $1) == 0) ){ goto $label$37 }
	$10 = *(($13 + [15553]))
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$36 }
	$9 = [0]
	$2 = ($0 + [104])
	$8 = ($0 + [4])
	
.LOOP $label$38:
	$9 = ($10 + ((int_32)$9 * (int_32)$1))
	$13 = *($8)
	if ( ((uint_32)$13 >= (uint_32)*($2)) ){ goto $label$40 }
	*($8) = ($13 + [1])
	$13 = *($13)
	goto $label$39 
	
.LABEL $label$40
	$13 = CALL __shgetc($0)
	
.LABEL $label$39
	$10 = *(($13 + [15553]))
	if ( ((uint_32)$9 > (uint_32)[119304646]) ){ goto $label$41 }
	if ( ($10 <= $1) ){ goto $label$38 }
	
.LABEL $label$41
	$14 = (CASTING uint_64)(uint_32 $9)
	if ( ($10 <= $1) ){ goto $label$35 }
	goto $label$12 
	
.LABEL $label$37
	$2 = *(((uint_32(((int_32)$1 * (int_32)[23]) >> [5]) & [7]) + [15824]))
	$10 = *(($13 + [15553]))
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$34 }
	$9 = [0]
	$11 = ($0 + [104])
	$8 = ($0 + [4])
	
.LOOP $label$42:
	$9 = ($10 | ($9 << $2))
	$13 = *($8)
	if ( ((uint_32)$13 >= (uint_32)*($11)) ){ goto $label$44 }
	*($8) = ($13 + [1])
	$13 = *($13)
	goto $label$43 
	
.LABEL $label$44
	$13 = CALL __shgetc($0)
	
.LABEL $label$43
	$10 = *(($13 + [15553]))
	if ( ((uint_32)$9 > (uint_32)[134217727]) ){ goto $label$45 }
	if ( ($10 <= $1) ){ goto $label$42 }
	
.LABEL $label$45
	$14 = (CASTING uint_64)(uint_32 $9)
	if ( ($10 <= $1) ){ goto $label$33 }
	goto $label$12 
	
.LABEL $label$36
	$14 = (int_64)0
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$12 }
	
.LABEL $label$35
	$7 = (CASTING uint_64)(uint_32 $1)
	$6 = ((uint_64)(int_64)-1 / (uint_64)$7)
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$46:
	if ( ((uint_64)$14 > (uint_64)$6) ){ goto $label$12 }
	$5 = (CASTING uint_64)(uint_32 ($10 & [255]))
	$12 = ((int_64)$14 * (int_64)$7)
	if ( ((uint_64)$12 > (uint_64)((int_64)$5 ^ (int_64)-1)) ){ goto $label$12 }
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$48 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$47 
	
.LABEL $label$48
	$13 = CALL __shgetc($0)
	
.LABEL $label$47
	$14 = ((int_64)$5 + (int_64)$12)
	$10 = *(($13 + [15553]))
	if ( ($10 <= $1) ){ goto $label$46 }
	goto $label$12 
	
.LABEL $label$34
	$14 = (int_64)0
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$12 }
	
.LABEL $label$33
	$5 = (CASTING uint_64)(uint_32 $2)
	$6 = (uint_64)(int_64)-1 >> (uint_64)$5
	if ( ((uint_64)$14 > (uint_64)$6)) ){ goto $label$12 }
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$49:
	$14 = ((int_64)$14 << (int_64)$5)
	$12 = (CASTING uint_64)(uint_32 ($10 & [255]))
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$51 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$50 
	
.LABEL $label$51
	$13 = CALL __shgetc($0)
	
.LABEL $label$50
	$14 = ((int_64)$12 | (int_64)$14)
	$10 = *(($13 + [15553]))
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$12 }
	if ( ((uint_64)$14 <= (uint_64)$6) ){ goto $label$49 }
	
.LABEL $label$12
	if ( ((uint_32)*(($13 + [15553])) >= (uint_32)$1) ){ goto $label$11 }
	$9 = ($0 + [104])
	$10 = ($0 + [4])
	
.LOOP $label$52:
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*($9)) ){ goto $label$54 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$53 
	
.LABEL $label$54
	$13 = CALL __shgetc($0)
	
.LABEL $label$53
	if ( (*(($13 + [15553])) <= $1) ){ goto $label$52 }
	*(CALL __errno_location()) = [34]
	$4 = ( $4 ? [0] : (int_64)(((int_64)$3 & (int_64)1) == 0) )
	$14 = $3
	
.LABEL $label$11
	if ( (*(($0 + [104])) == 0) ){ goto $label$55 }
	*(($13 = ($0 + [4]))) = (*($13) + [-1])
	
.LABEL $label$55
	if ( (uint_64)($14 <= $3) ){ goto $label$56 }
	if ( (CASTING uint_32)(uint_64 ((int_64)$3 & (int_64)1)) ){ goto $label$57 }
	if ( $4 ){ goto $label$57 }
	*(CALL __errno_location()) = [34]
	return ((int_64)$3 + (int_64)-1)
	
.LABEL $label$57
	if ( ((uint_64)$14 <= (uint_64)$3) ){ goto $label$56 }
	*(CALL __errno_location()) = [34]
	return $3
	
.LABEL $label$56
	$12 = (CASTING int_64)(int_32 $4)
	$14 = (int_64))(((int_64)$14 ^ (int_64)$12) - $12)
	
.LABEL $label$10
	return $14
	
.LABEL $label$9
	CALL __shlim($0, (int_64)0)
	$10
	return (int_64)0
}

int_32 .FUNC __uflow (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = [-1]
	if ( CALL __toread($0) ){ goto $label$1 }
	if ( ((int_32)CALL int_32 $0((int_32 ($2 + [15])), (int_32 [1]), (int_32 *($0 + [32]))) != (int_32)[1]) ){ goto $label$1 }
	$1 = *($2 + [15])
	
.LABEL $label$1
	*([0] + [4]) = ($2 + [16])
	return $1
}

int_32 .FUNC __shgetc (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [112])
	if ( (int_64)($1 == 0) ){ goto $label$7 }
	if ( ((int_64)*($0 + [120]) >= (int_64)$1) ){ goto $label$6 }
	
.LABEL $label$7
	$4 = CALL __uflow($0)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	$1 = *(($0 + [112]))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$5 }
	$1 = (int_64)
	$2 = *($0 + [4])
	$3 = *(($0 + [8]))
	if ( ((int_64)(CASTING int_64)(int_32 ($3 - $2)) < (int_64)$1($1 - *($0 + [120])))) ){ goto $label$4 }
	*($0 + [104]) = ($2 + (CASTING uint_32)(uint_64 ((int_64)$1 + (int_64)4294967295)))
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	*($0 + [104]) = [0]
	return [-1]
	
.LABEL $label$5
	$3 = *(($0 + [8]))
	
.LABEL $label$4
	*($0 + [104]) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = *(($0 + [4]))
	*($0 + [120]) = ((int_64)(CASTING int_64)(int_32 (($3 + [1]) - $3)) + (int_64)*($0 + [120]))
	goto $label$1 
	
.LABEL $label$2
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	$0 = ($3 + [-1])
	if ( ((int_32)*($0) == (int_32)$4) ){ goto $label$8 }
	*($0) = $4
	
.LABEL $label$8
	return $4
}

void .FUNC $98 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$7 = ($5 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$6 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $238(((int_32)$6 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $244($0)
	
.LABEL $label$1
	*(($8 = ($7 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($8 + [8]) = *($3)
	*($8 + [16 align=4]) = (int_64)0
	*(($3 = ($8 + [24]))) = [0]
	$2 = CALL $238([16])
	*($8 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($8 + [20])) = $5
	*($8 + [28]) = [0]
	*(($2 = ($8 + [32]))) = [0]
	*(($8 + [36])) = [0]
	CALL $74(($8 + [28]), [8])
	$2 = *($8 + [28])
	CALL eosio_assert(((int_32)(*($2) - $2) > (int_32)[7]), [1056])
	CALL memcpy($2, $4, [8])
	$4 = ($7 + ((int_32)$6 * (int_32)[40]))
	$5 = ($8 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$3 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($2 + [-12]))
	*(($8 + [-40])) = *(($2 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($6 = ($8 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($8 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($6) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($6 = ($8 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($8 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($6) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $3) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	$1 = ([0] - $6)
	$8 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($8 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $2
	CALL $240($2)
	
.LABEL $label$10
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $2
	CALL $240($2)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $240($6)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $99 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($4) = [0]
	CALL $104($4, $1)
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $74($0, $2)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($4 + [4]) = $0
	*($4) = $0
	*($4 + [8]) = $3
	CALL $105($4, $1)
	CALL $107(CALL $106(CALL $106($4, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $239 (int_32 $0)
{
	return CALL $238($0)
}

int_32 .FUNC $238 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [15500])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [416])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $238([48])) + [16]) = (int_64)0
	*($4 + [8]) = [0]
	*($4 + [24]) = (int_64)1397703940
	CALL eosio_assert([1], [512])
	$7 = (int_64)5459781
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [480])
	*($4 + [32]) = $0
	CALL $108(($8 + [32]), $4)
	*($4 + [36]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [36])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $96($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $240($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *([0] + [4])
	$7 = $5
	$6 = *($0 + [4])
	*($1) = *(*($6))
	$2 = *($0)
	$6 = *(*($6 + [4]) + [4])
	*($1 + [16]) = *($6 + [56])
	*(($1 + [24])) = *(($6 + [64]))
	$3 = ($1 + [16])
	if ( (*([0] + [1332]) == 0) ){ goto $label$2 }
	$6 = *([0] + [1336])
	goto $label$1 
	
.LABEL $label$2
	$4 = CALL current_time()
	*([0] + [1332]) = [1]
	$6 = (CASTING uint_32)(uint_64 ((uint_64)$4 / (uint_64)(int_64)1000000))
	*([0] + [1336]) = $6
	
.LABEL $label$1
	*($1 + [8]) = $6
	$5 = $5
	$6 = ($5 + [-32])
	*([0] + [4]) = $6
	CALL eosio_assert([1], [1056])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy(($5 + [-24]), ($1 + [8]), [4])
	CALL eosio_assert([1], [1056])
	CALL memcpy(($5 + [-20]), $3, [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy(($5 + [-12]), ($1 + [24]), [8])
	$4 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($2 + [8]), (int_64)-5001342326447013888, *(*($0 + [8])), $4, $6, [28])
	if ( (uint_64)($4 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = $7
}

void .FUNC $96 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $238(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $244($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $240($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $240($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $97 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$6 = *([0] + [4])
	$7 = $6
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	$4 = *($1)
	$3 = *(*($3) + [4])
	CALL eosio_assert(((int_64)*(($3 + [64])) == (int_64)*(($1 + [24]))), [880])
	$5 = ((int_64)*($1 + [16]) + (int_64)*($3 + [56]))
	*($1 + [16]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($1 + [16]) < (int_64)4611686018427387904), [960])
	if ( (*([0] + [1332]) == 0) ){ goto $label$2 }
	$3 = *([0] + [1336])
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL current_time()
	*([0] + [1332]) = [1]
	$3 = (CASTING uint_32)(uint_64 ((uint_64)$5 / (uint_64)(int_64)1000000))
	*([0] + [1336]) = $3
	
.LABEL $label$1
	*($1 + [8]) = $3
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [992])
	$3 = $6
	$6 = ($3 + [-32])
	*([0] + [4]) = $6
	CALL eosio_assert([1], [1056])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy(($3 + [-24]), ($1 + [8]), [4])
	CALL eosio_assert([1], [1056])
	CALL memcpy(($3 + [-20]), ($1 + [16]), [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy(($3 + [-12]), ($1 + [24]), [8])
	CALL db_update_i64(*($1 + [36]), $2, $6, [28])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = $7
}

void .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1056])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1056])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1056])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $91(*($1), ($0 + [32]))
}

int_32 .FUNC $91 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [1056])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [1056])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [416])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $238([48])) + [32]) = $0
	CALL $109(($8 + [32]), $6)
	*($6 + [36]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [36])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $110(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $240($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $93 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	$4 = *($1 + [48])
	$9 = $8
	CALL __multi3($9, $4, (int_64)$4 >> (int_64)63), (int_64)833, (int_64)0)
	*($1 + [32]) = *(*($3))
	$3 = ($1 + [56])
	$7 = *($3)
	$4 = *($1)
	$5 = *(($9 + [8]))
	$6 = *($9)
	CALL eosio_assert(( (uint_64)($6 <= (int_64)4611686018427387904) ? ((int_64)$5 < (int_64)0) : (int_64)($5 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$6 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$5 > (int_64)-1) : ((int_64)$5 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*($3) = $7
	*($1 + [48]) = ((int_64)$6 / (int_64)1000)
	$5 = *($1 + [16])
	if ( (uint_64)($5 <= (int_64)2) ){ goto $label$1 }
	*(($1 + [16])) = ((int_64)$5 + (int_64)-1)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [992])
	$3 = $8
	$8 = ($3 + [-96])
	*([0] + [4]) = $8
	*($9 + [20]) = $8
	*($9 + [16]) = $8
	*($9 + [24]) = ($3 + [-8])
	CALL $62(($9 + [16]), $1)
	CALL db_update_i64(*($1 + [92]), $2, $8, [88])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$2 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [32])
}

void .FUNC _ZN7campwar10save_bonusEN5eosio5assetE (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [64])
	*([0] + [4]) = $10
	$2 = *($1)
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)63)) ^ (int_32)[1]), [3296])
	$3 = ($0 + [208])
	$9 = [0]
	$4 = CALL db_lowerbound_i64(*($0 + [208]), *(($0 + [216])), (int_64)4406679876405297152, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $139($3, $4)
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [3328])
	$6 = *($0)
	CALL eosio_assert(((int_32)*($9 + [40]) == (int_32)$3), [768])
	CALL eosio_assert(((int_64)*($3) == (int_64)CALL $fimport$4()), [816])
	$5 = *($9)
	$7 = *($1 + [8])
	CALL eosio_assert(((int_64)$7 == (int_64)*(($9 + [16]))), [880])
	$8 = ((int_64)*($9 + [8]) + (int_64)$2)
	*($9 + [8]) = $8
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($9 + [8]) < (int_64)4611686018427387904), [960])
	CALL eosio_assert(((int_64)$7 == (int_64)*(($9 + [32]))), [880])
	$2 = ((int_64)*($9 + [24]) + (int_64)$2)
	*($9 + [24]) = $2
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($9 + [24]) < (int_64)4611686018427387904), [960])
	CALL eosio_assert(((int_64)$5 == (int_64)*($9)), [992])
	*($10 + [56]) = ($10 + [40])
	*($10 + [52]) = $10
	*($10 + [48]) = $10
	CALL $140(($10 + [48]), $9)
	CALL db_update_i64(*($9 + [44]), $6, $10, [40])
	$9 = ($0 + [224])
	if ( (uint_64)($5 <= *($9)) ){ goto $label$2 }
	*($9) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*([0] + [4]) = ($10 + [64])
}

int_32 .FUNC $139 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [416])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $238([56])
	$4 = CALL $141($6)
	*($6 + [40]) = $0
	CALL $142(($8 + [32]), $4)
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [44])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $143(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $240($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC _ZN7campwar7buy_gunEN5eosio4nameEyNS0_5assetE (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_64 $21
	int_64 $22
	int_64 $23
	int_64 $24
	int_32 $25
	int_32 $26
	$26 = (*([0] + [4]) - [608])
	*([0] + [4]) = $26
	*($26 + [440]) = $2
	CALL eosio_assert(CALL $fimport$16($1), [4640])
	CALL _ZN7campwar22validate_player_activeEy($0, $1)
	$8 = *(($0 + [72]))
	$11 = *(($0 + [76]))
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$1 }
	$25 = ($11 + [-24])
	$12 = ([0] - $8)
	
.LOOP $label$2:
	if ( ((int_64)*(*($25)) == (int_64)$1) ){ goto $label$1 }
	$11 = $25
	$20 = ($25 + [-24])
	$25 = $20
	if ( ((int_32)($20 + $12) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [48])
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$4 }
	$5 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [324]) == (int_32)$4), [592])
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	$25 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$25 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $50($4, $25)
	CALL eosio_assert(((int_32)*($5 + [324]) == (int_32)$4), [592])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [1232])
	$25 = [0]
	$20 = CALL db_lowerbound_i64(*($0 + [128]), *(($0 + [136])), (int_64)4982871454518345728, (int_64)0)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$5 }
	$25 = CALL $78(($0 + [128]), $20)
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$25 != (int_32)[0]), [2128])
	CALL eosio_assert(*($25 + [8]), [2160])
	$23 = *($5 + [8])
	$8 = *(($0 + [32]))
	$11 = *(($0 + [36]))
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$6 }
	$25 = ($11 + [-24])
	$12 = ([0] - $8)
	
.LOOP $label$7:
	if ( ((int_64)*(*($25)) == (int_64)$23) ){ goto $label$6 }
	$11 = $25
	$20 = ($25 + [-24])
	$25 = $20
	if ( ((int_32)($20 + $12) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$6 = ($0 + [8])
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$9 }
	$18 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($18 + [144]) == (int_32)$6), [592])
	goto $label$8 
	
.LABEL $label$9
	$18 = [0]
	$25 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)4730274944552796160, $23)
	if ( ((int_32)$25 < (int_32)[0]) ){ goto $label$8 }
	$18 = CALL $66($6, $25)
	CALL eosio_assert(((int_32)*($18 + [144]) == (int_32)$6), [592])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$18 != (int_32)[0]), [2976])
	CALL eosio_assert(*($18 + [8]), [4672])
	*(($25 = (($26 + [424]) + [12]))) = *(($3 + [12]))
	*(($20 = (($26 + [424]) + [8]))) = *(($3 + [8]))
	*($26 + [428]) = *(($3 + [4]))
	*($26 + [424]) = *($3)
	$23 = *($18)
	*((($26 + [208]) + [12])) = *($25)
	*((($26 + [208]) + [8])) = *($20)
	*($26 + [212]) = *($26 + [428])
	*($26 + [208]) = *($26 + [424])
	CALL eosio_assert(CALL $183($0, $23, $2, ($26 + [208])), [4752])
	$8 = *(($0 + [112]))
	$11 = *(($0 + [116]))
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$10 }
	$25 = ($11 + [-24])
	$12 = ([0] - $8)
	
.LOOP $label$11:
	if ( ((int_64)*(*($25)) == (int_64)$2) ){ goto $label$10 }
	$11 = $25
	$20 = ($25 + [-24])
	$25 = $20
	if ( ((int_32)($20 + $12) != (int_32)[-24]) ){ goto $label$11 }
	
.LABEL $label$10
	$7 = ($0 + [88])
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$13 }
	$8 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [88]) == (int_32)$7), [592])
	goto $label$12 
	
.LABEL $label$13
	$8 = [0]
	$25 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)7396599438002618368, $2)
	if ( ((int_32)$25 < (int_32)[0]) ){ goto $label$12 }
	$8 = CALL $57($7, $25)
	CALL eosio_assert(((int_32)*($8 + [88]) == (int_32)$7), [592])
	
.LABEL $label$12
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [656])
	CALL eosio_assert(((int_64)*($8 + [8]) != (int_64)2), [4800])
	CALL _ZN7campwar25validate_gun_is_availableEy($0, $2)
	$23 = *($8 + [40])
	if ( ((int_64)*($8 + [8]) == (int_64)1) ){ goto $label$14 }
	CALL eosio_assert(((int_64)*(($5 + [8])) == (int_64)*($8 + [32])), [4848])
	
.LABEL $label$14
	$21 = *(($8 + [56]))
	$10 = *($8 + [16])
	$9 = *($8 + [48])
	if ( (int_64)($23 == 0) ){ goto $label$20 }
	$19 = *(($0 + [72]))
	$11 = *(($0 + [76]))
	if ( ((int_32)$11 == (int_32)$19) ){ goto $label$21 }
	$25 = ($11 + [-24])
	$12 = ([0] - $19)
	
.LOOP $label$22:
	if ( ((int_64)*(*($25)) == (int_64)$23) ){ goto $label$21 }
	$11 = $25
	$20 = ($25 + [-24])
	$25 = $20
	if ( ((int_32)($20 + $12) != (int_32)[-24]) ){ goto $label$22 }
	
.LABEL $label$21
	if ( ((int_32)$11 == (int_32)$19) ){ goto $label$19 }
	$19 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($19 + [324]) == (int_32)$4), [592])
	goto $label$18 
	
.LABEL $label$20
	$2 = (int_64)$9 >> (int_64)63
	CALL __multi3(($26 + [32]), $9, $2), (int_64)35, (int_64)0)
	CALL __multi3(($26 + [16]), $9, $2, (int_64)50, (int_64)0)
	$14 = *($3)
	$2 = *((($26 + [32]) + [8]))
	$23 = *($26 + [32])
	CALL eosio_assert(( (uint_64)($23 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$23 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	*($26 + [264]) = $21
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*((($26 + [64]) + [8])) = *($26 + [264])
	$2 = ((int_64)$23 / (int_64)100)
	*($26 + [256]) = $2
	*($26 + [64]) = $2
	CALL _ZN7campwar21save_realtime_rewardsEN5eosio5assetE($0, ($26 + [64]))
	$2 = *((($26 + [16]) + [8]))
	$23 = *($26 + [16])
	CALL eosio_assert(( (uint_64)($23 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$23 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	*($26 + [248]) = $21
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*((($26 + [48]) + [8])) = *($26 + [248])
	$2 = ((int_64)$23 / (int_64)100)
	*($26 + [240]) = $2
	*($26 + [48]) = $2
	CALL _ZN7campwar10save_bonusEN5eosio5assetE($0, ($26 + [48]))
	$15 = $21
	goto $label$17 
	
.LABEL $label$19
	$19 = [0]
	$25 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-6030912142679474176, $23)
	if ( ((int_32)$25 < (int_32)[0]) ){ goto $label$18 }
	$19 = CALL $50($4, $25)
	CALL eosio_assert(((int_32)*($19 + [324]) == (int_32)$4), [592])
	
.LABEL $label$18
	$20 = [0]
	CALL eosio_assert(((int_32)$19 != (int_32)[0]), [4912])
	*($26 + [416]) = [0]
	*($26 + [408]) = (int_64)0
	$11 = (*(($19 + [316])) - *($19 + [312]))
	$25 = int_32($11 >> [3])
	if ( ($25 == 0) ){ goto $label$26 }
	if ( ((uint_32)$25 >= (uint_32)[536870912]) ){ goto $label$16 }
	$20 = CALL $238($11)
	*(($26 + [416])) = ($20 + ($25 << [3]))
	*($26 + [408]) = $20
	*($26 + [412]) = $20
	$11 = *(($19 + [312]))
	$25 = (*(($19 + [316])) - $11)
	if ( ((int_32)$25 < (int_32)[1]) ){ goto $label$25 }
	CALL memcpy($20, $11, $25)
	$11 = ($20 + $25)
	*($26 + [412]) = $11
	$20 = $11
	$25 = $20
	if ( ((int_32)$25 != (int_32)$20) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$26
	$25 = [0]
	if ( ((int_32)[0] != (int_32)[0]) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$25 = $20
	if ( ((int_32)$25 == (int_32)$20) ){ goto $label$23 }
	
.LABEL $label$24
	
.LOOP $label$28:
	$11 = ($25 + [8])
	if ( ((int_64)*($25) != (int_64)$2) ){ goto $label$29 }
	
.LOOP $label$30:
	$12 = ($20 - $11)
	$20 = int_32($12 >> [3])
	if ( ($20 == 0) ){ goto $label$27 }
	CALL memmove($25, $11, $12)
	$20 = ($25 + ($20 << [3]))
	*($26 + [412]) = $20
	if ( ((int_64)*($25) == (int_64)$2) ){ goto $label$30 }
	
.LABEL $label$29
	$25 = $11
	if ( ((int_32)$11 != (int_32)$20) ){ goto $label$28 }
	goto $label$23 
	
.LABEL $label$27
	*($26 + [412]) = ($25 + ($20 << [3]))
	
.LABEL $label$23
	CALL eosio_assert([1], [512])
	$2 = (int_64)5459781
	$15 = (int_64)1397703940
	$25 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$34 }
	
.LOOP $label$35:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$32 }
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$35 }
	
.LABEL $label$34
	$20 = [1]
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$32
	$20 = [0]
	
.LABEL $label$31
	CALL eosio_assert($20, [480])
	*($26 + [400]) = (int_64)1397703940
	*($26 + [392]) = (int_64)0
	CALL eosio_assert([1], [512])
	$2 = (int_64)5459781
	$25 = [0]
	
.LOOP $label$38:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$37 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$39 }
	
.LOOP $label$40:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$37 }
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$40 }
	
.LABEL $label$39
	$20 = [1]
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$38 }
	goto $label$36 
	
.LABEL $label$37
	$20 = [0]
	
.LABEL $label$36
	CALL eosio_assert($20, [480])
	if ( ((int_64)*($19 + [8]) != (int_64)*(($5 + [8]))) ){ goto $label$42 }
	$2 = (int_64)$9 >> (int_64)63
	CALL __multi3(($26 + [160]), $9, $2), (int_64)10, (int_64)0)
	CALL __multi3(($26 + [144]), $9, $2, (int_64)120, (int_64)0)
	$2 = *((($26 + [160]) + [8]))
	$23 = *($26 + [160])
	CALL eosio_assert(( (uint_64)($23 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$23 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	CALL eosio_assert(((int_64)$21 == (int_64)1397703940), [880])
	CALL eosio_assert([1], [928])
	CALL eosio_assert([1], [960])
	$2 = *((($26 + [144]) + [8]))
	$22 = *($26 + [144])
	CALL eosio_assert(( (uint_64)($22 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$22 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	CALL eosio_assert(((int_64)$21 == (int_64)1397703940), [880])
	*($26 + [392]) = ((int_64)$22 / (int_64)100)
	CALL eosio_assert([1], [928])
	CALL eosio_assert([1], [960])
	goto $label$41 
	
.LABEL $label$42
	$2 = (int_64)$9 >> (int_64)63
	CALL __multi3(($26 + [192]), $9, $2), (int_64)20, (int_64)0)
	CALL __multi3(($26 + [176]), $9, $2, (int_64)160, (int_64)0)
	$2 = *((($26 + [192]) + [8]))
	$23 = *($26 + [192])
	CALL eosio_assert(( (uint_64)($23 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$23 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	CALL eosio_assert(((int_64)$21 == (int_64)1397703940), [880])
	CALL eosio_assert([1], [928])
	CALL eosio_assert([1], [960])
	$2 = *((($26 + [176]) + [8]))
	$22 = *($26 + [176])
	CALL eosio_assert(( (uint_64)($22 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$22 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	CALL eosio_assert(((int_64)$21 == (int_64)1397703940), [880])
	*($26 + [392]) = ((int_64)$22 / (int_64)100)
	CALL eosio_assert([1], [928])
	CALL eosio_assert([1], [960])
	$2 = *(($19 + [8]))
	$13 = *(($0 + [32]))
	$11 = *(($0 + [36]))
	if ( ((int_32)$11 == (int_32)$13) ){ goto $label$43 }
	$25 = ($11 + [-24])
	$12 = ([0] - $13)
	
.LOOP $label$44:
	if ( ((int_64)*(*($25)) == (int_64)$2) ){ goto $label$43 }
	$11 = $25
	$20 = ($25 + [-24])
	$25 = $20
	if ( ((int_32)($20 + $12) != (int_32)[-24]) ){ goto $label$44 }
	
.LABEL $label$43
	if ( ((int_32)$11 == (int_32)$13) ){ goto $label$46 }
	$25 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($25 + [144]) == (int_32)$6), [592])
	goto $label$45 
	
.LABEL $label$46
	$25 = [0]
	$20 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)4730274944552796160, $2)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$45 }
	$25 = CALL $66($6, $20)
	CALL eosio_assert(((int_32)*($25 + [144]) == (int_32)$6), [592])
	
.LABEL $label$45
	CALL eosio_assert(((int_32)$25 != (int_32)[0]), [4944])
	$21 = *($0)
	CALL eosio_assert(((int_32)*($25 + [144]) == (int_32)$6), [768])
	$20 = ($0 + [8])
	CALL eosio_assert(((int_64)*($20) == (int_64)CALL $fimport$4()), [816])
	*($25 + [104]) = ((int_64)*($25 + [104]) + (int_64)-1)
	$2 = *($25)
	CALL eosio_assert([1], [992])
	$11 = (($26 + [448]) + [136])
	*($26 + [360]) = $11
	*($26 + [356]) = ($26 + [448])
	*($26 + [352]) = ($26 + [448])
	CALL $80(($26 + [352]), $25)
	CALL db_update_i64(*($25 + [148]), $21, ($26 + [448]), [136])
	$25 = ($0 + [24])
	if ( (uint_64)($2 <= *($25)) ){ goto $label$47 }
	*($25) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$47
	$21 = *($0)
	CALL eosio_assert(((int_32)*($18 + [144]) == (int_32)$6), [768])
	CALL eosio_assert(((int_64)*($20) == (int_64)CALL $fimport$4()), [816])
	*($18 + [104]) = ((int_64)*($18 + [104]) + (int_64)1)
	$2 = *($18)
	CALL eosio_assert([1], [992])
	*($26 + [360]) = $11
	*($26 + [356]) = ($26 + [448])
	*($26 + [352]) = ($26 + [448])
	CALL $80(($26 + [352]), $18)
	CALL db_update_i64(*($18 + [148]), $21, ($26 + [448]), [136])
	if ( (uint_64)($2 <= *($25)) ){ goto $label$41 }
	*(($0 + [24])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$41
	$2 = *($0)
	*($26 + [452]) = ($26 + [392])
	*($26 + [448]) = ($26 + [408])
	CALL $184($4, $19, $2, ($26 + [448]))
	CALL eosio_assert(((int_64)*((($26 + [392]) + [8])) == (int_64)1397703940), [880])
	$14 = ((int_64)$23 / (int_64)100)
	$9 = ((int_64)*($26 + [392]) + (int_64)$14)
	CALL eosio_assert(((int_64)$9 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)$9 < (int_64)4611686018427387904), [960])
	$2 = *(($8 + [16]))
	$16 = (Rounds 0)(((float_64)((float_64)(CASTING float_64)(uint_64 ((int_64)$2 * (int_64)1500)) + (float_64)((float_64)CALL pow((CASTING float_64)(uint_64 $2), (float_64)2) * (float_64)(float_64)500)) + (float_64)(float_64)-1e3))
	$17 = *($3)
	if ( (int_64)(*($5 + [296]) == 0) ){ goto $label$52 }
	$24 = *($0)
	$2 = (int_64)0
	$21 = (int_64)59
	$25 = [1632]
	$22 = (int_64)0
	
.LOOP $label$53:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$58 }
	$20 = *($25)
	if ( ((uint_32)(($20 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$57 }
	$20 = ($20 + [165])
	goto $label$56 
	
.LABEL $label$58
	$23 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$57
	$20 = ( ($20 + [208]) ? [0] : ((($20 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$56
	$23 = (int_64)((int_64)(CASTING uint_64)(uint_32 $20) << (int_64)56) >> (int_64)56)
	
.LABEL $label$55
	$23 = ((int_64)((int_64)$23 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$54
	$25 = ($25 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$22 = ((int_64)$23 | (int_64)$22)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$53 }
	*($26 + [344]) = $22
	*($26 + [336]) = $24
	$2 = (int_64)0
	$21 = (int_64)59
	$25 = [128]
	$22 = (int_64)0
	
.LOOP $label$59:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$64 }
	$20 = *($25)
	if ( ((uint_32)(($20 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$63 }
	$20 = ($20 + [165])
	goto $label$62 
	
.LABEL $label$64
	$23 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$61 }
	goto $label$60 
	
.LABEL $label$63
	$20 = ( ($20 + [208]) ? [0] : ((($20 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$62
	$23 = (int_64)((int_64)(CASTING uint_64)(uint_32 $20) << (int_64)56) >> (int_64)56)
	
.LABEL $label$61
	$23 = ((int_64)((int_64)$23 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$60
	$25 = ($25 + [1])
	$21 = ((int_64)$21 + (int_64)-5)
	$22 = ((int_64)$23 | (int_64)$22)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$59 }
	$2 = (int_64)0
	$21 = (int_64)59
	$25 = [112]
	$24 = (int_64)0
	
.LOOP $label$65:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$70 }
	$20 = *($25)
	if ( ((uint_32)(($20 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$69 }
	$20 = ($20 + [165])
	goto $label$68 
	
.LABEL $label$70
	$23 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$67 }
	goto $label$66 
	
.LABEL $label$69
	$20 = ( ($20 + [208]) ? [0] : ((($20 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$68
	$23 = (int_64)((int_64)(CASTING uint_64)(uint_32 $20) << (int_64)56) >> (int_64)56)
	
.LABEL $label$67
	$23 = ((int_64)((int_64)$23 & (int_64)31) << (int_64)((int_64)$21 & (int_64)4294967295))
	
.LABEL $label$66
	$25 = ($25 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$24 = ((int_64)$23 | (int_64)$24)
	$21 = ((int_64)$21 + (int_64)-5)
	if ( ((int_64)$21 != (int_64)-6) ){ goto $label$65 }
	$2 = ((int_64)((int_64)$14 >> (int_64)63) << (int_64)2) | (int_64)(uint_64)$14 >> (uint_64)(int_64)62
	$23 = ((int_64)$14 << (int_64)2)
	$11 = ( (uint_64)($23 <= (int_64)4611686018427387904) ? ((int_64)$2)) < (int_64)0
	CALL eosio_assert($11 : (int_64)($2 == 0) )), [1968])
	$12 = ( ((uint_64)$23 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) )
	CALL eosio_assert($12, [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*(($26 + [328])) = [0]
	*($26 + [320]) = (int_64)0
	$23 = ((int_64)$23 / (int_64)100)
	$25 = CALL strlen([3376])
	if ( ((uint_32)$25 >= (uint_32)[-16]) ){ goto $label$15 }
	if ( ((uint_32)$25 >= (uint_32)[11]) ){ goto $label$51 }
	*($26 + [320]) = ($25 << [1])
	$20 = (($26 + [320]) | [1])
	if ( $25 ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$52
	$2 = ((int_64)$14 * (int_64)50)
	CALL eosio_assert(((int_64)$2 < (int_64)4611686018427387904), [1968])
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [2000])
	*($26 + [296]) = (int_64)1397703940
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*((($26 + [96]) + [8])) = *($26 + [296])
	$2 = ((int_64)$23 / (int_64)200)
	*($26 + [288]) = $2
	*($26 + [96]) = $2
	CALL _ZN7campwar10save_bonusEN5eosio5assetE($0, ($26 + [96]))
	goto $label$48 
	
.LABEL $label$51
	$18 = (($25 + [16]) & [-16])
	$20 = CALL $238($18)
	*($26 + [320]) = ($18 | [1])
	*($26 + [328]) = $20
	*($26 + [324]) = $25
	
.LABEL $label$50
	CALL memcpy($20, [3376], $25)
	
.LABEL $label$49
	*(($20 + $25)) = [0]
	$2 = *(($5 + [296]))
	*(($26 + [472])) = (int_64)1397703940
	*(($26 + [484])) = *($26 + [324 align=4])
	*($26 + [448]) = *($0)
	*($26 + [456]) = $2
	*($26 + [464]) = $23
	*($26 + [480]) = *($26 + [320])
	*($26 + [320]) = [0]
	*($26 + [324]) = [0]
	*(($26 + [328])) = [0]
	$25 = CALL $149(($26 + [352]), ($26 + [336]), $22, $24, ($26 + [448]))
	CALL $87(($26 + [592]), $25)
	$20 = *($26 + [592])
	CALL send_inline($20, (*($26 + [596]) - $20))
	$20 = *($26 + [592])
	if ( ($20 == 0) ){ goto $label$71 }
	*($26 + [596]) = $20
	CALL $240($20)
	
.LABEL $label$71
	$20 = *($25 + [28])
	if ( ($20 == 0) ){ goto $label$72 }
	*(($25 + [32])) = $20
	CALL $240($20)
	
.LABEL $label$72
	$20 = *($25 + [16])
	if ( ($20 == 0) ){ goto $label$73 }
	*(($25 + [20])) = $20
	CALL $240($20)
	
.LABEL $label$73
	if ( ((*(($26 + [480])) & [1]) == 0) ){ goto $label$74 }
	CALL $240(*(($26 + [488])))
	
.LABEL $label$74
	if ( ((*($26 + [320]) & [1]) == 0) ){ goto $label$75 }
	CALL $240(*(($26 + [328])))
	
.LABEL $label$75
	CALL __multi3(($26 + [112]), $14, (int_64)$14 >> (int_64)63), (int_64)50, (int_64)0)
	$2 = *((($26 + [112]) + [8]))
	$21 = *($26 + [112])
	CALL eosio_assert(( (uint_64)($21 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$21 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	CALL eosio_assert($11, [1968])
	CALL eosio_assert($12, [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*($26 + [312]) = (int_64)1397703940
	CALL eosio_assert([1], [3408])
	$2 = (int_64)
	*($26 + [304]) = $2(((int_64)$21 / (int_64)100) - $23))
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [3456])
	CALL eosio_assert(((int_64)$2 < (int_64)4611686018427387904), [3488])
	*((($26 + [128]) + [8])) = *($26 + [312])
	*($26 + [128]) = *($26 + [304])
	CALL _ZN7campwar10save_bonusEN5eosio5assetE($0, ($26 + [128]))
	
.LABEL $label$48
	$23 = (CASTING uint_64)(uint_32 ((int_64)$17 >= (int_64)$16))
	$2 = ((int_64)$14 * (int_64)35)
	CALL eosio_assert(((int_64)$2 < (int_64)4611686018427387904), [1968])
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [2000])
	*($26 + [280]) = (int_64)1397703940
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*(($26 + [88])) = *($26 + [280])
	$2 = ((int_64)$2 / (int_64)100)
	*($26 + [272]) = $2
	*($26 + [80]) = $2
	CALL _ZN7campwar21save_realtime_rewardsEN5eosio5assetE($0, ($26 + [80]))
	$25 = *($26 + [408])
	if ( ($25 == 0) ){ goto $label$76 }
	*($26 + [412]) = $25
	CALL $240($25)
	
.LABEL $label$76
	$10 = ((int_64)$23 + (int_64)$10)
	
.LABEL $label$17
	$23 = *($0)
	CALL eosio_assert(((int_32)*($8 + [88]) == (int_32)$7), [768])
	CALL eosio_assert(((int_64)*(($0 + [88])) == (int_64)CALL $fimport$4()), [816])
	*(($8 + [40])) = $1
	*(($8 + [16])) = $10
	$2 = *(($5 + [8]))
	*(($8 + [48])) = $9
	*(($8 + [56])) = $15
	*($8 + [32]) = $2
	$2 = *($8)
	CALL eosio_assert([1], [992])
	*($26 + [360]) = (($26 + [448]) + [88])
	*($26 + [356]) = ($26 + [448])
	*($26 + [352]) = ($26 + [448])
	CALL $62(($26 + [352]), $8)
	CALL db_update_i64(*($8 + [92]), $23, ($26 + [448]), [88])
	$25 = ($0 + [104])
	if ( (uint_64)($2 <= *($25)) ){ goto $label$77 }
	*($25) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$77
	*($26 + [360]) = [0]
	*($26 + [352]) = (int_64)0
	$25 = (*(($5 + [316])) - *($5 + [312]))
	$20 = int_32($25 >> [3])
	if ( ($20 == 0) ){ goto $label$80 }
	if ( ((uint_32)$20 >= (uint_32)[536870912]) ){ goto $label$78 }
	$25 = CALL $238($25)
	$20 = ($25 + ($20 << [3]))
	*(($12 = ($26 + [360]))) = $20
	*($26 + [352]) = $25
	*($26 + [356]) = $25
	$8 = *(($5 + [312]))
	$11 = (*(($5 + [316])) - $8)
	if ( ((int_32)$11 < (int_32)[1]) ){ goto $label$81 }
	CALL memcpy($25, $8, $11)
	$25 = (*($26 + [356]) + $11)
	*($26 + [356]) = $25
	$20 = *($12)
	
.LABEL $label$81
	if ( ((int_32)$25 == (int_32)$20) ){ goto $label$80 }
	*($25) = *($26 + [440])
	*($26 + [356]) = ($25 + [8])
	goto $label$79 
	
.LABEL $label$80
	CALL $185(($26 + [352]), ($26 + [440]))
	
.LABEL $label$79
	$2 = CALL _ZN7campwar8cal_mineEx($26, ((int_64)$14 * (int_64)100))
	*($26 + [456]) = (int_64)1413893636
	*($26 + [448]) = $2
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [512])
	$2 = (int_64)5523022
	$25 = [0]
	
.LOOP $label$84:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$83 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$85 }
	
.LOOP $label$86:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$83 }
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$86 }
	
.LABEL $label$85
	$20 = [1]
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$84 }
	goto $label$82 
	
.LABEL $label$83
	$20 = [0]
	
.LABEL $label$82
	CALL eosio_assert($20, [480])
	$2 = *((($26 + [448]) + [8]))
	*((($26 + [224]) + [8])) = $2
	*(($26 + [8])) = $2
	$2 = *($26 + [448])
	*($26 + [224]) = $2
	*($26) = $2
	CALL _ZN7campwar15distribute_mineEN5eosio4nameENS0_5assetE($0, $1, $26)
	$2 = *($0)
	*($26 + [396]) = $3
	*($26 + [392]) = ($26 + [352])
	*($26 + [400]) = ($26 + [448])
	CALL $186($4, $5, $2, ($26 + [392]))
	$25 = *($26 + [352])
	if ( ($25 == 0) ){ goto $label$87 }
	*($26 + [356]) = $25
	CALL $240($25)
	
.LABEL $label$87
	*([0] + [4]) = ($26 + [608])
	return (unreachable)
	
.LABEL $label$78
	CALL $244(($26 + [352]))
	
.LABEL $label$16
	CALL $244(($26 + [408]))
	
.LABEL $label$15
	CALL $242(($26 + [320]))
	(unreachable)
	(unreachable)
}

void .FUNC _ZN7campwar8level_upEN5eosio4nameEyNS0_5assetE (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	float_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_32 $17
	$17 = (*([0] + [4]) - [336])
	*([0] + [4]) = $17
	CALL _ZN7campwar22validate_player_activeEy($0, $1)
	$13 = [0]
	$8 = CALL db_lowerbound_i64(*($0 + [128]), *(($0 + [136])), (int_64)4982871454518345728, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$13 = CALL $78(($0 + [128]), $8)
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$13 != (int_32)[0]), [2128])
	CALL eosio_assert(*($13 + [8]), [2160])
	$11 = *(($0 + [112]))
	$10 = *(($0 + [116]))
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$2 }
	$13 = ($10 + [-24])
	$5 = ([0] - $11)
	
.LOOP $label$3:
	if ( ((int_64)*(*($13)) == (int_64)$2) ){ goto $label$2 }
	$10 = $13
	$8 = ($13 + [-24])
	$13 = $8
	if ( ((int_32)($8 + $5) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	$4 = ($0 + [88])
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$5 }
	$11 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [88]) == (int_32)$4), [592])
	goto $label$4 
	
.LABEL $label$5
	$11 = [0]
	$13 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)7396599438002618368, $2)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$4 }
	$11 = CALL $57($4, $13)
	CALL eosio_assert(((int_32)*($11 + [88]) == (int_32)$4), [592])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [656])
	CALL eosio_assert(((int_64)*($11 + [40]) == (int_64)$1), [4400])
	CALL _ZN7campwar25validate_gun_is_availableEy($0, $2)
	$2 = ((int_64)((int_64)*($11 + [16]) * (int_64)500) + (int_64)1000)
	*($17 + [312]) = $2
	CALL eosio_assert(((int_64)*($3) >= (int_64)$2), [4448])
	$12 = *(($0 + [72]))
	$10 = *(($0 + [76]))
	if ( ((int_32)$10 == (int_32)$12) ){ goto $label$6 }
	$13 = ($10 + [-24])
	$5 = ([0] - $12)
	
.LOOP $label$7:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$6 }
	$10 = $13
	$8 = ($13 + [-24])
	$13 = $8
	if ( ((int_32)($8 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$6 = ($0 + [48])
	if ( ((int_32)$10 == (int_32)$12) ){ goto $label$9 }
	$12 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [324]) == (int_32)$6), [592])
	goto $label$8 
	
.LABEL $label$9
	$12 = [0]
	$13 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$8 }
	$12 = CALL $50($6, $13)
	CALL eosio_assert(((int_32)*($12 + [324]) == (int_32)$6), [592])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [4496])
	$2 = *($12 + [8])
	$7 = *(($0 + [32]))
	$10 = *(($0 + [36]))
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$10 }
	$13 = ($10 + [-24])
	$5 = ([0] - $7)
	
.LOOP $label$11:
	if ( ((int_64)*(*($13)) == (int_64)$2) ){ goto $label$10 }
	$10 = $13
	$8 = ($13 + [-24])
	$13 = $8
	if ( ((int_32)($8 + $5) != (int_32)[-24]) ){ goto $label$11 }
	
.LABEL $label$10
	$8 = ($0 + [8])
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$13 }
	$13 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [144]) == (int_32)$8), [592])
	goto $label$12 
	
.LABEL $label$13
	$13 = [0]
	$10 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)4730274944552796160, $2)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$13 = CALL $66($8, $10)
	CALL eosio_assert(((int_32)*($13 + [144]) == (int_32)$8), [592])
	
.LABEL $label$12
	CALL eosio_assert(((int_32)$13 != (int_32)[0]), [4544])
	if ( (*([0] + [1332]) == 0) ){ goto $label$15 }
	$13 = *([0] + [1336])
	goto $label$14 
	
.LABEL $label$15
	$2 = CALL current_time()
	*([0] + [1332]) = [1]
	$13 = (CASTING uint_32)(uint_64 ((uint_64)$2 / (uint_64)(int_64)1000000))
	*([0] + [1336]) = $13
	
.LABEL $label$14
	$9 = CALL pow((CASTING float_64)(uint_64 ((int_64)*(($11 + [16])) << (int_64)1)), (float_64)2)
	CALL eosio_assert(((uint_32)$13 > (uint_32)((*($11 + [24]) + (CASTING uint_32)(float_64 ((float_64)((float_64)$9 * (float_64)(float_64)60) / (float_64)(float_64)10))) + [60])), [4576])
	$2 = *($0)
	*($17 + [176]) = ($17 + [312])
	CALL $181($4, $11, $2, ($17 + [176]))
	$2 = CALL _ZN7campwar8cal_mineEx($17, ((int_64)*($17 + [312]) * (int_64)100))
	*($17 + [304]) = (int_64)1413893636
	*($17 + [296]) = $2
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [512])
	$2 = (uint_64)*($17 + [304]) >> (uint_64)(int_64)8)
	$13 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$8 = [1]
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$8 = [0]
	
.LABEL $label$16
	CALL eosio_assert($8, [480])
	$2 = *((($17 + [296]) + [8]))
	*((($17 + [280]) + [8])) = $2
	*((($17 + [96]) + [8])) = $2
	$2 = *($17 + [296])
	*($17 + [280]) = $2
	*($17 + [96]) = $2
	CALL _ZN7campwar15distribute_mineEN5eosio4nameENS0_5assetE($0, $1, ($17 + [96]))
	$2 = *($0)
	*($17 + [176]) = $3
	*($17 + [180]) = ($17 + [296])
	CALL $182($6, $12, $2, ($17 + [176]))
	if ( (int_64)(*($12 + [296]) == 0) ){ goto $label$26 }
	$16 = *($0)
	$2 = (int_64)0
	$14 = (int_64)59
	$13 = [1632]
	$15 = (int_64)0
	
.LOOP $label$27:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$32 }
	$8 = *($13)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$31 }
	$8 = ($8 + [165])
	goto $label$30 
	
.LABEL $label$32
	$1 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$31
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$30
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$29
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$28
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$15 = ((int_64)$1 | (int_64)$15)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$27 }
	*($17 + [232]) = $15
	*($17 + [224]) = $16
	$2 = (int_64)0
	$14 = (int_64)59
	$13 = [128]
	$15 = (int_64)0
	
.LOOP $label$33:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$38 }
	$8 = *($13)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$37 }
	$8 = ($8 + [165])
	goto $label$36 
	
.LABEL $label$38
	$1 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$37
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$36
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$35
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$34
	$13 = ($13 + [1])
	$14 = ((int_64)$14 + (int_64)-5)
	$15 = ((int_64)$1 | (int_64)$15)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$33 }
	$2 = (int_64)0
	$14 = (int_64)59
	$13 = [112]
	$16 = (int_64)0
	
.LOOP $label$39:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$44 }
	$8 = *($13)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$43 }
	$8 = ($8 + [165])
	goto $label$42 
	
.LABEL $label$44
	$1 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$41 }
	goto $label$40 
	
.LABEL $label$43
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$42
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$41
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$40
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$16 = ((int_64)$1 | (int_64)$16)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$39 }
	$14 = *($3 + [8])
	$2 = ((int_64)((int_64)$2 >> (int_64)63) << (int_64)2) | (int_64)(uint_64)$2 >> (uint_64)(int_64)62
	$2 = *($3)
	$1 = ((int_64)$2 << (int_64)2)
	CALL eosio_assert(( (uint_64)($1 <= (int_64)4611686018427387904) ? ((int_64)$2)) < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$1 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*(($17 + [168])) = [0]
	*($17 + [160]) = (int_64)0
	$2 = ((int_64)$1 / (int_64)100)
	$13 = CALL strlen([3376])
	if ( ((uint_32)$13 >= (uint_32)[-16]) ){ goto $label$21 }
	if ( ((uint_32)$13 >= (uint_32)[11]) ){ goto $label$25 }
	*($17 + [160]) = ($13 << [1])
	$8 = (($17 + [160]) | [1])
	if ( $13 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$26
	$2 = *($3)
	CALL __multi3(($17 + [32]), $2, (int_64)$2 >> (int_64)63), (int_64)50, (int_64)0)
	$14 = *($3 + [8])
	$2 = *((($17 + [32]) + [8]))
	$1 = *($17 + [32])
	CALL eosio_assert(( (uint_64)($1 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$1 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	*($17 + [136]) = $14
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*((($17 + [48]) + [8])) = *($17 + [136])
	$2 = ((int_64)$1 / (int_64)100)
	*($17 + [128]) = $2
	*($17 + [48]) = $2
	CALL _ZN7campwar10save_bonusEN5eosio5assetE($0, ($17 + [48]))
	goto $label$22 
	
.LABEL $label$25
	$10 = (($13 + [16]) & [-16])
	$8 = CALL $238($10)
	*($17 + [160]) = ($10 | [1])
	*($17 + [168]) = $8
	*($17 + [164]) = $13
	
.LABEL $label$24
	CALL memcpy($8, [3376], $13)
	
.LABEL $label$23
	*(($8 + $13)) = [0]
	$1 = *(($12 + [296]))
	*(($17 + [200])) = $14
	*(($17 + [212])) = *($17 + [164 align=4])
	*($17 + [176]) = *($0)
	*($17 + [184]) = $1
	*($17 + [192]) = $2
	*($17 + [208]) = *($17 + [160])
	*($17 + [160]) = [0]
	*($17 + [164]) = [0]
	*(($17 + [168])) = [0]
	$13 = CALL $149(($17 + [240]), ($17 + [224]), $15, $16, ($17 + [176]))
	CALL $87(($17 + [320]), $13)
	$8 = *($17 + [320])
	CALL send_inline($8, (*($17 + [324]) - $8))
	$8 = *($17 + [320])
	if ( ($8 == 0) ){ goto $label$45 }
	*($17 + [324]) = $8
	CALL $240($8)
	
.LABEL $label$45
	$8 = *($13 + [28])
	if ( ($8 == 0) ){ goto $label$46 }
	*(($13 + [32])) = $8
	CALL $240($8)
	
.LABEL $label$46
	$8 = *($13 + [16])
	if ( ($8 == 0) ){ goto $label$47 }
	*(($13 + [20])) = $8
	CALL $240($8)
	
.LABEL $label$47
	if ( ((*(($17 + [208])) & [1]) == 0) ){ goto $label$48 }
	CALL $240(*(($17 + [216])))
	
.LABEL $label$48
	if ( ((*($17 + [160]) & [1]) == 0) ){ goto $label$49 }
	CALL $240(*(($17 + [168])))
	
.LABEL $label$49
	$2 = *($3)
	CALL __multi3(($17 + [64]), $2, (int_64)$2 >> (int_64)63), (int_64)50, (int_64)0)
	$13 = ($3 + [8])
	$1 = *($13)
	$2 = *((($17 + [64]) + [8]))
	$14 = *($17 + [64])
	CALL eosio_assert(( (uint_64)($14 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$14 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	$16 = *($13)
	$2 = ((int_64)((int_64)$2 >> (int_64)63) << (int_64)2) | (int_64)(uint_64)$2 >> (uint_64)(int_64)62
	$2 = *($3)
	$15 = ((int_64)$2 << (int_64)2)
	CALL eosio_assert(( (uint_64)($15 <= (int_64)4611686018427387904) ? ((int_64)$2)) < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$15 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*($17 + [152]) = $1
	CALL eosio_assert(((int_64)$16 == (int_64)$1), [3408])
	$2 = (int_64)
	*($17 + [144]) = $2(((int_64)$14 / (int_64)100) - ((int_64)$15 / (int_64)100)))
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [3456])
	CALL eosio_assert(((int_64)$2 < (int_64)4611686018427387904), [3488])
	*((($17 + [80]) + [8])) = *($17 + [152])
	*($17 + [80]) = *($17 + [144])
	CALL _ZN7campwar10save_bonusEN5eosio5assetE($0, ($17 + [80]))
	
.LABEL $label$22
	$2 = *($3)
	CALL __multi3($17, $2, (int_64)$2 >> (int_64)63), (int_64)35, (int_64)0)
	$14 = *(($3 + [8]))
	$2 = *(($17 + [8]))
	$1 = *($17)
	CALL eosio_assert(( (uint_64)($1 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$1 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	*($17 + [120]) = $14
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*((($17 + [16]) + [8])) = *($17 + [120])
	$2 = ((int_64)$1 / (int_64)100)
	*($17 + [112]) = $2
	*($17 + [16]) = $2
	CALL _ZN7campwar21save_realtime_rewardsEN5eosio5assetE($0, ($17 + [16]))
	*([0] + [4]) = ($17 + [336])
	return (unreachable)
	
.LABEL $label$21
	CALL $242(($17 + [160]))
}

int_32 .FUNC _ZN7campwar17parse_memo_attackERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERyS9_S9_ (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	$5 = *($1)
	if ( (( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ) == 0) ){ goto $label$7 }
	$8 = [0]
	*($9 + [32]) = [0]
	*($9 + [24]) = (int_64)0
	$5 = CALL strlen([2688])
	*($9 + [16]) = $5
	*($9 + [8]) = [0]
	if ( ((uint_32)$5 >= (uint_32)[9]) ){ goto $label$6 }
	$7 = ($9 + [8])
	if ( $5 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$8 = [0]
	goto $label$3 
	
.LABEL $label$6
	$7 = CALL $239($5)
	*($9 + [8]) = $7
	
.LABEL $label$5
	CALL memmove($7, [2688], $5)
	$8 = *(($9 + [16]))
	
.LABEL $label$4
	CALL $232($7, ($7 + $8), ($9 + [40]))
	CALL $114(($9 + [24]), $1, ($9 + [8]), [1])
	if ( (*(($9 + [16])) <= [9]) ){ goto $label$8 }
	$1 = *($9 + [8])
	if ( ($1 == 0) ){ goto $label$8 }
	CALL $241($1)
	
.LABEL $label$8
	$8 = [0]
	$7 = *($9 + [24])
	if ( (((int_32)(*($9 + [28]) - $7) / (int_32)[12]) <= [3]) ){ goto $label$9 }
	if ( (*($7) & [1]) ){ goto $label$11 }
	$1 = ($7 + [1])
	goto $label$10 
	
.LABEL $label$11
	$1 = *($7 + [8])
	
.LABEL $label$10
	*($2) = CALL strtoll($1, [0], [10])
	$1 = *($9 + [24])
	if ( ((uint_32)((int_32)(*($9 + [28]) - $1) / (int_32)[12]) <= (uint_32)[1]) ){ goto $label$2 }
	if ( (*($1 + [12]) & [1]) ){ goto $label$13 }
	$1 = (($1 + [12]) + [1])
	goto $label$12 
	
.LABEL $label$13
	$1 = *(($1 + [20]))
	
.LABEL $label$12
	$8 = [0]
	$6 = CALL strtoll($1, [0], [10])
	*($3) = $6
	if ( (int_64)($6 == 0) ){ goto $label$14 }
	$1 = *($9 + [24])
	if ( ((uint_32)((int_32)(*($9 + [28]) - $1) / (int_32)[12]) <= (uint_32)[2]) ){ goto $label$1 }
	if ( (*($1 + [24]) & [1]) ){ goto $label$16 }
	$1 = (($1 + [24]) + [1])
	goto $label$15 
	
.LABEL $label$16
	$1 = *(($1 + [32]))
	
.LABEL $label$15
	$6 = CALL strtoll($1, [0], [10])
	*($4) = $6
	$8 = ((int_64)$6 != (int_64)0)
	
.LABEL $label$14
	$7 = *($9 + [24])
	
.LABEL $label$9
	if ( ($7 == 0) ){ goto $label$3 }
	$1 = *($9 + [28])
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$18 }
	$5 = ([0] - $7)
	$1 = ($1 + [-12])
	
.LOOP $label$19:
	if ( ((*($1) & [1]) == 0) ){ goto $label$20 }
	CALL $240(*(($1 + [8])))
	
.LABEL $label$20
	$1 = ($1 + [-12])
	if ( ((int_32)($1 + $5) != (int_32)[-12]) ){ goto $label$19 }
	$1 = *($9 + [24])
	goto $label$17 
	
.LABEL $label$18
	$1 = $7
	
.LABEL $label$17
	*($9 + [28]) = $7
	CALL $240($1)
	
.LABEL $label$3
	*([0] + [4]) = ($9 + [48])
	return $8
	
.LABEL $label$2
	CALL $245(($9 + [24]))
	
.LABEL $label$1
	CALL $245(($9 + [24]))
	(unreachable)
	return (unreachable)
}

void .FUNC _ZN7campwar6attackEN5eosio4nameEyyyNS0_5assetE (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	float_64 $17
	float_64 $18
	int_64 $19
	int_32 $20
	int_64 $21
	int_32 $22
	$22 = (*([0] + [4]) - [448])
	*([0] + [4]) = $22
	CALL eosio_assert(CALL $fimport$16($1), [3712])
	CALL eosio_assert((CASTING uint_32)(uint_64 $3), [3744])
	$19 = ((int_64)$3 * (int_64)25)
	CALL eosio_assert(((uint_64)*($5) >= (uint_64)$19), [3776])
	CALL _ZN7campwar22validate_player_activeEy($0, $1)
	$20 = [0]
	$12 = CALL db_lowerbound_i64(*($0 + [128]), *(($0 + [136])), (int_64)4982871454518345728, (int_64)0)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$1 }
	$20 = CALL $78(($0 + [128]), $12)
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$20 != (int_32)[0]), [2128])
	CALL eosio_assert(*($20 + [8]), [2160])
	$16 = *(($0 + [72]))
	$13 = *(($0 + [76]))
	if ( ((int_32)$13 == (int_32)$16) ){ goto $label$2 }
	$20 = ($13 + [-24])
	$7 = ([0] - $16)
	
.LOOP $label$3:
	if ( ((int_64)*(*($20)) == (int_64)$1) ){ goto $label$2 }
	$13 = $20
	$12 = ($20 + [-24])
	$20 = $12
	if ( ((int_32)($12 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	$6 = ($0 + [48])
	if ( ((int_32)$13 == (int_32)$16) ){ goto $label$5 }
	$14 = *(($13 + [-24]))
	CALL eosio_assert(((int_32)*($14 + [324]) == (int_32)$6), [592])
	goto $label$4 
	
.LABEL $label$5
	$14 = [0]
	$20 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$4 }
	$14 = CALL $50($6, $20)
	CALL eosio_assert(((int_32)*($14 + [324]) == (int_32)$6), [592])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$14 != (int_32)[0]), [1232])
	$16 = *(($0 + [32]))
	$13 = *(($0 + [36]))
	if ( ((int_32)$13 == (int_32)$16) ){ goto $label$6 }
	$20 = ($13 + [-24])
	$7 = ([0] - $16)
	
.LOOP $label$7:
	if ( ((int_64)*(*($20)) == (int_64)$4) ){ goto $label$6 }
	$13 = $20
	$12 = ($20 + [-24])
	$20 = $12
	if ( ((int_32)($12 + $7) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$8 = ($0 + [8])
	if ( ((int_32)$13 == (int_32)$16) ){ goto $label$9 }
	$15 = *(($13 + [-24]))
	CALL eosio_assert(((int_32)*($15 + [144]) == (int_32)$8), [592])
	goto $label$8 
	
.LABEL $label$9
	$20 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)4730274944552796160, $4)
	if ( ((int_32)$20 <= (int_32)[-1]) ){ goto $label$10 }
	$15 = CALL $66($8, $20)
	CALL eosio_assert(((int_32)*($15 + [144]) == (int_32)$8), [592])
	goto $label$8 
	
.LABEL $label$10
	$15 = [0]
	
.LABEL $label$8
	*($22 + [284]) = $15
	*($22 + [280]) = $8
	CALL eosio_assert(((int_32)$15 != (int_32)[0]), [3840])
	$9 = *($15 + [32])
	CALL eosio_assert(((int_64)$9 != (int_64)0), [3872])
	CALL eosio_assert(((int_64)*($14 + [8]) != (int_64)$4), [3920])
	CALL _ZN7campwar10updatecampEv($0)
	$21 = *($14 + [8])
	$16 = *(($0 + [32]))
	$13 = *(($0 + [36]))
	if ( ((int_32)$13 == (int_32)$16) ){ goto $label$11 }
	$20 = ($13 + [-24])
	$7 = ([0] - $16)
	
.LOOP $label$12:
	if ( ((int_64)*(*($20)) == (int_64)$21) ){ goto $label$11 }
	$13 = $20
	$12 = ($20 + [-24])
	$20 = $12
	if ( ((int_32)($12 + $7) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ((int_32)$13 == (int_32)$16) ){ goto $label$14 }
	$16 = *(($13 + [-24]))
	CALL eosio_assert(((int_32)*($16 + [144]) == (int_32)$8), [592])
	goto $label$13 
	
.LABEL $label$14
	$16 = [0]
	$20 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)4730274944552796160, $21)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$13 }
	$16 = CALL $66($8, $20)
	CALL eosio_assert(((int_32)*($16 + [144]) == (int_32)$8), [592])
	
.LABEL $label$13
	CALL eosio_assert(((int_32)$16 != (int_32)[0]), [2976])
	CALL eosio_assert(((uint_64)*($16 + [72]) >= (uint_64)$3), [2624])
	$10 = *(($0 + [112]))
	$13 = *(($0 + [116]))
	if ( ((int_32)$13 == (int_32)$10) ){ goto $label$15 }
	$20 = ($13 + [-24])
	$7 = ([0] - $10)
	
.LOOP $label$16:
	if ( ((int_64)*(*($20)) == (int_64)$2) ){ goto $label$15 }
	$13 = $20
	$12 = ($20 + [-24])
	$20 = $12
	if ( ((int_32)($12 + $7) != (int_32)[-24]) ){ goto $label$16 }
	
.LABEL $label$15
	$12 = ($0 + [88])
	if ( ((int_32)$13 == (int_32)$10) ){ goto $label$22 }
	$20 = *(($13 + [-24]))
	CALL eosio_assert(((int_32)*($20 + [88]) == (int_32)$12), [592])
	if ( $20 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	$20 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)7396599438002618368, $2)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$20 }
	$20 = CALL $57($12, $20)
	CALL eosio_assert(((int_32)*($20 + [88]) == (int_32)$12), [592])
	
.LABEL $label$21
	CALL eosio_assert(((int_64)*($20 + [40]) == (int_64)$1), [3952])
	CALL _ZN7campwar25validate_gun_is_availableEy($0, $2)
	$2 = *($20 + [16])
	CALL eosio_assert((((uint_64)$2 <= (uint_64)$3) & ((uint_64)((int_64)$2 << (int_64)1) >= (uint_64)$3)), [3984])
	$18 = ((float_64)(CASTING float_64)(uint_64 ((int_64)(Rounds 0)(CALL pow((CASTING float_64)(uint_64 *($20 + [16])), (float_64)2)) + (int_64)3)) / (float_64)(CASTING float_64)(uint_64 ((int_64)*($20 + [16]) << (int_64)1)))
	$17 = ((float_64)$18 * (float_64)(float_64)1.5)
	$13 = ((int_64)*($20 + [8]) == (int_64)1)
	if ( (*([0] + [1332]) == 0) ){ goto $label$19 }
	$7 = *([0] + [1336])
	goto $label$18 
	
.LABEL $label$20
	CALL eosio_assert(((int_64)$3 == (int_64)1), [4080])
	$18 = (float_64)2
	$17 = (float_64)1
	goto $label$17 
	
.LABEL $label$19
	$2 = CALL current_time()
	*([0] + [1332]) = [1]
	$7 = (CASTING uint_32)(uint_64 ((uint_64)$2 / (uint_64)(int_64)1000000))
	*([0] + [1336]) = $7
	
.LABEL $label$18
	$17 = ( $17 ? $18 : $13 )
	CALL eosio_assert(((uint_32)$7 > (uint_32)(*($20 + [28]) + [60])), [4032])
	CALL $157($12, $20, *($0))
	$18 = (float_64)1
	
.LABEL $label$17
	$11 = (Rounds 0)(((float_64)((float_64)((float_64)((float_64)(CASTING float_64)(uint_64 $3) * (float_64)$17) * (float_64)$18) * (float_64)(CASTING float_64)(int_64 *($15 + [112]))) / (float_64)(float_64)100))
	*($22 + [272]) = $11
	$20 = [0]
	$21 = *($15 + [24])
	$2 = *($15 + [32])
	if ( ((int_64)$2 > (int_64)$21) ){ goto $label$23 }
	$18 = ((float_64)((float_64)(CASTING float_64)(uint_64 ((int_64)$3 * (int_64)2500)) * (float_64)(float_64)5) * (float_64)((float_64)$18 + (float_64)(float_64)1))
	$18 = ((float_64)(CASTING float_64)(int_64 $2) / (float_64)(CASTING float_64)(int_64 $21))
	$19 = (Rounds 0)(((float_64)$18 + (float_64)((float_64)$18 + (float_64)$18)))
	$20 = [1]
	
.LABEL $label$23
	CALL eosio_assert($20, [4128])
	$10 = *(($0 + [552]))
	$13 = *(($0 + [556]))
	if ( ((int_32)$13 == (int_32)$10) ){ goto $label$24 }
	$20 = ($13 + [-24])
	$7 = ([0] - $10)
	
.LOOP $label$25:
	if ( ((int_64)*(*($20)) == (int_64)$4) ){ goto $label$24 }
	$13 = $20
	$12 = ($20 + [-24])
	$20 = $12
	if ( ((int_32)($12 + $7) != (int_32)[-24]) ){ goto $label$25 }
	
.LABEL $label$24
	$12 = ($0 + [528])
	if ( ((int_32)$13 == (int_32)$10) ){ goto $label$29 }
	$20 = *(($13 + [-24]))
	CALL eosio_assert(((int_32)*($20 + [32]) == (int_32)$12), [592])
	if ( $20 ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	$20 = CALL db_find_i64(*(($0 + [528])), *(($0 + [536])), (int_64)-4369432116128120832, $4)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$27 }
	$20 = CALL $158($12, $20)
	CALL eosio_assert(((int_32)*($20 + [32]) == (int_32)$12), [592])
	
.LABEL $label$28
	if ( ((int_64)*($20 + [8]) < (int_64)1) ){ goto $label$27 }
	$13 = (*($20 + [16]) + *($20 + [24]))
	if ( (*([0] + [1332]) == 0) ){ goto $label$31 }
	if ( ((uint_32)$13 <= (uint_32)*([0] + [1336])) ){ goto $label$27 }
	goto $label$30 
	
.LABEL $label$31
	$2 = CALL current_time()
	*([0] + [1332]) = [1]
	$7 = (CASTING uint_32)(uint_64 ((uint_64)$2 / (uint_64)(int_64)1000000))
	*([0] + [1336]) = $7
	if ( ((uint_32)$13 <= (uint_32)$7) ){ goto $label$27 }
	
.LABEL $label$30
	$21 = *($0)
	CALL eosio_assert(((int_32)*($20 + [32]) == (int_32)$12), [768])
	CALL eosio_assert(((int_64)*(($0 + [528])) == (int_64)CALL $fimport$4()), [816])
	$2 = *($12)
	*(($12 = ($20 + [8]))) = ( (int_64))($2 - $11) ? (int_64)0 : ((int_64)$2 > (int_64)$11) )
	$2 = *($20)
	$10 = [1]
	CALL eosio_assert([1], [992])
	CALL eosio_assert([1], [1056])
	CALL memcpy(($22 + [288]), $20, [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy((($22 + [288]) | [8]), ($20 + [8]), [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy((($22 + [288]) + [16]), ($20 + [16]), [4])
	CALL eosio_assert([1], [1056])
	CALL memcpy(($22 + [308]), ($20 + [24]), [8])
	CALL db_update_i64(*($20 + [36]), $21, ($22 + [288]), [28])
	$20 = ($0 + [544])
	if ( (uint_64)($2 <= *($20)) ){ goto $label$26 }
	*($20) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$26 
	
.LABEL $label$27
	$2 = *($0)
	*($22 + [292]) = ($22 + [272])
	*($22 + [288]) = ($22 + [280])
	CALL $159($8, $15, $2, ($22 + [288]))
	$10 = [0]
	
.LABEL $label$26
	$2 = CALL _ZN7campwar8cal_mineEx($22, $19)
	*($22 + [264]) = (int_64)1413893636
	*($22 + [256]) = $2
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [512])
	$2 = (uint_64)*($22 + [264]) >> (uint_64)(int_64)8)
	$20 = [0]
	
.LOOP $label$34:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$33 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$35 }
	
.LOOP $label$36:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$33 }
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$36 }
	
.LABEL $label$35
	$12 = [1]
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$34 }
	goto $label$32 
	
.LABEL $label$33
	$12 = [0]
	
.LABEL $label$32
	CALL eosio_assert($12, [480])
	$2 = *((($22 + [256]) + [8]))
	*((($22 + [240]) + [8])) = $2
	*((($22 + [104]) + [8])) = $2
	$2 = *($22 + [256])
	*($22 + [240]) = $2
	*($22 + [104]) = $2
	CALL _ZN7campwar15distribute_mineEN5eosio4nameENS0_5assetE($0, $1, ($22 + [104]))
	$2 = *($0)
	*($22 + [292]) = $5
	*($22 + [288]) = ($22 + [272])
	*($22 + [296]) = ($22 + [256])
	CALL $160($6, $14, $2, ($22 + [288]))
	$2 = *(($14 + [8]))
	$15 = *(($0 + [592]))
	$13 = *(($0 + [596]))
	if ( ((int_32)$13 == (int_32)$15) ){ goto $label$37 }
	$20 = ($13 + [-24])
	$7 = ([0] - $15)
	
.LOOP $label$38:
	if ( ((int_64)*(*($20)) == (int_64)$2) ){ goto $label$37 }
	$13 = $20
	$12 = ($20 + [-24])
	$20 = $12
	if ( ((int_32)($12 + $7) != (int_32)[-24]) ){ goto $label$38 }
	
.LABEL $label$37
	$12 = ($0 + [568])
	if ( ((int_32)$13 == (int_32)$15) ){ goto $label$41 }
	$20 = *(($13 + [-24]))
	CALL eosio_assert(((int_32)*($20 + [32]) == (int_32)$12), [592])
	if ( $20 ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$41
	$20 = CALL db_find_i64(*(($0 + [568])), *(($0 + [576])), (int_64)4730282973792829440, $2)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$39 }
	$20 = CALL $92($12, $20)
	CALL eosio_assert(((int_32)*($20 + [32]) == (int_32)$12), [592])
	
.LABEL $label$40
	$21 = *($0)
	CALL eosio_assert(((int_32)*($20 + [32]) == (int_32)$12), [768])
	CALL eosio_assert(((int_64)*(($0 + [568])) == (int_64)CALL $fimport$4()), [816])
	*($20 + [8]) = ((int_64)*($20 + [8]) + (int_64)*($22 + [272]))
	$2 = *($20)
	CALL eosio_assert([1], [992])
	CALL eosio_assert([1], [1056])
	CALL memcpy(($22 + [288]), $20, [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy((($22 + [288]) | [8]), ($20 + [8]), [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy((($22 + [288]) + [16]), ($20 + [16]), [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy((($22 + [288]) + [24]), ($20 + [24]), [8])
	CALL db_update_i64(*($20 + [36]), $21, ($22 + [288]), [32])
	$20 = ($0 + [584])
	if ( (uint_64)($2 <= *($20)) ){ goto $label$39 }
	*($20) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$39
	$21 = *($0)
	CALL eosio_assert(((int_32)*($16 + [144]) == (int_32)$8), [768])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$4()), [816])
	*(($20 = ($16 + [72]))) = (int_64))(*($20) - $3)
	$2 = *($16)
	CALL eosio_assert([1], [992])
	*($22 + [208]) = (($22 + [288]) + [136])
	*($22 + [204]) = ($22 + [288])
	*($22 + [200]) = ($22 + [288])
	CALL $80(($22 + [200]), $16)
	CALL db_update_i64(*($16 + [148]), $21, ($22 + [288]), [136])
	$20 = ($0 + [24])
	if ( (uint_64)($2 <= *($20)) ){ goto $label$42 }
	*($20) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$42
	if ( ($10 | (uint_64)(*($22 + [272]) <= $9)) ){ goto $label$43 }
	CALL _ZN7campwar12camp_downingEN5eosio4nameEy($0, $1, $4)
	
.LABEL $label$43
	if ( (int_64)(*($14 + [296]) == 0) ){ goto $label$49 }
	$3 = *($0)
	$2 = (int_64)0
	$1 = (int_64)59
	$20 = [1632]
	$21 = (int_64)0
	
.LOOP $label$50:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$55 }
	$12 = *($20)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$54 }
	$12 = ($12 + [165])
	goto $label$53 
	
.LABEL $label$55
	$4 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$54
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$53
	$4 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$52
	$4 = ((int_64)((int_64)$4 & (int_64)31) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$51
	$20 = ($20 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$21 = ((int_64)$4 | (int_64)$21)
	$1 = ((int_64)$1 + (int_64)-5)
	if ( ((int_64)$1 != (int_64)-6) ){ goto $label$50 }
	*($22 + [192]) = $21
	*($22 + [184]) = $3
	$2 = (int_64)0
	$1 = (int_64)59
	$20 = [128]
	$21 = (int_64)0
	
.LOOP $label$56:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$61 }
	$12 = *($20)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$60 }
	$12 = ($12 + [165])
	goto $label$59 
	
.LABEL $label$61
	$4 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$60
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$59
	$4 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$58
	$4 = ((int_64)((int_64)$4 & (int_64)31) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$57
	$20 = ($20 + [1])
	$1 = ((int_64)$1 + (int_64)-5)
	$21 = ((int_64)$4 | (int_64)$21)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$56 }
	$2 = (int_64)0
	$1 = (int_64)59
	$20 = [112]
	$3 = (int_64)0
	
.LOOP $label$62:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$67 }
	$12 = *($20)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$66 }
	$12 = ($12 + [165])
	goto $label$65 
	
.LABEL $label$67
	$4 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$64 }
	goto $label$63 
	
.LABEL $label$66
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$65
	$4 = (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56)
	
.LABEL $label$64
	$4 = ((int_64)((int_64)$4 & (int_64)31) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$63
	$20 = ($20 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$3 = ((int_64)$4 | (int_64)$3)
	$1 = ((int_64)$1 + (int_64)-5)
	if ( ((int_64)$1 != (int_64)-6) ){ goto $label$62 }
	$1 = *($5 + [8])
	$2 = ((int_64)((int_64)$2 >> (int_64)63) << (int_64)2) | (int_64)(uint_64)$2 >> (uint_64)(int_64)62
	$2 = *($5)
	$4 = ((int_64)$2 << (int_64)2)
	CALL eosio_assert(( (uint_64)($4 <= (int_64)4611686018427387904) ? ((int_64)$2)) < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$4 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*(($22 + [176])) = [0]
	*($22 + [168]) = (int_64)0
	$2 = ((int_64)$4 / (int_64)100)
	$20 = CALL strlen([3376])
	if ( ((uint_32)$20 >= (uint_32)[-16]) ){ goto $label$44 }
	if ( ((uint_32)$20 >= (uint_32)[11]) ){ goto $label$48 }
	*($22 + [168]) = ($20 << [1])
	$12 = (($22 + [168]) | [1])
	if ( $20 ){ goto $label$47 }
	goto $label$46 
	
.LABEL $label$49
	$2 = *($5)
	CALL __multi3(($22 + [40]), $2, (int_64)$2 >> (int_64)63), (int_64)50, (int_64)0)
	$1 = *($5 + [8])
	$2 = *((($22 + [40]) + [8]))
	$4 = *($22 + [40])
	CALL eosio_assert(( (uint_64)($4 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$4 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	*($22 + [144]) = $1
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*((($22 + [56]) + [8])) = *($22 + [144])
	$2 = ((int_64)$4 / (int_64)100)
	*($22 + [136]) = $2
	*($22 + [56]) = $2
	CALL _ZN7campwar10save_bonusEN5eosio5assetE($0, ($22 + [56]))
	goto $label$45 
	
.LABEL $label$48
	$13 = (($20 + [16]) & [-16])
	$12 = CALL $238($13)
	*($22 + [168]) = ($13 | [1])
	*($22 + [176]) = $12
	*($22 + [172]) = $20
	
.LABEL $label$47
	CALL memcpy($12, [3376], $20)
	
.LABEL $label$46
	*(($12 + $20)) = [0]
	$4 = *(($14 + [296]))
	*(($22 + [312])) = $1
	*(($22 + [324])) = *($22 + [172 align=4])
	*($22 + [288]) = *($0)
	*($22 + [296]) = $4
	*($22 + [304]) = $2
	*($22 + [320]) = *($22 + [168])
	*($22 + [168]) = [0]
	*($22 + [172]) = [0]
	*(($22 + [176])) = [0]
	$20 = CALL $149(($22 + [200]), ($22 + [184]), $21, $3, ($22 + [288]))
	CALL $87(($22 + [432]), $20)
	$12 = *($22 + [432])
	CALL send_inline($12, (*($22 + [436]) - $12))
	$12 = *($22 + [432])
	if ( ($12 == 0) ){ goto $label$68 }
	*($22 + [436]) = $12
	CALL $240($12)
	
.LABEL $label$68
	$12 = *($20 + [28])
	if ( ($12 == 0) ){ goto $label$69 }
	*(($20 + [32])) = $12
	CALL $240($12)
	
.LABEL $label$69
	$12 = *($20 + [16])
	if ( ($12 == 0) ){ goto $label$70 }
	*(($20 + [20])) = $12
	CALL $240($12)
	
.LABEL $label$70
	if ( ((*(($22 + [320])) & [1]) == 0) ){ goto $label$71 }
	CALL $240(*(($22 + [328])))
	
.LABEL $label$71
	if ( ((*($22 + [168]) & [1]) == 0) ){ goto $label$72 }
	CALL $240(*(($22 + [176])))
	
.LABEL $label$72
	$2 = *($5)
	CALL __multi3(($22 + [72]), $2, (int_64)$2 >> (int_64)63), (int_64)50, (int_64)0)
	$20 = ($5 + [8])
	$4 = *($20)
	$2 = *((($22 + [72]) + [8]))
	$1 = *($22 + [72])
	CALL eosio_assert(( (uint_64)($1 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$1 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	$3 = *($20)
	$2 = ((int_64)((int_64)$2 >> (int_64)63) << (int_64)2) | (int_64)(uint_64)$2 >> (uint_64)(int_64)62
	$2 = *($5)
	$21 = ((int_64)$2 << (int_64)2)
	CALL eosio_assert(( (uint_64)($21 <= (int_64)4611686018427387904) ? ((int_64)$2)) < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$21 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*($22 + [160]) = $4
	CALL eosio_assert(((int_64)$3 == (int_64)$4), [3408])
	$2 = (int_64)
	*($22 + [152]) = $2(((int_64)$1 / (int_64)100) - ((int_64)$21 / (int_64)100)))
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [3456])
	CALL eosio_assert(((int_64)$2 < (int_64)4611686018427387904), [3488])
	*((($22 + [88]) + [8])) = *($22 + [160])
	*($22 + [88]) = *($22 + [152])
	CALL _ZN7campwar10save_bonusEN5eosio5assetE($0, ($22 + [88]))
	
.LABEL $label$45
	$2 = *($5)
	CALL __multi3(($22 + [8]), $2, (int_64)$2 >> (int_64)63), (int_64)35, (int_64)0)
	$1 = *(($5 + [8]))
	$2 = *((($22 + [8]) + [8]))
	$4 = *($22 + [8])
	CALL eosio_assert(( (uint_64)($4 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$4 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	*($22 + [128]) = $1
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*((($22 + [24]) + [8])) = *($22 + [128])
	$2 = ((int_64)$4 / (int_64)100)
	*($22 + [120]) = $2
	*($22 + [24]) = $2
	CALL _ZN7campwar21save_realtime_rewardsEN5eosio5assetE($0, ($22 + [24]))
	*([0] + [4]) = ($22 + [448])
	return (unreachable)
	
.LABEL $label$44
	CALL $242(($22 + [168]))
}

void .FUNC _ZN7campwar18unlock_gun_use_eosEyyN5eosio5assetE (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [384])
	*([0] + [4]) = $14
	CALL eosio_assert(((int_64)*($3) > (int_64)999), [2080])
	CALL _ZN7campwar22validate_player_activeEy($0, $1)
	$10 = [0]
	$7 = CALL db_lowerbound_i64(*($0 + [128]), *(($0 + [136])), (int_64)4982871454518345728, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$10 = CALL $78(($0 + [128]), $7)
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [2128])
	CALL eosio_assert(*($10 + [8]), [2160])
	$11 = *($3)
	CALL eosio_assert(((int_64)$11 > (int_64)999), [2080])
	$12 = ((int_64)$11 / (int_64)1000)
	$9 = *(($0 + [72]))
	$8 = *(($0 + [76]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$2 }
	$10 = ($8 + [-24])
	$5 = ([0] - $9)
	
.LOOP $label$3:
	if ( ((int_64)*(*($10)) == (int_64)$1) ){ goto $label$2 }
	$8 = $10
	$7 = ($10 + [-24])
	$10 = $7
	if ( ((int_32)($7 + $5) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	$4 = ($0 + [48])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$5 }
	$9 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [324]) == (int_32)$4), [592])
	goto $label$4 
	
.LABEL $label$5
	$9 = [0]
	$10 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$4 }
	$9 = CALL $50($4, $10)
	CALL eosio_assert(((int_32)*($9 + [324]) == (int_32)$4), [592])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [2176])
	$6 = *(($0 + [112]))
	$8 = *(($0 + [116]))
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$6 }
	$10 = ($8 + [-24])
	$5 = ([0] - $6)
	
.LOOP $label$7:
	if ( ((int_64)*(*($10)) == (int_64)$2) ){ goto $label$6 }
	$8 = $10
	$7 = ($10 + [-24])
	$10 = $7
	if ( ((int_32)($7 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$5 = ($0 + [88])
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$9 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [88]) == (int_32)$5), [592])
	goto $label$8 
	
.LABEL $label$9
	$7 = [0]
	$10 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)7396599438002618368, $2)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$8 }
	$7 = CALL $57($5, $10)
	CALL eosio_assert(((int_32)*($7 + [88]) == (int_32)$5), [592])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [656])
	CALL eosio_assert((int_64)(*($7 + [8]) == 0), [2208])
	CALL eosio_assert(((int_64)*($7 + [40]) == (int_64)$1), [2240])
	CALL _ZN7campwar25validate_gun_is_availableEy($0, $2)
	$2 = CALL _ZN7campwar8cal_mineEx($14, ( (int_64)100000000 ? ((int_64)$12 * (int_64)100000) : ((int_64)$11 > (int_64)1000999) ))
	*($14 + [264]) = (int_64)1413893636
	*($14 + [256]) = $2
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [512])
	$2 = (int_64)5523022
	$10 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	
.LOOP $label$14:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$14 }
	
.LABEL $label$13
	$8 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	$8 = [0]
	
.LABEL $label$10
	CALL eosio_assert($8, [480])
	$2 = *((($14 + [256]) + [8]))
	*((($14 + [240]) + [8])) = $2
	*((($14 + [104]) + [8])) = $2
	$2 = *($14 + [256])
	*($14 + [240]) = $2
	*($14 + [104]) = $2
	CALL _ZN7campwar15distribute_mineEN5eosio4nameENS0_5assetE($0, $1, ($14 + [104]))
	$2 = *($0)
	*($14 + [272]) = $3
	*($14 + [276]) = ($14 + [256])
	CALL $148($4, $9, $2, ($14 + [272]))
	$1 = *($0)
	CALL eosio_assert(((int_32)*($7 + [88]) == (int_32)$5), [768])
	CALL eosio_assert(((int_64)*(($0 + [88])) == (int_64)CALL $fimport$4()), [816])
	*(($7 + [8])) = (int_64)2
	*($7 + [80]) = $12
	$2 = *($7)
	CALL eosio_assert([1], [992])
	*($14 + [208]) = (($14 + [272]) + [88])
	*($14 + [204]) = ($14 + [272])
	*($14 + [200]) = ($14 + [272])
	CALL $62(($14 + [200]), $7)
	CALL db_update_i64(*($7 + [92]), $1, ($14 + [272]), [88])
	$10 = ($0 + [104])
	if ( (uint_64)($2 <= *($10)) ){ goto $label$15 }
	*($10) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	if ( (int_64)(*($9 + [296]) == 0) ){ goto $label$21 }
	$13 = *($0)
	$2 = (int_64)0
	$11 = (int_64)59
	$10 = [1632]
	$12 = (int_64)0
	
.LOOP $label$22:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$27 }
	$7 = *($10)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$7 = ($7 + [165])
	goto $label$25 
	
.LABEL $label$27
	$1 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$26
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$24
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$23
	$10 = ($10 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$12 = ((int_64)$1 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$22 }
	*($14 + [192]) = $12
	*($14 + [184]) = $13
	$2 = (int_64)0
	$11 = (int_64)59
	$10 = [128]
	$12 = (int_64)0
	
.LOOP $label$28:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$33 }
	$7 = *($10)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$7 = ($7 + [165])
	goto $label$31 
	
.LABEL $label$33
	$1 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$32
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$30
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$29
	$10 = ($10 + [1])
	$11 = ((int_64)$11 + (int_64)-5)
	$12 = ((int_64)$1 | (int_64)$12)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$28 }
	$2 = (int_64)0
	$11 = (int_64)59
	$10 = [112]
	$13 = (int_64)0
	
.LOOP $label$34:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$39 }
	$7 = *($10)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$38 }
	$7 = ($7 + [165])
	goto $label$37 
	
.LABEL $label$39
	$1 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$38
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$37
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$36
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$35
	$10 = ($10 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$13 = ((int_64)$1 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$34 }
	$11 = *($3 + [8])
	$2 = ((int_64)((int_64)$2 >> (int_64)63) << (int_64)2) | (int_64)(uint_64)$2 >> (uint_64)(int_64)62
	$2 = *($3)
	$1 = ((int_64)$2 << (int_64)2)
	CALL eosio_assert(( (uint_64)($1 <= (int_64)4611686018427387904) ? ((int_64)$2)) < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$1 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*(($14 + [176])) = [0]
	*($14 + [168]) = (int_64)0
	$2 = ((int_64)$1 / (int_64)100)
	$10 = CALL strlen([3376])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$16 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$20 }
	*($14 + [168]) = ($10 << [1])
	$7 = (($14 + [168]) | [1])
	if ( $10 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	$2 = *($3)
	CALL __multi3(($14 + [40]), $2, (int_64)$2 >> (int_64)63), (int_64)50, (int_64)0)
	$11 = *($3 + [8])
	$2 = *((($14 + [40]) + [8]))
	$1 = *($14 + [40])
	CALL eosio_assert(( (uint_64)($1 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$1 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	*($14 + [144]) = $11
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*((($14 + [56]) + [8])) = *($14 + [144])
	$2 = ((int_64)$1 / (int_64)100)
	*($14 + [136]) = $2
	*($14 + [56]) = $2
	CALL _ZN7campwar10save_bonusEN5eosio5assetE($0, ($14 + [56]))
	goto $label$17 
	
.LABEL $label$20
	$8 = (($10 + [16]) & [-16])
	$7 = CALL $238($8)
	*($14 + [168]) = ($8 | [1])
	*($14 + [176]) = $7
	*($14 + [172]) = $10
	
.LABEL $label$19
	CALL memcpy($7, [3376], $10)
	
.LABEL $label$18
	*(($7 + $10)) = [0]
	$1 = *(($9 + [296]))
	*(($14 + [296])) = $11
	*(($14 + [308])) = *($14 + [172 align=4])
	*($14 + [272]) = *($0)
	*($14 + [280]) = $1
	*($14 + [288]) = $2
	*($14 + [304]) = *($14 + [168])
	*($14 + [168]) = [0]
	*($14 + [172]) = [0]
	*(($14 + [176])) = [0]
	$10 = CALL $149(($14 + [200]), ($14 + [184]), $12, $13, ($14 + [272]))
	CALL $87(($14 + [368]), $10)
	$7 = *($14 + [368])
	CALL send_inline($7, (*($14 + [372]) - $7))
	$7 = *($14 + [368])
	if ( ($7 == 0) ){ goto $label$40 }
	*($14 + [372]) = $7
	CALL $240($7)
	
.LABEL $label$40
	$7 = *($10 + [28])
	if ( ($7 == 0) ){ goto $label$41 }
	*(($10 + [32])) = $7
	CALL $240($7)
	
.LABEL $label$41
	$7 = *($10 + [16])
	if ( ($7 == 0) ){ goto $label$42 }
	*(($10 + [20])) = $7
	CALL $240($7)
	
.LABEL $label$42
	if ( ((*(($14 + [304])) & [1]) == 0) ){ goto $label$43 }
	CALL $240(*(($14 + [312])))
	
.LABEL $label$43
	if ( ((*($14 + [168]) & [1]) == 0) ){ goto $label$44 }
	CALL $240(*(($14 + [176])))
	
.LABEL $label$44
	$2 = *($3)
	CALL __multi3(($14 + [72]), $2, (int_64)$2 >> (int_64)63), (int_64)50, (int_64)0)
	$10 = ($3 + [8])
	$1 = *($10)
	$2 = *((($14 + [72]) + [8]))
	$11 = *($14 + [72])
	CALL eosio_assert(( (uint_64)($11 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$11 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	$13 = *($10)
	$2 = ((int_64)((int_64)$2 >> (int_64)63) << (int_64)2) | (int_64)(uint_64)$2 >> (uint_64)(int_64)62
	$2 = *($3)
	$12 = ((int_64)$2 << (int_64)2)
	CALL eosio_assert(( (uint_64)($12 <= (int_64)4611686018427387904) ? ((int_64)$2)) < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$12 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*($14 + [160]) = $1
	CALL eosio_assert(((int_64)$13 == (int_64)$1), [3408])
	$2 = (int_64)
	*($14 + [152]) = $2(((int_64)$11 / (int_64)100) - ((int_64)$12 / (int_64)100)))
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [3456])
	CALL eosio_assert(((int_64)$2 < (int_64)4611686018427387904), [3488])
	*((($14 + [88]) + [8])) = *($14 + [160])
	*($14 + [88]) = *($14 + [152])
	CALL _ZN7campwar10save_bonusEN5eosio5assetE($0, ($14 + [88]))
	
.LABEL $label$17
	$2 = *($3)
	CALL __multi3(($14 + [8]), $2, (int_64)$2 >> (int_64)63), (int_64)35, (int_64)0)
	$11 = *(($3 + [8]))
	$2 = *((($14 + [8]) + [8]))
	$1 = *($14 + [8])
	CALL eosio_assert(( (uint_64)($1 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$1 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ), [2000])
	*($14 + [128]) = $11
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*((($14 + [24]) + [8])) = *($14 + [128])
	$2 = ((int_64)$1 / (int_64)100)
	*($14 + [120]) = $2
	*($14 + [24]) = $2
	CALL _ZN7campwar21save_realtime_rewardsEN5eosio5assetE($0, ($14 + [24]))
	*([0] + [4]) = ($14 + [384])
	return (unreachable)
	
.LABEL $label$16
	CALL $242(($14 + [168]))
}

void .FUNC _ZN7campwar19change_camp_use_eosEyyN5eosio5assetE (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [96])
	*([0] + [4]) = $6
	CALL eosio_assert(((int_64)*($3) > (int_64)299999), [1584])
	*(($5 = (($6 + [80]) + [8]))) = *(($3 + [8]))
	$4 = *($3)
	*((($6 + [32]) + [12])) = *((($6 + [80]) + [12]))
	*((($6 + [32]) + [8])) = *($5)
	*($6 + [80]) = $4
	*($6 + [36]) = *($6 + [84])
	*($6 + [32]) = *($6 + [80])
	CALL _ZN7campwar10changecampEyyN5eosio5assetE($0, $1, $2, ($6 + [32]))
	CALL eosio_assert([1], [512])
	$3 = [0]
	$1 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [480])
	*($6 + [72]) = (int_64)1397703940
	*((($6 + [16]) + [8])) = (int_64)1397703940
	*($6 + [64]) = (int_64)100000
	*($6 + [16]) = (int_64)100000
	CALL _ZN7campwar21save_realtime_rewardsEN5eosio5assetE($0, ($6 + [16]))
	*($6 + [56]) = (int_64)1397703940
	*(($6 + [8])) = (int_64)1397703940
	*($6 + [48]) = (int_64)100000
	*($6) = (int_64)100000
	CALL _ZN7campwar10save_bonusEN5eosio5assetE($0, $6)
	*([0] + [4]) = ($6 + [96])
}

void .FUNC $136 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [16])
	$10 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [324]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	$4 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [48]))), [880])
	$8 = ((int_64)*($1 + [40]) + (int_64)*($3))
	*($1 + [40]) = $8
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($1 + [40]) < (int_64)4611686018427387904), [960])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [992])
	$6 = *($1 + [312])
	$5 = *(($1 + [316]))
	$7 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 int_32($7 >> [3]))
	$3 = [308]
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$2 }
	$3 = (($7 & [-8]) + $3)
	
.LABEL $label$2
	if ( ($3 <= [513]) ){ goto $label$4 }
	$9 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$9 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$3
	*($10 + [4]) = $9
	*($10) = $9
	*($10 + [8]) = ($9 + $3)
	CALL $102($10, $1)
	CALL db_update_i64(*($1 + [328]), $2, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($9)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($10 + [16])
}

void .FUNC _ZN7campwar21save_realtime_rewardsEN5eosio5assetE (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [64])
	*([0] + [4]) = $10
	$2 = *($1)
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)63)) ^ (int_32)[1]), [3296])
	$3 = ($0 + [288])
	$9 = [0]
	$4 = CALL db_lowerbound_i64(*($0 + [288]), *(($0 + [296])), (int_64)-4992121823200788480, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $144($3, $4)
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [3328])
	$6 = *($0)
	CALL eosio_assert(((int_32)*($9 + [40]) == (int_32)$3), [768])
	CALL eosio_assert(((int_64)*($3) == (int_64)CALL $fimport$4()), [816])
	$5 = *($9)
	$7 = *($1 + [8])
	CALL eosio_assert(((int_64)$7 == (int_64)*(($9 + [16]))), [880])
	$8 = ((int_64)*($9 + [8]) + (int_64)$2)
	*($9 + [8]) = $8
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($9 + [8]) < (int_64)4611686018427387904), [960])
	CALL eosio_assert(((int_64)$7 == (int_64)*(($9 + [32]))), [880])
	$2 = ((int_64)*($9 + [24]) + (int_64)$2)
	*($9 + [24]) = $2
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($9 + [24]) < (int_64)4611686018427387904), [960])
	CALL eosio_assert(((int_64)$5 == (int_64)*($9)), [992])
	*($10 + [56]) = ($10 + [40])
	*($10 + [52]) = $10
	*($10 + [48]) = $10
	CALL $140(($10 + [48]), $9)
	CALL db_update_i64(*($9 + [44]), $6, $10, [40])
	$9 = ($0 + [304])
	if ( (uint_64)($5 <= *($9)) ){ goto $label$2 }
	*($9) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*([0] + [4]) = ($10 + [64])
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

void .FUNC $213 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	$7 = $8
	*([0] + [4]) = $8
	CALL eosio_assert(((int_32)*($1 + [72]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	*($1 + [8]) = [1]
	$5 = *(*($3))
	*($1 + [32]) = (int_64)0
	*($1 + [16]) = $5
	$4 = *($1)
	CALL eosio_assert([1], [512])
	$5 = (int_64)5523022
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [480])
	*(($1 + [48])) = (int_64)1413893636
	*($1 + [40]) = (int_64)889849507406
	CALL eosio_assert([1], [512])
	$5 = (int_64)5523022
	$3 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$6 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$6 = [0]
	
.LABEL $label$6
	CALL eosio_assert($6, [480])
	*(($1 + [64])) = (int_64)1413893636
	*($1 + [56]) = (int_64)889849507406
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [992])
	$6 = $8
	$3 = ($6 + [-64])
	*([0] + [4]) = $3
	*($7 + [4]) = $3
	*($7) = $3
	*($7 + [8]) = ($6 + [-3])
	CALL $151($7, $1)
	CALL db_update_i64(*($1 + [76]), $2, $3, [61])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$11 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $262 ()
{
	(unreachable)
}

void .FUNC $208 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [16])
	$10 = $9
	*([0] + [4]) = $9
	*($1) = *(*(*($0 + [4])))
	$2 = *($0)
	if ( (*([0] + [1332]) == 0) ){ goto $label$2 }
	$7 = *([0] + [1336])
	goto $label$1 
	
.LABEL $label$2
	$8 = CALL current_time()
	*([0] + [1332]) = [1]
	$7 = (CASTING uint_32)(uint_64 ((uint_64)$8 / (uint_64)(int_64)1000000))
	*([0] + [1336]) = $7
	
.LABEL $label$1
	*($1 + [8]) = $7
	$7 = [12]
	$3 = ($1 + [12])
	$5 = *($1 + [12])
	$4 = *(($1 + [16]))
	$6 = ($4 - $5)
	$8 = (CASTING uint_64)(uint_32 int_32($6 >> [3]))
	
.LOOP $label$3:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	$7 = (($6 & [-8]) + $7)
	
.LABEL $label$4
	if ( ($7 <= [513]) ){ goto $label$6 }
	$9 = CALL malloc($7)
	goto $label$5 
	
.LABEL $label$6
	$9 = ($9 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$5
	*($10) = $9
	$4 = ($9 + $7)
	*($10 + [8]) = $4
	CALL eosio_assert(((int_32)$7 > (int_32)[7]), [1056])
	CALL memcpy($9, $1, [8])
	$5 = ($9 + [8])
	CALL eosio_assert(((int_32)($4 - $5) > (int_32)[3]), [1056])
	CALL memcpy($5, ($1 + [8]), [4])
	*($10 + [4]) = ($9 + [12])
	CALL $103($10, $3)
	$8 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-6219583601193779200, *(*($0 + [8])), $8, $9, $7)
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL free($9)
	
.LABEL $label$7
	if ( (uint_64)($8 <= *($2 + [16])) ){ goto $label$8 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $209 (int_32 $0, int_32 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$10 = (*([0] + [4]) - [16])
	$11 = $10
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	$3 = *($1)
	if ( (*([0] + [1332]) == 0) ){ goto $label$2 }
	$8 = *([0] + [1336])
	goto $label$1 
	
.LABEL $label$2
	$9 = CALL current_time()
	*([0] + [1332]) = [1]
	$8 = (CASTING uint_32)(uint_64 ((uint_64)$9 / (uint_64)(int_64)1000000))
	*([0] + [1336]) = $8
	
.LABEL $label$1
	*($1 + [8]) = $8
	$8 = [12]
	$4 = ($1 + [12])
	CALL $178($4, [0], [0])
	CALL eosio_assert(((int_64)$3 == (int_64)*($1)), [992])
	$6 = *($1 + [12])
	$5 = *(($1 + [16]))
	$7 = ($5 - $6)
	$9 = (CASTING uint_64)(uint_32 int_32($7 >> [3]))
	
.LOOP $label$3:
	$8 = ($8 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	$8 = (($7 & [-8]) + $8)
	
.LABEL $label$4
	if ( ($8 <= [513]) ){ goto $label$6 }
	$10 = CALL malloc($8)
	goto $label$5 
	
.LABEL $label$6
	$10 = ($10 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$5
	*($11) = $10
	$5 = ($10 + $8)
	*($11 + [8]) = $5
	CALL eosio_assert(((int_32)$8 > (int_32)[7]), [1056])
	CALL memcpy($10, $1, [8])
	$6 = ($10 + [8])
	CALL eosio_assert(((int_32)($5 - $6) > (int_32)[3]), [1056])
	CALL memcpy($6, ($1 + [8]), [4])
	*($11 + [4]) = ($10 + [12])
	CALL $103($11, $4)
	CALL db_update_i64(*($1 + [28]), $2, $10, $8)
	if ( ($8 <= [513]) ){ goto $label$7 }
	CALL free($10)
	
.LABEL $label$7
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($11 + [16])
}

void .FUNC $202 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $238(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $244($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $240($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $240($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $203 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	$2 = *($0)
	$3 = *($0 + [4])
	$5 = *(*($3 + [4]))
	$4 = *(*($3))
	CALL eosio_assert([1], [512])
	$8 = (int_64)5459781
	$7 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$9 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	
.LABEL $label$1
	CALL eosio_assert($9, [480])
	CALL eosio_assert([1], [512])
	$8 = (int_64)5523022
	$7 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$9 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$9 = [0]
	
.LABEL $label$6
	CALL eosio_assert($9, [480])
	*($1) = $4
	$8 = *(*($3 + [8]))
	*($1 + [296]) = $5
	*($1 + [8]) = $8
	if ( (*([0] + [1332]) == 0) ){ goto $label$12 }
	$7 = *([0] + [1336])
	goto $label$11 
	
.LABEL $label$12
	$8 = CALL current_time()
	*([0] + [1332]) = [1]
	$7 = (CASTING uint_32)(uint_64 ((uint_64)$8 / (uint_64)(int_64)1000000))
	*([0] + [1336]) = $7
	
.LABEL $label$11
	*($1 + [16]) = $7
	CALL eosio_assert([1], [512])
	$8 = (int_64)5523022
	$7 = [0]
	
.LOOP $label$15:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	
.LOOP $label$17:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	$9 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	$9 = [0]
	
.LABEL $label$13
	CALL eosio_assert($9, [480])
	*(($1 + [64])) = (int_64)1413893636
	*($1 + [56]) = (int_64)0
	*($1 + [24]) = (int_64)0
	*(($1 + [32])) = (int_64)1397703940
	*($1 + [40]) = (int_64)0
	*(($1 + [48])) = (int_64)1397703940
	*($1 + [72]) = (int_64)0
	*(($1 + [80])) = (int_64)1397703940
	*($1 + [88]) = (int_64)0
	*(($1 + [96])) = (int_64)1397703940
	*($1 + [104]) = (int_64)0
	*(($1 + [112])) = (int_64)1397703940
	*($1 + [120]) = (int_64)0
	*(($1 + [128])) = (int_64)1413893636
	*($1 + [136]) = (int_64)0
	*(($1 + [144])) = (int_64)1397703940
	*($1 + [152]) = (int_64)0
	*(($1 + [160])) = (int_64)1397703940
	*($1 + [168]) = (int_64)0
	*(($1 + [176])) = (int_64)1397703940
	*($1 + [184]) = (int_64)0
	*(($1 + [192])) = (int_64)1413893636
	*($1 + [200]) = (int_64)0
	*(($1 + [208])) = (int_64)1413893636
	*($1 + [216]) = (int_64)0
	*(($1 + [224])) = (int_64)1413893636
	*($1 + [232]) = (int_64)0
	*(($1 + [240])) = (int_64)1413893636
	*($1 + [248]) = (int_64)0
	*(($1 + [256])) = (int_64)1413893636
	$7 = *($3 + [12])
	*($1 + [264]) = *($7)
	$8 = *(($7 + [8]))
	*($1 + [304]) = (int_64)0
	*(($1 + [272])) = $8
	$3 = *($1 + [312])
	$9 = *(($1 + [316]))
	$6 = ($9 - $3)
	$8 = (CASTING uint_64)(uint_32 int_32($6 >> [3]))
	$7 = [308]
	
.LOOP $label$18:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$18 }
	if ( ((int_32)$3 == (int_32)$9) ){ goto $label$19 }
	$7 = (($6 & [-8]) + $7)
	
.LABEL $label$19
	if ( ($7 <= [513]) ){ goto $label$21 }
	$9 = CALL malloc($7)
	goto $label$20 
	
.LABEL $label$21
	$9 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$20
	*($10 + [4]) = $9
	*($10) = $9
	*($10 + [8]) = ($9 + $7)
	CALL $102($10, $1)
	$8 = *($1)
	*($1 + [328]) = CALL db_store_i64(*($2 + [8]), (int_64)-6030912142679474176, *(*($0 + [8])), $8, $9, $7)
	if ( ($7 <= [513]) ){ goto $label$22 }
	CALL free($9)
	
.LABEL $label$22
	if ( (uint_64)($8 <= *($2 + [16])) ){ goto $label$23 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$23
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $200 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [324]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	$4 = *($1)
	if ( (*([0] + [1332]) == 0) ){ goto $label$2 }
	$8 = *([0] + [1336])
	goto $label$1 
	
.LABEL $label$2
	$7 = CALL current_time()
	*([0] + [1332]) = [1]
	$8 = (CASTING uint_32)(uint_64 ((uint_64)$7 / (uint_64)(int_64)1000000))
	*([0] + [1336]) = $8
	
.LABEL $label$1
	*($1 + [16]) = $8
	$8 = *($3)
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)*(($1 + [32]))), [880])
	$7 = ((int_64)*($1 + [24]) + (int_64)*($8))
	*($1 + [24]) = $7
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($1 + [24]) < (int_64)4611686018427387904), [960])
	$3 = *($3 + [4])
	$8 = ($1 + [312])
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$3 }
	CALL $178($8, *($3), *($3 + [4]))
	
.LABEL $label$3
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [992])
	$8 = *($8)
	$5 = *(($1 + [316]))
	$6 = ($5 - $8)
	$7 = (CASTING uint_64)(uint_32 int_32($6 >> [3]))
	$3 = [308]
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$5 }
	$3 = (($6 & [-8]) + $3)
	
.LABEL $label$5
	if ( ($3 <= [513]) ){ goto $label$7 }
	$8 = CALL malloc($3)
	goto $label$6 
	
.LABEL $label$7
	$8 = ($10 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$6
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = ($8 + $3)
	CALL $102($9, $1)
	CALL db_update_i64(*($1 + [328]), $2, $8, $3)
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($8)
	
.LABEL $label$8
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $201 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $238(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $244($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [12])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [16])) = $6
	CALL $240($6)
	
.LABEL $label$11
	CALL $240($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $240($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $206 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$6 = *([0] + [4])
	$9 = $6
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	*($1 + [8]) = *(*($3))
	$5 = ($1 + [8])
	$4 = *($1)
	if ( (*([0] + [1332]) == 0) ){ goto $label$2 }
	$8 = *([0] + [1336])
	$7 = $4
	goto $label$1 
	
.LABEL $label$2
	$7 = CALL current_time()
	*([0] + [1332]) = [1]
	$8 = (CASTING uint_32)(uint_64 ((uint_64)$7 / (uint_64)(int_64)1000000))
	*([0] + [1336]) = $8
	$7 = *($1)
	
.LABEL $label$1
	*($1 + [16]) = $8
	*($1 + [24]) = *(*($3 + [4]))
	CALL eosio_assert(((int_64)$4 == (int_64)$7), [992])
	$3 = $6
	$6 = ($3 + [-32])
	*([0] + [4]) = $6
	CALL eosio_assert([1], [1056])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy(($3 + [-24]), $5, [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy(($3 + [-16]), ($1 + [16]), [4])
	CALL eosio_assert([1], [1056])
	CALL memcpy(($3 + [-12]), ($1 + [24]), [8])
	CALL db_update_i64(*($1 + [36]), $2, $6, [28])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = $9
}

void .FUNC $207 (int_32 $0, int_32 $1, int_64 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	$7 = $8
	*([0] + [4]) = $8
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	$3 = *($1)
	CALL eosio_assert([1], [512])
	$4 = (int_64)5459781
	$5 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [480])
	*(($1 + [32])) = (int_64)1397703940
	*($1 + [24]) = (int_64)0
	CALL eosio_assert(((int_64)$3 == (int_64)*($1)), [992])
	$6 = $8
	$5 = ($6 + [-48])
	*([0] + [4]) = $5
	*($7 + [4]) = $5
	*($7) = $5
	*($7 + [8]) = ($6 + [-8])
	CALL $140($7, $1)
	CALL db_update_i64(*($1 + [44]), $2, $5, [40])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $204 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1397703940
	*($0) = (int_64)0
	CALL eosio_assert([1], [512])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [480])
	CALL eosio_assert(((uint_32)$2 > (uint_32)[7]), [448])
	CALL memcpy($0, $1, [8])
	CALL eosio_assert(((int_32)($2 & [-8]) != (int_32)[8]), [448])
	CALL memcpy(($0 + [8]), ($1 + [8]), [8])
}

void .FUNC $205 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = *([0] + [4])
	$8 = $6
	$5 = *($0 + [4])
	*($1) = *(*($5))
	*($1 + [8]) = *(*($5 + [4]))
	$3 = ($1 + [8])
	$2 = *($0)
	if ( (*([0] + [1332]) == 0) ){ goto $label$2 }
	$7 = *([0] + [1336])
	goto $label$1 
	
.LABEL $label$2
	$4 = CALL current_time()
	*([0] + [1332]) = [1]
	$7 = (CASTING uint_32)(uint_64 ((uint_64)$4 / (uint_64)(int_64)1000000))
	*([0] + [1336]) = $7
	
.LABEL $label$1
	*($1 + [16]) = $7
	*($1 + [24]) = *(*($5 + [8]))
	$5 = $6
	$6 = ($5 + [-32])
	*([0] + [4]) = $6
	CALL eosio_assert([1], [1056])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy(($5 + [-24]), $3, [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy(($5 + [-16]), ($1 + [16]), [4])
	CALL eosio_assert([1], [1056])
	CALL memcpy(($5 + [-12]), ($1 + [24]), [8])
	$4 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($2 + [8]), (int_64)-4369432116128120832, *(*($0 + [8])), $4, $6, [28])
	if ( (uint_64)($4 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = $8
}

void .FUNC $181 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	$8 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	$4 = *($1)
	if ( (*([0] + [1332]) == 0) ){ goto $label$2 }
	$7 = *([0] + [1336])
	goto $label$1 
	
.LABEL $label$2
	$6 = CALL current_time()
	*([0] + [1332]) = [1]
	$7 = (CASTING uint_32)(uint_64 ((uint_64)$6 / (uint_64)(int_64)1000000))
	*([0] + [1336]) = $7
	
.LABEL $label$1
	*($1 + [24]) = $7
	$5 = ((int_64)*(*($3)) << (int_64)1)
	CALL eosio_assert((uint_64)(((int_64)$5 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [512])
	$6 = (int_64)5459781
	$3 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$7 = [0]
	
.LABEL $label$3
	CALL eosio_assert($7, [480])
	CALL eosio_assert(((int_64)*(($1 + [56])) == (int_64)1397703940), [880])
	$6 = ((int_64)*($1 + [48]) + (int_64)$5)
	*($1 + [48]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($1 + [48]) < (int_64)4611686018427387904), [960])
	*($1 + [16]) = ((int_64)*($1 + [16]) + (int_64)1)
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [992])
	$7 = $9
	$3 = ($7 + [-96])
	*([0] + [4]) = $3
	*($8 + [4]) = $3
	*($8) = $3
	*($8 + [8]) = ($7 + [-8])
	CALL $62($8, $1)
	CALL db_update_i64(*($1 + [92]), $2, $3, [88])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $129 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $238(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $244($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $240($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $240($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [448])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [448])
	CALL memcpy(($3 + [15]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	*($1 + [8]) = ((int_32)*($3 + [15]) != (int_32)[0])
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [448])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*([0] + [4]) = ($3 + [16])
	return $0
}

int_64 .FUNC _Z17gun_load_max_snowy (int_64 $0)
{
	return ((int_64)$0 << (int_64)1)
}

int_32 .FUNC _Z22validate_gun_load_snowyy (int_64 $0, int_64 $1)
{
	return (((uint_64)((int_64)$0 << (int_64)1) >= (uint_64)$1) & ((uint_64)$0 <= (uint_64)$1))
}

void .FUNC $123 (int_32 $0, int_32 $1, int_32 $2)
{
	if ( ((int_32)$2 != (int_32)[4]) ){ goto $label$4 }
	$0 = [0]
	
.LOOP $label$5:
	$2 = [-3]
	
.LOOP $label$7:
	if ( ((int_32)*((($0 + $2) + [2762])) != (int_32)*(($2 + [2707]))) ){ goto $label$6 }
	if ( ($2 == 0) ){ goto $label$3 }
	$2 = ($2 + [1])
	if ( ((int_32)($0 + $2) != (int_32)[180]) ){ goto $label$7 }
	goto $label$2 
	
.LABEL $label$6
	$2 = [183]
	$0 = ($0 + [1])
	if ( ((int_32)$0 != (int_32)[183]) ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$4
	CALL $126($0, $1, $2)
	return 
	
.LABEL $label$3
	$2 = $0
	goto $label$1 
	
.LABEL $label$2
	$2 = [183]
	
.LABEL $label$1
	*($1 + [4]) = [0]
	*($1) = ( [2759] ? ($2 + [2763]) : ((int_32)$2 == (int_32)[183]) )
}

int_32 .FUNC $122 (int_32 $0)
{
	return [0]
}

int_32 .FUNC $121 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($6) = $1
	$5 = [0]
	if ( CALL $122($6) ){ goto $label$1 }
	*($6 + [16]) = [0]
	$5 = *($1 + [8])
	*($6 + [24]) = $5
	if ( ((uint_32)$5 > (uint_32)[8]) ){ goto $label$3 }
	$4 = ($6 + [16])
	$3 = $1
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $239($5)
	*($6 + [16]) = $4
	$3 = *($1)
	
.LABEL $label$2
	CALL memcpy($4, $3, $5)
	*($6 + [28]) = *($1 + [12])
	*(($1 = CALL $238([16]))) = [0]
	$5 = *((($6 + [16]) + [8]))
	*($1 + [8]) = $5
	if ( ((uint_32)$5 > (uint_32)[8]) ){ goto $label$5 }
	$4 = ($6 + [16])
	$3 = $1
	goto $label$4 
	
.LABEL $label$5
	$3 = CALL $239($5)
	*($1) = $3
	$5 = *(($1 + [8]))
	$4 = *($6 + [16])
	
.LABEL $label$4
	CALL memcpy($3, $4, $5)
	*($2) = $1
	*($1 + [12]) = *(($6 + [28]))
	$5 = [1]
	if ( (*(($6 + [24])) <= [9]) ){ goto $label$1 }
	$1 = *($6 + [16])
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $241($1)
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [32])
	return $5
}

void .FUNC $120 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	*($5) = [0]
	$2 = *($1 + [8])
	*($5 + [8]) = $2
	if ( ((uint_32)$2 > (uint_32)[8]) ){ goto $label$2 }
	$4 = $5
	$3 = $1
	goto $label$1 
	
.LABEL $label$2
	$4 = CALL $239($2)
	*($5) = $4
	$3 = *($1)
	
.LABEL $label$1
	CALL memcpy($4, $3, $2)
	*($5 + [12]) = *($1 + [12])
	*($5 + [16]) = [0]
	$1 = *(($5 + [8]))
	*($5 + [24]) = $1
	$2 = ($0 + [4])
	if ( ((uint_32)$1 > (uint_32)[8]) ){ goto $label$4 }
	$4 = $5
	$3 = ($5 + [16])
	goto $label$3 
	
.LABEL $label$4
	$3 = CALL $239($1)
	*($5 + [16]) = $3
	$4 = *($5)
	
.LABEL $label$3
	CALL memcpy($3, $4, $1)
	*($5 + [28]) = *(($5 + [12]))
	$1 = CALL $121([2692], ($5 + [16]), $2)
	if ( (*((($5 + [16]) + [8])) <= [9]) ){ goto $label$5 }
	$2 = *($5 + [16])
	if ( ($2 == 0) ){ goto $label$5 }
	CALL $241($2)
	
.LABEL $label$5
	if ( (*(($5 + [8])) <= [9]) ){ goto $label$6 }
	$2 = *($5)
	if ( ($2 == 0) ){ goto $label$6 }
	CALL $241($2)
	
.LABEL $label$6
	*($0) = ( [2692] ? [0] : $1 )
	*([0] + [4]) = ($5 + [32])
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

void .FUNC $126 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ((uint_32)$2 > (uint_32)[3]) ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$13
	$3 = *($0)
	*(($2 = CALL $238([16]))) = [0]
	$5 = *($3 + [8])
	*($2 + [8]) = $5
	if ( ((uint_32)$5 > (uint_32)[8]) ){ goto $label$8 }
	$0 = $3
	$4 = $2
	goto $label$7 
	
.LABEL $label$12
	$3 = [0]
	
.LOOP $label$14:
	$2 = [-3]
	
.LOOP $label$16:
	if ( ((int_32)*((($3 + $2) + [2762])) != (int_32)*(($2 + [2707]))) ){ goto $label$15 }
	if ( ($2 == 0) ){ goto $label$6 }
	$2 = ($2 + [1])
	if ( ((int_32)($3 + $2) != (int_32)[180]) ){ goto $label$16 }
	goto $label$4 
	
.LABEL $label$15
	$2 = [183]
	$3 = ($3 + [1])
	if ( ((int_32)$3 != (int_32)[183]) ){ goto $label$14 }
	goto $label$3 
	
.LABEL $label$11
	*($1) = *($0)
	*($0) = [0]
	return 
	
.LABEL $label$10
	$2 = *($1)
	if ( ($2 == 0) ){ goto $label$17 }
	if ( (*($2 + [8]) <= [9]) ){ goto $label$18 }
	$3 = *($2)
	if ( ($3 == 0) ){ goto $label$18 }
	CALL $241($3)
	
.LABEL $label$18
	CALL $240($2)
	
.LABEL $label$17
	*($1) = [0]
	return 
	
.LABEL $label$9
	$5 = *($1)
	$3 = [0]
	
.LOOP $label$19:
	$2 = [-3]
	
.LOOP $label$21:
	if ( ((int_32)*((($3 + $2) + [2762])) != (int_32)*(($2 + [2707]))) ){ goto $label$20 }
	if ( ($2 == 0) ){ goto $label$5 }
	$2 = ($2 + [1])
	if ( ((int_32)($3 + $2) != (int_32)[180]) ){ goto $label$21 }
	goto $label$2 
	
.LABEL $label$20
	$2 = [183]
	$3 = ($3 + [1])
	if ( ((int_32)$3 != (int_32)[183]) ){ goto $label$19 }
	goto $label$1 
	
.LABEL $label$8
	$4 = CALL $239($5)
	*($2) = $4
	$5 = *(($2 + [8]))
	$0 = *($3)
	
.LABEL $label$7
	CALL memcpy($4, $0, $5)
	*($1) = $2
	*($2 + [12]) = *($3 + [12])
	return 
	
.LABEL $label$6
	$2 = $3
	goto $label$3 
	
.LABEL $label$5
	$2 = $3
	goto $label$1 
	
.LABEL $label$4
	$2 = [183]
	
.LABEL $label$3
	*($1 + [4]) = [0]
	*($1) = ( [2759] ? ($2 + [2763]) : ((int_32)$2 == (int_32)[183]) )
	return 
	
.LABEL $label$2
	$2 = [183]
	
.LABEL $label$1
	$3 = ( [2759] ? ($2 + [2763]) : ((int_32)$2 == (int_32)[183]) )
	$2 = *($5)
	if ( ($2 == 0) ){ goto $label$23 }
	$5 = ($5 + [1])
	
.LOOP $label$24:
	if ( ((int_32)($2 & [255]) != (int_32)*($3)) ){ goto $label$22 }
	$3 = ($3 + [1])
	$2 = *($5)
	$5 = ($5 + [1])
	if ( $2 ){ goto $label$24 }
	
.LABEL $label$23
	$2 = [0]
	
.LABEL $label$22
	*($1) = ( *($0) ? [0] : ((int_32)($2 & [255]) == (int_32)*($3)) )
	$2
}

void .FUNC $125 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [16])
	*([0] + [4]) = $12
	*($12) = [0]
	$8 = *($1 + [8])
	*($12 + [8]) = $8
	if ( ((uint_32)$8 > (uint_32)[8]) ){ goto $label$2 }
	$11 = $12
	$10 = $1
	goto $label$1 
	
.LABEL $label$2
	$11 = CALL $239($8)
	*($12) = $11
	$10 = *($1)
	
.LABEL $label$1
	CALL memcpy($11, $10, $8)
	$4 = *(($12 + [8]))
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[8]) ){ goto $label$5 }
	$5 = ($12 + $4)
	
.LOOP $label$6:
	$7 = *($2)
	$10 = $12
	$8 = $4
	if ( ($8 == 0) ){ goto $label$7 }
	
.LOOP $label$8:
	$11 = ((int_32)$8 / (int_32)[2])
	$9 = ($10 + $11)
	if ( ((int_32)*($9) >= (int_32)$7) ){ goto $label$9 }
	$10 = ($9 + [1])
	$11 = (($8 + [-1]) - $11)
	
.LABEL $label$9
	$8 = $11
	if ( $8 ){ goto $label$8 }
	
.LABEL $label$7
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$10 }
	if ( ((int_32)*($10) <= (int_32)$7) ){ goto $label$3 }
	
.LABEL $label$10
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$5 = *($12)
	$6 = ($5 + $4)
	
.LOOP $label$11:
	$7 = *($2)
	$10 = $5
	$8 = $4
	if ( ($8 == 0) ){ goto $label$12 }
	
.LOOP $label$13:
	$11 = ((int_32)$8 / (int_32)[2])
	$9 = ($10 + $11)
	if ( ((int_32)*($9) >= (int_32)$7) ){ goto $label$14 }
	$10 = ($9 + [1])
	$11 = (($8 + [-1]) - $11)
	
.LABEL $label$14
	$8 = $11
	if ( $8 ){ goto $label$13 }
	
.LABEL $label$12
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$15 }
	if ( ((int_32)*($10) <= (int_32)$7) ){ goto $label$3 }
	
.LABEL $label$15
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$11 }
	
.LABEL $label$4
	$2 = $3
	
.LABEL $label$3
	if ( ($4 <= [9]) ){ goto $label$16 }
	$8 = *($12)
	if ( ($8 == 0) ){ goto $label$16 }
	CALL $241($8)
	
.LABEL $label$16
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$19 }
	if ( (*($1 + [12]) == 0) ){ goto $label$18 }
	$4 = ($2 + [1])
	goto $label$17 
	
.LABEL $label$19
	$2 = $3
	$4 = $3
	goto $label$17 
	
.LABEL $label$18
	$5 = *(($1 + [8]))
	if ( ((uint_32)$5 >= (uint_32)[9]) ){ goto $label$20 }
	$6 = ($1 + $5)
	$4 = $2
	
.LOOP $label$21:
	$7 = *($4)
	$10 = $1
	$8 = $5
	if ( ($8 == 0) ){ goto $label$22 }
	
.LOOP $label$23:
	$11 = ((int_32)$8 / (int_32)[2])
	$9 = ($10 + $11)
	if ( ((int_32)*($9) >= (int_32)$7) ){ goto $label$24 }
	$10 = ($9 + [1])
	$11 = (($8 + [-1]) - $11)
	
.LABEL $label$24
	$8 = $11
	if ( $8 ){ goto $label$23 }
	
.LABEL $label$22
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$17 }
	if ( ((int_32)*($10) > (int_32)$7) ){ goto $label$17 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$21 }
	goto $label$17 
	
.LABEL $label$20
	$6 = *($1)
	$1 = ($6 + $5)
	$4 = $2
	
.LOOP $label$25:
	$7 = *($4)
	$10 = $6
	$8 = $5
	if ( ($8 == 0) ){ goto $label$26 }
	
.LOOP $label$27:
	$11 = ((int_32)$8 / (int_32)[2])
	$9 = ($10 + $11)
	if ( ((int_32)*($9) >= (int_32)$7) ){ goto $label$28 }
	$10 = ($9 + [1])
	$11 = (($8 + [-1]) - $11)
	
.LABEL $label$28
	$8 = $11
	if ( $8 ){ goto $label$27 }
	
.LABEL $label$26
	if ( ((int_32)$10 == (int_32)$1) ){ goto $label$17 }
	if ( ((int_32)*($10) > (int_32)$7) ){ goto $label$17 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$25 }
	
.LABEL $label$17
	*($0 + [4]) = $4
	*($0) = $2
	*([0] + [4]) = ($12 + [16])
}

void .FUNC $124 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	CALL $125($0, *($1), $2, $3)
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [1136])
	*([0] + [4]) = $9
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [16]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$7 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [32]
	$7 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$13 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$9
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$8 }
	CALL eosio_assert(((int_64)$7 == (int_64)$1), [48])
	
.LABEL $label$7
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$16 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [112]
	$7 = (int_64)0
	
.LOOP $label$17:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$22 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$3 = ($3 + [165])
	goto $label$20 
	
.LABEL $label$22
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$19
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$18
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$17 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$15 }
	
.LABEL $label$16
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [128]
	$7 = (int_64)0
	
.LOOP $label$23:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$28 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$3 = ($3 + [165])
	goto $label$26 
	
.LABEL $label$28
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$27
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$25
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$24
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$23 }
	if ( ((int_64)$7 != (int_64)$1) ){ goto $label$29 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [112]
	$7 = (int_64)0
	
.LOOP $label$30:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$35 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$3 = ($3 + [165])
	goto $label$33 
	
.LABEL $label$35
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$34
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$32
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$31
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$30 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$15 }
	
.LABEL $label$29
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [144]
	$7 = (int_64)0
	
.LOOP $label$36:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$37 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$39 }
	$3 = ($3 + [165])
	goto $label$38 
	
.LABEL $label$39
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$38
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$37
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$36 }
	if ( ((int_64)$7 != (int_64)$1) ){ goto $label$14 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [112]
	$7 = (int_64)0
	
.LOOP $label$40:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$45 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$44 }
	$3 = ($3 + [165])
	goto $label$43 
	
.LABEL $label$45
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$44
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$43
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$42
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$41
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$40 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$14 }
	
.LABEL $label$15
	*(($9 + [376])) = $0
	*(($9 + [384])) = (int_64)-1
	*(($9 + [392])) = (int_64)0
	*(($9 + [400])) = [0]
	*($9 + [368]) = $0
	*($9 + [360]) = $0
	*($9 + [408]) = $0
	*(($9 + [416])) = $0
	*(($9 + [424])) = (int_64)-1
	*(($9 + [432])) = [0]
	*(($9 + [436])) = [0]
	*(($9 + [440])) = [0]
	*($9 + [448]) = $0
	*(($9 + [456])) = $0
	*(($9 + [464])) = (int_64)-1
	*(($9 + [472])) = [0]
	*(($9 + [476])) = [0]
	*(($9 + [480])) = [0]
	*($9 + [488]) = $0
	*(($9 + [496])) = $0
	*(($9 + [504])) = (int_64)-1
	*(($9 + [512])) = [0]
	*(($9 + [516])) = [0]
	*(($9 + [520])) = [0]
	*($9 + [528]) = $0
	*(($9 + [536])) = $0
	*(($9 + [544])) = (int_64)-1
	*(($9 + [552])) = [0]
	*(($9 + [556])) = [0]
	*(($9 + [560])) = [0]
	*($9 + [568]) = $0
	*(($9 + [576])) = $0
	*(($9 + [584])) = (int_64)-1
	*(($9 + [592])) = [0]
	*(($9 + [596])) = [0]
	*(($9 + [600])) = [0]
	*($9 + [608]) = $0
	*(($9 + [616])) = $0
	*(($9 + [624])) = (int_64)-1
	*(($9 + [632])) = [0]
	*(($9 + [636])) = [0]
	*(($9 + [640])) = [0]
	*($9 + [648]) = $0
	*(($9 + [656])) = $0
	*(($9 + [664])) = (int_64)-1
	*(($9 + [672])) = [0]
	*(($9 + [676])) = [0]
	*(($9 + [680])) = [0]
	*($9 + [688]) = $0
	*(($9 + [696])) = $0
	*(($9 + [704])) = (int_64)-1
	*(($9 + [712])) = [0]
	*(($9 + [716])) = [0]
	*(($9 + [720])) = [0]
	$6 = *($9 + [360])
	*($9 + [728]) = $6
	*(($9 + [736])) = $6
	*(($9 + [744])) = (int_64)-1
	*(($9 + [752])) = [0]
	*(($9 + [756])) = [0]
	*(($9 + [760])) = [0]
	*($9 + [768]) = $6
	*(($9 + [776])) = $6
	*(($9 + [784])) = (int_64)-1
	*(($9 + [792])) = [0]
	*(($9 + [796])) = [0]
	*(($9 + [800])) = [0]
	*($9 + [808]) = $6
	*(($9 + [816])) = $6
	*(($9 + [824])) = (int_64)-1
	*(($9 + [832])) = [0]
	*(($9 + [836])) = [0]
	*(($9 + [840])) = [0]
	*($9 + [848]) = $6
	*(($9 + [856])) = $6
	*(($9 + [864])) = (int_64)-1
	*(($9 + [872])) = [0]
	*(($9 + [876])) = [0]
	*(($9 + [880])) = [0]
	*($9 + [888]) = $6
	*(($9 + [896])) = $6
	*(($9 + [904])) = (int_64)-1
	*(($9 + [912])) = [0]
	*(($9 + [916])) = [0]
	*(($9 + [920])) = [0]
	*($9 + [928]) = $6
	*(($9 + [936])) = $6
	*(($9 + [944])) = (int_64)-1
	*(($9 + [952])) = [0]
	*(($9 + [956])) = [0]
	*(($9 + [960])) = [0]
	*($9 + [968]) = $6
	*(($9 + [976])) = $6
	*(($9 + [984])) = (int_64)-1
	*(($9 + [992])) = [0]
	*(($9 + [996])) = [0]
	*(($9 + [1000])) = [0]
	*($9 + [1008]) = $6
	*(($9 + [1016])) = $6
	*(($9 + [1024])) = (int_64)-1
	*(($9 + [1032])) = [0]
	*(($9 + [1036])) = [0]
	*(($9 + [1040])) = [0]
	*($9 + [1048]) = $6
	*(($9 + [1056])) = $6
	*(($9 + [1064])) = (int_64)-1
	*(($9 + [1072])) = [0]
	*(($9 + [1076])) = [0]
	*(($9 + [1080])) = [0]
	$6 = *($9 + [360])
	*($9 + [1088]) = $6
	*(($9 + [1096])) = $6
	*(($9 + [1104])) = (int_64)-1
	*(($9 + [1112])) = [0]
	*(($9 + [1116])) = [0]
	*(($9 + [1120])) = [0]
	*($9 + [1128]) = $1
	if ( ((int_64)$2 > (int_64)-3075276122324910081) ){ goto $label$67 }
	if ( ((int_64)$2 <= (int_64)-4416970089004941313) ){ goto $label$66 }
	if ( ((int_64)$2 > (int_64)-3617168760277827585) ){ goto $label$64 }
	if ( ((int_64)$2 == (int_64)-4416970089004941312) ){ goto $label$60 }
	if ( ((int_64)$2 == (int_64)-4352380133890326528) ){ goto $label$59 }
	if ( ((int_64)$2 != (int_64)-4157661259812044800) ){ goto $label$46 }
	*($9 + [228]) = [0]
	*($9 + [224]) = [1]
	*($9 + [136 align=4]) = *($9 + [224])
	CALL $20(($9 + [360]), ($9 + [136]))
	goto $label$46 
	
.LABEL $label$67
	if ( ((int_64)$2 <= (int_64)6712742083569909759) ){ goto $label$65 }
	if ( ((int_64)$2 > (int_64)8421049719068819455) ){ goto $label$63 }
	if ( ((int_64)$2 == (int_64)6712742083569909760) ){ goto $label$58 }
	if ( ((int_64)$2 == (int_64)7111881242768834560) ){ goto $label$57 }
	if ( ((int_64)$2 != (int_64)7112003646020124672) ){ goto $label$46 }
	*($9 + [244]) = [0]
	*($9 + [240]) = [2]
	*($9 + [120 align=4]) = *($9 + [240])
	CALL $20(($9 + [360]), ($9 + [120]))
	goto $label$46 
	
.LABEL $label$66
	if ( ((int_64)$2 <= (int_64)-4417242546528185345) ){ goto $label$62 }
	if ( ((int_64)$2 == (int_64)-4417242546528185344) ){ goto $label$56 }
	if ( ((int_64)$2 == (int_64)-4417038679029579776) ){ goto $label$55 }
	if ( ((int_64)$2 != (int_64)-4417035268041736192) ){ goto $label$46 }
	*($9 + [300]) = [0]
	*($9 + [296]) = [3]
	*($9 + [64 align=4]) = *($9 + [296])
	CALL $28(($9 + [360]), ($9 + [64]))
	goto $label$46 
	
.LABEL $label$65
	if ( ((int_64)$2 <= (int_64)3626371252471988223) ){ goto $label$61 }
	if ( ((int_64)$2 == (int_64)3626371252471988224) ){ goto $label$54 }
	if ( ((int_64)$2 == (int_64)4921565079997371264) ){ goto $label$53 }
	if ( ((int_64)$2 != (int_64)4923678602614013952) ){ goto $label$46 }
	*($9 + [188]) = [0]
	*($9 + [184]) = [4]
	*($9 + [176 align=4]) = *($9 + [184])
	CALL $16(($9 + [360]), ($9 + [176]))
	goto $label$46 
	
.LABEL $label$64
	if ( ((int_64)$2 == (int_64)-3617168760277827584) ){ goto $label$52 }
	if ( ((int_64)$2 == (int_64)-3106564269398294528) ){ goto $label$51 }
	if ( ((int_64)$2 != (int_64)-3102536759825661952) ){ goto $label$46 }
	*($9 + [220]) = [0]
	*($9 + [216]) = [5]
	*($9 + [144 align=4]) = *($9 + [216])
	CALL $42(($9 + [360]), ($9 + [144]))
	goto $label$46 
	
.LABEL $label$63
	if ( ((int_64)$2 == (int_64)8421052261874008064) ){ goto $label$47 }
	if ( ((int_64)$2 == (int_64)8421049959963623424) ){ goto $label$50 }
	if ( ((int_64)$2 != (int_64)8421049719068819456) ){ goto $label$46 }
	*($9 + [356]) = [0]
	*($9 + [352]) = [6]
	*($9 + [8 align=4]) = *($9 + [352])
	CALL $16(($9 + [360]), ($9 + [8]))
	goto $label$46 
	
.LABEL $label$62
	if ( ((int_64)$2 == (int_64)-6533250076545236992) ){ goto $label$49 }
	if ( ((int_64)$2 != (int_64)-5001342339331915776) ){ goto $label$46 }
	*($9 + [236]) = [0]
	*($9 + [232]) = [7]
	*($9 + [128 align=4]) = *($9 + [232])
	CALL $20(($9 + [360]), ($9 + [128]))
	goto $label$46 
	
.LABEL $label$61
	if ( ((int_64)$2 == (int_64)-3075276122324910080) ){ goto $label$48 }
	if ( ((int_64)$2 != (int_64)3626095131184070656) ){ goto $label$46 }
	*($9 + [292]) = [0]
	*($9 + [288]) = [8]
	*($9 + [72 align=4]) = *($9 + [288])
	CALL $30(($9 + [360]), ($9 + [72]))
	goto $label$46 
	
.LABEL $label$60
	*($9 + [324]) = [0]
	*($9 + [320]) = [9]
	*($9 + [40 align=4]) = *($9 + [320])
	CALL $23(($9 + [360]), ($9 + [40]))
	goto $label$46 
	
.LABEL $label$59
	*($9 + [268]) = [0]
	*($9 + [264]) = [10]
	*($9 + [96 align=4]) = *($9 + [264])
	CALL $35(($9 + [360]), ($9 + [96]))
	goto $label$46 
	
.LABEL $label$58
	*($9 + [276]) = [0]
	*($9 + [272]) = [11]
	*($9 + [88 align=4]) = *($9 + [272])
	CALL $33(($9 + [360]), ($9 + [88]))
	goto $label$46 
	
.LABEL $label$57
	*($9 + [252]) = [0]
	*($9 + [248]) = [12]
	*($9 + [112 align=4]) = *($9 + [248])
	CALL $20(($9 + [360]), ($9 + [112]))
	goto $label$46 
	
.LABEL $label$56
	*($9 + [212]) = [0]
	*($9 + [208]) = [13]
	*($9 + [152 align=4]) = *($9 + [208])
	CALL $44(($9 + [360]), ($9 + [152]))
	goto $label$46 
	
.LABEL $label$55
	*($9 + [308]) = [0]
	*($9 + [304]) = [14]
	*($9 + [56 align=4]) = *($9 + [304])
	CALL $26(($9 + [360]), ($9 + [56]))
	goto $label$46 
	
.LABEL $label$54
	*($9 + [284]) = [0]
	*($9 + [280]) = [15]
	*($9 + [80 align=4]) = *($9 + [280])
	CALL $30(($9 + [360]), ($9 + [80]))
	goto $label$46 
	
.LABEL $label$53
	*($9 + [260]) = [0]
	*($9 + [256]) = [16]
	*($9 + [104 align=4]) = *($9 + [256])
	CALL $20(($9 + [360]), ($9 + [104]))
	goto $label$46 
	
.LABEL $label$52
	*($9 + [204]) = [0]
	*($9 + [200]) = [17]
	*($9 + [160 align=4]) = *($9 + [200])
	CALL $46(($9 + [360]), ($9 + [160]))
	goto $label$46 
	
.LABEL $label$51
	*($9 + [196]) = [0]
	*($9 + [192]) = [18]
	*($9 + [168 align=4]) = *($9 + [192])
	CALL $33(($9 + [360]), ($9 + [168]))
	goto $label$46 
	
.LABEL $label$50
	*($9 + [340]) = [0]
	*($9 + [336]) = [19]
	*($9 + [24 align=4]) = *($9 + [336])
	CALL $20(($9 + [360]), ($9 + [24]))
	goto $label$46 
	
.LABEL $label$49
	*($9 + [316]) = [0]
	*($9 + [312]) = [20]
	*($9 + [48 align=4]) = *($9 + [312])
	CALL $16(($9 + [360]), ($9 + [48]))
	goto $label$46 
	
.LABEL $label$48
	*($9 + [332]) = [0]
	*($9 + [328]) = [21]
	*($9 + [32 align=4]) = *($9 + [328])
	CALL $16(($9 + [360]), ($9 + [32]))
	goto $label$46 
	
.LABEL $label$47
	*($9 + [348]) = [0]
	*($9 + [344]) = [22]
	*($9 + [16 align=4]) = *($9 + [344])
	CALL $18(($9 + [360]), ($9 + [16]))
	
.LABEL $label$46
	CALL $49(($9 + [360]))
	
.LABEL $label$14
	*([0] + [4]) = ($9 + [1136])
}

void .FUNC _ZN7campwar8initcampEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [160])
	*([0] + [4]) = $9
	CALL require_auth(*($0))
	CALL eosio_assert([1], [512])
	$7 = [0]
	$6 = (int_64)5523022
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [480])
	$2 = *(($0 + [32]))
	$8 = *(($0 + [36]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)1) ){ goto $label$6 }
	$8 = $7
	$4 = ($7 + [-24])
	$7 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$1 = ($0 + [8])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$11 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [144]) == (int_32)$1), [592])
	if ( $7 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$7 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)4730274944552796160, (int_64)1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	$7 = CALL $66($1, $7)
	CALL eosio_assert(((int_32)*($7 + [144]) == (int_32)$1), [592])
	
.LABEL $label$10
	$5 = *($0)
	CALL eosio_assert(((int_32)*($7 + [144]) == (int_32)$1), [768])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$4()), [816])
	*($7 + [8]) = (int_64)1
	*($7 + [16]) = (int_64)0
	*($7 + [24]) = (int_64)30000000
	*($7 + [32]) = (int_64)30000000
	*($7 + [40]) = (int_64)30
	*($7 + [48]) = (int_64)60
	$6 = *($7)
	*($7 + [56]) = [0]
	*($7 + [64]) = (int_64)22000
	*($7 + [72]) = (int_64)22000
	*($7 + [80]) = (int_64)600
	*($7 + [88]) = (int_64)60
	*($7 + [96]) = [0]
	*($7 + [112]) = (int_64)100
	CALL eosio_assert([1], [992])
	*($9 + [152]) = ($9 + [136])
	*($9 + [148]) = $9
	*($9 + [144]) = $9
	CALL $80(($9 + [144]), $7)
	CALL db_update_i64(*($7 + [148]), $5, $9, [136])
	$7 = ($0 + [24])
	if ( (uint_64)($6 <= *($7)) ){ goto $label$8 }
	*($7) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	goto $label$8 
	
.LABEL $label$9
	$5 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$4()), [1888])
	*(($4 = CALL $238([160])) + [96]) = [0]
	*($4 + [56]) = [0]
	*($4 + [120]) = (int_64)0
	*($4 + [128]) = (int_64)1397703940
	CALL eosio_assert([1], [512])
	$6 = (uint_64)*($4 + [128]) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	
.LOOP $label$16:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$16 }
	
.LABEL $label$15
	$8 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	$8 = [0]
	
.LABEL $label$12
	CALL eosio_assert($8, [480])
	*($4 + [144]) = $1
	*($4 + [8]) = (int_64)1
	*($4) = (int_64)1
	*($4 + [16]) = (int_64)0
	*($4 + [24]) = (int_64)30000000
	*($4 + [32]) = (int_64)30000000
	*($4 + [40]) = (int_64)30
	*($4 + [48]) = (int_64)60
	*(($4 + [56])) = [0]
	*($4 + [64]) = (int_64)22000
	*($4 + [72]) = (int_64)22000
	*($4 + [80]) = (int_64)600
	*($4 + [88]) = (int_64)60
	*(($4 + [96])) = [0]
	*($4 + [112]) = (int_64)100
	*($4 + [104]) = (int_64)2000
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = (int_64)1413893636
	*($4 + [136]) = (int_64)0
	*($9 + [152]) = ($9 + [136])
	*($9 + [148]) = $9
	*($9 + [144]) = $9
	CALL $80(($9 + [144]), $4)
	$6 = *($4)
	$8 = CALL db_store_i64(*(($0 + [16])), (int_64)4730274944552796160, $5, $6, $9, [136])
	*($4 + [148]) = $8
	$7 = ($0 + [24])
	if ( (uint_64)($6 <= *($7)) ){ goto $label$17 }
	*($7) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$17
	*($9 + [144]) = $4
	$6 = *($4)
	*($9) = $6
	*($9 + [140]) = $8
	$3 = ($0 + [36])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [40]))) ){ goto $label$19 }
	*($7 + [8]) = $6
	*($7 + [16]) = $8
	*($9 + [144]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$18 
	
.LABEL $label$19
	CALL $68(($0 + [32]), ($9 + [144]), $9, ($9 + [140]))
	
.LABEL $label$18
	$7 = *($9 + [144])
	*($9 + [144]) = [0]
	if ( ($7 == 0) ){ goto $label$8 }
	CALL $240($7)
	
.LABEL $label$8
	$2 = *(($0 + [32]))
	$8 = *(($0 + [36]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$20 }
	$7 = ($8 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$21:
	if ( ((int_64)*(*($7)) == (int_64)2) ){ goto $label$20 }
	$8 = $7
	$4 = ($7 + [-24])
	$7 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$21 }
	
.LABEL $label$20
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$25 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [144]) == (int_32)$1), [592])
	if ( $7 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$7 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)4730274944552796160, (int_64)2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$23 }
	$7 = CALL $66($1, $7)
	CALL eosio_assert(((int_32)*($7 + [144]) == (int_32)$1), [592])
	
.LABEL $label$24
	$5 = *($0)
	CALL eosio_assert(((int_32)*($7 + [144]) == (int_32)$1), [768])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$4()), [816])
	*($7 + [8]) = (int_64)1
	*($7 + [16]) = (int_64)0
	*($7 + [24]) = (int_64)32000000
	*($7 + [32]) = (int_64)32000000
	*($7 + [40]) = (int_64)30
	*($7 + [48]) = (int_64)60
	$6 = *($7)
	*($7 + [56]) = [0]
	*($7 + [64]) = (int_64)21000
	*($7 + [72]) = (int_64)21000
	*($7 + [80]) = (int_64)600
	*($7 + [88]) = (int_64)60
	*($7 + [96]) = [0]
	*($7 + [112]) = (int_64)100
	CALL eosio_assert([1], [992])
	*($9 + [152]) = ($9 + [136])
	*($9 + [148]) = $9
	*($9 + [144]) = $9
	CALL $80(($9 + [144]), $7)
	CALL db_update_i64(*($7 + [148]), $5, $9, [136])
	$7 = ($0 + [24])
	if ( (uint_64)($6 <= *($7)) ){ goto $label$22 }
	*($7) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	goto $label$22 
	
.LABEL $label$23
	$5 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$4()), [1888])
	*(($4 = CALL $238([160])) + [96]) = [0]
	*($4 + [56]) = [0]
	*($4 + [120]) = (int_64)0
	*($4 + [128]) = (int_64)1397703940
	CALL eosio_assert([1], [512])
	$6 = (uint_64)*($4 + [128]) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$29 }
	
.LOOP $label$30:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$30 }
	
.LABEL $label$29
	$8 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$8 = [0]
	
.LABEL $label$26
	CALL eosio_assert($8, [480])
	*($4 + [144]) = $1
	*($4 + [8]) = (int_64)1
	*($4) = (int_64)2
	*($4 + [16]) = (int_64)0
	*($4 + [24]) = (int_64)32000000
	*($4 + [32]) = (int_64)32000000
	*($4 + [40]) = (int_64)30
	*($4 + [48]) = (int_64)60
	*(($4 + [56])) = [0]
	*($4 + [64]) = (int_64)21000
	*($4 + [72]) = (int_64)21000
	*($4 + [80]) = (int_64)600
	*($4 + [88]) = (int_64)60
	*(($4 + [96])) = [0]
	*($4 + [112]) = (int_64)100
	*($4 + [104]) = (int_64)2000
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = (int_64)1413893636
	*($4 + [136]) = (int_64)0
	*($9 + [152]) = ($9 + [136])
	*($9 + [148]) = $9
	*($9 + [144]) = $9
	CALL $80(($9 + [144]), $4)
	$6 = *($4)
	$8 = CALL db_store_i64(*(($0 + [16])), (int_64)4730274944552796160, $5, $6, $9, [136])
	*($4 + [148]) = $8
	$7 = ($0 + [24])
	if ( (uint_64)($6 <= *($7)) ){ goto $label$31 }
	*($7) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$31
	*($9 + [144]) = $4
	$6 = *($4)
	*($9) = $6
	*($9 + [140]) = $8
	$3 = ($0 + [36])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [40]))) ){ goto $label$33 }
	*($7 + [8]) = $6
	*($7 + [16]) = $8
	*($9 + [144]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$32 
	
.LABEL $label$33
	CALL $68(($0 + [32]), ($9 + [144]), $9, ($9 + [140]))
	
.LABEL $label$32
	$7 = *($9 + [144])
	*($9 + [144]) = [0]
	if ( ($7 == 0) ){ goto $label$22 }
	CALL $240($7)
	
.LABEL $label$22
	$2 = *(($0 + [32]))
	$8 = *(($0 + [36]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$34 }
	$7 = ($8 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$35:
	if ( ((int_64)*(*($7)) == (int_64)3) ){ goto $label$34 }
	$8 = $7
	$4 = ($7 + [-24])
	$7 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$35 }
	
.LABEL $label$34
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$39 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [144]) == (int_32)$1), [592])
	if ( $7 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$39
	$7 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)4730274944552796160, (int_64)3)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$37 }
	$7 = CALL $66($1, $7)
	CALL eosio_assert(((int_32)*($7 + [144]) == (int_32)$1), [592])
	
.LABEL $label$38
	$5 = *($0)
	CALL eosio_assert(((int_32)*($7 + [144]) == (int_32)$1), [768])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$4()), [816])
	*($7 + [8]) = (int_64)1
	*($7 + [16]) = (int_64)0
	*($7 + [24]) = (int_64)34000000
	*($7 + [32]) = (int_64)34000000
	*($7 + [40]) = (int_64)30
	*($7 + [48]) = (int_64)60
	$6 = *($7)
	*($7 + [56]) = [0]
	*($7 + [64]) = (int_64)20000
	*($7 + [72]) = (int_64)20000
	*($7 + [80]) = (int_64)600
	*($7 + [88]) = (int_64)60
	*($7 + [96]) = [0]
	*($7 + [112]) = (int_64)100
	CALL eosio_assert([1], [992])
	*($9 + [152]) = ($9 + [136])
	*($9 + [148]) = $9
	*($9 + [144]) = $9
	CALL $80(($9 + [144]), $7)
	CALL db_update_i64(*($7 + [148]), $5, $9, [136])
	$7 = ($0 + [24])
	if ( (uint_64)($6 <= *($7)) ){ goto $label$36 }
	*($7) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	goto $label$36 
	
.LABEL $label$37
	$5 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$4()), [1888])
	*(($4 = CALL $238([160])) + [96]) = [0]
	*($4 + [56]) = [0]
	*($4 + [120]) = (int_64)0
	*($4 + [128]) = (int_64)1397703940
	CALL eosio_assert([1], [512])
	$6 = (uint_64)*($4 + [128]) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$42:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$41 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$43 }
	
.LOOP $label$44:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$41 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$44 }
	
.LABEL $label$43
	$8 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$42 }
	goto $label$40 
	
.LABEL $label$41
	$8 = [0]
	
.LABEL $label$40
	CALL eosio_assert($8, [480])
	*($4 + [144]) = $1
	*($4 + [8]) = (int_64)1
	*($4) = (int_64)3
	*($4 + [16]) = (int_64)0
	*($4 + [24]) = (int_64)34000000
	*($4 + [32]) = (int_64)34000000
	*($4 + [40]) = (int_64)30
	*($4 + [48]) = (int_64)60
	*(($4 + [56])) = [0]
	*($4 + [64]) = (int_64)20000
	*($4 + [72]) = (int_64)20000
	*($4 + [80]) = (int_64)600
	*($4 + [88]) = (int_64)60
	*(($4 + [96])) = [0]
	*($4 + [112]) = (int_64)100
	*($4 + [104]) = (int_64)2000
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = (int_64)1413893636
	*($4 + [136]) = (int_64)0
	*($9 + [152]) = ($9 + [136])
	*($9 + [148]) = $9
	*($9 + [144]) = $9
	CALL $80(($9 + [144]), $4)
	$6 = *($4)
	$8 = CALL db_store_i64(*(($0 + [16])), (int_64)4730274944552796160, $5, $6, $9, [136])
	*($4 + [148]) = $8
	$7 = ($0 + [24])
	if ( (uint_64)($6 <= *($7)) ){ goto $label$45 }
	*($7) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$45
	*($9 + [144]) = $4
	$6 = *($4)
	*($9) = $6
	*($9 + [140]) = $8
	$3 = ($0 + [36])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [40]))) ){ goto $label$47 }
	*($7 + [8]) = $6
	*($7 + [16]) = $8
	*($9 + [144]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$46 
	
.LABEL $label$47
	CALL $68(($0 + [32]), ($9 + [144]), $9, ($9 + [140]))
	
.LABEL $label$46
	$7 = *($9 + [144])
	*($9 + [144]) = [0]
	if ( ($7 == 0) ){ goto $label$36 }
	CALL $240($7)
	
.LABEL $label$36
	*([0] + [4]) = ($9 + [160])
}

int_32 .FUNC $16 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = *([0] + [4])
	$4 = $5
	$2 = *($1 + [4])
	$1 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((uint_32)$3 <= (uint_32)[512]) ){ goto $label$2 }
	$5 = CALL malloc($3)
	CALL read_action_data($5, $3)
	CALL free($5)
	goto $label$1 
	
.LABEL $label$2
	$5 = ($5 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	$3 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	$1 = *((*($3) + $1))
	
.LABEL $label$3
	CALL void $3((int_32 $1))
	*([0] + [4]) = $4
	return [1]
}

void .FUNC _ZN7campwar7initgunExy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_32 $17
	$17 = (*([0] + [4]) - [112])
	*([0] + [4]) = $17
	CALL require_auth(*($0))
	CALL eosio_assert(((int_64)$1 > (int_64)0), [6848])
	$15 = ($0 + [8])
	$7 = [0]
	$10 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)4730274944552796160, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$1 }
	CALL $66($15, $10)
	$7 = [1]
	
.LABEL $label$1
	CALL eosio_assert($7, [6768])
	$4 = *(($0 + [32]))
	$9 = *(($0 + [36]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$2 }
	$7 = ($9 + [-24])
	$3 = ([0] - $4)
	
.LOOP $label$3:
	if ( ((int_64)*(*($7)) == (int_64)$2) ){ goto $label$2 }
	$9 = $7
	$10 = ($7 + [-24])
	$7 = $10
	if ( ((int_32)($10 + $3) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$5 }
	$7 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [144]) == (int_32)$15), [592])
	goto $label$4 
	
.LABEL $label$5
	$7 = [0]
	$10 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)4730274944552796160, $2)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$4 }
	$7 = CALL $66($15, $10)
	CALL eosio_assert(((int_32)*($7 + [144]) == (int_32)$15), [592])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [6880])
	CALL eosio_assert([1], [512])
	$16 = (int_64)5459781
	$7 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$10 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$10 = [0]
	
.LABEL $label$6
	CALL eosio_assert($10, [480])
	$3 = ($0 + [88])
	$7 = CALL db_lowerbound_i64(*($0 + [88]), *(($0 + [96])), (int_64)7396599438002618368, (int_64)0)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$12 }
	CALL $57($3, $7)
	*($17) = (CASTING uint_64)(uint_32 $3)
	$7 = CALL $221($17)
	if ( ((int_64)$1 < (int_64)1) ){ goto $label$11 }
	$5 = ($0 + [112])
	$6 = ((int_64)*(*($7 + [4])) + (int_64)1)
	$4 = ($17 + [88])
	$12 = ($17 + [104])
	$13 = ($0 + [96])
	$14 = ($0 + [120])
	$15 = ($0 + [116])
	$16 = (int_64)0
	
.LOOP $label$13:
	$11 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [88])) == (int_64)CALL $fimport$4()), [1888])
	$7 = CALL $238([104])
	$10 = CALL $63($7)
	*($7 + [88]) = $3
	*($7 + [8]) = (int_64)0
	*($7) = ((int_64)$6 + (int_64)$16)
	*($7 + [16]) = (int_64)1
	*($7 + [24 align=4]) = (int_64)0
	*($7 + [32]) = $2
	*($7 + [40]) = (int_64)0
	*($7 + [48]) = (int_64)1000
	*($7 + [56]) = (int_64)1397703940
	*($7 + [64]) = (int_64)1000
	*($7 + [72]) = (int_64)1397703940
	*($7 + [80]) = (int_64)0
	*($12) = $4
	*($17 + [100]) = $17
	*($17 + [96]) = $17
	CALL $62(($17 + [96]), $10)
	$8 = *($7)
	$9 = CALL db_store_i64(*($13), (int_64)7396599438002618368, $11, $8, $17, [88])
	*($7 + [92]) = $9
	$10 = ($0 + [104])
	if ( (uint_64)($8 <= *($10)) ){ goto $label$14 }
	*($10) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$14
	*($17 + [96]) = $7
	$8 = *($7)
	*($17) = $8
	*($17 + [92]) = $9
	$10 = *($15)
	if ( ((uint_32)$10 >= (uint_32)*($14)) ){ goto $label$16 }
	*($10 + [8]) = $8
	*($10 + [16]) = $9
	*($17 + [96]) = [0]
	*($10) = $7
	*($15) = ($10 + [24])
	goto $label$15 
	
.LABEL $label$16
	CALL $69($5, ($17 + [96]), $17, ($17 + [92]))
	
.LABEL $label$15
	$7 = *($17 + [96])
	*($17 + [96]) = [0]
	if ( ($7 == 0) ){ goto $label$17 }
	CALL $240($7)
	
.LABEL $label$17
	$16 = ((int_64)$16 + (int_64)1)
	if ( ((int_64)$16 < (int_64)$1) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	if ( ((int_64)$1 < (int_64)1) ){ goto $label$11 }
	$5 = ($0 + [112])
	$4 = ($17 + [88])
	$12 = ($17 + [104])
	$13 = ($0 + [96])
	$14 = ($0 + [120])
	$15 = ($0 + [116])
	$16 = (int_64)0
	
.LOOP $label$18:
	$11 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [88])) == (int_64)CALL $fimport$4()), [1888])
	$7 = CALL $238([104])
	$10 = CALL $63($7)
	*($7 + [88]) = $3
	*($7 + [8]) = (int_64)0
	$16 = ((int_64)$16 + (int_64)1)
	*($7) = $16
	*($7 + [16]) = (int_64)1
	*($7 + [24 align=4]) = (int_64)0
	*($7 + [32]) = $2
	*($7 + [40]) = (int_64)0
	*($7 + [48]) = (int_64)1000
	*($7 + [56]) = (int_64)1397703940
	*($7 + [64]) = (int_64)1000
	*($7 + [72]) = (int_64)1397703940
	*($7 + [80]) = (int_64)0
	*($12) = $4
	*($17 + [100]) = $17
	*($17 + [96]) = $17
	CALL $62(($17 + [96]), $10)
	$8 = *($7)
	$9 = CALL db_store_i64(*($13), (int_64)7396599438002618368, $11, $8, $17, [88])
	*($7 + [92]) = $9
	$10 = ($0 + [104])
	if ( (uint_64)($8 <= *($10)) ){ goto $label$19 }
	*($10) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$19
	*($17 + [96]) = $7
	$8 = *($7)
	*($17) = $8
	*($17 + [92]) = $9
	$10 = *($15)
	if ( ((uint_32)$10 >= (uint_32)*($14)) ){ goto $label$21 }
	*($10 + [8]) = $8
	*($10 + [16]) = $9
	*($17 + [96]) = [0]
	*($10) = $7
	*($15) = ($10 + [24])
	goto $label$20 
	
.LABEL $label$21
	CALL $69($5, ($17 + [96]), $17, ($17 + [92]))
	
.LABEL $label$20
	$7 = *($17 + [96])
	*($17 + [96]) = [0]
	if ( ($7 == 0) ){ goto $label$22 }
	CALL $240($7)
	
.LABEL $label$22
	if ( ((int_64)$16 < (int_64)$1) ){ goto $label$18 }
	
.LABEL $label$11
	*([0] + [4]) = ($17 + [112])
}

int_64 .FUNC _Z16gun_level_up_feey (int_64 $0)
{
	return ((int_64)((int_64)$0 * (int_64)500) + (int_64)1000)
}

int_64 .FUNC _Z17gun_trade_min_feey (int_64 $0)
{
	return (Rounds 0)(((float_64)((float_64)(CASTING float_64)(uint_64 ((int_64)$0 * (int_64)1500)) + (float_64)((float_64)CALL pow((CASTING float_64)(uint_64 $0), (float_64)2) * (float_64)(float_64)500)) + (float_64)(float_64)-1e3))
}

int_32 .FUNC _Z12attack_scorexxxRx (int_64 $0, int_64 $1, int_64 $2, int_32 $3)
{
	float_64 $4
	int_32 $5
	$5 = [0]
	if ( ((int_64)$2 > (int_64)$1) ){ goto $label$1 }
	$4 = ((float_64)((float_64)(CASTING float_64)(uint_64 ((int_64)$0 * (int_64)2500)) * (float_64)(float_64)5) * (float_64)((float_64)$4 + (float_64)(float_64)1))
	$4 = ((float_64)(CASTING float_64)(int_64 $2) / (float_64)(CASTING float_64)(int_64 $1))
	*($3) = (Rounds 0)(((float_64)$4 + (float_64)((float_64)$4 + (float_64)$4)))
	$5 = [1]
	
.LABEL $label$1
	return $5
}

int_32 .FUNC _Z10heal_scorexxxRx (int_64 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = [0]
	if ( ((int_64)$1 < (int_64)$2) ){ goto $label$1 }
	*($3) = (Rounds 0)(((float_64)((float_64)((float_64)(CASTING float_64)(int_64 $0) * (float_64)CALL pow(((float_64)((float_64)(CASTING float_64)(int_64 (int_64))($1 - $2)) / (float_64)(CASTING float_64)(int_64 $1)) + (float_64)(float_64)1), (float_64)2)) / (float_64)(float_64)50) * (float_64)(float_64)1e4))
	$4 = [1]
	
.LABEL $label$1
	return $4
}

void .FUNC $185 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$3 = int_32(($6 - $5) >> [3])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[536870912]) ){ goto $label$3 }
	$4 = [536870911]
	$2 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$5 }
	$4 = int_32($2 >> [2])
	$4 = ( $7 ? $4 : ($4 <= $7) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $238(($4 << [3]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $244($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($3 << [3])))) = *($1)
	$6 = ($6 - $5)
	$1 = ($3 - $6)
	$4 = ($7 + ($4 << [3]))
	$7 = ($3 + [8])
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $5, $6)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $240($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

int_32 .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = (*([0] + [4]) - [16])
	$8 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	$6 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8 + [8]) = (int_64)0
	*($8) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [448])
	CALL memcpy($8, $6, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [448])
	$5 = ($8 + [8])
	CALL memcpy($5, ($6 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($5)
	$3 = *($8)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$7 = *((*($1) + $7))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $7))
	*([0] + [4]) = ($8 + [16])
	return [1]
}

void .FUNC _ZN7campwar10initconfigEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [96])
	*([0] + [4]) = $12
	*($12 + [8]) = $1
	CALL require_auth(*($0))
	$2 = ($0 + [8])
	$11 = [0]
	$3 = [0]
	$9 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)4730274944552796160, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $66($2, $9)
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [6768])
	$3 = CALL db_lowerbound_i64(*($0 + [88]), *(($0 + [96])), (int_64)7396599438002618368, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$11 = CALL $57(($0 + [88]), $3)
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [6816])
	$11 = ($0 + [128])
	$3 = CALL db_lowerbound_i64(*($0 + [128]), *(($0 + [136])), (int_64)4982871454518345728, (int_64)0)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$4 }
	$3 = CALL $78($11, $3)
	$1 = *($0)
	*($12 + [32]) = ($12 + [8])
	CALL $213($11, $3, $1, ($12 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$1 = *($0)
	*($12) = $0
	*($12 + [4]) = ($12 + [8])
	*($12 + [80]) = $1
	CALL eosio_assert(((int_64)*($11) == (int_64)CALL $fimport$4()), [1888])
	*($12 + [32]) = $11
	*($12 + [36]) = $12
	*($12 + [40]) = ($12 + [80])
	$3 = CALL $238([88])
	CALL $127($3)
	*($3 + [72]) = $11
	CALL $212(($12 + [32]), $3)
	*($12 + [24]) = $3
	$1 = *($3)
	*($12 + [32]) = $1
	$9 = *($3 + [76])
	*($12 + [20]) = $9
	$6 = ($0 + [156])
	$11 = *($6)
	if ( ((uint_32)$11 >= (uint_32)*(($0 + [160]))) ){ goto $label$6 }
	*($11 + [8]) = $1
	*($11 + [16]) = $9
	*($12 + [24]) = [0]
	*($11) = $3
	*($6) = ($11 + [24])
	goto $label$5 
	
.LABEL $label$6
	CALL $129(($0 + [152]), ($12 + [24]), ($12 + [32]), ($12 + [20]))
	
.LABEL $label$5
	$11 = *($12 + [24])
	*($12 + [24]) = [0]
	if ( ($11 == 0) ){ goto $label$3 }
	CALL $240($11)
	
.LABEL $label$3
	$3 = ($0 + [568])
	$9 = ($0 + [576])
	$11 = CALL db_lowerbound_i64(*($0 + [568]), *($9), (int_64)4730282973792829440, (int_64)0)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$8 }
	CALL $92($3, $11)
	$11 = CALL db_lowerbound_i64(*($3), *($9), (int_64)4730282973792829440, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$7 }
	$11 = CALL $92($3, $11)
	$6 = (($12 + [32]) + [24])
	$5 = (($12 + [32]) + [16])
	$4 = (($12 + [32]) | [8])
	$8 = ($0 + [568])
	$9 = ($0 + [584])
	
.LOOP $label$9:
	$7 = *($0)
	CALL eosio_assert(((int_32)*($11 + [32]) == (int_32)$3), [768])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$4()), [816])
	*($11 + [8]) = (int_64)0
	*($11 + [16]) = (int_64)0
	*($11 + [24]) = (int_64)0
	$1 = *($11)
	CALL eosio_assert([1], [992])
	CALL eosio_assert([1], [1056])
	CALL memcpy(($12 + [32]), $11, [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy($4, ($11 + [8]), [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy($5, ($11 + [16]), [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy($6, ($11 + [24]), [8])
	CALL db_update_i64(*($11 + [36]), $7, ($12 + [32]), [32])
	if ( (uint_64)($1 <= *($9)) ){ goto $label$10 }
	*($9) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	CALL eosio_assert([1], [208])
	$11 = CALL db_next_i64(*(($11 + [36])), ($12 + [32]))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$7 }
	$11 = CALL $92($3, $11)
	goto $label$9 
	
.LABEL $label$8
	$7 = *($0)
	CALL eosio_assert(((int_64)*($3) == (int_64)CALL $fimport$4()), [1888])
	*(($11 = CALL $238([48])) + [32]) = $3
	*($11 + [8]) = (int_64)0
	*($11) = (int_64)1
	*($11 + [16]) = (int_64)0
	*($11 + [24]) = (int_64)0
	CALL eosio_assert([1], [1056])
	CALL memcpy(($12 + [32]), $11, [8])
	CALL eosio_assert([1], [1056])
	$6 = (($12 + [32]) | [8])
	CALL memcpy($6, ($11 + [8]), [8])
	CALL eosio_assert([1], [1056])
	$5 = (($12 + [32]) + [16])
	CALL memcpy($5, ($11 + [16]), [8])
	CALL eosio_assert([1], [1056])
	$4 = (($12 + [32]) + [24])
	CALL memcpy($4, ($11 + [24]), [8])
	$1 = *($11)
	$8 = CALL db_store_i64(*($9), (int_64)4730282973792829440, $7, $1, ($12 + [32]), [32])
	*($11 + [36]) = $8
	$9 = ($0 + [584])
	if ( (uint_64)($1 <= *($9)) ){ goto $label$11 }
	*($9) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*($12 + [80]) = $11
	$1 = *($11)
	*($12 + [32]) = $1
	*($12) = $8
	$10 = ($0 + [596])
	$9 = *($10)
	if ( ((uint_32)$9 >= (uint_32)*(($0 + [600]))) ){ goto $label$13 }
	*($9 + [8]) = $1
	*($9 + [16]) = $8
	*($12 + [80]) = [0]
	*($9) = $11
	*($10) = ($9 + [24])
	goto $label$12 
	
.LABEL $label$13
	CALL $110(($0 + [592]), ($12 + [80]), ($12 + [32]), $12)
	
.LABEL $label$12
	$11 = *($12 + [80])
	*($12 + [80]) = [0]
	if ( ($11 == 0) ){ goto $label$14 }
	CALL $240($11)
	
.LABEL $label$14
	$7 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [568])) == (int_64)CALL $fimport$4()), [1888])
	*(($11 = CALL $238([48])) + [32]) = $3
	*($11 + [8]) = (int_64)0
	*($11) = (int_64)2
	*($11 + [16]) = (int_64)0
	*($11 + [24]) = (int_64)0
	CALL eosio_assert([1], [1056])
	CALL memcpy(($12 + [32]), $11, [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy($6, ($11 + [8]), [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy($5, ($11 + [16]), [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy($4, ($11 + [24]), [8])
	$1 = *($11)
	$8 = CALL db_store_i64(*(($0 + [576])), (int_64)4730282973792829440, $7, $1, ($12 + [32]), [32])
	*($11 + [36]) = $8
	$9 = ($0 + [584])
	if ( (uint_64)($1 <= *($9)) ){ goto $label$15 }
	*($9) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	*($12 + [80]) = $11
	$1 = *($11)
	*($12 + [32]) = $1
	*($12) = $8
	$10 = ($0 + [596])
	$9 = *($10)
	if ( ((uint_32)$9 >= (uint_32)*(($0 + [600]))) ){ goto $label$17 }
	*($9 + [8]) = $1
	*($9 + [16]) = $8
	*($12 + [80]) = [0]
	*($9) = $11
	*($10) = ($9 + [24])
	goto $label$16 
	
.LABEL $label$17
	CALL $110(($0 + [592]), ($12 + [80]), ($12 + [32]), $12)
	
.LABEL $label$16
	$11 = *($12 + [80])
	*($12 + [80]) = [0]
	if ( ($11 == 0) ){ goto $label$18 }
	CALL $240($11)
	
.LABEL $label$18
	$7 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [568])) == (int_64)CALL $fimport$4()), [1888])
	*(($11 = CALL $238([48])) + [32]) = $3
	*($11 + [8]) = (int_64)0
	*($11) = (int_64)3
	*($11 + [16]) = (int_64)0
	*($11 + [24]) = (int_64)0
	CALL eosio_assert([1], [1056])
	CALL memcpy(($12 + [32]), $11, [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy($6, ($11 + [8]), [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy($5, ($11 + [16]), [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy($4, ($11 + [24]), [8])
	$1 = *($11)
	$9 = CALL db_store_i64(*(($0 + [576])), (int_64)4730282973792829440, $7, $1, ($12 + [32]), [32])
	*($11 + [36]) = $9
	$3 = ($0 + [584])
	if ( (uint_64)($1 <= *($3)) ){ goto $label$19 }
	*($3) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$19
	*($12 + [80]) = $11
	$1 = *($11)
	*($12 + [32]) = $1
	*($12) = $9
	$6 = ($0 + [596])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($0 + [600]))) ){ goto $label$21 }
	*($3 + [8]) = $1
	*($3 + [16]) = $9
	*($12 + [80]) = [0]
	*($3) = $11
	*($6) = ($3 + [24])
	goto $label$20 
	
.LABEL $label$21
	CALL $110(($0 + [592]), ($12 + [80]), ($12 + [32]), $12)
	
.LABEL $label$20
	$11 = *($12 + [80])
	*($12 + [80]) = [0]
	if ( ($11 == 0) ){ goto $label$7 }
	CALL $240($11)
	
.LABEL $label$7
	CALL eosio_assert([1], [512])
	$1 = (int_64)5459781
	$11 = [0]
	
.LOOP $label$24:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$23 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$25 }
	
.LOOP $label$26:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$23 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$26 }
	
.LABEL $label$25
	$3 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$23
	$3 = [0]
	
.LABEL $label$22
	CALL eosio_assert($3, [480])
	$3 = ($0 + [248])
	$9 = ($0 + [256])
	$11 = CALL db_lowerbound_i64(*($0 + [248]), *($9), (int_64)-4992121834821386240, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$28 }
	CALL $197($3, $11)
	goto $label$27 
	
.LABEL $label$28
	$7 = *($0)
	CALL eosio_assert(((int_64)*($3) == (int_64)CALL $fimport$4()), [1888])
	$11 = CALL $238([56])
	$6 = CALL $141($11)
	*($11 + [40]) = $3
	*($11 + [8]) = (int_64)0
	*($11 + [16]) = (int_64)1397703940
	*($11 + [24]) = (int_64)0
	*($11 + [32]) = (int_64)1397703940
	*($11) = *($0)
	*($12 + [88]) = (($12 + [32]) + [40])
	*($12 + [84]) = ($12 + [32])
	*($12 + [80]) = ($12 + [32])
	CALL $140(($12 + [80]), $6)
	$1 = *($11)
	$9 = CALL db_store_i64(*($9), (int_64)-4992121834821386240, $7, $1, ($12 + [32]), [40])
	*($11 + [44]) = $9
	$3 = ($0 + [264])
	if ( (uint_64)($1 <= *($3)) ){ goto $label$29 }
	*($3) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$29
	*($12 + [80]) = $11
	$1 = *($11)
	*($12 + [32]) = $1
	*($12) = $9
	$6 = ($0 + [276])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($0 + [280]))) ){ goto $label$31 }
	*($3 + [8]) = $1
	*($3 + [16]) = $9
	*($12 + [80]) = [0]
	*($3) = $11
	*($6) = ($3 + [24])
	goto $label$30 
	
.LABEL $label$31
	CALL $202(($0 + [272]), ($12 + [80]), ($12 + [32]), $12)
	
.LABEL $label$30
	$11 = *($12 + [80])
	*($12 + [80]) = [0]
	if ( ($11 == 0) ){ goto $label$27 }
	CALL $240($11)
	
.LABEL $label$27
	$3 = ($0 + [288])
	$9 = ($0 + [296])
	$11 = CALL db_lowerbound_i64(*($0 + [288]), *($9), (int_64)-4992121823200788480, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$33 }
	CALL $144($3, $11)
	goto $label$32 
	
.LABEL $label$33
	$7 = *($0)
	CALL eosio_assert(((int_64)*($3) == (int_64)CALL $fimport$4()), [1888])
	$11 = CALL $238([56])
	$6 = CALL $141($11)
	*($11 + [40]) = $3
	*($11 + [8]) = (int_64)0
	*($11 + [16]) = (int_64)1397703940
	*($11 + [24]) = (int_64)0
	*($11 + [32]) = (int_64)1397703940
	*($11) = *($0)
	*($12 + [88]) = (($12 + [32]) + [40])
	*($12 + [84]) = ($12 + [32])
	*($12 + [80]) = ($12 + [32])
	CALL $140(($12 + [80]), $6)
	$1 = *($11)
	$9 = CALL db_store_i64(*($9), (int_64)-4992121823200788480, $7, $1, ($12 + [32]), [40])
	*($11 + [44]) = $9
	$3 = ($0 + [304])
	if ( (uint_64)($1 <= *($3)) ){ goto $label$34 }
	*($3) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$34
	*($12 + [80]) = $11
	$1 = *($11)
	*($12 + [32]) = $1
	*($12) = $9
	$6 = ($0 + [316])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($0 + [320]))) ){ goto $label$36 }
	*($3 + [8]) = $1
	*($3 + [16]) = $9
	*($12 + [80]) = [0]
	*($3) = $11
	*($6) = ($3 + [24])
	goto $label$35 
	
.LABEL $label$36
	CALL $145(($0 + [312]), ($12 + [80]), ($12 + [32]), $12)
	
.LABEL $label$35
	$11 = *($12 + [80])
	*($12 + [80]) = [0]
	if ( ($11 == 0) ){ goto $label$32 }
	CALL $240($11)
	
.LABEL $label$32
	$3 = ($0 + [208])
	$9 = ($0 + [216])
	$11 = CALL db_lowerbound_i64(*($0 + [208]), *($9), (int_64)4406679876405297152, (int_64)0)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$38 }
	$11 = CALL $139($3, $11)
	$7 = *($0)
	CALL eosio_assert(((int_32)*($11 + [40]) == (int_32)$3), [768])
	CALL eosio_assert(((int_64)*($3) == (int_64)CALL $fimport$4()), [816])
	*($11 + [8]) = (int_64)0
	*(($11 + [16])) = (int_64)1397703940
	*($11 + [24]) = (int_64)0
	*(($11 + [32])) = (int_64)1397703940
	$1 = *($11)
	CALL eosio_assert([1], [992])
	*($12 + [88]) = (($12 + [32]) + [40])
	*($12 + [84]) = ($12 + [32])
	*($12 + [80]) = ($12 + [32])
	CALL $140(($12 + [80]), $11)
	CALL db_update_i64(*($11 + [44]), $7, ($12 + [32]), [40])
	$11 = ($0 + [224])
	if ( (uint_64)($1 <= *($11)) ){ goto $label$37 }
	*($11) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	goto $label$37 
	
.LABEL $label$38
	$7 = *($0)
	CALL eosio_assert(((int_64)*($3) == (int_64)CALL $fimport$4()), [1888])
	$11 = CALL $238([56])
	$6 = CALL $141($11)
	*($11 + [40]) = $3
	*($11 + [8]) = (int_64)0
	*($11 + [16]) = (int_64)1397703940
	*($11 + [24]) = (int_64)0
	*($11 + [32]) = (int_64)1397703940
	*($11) = *($0)
	*($12 + [88]) = (($12 + [32]) + [40])
	*($12 + [84]) = ($12 + [32])
	*($12 + [80]) = ($12 + [32])
	CALL $140(($12 + [80]), $6)
	$1 = *($11)
	$9 = CALL db_store_i64(*($9), (int_64)4406679876405297152, $7, $1, ($12 + [32]), [40])
	*($11 + [44]) = $9
	$3 = ($0 + [224])
	if ( (uint_64)($1 <= *($3)) ){ goto $label$39 }
	*($3) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$39
	*($12 + [80]) = $11
	$1 = *($11)
	*($12 + [32]) = $1
	*($12) = $9
	$6 = ($0 + [236])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($0 + [240]))) ){ goto $label$41 }
	*($3 + [8]) = $1
	*($3 + [16]) = $9
	*($12 + [80]) = [0]
	*($3) = $11
	*($6) = ($3 + [24])
	goto $label$40 
	
.LABEL $label$41
	CALL $143(($0 + [232]), ($12 + [80]), ($12 + [32]), $12)
	
.LABEL $label$40
	$11 = *($12 + [80])
	*($12 + [80]) = [0]
	if ( ($11 == 0) ){ goto $label$37 }
	CALL $240($11)
	
.LABEL $label$37
	$11 = CALL db_lowerbound_i64(*($0 + [328]), *(($0 + [336])), (int_64)6606653791088803840, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$42 }
	$3 = ($0 + [328])
	$11 = CALL $168($3, $11)
	CALL eosio_assert([1], [160])
	CALL eosio_assert([1], [208])
	$9 = CALL db_next_i64(*($11 + [44]), ($12 + [32]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$43 }
	CALL $168($3, $9)
	
.LABEL $label$43
	CALL $214($3, $11)
	
.LABEL $label$42
	$11 = CALL db_lowerbound_i64(*($0 + [368]), *(($0 + [376])), (int_64)-4426675985900982272, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$44 }
	$3 = ($0 + [368])
	$11 = CALL $162($3, $11)
	CALL eosio_assert([1], [160])
	CALL eosio_assert([1], [208])
	$9 = CALL db_next_i64(*($11 + [44]), ($12 + [32]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$45 }
	CALL $162($3, $9)
	
.LABEL $label$45
	CALL $215($3, $11)
	
.LABEL $label$44
	$11 = CALL db_lowerbound_i64(*($0 + [608]), *(($0 + [616])), (int_64)6787607164394319872, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$46 }
	$3 = ($0 + [608])
	$11 = CALL $170($3, $11)
	CALL eosio_assert([1], [160])
	CALL eosio_assert([1], [208])
	$9 = CALL db_next_i64(*($11 + [44]), ($12 + [32]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$47 }
	CALL $170($3, $9)
	
.LABEL $label$47
	CALL $216($3, $11)
	
.LABEL $label$46
	$11 = CALL db_lowerbound_i64(*($0 + [648]), *(($0 + [656])), (int_64)-4264226321172877312, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$48 }
	$3 = ($0 + [648])
	$11 = CALL $164($3, $11)
	CALL eosio_assert([1], [160])
	CALL eosio_assert([1], [208])
	$9 = CALL db_next_i64(*($11 + [44]), ($12 + [32]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$49 }
	CALL $164($3, $9)
	
.LABEL $label$49
	CALL $217($3, $11)
	
.LABEL $label$48
	$11 = CALL db_lowerbound_i64(*($0 + [688]), *(($0 + [696])), (int_64)6787721896711746944, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$50 }
	$3 = ($0 + [688])
	$11 = CALL $172($3, $11)
	CALL eosio_assert([1], [160])
	CALL eosio_assert([1], [208])
	$9 = CALL db_next_i64(*($11 + [44]), ($12 + [32]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$51 }
	CALL $172($3, $9)
	
.LABEL $label$51
	CALL $218($3, $11)
	
.LABEL $label$50
	$11 = CALL db_lowerbound_i64(*($0 + [728]), *(($0 + [736])), (int_64)-4264111588855450240, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$52 }
	$3 = ($0 + [728])
	$11 = CALL $166($3, $11)
	CALL eosio_assert([1], [160])
	CALL eosio_assert([1], [208])
	$9 = CALL db_next_i64(*($11 + [44]), ($12 + [32]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$53 }
	CALL $166($3, $9)
	
.LABEL $label$53
	CALL $219($3, $11)
	
.LABEL $label$52
	$11 = CALL db_lowerbound_i64(*(($0 + [8])), *(($0 + [16])), (int_64)4730274944552796160, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$54 }
	$11 = CALL $66($2, $11)
	CALL $220($2, $11, *($0))
	CALL eosio_assert([1], [208])
	$11 = CALL db_next_i64(*($11 + [148]), ($12 + [32]))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$54 }
	
.LOOP $label$55:
	$11 = CALL $66($2, $11)
	CALL $220($2, $11, *($0))
	CALL eosio_assert([1], [208])
	$11 = CALL db_next_i64(*($11 + [148]), ($12 + [32]))
	if ( ((int_32)$11 >= (int_32)[0]) ){ goto $label$55 }
	
.LABEL $label$54
	*([0] + [4]) = ($12 + [96])
}

void .FUNC $184 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [324]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	$4 = *($1)
	$5 = *($3)
	$8 = ($1 + [312])
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$1 }
	CALL $178($8, *($5), *($5 + [4]))
	
.LABEL $label$1
	$5 = *($3 + [4])
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)*(($1 + [80]))), [880])
	$7 = ((int_64)*($1 + [72]) + (int_64)*($5))
	*($1 + [72]) = $7
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($1 + [72]) < (int_64)4611686018427387904), [960])
	$3 = *($3 + [4])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [96]))), [880])
	$7 = ((int_64)*($1 + [88]) + (int_64)*($3))
	*($1 + [88]) = $7
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($1 + [88]) < (int_64)4611686018427387904), [960])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [992])
	$8 = *($8)
	$5 = *(($1 + [316]))
	$6 = ($5 - $8)
	$7 = (CASTING uint_64)(uint_32 int_32($6 >> [3]))
	$3 = [308]
	
.LOOP $label$2:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$3 }
	$3 = (($6 & [-8]) + $3)
	
.LABEL $label$3
	if ( ($3 <= [513]) ){ goto $label$5 }
	$8 = CALL malloc($3)
	goto $label$4 
	
.LABEL $label$5
	$8 = ($10 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$4
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = ($8 + $3)
	CALL $102($9, $1)
	CALL db_update_i64(*($1 + [328]), $2, $8, $3)
	if ( ($3 <= [513]) ){ goto $label$6 }
	CALL free($8)
	
.LABEL $label$6
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $187 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [448])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [448])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [448])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$1 = (*($3 + [4]) + [8])
	*($3 + [4]) = $1
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $1) > (uint_32)[7]), [448])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
}

void .FUNC $218 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [240])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [288])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [352])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $240($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $240($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [44]))
}

void .FUNC $186 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [324]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	$4 = *($1)
	$5 = *($3)
	$8 = ($1 + [312])
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$1 }
	CALL $178($8, *($5), *($5 + [4]))
	
.LABEL $label$1
	$5 = *($3 + [4])
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)*(($1 + [144]))), [880])
	$7 = ((int_64)*($1 + [136]) + (int_64)*($5))
	*($1 + [136]) = $7
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($1 + [136]) < (int_64)4611686018427387904), [960])
	$3 = *($3 + [8])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [224]))), [880])
	$7 = ((int_64)*($1 + [216]) + (int_64)*($3))
	*($1 + [216]) = $7
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($1 + [216]) < (int_64)4611686018427387904), [960])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [992])
	$8 = *($8)
	$5 = *(($1 + [316]))
	$6 = ($5 - $8)
	$7 = (CASTING uint_64)(uint_32 int_32($6 >> [3]))
	$3 = [308]
	
.LOOP $label$2:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$3 }
	$3 = (($6 & [-8]) + $3)
	
.LABEL $label$3
	if ( ($3 <= [513]) ){ goto $label$5 }
	$8 = CALL malloc($3)
	goto $label$4 
	
.LABEL $label$5
	$8 = ($10 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$4
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = ($8 + $3)
	CALL $102($9, $1)
	CALL db_update_i64(*($1 + [328]), $2, $8, $3)
	if ( ($3 <= [513]) ){ goto $label$6 }
	CALL free($8)
	
.LABEL $label$6
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $180 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $238(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $244($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $240($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $240($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $116 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [8]) = [0]
	$4 = *($3 + [8])
	*($7 + [16]) = $4
	if ( ((uint_32)$4 > (uint_32)[8]) ){ goto $label$2 }
	$6 = ($7 + [8])
	$5 = $3
	goto $label$1 
	
.LABEL $label$2
	$6 = CALL $239($4)
	*($7 + [8]) = $6
	$5 = *($3)
	
.LABEL $label$1
	CALL memcpy($6, $5, $4)
	*($7 + [20]) = *($3 + [12])
	CALL $119($0, ($7 + [8]), [0])
	if ( (*(($7 + [16])) <= [9]) ){ goto $label$3 }
	$3 = *($7 + [8])
	if ( ($3 == 0) ){ goto $label$3 }
	CALL $241($3)
	
.LABEL $label$3
	*($0 + [16]) = $1
	*($0 + [24]) = $1
	*($0 + [28]) = $2
	*($0 + [32]) = [0]
	*(($0 + [20])) = $1
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$4 }
	$3 = *($0)
	if ( ($3 == 0) ){ goto $label$8 }
	CALL void ($7 + [24])((int_32 ($0 + [4])), (int_32 $1), (int_32 $2), (int_32 *(($3 & [-2]) + [4])))
	$1 = *($7 + [24])
	if ( ((int_32)$1 == (int_32)*($0 + [28])) ){ goto $label$7 }
	$2 = *($7 + [28])
	goto $label$5 
	
.LABEL $label$8
	*($7 + [28]) = $2
	*($7 + [24]) = $2
	$1 = $2
	goto $label$6 
	
.LABEL $label$7
	$2 = *($7 + [28])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$5 }
	
.LABEL $label$6
	if ( ((int_32)*(($0 + [20])) != (int_32)$2) ){ goto $label$5 }
	*(($0 + [32])) = [1]
	
.LABEL $label$5
	*(($0 + [20])) = $1
	$1 = ($0 + [24])
	*(($0 + [16])) = *($1)
	*($1) = $2
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [32])
	return $0
}

int_32 .FUNC $117 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [16])
	*([0] + [4]) = $16
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = ($1 + [4])
	$3 = ($16 | [1])
	$5 = ($1 + [20])
	$6 = ($1 + [16])
	$7 = ($16 + [8])
	$8 = ($1 + [28])
	$9 = ($1 + [32])
	$10 = ($1 + [24])
	
.LOOP $label$1:
	$13 = [1]
	if ( (*($1) == 0) ){ goto $label$2 }
	$13 = ((int_32)*($9) != (int_32)[0])
	
.LABEL $label$2
	if ( (*($2) == 0) ){ goto $label$10 }
	$15 = ((int_32)*(($2 + [32])) != (int_32)[0])
	if ( ((int_32)($13 | $15) == (int_32)[1]) ){ goto $label$9 }
	$15 = *(($2 + [16]))
	$13 = *($6)
	$12 = *($5)
	if ( ((int_32)($12 - $13) != (int_32)(*(($2 + [20])) - $15)) ){ goto $label$7 }
	if ( ((int_32)$13 == (int_32)$12) ){ goto $label$11 }
	$11 = $13
	
.LOOP $label$12:
	if ( ((int_32)*($11) != (int_32)*($15)) ){ goto $label$7 }
	$15 = ($15 + [1])
	$11 = ($11 + [1])
	if ( ((int_32)$12 != (int_32)$11) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ((int_32)*($10) != (int_32)*(($2 + [24]))) ){ goto $label$7 }
	if ( ((int_32)*($8) != (int_32)*(($2 + [28]))) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$10
	$15 = [1]
	
.LABEL $label$9
	if ( ((int_32)$13 == (int_32)$15) ){ goto $label$6 }
	
.LABEL $label$8
	$12 = *($5)
	$13 = *($6)
	
.LABEL $label$7
	*($7) = [0]
	*($16) = (int_64)0
	$11 = ($12 - $13)
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$11 > (uint_32)[10]) ){ goto $label$15 }
	*($16) = ($11 << [1])
	$14 = $3
	if ( ((int_32)$13 != (int_32)$12) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$15 = (($11 + [16]) & [-16])
	$14 = CALL $238($15)
	*($7) = $14
	*($16) = ($15 | [1])
	*($16 + [4]) = $11
	if ( ((int_32)$13 == (int_32)$12) ){ goto $label$13 }
	
.LABEL $label$14
	$15 = $14
	
.LOOP $label$16:
	*($15) = *($13)
	$15 = ($15 + [1])
	$13 = ($13 + [1])
	if ( ((int_32)$12 != (int_32)$13) ){ goto $label$16 }
	$14 = ($14 + $11)
	
.LABEL $label$13
	*($14) = [0]
	$13 = ($0 + [4])
	$15 = *($13)
	if ( ((uint_32)$15 >= (uint_32)*(($0 + [8]))) ){ goto $label$18 }
	*($15) = *($16)
	*(($15 + [8])) = *($7)
	*($7) = [0]
	*($16) = [0]
	*($16 + [4]) = [0]
	*($13) = (*($13) + [12])
	goto $label$17 
	
.LABEL $label$18
	CALL $118($0, $16)
	if ( ((*($16) & [1]) == 0) ){ goto $label$17 }
	CALL $240(*($7))
	
.LABEL $label$17
	$13 = *($8)
	$15 = *($1)
	if ( ($15 == 0) ){ goto $label$20 }
	CALL void $16((int_32 $4), (int_32 *($10)), (int_32 $13), (int_32 *(($15 & [-2]) + [4])))
	$15 = *($16)
	if ( ((int_32)$15 == (int_32)*($8)) ){ goto $label$19 }
	$13 = *($16 + [4])
	goto $label$3 
	
.LABEL $label$20
	*($16 + [4]) = $13
	*($16) = $13
	$15 = $13
	goto $label$4 
	
.LABEL $label$19
	$13 = *($16 + [4])
	if ( ((int_32)$13 != (int_32)$15) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$6
	*([0] + [4]) = ($16 + [16])
	return $0
	
.LABEL $label$5
	CALL $242($16)
	
.LABEL $label$4
	if ( ((int_32)*($5) != (int_32)$15) ){ goto $label$3 }
	*($9) = [1]
	
.LABEL $label$3
	*($5) = $15
	*($6) = *($10)
	*($10) = $13
	goto $label$1 
	return (unreachable)
}

int_32 .FUNC $114 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	*($6) = [0]
	$4 = *($2 + [8])
	*($6 + [8]) = $4
	if ( ((uint_32)$4 > (uint_32)[8]) ){ goto $label$2 }
	$5 = $6
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL $239($4)
	*($6) = $5
	$2 = *($2)
	
.LABEL $label$1
	CALL memcpy($5, $2, $4)
	*($6 + [32]) = [0]
	$2 = *(($6 + [8]))
	*($6 + [40]) = $2
	if ( ((uint_32)$2 > (uint_32)[8]) ){ goto $label$4 }
	$4 = $6
	$5 = ($6 + [32])
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL $239($2)
	*($6 + [32]) = $5
	$4 = *($6)
	
.LABEL $label$3
	CALL memcpy($5, $4, $2)
	*($6 + [16]) = [0]
	$2 = *((($6 + [32]) + [8]))
	*($6 + [24]) = $2
	if ( ((uint_32)$2 > (uint_32)[8]) ){ goto $label$6 }
	$4 = ($6 + [16])
	$5 = ($6 + [32])
	goto $label$5 
	
.LABEL $label$6
	$4 = CALL $239($2)
	*($6 + [16]) = $4
	$2 = *((($6 + [16]) + [8]))
	$5 = *($6 + [32])
	
.LABEL $label$5
	CALL memcpy($4, $5, $2)
	*($6 + [28]) = $3
	if ( (*((($6 + [32]) + [8])) <= [9]) ){ goto $label$7 }
	$2 = *($6 + [32])
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $241($2)
	
.LABEL $label$7
	$2 = CALL $115($0, $1, ($6 + [16]))
	if ( (*((($6 + [16]) + [8])) <= [9]) ){ goto $label$8 }
	$4 = *($6 + [16])
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $241($4)
	
.LABEL $label$8
	if ( (*(($6 + [8])) <= [9]) ){ goto $label$9 }
	$4 = *($6)
	if ( ($4 == 0) ){ goto $label$9 }
	CALL $241($4)
	
.LABEL $label$9
	*([0] + [4]) = ($6 + [48])
	return $2
}

int_32 .FUNC $115 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [272])
	*([0] + [4]) = $7
	$5 = *($1 + [8])
	$6 = *($1 + [4])
	$4 = *($1)
	*($7 + [176]) = [0]
	$3 = *($2 + [8])
	*($7 + [184]) = $3
	$1 = ($4 & [1])
	$5 = ( $5 ? ($1 + [1]) : $1 )
	$1 = ($5 + ( $6 ? uint_32($4 >> [1]) : $1 ))
	if ( ((uint_32)$3 > (uint_32)[8]) ){ goto $label$2 }
	$4 = ($7 + [176])
	$6 = $2
	goto $label$1 
	
.LABEL $label$2
	$4 = CALL $239($3)
	*($7 + [176]) = $4
	$6 = *($2)
	
.LABEL $label$1
	CALL memcpy($4, $6, $3)
	*($7 + [188]) = *($2 + [12])
	$1 = CALL $116(($7 + [192]), $5, $1, ($7 + [176]))
	$2 = [0]
	*($7 + [232]) = [0]
	$3 = *($1)
	if ( ($3 == 0) ){ goto $label$3 }
	*($7 + [232]) = $3
	if ( ($3 & [1]) ){ goto $label$4 }
	CALL void ($1 + [4])((int_32 (($7 + [232]) | [4])), (int_32 [0]), (int_32 *(($3 & [-2]))))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	*((($7 + [232]) + [12])) = *(($1 + [12]))
	*($7 + [236 align=4]) = *($1 + [4 align=4])
	$2 = $3
	
.LABEL $label$3
	*($7 + [248]) = *($1 + [16 align=4])
	*($7 + [256]) = *($1 + [24])
	*($7 + [260]) = *($1 + [28])
	*($7 + [264]) = *($1 + [32])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( ($2 & [1]) ){ goto $label$6 }
	$2 = *(($2 & [-2]))
	if ( ($2 == 0) ){ goto $label$6 }
	$3 = ($1 + [4])
	CALL void $3((int_32 $3), (int_32 [2]), (int_32 $2))
	
.LABEL $label$6
	*($1) = [0]
	
.LABEL $label$5
	if ( (*(($7 + [184])) <= [9]) ){ goto $label$7 }
	$1 = *($7 + [176])
	if ( ($1 == 0) ){ goto $label$7 }
	CALL $241($1)
	
.LABEL $label$7
	*(($7 + [116])) = [0]
	*($7 + [96]) = [0]
	*($7 + [124]) = [0]
	*($7 + [120]) = [0]
	*($7 + [112]) = [0]
	*($7 + [128]) = [1]
	*($7 + [136]) = [0]
	*($7 + [164]) = [0]
	*($7 + [160]) = [0]
	*($7 + [168]) = [1]
	*($7 + [152]) = *($7 + [112])
	*($7 + [40]) = [0]
	$1 = [0]
	$2 = *($7 + [232])
	if ( ($2 == 0) ){ goto $label$8 }
	*($7 + [40]) = $2
	if ( ($2 & [1]) ){ goto $label$9 }
	CALL void (($7 + [232]) | [4])((int_32 (($7 + [40]) | [4])), (int_32 [0]), (int_32 *(($2 & [-2]))))
	$1 = *($7 + [136])
	goto $label$8 
	
.LABEL $label$9
	*((($7 + [40]) + [12])) = *((($7 + [232]) + [12]))
	*($7 + [44 align=4]) = *($7 + [236 align=4])
	$1 = [0]
	
.LABEL $label$8
	*($7 + [56]) = *((($7 + [232]) + [16]))
	*($7 + [64]) = *((($7 + [232]) + [24]))
	*($7 + [68]) = *((($7 + [232]) + [28]))
	*($7 + [72]) = *((($7 + [232]) + [32]))
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	*($7) = $1
	if ( ($1 & [1]) ){ goto $label$11 }
	CALL void (($7 + [136]) | [4])((int_32 ($7 | [4])), (int_32 [0]), (int_32 *(($1 & [-2]))))
	goto $label$10 
	
.LABEL $label$11
	*(($7 + [12])) = *((($7 + [136]) + [12]))
	*($7 + [4 align=4]) = *($7 + [140 align=4])
	
.LABEL $label$10
	*($7 + [16]) = *((($7 + [136]) + [16]))
	*($7 + [24]) = *((($7 + [136]) + [24]))
	*($7 + [28]) = *((($7 + [136]) + [28]))
	*($7 + [32]) = *((($7 + [136]) + [32]))
	$3 = CALL $117(($7 + [80]), ($7 + [40]), $7)
	$1 = *($7)
	if ( ($1 == 0) ){ goto $label$12 }
	if ( ($1 & [1]) ){ goto $label$13 }
	$1 = *(($1 & [-2]))
	if ( ($1 == 0) ){ goto $label$13 }
	$2 = ($7 | [4])
	CALL void $2((int_32 $2), (int_32 [2]), (int_32 $1))
	
.LABEL $label$13
	*($7) = [0]
	
.LABEL $label$12
	$1 = *($7 + [40])
	if ( ($1 == 0) ){ goto $label$14 }
	if ( ($1 & [1]) ){ goto $label$15 }
	$1 = *(($1 & [-2]))
	if ( ($1 == 0) ){ goto $label$15 }
	$2 = (($7 + [40]) | [4])
	CALL void $2((int_32 $2), (int_32 [2]), (int_32 $1))
	
.LABEL $label$15
	*($7 + [40]) = [0]
	
.LABEL $label$14
	$4 = *($0)
	*($0) = *($3)
	*($3) = $4
	$1 = *($0 + [4])
	*($0 + [4]) = *($3 + [4])
	*($3 + [4]) = $1
	$2 = *($0 + [8])
	*($0 + [8]) = *($3 + [8])
	*($3 + [8]) = $2
	if ( ($4 == 0) ){ goto $label$16 }
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$18 }
	$2 = ([0] - $4)
	$1 = ($1 + [-12])
	
.LOOP $label$19:
	if ( ((*($1) & [1]) == 0) ){ goto $label$20 }
	CALL $240(*(($1 + [8])))
	
.LABEL $label$20
	$1 = ($1 + [-12])
	if ( ((int_32)($1 + $2) != (int_32)[-12]) ){ goto $label$19 }
	$1 = *($3)
	goto $label$17 
	
.LABEL $label$18
	$1 = $4
	
.LABEL $label$17
	*(($3 + [4])) = $4
	CALL $240($1)
	
.LABEL $label$16
	$1 = *($7 + [136])
	if ( ($1 == 0) ){ goto $label$21 }
	if ( ($1 & [1]) ){ goto $label$22 }
	$1 = *(($1 & [-2]))
	if ( ($1 == 0) ){ goto $label$22 }
	$2 = (($7 + [136]) | [4])
	CALL void $2((int_32 $2), (int_32 [2]), (int_32 $1))
	
.LABEL $label$22
	*($7 + [136]) = [0]
	
.LABEL $label$21
	$1 = *($7 + [232])
	if ( ($1 == 0) ){ goto $label$23 }
	if ( ($1 & [1]) ){ goto $label$24 }
	$1 = *(($1 & [-2]))
	if ( ($1 == 0) ){ goto $label$24 }
	$2 = (($7 + [232]) | [4])
	CALL void $2((int_32 $2), (int_32 [2]), (int_32 $1))
	
.LABEL $label$24
	*($7 + [232]) = [0]
	
.LABEL $label$23
	*([0] + [4]) = ($7 + [272])
	return $0
}

void .FUNC $112 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	$7 = $8
	*([0] + [4]) = $8
	CALL eosio_assert(((int_32)*($1 + [144]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	$4 = *($1)
	$5 = *(*($3 + [4]))
	$6 = *(*($3) + [4])
	if ( ((int_64)*($6 + [24]) <= (int_64)((int_64)$5 + (int_64)*($6 + [32]))) ){ goto $label$2 }
	*($1 + [32]) = ((int_64)*($1 + [32]) + (int_64)$5)
	goto $label$1 
	
.LABEL $label$2
	*($1 + [32]) = *($1 + [24])
	
.LABEL $label$1
	*($1 + [72]) = (int_64))(*($1 + [72]) - *(*($3 + [8])))
	CALL eosio_assert([1], [992])
	$8 = $8
	$3 = ($8 + [-144])
	*([0] + [4]) = $3
	*($7 + [4]) = $3
	*($7) = $3
	*($7 + [8]) = ($8 + [-8])
	CALL $80($7, $1)
	CALL db_update_i64(*($1 + [148]), $2, $3, [136])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $113 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [16])
	$10 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [324]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	*($1 + [288]) = ((int_64)*($1 + [288]) + (int_64)*(*($3)))
	$4 = *($1)
	$3 = *($3 + [4])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [128]))), [880])
	$8 = ((int_64)*($1 + [120]) + (int_64)*($3))
	*($1 + [120]) = $8
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($1 + [120]) < (int_64)4611686018427387904), [960])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [992])
	$6 = *($1 + [312])
	$5 = *(($1 + [316]))
	$7 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 int_32($7 >> [3]))
	$3 = [308]
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$2 }
	$3 = (($7 & [-8]) + $3)
	
.LABEL $label$2
	if ( ($3 <= [513]) ){ goto $label$4 }
	$9 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$9 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$3
	*($10 + [4]) = $9
	*($10) = $9
	*($10 + [8]) = ($9 + $3)
	CALL $102($10, $1)
	CALL db_update_i64(*($1 + [328]), $2, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($9)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $110 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $238(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $244($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $240($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $240($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $111 (int_32 $0, int_32 $1, int_64 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	$7 = $8
	*([0] + [4]) = $8
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	*($1 + [8]) = (int_64)1
	*($1 + [80]) = (int_64)0
	$3 = *($1)
	CALL eosio_assert([1], [512])
	$4 = (int_64)5459781
	$5 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [480])
	CALL eosio_assert(((int_64)*(($1 + [56])) == (int_64)1397703940), [880])
	$4 = ((int_64)*($1 + [48]) + (int_64)500000)
	*($1 + [48]) = $4
	CALL eosio_assert(((int_64)$4 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($1 + [48]) < (int_64)4611686018427387904), [960])
	CALL eosio_assert(((int_64)$3 == (int_64)*($1)), [992])
	$6 = $8
	$5 = ($6 + [-96])
	*([0] + [4]) = $5
	*($7 + [4]) = $5
	*($7) = $5
	*($7 + [8]) = ($6 + [-8])
	CALL $62($7, $1)
	CALL db_update_i64(*($1 + [92]), $2, $5, [88])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [16])
}

int_32 .FUNC $237 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$6 = int_32(($1 - $0) >> [3])
	if ( ((uint_32)$6 > (uint_32)[5]) ){ goto $label$17 }
	$9 = [1]
	goto $label$1 
	
.LABEL $label$18
	$5 = *($0)
	$6 = ($1 + [-8])
	$7 = *($6)
	if ( ((uint_64)$7 >= (uint_64)$5) ){ goto $label$1 }
	*($0) = $7
	*($6) = $5
	goto $label$1 
	
.LABEL $label$17
	$5 = *($0 + [16])
	$3 = *($0)
	$7 = *($0 + [8])
	if ( ((uint_64)$7 >= (uint_64)$3) ){ goto $label$13 }
	if ( ((uint_64)$5 >= (uint_64)$7) ){ goto $label$10 }
	*($0) = $5
	*(($0 + [16])) = $3
	goto $label$9 
	
.LABEL $label$16
	$6 = ($1 + [-8])
	$7 = *($6)
	$3 = *($0)
	$5 = *($0 + [8])
	if ( ((uint_64)$5 >= (uint_64)$3) ){ goto $label$12 }
	if ( ((uint_64)$7 >= (uint_64)$5) ){ goto $label$2 }
	*($0) = $7
	*($6) = $3
	goto $label$1 
	
.LABEL $label$15
	CALL $236($0, ($0 + [8]), ($0 + [16]), ($0 + [24]), ($1 + [-8]), $2)
	goto $label$1 
	
.LABEL $label$14
	$6 = ($1 + [-8])
	$5 = *($0 + [16])
	$3 = *($0)
	$7 = *($0 + [8])
	if ( ((uint_64)$7 >= (uint_64)$3) ){ goto $label$11 }
	if ( ((uint_64)$5 >= (uint_64)$7) ){ goto $label$6 }
	*($0) = $5
	*(($0 + [16])) = $3
	goto $label$5 
	
.LABEL $label$13
	if ( ((uint_64)$5 >= (uint_64)$7) ){ goto $label$8 }
	*(($0 + [16])) = $7
	*(($9 = ($0 + [8]))) = $5
	if ( ((uint_64)$5 >= (uint_64)$3) ){ goto $label$7 }
	*($0) = $5
	*($9) = $3
	goto $label$7 
	
.LABEL $label$12
	if ( ((uint_64)$7 >= (uint_64)$5) ){ goto $label$1 }
	*(($2 = ($0 + [8]))) = $7
	*($6) = $5
	$5 = *($0)
	$7 = *($2)
	if ( ((uint_64)$7 >= (uint_64)$5) ){ goto $label$1 }
	*($0) = $7
	*($2) = $5
	goto $label$1 
	
.LABEL $label$11
	if ( ((uint_64)$5 >= (uint_64)$7) ){ goto $label$4 }
	*(($0 + [16])) = $7
	*(($2 = ($0 + [8]))) = $5
	if ( ((uint_64)$5 >= (uint_64)$3) ){ goto $label$3 }
	*($0) = $5
	*($2) = $3
	goto $label$3 
	
.LABEL $label$10
	*($0) = $7
	*(($9 = ($0 + [8]))) = $3
	if ( ((uint_64)$5 >= (uint_64)$3) ){ goto $label$8 }
	*(($0 + [16])) = $3
	*($9) = $5
	
.LABEL $label$9
	$7 = $3
	goto $label$7 
	
.LABEL $label$8
	$7 = $5
	
.LABEL $label$7
	$2 = ($0 + [24])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$20 }
	$8 = [0]
	$4 = [16]
	
.LOOP $label$21:
	$5 = *($2)
	if ( ((uint_64)$5 >= (uint_64)$7) ){ goto $label$22 }
	$9 = $4
	
.LOOP $label$26:
	*((($6 = ($0 + $9)) + [8])) = $7
	if ( ($9 == 0) ){ goto $label$25 }
	$9 = ($9 + [-8])
	$7 = *(($6 + [-8]))
	if ( (uint_64)($5 <= $7) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$25
	$9 = $0
	goto $label$23 
	
.LABEL $label$24
	$9 = (($0 + $9) + [8])
	
.LABEL $label$23
	*($9) = $5
	$8 = ($8 + [1])
	if ( ((int_32)$8 == (int_32)[8]) ){ goto $label$19 }
	
.LABEL $label$22
	$9 = ($2 + [8])
	if ( ((int_32)$9 == (int_32)$1) ){ goto $label$20 }
	$4 = ($4 + [8])
	$7 = *($2)
	$2 = $9
	goto $label$21 
	
.LABEL $label$20
	$9 = ([0] | [1])
	goto $label$1 
	
.LABEL $label$19
	$9 = (((int_32)($2 + [8]) == (int_32)$1) | [0])
	goto $label$1 
	
.LABEL $label$6
	*($0) = $7
	*(($2 = ($0 + [8]))) = $3
	if ( ((uint_64)$5 >= (uint_64)$3) ){ goto $label$4 }
	*(($0 + [16])) = $3
	*($2) = $5
	
.LABEL $label$5
	$7 = $3
	goto $label$3 
	
.LABEL $label$4
	$7 = $5
	
.LABEL $label$3
	$5 = *($6)
	if ( ((uint_64)$5 >= (uint_64)$7) ){ goto $label$1 }
	*(($2 = ($0 + [16]))) = $5
	*($6) = $7
	$6 = ($0 + [8])
	$5 = *($6)
	$7 = *($2)
	if ( ((uint_64)$7 >= (uint_64)$5) ){ goto $label$1 }
	*($2) = $5
	*($6) = $7
	$5 = *($0)
	if ( ((uint_64)$7 >= (uint_64)$5) ){ goto $label$1 }
	*($0) = $7
	*(($0 + [8])) = $5
	goto $label$1 
	
.LABEL $label$2
	*($0) = $5
	*(($0 = ($0 + [8]))) = $3
	$7 = *($6)
	if ( ((uint_64)$7 >= (uint_64)$3) ){ goto $label$1 }
	*($0) = $7
	*($6) = $3
	
.LABEL $label$1
	$6
	return ($9 & [1])
}

void .FUNC $118 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$7 = *($0 + [4])
	$8 = ((int_32)($7 - $4) / (int_32)[12])
	$6 = ($8 + [1])
	if ( ((uint_32)$6 >= (uint_32)[357913942]) ){ goto $label$2 }
	$5 = [357913941]
	$3 = ((int_32)(*($0 + [8]) - $4) / (int_32)[12])
	if ( ((uint_32)$3 > (uint_32)[178956969]) ){ goto $label$4 }
	$5 = ($3 << [1])
	$5 = ( $6 ? $5 : ($5 <= $6) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $238(((int_32)$5 * (int_32)[12]))
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $244($0)
	
.LABEL $label$1
	$2 = *($1)
	*($1) = (int_64)0
	*(($8 = ($6 + ((int_32)$8 * (int_32)[12])))) = $2
	$1 = ($1 + [8])
	$3 = *($1)
	*($1) = [0]
	*(($8 + [8])) = $3
	$5 = ($6 + ((int_32)$5 * (int_32)[12]))
	$6 = ($8 + [12])
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$6 }
	$1 = ([0] - $4)
	$7 = ($7 + [-12])
	
.LOOP $label$7:
	*(($8 + [-12])) = *($7)
	$4 = ($7 + [8])
	*(($8 + [-4])) = *($4)
	*($7) = [0]
	*(($7 + [4])) = [0]
	*($4) = [0]
	$8 = ($8 + [-12])
	$7 = ($7 + [-12])
	if ( ((int_32)($7 + $1) != (int_32)[-12]) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	$8 = ([0] - $4)
	$7 = ($7 + [-12])
	
.LOOP $label$9:
	if ( ((*($7) & [1]) == 0) ){ goto $label$10 }
	CALL $240(*(($7 + [8])))
	
.LABEL $label$10
	$7 = ($7 + [-12])
	if ( ((int_32)($7 + $8) != (int_32)[-12]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $240($4)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $119 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($6) = [0]
	$3 = *($1 + [8])
	*($6 + [8]) = $3
	if ( ((uint_32)$3 > (uint_32)[8]) ){ goto $label$2 }
	$5 = $6
	$4 = $1
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL $239($3)
	*($6) = $5
	$4 = *($1)
	
.LABEL $label$1
	CALL memcpy($5, $4, $3)
	*($6 + [12]) = *($1 + [12])
	*($0) = [0]
	*($6 + [16]) = [0]
	$1 = *(($6 + [8]))
	*($6 + [24]) = $1
	if ( ((uint_32)$1 > (uint_32)[8]) ){ goto $label$4 }
	$3 = $6
	$5 = ($6 + [16])
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL $239($1)
	*($6 + [16]) = $5
	$3 = *($6)
	
.LABEL $label$3
	CALL memcpy($5, $3, $1)
	*($6 + [28]) = *(($6 + [12]))
	CALL $120($0, ($6 + [16]))
	if ( (*((($6 + [16]) + [8])) <= [9]) ){ goto $label$5 }
	$1 = *($6 + [16])
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $241($1)
	
.LABEL $label$5
	if ( (*(($6 + [8])) <= [9]) ){ goto $label$6 }
	$1 = *($6)
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $241($1)
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [32])
	return $0
}

void .FUNC _ZN7campwar8addbonusEN5eosio5assetE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [64])
	*([0] + [4]) = $10
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [576]
	$7 = (int_64)0
	
.LOOP $label$1:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$2 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$2 = ($2 + [165])
	goto $label$3 
	
.LABEL $label$4
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($7)
	$8 = *($1 + [8])
	CALL eosio_assert(((int_64)$8 == (int_64)1397703940), [3264])
	$2 = [0]
	$9 = [0]
	$5 = *($1)
	if ( ((uint_64)((int_64)$5 + (int_64)4611686018427387903) >= (uint_64)(int_64)9223372036854775807) ){ goto $label$5 }
	$6 = (uint_64)$8 >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$7:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$6 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	
.LOOP $label$9:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$9 }
	
.LABEL $label$8
	$9 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$9 = [0]
	
.LABEL $label$5
	CALL eosio_assert($9, [1152])
	CALL eosio_assert(((int_64)$5 > (int_64)0), [3296])
	$4 = ($0 + [208])
	$9 = CALL db_lowerbound_i64(*($0 + [208]), *(($0 + [216])), (int_64)4406679876405297152, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$10 }
	$2 = CALL $139($4, $9)
	
.LABEL $label$10
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [1264])
	$7 = *($0)
	CALL eosio_assert(((int_32)*($2 + [40]) == (int_32)$4), [768])
	CALL eosio_assert(((int_64)*($4) == (int_64)CALL $fimport$4()), [816])
	$6 = *($2)
	CALL eosio_assert(((int_64)$8 == (int_64)*(($2 + [16]))), [880])
	$3 = ((int_64)*($2 + [8]) + (int_64)$5)
	*($2 + [8]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($2 + [8]) < (int_64)4611686018427387904), [960])
	CALL eosio_assert(((int_64)$8 == (int_64)*(($2 + [32]))), [880])
	$5 = ((int_64)*($2 + [24]) + (int_64)$5)
	*($2 + [24]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($2 + [24]) < (int_64)4611686018427387904), [960])
	CALL eosio_assert(((int_64)$6 == (int_64)*($2)), [992])
	*($10 + [56]) = ($10 + [40])
	*($10 + [52]) = $10
	*($10 + [48]) = $10
	CALL $140(($10 + [48]), $2)
	CALL db_update_i64(*($2 + [44]), $7, $10, [40])
	$4 = ($0 + [224])
	if ( (uint_64)($6 <= *($4)) ){ goto $label$11 }
	*($4) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*([0] + [4]) = ($10 + [64])
}

int_32 .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = (*([0] + [4]) - [16])
	$8 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	$6 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8 + [8]) = (int_64)0
	*($8) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [448])
	CALL memcpy($8, $6, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [448])
	$5 = ($8 + [8])
	CALL memcpy($5, ($6 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($5)
	$3 = *($8)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$7 = *((*($1) + $7))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $7))
	*([0] + [4]) = ($8 + [16])
	return [1]
}

void .FUNC $235 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	
.LOOP $label$1:
	$4 = ($1 + [-16])
	$3 = ($1 + [-8])
	
.LOOP $label$2:
	$5 = $0
	
.LOOP $label$4:
	$0 = ($1 - $5)
	$11 = int_32($0 >> [3])
	if ( ((uint_32)$11 <= (uint_32)[5]) ){ goto $label$12 }
	if ( ((int_32)$0 <= (int_32)[247]) ){ goto $label$11 }
	$12 = ($5 + (((int_32)$11 / (int_32)[2]) << [3]))
	if ( ((int_32)$0 < (int_32)[7993]) ){ goto $label$13 }
	$0 = (((int_32)$11 / (int_32)[4]) << [3])
	$10 = CALL $236($5, ($5 + $0), $12, ($12 + $0), $3, $2)
	goto $label$7 
	
.LABEL $label$13
	$6 = *($3)
	$8 = *($5)
	$7 = *($12)
	if ( ((uint_64)$7 >= (uint_64)$8) ){ goto $label$16 }
	if ( ((uint_64)$6 >= (uint_64)$7) ){ goto $label$15 }
	*($5) = $6
	*($3) = $8
	$10 = [1]
	goto $label$7 
	
.LABEL $label$16
	$10 = [0]
	if ( ((uint_64)$6 >= (uint_64)$7) ){ goto $label$7 }
	*($12) = $6
	*($3) = $7
	$10 = [1]
	$7 = *($5)
	$6 = *($12)
	if ( ((uint_64)$6 >= (uint_64)$7) ){ goto $label$7 }
	*($5) = $6
	*($12) = $7
	goto $label$14 
	
.LABEL $label$15
	*($5) = $7
	*($12) = $8
	$10 = [1]
	$6 = *($3)
	if ( ((uint_64)$6 >= (uint_64)$8) ){ goto $label$7 }
	*($12) = $6
	*($3) = $8
	
.LABEL $label$14
	$10 = [2]
	goto $label$7 
	
.LABEL $label$12
	goto $label$6 
	
.LABEL $label$17
	$7 = *($5)
	$6 = *($3)
	if ( ((uint_64)$6 >= (uint_64)$7) ){ goto $label$6 }
	*($5) = $6
	*($3) = $7
	return 
	
.LABEL $label$11
	$7 = *($5 + [16])
	$8 = *($5)
	$6 = *($5 + [8])
	if ( ((uint_64)$6 >= (uint_64)$8) ){ goto $label$22 }
	if ( ((uint_64)$7 >= (uint_64)$6) ){ goto $label$21 }
	*($5) = $7
	*(($5 + [16])) = $8
	goto $label$20 
	
.LABEL $label$22
	if ( ((uint_64)$7 >= (uint_64)$6) ){ goto $label$19 }
	*(($5 + [16])) = $6
	*(($0 = ($5 + [8]))) = $7
	if ( ((uint_64)$7 >= (uint_64)$8) ){ goto $label$18 }
	*($5) = $7
	*($0) = $8
	goto $label$18 
	
.LABEL $label$21
	*($5) = $6
	*(($0 = ($5 + [8]))) = $8
	if ( ((uint_64)$7 >= (uint_64)$8) ){ goto $label$19 }
	*(($5 + [16])) = $8
	*($0) = $7
	
.LABEL $label$20
	$6 = $8
	goto $label$18 
	
.LABEL $label$19
	$6 = $7
	
.LABEL $label$18
	$12 = ($5 + [24])
	if ( ((int_32)$12 == (int_32)$1) ){ goto $label$6 }
	$9 = [16]
	
.LOOP $label$23:
	$7 = *($12)
	if ( ((uint_64)$7 >= (uint_64)$6) ){ goto $label$24 }
	$0 = $9
	
.LOOP $label$28:
	*((($11 = ($5 + $0)) + [8])) = $6
	if ( ($0 == 0) ){ goto $label$27 }
	$0 = ($0 + [-8])
	$6 = *(($11 + [-8]))
	if ( (uint_64)($7 <= $6) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$0 = $5
	goto $label$25 
	
.LABEL $label$26
	$0 = (($5 + $0) + [8])
	
.LABEL $label$25
	*($0) = $7
	
.LABEL $label$24
	$0 = ($12 + [8])
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$6 }
	$9 = ($9 + [8])
	$6 = *($12)
	$12 = $0
	goto $label$23 
	
.LABEL $label$10
	$7 = *($5 + [16])
	$8 = *($5)
	$6 = *($5 + [8])
	if ( ((uint_64)$6 >= (uint_64)$8) ){ goto $label$33 }
	if ( ((uint_64)$7 >= (uint_64)$6) ){ goto $label$32 }
	*($5) = $7
	*(($5 + [16])) = $8
	goto $label$31 
	
.LABEL $label$33
	if ( ((uint_64)$7 >= (uint_64)$6) ){ goto $label$30 }
	*(($5 + [16])) = $6
	*(($0 = ($5 + [8]))) = $7
	if ( ((uint_64)$7 >= (uint_64)$8) ){ goto $label$29 }
	*($5) = $7
	*($0) = $8
	goto $label$29 
	
.LABEL $label$32
	*($5) = $6
	*(($0 = ($5 + [8]))) = $8
	if ( ((uint_64)$7 >= (uint_64)$8) ){ goto $label$30 }
	*(($5 + [16])) = $8
	*($0) = $7
	
.LABEL $label$31
	$6 = $8
	goto $label$29 
	
.LABEL $label$30
	$6 = $7
	
.LABEL $label$29
	$7 = *($3)
	if ( ((uint_64)$7 >= (uint_64)$6) ){ goto $label$6 }
	*(($0 = ($5 + [16]))) = $7
	*($3) = $6
	$11 = ($5 + [8])
	$7 = *($11)
	$6 = *($0)
	if ( ((uint_64)$6 >= (uint_64)$7) ){ goto $label$6 }
	*($0) = $7
	*($11) = $6
	$7 = *($5)
	if ( ((uint_64)$6 >= (uint_64)$7) ){ goto $label$6 }
	*($5) = $6
	*(($5 + [8])) = $7
	return 
	
.LABEL $label$9
	CALL $236($5, ($5 + [8]), ($5 + [16]), ($5 + [24]), $3, $2)
	return 
	
.LABEL $label$8
	$6 = *($3)
	$8 = *($5)
	$7 = *($5 + [8])
	if ( ((uint_64)$7 >= (uint_64)$8) ){ goto $label$35 }
	if ( ((uint_64)$6 >= (uint_64)$7) ){ goto $label$34 }
	*($5) = $6
	*($3) = $8
	return 
	
.LABEL $label$35
	if ( ((uint_64)$6 >= (uint_64)$7) ){ goto $label$6 }
	*(($0 = ($5 + [8]))) = $6
	*($3) = $7
	$7 = *($5)
	$6 = *($0)
	if ( ((uint_64)$6 >= (uint_64)$7) ){ goto $label$6 }
	*($5) = $6
	*($0) = $7
	return 
	
.LABEL $label$34
	*($5) = $7
	*(($0 = ($5 + [8]))) = $8
	$6 = *($3)
	if ( ((uint_64)$6 >= (uint_64)$8) ){ goto $label$6 }
	*($0) = $6
	*($3) = $8
	return 
	
.LABEL $label$7
	$7 = *($12)
	$8 = *($5)
	if ( (uint_64)($8 <= $7) ){ goto $label$37 }
	$0 = $4
	
.LOOP $label$40:
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$39 }
	$6 = *($0)
	$11 = ($0 + [-8])
	$0 = $11
	if ( ((uint_64)$6 >= (uint_64)$7) ){ goto $label$40 }
	goto $label$38 
	
.LABEL $label$39
	$12 = ($5 + [8])
	$7 = *($3)
	if ( (uint_64)($8 <= $7) ){ goto $label$41 }
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$6 }
	$12 = ($5 + [16])
	
.LOOP $label$43:
	$0 = ($12 + [-8])
	$6 = *($0)
	if ( (uint_64)($8 <= $6) ){ goto $label$42 }
	$12 = ($12 + [8])
	if ( ((int_32)$1 != (int_32)$12) ){ goto $label$43 }
	goto $label$6 
	
.LABEL $label$42
	*($0) = $7
	*($3) = $6
	
.LABEL $label$41
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$6 }
	$11 = $3
	
.LOOP $label$44:
	$0 = ($12 + [-8])
	$6 = *($5)
	
.LOOP $label$45:
	$0 = ($0 + [8])
	$7 = *($0)
	if ( ((uint_64)$6 >= (uint_64)$7) ){ goto $label$45 }
	$12 = ($0 + [8])
	
.LOOP $label$46:
	$11 = ($11 + [-8])
	$8 = *($11)
	if ( (uint_64)($6 <= $8) ){ goto $label$46 }
	if ( ((uint_32)$0 >= (uint_32)$11) ){ goto $label$5 }
	*($0) = $8
	*($11) = $7
	goto $label$44 
	
.LABEL $label$38
	*($5) = $6
	*(($11 = ($11 + [8]))) = $8
	$10 = ($10 + [1])
	goto $label$36 
	
.LABEL $label$37
	$11 = $3
	
.LABEL $label$36
	$9 = ($5 + [8])
	if ( ((uint_32)$9 >= (uint_32)$11) ){ goto $label$47 }
	
.LOOP $label$48:
	$0 = ($9 + [-8])
	$6 = *($12)
	
.LOOP $label$49:
	$0 = ($0 + [8])
	$7 = *($0)
	if ( (uint_64)($7 <= $6) ){ goto $label$49 }
	$9 = ($0 + [8])
	
.LOOP $label$50:
	$11 = ($11 + [-8])
	$8 = *($11)
	if ( ((uint_64)$8 >= (uint_64)$6) ){ goto $label$50 }
	if ( ((uint_32)$0 > (uint_32)$11) ){ goto $label$51 }
	*($0) = $8
	*($11) = $7
	$12 = ( $11 ? $12 : ((int_32)$12 == (int_32)$0) )
	$10 = ($10 + [1])
	goto $label$48 
	
.LABEL $label$51
	$9 = $0
	
.LABEL $label$47
	if ( ((int_32)$9 == (int_32)$12) ){ goto $label$52 }
	$7 = *($9)
	$6 = *($12)
	if ( ((uint_64)$6 >= (uint_64)$7) ){ goto $label$52 }
	*($9) = $6
	*($12) = $7
	$10 = ($10 + [1])
	
.LABEL $label$52
	if ( $10 ){ goto $label$54 }
	$11 = CALL $237($5, $9, $2)
	$0 = ($9 + [8])
	if ( CALL $237($0, $1, $2) ){ goto $label$53 }
	if ( $11 ){ goto $label$2 }
	
.LABEL $label$54
	if ( ((int_32)($9 - $5) >= (int_32)($1 - $9)) ){ goto $label$3 }
	CALL $235($5, $9, $2)
	$0 = ($9 + [8])
	goto $label$2 
	
.LABEL $label$53
	$1 = $9
	$0 = $5
	if ( ($11 == 0) ){ goto $label$1 }
	
.LABEL $label$6
	return 
	
.LABEL $label$5
	$5 = $0
	goto $label$4 
	
.LABEL $label$3
	CALL $235(($9 + [8]), $1, $2)
	$1 = $9
	$0 = $5
	goto $label$1 
	$11
}

void .FUNC _ZN7campwar10updatecampEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	$6 = ($0 + [128])
	$2 = [0]
	$7 = ($0 + [136])
	$1 = CALL db_lowerbound_i64(*($0 + [128]), *($7), (int_64)4982871454518345728, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	CALL $78($6, $1)
	$2 = [1]
	
.LABEL $label$1
	CALL eosio_assert($2, [6688])
	CALL eosio_assert(*(CALL $78($6, CALL $fimport$9(*($6), *($7), (int_64)4982871454518345728, (int_64)0)) + [8]), [6720])
	$6 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)4730274944552796160, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$2 = ($0 + [8])
	$6 = CALL $66($2, $6)
	if ( (*([0] + [1332]) == 0) ){ goto $label$4 }
	$9 = [8]
	goto $label$2 
	
.LABEL $label$4
	$9 = [0]
	goto $label$2 
	
.LABEL $label$3
	$9 = [9]
	
.LABEL $label$2
	
.LOOP $label$5:
	goto $label$20 
	
.LABEL $label$22
	$6 = CALL $66($2, $6)
	if ( (*([0] + [1332]) == 0) ){ goto $label$11 }
	$9 = [8]
	goto $label$5 
	
.LABEL $label$21
	$7 = *([0] + [1336])
	goto $label$10 
	
.LABEL $label$20
	$4 = CALL current_time()
	*([0] + [1332]) = [1]
	$7 = (CASTING uint_32)(uint_64 ((uint_64)$4 / (uint_64)(int_64)1000000))
	*([0] + [1336]) = $7
	$9 = [1]
	goto $label$5 
	
.LABEL $label$19
	$5 = *($6 + [56])
	$4 = *($6 + [32])
	*($8 + [24]) = $4
	$3 = (CASTING uint_64)(uint_32 $7)
	$5 = (int_64)
	if ( (int_64)($5($3 - $5)) == 0) ){ goto $label$9 }
	$9 = [2]
	goto $label$5 
	
.LABEL $label$18
	$5 = ((uint_64)((int_64)*($6 + [40]) * (int_64)$5) / (uint_64)*($6 + [48]))
	*($8 + [24]) = ( (int_64)0 ? (int_64))($4 - $5) : (uint_64)($4 <= $5) )
	$9 = [3]
	goto $label$5 
	
.LABEL $label$17
	$4 = *($6 + [96])
	$5 = *($6 + [72])
	*($8 + [16]) = $5
	$4 = (int_64)
	if ( (int_64)($4($3 - $4)) == 0) ){ goto $label$8 }
	$9 = [4]
	goto $label$5 
	
.LABEL $label$16
	$5 = *($6 + [64])
	$4 = ((int_64)((uint_64)((int_64)*($6 + [80]) * (int_64)$4) / (uint_64)*($6 + [88])) + (int_64)$5)
	*($8 + [16]) = ( $4 ? $5 : (uint_64)($4 <= $5) )
	$9 = [5]
	goto $label$5 
	
.LABEL $label$15
	$4 = *($0)
	*($8 + [12]) = ($8 + [16])
	*($8 + [8]) = ($8 + [24])
	CALL $211($2, $6, $4, ($8 + [8]))
	if ( ((int_64)*($8 + [24]) != (int_64)0) ){ goto $label$7 }
	$9 = [10]
	goto $label$5 
	
.LABEL $label$14
	CALL _ZN7campwar12camp_downingEN5eosio4nameEy($0, (int_64)0, *($6))
	$9 = [6]
	goto $label$5 
	
.LABEL $label$13
	CALL eosio_assert([1], [208])
	$6 = CALL db_next_i64(*($6 + [148]), ($8 + [24]))
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$6 }
	$9 = [9]
	goto $label$5 
	
.LABEL $label$12
	*([0] + [4]) = ($8 + [32])
	return 
	
.LABEL $label$11
	$9 = [0]
	goto $label$5 
	
.LABEL $label$10
	$9 = [1]
	goto $label$5 
	
.LABEL $label$9
	$9 = [3]
	goto $label$5 
	
.LABEL $label$8
	$9 = [5]
	goto $label$5 
	
.LABEL $label$7
	$9 = [6]
	goto $label$5 
	
.LABEL $label$6
	$9 = [7]
	goto $label$5 
	$9
}

int_32 .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [448])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

int_32 .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [448])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

void .FUNC _ZN7campwar10setweatherEx (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [6464]
	$7 = (int_64)0
	
.LOOP $label$1:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$2 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$2 = ($2 + [165])
	goto $label$3 
	
.LABEL $label$4
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($7)
	CALL eosio_assert((uint_64)($1 <= (int_64)7), [6480])
	$2 = ($0 + [128])
	$4 = [0]
	$3 = CALL db_lowerbound_i64(*($0 + [128]), *(($0 + [136])), (int_64)4982871454518345728, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$5 }
	$4 = CALL $78($2, $3)
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [3328])
	$5 = *($0)
	CALL eosio_assert(((int_32)*($4 + [72]) == (int_32)$2), [768])
	CALL eosio_assert(((int_64)*($2) == (int_64)CALL $fimport$4()), [816])
	*($4 + [32]) = $1
	$6 = *($4)
	CALL eosio_assert([1], [992])
	*($9 + [72]) = ($9 + [61])
	*($9 + [68]) = $9
	*($9 + [64]) = $9
	CALL $151(($9 + [64]), $4)
	CALL db_update_i64(*($4 + [76]), $5, $9, [61])
	$4 = ($0 + [144])
	if ( (uint_64)($6 <= *($4)) ){ goto $label$6 }
	*($4) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	CALL _ZN7campwar17weather_influenceEx($0, $1)
	*([0] + [4]) = ($9 + [80])
}

void .FUNC _ZN7campwar9setshieldEyxx (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [80])
	*([0] + [4]) = $13
	*($13 + [32]) = $1
	*($13 + [24]) = $2
	*($13 + [16]) = $3
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [576]
	$10 = (int_64)0
	
.LOOP $label$1:
	$11 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$2 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$4 = ($4 + [165])
	goto $label$3 
	
.LABEL $label$4
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$2
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($10)
	CALL eosio_assert(((int_64)$2 > (int_64)0), [6320])
	CALL eosio_assert(((int_64)$3 > (int_64)0), [6352])
	$5 = *(($0 + [32]))
	$12 = *(($0 + [36]))
	if ( ((int_32)$12 == (int_32)$5) ){ goto $label$5 }
	$7 = ($12 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$6:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$5 }
	$12 = $7
	$4 = ($7 + [-24])
	$7 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	$4 = ($0 + [8])
	if ( ((int_32)$12 == (int_32)$5) ){ goto $label$8 }
	$7 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [144]) == (int_32)$4), [592])
	goto $label$7 
	
.LABEL $label$8
	$7 = [0]
	$12 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)4730274944552796160, $1)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$7 }
	$7 = CALL $66($4, $12)
	CALL eosio_assert(((int_32)*($7 + [144]) == (int_32)$4), [592])
	
.LABEL $label$7
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [1760])
	CALL eosio_assert(*($7 + [8]), [6384])
	$5 = *(($0 + [552]))
	$12 = *(($0 + [556]))
	if ( ((int_32)$12 == (int_32)$5) ){ goto $label$9 }
	$7 = ($12 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$10:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$9 }
	$12 = $7
	$4 = ($7 + [-24])
	$7 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$10 }
	
.LABEL $label$9
	$7 = ($0 + [528])
	if ( ((int_32)$12 == (int_32)$5) ){ goto $label$14 }
	$4 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [32]) == (int_32)$7), [592])
	if ( $4 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$4 = CALL db_find_i64(*(($0 + [528])), *(($0 + [536])), (int_64)-4369432116128120832, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$12 }
	$4 = CALL $158($7, $4)
	CALL eosio_assert(((int_32)*($4 + [32]) == (int_32)$7), [592])
	
.LABEL $label$13
	$9 = *($0)
	*($13 + [52]) = ($13 + [16])
	*($13 + [48]) = ($13 + [24])
	CALL $206($7, $4, $9, ($13 + [48]))
	goto $label$11 
	
.LABEL $label$12
	$9 = *($0)
	*($13 + [4]) = ($13 + [24])
	*($13) = ($13 + [32])
	*($13 + [8]) = ($13 + [16])
	*($13 + [72]) = $9
	CALL eosio_assert(((int_64)*(($0 + [528])) == (int_64)CALL $fimport$4()), [1888])
	*($13 + [48]) = $7
	*($13 + [52]) = $13
	*($13 + [56]) = ($13 + [72])
	*(($4 = CALL $238([48])) + [32]) = $7
	*($4 + [16]) = [0]
	CALL $205(($13 + [48]), $4)
	*($13 + [64]) = $4
	$9 = *($4)
	*($13 + [48]) = $9
	$12 = *($4 + [36])
	*($13 + [44]) = $12
	$6 = ($0 + [556])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [560]))) ){ goto $label$16 }
	*($7 + [8]) = $9
	*($7 + [16]) = $12
	*($13 + [64]) = [0]
	*($7) = $4
	*($6) = ($7 + [24])
	goto $label$15 
	
.LABEL $label$16
	CALL $180(($0 + [552]), ($13 + [64]), ($13 + [48]), ($13 + [44]))
	
.LABEL $label$15
	$7 = *($13 + [64])
	*($13 + [64]) = [0]
	if ( ($7 == 0) ){ goto $label$11 }
	CALL $240($7)
	
.LABEL $label$11
	*([0] + [4]) = ($13 + [80])
}

void .FUNC _ZN7campwar10openrewardEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [80])
	*([0] + [4]) = $10
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [576]
	$8 = (int_64)0
	
.LOOP $label$1:
	$9 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$2 }
	$1 = *($5)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$1 = ($1 + [165])
	goto $label$3 
	
.LABEL $label$4
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$2
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($8)
	$2 = ($0 + [248])
	$1 = [0]
	$5 = [0]
	$3 = CALL db_lowerbound_i64(*($0 + [248]), *(($0 + [256])), (int_64)-4992121834821386240, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$5 }
	$5 = CALL $197($2, $3)
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [6432])
	$3 = ($0 + [288])
	$4 = CALL db_lowerbound_i64(*($0 + [288]), *(($0 + [296])), (int_64)-4992121823200788480, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$6 }
	$1 = CALL $144($3, $4)
	
.LABEL $label$6
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [6432])
	$7 = *($5 + [24])
	$4 = ($5 + [32])
	$6 = *($4)
	CALL eosio_assert(((int_64)*(($1 + [32])) == (int_64)$6), [880])
	$7 = ((int_64)$7 + (int_64)*($1 + [24]))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)$7 < (int_64)4611686018427387904), [960])
	$9 = *($0)
	CALL eosio_assert(((int_32)*($5 + [40]) == (int_32)$2), [768])
	CALL eosio_assert(((int_64)*(($0 + [248])) == (int_64)CALL $fimport$4()), [816])
	*($5 + [8]) = $7
	*(($5 + [16])) = $6
	*($5 + [24]) = $7
	*($4) = $6
	$7 = *($5)
	CALL eosio_assert([1], [992])
	*($10 + [72]) = (($10 + [16]) + [40])
	*($10 + [68]) = ($10 + [16])
	*($10 + [64]) = ($10 + [16])
	CALL $140(($10 + [64]), $5)
	CALL db_update_i64(*($5 + [44]), $9, ($10 + [16]), [40])
	$5 = ($0 + [264])
	if ( (uint_64)($7 <= *($5)) ){ goto $label$7 }
	*($5) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	CALL $207($3, $1, *($0))
	$5 = ($0 + [448])
	$1 = CALL db_lowerbound_i64(*($0 + [448]), *(($0 + [456])), (int_64)-6219583601193779200, (int_64)0)
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$9 }
	CALL $209($5, CALL $198($5, $1), *($0))
	goto $label$8 
	
.LABEL $label$9
	$7 = *($0)
	*($10) = $0
	*($10 + [64]) = $7
	CALL eosio_assert(((int_64)*($5) == (int_64)CALL $fimport$4()), [1888])
	*($10 + [16]) = $5
	*($10 + [20]) = $10
	*($10 + [24]) = ($10 + [64])
	*(($1 = CALL $238([40])) + [8 align=4]) = (int_64)0
	*($1 + [16 align=4]) = (int_64)0
	*($1 + [24]) = $5
	CALL $208(($10 + [16]), $1)
	*($10 + [8]) = $1
	$7 = *($1)
	*($10 + [16]) = $7
	$2 = *($1 + [28])
	*($10 + [4]) = $2
	$3 = ($0 + [476])
	$5 = *($3)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [480]))) ){ goto $label$11 }
	*($5 + [8]) = $7
	*($5 + [16]) = $2
	*($10 + [8]) = [0]
	*($5) = $1
	*($3) = ($5 + [24])
	goto $label$10 
	
.LABEL $label$11
	CALL $201(($0 + [472]), ($10 + [8]), ($10 + [16]), ($10 + [4]))
	
.LABEL $label$10
	$5 = *($10 + [8])
	*($10 + [8]) = [0]
	if ( ($5 == 0) ){ goto $label$8 }
	$1 = *($5 + [12])
	if ( ($1 == 0) ){ goto $label$12 }
	*(($5 + [16])) = $1
	CALL $240($1)
	
.LABEL $label$12
	CALL $240($5)
	
.LABEL $label$8
	*([0] + [4]) = ($10 + [80])
}

void .FUNC _ZN7campwar7setsnowEyx (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [160])
	*([0] + [4]) = $12
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [576]
	$9 = (int_64)0
	
.LOOP $label$1:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($9)
	CALL eosio_assert(((int_64)$2 > (int_64)0), [6288])
	$4 = *(($0 + [32]))
	$11 = *(($0 + [36]))
	if ( ((int_32)$11 == (int_32)$4) ){ goto $label$5 }
	$6 = ($11 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$6:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$5 }
	$11 = $6
	$3 = ($6 + [-24])
	$6 = $3
	if ( ((int_32)($3 + $5) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	$3 = ($0 + [8])
	if ( ((int_32)$11 == (int_32)$4) ){ goto $label$8 }
	$6 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [144]) == (int_32)$3), [592])
	goto $label$7 
	
.LABEL $label$8
	$6 = [0]
	$11 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)4730274944552796160, $1)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$7 }
	$6 = CALL $66($3, $11)
	CALL eosio_assert(((int_32)*($6 + [144]) == (int_32)$3), [592])
	
.LABEL $label$7
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [1760])
	$7 = *($0)
	CALL eosio_assert(((int_32)*($6 + [144]) == (int_32)$3), [768])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$4()), [816])
	*($6 + [80]) = $2
	$8 = *($6)
	CALL eosio_assert([1], [992])
	*($12 + [152]) = ($12 + [136])
	*($12 + [148]) = $12
	*($12 + [144]) = $12
	CALL $80(($12 + [144]), $6)
	CALL db_update_i64(*($6 + [148]), $7, $12, [136])
	$6 = ($0 + [24])
	if ( (uint_64)($8 <= *($6)) ){ goto $label$9 }
	*($6) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = ($12 + [160])
}

int_32 .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$8 = (*([0] + [4]) - [32])
	$10 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$9 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$8 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = ($8 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$2
	CALL read_action_data($8, $1)
	
.LABEL $label$1
	*($10 + [16]) = (int_64)0
	*($10 + [8]) = (int_64)0
	*($10 + [24]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [448])
	CALL memcpy(($10 + [8]), $8, [8])
	$6 = ($1 & [-8])
	CALL eosio_assert(((int_32)$6 != (int_32)[8]), [448])
	$7 = (($10 + [8]) + [8])
	CALL memcpy($7, ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$6 != (int_32)[16]), [448])
	$6 = (($10 + [8]) + [16])
	CALL memcpy($6, ($8 + [16]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($8)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$5 = *($6)
	$4 = *($7)
	$3 = *($10 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$9 = *((*($1) + $9))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $5), (int_64 $9))
	*([0] + [4]) = ($10 + [32])
	return [1]
}

void .FUNC $232 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	
.LOOP $label$1:
	$4 = ($1 + [-2])
	$3 = ($1 + [-1])
	
.LOOP $label$2:
	$5 = $0
	
.LOOP $label$4:
	$0 = ($1 - $5)
	if ( ((uint_32)$0 <= (uint_32)[5]) ){ goto $label$12 }
	if ( ((int_32)$0 <= (int_32)[30]) ){ goto $label$11 }
	$12 = ($5 + uint_32($0 >> [1]))
	if ( ((int_32)$0 < (int_32)[1000]) ){ goto $label$13 }
	$0 = uint_32($0 >> [2])
	$10 = CALL $233($5, ($5 + $0), $12, ($12 + $0), $3, $2)
	goto $label$7 
	
.LABEL $label$13
	$0 = *($3)
	$6 = *($5)
	$11 = *($12)
	if ( ((int_32)$11 >= (int_32)$6) ){ goto $label$16 }
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$15 }
	*($5) = $0
	*($3) = $6
	$10 = [1]
	goto $label$7 
	
.LABEL $label$16
	$10 = [0]
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$7 }
	*($12) = $0
	*($3) = $11
	$10 = [1]
	$11 = *($5)
	$0 = *($12)
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$7 }
	*($5) = $0
	*($12) = $11
	goto $label$14 
	
.LABEL $label$15
	*($5) = $11
	*($12) = $6
	$10 = [1]
	$0 = *($3)
	if ( ((int_32)$0 >= (int_32)$6) ){ goto $label$7 }
	*($12) = $0
	*($3) = $6
	
.LABEL $label$14
	$10 = [2]
	goto $label$7 
	
.LABEL $label$12
	goto $label$6 
	
.LABEL $label$17
	$11 = *($5)
	$0 = *($3)
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$6 }
	*($5) = $0
	*($3) = $11
	return 
	
.LABEL $label$11
	$0 = *($5 + [2])
	$6 = *($5)
	$11 = *($5 + [1])
	if ( ((int_32)$11 >= (int_32)$6) ){ goto $label$22 }
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$21 }
	*($5) = $0
	*(($5 + [2])) = $6
	goto $label$20 
	
.LABEL $label$22
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$19 }
	*(($5 + [2])) = $11
	*(($7 = ($5 + [1]))) = $0
	if ( ((int_32)$0 >= (int_32)$6) ){ goto $label$18 }
	*($5) = $0
	*($7) = $6
	goto $label$18 
	
.LABEL $label$21
	*($5) = $11
	*(($11 = ($5 + [1]))) = $6
	if ( ((int_32)$0 >= (int_32)$6) ){ goto $label$19 }
	*(($5 + [2])) = $6
	*($11) = $0
	
.LABEL $label$20
	$11 = $6
	goto $label$18 
	
.LABEL $label$19
	$11 = $0
	
.LABEL $label$18
	$8 = ($5 + [3])
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$6 }
	$12 = [0]
	
.LOOP $label$23:
	$7 = *($8)
	if ( ((int_32)$7 >= (int_32)int_32(($11 << [24]) >> [24])) ){ goto $label$24 }
	$0 = $12
	
.LOOP $label$28:
	*((($6 = ($5 + $0)) + [3])) = $11
	if ( ((int_32)$0 == (int_32)[-2]) ){ goto $label$27 }
	$0 = ($0 + [-1])
	$11 = *(($6 + [1]))
	if ( ((int_32)$7 < (int_32)$11) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$0 = $5
	goto $label$25 
	
.LABEL $label$26
	$0 = (($5 + $0) + [3])
	
.LABEL $label$25
	*($0) = $7
	
.LABEL $label$24
	$0 = ($8 + [1])
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$6 }
	$12 = ($12 + [1])
	$11 = *($8)
	$8 = $0
	goto $label$23 
	
.LABEL $label$10
	$11 = *($5 + [2])
	$6 = *($5)
	$0 = *($5 + [1])
	if ( ((int_32)$0 >= (int_32)$6) ){ goto $label$33 }
	if ( ((int_32)$11 >= (int_32)$0) ){ goto $label$32 }
	*($5) = $11
	*(($5 + [2])) = $6
	goto $label$31 
	
.LABEL $label$33
	if ( ((int_32)$11 >= (int_32)$0) ){ goto $label$30 }
	*(($5 + [2])) = $0
	*(($7 = ($5 + [1]))) = $11
	if ( ((int_32)$11 >= (int_32)$6) ){ goto $label$29 }
	*($5) = $11
	*($7) = $6
	goto $label$29 
	
.LABEL $label$32
	*($5) = $0
	*(($0 = ($5 + [1]))) = $6
	if ( ((int_32)$11 >= (int_32)$6) ){ goto $label$30 }
	*(($5 + [2])) = $6
	*($0) = $11
	
.LABEL $label$31
	$0 = $6
	goto $label$29 
	
.LABEL $label$30
	$0 = $11
	
.LABEL $label$29
	$11 = *($3)
	if ( ((int_32)$11 >= (int_32)$0) ){ goto $label$6 }
	*(($6 = ($5 + [2]))) = $11
	*($3) = $0
	$11 = ($5 + [1])
	$7 = *($11)
	$0 = *($6)
	if ( ((int_32)$0 >= (int_32)$7) ){ goto $label$6 }
	*($6) = $7
	*($11) = $0
	$11 = *($5)
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$6 }
	*($5) = $0
	*(($5 + [1])) = $11
	return 
	
.LABEL $label$9
	CALL $233($5, ($5 + [1]), ($5 + [2]), ($5 + [3]), $3, $2)
	return 
	
.LABEL $label$8
	$0 = *($3)
	$6 = *($5)
	$11 = *($5 + [1])
	if ( ((int_32)$11 >= (int_32)$6) ){ goto $label$35 }
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$34 }
	*($5) = $0
	*($3) = $6
	return 
	
.LABEL $label$35
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$6 }
	*(($6 = ($5 + [1]))) = $0
	*($3) = $11
	$11 = *($5)
	$0 = *($6)
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$6 }
	*($5) = $0
	*($6) = $11
	return 
	
.LABEL $label$34
	*($5) = $11
	*(($0 = ($5 + [1]))) = $6
	$11 = *($3)
	if ( ((int_32)$11 >= (int_32)$6) ){ goto $label$6 }
	*($0) = $11
	*($3) = $6
	return 
	
.LABEL $label$7
	$6 = *($12)
	$8 = *($5)
	if ( ((int_32)$8 < (int_32)$6) ){ goto $label$37 }
	$0 = $4
	
.LOOP $label$40:
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$39 }
	$11 = *($0)
	$7 = ($0 + [-1])
	$0 = $7
	if ( ((int_32)$11 >= (int_32)$6) ){ goto $label$40 }
	goto $label$38 
	
.LABEL $label$39
	$12 = ($5 + [1])
	$6 = *($3)
	if ( ((int_32)$8 < (int_32)$6) ){ goto $label$41 }
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$6 }
	$12 = ($5 + [2])
	
.LOOP $label$43:
	$0 = ($12 + [-1])
	$11 = *($0)
	if ( ((int_32)$8 < (int_32)$11) ){ goto $label$42 }
	$12 = ($12 + [1])
	if ( ((int_32)$1 != (int_32)$12) ){ goto $label$43 }
	goto $label$6 
	
.LABEL $label$42
	*($0) = $6
	*($3) = $11
	
.LABEL $label$41
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$6 }
	$11 = $3
	
.LOOP $label$44:
	$0 = ($12 + [-1])
	$6 = *($5)
	
.LOOP $label$45:
	$0 = ($0 + [1])
	$7 = *($0)
	if ( ((int_32)$6 >= (int_32)$7) ){ goto $label$45 }
	$12 = ($0 + [1])
	
.LOOP $label$46:
	$11 = ($11 + [-1])
	$8 = *($11)
	if ( ((int_32)$6 < (int_32)$8) ){ goto $label$46 }
	if ( ((uint_32)$0 >= (uint_32)$11) ){ goto $label$5 }
	*($0) = $8
	*($11) = $7
	goto $label$44 
	
.LABEL $label$38
	*($5) = $11
	*(($11 = ($7 + [1]))) = $8
	$10 = ($10 + [1])
	goto $label$36 
	
.LABEL $label$37
	$11 = $3
	
.LABEL $label$36
	$9 = ($5 + [1])
	if ( ((uint_32)$9 >= (uint_32)$11) ){ goto $label$47 }
	
.LOOP $label$48:
	$0 = ($9 + [-1])
	$6 = *($12)
	
.LOOP $label$49:
	$0 = ($0 + [1])
	$7 = *($0)
	if ( ((int_32)$7 < (int_32)$6) ){ goto $label$49 }
	$9 = ($0 + [1])
	
.LOOP $label$50:
	$11 = ($11 + [-1])
	$8 = *($11)
	if ( ((int_32)$8 >= (int_32)$6) ){ goto $label$50 }
	if ( ((uint_32)$0 > (uint_32)$11) ){ goto $label$51 }
	*($0) = $8
	*($11) = $7
	$12 = ( $11 ? $12 : ((int_32)$12 == (int_32)$0) )
	$10 = ($10 + [1])
	goto $label$48 
	
.LABEL $label$51
	$9 = $0
	
.LABEL $label$47
	if ( ((int_32)$9 == (int_32)$12) ){ goto $label$52 }
	$11 = *($9)
	$0 = *($12)
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$52 }
	*($9) = $0
	*($12) = $11
	$10 = ($10 + [1])
	
.LABEL $label$52
	if ( $10 ){ goto $label$54 }
	$11 = CALL $234($5, $9, $2)
	$0 = ($9 + [1])
	if ( CALL $234($0, $1, $2) ){ goto $label$53 }
	if ( $11 ){ goto $label$2 }
	
.LABEL $label$54
	if ( ((int_32)($9 - $5) >= (int_32)($1 - $9)) ){ goto $label$3 }
	CALL $232($5, $9, $2)
	$0 = ($9 + [1])
	goto $label$2 
	
.LABEL $label$53
	$1 = $9
	$0 = $5
	if ( ($11 == 0) ){ goto $label$1 }
	
.LABEL $label$6
	return 
	
.LABEL $label$5
	$5 = $0
	goto $label$4 
	
.LABEL $label$3
	CALL $232(($9 + [1]), $1, $2)
	$1 = $9
	$0 = $5
	goto $label$1 
	$0
}

void .FUNC $101 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [324]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	*($1 + [288]) = (int_64)0
	*($1 + [280]) = (int_64)0
	$4 = *($1)
	CALL eosio_assert([1], [512])
	$7 = (int_64)5523022
	$6 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$8 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	
.LABEL $label$1
	CALL eosio_assert($8, [480])
	*(($1 + [64])) = (int_64)1413893636
	*($1 + [56]) = (int_64)0
	*($1 + [304]) = (int_64)0
	*($1 + [8]) = *(*($3))
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [992])
	$3 = *($1 + [312])
	$8 = *(($1 + [316]))
	$5 = ($8 - $3)
	$7 = (CASTING uint_64)(uint_32 int_32($5 >> [3]))
	$6 = [308]
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$7 }
	$6 = (($5 & [-8]) + $6)
	
.LABEL $label$7
	if ( ($6 <= [513]) ){ goto $label$9 }
	$8 = CALL malloc($6)
	goto $label$8 
	
.LABEL $label$9
	$8 = ($10 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$8
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = ($8 + $6)
	CALL $102($9, $1)
	CALL db_update_i64(*($1 + [328]), $2, $8, $6)
	if ( ($6 <= [513]) ){ goto $label$10 }
	CALL free($8)
	
.LABEL $label$10
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$11 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $100 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($0 + [52])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$3 }
	$2 = ([0] - $1)
	$5 = ($5 + [-12])
	
.LOOP $label$4:
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$5 }
	*(($5 + [4])) = $3
	CALL $240($3)
	
.LABEL $label$5
	$5 = ($5 + [-16])
	if ( ((int_32)($5 + $2) != (int_32)[-12]) ){ goto $label$4 }
	$5 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $240($5)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$4 = ($0 + [40])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$9:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($5 + [16])) = $3
	CALL $240($3)
	
.LABEL $label$10
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$11 }
	*(($5 + [4])) = $3
	CALL $240($3)
	
.LABEL $label$11
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$9 }
	$5 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($4) = $1
	CALL $240($5)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$14 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$15:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$16 }
	*(($5 + [16])) = $3
	CALL $240($3)
	
.LABEL $label$16
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$17 }
	*(($5 + [4])) = $3
	CALL $240($3)
	
.LABEL $label$17
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$15 }
	$5 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$13
	*($4) = $1
	CALL $240($5)
	
.LABEL $label$12
	return $0
}

int_32 .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$6 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [3]))
	$7 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$3 = ((int_64)$6) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $7) > (int_32)[0]), [1056])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$7 = (*($5) + [1])
	*($5) = $7
	if ( $3 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$2 }
	$2 = ($0 + [4])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $7) > (int_32)[7]), [1056])
	CALL memcpy(*($2), $5, [8])
	$7 = (*($2) + [8])
	*($2) = $7
	$5 = ($5 + [8])
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $102 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $103($0, ($1 + [312]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [88]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [96]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [104]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [112]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [120]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [128]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [136]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [144]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [152]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [160]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [168]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [176]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [184]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [192]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [200]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [208]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [216]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [224]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [232]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [240]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [248]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [256]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [264]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [272]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [280]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [288]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [296]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [304]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $105 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [1056])
	CALL memcpy(*($0 + [4]), $1, [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[1]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$4 = (*($0 + [4]) + [2])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[3]), [1056])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$5 = (*($0 + [4]) + [4])
	*($0 + [4]) = $5
	$6 = *($1 + [12])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$2 = ((int_64)$6) != (int_64)0
	*($7 + [14]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) > (int_32)[0]), [1056])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [14]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $2 ){ goto $label$1 }
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [1056])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($1 + [16]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	$6 = *($1 + [20])
	
.LOOP $label$2:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$1 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($1) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [1056])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $1 ){ goto $label$2 }
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $104 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$6 = *($0)
	*($0) = ($6 + [10])
	$6 = ($6 + [11])
	$8 = *($1 + [12])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	*($0) = $6
	$8 = *($1 + [20])
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	*($0) = $6
	$7 = *($1 + [24])
	$2 = *(($1 + [28]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$7
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$8:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$5 }
	*($0) = $6
	
.LABEL $label$4
	$7 = *($1 + [36])
	$2 = *(($1 + [40]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$9 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$12:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$13 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$13
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$14:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$14 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	*($0) = $6
	
.LABEL $label$10
	$7 = *($1 + [48])
	$5 = *(($1 + [52]))
	$8 = (CASTING uint_64)(uint_32 int_32(($5 - $7) >> [4]))
	
.LOOP $label$15:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$15 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = *($7 + [4])
	$3 = *(($7 + [8]))
	$6 = ((($6 + $3) + [2]) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$18:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$18 }
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	*($0) = $6
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $107 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($7 + [15]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [1056])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$2 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$3 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[1]), [1056])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $4, [2])
	*($6) = (*($6) + [2])
	CALL $89($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$6 = *($6)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [1056])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [1056])
	CALL memcpy(*($4), $7, [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [1056])
	CALL memcpy(*($4), ($7 + [8]), [8])
	*($4) = (*($4) + [8])
	CALL $89(CALL $88($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$6 = *($4)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $109 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [448])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $108 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [448])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [448])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [448])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $212 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	$4 = *($0 + [4])
	*($1 + [8]) = [1]
	*($1) = *(*($4))
	$2 = *($0)
	*($1 + [16]) = *(*($4 + [4]))
	if ( (*([0] + [1332]) == 0) ){ goto $label$2 }
	$4 = *([0] + [1336])
	goto $label$1 
	
.LABEL $label$2
	$3 = CALL current_time()
	*([0] + [1332]) = [1]
	$4 = (CASTING uint_32)(uint_64 ((uint_64)$3 / (uint_64)(int_64)1000000))
	*([0] + [1336]) = $4
	
.LABEL $label$1
	*($1 + [32]) = (int_64)0
	*($1 + [24]) = $4
	CALL eosio_assert([1], [512])
	$3 = (int_64)5523022
	$4 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	
.LABEL $label$3
	CALL eosio_assert($5, [480])
	*(($1 + [48])) = (int_64)1413893636
	*($1 + [40]) = (int_64)889849507406
	CALL eosio_assert([1], [512])
	$3 = (int_64)5523022
	$4 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$5 = [0]
	
.LABEL $label$8
	CALL eosio_assert($5, [480])
	*(($1 + [64])) = (int_64)1413893636
	*($1 + [56]) = (int_64)889849507406
	$5 = $7
	$4 = ($5 + [-64])
	*([0] + [4]) = $4
	*($6 + [4]) = $4
	*($6) = $4
	*($6 + [8]) = ($5 + [-3])
	CALL $151($6, $1)
	$3 = *($1)
	*($1 + [76]) = CALL db_store_i64(*($2 + [8]), (int_64)4982871454518345728, *(*($0 + [8])), $3, $4, [61])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$13 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	*([0] + [4]) = ($6 + [16])
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [15392])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [15200]
	$1 = (((int_32)$2 * (int_32)[12]) + [15200])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

void .FUNC $219 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [240])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [288])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [352])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $240($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $240($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [44]))
}

void .FUNC _ZN7campwar9getincomeEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [144])
	*([0] + [4]) = $13
	CALL require_auth($1)
	$3 = *(($0 + [72]))
	$6 = *(($0 + [76]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$1 }
	$7 = ($6 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$1 }
	$6 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$2 = ($0 + [48])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [324]) == (int_32)$2), [592])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$7 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $50($2, $7)
	CALL eosio_assert(((int_32)*($6 + [324]) == (int_32)$2), [592])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [1232])
	$9 = (int_64)0
	CALL eosio_assert(((int_64)*($6 + [88]) > (int_64)0), [5264])
	$12 = *($0)
	$8 = (int_64)59
	$7 = [1632]
	$10 = (int_64)0
	
.LOOP $label$5:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$10 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$5 = ($5 + [165])
	goto $label$8 
	
.LABEL $label$10
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$7
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$6
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$5 }
	*($13 + [80]) = $10
	*($13 + [72]) = $12
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [128]
	$10 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$9 > (uint_64)(int_64)10) ){ goto $label$16 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$5 = ($5 + [165])
	goto $label$14 
	
.LABEL $label$16
	$11 = (int_64)0
	if ( ((int_64)$9 == (int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$12
	$7 = ($7 + [1])
	$8 = ((int_64)$8 + (int_64)-5)
	$10 = ((int_64)$11 | (int_64)$10)
	$9 = ((int_64)$9 + (int_64)1)
	if ( ((int_64)$9 != (int_64)13) ){ goto $label$11 }
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [112]
	$12 = (int_64)0
	
.LOOP $label$17:
	if ( ((uint_64)$9 > (uint_64)(int_64)7) ){ goto $label$22 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$5 = ($5 + [165])
	goto $label$20 
	
.LABEL $label$22
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$19
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$18
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$12 = ((int_64)$11 | (int_64)$12)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$17 }
	*(($13 + [16])) = [0]
	*($13 + [8]) = (int_64)0
	$7 = CALL strlen([5296])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$23 }
	$5 = ($6 + [88])
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$26 }
	*($13 + [8]) = ($7 << [1])
	$4 = (($13 + [8]) | [1])
	if ( $7 ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	$3 = (($7 + [16]) & [-16])
	$4 = CALL $238($3)
	*($13 + [8]) = ($3 | [1])
	*($13 + [16]) = $4
	*($13 + [12]) = $7
	
.LABEL $label$25
	CALL memcpy($4, [5296], $7)
	
.LABEL $label$24
	*(($4 + $7)) = [0]
	*(($13 + [52])) = *(($5 + [12]))
	*(($13 + [48])) = *(($5 + [8]))
	*(($13 + [44])) = *(($5 + [4]))
	*($13 + [32]) = $1
	*($13 + [24]) = *($0)
	*($13 + [40]) = *($5)
	$7 = (($13 + [8]) + [8])
	*(($13 + [64])) = *($7)
	*($13 + [56]) = *($13 + [8])
	*($13 + [8]) = [0]
	*($13 + [12]) = [0]
	*($7) = [0]
	$7 = CALL $86(($13 + [88]), ($13 + [72]), $10, $12, ($13 + [24]))
	CALL $87(($13 + [128]), $7)
	$5 = *($13 + [128])
	CALL send_inline($5, (*($13 + [132]) - $5))
	$5 = *($13 + [128])
	if ( ($5 == 0) ){ goto $label$27 }
	*($13 + [132]) = $5
	CALL $240($5)
	
.LABEL $label$27
	$5 = *($7 + [28])
	if ( ($5 == 0) ){ goto $label$28 }
	*(($7 + [32])) = $5
	CALL $240($5)
	
.LABEL $label$28
	$5 = *($7 + [16])
	if ( ($5 == 0) ){ goto $label$29 }
	*(($7 + [20])) = $5
	CALL $240($5)
	
.LABEL $label$29
	if ( ((*(($13 + [56])) & [1]) == 0) ){ goto $label$30 }
	CALL $240(*(($13 + [64])))
	
.LABEL $label$30
	if ( ((*($13 + [8]) & [1]) == 0) ){ goto $label$31 }
	CALL $240(*(($13 + [16])))
	
.LABEL $label$31
	CALL $192($2, $6, *($0))
	*([0] + [4]) = ($13 + [144])
	return (unreachable)
	
.LABEL $label$23
	CALL $242(($13 + [8]))
}

void .FUNC _ZN7campwar6refundEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [144])
	*([0] + [4]) = $13
	CALL require_auth(*($0))
	$12 = *(($0 + [432]))
	$6 = *(($0 + [436]))
	if ( ((int_32)$6 == (int_32)$12) ){ goto $label$1 }
	$7 = ($6 + [-24])
	$2 = ([0] - $12)
	
.LOOP $label$2:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$1 }
	$6 = $7
	$4 = ($7 + [-24])
	$7 = $4
	if ( ((int_32)($4 + $2) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$2 = ($0 + [408])
	if ( ((int_32)$6 == (int_32)$12) ){ goto $label$4 }
	$6 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [32]) == (int_32)$2), [592])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$7 = CALL db_find_i64(*(($0 + [408])), *(($0 + [416])), (int_64)-5001342326447013888, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $94($2, $7)
	CALL eosio_assert(((int_32)*($6 + [32]) == (int_32)$2), [592])
	
.LABEL $label$3
	$3 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($3, [5168])
	$7 = (*($6 + [8]) + [172800])
	if ( (*([0] + [1332]) == 0) ){ goto $label$6 }
	$4 = *([0] + [1336])
	goto $label$5 
	
.LABEL $label$6
	$1 = CALL current_time()
	*([0] + [1332]) = [1]
	$4 = (CASTING uint_32)(uint_64 ((uint_64)$1 / (uint_64)(int_64)1000000))
	*([0] + [1336]) = $4
	
.LABEL $label$5
	CALL eosio_assert(((uint_32)$7 <= (uint_32)$4), [5200])
	$11 = *($0)
	$1 = (int_64)0
	$8 = (int_64)59
	$7 = [1632]
	$9 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$12 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$4 = ($4 + [165])
	goto $label$10 
	
.LABEL $label$12
	$10 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$8
	$7 = ($7 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$7 }
	*($13 + [80]) = $9
	*($13 + [72]) = $11
	$1 = (int_64)0
	$10 = (int_64)59
	$7 = [144]
	$9 = (int_64)0
	
.LOOP $label$13:
	$8 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$14 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$16 }
	$4 = ($4 + [165])
	goto $label$15 
	
.LABEL $label$16
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$15
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$14
	$7 = ($7 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$9 = ((int_64)$8 | (int_64)$9)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$13 }
	$1 = (int_64)0
	$8 = (int_64)59
	$7 = [112]
	$11 = (int_64)0
	
.LOOP $label$17:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$22 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$4 = ($4 + [165])
	goto $label$20 
	
.LABEL $label$22
	$10 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$19
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$18
	$7 = ($7 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$17 }
	*(($13 + [16])) = [0]
	*($13 + [8]) = (int_64)0
	$7 = CALL strlen([5232])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$23 }
	$4 = ($6 + [16])
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$26 }
	*($13 + [8]) = ($7 << [1])
	$12 = (($13 + [8]) | [1])
	if ( $7 ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	$5 = (($7 + [16]) & [-16])
	$12 = CALL $238($5)
	*($13 + [8]) = ($5 | [1])
	*($13 + [16]) = $12
	*($13 + [12]) = $7
	
.LABEL $label$25
	CALL memcpy($12, [5232], $7)
	
.LABEL $label$24
	*(($12 + $7)) = [0]
	$1 = *($6)
	*(($13 + [48])) = *(($4 + [8]))
	*(($13 + [44])) = *(($4 + [4]))
	*(($13 + [52])) = *(($4 + [12]))
	*($13 + [24]) = *($0)
	*($13 + [32]) = $1
	*($13 + [40]) = *($4)
	*(($13 + [60])) = *($13 + [12 align=4])
	*($13 + [56]) = *($13 + [8])
	*($13 + [8]) = [0]
	*($13 + [12]) = [0]
	*((($13 + [8]) + [8])) = [0]
	$7 = CALL $86(($13 + [88]), ($13 + [72]), $9, $11, ($13 + [24]))
	CALL $87(($13 + [128]), $7)
	$4 = *($13 + [128])
	CALL send_inline($4, (*($13 + [132]) - $4))
	$4 = *($13 + [128])
	if ( ($4 == 0) ){ goto $label$27 }
	*($13 + [132]) = $4
	CALL $240($4)
	
.LABEL $label$27
	$4 = *($7 + [28])
	if ( ($4 == 0) ){ goto $label$28 }
	*(($7 + [32])) = $4
	CALL $240($4)
	
.LABEL $label$28
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$29 }
	*(($7 + [20])) = $4
	CALL $240($4)
	
.LABEL $label$29
	if ( ((*(($13 + [56])) & [1]) == 0) ){ goto $label$30 }
	CALL $240(*(($13 + [64])))
	
.LABEL $label$30
	if ( ((*($13 + [8]) & [1]) == 0) ){ goto $label$31 }
	CALL $240(*(($13 + [16])))
	
.LABEL $label$31
	CALL eosio_assert($3, [160])
	CALL eosio_assert($3, [208])
	$7 = CALL db_next_i64(*($6 + [36]), ($13 + [24]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$32 }
	CALL $94($2, $7)
	
.LABEL $label$32
	CALL $191($2, $6)
	*([0] + [4]) = ($13 + [144])
	return (unreachable)
	
.LABEL $label$23
	CALL $242(($13 + [8]))
}

void .FUNC _ZN7campwar12claimrewardsEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$17 = (*([0] + [4]) - [192])
	*([0] + [4]) = $17
	*($17 + [168]) = $1
	CALL require_auth($1)
	$15 = *(($0 + [72]))
	$7 = *(($0 + [76]))
	if ( ((int_32)$7 == (int_32)$15) ){ goto $label$1 }
	$9 = ($7 + [-24])
	$14 = ([0] - $15)
	
.LOOP $label$2:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$1 }
	$7 = $9
	$16 = ($9 + [-24])
	$9 = $16
	if ( ((int_32)($16 + $14) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$2 = ($0 + [48])
	if ( ((int_32)$7 == (int_32)$15) ){ goto $label$4 }
	$3 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [324]) == (int_32)$2), [592])
	goto $label$3 
	
.LABEL $label$4
	$3 = [0]
	$9 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$3 }
	$3 = CALL $50($2, $9)
	CALL eosio_assert(((int_32)*($3 + [324]) == (int_32)$2), [592])
	
.LABEL $label$3
	$7 = [0]
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [1232])
	CALL eosio_assert(((int_64)*($3 + [56]) > (int_64)0), [5920])
	$4 = ($0 + [248])
	$14 = [0]
	$9 = CALL db_lowerbound_i64(*($0 + [248]), *(($0 + [256])), (int_64)-4992121834821386240, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$5 }
	$14 = CALL $197($4, $9)
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$14 != (int_32)[0]), [5952])
	$5 = ($0 + [448])
	$9 = CALL db_lowerbound_i64(*($0 + [448]), *(($0 + [456])), (int_64)-6219583601193779200, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$6 }
	$7 = CALL $198($5, $9)
	
.LABEL $label$6
	$15 = [0]
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [5984])
	*($17 + [160]) = [0]
	*($17 + [152]) = (int_64)0
	$8 = [0]
	$9 = [0]
	$6 = (*(($7 + [16])) - *($7 + [12]))
	$16 = int_32($6 >> [3])
	if ( ($16 == 0) ){ goto $label$10 }
	if ( ((uint_32)$16 >= (uint_32)[536870912]) ){ goto $label$9 }
	$9 = CALL $238($6)
	$8 = ($9 + ($16 << [3]))
	*(($17 + [160])) = $8
	*($17 + [152]) = $9
	*($17 + [156]) = $9
	$15 = *(($7 + [12]))
	$16 = (*(($7 + [16])) - $15)
	if ( ((int_32)$16 < (int_32)[1]) ){ goto $label$11 }
	CALL memcpy($9, $15, $16)
	$15 = ($9 + $16)
	*($17 + [156]) = $15
	if ( ($16 == 0) ){ goto $label$12 }
	$16 = (uint_32($16 >> [3]) << [3])
	
.LOOP $label$13:
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$10 }
	$9 = ($9 + [8])
	$16 = ($16 + [-8])
	if ( $16 ){ goto $label$13 }
	
.LABEL $label$12
	$9 = $15
	goto $label$10 
	
.LABEL $label$11
	$15 = $9
	
.LABEL $label$10
	CALL eosio_assert(((int_32)$9 == (int_32)$15), [6016])
	if ( ((int_32)$15 == (int_32)$8) ){ goto $label$15 }
	*($15) = $1
	*($17 + [156]) = ($15 + [8])
	goto $label$14 
	
.LABEL $label$15
	CALL $185(($17 + [152]), ($17 + [168]))
	
.LABEL $label$14
	$1 = *($0)
	*($17 + [32]) = ($17 + [152])
	CALL $199($5, $7, $1, ($17 + [32]))
	$9 = [0]
	$1 = (int_64)0
	$16 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)4730274944552796160, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$16 }
	$7 = ($0 + [8])
	$16 = CALL $66($7, $16)
	$1 = *($16 + [136])
	CALL eosio_assert([1], [208])
	$16 = CALL db_next_i64(*($16 + [148]), ($17 + [32]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$16 }
	
.LOOP $label$17:
	$16 = CALL $66($7, $16)
	$12 = *($16 + [136])
	CALL eosio_assert([1], [208])
	$1 = ((int_64)$12 + (int_64)$1)
	$16 = CALL db_next_i64(*($16 + [148]), ($17 + [32]))
	if ( ((int_32)$16 >= (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$16
	CALL eosio_assert((CASTING uint_32)(uint_64 $1), [6064])
	$12 = *(($3 + [56]))
	$10 = *($3 + [304])
	*($17 + [144]) = (int_64)1397703940
	*($17 + [136]) = (int_64)0
	CALL eosio_assert([1], [512])
	$12 = (Rounds 0)(((float_64)((float_64)((float_64)(CASTING float_64)(int_64 $12) * (float_64)(CASTING float_64)(int_64 $10)) / (float_64)(CASTING float_64)(int_64 $1)) * (float_64)(float_64)1e4))
	$1 = (int_64)5459781
	
.LOOP $label$19:
	$16 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$20 }
	
.LOOP $label$21:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$21 }
	
.LABEL $label$20
	$16 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$19 }
	
.LABEL $label$18
	CALL eosio_assert($16, [480])
	if ( ((int_64)$12 <= (int_64)0) ){ goto $label$22 }
	$1 = *($14 + [8])
	CALL __multi3($17, $1, (int_64)$1 >> (int_64)63), $12, (int_64)$12 >> (int_64)63))
	$12 = *(($14 + [16]))
	$1 = *(($17 + [8]))
	$10 = *($17)
	CALL eosio_assert(( (uint_64)($10 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$10 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	*(($9 = (($17 + [136]) + [8]))) = $12
	*($17 + [136]) = ((int_64)$10 / (int_64)10000)
	$16 = ($14 + [32])
	CALL eosio_assert(((int_64)$12 == (int_64)*($16)), [3552])
	CALL eosio_assert(((int_64)*($17 + [136]) <= (int_64)*($14 + [24])), [6112])
	if ( ((int_64)*($17 + [136]) < (int_64)1) ){ goto $label$22 }
	$12 = *($0)
	CALL eosio_assert(((int_32)*($14 + [40]) == (int_32)$4), [768])
	CALL eosio_assert(((int_64)*(($0 + [248])) == (int_64)CALL $fimport$4()), [816])
	$1 = *($14)
	CALL eosio_assert(((int_64)*($9) == (int_64)*($16)), [3408])
	$10 = (int_64)
	*(($9 = ($14 + [24]))) = $10(*($9) - *($17 + [136])))
	CALL eosio_assert(((int_64)$10 > (int_64)-4611686018427387904), [3456])
	CALL eosio_assert(((int_64)*($9) < (int_64)4611686018427387904), [3488])
	CALL eosio_assert(((int_64)$1 == (int_64)*($14)), [992])
	*($17 + [104]) = (($17 + [32]) + [40])
	*($17 + [100]) = ($17 + [32])
	*($17 + [96]) = ($17 + [32])
	CALL $140(($17 + [96]), $14)
	CALL db_update_i64(*($14 + [44]), $12, ($17 + [32]), [40])
	$9 = ($0 + [264])
	if ( (uint_64)($1 <= *($9)) ){ goto $label$23 }
	*($9) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$23
	$13 = *($0)
	$1 = (int_64)0
	$10 = (int_64)59
	$9 = [1632]
	$11 = (int_64)0
	
.LOOP $label$24:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$29 }
	$16 = *($9)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$16 = ($16 + [165])
	goto $label$27 
	
.LABEL $label$29
	$12 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$28
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$26
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$25
	$9 = ($9 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$24 }
	*($17 + [88]) = $11
	*($17 + [80]) = $13
	$1 = (int_64)0
	$10 = (int_64)59
	$9 = [128]
	$11 = (int_64)0
	
.LOOP $label$30:
	if ( ((uint_64)$1 > (uint_64)(int_64)10) ){ goto $label$35 }
	$16 = *($9)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$16 = ($16 + [165])
	goto $label$33 
	
.LABEL $label$35
	$12 = (int_64)0
	if ( ((int_64)$1 == (int_64)11) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$34
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$32
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$31
	$9 = ($9 + [1])
	$10 = ((int_64)$10 + (int_64)-5)
	$11 = ((int_64)$12 | (int_64)$11)
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$30 }
	$1 = (int_64)0
	$10 = (int_64)59
	$9 = [112]
	$13 = (int_64)0
	
.LOOP $label$36:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$41 }
	$16 = *($9)
	if ( ((uint_32)(($16 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$40 }
	$16 = ($16 + [165])
	goto $label$39 
	
.LABEL $label$41
	$12 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$40
	$16 = ( ($16 + [208]) ? [0] : ((($16 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$39
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $16) << (int_64)56) >> (int_64)56)
	
.LABEL $label$38
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$37
	$9 = ($9 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$13 = ((int_64)$12 | (int_64)$13)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$36 }
	*(($17 + [24])) = [0]
	*($17 + [16]) = (int_64)0
	$9 = CALL strlen([6176])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$44 }
	*($17 + [16]) = ($9 << [1])
	$16 = (($17 + [16]) | [1])
	if ( $9 ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$44
	$7 = (($9 + [16]) & [-16])
	$16 = CALL $238($7)
	*($17 + [16]) = ($7 | [1])
	*($17 + [24]) = $16
	*($17 + [20]) = $9
	
.LABEL $label$43
	CALL memcpy($16, [6176], $9)
	
.LABEL $label$42
	*(($16 + $9)) = [0]
	*(($17 + [52])) = *($17 + [140])
	*($17 + [32]) = *($0)
	*($17 + [40]) = *($17 + [168])
	*(($17 + [60])) = *(($17 + [148]))
	*(($17 + [56])) = *((($17 + [136]) + [8]))
	*($17 + [48]) = *($17 + [136])
	$9 = (($17 + [16]) + [8])
	*(($17 + [72])) = *($9)
	*($17 + [64]) = *($17 + [16])
	*($17 + [16]) = [0]
	*($17 + [20]) = [0]
	*($9) = [0]
	$9 = CALL $86(($17 + [96]), ($17 + [80]), $11, $13, ($17 + [32]))
	CALL $87(($17 + [176]), $9)
	$16 = *($17 + [176])
	CALL send_inline($16, (*($17 + [180]) - $16))
	$16 = *($17 + [176])
	if ( ($16 == 0) ){ goto $label$45 }
	*($17 + [180]) = $16
	CALL $240($16)
	
.LABEL $label$45
	$16 = *($9 + [28])
	if ( ($16 == 0) ){ goto $label$46 }
	*(($9 + [32])) = $16
	CALL $240($16)
	
.LABEL $label$46
	$16 = *($9 + [16])
	if ( ($16 == 0) ){ goto $label$47 }
	*(($9 + [20])) = $16
	CALL $240($16)
	
.LABEL $label$47
	if ( ((*(($17 + [64])) & [1]) == 0) ){ goto $label$48 }
	CALL $240(*(($17 + [72])))
	
.LABEL $label$48
	if ( ((*($17 + [16]) & [1]) == 0) ){ goto $label$22 }
	CALL $240(*(($17 + [24])))
	
.LABEL $label$22
	$9 = [0]
	*($17 + [40]) = [0]
	*($17 + [32]) = (int_64)0
	$16 = [0]
	$14 = (*(($3 + [316])) - *($3 + [312]))
	$7 = int_32($14 >> [3])
	if ( ($7 == 0) ){ goto $label$49 }
	if ( ((uint_32)$7 >= (uint_32)[536870912]) ){ goto $label$8 }
	$9 = CALL $238($14)
	*(($17 + [40])) = ($9 + ($7 << [3]))
	*($17 + [32]) = $9
	*($17 + [36]) = $9
	$7 = *(($3 + [312]))
	$16 = (*(($3 + [316])) - $7)
	if ( ((int_32)$16 < (int_32)[1]) ){ goto $label$50 }
	CALL memcpy($9, $7, $16)
	$9 = (*($17 + [36]) + $16)
	*($17 + [36]) = $9
	$16 = *($17 + [32])
	goto $label$49 
	
.LABEL $label$50
	$16 = $9
	
.LABEL $label$49
	CALL $235($16, $9, ($17 + [96]))
	$7 = *($17 + [36])
	$16 = *($17 + [32])
	*($17 + [96]) = $16
	if ( ((int_32)$16 == (int_32)$7) ){ goto $label$55 }
	$14 = ($17 + [96])
	$15 = ($17 + [80])
	
.LOOP $label$56:
	*($15) = *($14)
	$9 = (*($17 + [80]) + [8])
	*($17 + [80]) = $9
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$54 }
	$15 = ($17 + [96])
	$14 = ($17 + [80])
	$16 = *($17 + [96])
	if ( ((int_64)*($16) != (int_64)*($9)) ){ goto $label$56 }
	
.LABEL $label$55
	if ( ((int_32)$16 == (int_32)$7) ){ goto $label$53 }
	$9 = ($16 + [8])
	
.LOOP $label$58:
	$9 = ($9 + [8])
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$57 }
	$1 = *($9)
	if ( ((int_64)*($16) == (int_64)$1) ){ goto $label$58 }
	*($16 + [8]) = $1
	$16 = ($16 + [8])
	goto $label$58 
	
.LABEL $label$57
	$16 = ($16 + [8])
	if ( ((int_32)$16 != (int_32)$7) ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$54
	$16 = $7
	
.LABEL $label$53
	if ( ((int_32)$16 == (int_32)$7) ){ goto $label$51 }
	
.LABEL $label$52
	*($17 + [36]) = $16
	
.LABEL $label$51
	$1 = *($0)
	*($17 + [100]) = ($17 + [32])
	*($17 + [96]) = ($17 + [136])
	CALL $200($2, $3, $1, ($17 + [96]))
	$9 = *($17 + [32])
	if ( ($9 == 0) ){ goto $label$59 }
	*($17 + [36]) = $9
	CALL $240($9)
	
.LABEL $label$59
	$9 = *($17 + [152])
	if ( ($9 == 0) ){ goto $label$60 }
	*($17 + [156]) = $9
	CALL $240($9)
	
.LABEL $label$60
	*([0] + [4]) = ($17 + [192])
	return (unreachable)
	
.LABEL $label$9
	CALL $244(($17 + [152]))
	
.LABEL $label$8
	CALL $244(($17 + [32]))
	
.LABEL $label$7
	CALL $242(($17 + [16]))
	(unreachable)
	(unreachable)
}

void .FUNC _ZN7campwar8getbonusEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_32 $17
	$17 = (*([0] + [4]) - [256])
	*([0] + [4]) = $17
	*($17 + [232]) = $1
	CALL require_auth($1)
	$12 = [0]
	$4 = CALL db_lowerbound_i64(*($0 + [128]), *(($0 + [136])), (int_64)4982871454518345728, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$12 = CALL $78(($0 + [128]), $4)
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [1264])
	CALL eosio_assert(((int_32)*($12 + [8]) ^ (int_32)[1]), [5312])
	$5 = *(($0 + [72]))
	$10 = *(($0 + [76]))
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$2 }
	$12 = ($10 + [-24])
	$3 = ([0] - $5)
	
.LOOP $label$3:
	if ( ((int_64)*(*($12)) == (int_64)$1) ){ goto $label$2 }
	$10 = $12
	$4 = ($12 + [-24])
	$12 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($0 + [48])
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$5 }
	$5 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [324]) == (int_32)$2), [592])
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	$12 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $50($2, $12)
	CALL eosio_assert(((int_32)*($5 + [324]) == (int_32)$2), [592])
	
.LABEL $label$4
	$10 = [0]
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [1232])
	$3 = ($0 + [488])
	$12 = CALL db_lowerbound_i64(*($0 + [488]), *(($0 + [496])), (int_64)-2042605236735967232, (int_64)0)
	if ( ((int_32)$12 <= (int_32)[-1]) ){ goto $label$16 }
	$11 = CALL $176($3, $12)
	*($17 + [120]) = [0]
	*($17 + [112]) = (int_64)0
	$7 = [0]
	$12 = [0]
	$6 = (*(($11 + [16])) - *($11 + [12]))
	$4 = int_32($6 >> [3])
	if ( ($4 == 0) ){ goto $label$14 }
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$12 }
	$12 = CALL $238($6)
	$7 = ($12 + ($4 << [3]))
	*(($17 + [120])) = $7
	*($17 + [112]) = $12
	*($17 + [116]) = $12
	$10 = *(($11 + [12]))
	$4 = (*(($11 + [16])) - $10)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$15 }
	CALL memcpy($12, $10, $4)
	$10 = ($12 + $4)
	*($17 + [116]) = $10
	if ( ($4 == 0) ){ goto $label$17 }
	$4 = (uint_32($4 >> [3]) << [3])
	
.LOOP $label$18:
	if ( ((int_64)*($12) == (int_64)$1) ){ goto $label$14 }
	$12 = ($12 + [8])
	$4 = ($4 + [-8])
	if ( $4 ){ goto $label$18 }
	
.LABEL $label$17
	$12 = $10
	goto $label$14 
	
.LABEL $label$16
	$1 = *($0)
	*($17 + [216]) = $0
	*($17 + [220]) = ($17 + [232])
	*($17 + [176]) = $1
	CALL eosio_assert(((int_64)*($3) == (int_64)CALL $fimport$4()), [1888])
	*($17 + [112]) = $3
	*($17 + [116]) = ($17 + [216])
	*($17 + [120]) = ($17 + [176])
	*(($12 = CALL $238([40])) + [8 align=4]) = (int_64)0
	*($12 + [16 align=4]) = (int_64)0
	*($12 + [24]) = $3
	CALL $193(($17 + [112]), $12)
	*($17 + [160]) = $12
	$1 = *($12)
	*($17 + [112]) = $1
	$10 = *($12 + [28])
	*($17 + [240]) = $10
	$3 = ($0 + [516])
	$4 = *($3)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [520]))) ){ goto $label$20 }
	*($4 + [8]) = $1
	*($4 + [16]) = $10
	*($17 + [160]) = [0]
	*($4) = $12
	*($3) = ($4 + [24])
	goto $label$19 
	
.LABEL $label$20
	CALL $175(($0 + [512]), ($17 + [160]), ($17 + [112]), ($17 + [240]))
	
.LABEL $label$19
	$12 = *($17 + [160])
	*($17 + [160]) = [0]
	if ( ($12 == 0) ){ goto $label$13 }
	$4 = *($12 + [12])
	if ( ($4 == 0) ){ goto $label$21 }
	*(($12 + [16])) = $4
	CALL $240($4)
	
.LABEL $label$21
	CALL $240($12)
	goto $label$13 
	
.LABEL $label$15
	$10 = $12
	
.LABEL $label$14
	CALL eosio_assert(((int_32)$12 == (int_32)$10), [5360])
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$23 }
	*($10) = $1
	*($17 + [116]) = ($10 + [8])
	goto $label$22 
	
.LABEL $label$23
	CALL $185(($17 + [112]), ($17 + [232]))
	
.LABEL $label$22
	$1 = *($0)
	*($17 + [176]) = ($17 + [112])
	CALL $194($3, $11, $1, ($17 + [176]))
	$12 = *($17 + [112])
	if ( ($12 == 0) ){ goto $label$13 }
	*($17 + [116]) = $12
	CALL $240($12)
	
.LABEL $label$13
	$1 = *($5 + [8])
	$11 = *(($0 + [32]))
	$10 = *(($0 + [36]))
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$24 }
	$12 = ($10 + [-24])
	$3 = ([0] - $11)
	
.LOOP $label$25:
	if ( ((int_64)*(*($12)) == (int_64)$1) ){ goto $label$24 }
	$10 = $12
	$4 = ($12 + [-24])
	$12 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$25 }
	
.LABEL $label$24
	$12 = ($0 + [8])
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$27 }
	$11 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [144]) == (int_32)$12), [592])
	goto $label$26 
	
.LABEL $label$27
	$11 = [0]
	$4 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)4730274944552796160, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$26 }
	$11 = CALL $66($12, $4)
	CALL eosio_assert(((int_32)*($11 + [144]) == (int_32)$12), [592])
	
.LABEL $label$26
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [4192])
	CALL eosio_assert((int_64)(*($11 + [8]) == 0), [5392])
	CALL eosio_assert(((int_64)*($11 + [120]) >= (int_64)*($5 + [56])), [5456])
	CALL eosio_assert(*($11 + [136]), [5520])
	$7 = *(($0 + [592]))
	$10 = *(($0 + [596]))
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$28 }
	$12 = ($10 + [-24])
	$3 = ([0] - $7)
	
.LOOP $label$29:
	if ( ((int_64)*(*($12)) == (int_64)$1) ){ goto $label$28 }
	$10 = $12
	$4 = ($12 + [-24])
	$12 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$29 }
	
.LABEL $label$28
	$12 = ($0 + [568])
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$31 }
	$4 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [32]) == (int_32)$12), [592])
	goto $label$30 
	
.LABEL $label$31
	$4 = [0]
	$10 = CALL db_find_i64(*(($0 + [568])), *(($0 + [576])), (int_64)4730282973792829440, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$30 }
	$4 = CALL $92($12, $10)
	CALL eosio_assert(((int_32)*($4 + [32]) == (int_32)$12), [592])
	
.LABEL $label$30
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [2128])
	CALL eosio_assert(*($4 + [8]), [5568])
	CALL eosio_assert(*($4 + [16]), [5616])
	*($17 + [224]) = (int_64)1397703940
	*($17 + [216]) = (int_64)0
	CALL eosio_assert([1], [512])
	$1 = (int_64)5459781
	$12 = [0]
	
.LOOP $label$34:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$33 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$35 }
	
.LOOP $label$36:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$33 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$36 }
	
.LABEL $label$35
	$10 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$34 }
	goto $label$32 
	
.LABEL $label$33
	$10 = [0]
	
.LABEL $label$32
	CALL eosio_assert($10, [480])
	$1 = *($11 + [16])
	if ( ((int_64)$1 == (int_64)2) ){ goto $label$62 }
	if ( ((int_64)$1 != (int_64)1) ){ goto $label$37 }
	$7 = ($0 + [328])
	$3 = [0]
	$12 = CALL db_lowerbound_i64(*($0 + [328]), *(($0 + [336])), (int_64)6606653791088803840, (int_64)0)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$63 }
	$3 = CALL $168($7, $12)
	
.LABEL $label$63
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [5648])
	$1 = (Rounds 0)(((float_64)((float_64)((float_64)(CASTING float_64)(int_64 *(($5 + [56]))) * (float_64)(CASTING float_64)(int_64 *($5 + [304]))) / (float_64)(CASTING float_64)(int_64 *(($11 + [136])))) * (float_64)(float_64)1e4))
	if ( ((int_64)$1 < (int_64)1) ){ goto $label$58 }
	$15 = *($3 + [8])
	CALL __multi3(($17 + [32]), $15, (int_64)$15 >> (int_64)63), $1, (int_64)$1 >> (int_64)63))
	$1 = (int_64)0
	$8 = *(($3 + [16]))
	$13 = *(($17 + [40]))
	$15 = *($17 + [32])
	CALL eosio_assert(( (uint_64)($15 <= (int_64)4611686018427387904) ? ((int_64)$13 < (int_64)0) : (int_64)($13 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$15 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$13 > (int_64)-1) : ((int_64)$13 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	$9 = ((int_64)$15 / (int_64)10000)
	if ( ((int_64)$15 < (int_64)10000) ){ goto $label$58 }
	CALL eosio_assert(((int_64)$8 == (int_64)*(($3 + [32]))), [3552])
	CALL eosio_assert(((int_64)$9 <= (int_64)*($3 + [24])), [5680])
	$16 = *($0)
	$13 = (int_64)59
	$12 = [1632]
	$14 = (int_64)0
	
.LOOP $label$64:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$69 }
	$10 = *($12)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$68 }
	$10 = ($10 + [165])
	goto $label$67 
	
.LABEL $label$69
	$15 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$66 }
	goto $label$65 
	
.LABEL $label$68
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$67
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$66
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$65
	$12 = ($12 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$64 }
	*($17 + [168]) = $14
	*($17 + [160]) = $16
	$1 = (int_64)0
	$13 = (int_64)59
	$12 = [128]
	$14 = (int_64)0
	
.LOOP $label$70:
	if ( ((uint_64)$1 > (uint_64)(int_64)10) ){ goto $label$75 }
	$10 = *($12)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$74 }
	$10 = ($10 + [165])
	goto $label$73 
	
.LABEL $label$75
	$15 = (int_64)0
	if ( ((int_64)$1 == (int_64)11) ){ goto $label$72 }
	goto $label$71 
	
.LABEL $label$74
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$73
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$72
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$71
	$12 = ($12 + [1])
	$13 = ((int_64)$13 + (int_64)-5)
	$14 = ((int_64)$15 | (int_64)$14)
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$70 }
	$1 = (int_64)0
	$13 = (int_64)59
	$12 = [112]
	$16 = (int_64)0
	
.LOOP $label$76:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$81 }
	$10 = *($12)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$80 }
	$10 = ($10 + [165])
	goto $label$79 
	
.LABEL $label$81
	$15 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$78 }
	goto $label$77 
	
.LABEL $label$80
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$79
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$78
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$77
	$12 = ($12 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$16 = ((int_64)$15 | (int_64)$16)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$76 }
	*(($17 + [104])) = [0]
	*($17 + [96]) = (int_64)0
	$12 = CALL strlen([5712])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$61 }
	*($17 + [96]) = ($12 << [1])
	$10 = (($17 + [96]) | [1])
	if ( $12 ){ goto $label$60 }
	goto $label$59 
	
.LABEL $label$62
	$7 = ($0 + [368])
	$3 = [0]
	$12 = CALL db_lowerbound_i64(*($0 + [368]), *(($0 + [376])), (int_64)-4426675985900982272, (int_64)0)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$82 }
	$3 = CALL $162($7, $12)
	
.LABEL $label$82
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [5824])
	$1 = (Rounds 0)(((float_64)((float_64)((float_64)(CASTING float_64)(int_64 *(($5 + [56]))) * (float_64)(CASTING float_64)(int_64 *($5 + [304]))) / (float_64)(CASTING float_64)(int_64 *(($11 + [136])))) * (float_64)(float_64)1e4))
	if ( ((int_64)$1 < (int_64)1) ){ goto $label$54 }
	$15 = *($3 + [8])
	CALL __multi3(($17 + [80]), $15, (int_64)$15 >> (int_64)63), $1, (int_64)$1 >> (int_64)63))
	$1 = (int_64)0
	$8 = *(($3 + [16]))
	$13 = *(($17 + [88]))
	$15 = *($17 + [80])
	CALL eosio_assert(( (uint_64)($15 <= (int_64)4611686018427387904) ? ((int_64)$13 < (int_64)0) : (int_64)($13 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$15 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$13 > (int_64)-1) : ((int_64)$13 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	$9 = ((int_64)$15 / (int_64)10000)
	if ( ((int_64)$15 < (int_64)10000) ){ goto $label$54 }
	CALL eosio_assert(((int_64)$8 == (int_64)*(($3 + [32]))), [3552])
	CALL eosio_assert(((int_64)$9 <= (int_64)*($3 + [24])), [5680])
	$16 = *($0)
	$13 = (int_64)59
	$12 = [1632]
	$14 = (int_64)0
	
.LOOP $label$83:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$88 }
	$10 = *($12)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$87 }
	$10 = ($10 + [165])
	goto $label$86 
	
.LABEL $label$88
	$15 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$85 }
	goto $label$84 
	
.LABEL $label$87
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$86
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$85
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$84
	$12 = ($12 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$83 }
	*($17 + [168]) = $14
	*($17 + [160]) = $16
	$1 = (int_64)0
	$13 = (int_64)59
	$12 = [128]
	$14 = (int_64)0
	
.LOOP $label$89:
	if ( ((uint_64)$1 > (uint_64)(int_64)10) ){ goto $label$94 }
	$10 = *($12)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$93 }
	$10 = ($10 + [165])
	goto $label$92 
	
.LABEL $label$94
	$15 = (int_64)0
	if ( ((int_64)$1 == (int_64)11) ){ goto $label$91 }
	goto $label$90 
	
.LABEL $label$93
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$92
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$91
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$90
	$12 = ($12 + [1])
	$13 = ((int_64)$13 + (int_64)-5)
	$14 = ((int_64)$15 | (int_64)$14)
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$89 }
	$1 = (int_64)0
	$13 = (int_64)59
	$12 = [112]
	$16 = (int_64)0
	
.LOOP $label$95:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$100 }
	$10 = *($12)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$99 }
	$10 = ($10 + [165])
	goto $label$98 
	
.LABEL $label$100
	$15 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$97 }
	goto $label$96 
	
.LABEL $label$99
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$98
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$97
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$96
	$12 = ($12 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$16 = ((int_64)$15 | (int_64)$16)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$95 }
	*(($17 + [104])) = [0]
	*($17 + [96]) = (int_64)0
	$12 = CALL strlen([5712])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$10 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$57 }
	*($17 + [96]) = ($12 << [1])
	$10 = (($17 + [96]) | [1])
	if ( $12 ){ goto $label$56 }
	goto $label$55 
	
.LABEL $label$61
	$11 = (($12 + [16]) & [-16])
	$10 = CALL $238($11)
	*($17 + [96]) = ($11 | [1])
	*($17 + [104]) = $10
	*($17 + [100]) = $12
	
.LABEL $label$60
	CALL memcpy($10, [5712], $12)
	
.LABEL $label$59
	*(($10 + $12)) = [0]
	*(($17 + [136])) = $8
	*($17 + [112]) = *($0)
	*($17 + [120]) = *($17 + [232])
	$12 = ($17 + [104])
	*(($17 + [152])) = *($12)
	*($17 + [128]) = $9
	*($17 + [144]) = *($17 + [96])
	*($17 + [96]) = [0]
	*($17 + [100]) = [0]
	*($12) = [0]
	$12 = CALL $86(($17 + [176]), ($17 + [160]), $14, $16, ($17 + [112]))
	CALL $87(($17 + [240]), $12)
	$10 = *($17 + [240])
	CALL send_inline($10, (*($17 + [244]) - $10))
	$10 = *($17 + [240])
	if ( ($10 == 0) ){ goto $label$101 }
	*($17 + [244]) = $10
	CALL $240($10)
	
.LABEL $label$101
	$10 = *($12 + [28])
	if ( ($10 == 0) ){ goto $label$102 }
	*(($12 + [32])) = $10
	CALL $240($10)
	
.LABEL $label$102
	$10 = *($12 + [16])
	if ( ($10 == 0) ){ goto $label$103 }
	*(($12 + [20])) = $10
	CALL $240($10)
	
.LABEL $label$103
	if ( ((*(($17 + [144])) & [1]) == 0) ){ goto $label$104 }
	CALL $240(*(($17 + [152])))
	
.LABEL $label$104
	if ( ((*($17 + [96]) & [1]) == 0) ){ goto $label$105 }
	CALL $240(*(($17 + [104])))
	
.LABEL $label$105
	$15 = *($0)
	CALL eosio_assert(((int_32)*($3 + [40]) == (int_32)$7), [768])
	CALL eosio_assert(((int_64)*(($0 + [328])) == (int_64)CALL $fimport$4()), [816])
	$1 = *($3)
	CALL eosio_assert(((int_64)$8 == (int_64)*(($3 + [32]))), [3408])
	$13 = (int_64)
	*(($12 = ($3 + [24]))) = $13(*($12) - $9))
	CALL eosio_assert(((int_64)$13 > (int_64)-4611686018427387904), [3456])
	CALL eosio_assert(((int_64)*($12) < (int_64)4611686018427387904), [3488])
	CALL eosio_assert(((int_64)$1 == (int_64)*($3)), [992])
	*($17 + [184]) = (($17 + [112]) + [40])
	*($17 + [180]) = ($17 + [112])
	*($17 + [176]) = ($17 + [112])
	CALL $140(($17 + [176]), $3)
	CALL db_update_i64(*($3 + [44]), $15, ($17 + [112]), [40])
	$12 = ($0 + [344])
	if ( (uint_64)($1 <= *($12)) ){ goto $label$106 }
	*($12) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$106
	CALL eosio_assert(((int_64)$8 == (int_64)*(($17 + [224]))), [880])
	$1 = ((int_64)*($17 + [216]) + (int_64)$9)
	*($17 + [216]) = $1
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($17 + [216]) < (int_64)4611686018427387904), [960])
	
.LABEL $label$58
	$11 = ($0 + [608])
	$3 = [0]
	$12 = CALL db_lowerbound_i64(*($0 + [608]), *(($0 + [616])), (int_64)6787607164394319872, (int_64)0)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$107 }
	$3 = CALL $170($11, $12)
	
.LABEL $label$107
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [5728])
	$1 = (Rounds 0)(((float_64)((float_64)(CASTING float_64)(uint_64 *($5 + [280])) / (float_64)(CASTING float_64)(uint_64 *(($4 + [8])))) * (float_64)(float_64)1e4))
	if ( ((int_64)$1 < (int_64)1) ){ goto $label$50 }
	$15 = *($3 + [8])
	CALL __multi3(($17 + [16]), $15, (int_64)$15 >> (int_64)63), $1, (int_64)$1 >> (int_64)63))
	$1 = (int_64)0
	$8 = *(($3 + [16]))
	$13 = *((($17 + [16]) + [8]))
	$15 = *($17 + [16])
	CALL eosio_assert(( (uint_64)($15 <= (int_64)4611686018427387904) ? ((int_64)$13 < (int_64)0) : (int_64)($13 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$15 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$13 > (int_64)-1) : ((int_64)$13 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	$9 = ((int_64)$15 / (int_64)10000)
	if ( ((int_64)$15 < (int_64)10000) ){ goto $label$50 }
	CALL eosio_assert(((int_64)$8 == (int_64)*(($3 + [32]))), [3552])
	CALL eosio_assert(((int_64)$9 <= (int_64)*($3 + [24])), [5680])
	$16 = *($0)
	$13 = (int_64)59
	$12 = [1632]
	$14 = (int_64)0
	
.LOOP $label$108:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$113 }
	$10 = *($12)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$112 }
	$10 = ($10 + [165])
	goto $label$111 
	
.LABEL $label$113
	$15 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$110 }
	goto $label$109 
	
.LABEL $label$112
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$111
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$110
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$109
	$12 = ($12 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$108 }
	*($17 + [168]) = $14
	*($17 + [160]) = $16
	$1 = (int_64)0
	$13 = (int_64)59
	$12 = [128]
	$14 = (int_64)0
	
.LOOP $label$114:
	if ( ((uint_64)$1 > (uint_64)(int_64)10) ){ goto $label$119 }
	$10 = *($12)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$118 }
	$10 = ($10 + [165])
	goto $label$117 
	
.LABEL $label$119
	$15 = (int_64)0
	if ( ((int_64)$1 == (int_64)11) ){ goto $label$116 }
	goto $label$115 
	
.LABEL $label$118
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$117
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$116
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$115
	$12 = ($12 + [1])
	$13 = ((int_64)$13 + (int_64)-5)
	$14 = ((int_64)$15 | (int_64)$14)
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$114 }
	$1 = (int_64)0
	$13 = (int_64)59
	$12 = [112]
	$16 = (int_64)0
	
.LOOP $label$120:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$125 }
	$10 = *($12)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$124 }
	$10 = ($10 + [165])
	goto $label$123 
	
.LABEL $label$125
	$15 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$122 }
	goto $label$121 
	
.LABEL $label$124
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$123
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$122
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$121
	$12 = ($12 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$16 = ((int_64)$15 | (int_64)$16)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$120 }
	*(($17 + [104])) = [0]
	*($17 + [96]) = (int_64)0
	$12 = CALL strlen([5760])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$53 }
	*($17 + [96]) = ($12 << [1])
	$10 = (($17 + [96]) | [1])
	if ( $12 ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$57
	$11 = (($12 + [16]) & [-16])
	$10 = CALL $238($11)
	*($17 + [96]) = ($11 | [1])
	*($17 + [104]) = $10
	*($17 + [100]) = $12
	
.LABEL $label$56
	CALL memcpy($10, [5712], $12)
	
.LABEL $label$55
	*(($10 + $12)) = [0]
	*(($17 + [136])) = $8
	*($17 + [112]) = *($0)
	*($17 + [120]) = *($17 + [232])
	$12 = ($17 + [104])
	*(($17 + [152])) = *($12)
	*($17 + [128]) = $9
	*($17 + [144]) = *($17 + [96])
	*($17 + [96]) = [0]
	*($17 + [100]) = [0]
	*($12) = [0]
	$12 = CALL $86(($17 + [176]), ($17 + [160]), $14, $16, ($17 + [112]))
	CALL $87(($17 + [240]), $12)
	$10 = *($17 + [240])
	CALL send_inline($10, (*($17 + [244]) - $10))
	$10 = *($17 + [240])
	if ( ($10 == 0) ){ goto $label$126 }
	*($17 + [244]) = $10
	CALL $240($10)
	
.LABEL $label$126
	$10 = *($12 + [28])
	if ( ($10 == 0) ){ goto $label$127 }
	*(($12 + [32])) = $10
	CALL $240($10)
	
.LABEL $label$127
	$10 = *($12 + [16])
	if ( ($10 == 0) ){ goto $label$128 }
	*(($12 + [20])) = $10
	CALL $240($10)
	
.LABEL $label$128
	if ( ((*(($17 + [144])) & [1]) == 0) ){ goto $label$129 }
	CALL $240(*(($17 + [152])))
	
.LABEL $label$129
	if ( ((*($17 + [96]) & [1]) == 0) ){ goto $label$130 }
	CALL $240(*(($17 + [104])))
	
.LABEL $label$130
	$15 = *($0)
	CALL eosio_assert(((int_32)*($3 + [40]) == (int_32)$7), [768])
	CALL eosio_assert(((int_64)*(($0 + [368])) == (int_64)CALL $fimport$4()), [816])
	$1 = *($3)
	CALL eosio_assert(((int_64)$8 == (int_64)*(($3 + [32]))), [3408])
	$13 = (int_64)
	*(($12 = ($3 + [24]))) = $13(*($12) - $9))
	CALL eosio_assert(((int_64)$13 > (int_64)-4611686018427387904), [3456])
	CALL eosio_assert(((int_64)*($12) < (int_64)4611686018427387904), [3488])
	CALL eosio_assert(((int_64)$1 == (int_64)*($3)), [992])
	*($17 + [184]) = (($17 + [112]) + [40])
	*($17 + [180]) = ($17 + [112])
	*($17 + [176]) = ($17 + [112])
	CALL $140(($17 + [176]), $3)
	CALL db_update_i64(*($3 + [44]), $15, ($17 + [112]), [40])
	$12 = ($0 + [384])
	if ( (uint_64)($1 <= *($12)) ){ goto $label$131 }
	*($12) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$131
	CALL eosio_assert(((int_64)$8 == (int_64)*(($17 + [224]))), [880])
	$1 = ((int_64)*($17 + [216]) + (int_64)$9)
	*($17 + [216]) = $1
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($17 + [216]) < (int_64)4611686018427387904), [960])
	
.LABEL $label$54
	$11 = ($0 + [648])
	$3 = [0]
	$12 = CALL db_lowerbound_i64(*($0 + [648]), *(($0 + [656])), (int_64)-4264226321172877312, (int_64)0)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$132 }
	$3 = CALL $164($11, $12)
	
.LABEL $label$132
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [5856])
	$1 = (Rounds 0)(((float_64)((float_64)(CASTING float_64)(uint_64 *($5 + [280])) / (float_64)(CASTING float_64)(uint_64 *(($4 + [8])))) * (float_64)(float_64)1e4))
	if ( ((int_64)$1 < (int_64)1) ){ goto $label$46 }
	$15 = *($3 + [8])
	CALL __multi3(($17 + [64]), $15, (int_64)$15 >> (int_64)63), $1, (int_64)$1 >> (int_64)63))
	$1 = (int_64)0
	$8 = *(($3 + [16]))
	$13 = *((($17 + [64]) + [8]))
	$15 = *($17 + [64])
	CALL eosio_assert(( (uint_64)($15 <= (int_64)4611686018427387904) ? ((int_64)$13 < (int_64)0) : (int_64)($13 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$15 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$13 > (int_64)-1) : ((int_64)$13 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	$9 = ((int_64)$15 / (int_64)10000)
	if ( ((int_64)$15 < (int_64)10000) ){ goto $label$46 }
	CALL eosio_assert(((int_64)$8 == (int_64)*(($3 + [32]))), [3552])
	CALL eosio_assert(((int_64)$9 <= (int_64)*($3 + [24])), [5680])
	$16 = *($0)
	$13 = (int_64)59
	$12 = [1632]
	$14 = (int_64)0
	
.LOOP $label$133:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$138 }
	$10 = *($12)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$137 }
	$10 = ($10 + [165])
	goto $label$136 
	
.LABEL $label$138
	$15 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$135 }
	goto $label$134 
	
.LABEL $label$137
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$136
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$135
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$134
	$12 = ($12 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$133 }
	*($17 + [168]) = $14
	*($17 + [160]) = $16
	$1 = (int_64)0
	$13 = (int_64)59
	$12 = [128]
	$14 = (int_64)0
	
.LOOP $label$139:
	if ( ((uint_64)$1 > (uint_64)(int_64)10) ){ goto $label$144 }
	$10 = *($12)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$143 }
	$10 = ($10 + [165])
	goto $label$142 
	
.LABEL $label$144
	$15 = (int_64)0
	if ( ((int_64)$1 == (int_64)11) ){ goto $label$141 }
	goto $label$140 
	
.LABEL $label$143
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$142
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$141
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$140
	$12 = ($12 + [1])
	$13 = ((int_64)$13 + (int_64)-5)
	$14 = ((int_64)$15 | (int_64)$14)
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$139 }
	$1 = (int_64)0
	$13 = (int_64)59
	$12 = [112]
	$16 = (int_64)0
	
.LOOP $label$145:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$150 }
	$10 = *($12)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$149 }
	$10 = ($10 + [165])
	goto $label$148 
	
.LABEL $label$150
	$15 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$147 }
	goto $label$146 
	
.LABEL $label$149
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$148
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$147
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$146
	$12 = ($12 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$16 = ((int_64)$15 | (int_64)$16)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$145 }
	*(($17 + [104])) = [0]
	*($17 + [96]) = (int_64)0
	$12 = CALL strlen([5760])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$8 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$49 }
	*($17 + [96]) = ($12 << [1])
	$10 = (($17 + [96]) | [1])
	if ( $12 ){ goto $label$48 }
	goto $label$47 
	
.LABEL $label$53
	$7 = (($12 + [16]) & [-16])
	$10 = CALL $238($7)
	*($17 + [96]) = ($7 | [1])
	*($17 + [104]) = $10
	*($17 + [100]) = $12
	
.LABEL $label$52
	CALL memcpy($10, [5760], $12)
	
.LABEL $label$51
	*(($10 + $12)) = [0]
	*(($17 + [136])) = $8
	*($17 + [112]) = *($0)
	*($17 + [120]) = *($17 + [232])
	$12 = ($17 + [104])
	*(($17 + [152])) = *($12)
	*($17 + [128]) = $9
	*($17 + [144]) = *($17 + [96])
	*($17 + [96]) = [0]
	*($17 + [100]) = [0]
	*($12) = [0]
	$12 = CALL $86(($17 + [176]), ($17 + [160]), $14, $16, ($17 + [112]))
	CALL $87(($17 + [240]), $12)
	$10 = *($17 + [240])
	CALL send_inline($10, (*($17 + [244]) - $10))
	$10 = *($17 + [240])
	if ( ($10 == 0) ){ goto $label$151 }
	*($17 + [244]) = $10
	CALL $240($10)
	
.LABEL $label$151
	$10 = *($12 + [28])
	if ( ($10 == 0) ){ goto $label$152 }
	*(($12 + [32])) = $10
	CALL $240($10)
	
.LABEL $label$152
	$10 = *($12 + [16])
	if ( ($10 == 0) ){ goto $label$153 }
	*(($12 + [20])) = $10
	CALL $240($10)
	
.LABEL $label$153
	if ( ((*(($17 + [144])) & [1]) == 0) ){ goto $label$154 }
	CALL $240(*(($17 + [152])))
	
.LABEL $label$154
	if ( ((*($17 + [96]) & [1]) == 0) ){ goto $label$155 }
	CALL $240(*(($17 + [104])))
	
.LABEL $label$155
	$15 = *($0)
	CALL eosio_assert(((int_32)*($3 + [40]) == (int_32)$11), [768])
	CALL eosio_assert(((int_64)*(($0 + [608])) == (int_64)CALL $fimport$4()), [816])
	$1 = *($3)
	CALL eosio_assert(((int_64)$8 == (int_64)*(($3 + [32]))), [3408])
	$13 = (int_64)
	*(($12 = ($3 + [24]))) = $13(*($12) - $9))
	CALL eosio_assert(((int_64)$13 > (int_64)-4611686018427387904), [3456])
	CALL eosio_assert(((int_64)*($12) < (int_64)4611686018427387904), [3488])
	CALL eosio_assert(((int_64)$1 == (int_64)*($3)), [992])
	*($17 + [184]) = (($17 + [112]) + [40])
	*($17 + [180]) = ($17 + [112])
	*($17 + [176]) = ($17 + [112])
	CALL $140(($17 + [176]), $3)
	CALL db_update_i64(*($3 + [44]), $15, ($17 + [112]), [40])
	$12 = ($0 + [624])
	if ( (uint_64)($1 <= *($12)) ){ goto $label$156 }
	*($12) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$156
	CALL eosio_assert(((int_64)$8 == (int_64)*(($17 + [224]))), [880])
	$1 = ((int_64)*($17 + [216]) + (int_64)$9)
	*($17 + [216]) = $1
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($17 + [216]) < (int_64)4611686018427387904), [960])
	
.LABEL $label$50
	$3 = ($0 + [688])
	$10 = [0]
	$12 = CALL db_lowerbound_i64(*($0 + [688]), *(($0 + [696])), (int_64)6787721896711746944, (int_64)0)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$157 }
	$10 = CALL $172($3, $12)
	
.LABEL $label$157
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [5776])
	$1 = (Rounds 0)(((float_64)((float_64)(CASTING float_64)(uint_64 *($5 + [288])) / (float_64)(CASTING float_64)(uint_64 *(($4 + [16])))) * (float_64)(float_64)1e4))
	if ( ((int_64)$1 < (int_64)1) ){ goto $label$42 }
	$15 = *($10 + [8])
	CALL __multi3($17, $15, (int_64)$15 >> (int_64)63), $1, (int_64)$1 >> (int_64)63))
	$1 = (int_64)0
	$8 = *(($10 + [16]))
	$13 = *(($17 + [8]))
	$15 = *($17)
	CALL eosio_assert(( (uint_64)($15 <= (int_64)4611686018427387904) ? ((int_64)$13 < (int_64)0) : (int_64)($13 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$15 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$13 > (int_64)-1) : ((int_64)$13 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	$9 = ((int_64)$15 / (int_64)10000)
	if ( ((int_64)$15 < (int_64)10000) ){ goto $label$42 }
	CALL eosio_assert(((int_64)$8 == (int_64)*(($10 + [32]))), [3552])
	CALL eosio_assert(((int_64)$9 <= (int_64)*($10 + [24])), [5680])
	$16 = *($0)
	$13 = (int_64)59
	$12 = [1632]
	$14 = (int_64)0
	
.LOOP $label$158:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$163 }
	$4 = *($12)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$162 }
	$4 = ($4 + [165])
	goto $label$161 
	
.LABEL $label$163
	$15 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$160 }
	goto $label$159 
	
.LABEL $label$162
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$161
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$160
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$159
	$12 = ($12 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$158 }
	*($17 + [168]) = $14
	*($17 + [160]) = $16
	$1 = (int_64)0
	$13 = (int_64)59
	$12 = [128]
	$14 = (int_64)0
	
.LOOP $label$164:
	if ( ((uint_64)$1 > (uint_64)(int_64)10) ){ goto $label$169 }
	$4 = *($12)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$168 }
	$4 = ($4 + [165])
	goto $label$167 
	
.LABEL $label$169
	$15 = (int_64)0
	if ( ((int_64)$1 == (int_64)11) ){ goto $label$166 }
	goto $label$165 
	
.LABEL $label$168
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$167
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$166
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$165
	$12 = ($12 + [1])
	$13 = ((int_64)$13 + (int_64)-5)
	$14 = ((int_64)$15 | (int_64)$14)
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$164 }
	$1 = (int_64)0
	$13 = (int_64)59
	$12 = [112]
	$16 = (int_64)0
	
.LOOP $label$170:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$175 }
	$4 = *($12)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$174 }
	$4 = ($4 + [165])
	goto $label$173 
	
.LABEL $label$175
	$15 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$172 }
	goto $label$171 
	
.LABEL $label$174
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$173
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$172
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$171
	$12 = ($12 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$16 = ((int_64)$15 | (int_64)$16)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$170 }
	*(($17 + [104])) = [0]
	*($17 + [96]) = (int_64)0
	$12 = CALL strlen([5808])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$45 }
	*($17 + [96]) = ($12 << [1])
	$4 = (($17 + [96]) | [1])
	if ( $12 ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$49
	$7 = (($12 + [16]) & [-16])
	$10 = CALL $238($7)
	*($17 + [96]) = ($7 | [1])
	*($17 + [104]) = $10
	*($17 + [100]) = $12
	
.LABEL $label$48
	CALL memcpy($10, [5760], $12)
	
.LABEL $label$47
	*(($10 + $12)) = [0]
	*(($17 + [136])) = $8
	*($17 + [112]) = *($0)
	*($17 + [120]) = *($17 + [232])
	$12 = ($17 + [104])
	*(($17 + [152])) = *($12)
	*($17 + [128]) = $9
	*($17 + [144]) = *($17 + [96])
	*($17 + [96]) = [0]
	*($17 + [100]) = [0]
	*($12) = [0]
	$12 = CALL $86(($17 + [176]), ($17 + [160]), $14, $16, ($17 + [112]))
	CALL $87(($17 + [240]), $12)
	$10 = *($17 + [240])
	CALL send_inline($10, (*($17 + [244]) - $10))
	$10 = *($17 + [240])
	if ( ($10 == 0) ){ goto $label$176 }
	*($17 + [244]) = $10
	CALL $240($10)
	
.LABEL $label$176
	$10 = *($12 + [28])
	if ( ($10 == 0) ){ goto $label$177 }
	*(($12 + [32])) = $10
	CALL $240($10)
	
.LABEL $label$177
	$10 = *($12 + [16])
	if ( ($10 == 0) ){ goto $label$178 }
	*(($12 + [20])) = $10
	CALL $240($10)
	
.LABEL $label$178
	if ( ((*(($17 + [144])) & [1]) == 0) ){ goto $label$179 }
	CALL $240(*(($17 + [152])))
	
.LABEL $label$179
	if ( ((*($17 + [96]) & [1]) == 0) ){ goto $label$180 }
	CALL $240(*(($17 + [104])))
	
.LABEL $label$180
	$15 = *($0)
	CALL eosio_assert(((int_32)*($3 + [40]) == (int_32)$11), [768])
	CALL eosio_assert(((int_64)*(($0 + [648])) == (int_64)CALL $fimport$4()), [816])
	$1 = *($3)
	CALL eosio_assert(((int_64)$8 == (int_64)*(($3 + [32]))), [3408])
	$13 = (int_64)
	*(($12 = ($3 + [24]))) = $13(*($12) - $9))
	CALL eosio_assert(((int_64)$13 > (int_64)-4611686018427387904), [3456])
	CALL eosio_assert(((int_64)*($12) < (int_64)4611686018427387904), [3488])
	CALL eosio_assert(((int_64)$1 == (int_64)*($3)), [992])
	*($17 + [184]) = (($17 + [112]) + [40])
	*($17 + [180]) = ($17 + [112])
	*($17 + [176]) = ($17 + [112])
	CALL $140(($17 + [176]), $3)
	CALL db_update_i64(*($3 + [44]), $15, ($17 + [112]), [40])
	$12 = ($0 + [664])
	if ( (uint_64)($1 <= *($12)) ){ goto $label$181 }
	*($12) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$181
	CALL eosio_assert(((int_64)$8 == (int_64)*(($17 + [224]))), [880])
	$1 = ((int_64)*($17 + [216]) + (int_64)$9)
	*($17 + [216]) = $1
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($17 + [216]) < (int_64)4611686018427387904), [960])
	
.LABEL $label$46
	$3 = ($0 + [728])
	$10 = [0]
	$12 = CALL db_lowerbound_i64(*($0 + [728]), *(($0 + [736])), (int_64)-4264111588855450240, (int_64)0)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$182 }
	$10 = CALL $166($3, $12)
	
.LABEL $label$182
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [5888])
	$1 = (Rounds 0)(((float_64)((float_64)(CASTING float_64)(uint_64 *($5 + [288])) / (float_64)(CASTING float_64)(uint_64 *(($4 + [16])))) * (float_64)(float_64)1e4))
	if ( ((int_64)$1 < (int_64)1) ){ goto $label$38 }
	$15 = *($10 + [8])
	CALL __multi3(($17 + [48]), $15, (int_64)$15 >> (int_64)63), $1, (int_64)$1 >> (int_64)63))
	$1 = (int_64)0
	$8 = *(($10 + [16]))
	$13 = *(($17 + [56]))
	$15 = *($17 + [48])
	CALL eosio_assert(( (uint_64)($15 <= (int_64)4611686018427387904) ? ((int_64)$13 < (int_64)0) : (int_64)($13 == 0) ), [1968])
	CALL eosio_assert(( ((uint_64)$15 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$13 > (int_64)-1) : ((int_64)$13 == (int_64)-1) ), [2000])
	CALL eosio_assert([1], [2032])
	CALL eosio_assert([1], [2048])
	$9 = ((int_64)$15 / (int_64)10000)
	if ( ((int_64)$15 < (int_64)10000) ){ goto $label$38 }
	CALL eosio_assert(((int_64)$8 == (int_64)*(($10 + [32]))), [3552])
	CALL eosio_assert(((int_64)$9 <= (int_64)*($10 + [24])), [5680])
	$16 = *($0)
	$13 = (int_64)59
	$12 = [1632]
	$14 = (int_64)0
	
.LOOP $label$183:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$188 }
	$4 = *($12)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$187 }
	$4 = ($4 + [165])
	goto $label$186 
	
.LABEL $label$188
	$15 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$185 }
	goto $label$184 
	
.LABEL $label$187
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$186
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$185
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$184
	$12 = ($12 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$183 }
	*($17 + [168]) = $14
	*($17 + [160]) = $16
	$1 = (int_64)0
	$13 = (int_64)59
	$12 = [128]
	$14 = (int_64)0
	
.LOOP $label$189:
	if ( ((uint_64)$1 > (uint_64)(int_64)10) ){ goto $label$194 }
	$4 = *($12)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$193 }
	$4 = ($4 + [165])
	goto $label$192 
	
.LABEL $label$194
	$15 = (int_64)0
	if ( ((int_64)$1 == (int_64)11) ){ goto $label$191 }
	goto $label$190 
	
.LABEL $label$193
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$192
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$191
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$190
	$12 = ($12 + [1])
	$13 = ((int_64)$13 + (int_64)-5)
	$14 = ((int_64)$15 | (int_64)$14)
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$189 }
	$1 = (int_64)0
	$13 = (int_64)59
	$12 = [112]
	$16 = (int_64)0
	
.LOOP $label$195:
	if ( ((uint_64)$1 > (uint_64)(int_64)7) ){ goto $label$200 }
	$4 = *($12)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$199 }
	$4 = ($4 + [165])
	goto $label$198 
	
.LABEL $label$200
	$15 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$197 }
	goto $label$196 
	
.LABEL $label$199
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$198
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$197
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$196
	$12 = ($12 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$16 = ((int_64)$15 | (int_64)$16)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$195 }
	*(($17 + [104])) = [0]
	*($17 + [96]) = (int_64)0
	$12 = CALL strlen([5808])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$41 }
	*($17 + [96]) = ($12 << [1])
	$4 = (($17 + [96]) | [1])
	if ( $12 ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$45
	$11 = (($12 + [16]) & [-16])
	$4 = CALL $238($11)
	*($17 + [96]) = ($11 | [1])
	*($17 + [104]) = $4
	*($17 + [100]) = $12
	
.LABEL $label$44
	CALL memcpy($4, [5808], $12)
	
.LABEL $label$43
	*(($4 + $12)) = [0]
	*(($17 + [136])) = $8
	*($17 + [112]) = *($0)
	*($17 + [120]) = *($17 + [232])
	$12 = ($17 + [104])
	*(($17 + [152])) = *($12)
	*($17 + [128]) = $9
	*($17 + [144]) = *($17 + [96])
	*($17 + [96]) = [0]
	*($17 + [100]) = [0]
	*($12) = [0]
	$12 = CALL $86(($17 + [176]), ($17 + [160]), $14, $16, ($17 + [112]))
	CALL $87(($17 + [240]), $12)
	$4 = *($17 + [240])
	CALL send_inline($4, (*($17 + [244]) - $4))
	$4 = *($17 + [240])
	if ( ($4 == 0) ){ goto $label$201 }
	*($17 + [244]) = $4
	CALL $240($4)
	
.LABEL $label$201
	$4 = *($12 + [28])
	if ( ($4 == 0) ){ goto $label$202 }
	*(($12 + [32])) = $4
	CALL $240($4)
	
.LABEL $label$202
	$4 = *($12 + [16])
	if ( ($4 == 0) ){ goto $label$203 }
	*(($12 + [20])) = $4
	CALL $240($4)
	
.LABEL $label$203
	if ( ((*(($17 + [144])) & [1]) == 0) ){ goto $label$204 }
	CALL $240(*(($17 + [152])))
	
.LABEL $label$204
	if ( ((*($17 + [96]) & [1]) == 0) ){ goto $label$205 }
	CALL $240(*(($17 + [104])))
	
.LABEL $label$205
	$15 = *($0)
	CALL eosio_assert(((int_32)*($10 + [40]) == (int_32)$3), [768])
	CALL eosio_assert(((int_64)*(($0 + [688])) == (int_64)CALL $fimport$4()), [816])
	$1 = *($10)
	CALL eosio_assert(((int_64)$8 == (int_64)*(($10 + [32]))), [3408])
	$13 = (int_64)
	*(($12 = ($10 + [24]))) = $13(*($12) - $9))
	CALL eosio_assert(((int_64)$13 > (int_64)-4611686018427387904), [3456])
	CALL eosio_assert(((int_64)*($12) < (int_64)4611686018427387904), [3488])
	CALL eosio_assert(((int_64)$1 == (int_64)*($10)), [992])
	*($17 + [184]) = (($17 + [112]) + [40])
	*($17 + [180]) = ($17 + [112])
	*($17 + [176]) = ($17 + [112])
	CALL $140(($17 + [176]), $10)
	CALL db_update_i64(*($10 + [44]), $15, ($17 + [112]), [40])
	$12 = ($0 + [704])
	if ( (uint_64)($1 <= *($12)) ){ goto $label$206 }
	*($12) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$206
	CALL eosio_assert(((int_64)$8 == (int_64)*(($17 + [224]))), [880])
	$1 = ((int_64)*($17 + [216]) + (int_64)$9)
	*($17 + [216]) = $1
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($17 + [216]) < (int_64)4611686018427387904), [960])
	
.LABEL $label$42
	$1 = *($0)
	*($17 + [112]) = ($17 + [216])
	CALL $195($2, $5, $1, ($17 + [112]))
	goto $label$37 
	
.LABEL $label$41
	$11 = (($12 + [16]) & [-16])
	$4 = CALL $238($11)
	*($17 + [96]) = ($11 | [1])
	*($17 + [104]) = $4
	*($17 + [100]) = $12
	
.LABEL $label$40
	CALL memcpy($4, [5808], $12)
	
.LABEL $label$39
	*(($4 + $12)) = [0]
	*(($17 + [136])) = $8
	*($17 + [112]) = *($0)
	*($17 + [120]) = *($17 + [232])
	$12 = ($17 + [104])
	*(($17 + [152])) = *($12)
	*($17 + [128]) = $9
	*($17 + [144]) = *($17 + [96])
	*($17 + [96]) = [0]
	*($17 + [100]) = [0]
	*($12) = [0]
	$12 = CALL $86(($17 + [176]), ($17 + [160]), $14, $16, ($17 + [112]))
	CALL $87(($17 + [240]), $12)
	$4 = *($17 + [240])
	CALL send_inline($4, (*($17 + [244]) - $4))
	$4 = *($17 + [240])
	if ( ($4 == 0) ){ goto $label$207 }
	*($17 + [244]) = $4
	CALL $240($4)
	
.LABEL $label$207
	$4 = *($12 + [28])
	if ( ($4 == 0) ){ goto $label$208 }
	*(($12 + [32])) = $4
	CALL $240($4)
	
.LABEL $label$208
	$4 = *($12 + [16])
	if ( ($4 == 0) ){ goto $label$209 }
	*(($12 + [20])) = $4
	CALL $240($4)
	
.LABEL $label$209
	if ( ((*(($17 + [144])) & [1]) == 0) ){ goto $label$210 }
	CALL $240(*(($17 + [152])))
	
.LABEL $label$210
	if ( ((*($17 + [96]) & [1]) == 0) ){ goto $label$211 }
	CALL $240(*(($17 + [104])))
	
.LABEL $label$211
	$15 = *($0)
	CALL eosio_assert(((int_32)*($10 + [40]) == (int_32)$3), [768])
	CALL eosio_assert(((int_64)*(($0 + [728])) == (int_64)CALL $fimport$4()), [816])
	$1 = *($10)
	CALL eosio_assert(((int_64)$8 == (int_64)*(($10 + [32]))), [3408])
	$13 = (int_64)
	*(($12 = ($10 + [24]))) = $13(*($12) - $9))
	CALL eosio_assert(((int_64)$13 > (int_64)-4611686018427387904), [3456])
	CALL eosio_assert(((int_64)*($12) < (int_64)4611686018427387904), [3488])
	CALL eosio_assert(((int_64)$1 == (int_64)*($10)), [992])
	*($17 + [184]) = (($17 + [112]) + [40])
	*($17 + [180]) = ($17 + [112])
	*($17 + [176]) = ($17 + [112])
	CALL $140(($17 + [176]), $10)
	CALL db_update_i64(*($10 + [44]), $15, ($17 + [112]), [40])
	$12 = ($0 + [744])
	if ( (uint_64)($1 <= *($12)) ){ goto $label$212 }
	*($12) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$212
	CALL eosio_assert(((int_64)$8 == (int_64)*(($17 + [224]))), [880])
	$1 = ((int_64)*($17 + [216]) + (int_64)$9)
	*($17 + [216]) = $1
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($17 + [216]) < (int_64)4611686018427387904), [960])
	
.LABEL $label$38
	$1 = *($0)
	*($17 + [112]) = ($17 + [216])
	CALL $196($2, $5, $1, ($17 + [112]))
	
.LABEL $label$37
	*([0] + [4]) = ($17 + [256])
	return (unreachable)
	
.LABEL $label$12
	CALL $244(($17 + [112]))
	
.LABEL $label$11
	CALL $242(($17 + [96]))
	
.LABEL $label$10
	CALL $242(($17 + [96]))
	
.LABEL $label$9
	CALL $242(($17 + [96]))
	
.LABEL $label$8
	CALL $242(($17 + [96]))
	
.LABEL $label$7
	CALL $242(($17 + [96]))
	
.LABEL $label$6
	CALL $242(($17 + [96]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC _ZN7campwar6signupEyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [128])
	*([0] + [4]) = $10
	*($10 + [80]) = $1
	*($10 + [72]) = $2
	*($10 + [64]) = $3
	CALL require_auth($1)
	CALL eosio_assert(((int_64)$1 != (int_64)$2), [6192])
	$9 = [0]
	$7 = CALL db_lowerbound_i64(*($0 + [128]), *(($0 + [136])), (int_64)4982871454518345728, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $78(($0 + [128]), $7)
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [2128])
	CALL eosio_assert(*($9 + [8]), [6224])
	$5 = *(($0 + [72]))
	$8 = *(($0 + [76]))
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$2 }
	$9 = ($8 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$3:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$2 }
	$8 = $9
	$7 = ($9 + [-24])
	$9 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	$4 = ($0 + [48])
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$5 }
	$9 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [324]) == (int_32)$4), [592])
	goto $label$4 
	
.LABEL $label$5
	$9 = [0]
	$7 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-6030912142679474176, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$9 = CALL $50($4, $7)
	CALL eosio_assert(((int_32)*($9 + [324]) == (int_32)$4), [592])
	
.LABEL $label$4
	CALL eosio_assert(($9 == 0), [6256])
	$5 = *(($0 + [32]))
	$8 = *(($0 + [36]))
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$6 }
	$9 = ($8 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$7:
	if ( ((int_64)*(*($9)) == (int_64)$3) ){ goto $label$6 }
	$8 = $9
	$7 = ($9 + [-24])
	$9 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = ($0 + [8])
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$9 }
	$9 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [144]) == (int_32)$7), [592])
	goto $label$8 
	
.LABEL $label$9
	$9 = [0]
	$8 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)4730274944552796160, $3)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$8 }
	$9 = CALL $66($7, $8)
	CALL eosio_assert(((int_32)*($9 + [144]) == (int_32)$7), [592])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [4192])
	$3 = CALL _ZN7campwar8cal_mineEx($9, (int_64)100)
	*($10 + [56]) = (int_64)1413893636
	*($10 + [48]) = $3
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [512])
	$3 = (int_64)5523022
	$9 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	
.LOOP $label$14:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$14 }
	
.LABEL $label$13
	$7 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	$7 = [0]
	
.LABEL $label$10
	CALL eosio_assert($7, [480])
	$3 = *((($10 + [48]) + [8]))
	*((($10 + [32]) + [8])) = $3
	*(($10 + [8])) = $3
	$3 = *($10 + [48])
	*($10 + [32]) = $3
	*($10) = $3
	CALL _ZN7campwar15distribute_mineEN5eosio4nameENS0_5assetE($0, $1, $10)
	$3 = *($0)
	*($10 + [20]) = ($10 + [72])
	*($10 + [16]) = ($10 + [80])
	*($10 + [24]) = ($10 + [64])
	*($10 + [28]) = ($10 + [48])
	*($10 + [120]) = $3
	CALL eosio_assert(((int_64)*(($0 + [48])) == (int_64)CALL $fimport$4()), [1888])
	*($10 + [96]) = $4
	*($10 + [100]) = ($10 + [16])
	*($10 + [104]) = ($10 + [120])
	$9 = CALL $238([336])
	CALL $52($9)
	*($9 + [324]) = $4
	CALL $203(($10 + [96]), $9)
	*($10 + [112]) = $9
	$3 = *($9)
	*($10 + [96]) = $3
	$8 = *($9 + [328])
	*($10 + [92]) = $8
	$6 = ($0 + [76])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [80]))) ){ goto $label$16 }
	*($7 + [8]) = $3
	*($7 + [16]) = $8
	*($10 + [112]) = [0]
	*($7) = $9
	*($6) = ($7 + [24])
	goto $label$15 
	
.LABEL $label$16
	CALL $54(($0 + [72]), ($10 + [112]), ($10 + [96]), ($10 + [92]))
	
.LABEL $label$15
	$9 = *($10 + [112])
	*($10 + [112]) = [0]
	if ( ($9 == 0) ){ goto $label$17 }
	$7 = *($9 + [312])
	if ( ($7 == 0) ){ goto $label$18 }
	*(($9 + [316])) = $7
	CALL $240($7)
	
.LABEL $label$18
	CALL $240($9)
	
.LABEL $label$17
	*([0] + [4]) = ($10 + [128])
}

int_32 .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$8 = (*([0] + [4]) - [32])
	$10 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$9 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$8 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = ($8 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$2
	CALL read_action_data($8, $1)
	
.LABEL $label$1
	*($10 + [16]) = (int_64)0
	*($10 + [8]) = (int_64)0
	*($10 + [24]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [448])
	CALL memcpy(($10 + [8]), $8, [8])
	$6 = ($1 & [-8])
	CALL eosio_assert(((int_32)$6 != (int_32)[8]), [448])
	$7 = (($10 + [8]) + [8])
	CALL memcpy($7, ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$6 != (int_32)[16]), [448])
	$6 = (($10 + [8]) + [16])
	CALL memcpy($6, ($8 + [16]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($8)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$5 = *($6)
	$4 = *($7)
	$3 = *($10 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$9 = *((*($1) + $9))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $5), (int_64 $9))
	*([0] + [4]) = ($10 + [32])
	return [1]
}

void .FUNC _ZN7campwar6foobarEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	CALL require_auth(*($0))
	$5 = CALL db_lowerbound_i64(*($0 + [128]), *(($0 + [136])), (int_64)4982871454518345728, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$3 = ($0 + [128])
	$5 = CALL $78($3, $5)
	$6 = *($0)
	CALL eosio_assert(((int_32)*($5 + [72]) == (int_32)$3), [768])
	CALL eosio_assert(((int_64)*($3) == (int_64)CALL $fimport$4()), [816])
	*($5 + [8]) = [0]
	$4 = *($5)
	CALL eosio_assert([1], [992])
	*($7 + [72]) = ($7 + [61])
	*($7 + [68]) = $7
	*($7 + [64]) = $7
	CALL $151(($7 + [64]), $5)
	CALL db_update_i64(*($5 + [76]), $6, $7, [61])
	$0 = ($0 + [144])
	if ( (uint_64)($4 <= *($0)) ){ goto $label$1 }
	*($0) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [80])
}

int_32 .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = (*([0] + [4]) - [16])
	$8 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	$6 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8 + [8]) = (int_64)0
	*($8) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [448])
	CALL memcpy($8, $6, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [448])
	$5 = ($8 + [8])
	CALL memcpy($5, ($6 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($5)
	$3 = *($8)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$7 = *((*($1) + $7))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $7))
	*([0] + [4]) = ($8 + [16])
	return [1]
}

int_32 .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [80])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	CALL $204(($6 + [16]), $4, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	*(($1 = (($6 + [32]) + [8]))) = *((($6 + [16]) + [8]))
	*($6 + [32]) = *($6 + [16])
	*((($6 + [48]) + [8])) = *($1)
	*($6 + [48]) = *($6 + [32])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	$3 = *((($6 + [48]) + [8]))
	*((($6 + [64]) + [8])) = $3
	*(($6 + [8])) = $3
	$3 = *($6 + [48])
	*($6 + [64]) = $3
	*($6) = $3
	CALL void $1((int_32 $6), (int_32 $5))
	*([0] + [4]) = ($6 + [80])
	return [1]
}

void .FUNC _ZN7campwar9addrewardEN5eosio5assetE (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	*([0] + [4]) = $9
	CALL require_auth(*($0))
	$2 = *($1 + [8])
	CALL eosio_assert(((int_64)$2 == (int_64)1397703940), [3264])
	$8 = [0]
	$7 = [0]
	$3 = *($1)
	if ( ((uint_64)((int_64)$3 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$6 = (uint_64)$2 >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [1152])
	CALL eosio_assert(((int_64)$3 > (int_64)0), [3296])
	$1 = ($0 + [288])
	$7 = CALL db_lowerbound_i64(*($0 + [288]), *(($0 + [296])), (int_64)-4992121823200788480, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$6 }
	$8 = CALL $144($1, $7)
	
.LABEL $label$6
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [1264])
	$4 = *($0)
	CALL eosio_assert(((int_32)*($8 + [40]) == (int_32)$1), [768])
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$4()), [816])
	$6 = *($8)
	CALL eosio_assert(((int_64)$2 == (int_64)*(($8 + [16]))), [880])
	$5 = ((int_64)*($8 + [8]) + (int_64)$3)
	*($8 + [8]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($8 + [8]) < (int_64)4611686018427387904), [960])
	CALL eosio_assert(((int_64)$2 == (int_64)*(($8 + [32]))), [880])
	$3 = ((int_64)*($8 + [24]) + (int_64)$3)
	*($8 + [24]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($8 + [24]) < (int_64)4611686018427387904), [960])
	CALL eosio_assert(((int_64)$6 == (int_64)*($8)), [992])
	*($9 + [56]) = ($9 + [40])
	*($9 + [52]) = $9
	*($9 + [48]) = $9
	CALL $140(($9 + [48]), $8)
	CALL db_update_i64(*($8 + [44]), $4, $9, [40])
	$1 = ($0 + [304])
	if ( (uint_64)($6 <= *($1)) ){ goto $label$7 }
	*($1) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*([0] + [4]) = ($9 + [64])
}

void .FUNC $215 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [240])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [288])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [352])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $240($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $240($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [44]))
}

void .FUNC $214 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [240])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [288])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [352])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $240($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $240($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [44]))
}

void .FUNC $217 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [240])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [288])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [352])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $240($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $240($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [44]))
}

void .FUNC $216 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [240])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [288])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [352])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $240($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $240($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [44]))
}

void .FUNC $211 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	$7 = $8
	*([0] + [4]) = $8
	CALL eosio_assert(((int_32)*($1 + [144]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	*($1 + [32]) = *(*($3))
	$4 = *($1)
	if ( (*([0] + [1332]) == 0) ){ goto $label$2 }
	$6 = *([0] + [1336])
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL current_time()
	*([0] + [1332]) = [1]
	$6 = (CASTING uint_32)(uint_64 ((uint_64)$5 / (uint_64)(int_64)1000000))
	*([0] + [1336]) = $6
	
.LABEL $label$1
	*($1 + [56]) = $6
	$5 = *(*($3 + [4]))
	*($1 + [96]) = $6
	*($1 + [72]) = $5
	if ( ((int_64)*(*($3)) != (int_64)0) ){ goto $label$3 }
	*($1 + [8]) = (int_64)0
	
.LABEL $label$3
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [992])
	$8 = $8
	$3 = ($8 + [-144])
	*([0] + [4]) = $3
	*($7 + [4]) = $3
	*($7) = $3
	*($7 + [8]) = ($8 + [-8])
	CALL $80($7, $1)
	CALL db_update_i64(*($1 + [148]), $2, $3, [136])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [16])
}

void .FUNC _ZN7campwar17weather_influenceEx (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [160])
	*([0] + [4]) = $11
	CALL eosio_assert((uint_64)($1 <= (int_64)7), [6480])
	$2 = ($0 + [8])
	$3 = (int_64)0
	$10 = [0]
	$9 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)4730274944552796160, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$1 }
	CALL $66($2, $9)
	$10 = [1]
	
.LABEL $label$1
	CALL eosio_assert($10, [6512])
	$4 = (int_64)0
	$5 = (int_64)0
	$1 = ((int_64)$1 + (int_64)-1)
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$2 }
	$10 = ((CASTING uint_32)(uint_64 $1) << [3])
	$5 = *(($10 + [6640]))
	$4 = *(($10 + [6592]))
	$3 = *(($10 + [6544]))
	
.LABEL $label$2
	$7 = ($0 + [8])
	$10 = CALL db_lowerbound_i64(*($7), *(($0 + [16])), (int_64)4730274944552796160, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$3 }
	$10 = CALL $66($2, $10)
	$6 = ($11 + [136])
	$9 = ($0 + [24])
	
.LOOP $label$4:
	$8 = *($0)
	CALL eosio_assert(((int_32)*($10 + [144]) == (int_32)$2), [768])
	CALL eosio_assert(((int_64)*($7) == (int_64)CALL $fimport$4()), [816])
	*($10 + [112]) = ((int_64)*($10 + [112]) + (int_64)$3)
	*($10 + [40]) = ((int_64)*($10 + [40]) + (int_64)$4)
	*($10 + [80]) = ((int_64)*($10 + [80]) + (int_64)$5)
	$1 = *($10)
	CALL eosio_assert([1], [992])
	*((($11 + [144]) + [8])) = $6
	*($11 + [148]) = $11
	*($11 + [144]) = $11
	CALL $80(($11 + [144]), $10)
	CALL db_update_i64(*($10 + [148]), $8, $11, [136])
	if ( (uint_64)($1 <= *($9)) ){ goto $label$5 }
	*($9) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	CALL eosio_assert([1], [208])
	$10 = CALL db_next_i64(*(($10 + [148])), $11)
	if ( ((int_32)$10 <= (int_32)[-1]) ){ goto $label$3 }
	$10 = CALL $66($2, $10)
	goto $label$4 
	
.LABEL $label$3
	*([0] + [4]) = ($11 + [160])
}

int_32 .FUNC $198 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [416])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	$7 = ($4 + $6)
	*($8 + [40]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [40]))
	$4 = *($8 + [36])
	
.LABEL $label$7
	*(($6 = CALL $238([40])) + [8 align=4]) = (int_64)0
	*($6 + [16 align=4]) = (int_64)0
	*($6 + [24]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [448])
	CALL memcpy($6, $4, [8])
	$3 = ($4 + [8])
	CALL eosio_assert(((uint_32)($7 - $3) > (uint_32)[3]), [448])
	CALL memcpy(($6 + [8]), $3, [4])
	*($8 + [36]) = ($4 + [12])
	CALL $55(($8 + [32]), ($6 + [12]))
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $201(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [12])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [16])) = $7
	CALL $240($7)
	
.LABEL $label$10
	CALL $240($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $199 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$10 = (*([0] + [4]) - [16])
	$11 = $10
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	$8 = [12]
	$4 = *($1)
	$9 = $4
	$3 = *($3)
	$5 = ($1 + [12])
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$1 }
	CALL $178($5, *($3), *($3 + [4]))
	$9 = *($1)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)$9), [992])
	$6 = *($5)
	$3 = *(($1 + [16]))
	$7 = ($3 - $6)
	$9 = (CASTING uint_64)(uint_32 int_32($7 >> [3]))
	
.LOOP $label$2:
	$8 = ($8 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$3 }
	$8 = (($7 & [-8]) + $8)
	
.LABEL $label$3
	if ( ($8 <= [513]) ){ goto $label$5 }
	$10 = CALL malloc($8)
	goto $label$4 
	
.LABEL $label$5
	$10 = ($10 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$4
	*($11) = $10
	$3 = ($10 + $8)
	*($11 + [8]) = $3
	CALL eosio_assert(((int_32)$8 > (int_32)[7]), [1056])
	CALL memcpy($10, $1, [8])
	$6 = ($10 + [8])
	CALL eosio_assert(((int_32)($3 - $6) > (int_32)[3]), [1056])
	CALL memcpy($6, ($1 + [8]), [4])
	*($11 + [4]) = ($10 + [12])
	CALL $103($11, $5)
	CALL db_update_i64(*($1 + [28]), $2, $10, $8)
	if ( ($8 <= [513]) ){ goto $label$6 }
	CALL free($10)
	
.LABEL $label$6
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*([0] + [4]) = ($11 + [16])
}

void .FUNC $196 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [16])
	$10 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [324]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	$4 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [32]))), [880])
	$8 = ((int_64)*($1 + [24]) + (int_64)*($3))
	*($1 + [24]) = $8
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($1 + [24]) < (int_64)4611686018427387904), [960])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [992])
	$6 = *($1 + [312])
	$5 = *(($1 + [316]))
	$7 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 int_32($7 >> [3]))
	$3 = [308]
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$2 }
	$3 = (($7 & [-8]) + $3)
	
.LABEL $label$2
	if ( ($3 <= [513]) ){ goto $label$4 }
	$9 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$9 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$3
	*($10 + [4]) = $9
	*($10) = $9
	*($10 + [8]) = ($9 + $3)
	CALL $102($10, $1)
	CALL db_update_i64(*($1 + [328]), $2, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($9)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $197 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [416])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $238([56])
	$4 = CALL $141($6)
	*($6 + [40]) = $0
	CALL $142(($8 + [32]), $4)
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [44])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $202(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $240($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $194 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$10 = (*([0] + [4]) - [16])
	$11 = $10
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	$8 = [12]
	$4 = *($1)
	$9 = $4
	$3 = *($3)
	$5 = ($1 + [12])
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$1 }
	CALL $178($5, *($3), *($3 + [4]))
	$9 = *($1)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)$9), [992])
	$6 = *($5)
	$3 = *(($1 + [16]))
	$7 = ($3 - $6)
	$9 = (CASTING uint_64)(uint_32 int_32($7 >> [3]))
	
.LOOP $label$2:
	$8 = ($8 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$3 }
	$8 = (($7 & [-8]) + $8)
	
.LABEL $label$3
	if ( ($8 <= [513]) ){ goto $label$5 }
	$10 = CALL malloc($8)
	goto $label$4 
	
.LABEL $label$5
	$10 = ($10 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$4
	*($11) = $10
	$3 = ($10 + $8)
	*($11 + [8]) = $3
	CALL eosio_assert(((int_32)$8 > (int_32)[7]), [1056])
	CALL memcpy($10, $1, [8])
	$6 = ($10 + [8])
	CALL eosio_assert(((int_32)($3 - $6) > (int_32)[3]), [1056])
	CALL memcpy($6, ($1 + [8]), [4])
	*($11 + [4]) = ($10 + [12])
	CALL $103($11, $5)
	CALL db_update_i64(*($1 + [28]), $2, $10, $8)
	if ( ($8 <= [513]) ){ goto $label$6 }
	CALL free($10)
	
.LABEL $label$6
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*([0] + [4]) = ($11 + [16])
}

void .FUNC $195 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [16])
	$10 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [324]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	$4 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [32]))), [880])
	$8 = ((int_64)*($1 + [24]) + (int_64)*($3))
	*($1 + [24]) = $8
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($1 + [24]) < (int_64)4611686018427387904), [960])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [992])
	$6 = *($1 + [312])
	$5 = *(($1 + [316]))
	$7 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 int_32($7 >> [3]))
	$3 = [308]
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$2 }
	$3 = (($7 & [-8]) + $3)
	
.LABEL $label$2
	if ( ($3 <= [513]) ){ goto $label$4 }
	$9 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$9 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$3
	*($10 + [4]) = $9
	*($10) = $9
	*($10 + [8]) = ($9 + $3)
	CALL $102($10, $1)
	CALL db_update_i64(*($1 + [328]), $2, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($9)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $192 (int_32 $0, int_32 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [324]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	$3 = *($1)
	CALL eosio_assert([1], [512])
	$7 = (int_64)5459781
	$6 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$8 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	
.LABEL $label$1
	CALL eosio_assert($8, [480])
	*(($1 + [96])) = (int_64)1397703940
	*($1 + [88]) = (int_64)0
	CALL eosio_assert(((int_64)$3 == (int_64)*($1)), [992])
	$4 = *($1 + [312])
	$8 = *(($1 + [316]))
	$5 = ($8 - $4)
	$7 = (CASTING uint_64)(uint_32 int_32($5 >> [3]))
	$6 = [308]
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$7 }
	$6 = (($5 & [-8]) + $6)
	
.LABEL $label$7
	if ( ($6 <= [513]) ){ goto $label$9 }
	$8 = CALL malloc($6)
	goto $label$8 
	
.LABEL $label$9
	$8 = ($10 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$8
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = ($8 + $6)
	CALL $102($9, $1)
	CALL db_update_i64(*($1 + [328]), $2, $8, $6)
	if ( ($6 <= [513]) ){ goto $label$10 }
	CALL free($8)
	
.LABEL $label$10
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$11 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $193 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [16])
	$10 = $9
	*([0] + [4]) = $9
	$7 = *($0 + [4])
	*($1) = *(*($7))
	$2 = *($0)
	if ( (*([0] + [1332]) == 0) ){ goto $label$2 }
	$3 = *([0] + [1336])
	goto $label$1 
	
.LABEL $label$2
	$8 = CALL current_time()
	*([0] + [1332]) = [1]
	$3 = (CASTING uint_32)(uint_64 ((uint_64)$8 / (uint_64)(int_64)1000000))
	*([0] + [1336]) = $3
	
.LABEL $label$1
	*($1 + [8]) = $3
	*($10 + [8]) = [0]
	*($10) = (int_64)0
	CALL $185($10, *($7 + [4]))
	$3 = ($1 + [12])
	if ( ((int_32)$3 == (int_32)$10) ){ goto $label$3 }
	CALL $178($3, *($10), *($10 + [4]))
	
.LABEL $label$3
	$7 = *($10)
	if ( ($7 == 0) ){ goto $label$4 }
	*($10 + [4]) = $7
	CALL $240($7)
	
.LABEL $label$4
	$7 = [12]
	$5 = *(($1 + [12]))
	$4 = *(($1 + [16]))
	$6 = ($4 - $5)
	$8 = (CASTING uint_64)(uint_32 int_32($6 >> [3]))
	
.LOOP $label$5:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	$7 = (($6 & [-8]) + $7)
	
.LABEL $label$6
	if ( ($7 <= [513]) ){ goto $label$8 }
	$9 = CALL malloc($7)
	goto $label$7 
	
.LABEL $label$8
	$9 = ($9 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$7
	*($10) = $9
	$4 = ($9 + $7)
	*($10 + [8]) = $4
	CALL eosio_assert(((int_32)$7 > (int_32)[7]), [1056])
	CALL memcpy($9, $1, [8])
	$5 = ($9 + [8])
	CALL eosio_assert(((int_32)($4 - $5) > (int_32)[3]), [1056])
	CALL memcpy($5, ($1 + [8]), [4])
	*($10 + [4]) = ($9 + [12])
	CALL $103($10, $3)
	$8 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-2042605236735967232, *(*($0 + [8])), $8, $9, $7)
	if ( ($7 <= [513]) ){ goto $label$9 }
	CALL free($9)
	
.LABEL $label$9
	if ( (uint_64)($8 <= *($2 + [16])) ){ goto $label$10 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $190 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$6 = *([0] + [4])
	$7 = $6
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [816])
	$4 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [24]))), [880])
	$5 = ((int_64)*($1 + [16]) + (int_64)*($3))
	*($1 + [16]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [928])
	CALL eosio_assert(((int_64)*($1 + [16]) < (int_64)4611686018427387904), [960])
	if ( (*([0] + [1332]) == 0) ){ goto $label$2 }
	$3 = *([0] + [1336])
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL current_time()
	*([0] + [1332]) = [1]
	$3 = (CASTING uint_32)(uint_64 ((uint_64)$5 / (uint_64)(int_64)1000000))
	*([0] + [1336]) = $3
	
.LABEL $label$1
	*($1 + [8]) = $3
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [992])
	$3 = $6
	$6 = ($3 + [-32])
	*([0] + [4]) = $6
	CALL eosio_assert([1], [1056])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy(($3 + [-24]), ($1 + [8]), [4])
	CALL eosio_assert([1], [1056])
	CALL memcpy(($3 + [-20]), ($1 + [16]), [8])
	CALL eosio_assert([1], [1056])
	CALL memcpy(($3 + [-12]), ($1 + [24]), [8])
	CALL db_update_i64(*($1 + [36]), $2, $6, [28])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = $7
}

void .FUNC $191 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [240])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [288])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [352])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $240($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $240($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
}