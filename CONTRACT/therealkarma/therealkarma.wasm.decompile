(data (i32.const 8232) "failed to allocate pages\00")
(data (i32.const 8257) "this account is already frozen\00")
(data (i32.const 8288) "this account is not frozen\00")
(data (i32.const 8315) "invalid authorization\00")
(data (i32.const 8337) "invalid symbol name\00")
(data (i32.const 8357) "you can only power up with KARMA\00")
(data (i32.const 8390) "must specify positive quantity\00")
(data (i32.const 8421) "powered table must exist\00")
(data (i32.const 8446) "you can only power down KARMA\00")
(data (i32.const 8476) "no KARMA power found\00")
(data (i32.const 8497) "you don\'t have that much KARMA power\00")
(data (i32.const 8534) "code\00")
(data (i32.const 8539) "refund\00")
(data (i32.const 8546) "no KARMA refund found\00")
(data (i32.const 8568) "refund not available yet\00")
(data (i32.const 8593) "refund must be positive\00")
(data (i32.const 8617) "<Reward: \00")
(data (i32.const 8627) ">\00")
(data (i32.const 8629) "transfer\00")
(data (i32.const 8638) "Historic powerup rewards\00")
(data (i32.const 8663) "you have no karma powered up\00")
(data (i32.const 8692) "reward\00")
(data (i32.const 8699) "KARMA Power Up Rewards\00")
(data (i32.const 8722) "powerup\00")
(data (i32.const 8730) "KARMA Inflation\00")
(data (i32.const 8746) "no balance object found\00")
(data (i32.const 8770) "overdrawn balance\00")
(data (i32.const 8788) "invalid supply\00")
(data (i32.const 8803) "max-supply must be positive\00")
(data (i32.const 8831) "token with symbol already exists\00")
(data (i32.const 8864) "token with symbol does not exist, create token before unlock\00")
(data (i32.const 8925) "memo has more than 256 bytes\00")
(data (i32.const 8954) "token with symbol does not exist, create token before issue\00")
(data (i32.const 9014) "invalid quantity\00")
(data (i32.const 9031) "must issue positive quantity\00")
(data (i32.const 9060) "symbol precision mismatch\00")
(data (i32.const 9086) "quantity exceeds available supply\00")
(data (i32.const 9120) "token with symbol does not exist, create token before burn\00")
(data (i32.const 9179) "must burn positive quantity\00")
(data (i32.const 9207) "cannot transfer to self\00")
(data (i32.const 9231) "invalid authority\00")
(data (i32.const 9249) "to account does not exist\00")
(data (i32.const 9275) "unable to find key\00")
(data (i32.const 9294) "must transfer positive quantity\00")
(data (i32.const 9326) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 9375) "attempt to add asset with different symbol\00")
(data (i32.const 9418) "addition underflow\00")
(data (i32.const 9437) "addition overflow\00")
(data (i32.const 9455) "attempt to subtract asset with different symbol\00")
(data (i32.const 9503) "subtraction underflow\00")
(data (i32.const 9525) "subtraction overflow\00")
(data (i32.const 9546) "string is too long to be a valid name\00")
(data (i32.const 9584) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 9651) "character is not in allowed character set for names\00")
(data (i32.const 9703) "write\00")
(data (i32.const 9709) "KARMA\00")
(data (i32.const 9715) "karmafunding\00")
(data (i32.const 9728) "karmapowerup\00")
(data (i32.const 9741) "karmarewards\00")
(data (i32.const 9754) "karmadevfund\00")
(data (i32.const 9767) "thekarmadapp\00")
(data (i32.const 9780) "string is too long to be a valid symbol_code\00")
(data (i32.const 9825) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 9878) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 9929) "error reading iterator\00")
(data (i32.const 9952) "singleton does not exist\00")
(data (i32.const 9977) "get\00")
(data (i32.const 9981) "object passed to modify is not in multi_index\00")
(data (i32.const 10027) "cannot modify objects in table of another contract\00")
(data (i32.const 10078) "updater cannot change primary key when modifying an object\00")
(data (i32.const 10137) "cannot create objects in table of another contract\00")
(data (i32.const 10188) "object passed to erase is not in multi_index\00")
(data (i32.const 10233) "cannot erase objects in table of another contract\00")
(data (i32.const 10283) "attempt to remove object that was not in multi_index\00")
(data (i32.const 10336) "read\00")
(data (i32.const 0) "h(\00\00")
(import "env" "send_deferred" (func $fimport$0 (param i32 i64 i32 i32 i32)))
(import "env" "eosio_assert" (func $fimport$1 (param i32 i32)))
(import "env" "db_find_i64" (func $fimport$2 (param i64 i64 i64 i64) (result i32)))
(import "env" "require_auth" (func $fimport$3 (param i64)))
(import "env" "current_receiver" (func $fimport$4 (result i64)))
(import "env" "abort" (func $fimport$5))
(import "env" "memset" (func $fimport$6 (param i32 i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$7 (param i32)))
(import "env" "has_auth" (func $fimport$8 (param i64) (result i32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$9 (param i32 i32)))
(import "env" "memcpy" (func $fimport$10 (param i32 i32 i32) (result i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$11 (param i32 i32) (result i32)))
(import "env" "set_proposed_producers" (func $fimport$12 (param i32 i32) (result i64)))
(import "env" "current_time" (func $fimport$13 (result i64)))
(import "env" "get_active_producers" (func $fimport$14 (param i32 i32) (result i32)))
(import "env" "db_next_i64" (func $fimport$15 (param i32 i32) (result i32)))
(import "env" "db_store_i64" (func $fimport$16 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "prints" (func $fimport$17 (param i32)))
(import "env" "printui" (func $fimport$18 (param i64)))
(import "env" "memmove" (func $fimport$19 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$20 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$21 (param i32 i32)))
(import "env" "__multf3" (func $fimport$22 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$23 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$24 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$25 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$26 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$27 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$28 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$29 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$30 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$31 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$32 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$33 (param i64 i64) (result f32)))
(import "env" "prints_l" (func $fimport$34 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$35 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$36 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$37 (param i64 i64) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$38 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_update_i64" (func $fimport$39 (param i32 i64 i32 i32)))
(import "env" "cancel_deferred" (func $fimport$40 (param i32) (result i32)))
(import "env" "send_inline" (func $fimport$41 (param i32 i32)))
(import "env" "is_account" (func $fimport$42 (param i64) (result i32)))
(import "env" "require_recipient" (func $fimport$43 (param i64)))
(import "env" "action_data_size" (func $fimport$44 (result i32)))
(import "env" "read_action_data" (func $fimport$45 (param i32 i32) (result i32)))
(import "env" "eosio_assert_code" (func $fimport$46 (param i32 i64)))
(import "env" "db_get_i64" (func $fimport$47 (param i32 i32 i32) (result i32)))
(export "apply" (func $90))
(table $0 13 13 anyfunc)
(elem (i32.const 1) $69 $68 $28 $82 $58 $30 $85 $87 $75 $89 $76 $25)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 10341))
(global $global$2 i32 (i32.const 10341))


void .FUNC $98 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10336])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10336])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10336])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [16])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $99 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$4 = ($global$0 - [128])
	$global$0 = $4
	*(($5 = (($4 + [112]) + [8]))) = *(($3 + [8]))
	*($4 + [112]) = *($3)
	*($0) = $1
	*($0 + [8]) = $2
	$3 = *($5)
	*((($4 + [40]) + [8])) = $3
	$2 = *($4 + [112])
	*($0 + [16]) = $2
	*(($0 + [24])) = $3
	*($4 + [40]) = $2
	$3 = CALL $17([9709])
	if ( ($3 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [9780])
	goto $label$3 
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = (int_64)0
	
.LOOP $label$5:
	$5 = *(($3 + [9708]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [9825])
	
.LABEL $label$6
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$5 }
	$2 = ((int_64)$2 << (int_64)8)
	goto $label$1 
	
.LABEL $label$2
	$2 = (int_64)0
	
.LABEL $label$1
	*(($5 = ($0 + [32]))) = ((int_64)$2 | (int_64)4)
	*($4 + [104]) = [9715]
	*($4 + [108]) = CALL $17([9715])
	*($4 + [32]) = *($4 + [104])
	CALL $48(($0 + [40]), ($4 + [32]))
	*($4 + [96]) = [9728]
	*($4 + [100]) = CALL $17([9728])
	*($4 + [24]) = *($4 + [96])
	CALL $48(($0 + [48]), ($4 + [24]))
	*($4 + [88]) = [9741]
	*($4 + [92]) = CALL $17([9741])
	*($4 + [16]) = *($4 + [88])
	CALL $48(($0 + [56]), ($4 + [16]))
	*($4 + [80]) = [9754]
	*($4 + [84]) = CALL $17([9754])
	*($4 + [8]) = *($4 + [80])
	CALL $48(($0 + [64]), ($4 + [8]))
	*($4 + [72]) = [9767]
	*($4 + [76]) = CALL $17([9767])
	*($4) = *($4 + [72])
	CALL $48(($0 + [72]), $4)
	*($0 + [80]) = (int_64)86400
	*(($0 + [104])) = (int_64)-1
	*(($0 + [112])) = (int_64)0
	$3 = [0]
	*(($0 + [120])) = [0]
	*($0 + [128]) = (int_64)0
	*(($0 + [136])) = (int_64)0
	*(($0 + [144])) = (int_64)0
	*(($0 + [152])) = (int_64)0
	*(($0 + [184])) = (int_64)-1
	*(($0 + [192])) = (int_64)0
	*(($0 + [200])) = [0]
	*($0 + [208]) = (int_64)0
	*(($0 + [216])) = (int_64)0
	$2 = *($0)
	*($0 + [88]) = $2
	*(($0 + [96])) = $2
	*($0 + [168]) = $2
	*(($0 + [176])) = $2
	$6 = ($0 + [228])
	*(($0 + [224])) = $6
	*($6) = (int_64)0
	*($0 + [240]) = $2
	*(($0 + [248])) = $2
	*(($0 + [256])) = (int_64)-1
	*(($0 + [264])) = (int_64)0
	*(($0 + [272])) = [0]
	$7 = CALL db_find_i64($2, $2, (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$11 }
	$5 = ($0 + [88])
	if ( ((int_32)*(CALL $107($5, $7) + [40]) == (int_32)$5) ){ goto $label$12 }
	CALL eosio_assert([0], [9878])
	
.LABEL $label$12
	$3 = *(($0 + [116]))
	if ( ((int_32)$3 == (int_32)*(($0 + [112]))) ){ goto $label$10 }
	$3 = *(($3 + [-24]))
	if ( ((int_32)*($3 + [40]) == (int_32)$5) ){ goto $label$13 }
	CALL eosio_assert([0], [9878])
	
.LABEL $label$13
	if ( $3 ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$11
	$8 = *($5)
	$2 = (uint_64)$8 >> (uint_64)(int_64)8
	$1 = $2)
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$9 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$18 }
	$1 = $9
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$18
	$1 = $9
	
.LOOP $label$19:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$15 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $5 ){ goto $label$19 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$16 }
	
.LABEL $label$17
	$9 = $8
	goto $label$14 
	
.LABEL $label$15
	CALL eosio_assert([0], [8337])
	$9 = *(($0 + [32]))
	$2 = (uint_64)$9 >> (uint_64)(int_64)8)
	
.LABEL $label$14
	$3 = [0]
	
.LOOP $label$22:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$21 }
	$1 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$23 }
	$2 = $1
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$23
	$2 = $1
	
.LOOP $label$24:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$21 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $5 ){ goto $label$24 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	CALL eosio_assert([0], [8337])
	
.LABEL $label$20
	$2 = (int_64)0
	$1 = CALL $16()
	$10 = (int_64)0
	goto $label$8 
	
.LABEL $label$10
	$3 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$7 }
	$3 = CALL $107($5, $3)
	if ( ((int_32)*($3 + [40]) == (int_32)$5) ){ goto $label$9 }
	CALL eosio_assert([0], [9878])
	
.LABEL $label$9
	$9 = *(($3 + [24]))
	$1 = *($3 + [32])
	$10 = *($3 + [16])
	$8 = *($3 + [8])
	$2 = *($3)
	
.LABEL $label$8
	$3 = ($0 + [208])
	$5 = ($0 + [168])
	*(($0 + [136])) = $8
	*(($0 + [128])) = $2
	*(($0 + [144])) = $10
	*(($0 + [152])) = $9
	*(($0 + [160])) = $1
	$7 = *(($0 + [196]))
	if ( ((int_32)$7 == (int_32)*(($0 + [192]))) ){ goto $label$28 }
	$7 = *(($7 + [-24]))
	if ( ((int_32)*($7 + [32]) == (int_32)$5) ){ goto $label$29 }
	CALL eosio_assert([0], [9878])
	
.LABEL $label$29
	if ( $7 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	$7 = CALL db_find_i64(*(($0 + [168])), *(($0 + [176])), (int_64)-4992121821936484352, (int_64)-4992121821936484352)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$26 }
	if ( ((int_32)*(CALL $108($5, $7) + [32]) == (int_32)$5) ){ goto $label$27 }
	CALL eosio_assert([0], [9878])
	
.LABEL $label$27
	CALL $109(($4 + [40]), $5)
	$5 = ($4 + [60])
	goto $label$25 
	
.LABEL $label$26
	*(($5 = ($4 + [60]))) = (int_64)0
	*(($4 + [48])) = *(($0 + [152]))
	*($4 + [56]) = $5
	*($4 + [40]) = *(($0 + [144]))
	
.LABEL $label$25
	*($3) = *($4 + [40])
	*(($3 + [8])) = *((($4 + [40]) + [8]))
	$11 = ($0 + [228])
	$7 = ($0 + [224])
	CALL $110($7, *($11))
	*($7) = *($4 + [56])
	$3 = *($5)
	*($11) = $3
	$11 = *(($4 + [64]))
	*(($0 + [232])) = $11
	if ( ($11 == 0) ){ goto $label$31 }
	*($3 + [8]) = $6
	*(($4 + [56])) = $5
	*(($4 + [60])) = (int_64)0
	$3 = [0]
	goto $label$30 
	
.LABEL $label$31
	*($7) = $6
	
.LABEL $label$30
	CALL $110(($4 + [56]), $3)
	$global$0 = ($4 + [128])
	return $0
	
.LABEL $label$7
	CALL eosio_assert([0], [9952])
	return (unreachable)
}

int_32 .FUNC $94 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [400])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [344]) = (int_64)0
	*($4 + [336]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$5
	$3 = ($2 + $7)
	CALL memcpy(($4 + [336]), $2, [8])
	*($4 + [56]) = (int_64)0
	$8 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$6
	CALL memcpy(($4 + [56]), $8, [8])
	*(($8 = (($4 + [336]) + [8]))) = *($4 + [56])
	*((($4 + [24]) + [8])) = $3
	*($4 + [40]) = $2
	*($4 + [44]) = ($2 + [16])
	*($4 + [48]) = $3
	*($4 + [24]) = *($4 + [40])
	$9 = CALL $99(($4 + [56]), $0, $1, ($4 + [24]))
	*(($3 = (($4 + [352]) + [8]))) = *($8)
	*($4 + [352]) = *($4 + [336])
	*((($4 + [368]) + [8])) = *($3)
	*($4 + [368]) = *($4 + [352])
	$3 = (($4 + [56]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	$0 = *((($4 + [368]) + [8]))
	*((($4 + [384]) + [8])) = $0
	*((($4 + [8]) + [8])) = $0
	$0 = *($4 + [368])
	*($4 + [8]) = $0
	*($4 + [384]) = $0
	CALL void $3((int_32 ($4 + [8])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $2($2)
	
.LABEL $label$8
	CALL $100($9)
	$global$0 = ($4 + [400])
	return [1]
}

int_32 .FUNC $95 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$3 = ($global$0 - [384])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [344]) = (int_64)0
	*($4 + [336]) = (int_64)0
	*($4 + [352]) = (int_64)0
	*($4 + [360]) = (int_64)0
	*($4 + [368]) = (int_64)0
	*($4 + [324]) = $2
	*($4 + [320]) = $2
	*($4 + [328]) = ($2 + $7)
	*($4 + [376]) = ($4 + [320])
	*($4 + [40]) = ($4 + [336])
	CALL $105(($4 + [40]), ($4 + [376]))
	$3 = *($4 + [328])
	*((($4 + [24]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$8 = *($4 + [320])
	*($4 + [8]) = $8
	*($4 + [24]) = $8
	$9 = CALL $99(($4 + [40]), $0, $1, ($4 + [8]))
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	$0 = *($4 + [368])
	$1 = *($4 + [360])
	$8 = *($4 + [352])
	$10 = *($4 + [344])
	$11 = *($4 + [336])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $11), (int_64 $10), (int_64 $8), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $2($2)
	
.LABEL $label$6
	CALL $100($9)
	$global$0 = ($4 + [384])
	return [1]
}

int_32 .FUNC $96 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [400])
	$global$0 = $3
	*(($4 = $3) + [392]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [368])) = (int_64)0
	*(($4 + [384])) = [0]
	*($4 + [352]) = (int_64)0
	*($4 + [344]) = (int_64)0
	*($4 + [360]) = (int_64)0
	*($4 + [376]) = (int_64)0
	*($4 + [332]) = $2
	*($4 + [328]) = $2
	*($4 + [336]) = ($2 + $5)
	*($4 + [24]) = ($4 + [328])
	*($4 + [48]) = ($4 + [344])
	CALL $103(($4 + [48]), ($4 + [24]))
	$3 = *($4 + [336])
	*((($4 + [32]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$6 = *($4 + [328])
	*($4 + [8]) = $6
	*($4 + [32]) = $6
	$3 = CALL $99(($4 + [48]), $0, $1, ($4 + [8]))
	*($4 + [24]) = $3
	*($4 + [28]) = ($4 + [392])
	CALL $104(($4 + [24]), ($4 + [344]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $2($2)
	
.LABEL $label$4
	CALL $100($3)
	if ( ((*($4 + [376]) & [1]) == 0) ){ goto $label$5 }
	CALL $9(*(($4 + [384])))
	
.LABEL $label$5
	$global$0 = ($4 + [400])
	return [1]
}

int_32 .FUNC $97 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [384])
	$global$0 = $3
	*(($4 = $3) + [376]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [352])) = (int_64)0
	*(($4 + [368])) = [0]
	*($4 + [344]) = (int_64)0
	*($4 + [336]) = (int_64)0
	*($4 + [360]) = (int_64)0
	*($4 + [324]) = $2
	*($4 + [320]) = $2
	$6 = ($2 + $5)
	*($4 + [328]) = $6
	$3 = $2
	if ( ((uint_32)$5 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10336])
	$6 = *(($4 + [328]))
	$3 = *($4 + [324])
	
.LABEL $label$4
	CALL memcpy(($4 + [336]), $3, [8])
	$3 = ($3 + [8])
	*($4 + [324]) = $3
	$7 = (($4 + [336]) + [8])
	if ( ((uint_32)($6 - $3) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10336])
	$6 = *((($4 + [320]) + [8]))
	$3 = *($4 + [324])
	
.LABEL $label$5
	CALL memcpy($7, $3, [8])
	$3 = ($3 + [8])
	*($4 + [324]) = $3
	*($4 + [40]) = (int_64)0
	if ( ((uint_32)($6 - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10336])
	$3 = *($4 + [324])
	
.LABEL $label$6
	CALL memcpy(($4 + [40]), $3, [8])
	*(($4 + [352])) = *($4 + [40])
	*($4 + [324]) = ($3 + [8])
	CALL $101(($4 + [320]), ($4 + [360]))
	$3 = *((($4 + [320]) + [8]))
	*((($4 + [24]) + [8])) = $3
	*(($4 + [8])) = $3
	$8 = *($4 + [320])
	*($4) = $8
	*($4 + [24]) = $8
	$3 = CALL $99(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $3
	*($4 + [20]) = ($4 + [376])
	CALL $102(($4 + [16]), ($4 + [336]))
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL $2($2)
	
.LABEL $label$7
	CALL $100($3)
	if ( ((*($4 + [360]) & [1]) == 0) ){ goto $label$8 }
	CALL $9(*(($4 + [368])))
	
.LABEL $label$8
	$global$0 = ($4 + [384])
	return [1]
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [192])
	$global$0 = $3
	CALL $0()
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$1 }
	if ( ((int_64)$2 > (int_64)-3106564276286914561) ){ goto $label$12 }
	if ( ((int_64)$2 > (int_64)-4417057682011324417) ){ goto $label$11 }
	if ( ((int_64)$2 == (int_64)-5964828974372093952) ){ goto $label$9 }
	if ( ((int_64)$2 == (int_64)-5964828682257170432) ){ goto $label$8 }
	if ( ((int_64)$2 != (int_64)-5001342339331915776) ){ goto $label$1 }
	*($3 + [132]) = [0]
	*($3 + [128]) = [1]
	*($3 + [56]) = *($3 + [128])
	CALL $91($1, $1, ($3 + [56]))
	goto $label$1 
	
.LABEL $label$12
	if ( ((int_64)$2 > (int_64)5031766152489992191) ){ goto $label$10 }
	if ( ((int_64)$2 == (int_64)-3106564276286914560) ){ goto $label$7 }
	if ( ((int_64)$2 == (int_64)4516881727834030080) ){ goto $label$6 }
	if ( ((int_64)$2 != (int_64)4921564679018381312) ){ goto $label$1 }
	*($3 + [140]) = [0]
	*($3 + [136]) = [2]
	*($3 + [48]) = *($3 + [136])
	CALL $91($1, $1, ($3 + [48]))
	goto $label$1 
	
.LABEL $label$11
	if ( ((int_64)$2 == (int_64)-4417057682011324416) ){ goto $label$5 }
	if ( ((int_64)$2 == (int_64)-3617168760277827584) ){ goto $label$4 }
	if ( ((int_64)$2 != (int_64)-3109888186206126080) ){ goto $label$1 }
	*($3 + [108]) = [0]
	*($3 + [104]) = [3]
	*($3 + [80]) = *($3 + [104])
	CALL $92($1, $1, ($3 + [80]))
	goto $label$1 
	
.LABEL $label$10
	if ( ((int_64)$2 == (int_64)8516769789752901632) ){ goto $label$3 }
	if ( ((int_64)$2 == (int_64)6761222076679323648) ){ goto $label$2 }
	if ( ((int_64)$2 != (int_64)5031766152489992192) ){ goto $label$1 }
	*($3 + [188]) = [0]
	*($3 + [184]) = [4]
	*($3) = *($3 + [184])
	CALL $93($1, $1, $3)
	goto $label$1 
	
.LABEL $label$9
	*($3 + [148]) = [0]
	*($3 + [144]) = [5]
	*($3 + [40]) = *($3 + [144])
	CALL $93($1, $1, ($3 + [40]))
	goto $label$1 
	
.LABEL $label$8
	*($3 + [156]) = [0]
	*($3 + [152]) = [6]
	*($3 + [32]) = *($3 + [152])
	CALL $93($1, $1, ($3 + [32]))
	goto $label$1 
	
.LABEL $label$7
	*($3 + [180]) = [0]
	*($3 + [176]) = [7]
	*($3 + [8]) = *($3 + [176])
	CALL $94($1, $1, ($3 + [8]))
	goto $label$1 
	
.LABEL $label$6
	*($3 + [100]) = [0]
	*($3 + [96]) = [8]
	*($3 + [88]) = *($3 + [96])
	CALL $93($1, $1, ($3 + [88]))
	goto $label$1 
	
.LABEL $label$5
	*($3 + [124]) = [0]
	*($3 + [120]) = [9]
	*($3 + [64]) = *($3 + [120])
	CALL $95($1, $1, ($3 + [64]))
	goto $label$1 
	
.LABEL $label$4
	*($3 + [164]) = [0]
	*($3 + [160]) = [10]
	*($3 + [24]) = *($3 + [160])
	CALL $96($1, $1, ($3 + [24]))
	goto $label$1 
	
.LABEL $label$3
	*($3 + [172]) = [0]
	*($3 + [168]) = [11]
	*($3 + [16]) = *($3 + [168])
	CALL $97($1, $1, ($3 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*($3 + [116]) = [0]
	*($3 + [112]) = [12]
	*($3 + [72]) = *($3 + [112])
	CALL $92($1, $1, ($3 + [72]))
	
.LABEL $label$1
	CALL $23([0])
	$global$0 = ($3 + [192])
}

int_32 .FUNC $91 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [320])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [312]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$5
	CALL memcpy(($4 + [312]), $2, [8])
	*(($4 + [8])) = $3
	*($4 + [20]) = ($2 + [8])
	*($4 + [16]) = $2
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$8 = CALL $99(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$0 = *($4 + [312])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $2($2)
	
.LABEL $label$7
	CALL $100($8)
	$global$0 = ($4 + [320])
	return [1]
}

int_32 .FUNC $92 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$3 = ($global$0 - [384])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [344])) = [0]
	*($4 + [328]) = (int_64)0
	*($4 + [336]) = (int_64)0
	*($4 + [316]) = $2
	*($4 + [312]) = $2
	*($4 + [320]) = ($2 + $7)
	$3 = $2
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10336])
	$3 = *($4 + [316])
	
.LABEL $label$4
	CALL memcpy(($4 + [328]), $3, [8])
	*($4 + [316]) = ($3 + [8])
	$8 = (($4 + [328]) + [8])
	CALL $101(($4 + [312]), $8)
	$3 = *((($4 + [312]) + [8]))
	*((($4 + [16]) + [8])) = $3
	*(($4 + [8])) = $3
	$9 = *($4 + [312])
	*($4) = $9
	*($4 + [16]) = $9
	$10 = CALL $99(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$0 = *($4 + [328])
	$8 = CALL $19(($4 + [352]), $8)
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$5 = CALL $19(($4 + [368]), $8)
	CALL void $3((int_32 $0), (int_64 $5), (int_32 $6))
	if ( (*($4 + [368]) & [1]) ){ goto $label$10 }
	if ( (*($4 + [352]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $9(*($5 + [8]))
	if ( ((*($4 + [352]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*($8 + [8]))
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( ($7 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $2($2)
	
.LABEL $label$6
	CALL $100($10)
	if ( ((*($4 + [336]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($4 + [344])))
	
.LABEL $label$11
	$global$0 = ($4 + [384])
	return [1]
}

int_32 .FUNC $93 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$3 = ($global$0 - [416])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = ($4 + [360]))) = (int_64)0
	*($4 + [352]) = (int_64)0
	*($4 + [344]) = (int_64)0
	*($4 + [332]) = $2
	*($4 + [328]) = $2
	*($4 + [336]) = ($2 + $7)
	*($4 + [400]) = ($4 + [328])
	*($4 + [48]) = ($4 + [344])
	CALL $98(($4 + [48]), ($4 + [400]))
	$8 = *($4 + [336])
	*((($4 + [32]) + [8])) = $8
	*((($4 + [16]) + [8])) = $8
	$9 = *($4 + [328])
	*($4 + [16]) = $9
	*($4 + [32]) = $9
	$8 = CALL $99(($4 + [48]), $0, $1, ($4 + [16]))
	*(($10 = (($4 + [368]) + [8]))) = *($3)
	*($4 + [368]) = *($4 + [352])
	$0 = *($4 + [344])
	*((($4 + [384]) + [8])) = *($10)
	*($4 + [384]) = *($4 + [368])
	$3 = (($4 + [48]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$1 = *((($4 + [384]) + [8]))
	*((($4 + [400]) + [8])) = $1
	*(($4 + [8])) = $1
	$1 = *($4 + [384])
	*($4) = $1
	*($4 + [400]) = $1
	CALL void $3((int_32 $0), (int_64 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $2($2)
	
.LABEL $label$6
	CALL $100($8)
	$global$0 = ($4 + [416])
	return [1]
}

void .FUNC $138 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$4 = ($global$0 - [32])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9981])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10027])
	
.LABEL $label$2
	$3 = *($3)
	*($1) = *($3)
	*(($1 + [8])) = *(($3 + [8]))
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$3 }
	CALL $142(($1 + [16]), *($3 + [16]), ($3 + [20]))
	
.LABEL $label$3
	$6 = *(($1 + [24]))
	$7 = [16]
	
.LOOP $label$4:
	$7 = ($7 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$4 }
	$9 = ($1 + [20])
	$8 = *($1 + [16])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$5 }
	
.LOOP $label$6:
	$10 = $8
	$3 = *($10 + [4])
	if ( ($3 == 0) ){ goto $label$8 }
	
.LOOP $label$9:
	$8 = $3
	$3 = *($8)
	if ( $3 ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$8 = *($10 + [8])
	if ( ((int_32)*($8) == (int_32)$10) ){ goto $label$7 }
	$10 = ($10 + [8])
	
.LOOP $label$10:
	$3 = *($10)
	$10 = ($3 + [8])
	$8 = *($3 + [8])
	if ( ((int_32)$3 != (int_32)*($8)) ){ goto $label$10 }
	
.LABEL $label$7
	$7 = ($7 + [40])
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$6 }
	
.LABEL $label$5
	if ( ($7 <= [513]) ){ goto $label$12 }
	$3 = CALL $1($7)
	goto $label$11 
	
.LABEL $label$12
	$3 = ($4 - (($7 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$11
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $7)
	*($5 + [16]) = $5
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [16])
	CALL $143(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [36]), $2, $3, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$15 }
	if ( ((uint_64)*($0 + [16]) <= (uint_64)(int_64)-4992121821936484352) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $2($3)
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-4992121821936484352) ){ goto $label$13 }
	
.LABEL $label$14
	*(($0 + [16])) = (int_64)-4992121821936484351
	$global$0 = ($5 + [32])
	return 
	
.LABEL $label$13
	$global$0 = ($5 + [32])
}

void .FUNC $123 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [368])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [356]) = $2
	*($3 + [352]) = $2
	*($3 + [360]) = ($2 + $4)
	*($3 + [344]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10336])
	$2 = *($3 + [356])
	
.LABEL $label$5
	CALL memcpy(($3 + [344]), $2, [8])
	*($3 + [356]) = ($2 + [8])
	*($3 + [336]) = [0]
	*($3 + [328]) = (int_64)0
	CALL $101(($3 + [352]), ($3 + [328]))
	$2 = *((($3 + [352]) + [8]))
	*((($3 + [32]) + [8])) = $2
	*(($3 + [8])) = $2
	$5 = *($3 + [352])
	*($3) = $5
	*($3 + [32]) = $5
	$2 = CALL $19(($3 + [16]), ($3 + [328]))
	$4 = CALL $99(($3 + [48]), $0, $1, $3)
	CALL $25($4, *($3 + [344]), $2)
	if ( (*($2) & [1]) ){ goto $label$8 }
	CALL $100($4)
	if ( (*($3 + [328]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $9(*($2 + [8]))
	CALL $100($4)
	if ( ((*($3 + [328]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($3 + [336])))
	$global$0 = ($3 + [368])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [368])
}

int_32 .FUNC $115 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [9977])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $49($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [10336])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $122 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [352])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [344])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [344])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10336])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	$5 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$6
	CALL memcpy(($3 + [336]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$7
	CALL memcpy(($3 + [328]), $5, [8])
	$5 = ($2 + [24])
	if ( ((int_32)$4 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$8
	CALL memcpy(($3 + [320]), $5, [8])
	$5 = ($2 + [32])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$9
	CALL memcpy(($3 + [312]), $5, [8])
	*(($3 + [8])) = $6
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [40])
	*($3 + [24]) = $6
	*($3) = *($3 + [16])
	$2 = CALL $99(($3 + [32]), $0, $1, $3)
	CALL $75($2, *($3 + [344]), *($3 + [336]), *($3 + [328]), *($3 + [320]), *($3 + [312]))
	CALL $100($2)
	$global$0 = ($3 + [352])
}

void .FUNC $130 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10336])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10336])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10336])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10336])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10336])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $131 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $132 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10336])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10336])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	CALL $134(*($1), *($0 + [4]))
	$global$0 = ($2 + [16])
}

void .FUNC $133 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $110(($1 + [16]), *(($1 + [20])))
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $134 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_32 $16
	$2 = ($global$0 - [64])
	$global$0 = $2
	CALL $110($1, *($1 + [4]))
	$3 = ($1 + [4])
	*($1) = $3
	$4 = (int_64)0
	*($1 + [4 align=4]) = (int_64)0
	$5 = *($0 + [4])
	$6 = ($0 + [8])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($5 <= *($6)) ){ goto $label$2 }
	CALL eosio_assert([0], [9977])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	$8 = *($5)
	$9 = ($5 + [1])
	*(($0 + [4])) = $9
	$5 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $5)))
	$7 = ($5 + [7])
	$5 = $9
	if ( ($8 & [128]) ){ goto $label$1 }
	$10 = (CASTING uint_32)(uint_64 $4)
	if ( ($10 == 0) ){ goto $label$3 }
	$11 = ($1 + [4])
	$6 = ($2 + [24])
	$12 = ($2 + [32])
	$13 = [0]
	
.LOOP $label$4:
	*(($14 = (($2 + [8]) + [8]))) = (int_64)0
	*($6) = (int_64)0
	*($12) = (int_64)0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $9) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10336])
	$9 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [40]), $9, [8])
	*(($7 = ($0 + [4]))) = (*($7) + [8])
	*($2 + [48]) = $0
	*($2 + [60]) = $6
	*($2 + [56]) = ($2 + [8])
	CALL $135(($2 + [56]), ($2 + [48]))
	$5 = *($3)
	if ( ($5 == 0) ){ goto $label$9 }
	$9 = $11
	$15 = *($5 + [16])
	$4 = *($2 + [40])
	if ( ((uint_64)$4 >= (uint_64)$15) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	$5 = $3
	$9 = $3
	$16 = [3]
	goto $label$6 
	
.LABEL $label$8
	$16 = [10]
	goto $label$6 
	
.LABEL $label$7
	$16 = [2]
	
.LABEL $label$6
	
.LOOP $label$11:
	goto $label$29 
	
.LABEL $label$33
	$9 = $5
	$5 = $8
	$15 = *($5 + [16])
	if ( ((uint_64)$4 >= (uint_64)$15) ){ goto $label$22 }
	$16 = [10]
	goto $label$11 
	
.LABEL $label$32
	$8 = *($5)
	if ( $8 ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$31
	if ( ((uint_64)$15 >= (uint_64)$4) ){ goto $label$17 }
	$16 = [9]
	goto $label$11 
	
.LABEL $label$30
	$9 = ($5 + [4])
	$8 = *($5 + [4])
	if ( ($8 == 0) ){ goto $label$20 }
	$16 = [0]
	goto $label$11 
	
.LABEL $label$29
	$5 = $9
	goto $label$21 
	
.LABEL $label$28
	if ( (*($9) == 0) ){ goto $label$16 }
	$16 = [4]
	goto $label$11 
	
.LABEL $label$27
	$13 = ($13 + [1])
	if ( ((int_32)$13 != (int_32)$10) ){ goto $label$14 }
	goto $label$3 
	
.LABEL $label$26
	$9 = $5
	if ( *($9) ){ goto $label$15 }
	$16 = [6]
	goto $label$11 
	
.LABEL $label$25
	*(($8 = CALL $7([56]))) = (int_64)0
	*($8 + [8]) = $5
	*($8 + [24]) = *($2 + [8])
	*(($8 + [32])) = *($14)
	*(($8 + [40])) = *($6)
	*(($8 + [48])) = *($12)
	*($9) = $8
	*($8 + [16]) = *($2 + [40])
	$5 = *(*($1))
	if ( ($5 == 0) ){ goto $label$12 }
	$16 = [7]
	goto $label$11 
	
.LABEL $label$24
	*($1) = $5
	$8 = *($9)
	$16 = [8]
	goto $label$11 
	
.LABEL $label$23
	CALL $78(*(($1 + [4])), $8)
	*(($5 = ($1 + [8]))) = (*($5) + [1])
	$13 = ($13 + [1])
	if ( ((int_32)$13 != (int_32)$10) ){ goto $label$13 }
	goto $label$3 
	
.LABEL $label$22
	$16 = [2]
	goto $label$11 
	
.LABEL $label$21
	$16 = [1]
	goto $label$11 
	
.LABEL $label$20
	$16 = [3]
	goto $label$11 
	
.LABEL $label$19
	$16 = [11]
	goto $label$11 
	
.LABEL $label$18
	$16 = [1]
	goto $label$11 
	
.LABEL $label$17
	$16 = [3]
	goto $label$11 
	
.LABEL $label$16
	$16 = [6]
	goto $label$11 
	
.LABEL $label$15
	$16 = [4]
	goto $label$11 
	
.LABEL $label$14
	$16 = [5]
	goto $label$11 
	
.LABEL $label$13
	$16 = [5]
	goto $label$11 
	
.LABEL $label$12
	$16 = [8]
	goto $label$11 
	
.LABEL $label$10
	$9 = *($7)
	goto $label$4 
	
.LABEL $label$3
	$global$0 = ($2 + [64])
	$16
	return $0
}

void .FUNC $121 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [320])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [312]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$5
	CALL memcpy(($3 + [312]), $2, [8])
	*(($3 + [8])) = $5
	*($3 + [20]) = ($2 + [8])
	*($3 + [16]) = $2
	*($3 + [24]) = $5
	*($3) = *($3 + [16])
	$2 = CALL $99(($3 + [32]), $0, $1, $3)
	CALL $69($2, *($3 + [312]))
	CALL $100($2)
	$global$0 = ($3 + [320])
}

void .FUNC $136 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9981])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10027])
	
.LABEL $label$2
	$3 = *($3)
	*($1) = *($3)
	*(($6 = ($1 + [32]))) = *(($3 + [32]))
	*(($1 + [24])) = *(($3 + [24]))
	*(($7 = ($1 + [16]))) = *(($3 + [16]))
	*(($1 + [8])) = *(($3 + [8]))
	$4 = $4
	$3 = ($4 + [-48])
	$global$0 = $3
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($4 + [-8])
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $7
	*($5 + [32]) = $1
	*($5 + [40]) = $6
	CALL $140(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [44]), $2, $3, [40])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)7235159537265672192) ){ goto $label$3 }
	*(($0 + [16])) = (int_64)7235159537265672193
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

void .FUNC $137 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [80])
	$global$0 = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [10137])
	
.LABEL $label$1
	*(($5 = CALL $7([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [40]) = $1
	$3 = *($3)
	*($5) = *($3)
	*($5 + [8]) = *(($3 + [8]))
	*($5 + [16]) = *(($3 + [16]))
	*($5 + [24]) = *(($3 + [24]))
	*(($6 = ($5 + [32]))) = *(($3 + [32]))
	*($4 + [48]) = ($4 + [40])
	*($4 + [44]) = $4
	*($4 + [40]) = $4
	*($4 + [56]) = ($4 + [40])
	*($4 + [68]) = ($5 + [16])
	*($4 + [64]) = $5
	*($4 + [72]) = $6
	CALL $140(($4 + [64]), ($4 + [56]))
	$6 = CALL db_store_i64(*($1 + [8]), (int_64)7235159537265672192, $2, (int_64)7235159537265672192, $4, [40])
	*($5 + [44]) = $6
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)7235159537265672192) ){ goto $label$2 }
	*(($1 + [16])) = (int_64)7235159537265672193
	
.LABEL $label$2
	*($4 + [64]) = $5
	*($4) = (int_64)7235159537265672192
	*($4 + [40]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = (int_64)7235159537265672192
	*($3 + [16]) = $6
	*($4 + [64]) = [0]
	*($3) = $5
	*($7) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $131(($1 + [24]), ($4 + [64]), $4, ($4 + [40]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [64])
	*($4 + [64]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $9($5)
	
.LABEL $label$5
	$global$0 = ($4 + [80])
}

void .FUNC $120 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [320])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [312]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$5
	CALL memcpy(($3 + [312]), $2, [8])
	*(($3 + [8])) = $5
	*($3 + [20]) = ($2 + [8])
	*($3 + [16]) = $2
	*($3 + [24]) = $5
	*($3) = *($3 + [16])
	$2 = CALL $99(($3 + [32]), $0, $1, $3)
	$0 = *($3 + [312])
	if ( CALL has_auth($0) ){ goto $label$6 }
	if ( CALL has_auth(*($2)) ){ goto $label$6 }
	CALL eosio_assert([0], [8315])
	
.LABEL $label$6
	CALL $36($2, $0, [0])
	CALL $100($2)
	$global$0 = ($3 + [320])
}

void .FUNC $38 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9981])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10027])
	
.LABEL $label$2
	$7 = *($1 + [8])
	$6 = *($3)
	if ( ((int_64)*($6 + [8]) == (int_64)$7) ){ goto $label$3 }
	CALL eosio_assert([0], [9375])
	
.LABEL $label$3
	$8 = ((int_64)*($1) + (int_64)*($6))
	*($1) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9418])
	$8 = *($1)
	
.LABEL $label$4
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9437])
	
.LABEL $label$5
	*($1 + [16]) = *(*($3 + [4]))
	$6 = ($1 + [16])
	if ( ((int_64)$7 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10078])
	
.LABEL $label$6
	$4 = $4
	$3 = ($4 + [-32])
	$global$0 = $3
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = $4
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $6
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [24])
	CALL $41(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [36]), $2, $3, [32])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [48])
}

int_32 .FUNC $126 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9703])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	$7 = ($0 + [4])
	$1 = ($0 + [8])
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$5 }
	$8 = [2]
	goto $label$3 
	
.LABEL $label$5
	$8 = [0]
	goto $label$3 
	
.LABEL $label$4
	$8 = [3]
	
.LABEL $label$3
	
.LOOP $label$6:
	goto $label$10 
	
.LABEL $label$12
	$4 = *($7)
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$7 }
	$8 = [2]
	goto $label$6 
	
.LABEL $label$11
	CALL eosio_assert([0], [9703])
	$4 = *($7)
	$8 = [0]
	goto $label$6 
	
.LABEL $label$10
	CALL memcpy($4, $6, [2])
	*($7) = (*($7) + [2])
	CALL $127($0, ($6 + [4]))
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$8 }
	$8 = [3]
	goto $label$6 
	
.LABEL $label$9
	$global$0 = ($2 + [16])
	return $0
	
.LABEL $label$8
	$8 = [1]
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	goto $label$6 
	return $8
}

void .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $7($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $15($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $9($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$5 }
	CALL eosio_assert([0], [9546])
	$3 = [12]
	goto $label$4 
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$6:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$8 }
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$9 }
	$7 = ($7 + [-48])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [-91])
	goto $label$7 
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert([0], [9651])
	$4 = *($0)
	
.LABEL $label$7
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$2
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [9584])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [9651])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $125 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [9703])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [4])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [9703])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [2])
	$4 = (*($3) + [2])
	*($3) = $4
	$3 = ($1 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [9703])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [4])
	$3 = (*($4) + [4])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [12])
	$8 = ($0 + [8])
	
.LOOP $label$4:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [14]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [9703])
	$3 = *($4)
	
.LABEL $label$5
	CALL memcpy($3, ($2 + [14]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$4 }
	$4 = ($1 + [16])
	$8 = ($0 + [8])
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [9703])
	$3 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $4, [1])
	$3 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [20])
	
.LOOP $label$7:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [15]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [9703])
	$3 = *($4)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$7 }
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $43 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $42 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9703])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9703])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9703])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9703])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9703])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *($1 + [8])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9703])
	$4 = *($3)
	
.LABEL $label$2
	$6 = ($1 + [16])
	CALL memcpy($4, ($2 + [8]), [8])
	$1 = (*($3) + [8])
	*($3) = $1
	if ( ((int_32)(*($5) - $1) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9703])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $6, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10233])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1 + [8])
	if ( (uint_64)(((int_64)*(*(($4 + [-24])) + [8]) ^ (int_64)$6) <= (int_64)256) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((uint_64)((int_64)*(*($9) + [8]) ^ (int_64)$6) >= (uint_64)(int_64)256) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10283])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $46 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9981])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10027])
	
.LABEL $label$2
	$5 = *($1 + [8])
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [9455])
	
.LABEL $label$3
	$6 = (int_64)
	*($1) = $6(*($1) - *($2)))
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9503])
	$6 = *($1)
	
.LABEL $label$4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9525])
	
.LABEL $label$5
	$2 = ($1 + [8])
	if ( ((int_64)$5 == (int_64)(uint_64)*($2) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10078])
	
.LABEL $label$6
	$7 = $3
	$3 = ($7 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	*($4 + [8]) = *($2)
	CALL memcpy(($7 + [-8]), ($4 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $3, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($4 + [16])
}

int_32 .FUNC $45 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9878])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3607749779137757184, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $71($0, $5)
	if ( ((int_32)*($6 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9878])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

void .FUNC $44 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9981])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10027])
	
.LABEL $label$2
	$7 = *($1 + [8])
	$6 = *($3)
	if ( ((int_64)*($6 + [8]) == (int_64)$7) ){ goto $label$3 }
	CALL eosio_assert([0], [9375])
	
.LABEL $label$3
	$8 = ((int_64)*($1) + (int_64)*($6))
	*($1) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9418])
	$8 = *($1)
	
.LABEL $label$4
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9437])
	
.LABEL $label$5
	*($1 + [16]) = *(*($3 + [4]))
	$6 = ($1 + [16])
	if ( ((int_64)$7 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10078])
	
.LABEL $label$6
	$4 = $4
	$3 = ($4 + [-32])
	$global$0 = $3
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = $4
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $6
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [24])
	CALL $41(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [36]), $2, $3, [32])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [48])
}

void .FUNC $124 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [368])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [356]) = $2
	*($3 + [352]) = $2
	*($3 + [360]) = ($2 + $4)
	*($3 + [344]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10336])
	$2 = *($3 + [356])
	
.LABEL $label$5
	CALL memcpy(($3 + [344]), $2, [8])
	*($3 + [356]) = ($2 + [8])
	*($3 + [336]) = [0]
	*($3 + [328]) = (int_64)0
	CALL $101(($3 + [352]), ($3 + [328]))
	$2 = *((($3 + [352]) + [8]))
	*((($3 + [32]) + [8])) = $2
	*(($3 + [8])) = $2
	$5 = *($3 + [352])
	*($3) = $5
	*($3 + [32]) = $5
	$2 = CALL $99(($3 + [48]), $0, $1, $3)
	$0 = *($3 + [344])
	$4 = CALL $19(($3 + [16]), ($3 + [328]))
	CALL $28($2, $0, $3)
	if ( (*($4) & [1]) ){ goto $label$8 }
	CALL $100($2)
	if ( (*($3 + [328]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $9(*($4 + [8]))
	CALL $100($2)
	if ( ((*($3 + [328]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($3 + [336])))
	$global$0 = ($3 + [368])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [368])
}

int_32 .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9703])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9703])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9703])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $8 (int_32 $0)
{
	return CALL $7($0)
}

void .FUNC $9 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $2($0)
	
.LABEL $label$1
}

int_32 .FUNC $6 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $4())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $5($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $7 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $1($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $1($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $4 ()
{
	return [8208]
}

int_32 .FUNC $5 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $1($1)
	
.LABEL $label$2
	*(CALL $4()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $1(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $2($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC $2 (int_32 $0)
{
}

void .FUNC $3 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

void .FUNC $0 ()
{
	CALL $3()
}

int_32 .FUNC $1 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8232])
	return $3
	
.LABEL $label$1
	return $3
}

void .FUNC $14 (int_32 $0, int_32 $1)
{
	CALL $13($0, $1)
}

void .FUNC $15 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_64 .FUNC $16 ()
{
	int_64 $0
	if ( (*([0] + [8220]) == 0) ){ goto $label$1 }
	return *([0] + [8224])
	
.LABEL $label$1
	$0 = CALL current_time()
	*([0] + [8220]) = [1]
	*([0] + [8224]) = $0
	return $0
}

int_32 .FUNC $17 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

void .FUNC $10 (int_32 $0)
{
	CALL $9($0)
}

int_32 .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $6(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $6(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	return CALL $11($0, $1)
}

void .FUNC $13 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $2($0)
	
.LABEL $label$1
}

void .FUNC $75 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_64 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$6 = ($global$0 - [224])
	$global$0 = $6
	CALL require_auth(*($0))
	$7 = ($0 + [228])
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$3 }
	$9 = $7
	
.LOOP $label$4:
	$10 = (uint_64)(*($8 + [16]) <= $1)
	$9 = ( $9 ? $8 : $10 )
	$8 = *(($8 + ($10 << [2])))
	if ( $8 ){ goto $label$4 }
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$3 }
	if ( ((uint_64)*($9 + [16]) <= (uint_64)$1) ){ goto $label$2 }
	
.LABEL $label$3
	$11 = *($0 + [32])
	*($6 + [216]) = $11
	*($6 + [208]) = $2
	$12 = *($0 + [40])
	if ( (uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$5 }
	CALL eosio_assert([0], [9326])
	
.LABEL $label$5
	$2 = (uint_64)$11 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$11 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$2 = $11
	$9 = $8
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$2 = $11
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$9 = ((int_32)$8 < (int_32)[6])
	$10 = ($8 + [1])
	$8 = $10
	if ( $9 ){ goto $label$10 }
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [8337])
	
.LABEL $label$6
	*(($6 + [200])) = [0]
	*($6 + [192]) = (int_64)0
	$8 = CALL $17([8730])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$13 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$16 }
	*($6 + [192]) = ($8 << [1])
	$9 = (($6 + [192]) | [1])
	if ( $8 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$10 = (($8 + [16]) & [-16])
	$9 = CALL $7($10)
	*($6 + [192]) = ($10 | [1])
	*($6 + [200]) = $9
	*($6 + [196]) = $8
	
.LABEL $label$15
	CALL memcpy($9, [8730], $8)
	
.LABEL $label$14
	*(($9 + $8)) = [0]
	*((($6 + [56]) + [8])) = *((($6 + [208]) + [8]))
	*($6 + [56]) = *($6 + [208])
	CALL $76($0, $12, ($6 + [56]), ($6 + [192]))
	if ( ((*($6 + [192]) & [1]) == 0) ){ goto $label$17 }
	CALL $9(*($6 + [200]))
	
.LABEL $label$17
	*((($6 + [152]) + [32])) = [0]
	*($6 + [168]) = (int_64)-1
	*($6 + [176]) = (int_64)0
	*($6 + [152]) = *($0)
	*($6 + [160]) = *(($0 + [40]))
	$2 = *(($0 + [32]))
	*($6 + [144]) = $2
	$11 = ((int_64)((int_64)$4 + (int_64)$3) + (int_64)$5)
	*($6 + [136]) = $11
	if ( (uint_64)(((int_64)$11 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$18 }
	CALL eosio_assert([0], [9326])
	$2 = *(($6 + [144]))
	
.LABEL $label$18
	$8 = [0]
	$12 = (uint_64)$2 >> (uint_64)(int_64)8
	$2 = $12)
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$11 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$22 }
	$2 = $11
	$9 = $8
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$22
	$2 = $11
	
.LOOP $label$23:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$20 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$9 = ((int_32)$8 < (int_32)[6])
	$10 = ($8 + [1])
	$8 = $10
	if ( $9 ){ goto $label$23 }
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	CALL eosio_assert([0], [8337])
	$12 = (uint_64)*(($6 + [144])) >> (uint_64)(int_64)8)
	
.LABEL $label$19
	$11 = *($6 + [136])
	$8 = CALL $45(($6 + [152]), $12, [8746])
	$2 = *($8)
	if ( ((int_64)$2 >= (int_64)$11) ){ goto $label$24 }
	CALL eosio_assert([0], [8770])
	$2 = *($8)
	$11 = *($6 + [136])
	
.LABEL $label$24
	if ( ((int_64)$2 != (int_64)$11) ){ goto $label$26 }
	CALL $47(($6 + [152]), $8)
	goto $label$25 
	
.LABEL $label$26
	$2 = *($0)
	*($6 + [72]) = ($6 + [136])
	CALL $77(($6 + [152]), $8, $2, ($6 + [72]))
	
.LABEL $label$25
	$2 = *(($0 + [32]))
	*($6 + [128]) = $2
	*($6 + [120]) = $3
	$12 = *($0 + [48])
	$13 = ((int_64)$3 + (int_64)4611686018427387903)
	if ( (uint_64)($13 <= (int_64)9223372036854775807) ){ goto $label$27 }
	CALL eosio_assert([0], [9326])
	$2 = *(($6 + [128]))
	
.LABEL $label$27
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$30:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$29 }
	$11 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$31 }
	$2 = $11
	$9 = $8
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$30 }
	goto $label$28 
	
.LABEL $label$31
	$2 = $11
	
.LOOP $label$32:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$29 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$9 = ((int_32)$8 < (int_32)[6])
	$10 = ($8 + [1])
	$8 = $10
	if ( $9 ){ goto $label$32 }
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$30 }
	goto $label$28 
	
.LABEL $label$29
	CALL eosio_assert([0], [8337])
	
.LABEL $label$28
	$2 = *($0)
	*((($6 + [40]) + [8])) = *((($6 + [120]) + [8]))
	*($6 + [40]) = *($6 + [120])
	CALL $70($0, $12, ($6 + [40]), $2)
	$2 = *(($0 + [32]))
	*($6 + [112]) = $2
	*($6 + [104]) = $4
	$12 = *($0 + [56])
	if ( (uint_64)(((int_64)$4 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$33 }
	CALL eosio_assert([0], [9326])
	$2 = *((($6 + [104]) + [8]))
	
.LABEL $label$33
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$36:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$35 }
	$11 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$37 }
	$2 = $11
	$9 = $8
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$37
	$2 = $11
	
.LOOP $label$38:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$35 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$9 = ((int_32)$8 < (int_32)[6])
	$10 = ($8 + [1])
	$8 = $10
	if ( $9 ){ goto $label$38 }
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$35
	CALL eosio_assert([0], [8337])
	
.LABEL $label$34
	$2 = *($0)
	*((($6 + [24]) + [8])) = *((($6 + [104]) + [8]))
	*($6 + [24]) = *($6 + [104])
	CALL $70($0, $12, ($6 + [24]), $2)
	$2 = *(($0 + [32]))
	*($6 + [96]) = $2
	*($6 + [88]) = $5
	$4 = *($0 + [64])
	if ( (uint_64)(((int_64)$5 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$39 }
	CALL eosio_assert([0], [9326])
	$2 = *((($6 + [88]) + [8]))
	
.LABEL $label$39
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$42:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$41 }
	$11 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$43 }
	$2 = $11
	$9 = $8
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$42 }
	goto $label$40 
	
.LABEL $label$43
	$2 = $11
	
.LOOP $label$44:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$41 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$9 = ((int_32)$8 < (int_32)[6])
	$10 = ($8 + [1])
	$8 = $10
	if ( $9 ){ goto $label$44 }
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$42 }
	goto $label$40 
	
.LABEL $label$41
	CALL eosio_assert([0], [8337])
	
.LABEL $label$40
	$2 = *($0)
	*((($6 + [8]) + [8])) = *((($6 + [88]) + [8]))
	*($6 + [8]) = *($6 + [88])
	CALL $70($0, $4, ($6 + [8]), $2)
	$4 = *(($0 + [32]))
	if ( (uint_64)($13 <= (int_64)9223372036854775807) ){ goto $label$45 }
	CALL eosio_assert([0], [9326])
	
.LABEL $label$45
	$2 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$48:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$47 }
	$11 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$49 }
	$2 = $11
	$9 = $8
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$48 }
	goto $label$46 
	
.LABEL $label$49
	$2 = $11
	
.LOOP $label$50:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$47 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$9 = ((int_32)$8 < (int_32)[6])
	$10 = ($8 + [1])
	$8 = $10
	if ( $9 ){ goto $label$50 }
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$48 }
	goto $label$46 
	
.LABEL $label$47
	CALL eosio_assert([0], [8337])
	
.LABEL $label$46
	*(($6 + [80])) = *(($0 + [216]))
	*($6 + [72]) = *($0 + [208])
	$9 = ($0 + [228])
	$8 = *($9)
	if ( ($8 == 0) ){ goto $label$51 }
	$2 = *($8 + [16])
	if ( ((uint_64)$2 <= (uint_64)$1) ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$51
	$8 = $7
	$9 = $7
	$14 = [3]
	goto $label$1 
	
.LABEL $label$13
	CALL $18(($6 + [192]))
	
.LABEL $label$12
	$14 = [18]
	goto $label$1 
	
.LABEL $label$11
	$14 = [2]
	goto $label$1 
	
.LABEL $label$2
	$14 = [12]
	
.LABEL $label$1
	
.LOOP $label$52:
	goto $label$84 
	
.LABEL $label$88
	$9 = $8
	$8 = $10
	$2 = *($8 + [16])
	if ( ((uint_64)$2 <= (uint_64)$1) ){ goto $label$68 }
	$14 = [18]
	goto $label$52 
	
.LABEL $label$87
	$10 = *($8)
	if ( $10 ){ goto $label$64 }
	goto $label$65 
	
.LABEL $label$86
	if ( ((uint_64)$2 >= (uint_64)$1) ){ goto $label$63 }
	$14 = [17]
	goto $label$52 
	
.LABEL $label$85
	$9 = ($8 + [4])
	$10 = *($8 + [4])
	if ( ($10 == 0) ){ goto $label$66 }
	$14 = [0]
	goto $label$52 
	
.LABEL $label$84
	$8 = $9
	goto $label$67 
	
.LABEL $label$83
	if ( *($9) ){ goto $label$62 }
	$14 = [14]
	goto $label$52 
	
.LABEL $label$82
	*(($10 = CALL $7([56])) + [32]) = $4
	*($10 + [24]) = $3
	*($10) = (int_64)0
	*($10 + [8]) = $8
	*($10 + [40]) = *($6 + [72])
	*(($10 + [48])) = *(($6 + [80]))
	*($9) = $10
	*($10 + [16]) = $1
	$8 = ($0 + [224])
	$7 = *(*($8))
	if ( ($7 == 0) ){ goto $label$53 }
	$14 = [15]
	goto $label$52 
	
.LABEL $label$81
	*($8) = $7
	$10 = *($9)
	$14 = [16]
	goto $label$52 
	
.LABEL $label$80
	CALL $78(*(($0 + [228])), $10)
	*(($8 = ($0 + [232]))) = (*($8) + [1])
	$10 = *($6 + [176])
	if ( $10 ){ goto $label$58 }
	goto $label$59 
	
.LABEL $label$79
	$9 = $8
	if ( (*($9) == 0) ){ goto $label$61 }
	$14 = [4]
	goto $label$52 
	
.LABEL $label$78
	$10 = *($6 + [176])
	if ( ($10 == 0) ){ goto $label$60 }
	$14 = [5]
	goto $label$52 
	
.LABEL $label$77
	$0 = ($6 + [180])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$10) ){ goto $label$57 }
	$14 = [6]
	goto $label$52 
	
.LABEL $label$76
	$14 = [7]
	goto $label$52 
	
.LABEL $label$75
	$8 = ($8 + [-24])
	$9 = *($8)
	*($8) = [0]
	if ( ($9 == 0) ){ goto $label$55 }
	$14 = [8]
	goto $label$52 
	
.LABEL $label$74
	CALL $9($9)
	$14 = [9]
	goto $label$52 
	
.LABEL $label$73
	if ( ((int_32)$10 != (int_32)$8) ){ goto $label$56 }
	$14 = [10]
	goto $label$52 
	
.LABEL $label$72
	$8 = *(($6 + [176]))
	goto $label$54 
	
.LABEL $label$71
	$8 = $10
	$14 = [11]
	goto $label$52 
	
.LABEL $label$70
	*($0) = $10
	CALL $9($8)
	$14 = [12]
	goto $label$52 
	
.LABEL $label$69
	$global$0 = ($6 + [224])
	return 
	
.LABEL $label$68
	$14 = [2]
	goto $label$52 
	
.LABEL $label$67
	$14 = [1]
	goto $label$52 
	
.LABEL $label$66
	$14 = [3]
	goto $label$52 
	
.LABEL $label$65
	$14 = [19]
	goto $label$52 
	
.LABEL $label$64
	$14 = [1]
	goto $label$52 
	
.LABEL $label$63
	$14 = [3]
	goto $label$52 
	
.LABEL $label$62
	$14 = [4]
	goto $label$52 
	
.LABEL $label$61
	$14 = [14]
	goto $label$52 
	
.LABEL $label$60
	$14 = [12]
	goto $label$52 
	
.LABEL $label$59
	$14 = [12]
	goto $label$52 
	
.LABEL $label$58
	$14 = [5]
	goto $label$52 
	
.LABEL $label$57
	$14 = [13]
	goto $label$52 
	
.LABEL $label$56
	$14 = [7]
	goto $label$52 
	
.LABEL $label$55
	$14 = [9]
	goto $label$52 
	
.LABEL $label$54
	$14 = [11]
	goto $label$52 
	
.LABEL $label$53
	$14 = [16]
	goto $label$52 
	(unreachable)
	$14
}

void .FUNC $18 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $7($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $58 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$3 = ($global$0 - [288])
	$global$0 = $3
	*($3 + [232]) = $1
	CALL require_auth($1)
	$4 = *($2 + [8])
	$5 = (uint_64)$4 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$7 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$5 = $7
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	$5 = $7
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$3 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$9 = ($6 + [1])
	$6 = $9
	if ( $8 ){ goto $label$7 }
	$6 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((int_64)$4 == (int_64)*($0 + [32])) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [8337])
	if ( ((int_64)$4 == (int_64)*($0 + [32])) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8446])
	
.LABEL $label$1
	if ( ((int_64)*($2) > (int_64)0) ){ goto $label$8 }
	CALL eosio_assert([0], [8390])
	
.LABEL $label$8
	*((($3 + [192]) + [32])) = [0]
	*($3 + [208]) = (int_64)-1
	*($3 + [216]) = (int_64)0
	$5 = *($0)
	*($3 + [192]) = $5
	$6 = ($2 + [8])
	$7 = *($6)
	*($3 + [200]) = $1
	$8 = CALL db_find_i64($5, $1, (int_64)-5964829140208058368, (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_32)$8) < (int_32)[0]) ){ goto $label$9 }
	if ( ((int_32)*(CALL $35(($3 + [192]), $8) + [24]) == (int_32)($3 + [192])) ){ goto $label$10 }
	CALL eosio_assert([0], [9878])
	
.LABEL $label$10
	CALL $36($0, *($3 + [232]), [0])
	$1 = *($3 + [232])
	
.LABEL $label$9
	*((($3 + [152]) + [32])) = [0]
	*($3 + [160]) = $1
	*($3 + [168]) = (int_64)-1
	*($3 + [176]) = (int_64)0
	*($3 + [152]) = *($0)
	$9 = CALL $37(($3 + [152]), (uint_64)*($6) >> (uint_64)(int_64)8), [8476])
	if ( ((int_64)*($2) <= (int_64)*($9)) ){ goto $label$11 }
	CALL eosio_assert([0], [8497])
	$1 = *($3 + [232])
	
.LABEL $label$11
	*(($3 + [144])) = [0]
	*($3 + [128]) = (int_64)-1
	*($3 + [136]) = (int_64)0
	$5 = *($0)
	*($3 + [112]) = $5
	$7 = *(($2 + [8]))
	*($3 + [120]) = $1
	$6 = CALL db_find_i64($5, $1, (int_64)-5001342331490664448, (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_32)$6) < (int_32)[0]) ){ goto $label$13 }
	$6 = CALL $31(($3 + [112]), $6)
	if ( ((int_32)*($6 + [24]) == (int_32)($3 + [112])) ){ goto $label$14 }
	CALL eosio_assert([0], [9878])
	
.LABEL $label$14
	$5 = *($0)
	*($3 + [40]) = $2
	CALL $59(($3 + [112]), $6, $5, ($3 + [40]))
	goto $label$12 
	
.LABEL $label$13
	$1 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($3 + [112])) ){ goto $label$15 }
	CALL eosio_assert([0], [10137])
	
.LABEL $label$15
	*(($6 = CALL $7([40])) + [24]) = ($3 + [112])
	*($6 + [8]) = *(($2 + [8]))
	*($6) = *($2)
	*($6 + [16]) = CALL $16()
	*($3 + [48]) = (($3 + [240]) + [24])
	*($3 + [44]) = ($3 + [240])
	*($3 + [40]) = ($3 + [240])
	CALL $60(($3 + [40]), $6)
	$5 = (uint_64)*($6 + [8]) >> (uint_64)(int_64)8
	$10 = CALL db_store_i64(*((($3 + [112]) + [8])), (int_64)-5001342331490664448, $1, $5), ($3 + [240]), [24]
	*($6 + [28]) = $10)
	$8 = ($3 + [128])
	if ( (uint_64)($5 <= *($8)) ){ goto $label$16 }
	*($8) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$16
	*($3 + [240]) = $6
	$5 = (uint_64)*(($6 + [8])) >> (uint_64)(int_64)8
	*($3 + [40]) = $5)
	*($3 + [272]) = $10
	$11 = ($3 + [140])
	$8 = *($11)
	if ( ((uint_32)$8 >= (uint_32)*(($3 + [144]))) ){ goto $label$18 }
	*($8 + [8]) = $5
	*($8 + [16]) = $10
	*($3 + [240]) = [0]
	*($8) = $6
	*($11) = ($8 + [24])
	$6 = *($3 + [240])
	*($3 + [240]) = [0]
	if ( $6 ){ goto $label$17 }
	goto $label$12 
	
.LABEL $label$18
	CALL $61(($3 + [136]), ($3 + [240]), ($3 + [40]), ($3 + [272]))
	$6 = *($3 + [240])
	*($3 + [240]) = [0]
	if ( ($6 == 0) ){ goto $label$12 }
	
.LABEL $label$17
	CALL $9($6)
	
.LABEL $label$12
	$5 = ((uint_64)((int_64)((int_64)CALL $16() / (int_64)1000000) & (int_64)4294967295) / (uint_64)*($0 + [80]))
	*($3 + [104]) = $5
	if ( ((uint_64)*($9 + [24]) >= (uint_64)$5) ){ goto $label$19 }
	if ( ((uint_64)*($9 + [16]) >= (uint_64)$5) ){ goto $label$19 }
	*(($3 + [72])) = [0]
	*($3 + [56]) = (int_64)-1
	*($3 + [64]) = (int_64)0
	$1 = *($0)
	*($3 + [40]) = $1
	*($3 + [48]) = *($3 + [232])
	if ( ((int_64)CALL current_receiver() == (int_64)*($3 + [40])) ){ goto $label$20 }
	CALL eosio_assert([0], [10137])
	
.LABEL $label$20
	*(($6 = CALL $7([40])) + [8]) = (int_64)0
	*($6) = (int_64)0
	*($6 + [24]) = ($3 + [40])
	*($6 + [8]) = *(($9 + [8]))
	*($6) = *($9)
	*($6 + [16]) = *(($9 + [16]))
	*($3 + [280]) = (($3 + [240]) + [24])
	*($3 + [276]) = ($3 + [240])
	*($3 + [272]) = ($3 + [240])
	CALL $40(($3 + [272]), $6)
	$5 = *($6 + [16])
	$10 = CALL db_store_i64(*((($3 + [40]) + [8])), (int_64)7760153368969871360, $1, $5, ($3 + [240]), [24])
	*($6 + [28]) = $10
	$8 = (($3 + [40]) + [16])
	if ( (uint_64)($5 <= *($8)) ){ goto $label$21 }
	*($8) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$21
	*($3 + [272]) = $6
	$5 = *(($6 + [16]))
	*($3 + [240]) = $5
	*($3 + [268]) = $10
	$11 = ($3 + [68])
	$8 = *($11)
	if ( ((uint_32)$8 >= (uint_32)*(($3 + [72]))) ){ goto $label$24 }
	*($8 + [8]) = $5
	*($8 + [16]) = $10
	*($3 + [272]) = [0]
	*($8) = $6
	*($11) = ($8 + [24])
	$6 = *($3 + [272])
	*($3 + [272]) = [0]
	if ( $6 ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	CALL $43(($3 + [64]), ($3 + [272]), ($3 + [240]), ($3 + [268]))
	$6 = *($3 + [272])
	*($3 + [272]) = [0]
	if ( ($6 == 0) ){ goto $label$22 }
	
.LABEL $label$23
	CALL $9($6)
	
.LABEL $label$22
	$10 = *($3 + [64])
	if ( ($10 == 0) ){ goto $label$19 }
	$11 = ($3 + [68])
	$6 = *($11)
	if ( ((int_32)$6 == (int_32)$10) ){ goto $label$26 }
	
.LOOP $label$27:
	$6 = ($6 + [-24])
	$8 = *($6)
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$28 }
	CALL $9($8)
	
.LABEL $label$28
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$27 }
	$6 = *(($3 + [64]))
	goto $label$25 
	
.LABEL $label$26
	$6 = $10
	
.LABEL $label$25
	*($11) = $10
	CALL $9($6)
	
.LABEL $label$19
	$5 = *($0)
	*($3 + [44]) = ($3 + [104])
	*($3 + [40]) = $2
	CALL $62(($3 + [152]), $9, $5, ($3 + [40]))
	if ( ((int_64)*(($2 + [8])) == (int_64)*(($0 + [216]))) ){ goto $label$29 }
	CALL eosio_assert([0], [9455])
	
.LABEL $label$29
	$5 = (int_64)
	*($0 + [208]) = $5(*($0 + [208]) - *($2)))
	if ( ((int_64)$5 > (int_64)-4611686018427387904) ){ goto $label$30 }
	CALL eosio_assert([0], [9503])
	$5 = *(($0 + [208]))
	
.LABEL $label$30
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$31 }
	CALL eosio_assert([0], [9525])
	
.LABEL $label$31
	if ( ((int_64)*(($2 + [8])) == (int_64)*(($0 + [152]))) ){ goto $label$32 }
	CALL eosio_assert([0], [9455])
	
.LABEL $label$32
	$5 = (int_64)
	*(($6 = ($0 + [144]))) = $5(*($6) - *($2)))
	if ( ((int_64)$5 > (int_64)-4611686018427387904) ){ goto $label$33 }
	CALL eosio_assert([0], [9503])
	$5 = *($6)
	
.LABEL $label$33
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$34 }
	CALL eosio_assert([0], [9525])
	
.LABEL $label$34
	$5 = CALL $16()
	*((($3 + [40]) + [28])) = (int_64)0
	*(($3 + [84])) = (int_64)0
	*(($3 + [92])) = (int_64)0
	*($3 + [52]) = [0]
	*($3 + [56]) = [0]
	*($3 + [60 align=4]) = (int_64)0
	*($3 + [76 align=4]) = (int_64)0
	*($3 + [40]) = ((CASTING uint_32)(uint_64 ((int_64)$5 / (int_64)1000000)) + [60])
	$5 = *($0)
	*($3 + [24]) = [8534]
	*($3 + [28]) = CALL $17([8534])
	*($3 + [8]) = *($3 + [24])
	$6 = CALL $48(($3 + [32]), ($3 + [8]))
	*($3 + [240]) = $5
	*($3 + [248]) = *($6)
	*($3 + [16]) = [8539]
	*($3 + [20]) = CALL $17([8539])
	*($3) = *($3 + [16])
	CALL $63(($3 + [76]), ($3 + [240]), $0, CALL $48(($3 + [272]), $3), ($3 + [232]))
	$5 = *($3 + [232])
	*($3 + [60]) = [259200]
	*($3 + [248]) = (int_64)0
	*($3 + [240]) = $5
	CALL cancel_deferred(($3 + [240]))
	*($3 + [248]) = (int_64)0
	$5 = *($3 + [232])
	*($3 + [240]) = $5
	CALL $64(($3 + [40]), ($3 + [240]), $5, [1])
	CALL $65(($3 + [40]))
	$9 = *($3 + [136])
	if ( ($9 == 0) ){ goto $label$35 }
	$6 = *((($3 + [112]) + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$37 }
	
.LOOP $label$38:
	$6 = ($6 + [-24])
	$8 = *($6)
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$39 }
	CALL $9($8)
	
.LABEL $label$39
	if ( ((int_32)$9 != (int_32)$6) ){ goto $label$38 }
	$6 = *(($3 + [136]))
	goto $label$36 
	
.LABEL $label$37
	$6 = $9
	
.LABEL $label$36
	*(($3 + [140])) = $9
	CALL $9($6)
	
.LABEL $label$35
	$9 = *($3 + [176])
	if ( ($9 == 0) ){ goto $label$40 }
	$0 = ($3 + [180])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$42 }
	
.LOOP $label$43:
	$6 = ($6 + [-24])
	$8 = *($6)
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$44 }
	CALL $9($8)
	
.LABEL $label$44
	if ( ((int_32)$9 != (int_32)$6) ){ goto $label$43 }
	$6 = *(($3 + [176]))
	goto $label$41 
	
.LABEL $label$42
	$6 = $9
	
.LABEL $label$41
	*($0) = $9
	CALL $9($6)
	
.LABEL $label$40
	$9 = *($3 + [216])
	if ( ($9 == 0) ){ goto $label$45 }
	$0 = ($3 + [220])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$47 }
	
.LOOP $label$48:
	$6 = ($6 + [-24])
	$8 = *($6)
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$49 }
	CALL $9($8)
	
.LABEL $label$49
	if ( ((int_32)$9 != (int_32)$6) ){ goto $label$48 }
	$6 = *(($3 + [216]))
	goto $label$46 
	
.LABEL $label$47
	$6 = $9
	
.LABEL $label$46
	*($0) = $9
	CALL $9($6)
	
.LABEL $label$45
	$global$0 = ($3 + [288])
}

void .FUNC $59 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9981])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10027])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9375])
	
.LABEL $label$3
	$7 = ((int_64)*($1) + (int_64)*($3))
	*($1) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9418])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9437])
	
.LABEL $label$5
	*($1 + [16]) = CALL $16()
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10078])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $60($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $4, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9703])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9703])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9703])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9703])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $146(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $51 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $49($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $74(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL $9($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

void .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10233])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1 + [8])
	if ( (uint_64)(((int_64)*(*(($4 + [-24])) + [8]) ^ (int_64)$6) <= (int_64)256) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((uint_64)((int_64)*(*($9) + [8]) ^ (int_64)$6) >= (uint_64)(int_64)256) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10283])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [28]))
}

int_32 .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9929])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [24]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$8
	$8 = ($5 + [16])
	CALL memcpy(($3 + [24]), $7, [8])
	*(($5 + [8])) = *($3 + [24])
	$7 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$9 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$9
	CALL memcpy($8, $7, [8])
	*($5 + [28]) = $1
	*($3 + [16]) = $5
	$9 = *(($5 + [16]))
	*($3 + [24]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$12 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $43(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $2($2)
	
.LABEL $label$10
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $9($1)
	
.LABEL $label$13
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10233])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1 + [16])
	if ( ((int_64)*(*(($4 + [-24])) + [16]) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9) + [16]) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10283])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [28]))
}

void .FUNC $34 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	*(($3 + [40])) = [0]
	*($3 + [16]) = $1
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	*($3 + [8]) = *($0)
	$4 = *($2)
	$0 = CALL $45(($3 + [8]), (uint_64)*($2 + [8]) >> (uint_64)(int_64)8), [8746]
	$1 = *($0)
	if ( ((int_64)$1) < (int_64)$4) ){ goto $label$5 }
	if ( ((int_64)$1 != (int_64)$4) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL eosio_assert([0], [8770])
	if ( ((int_64)*($0) == (int_64)*($2)) ){ goto $label$3 }
	
.LABEL $label$4
	*($3) = $2
	CALL $46(($3 + [8]), $0, $3)
	$5 = *($3 + [32])
	if ( ($5 == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $47(($3 + [8]), $0)
	$5 = *($3 + [32])
	if ( $5 ){ goto $label$1 }
	
.LABEL $label$2
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$1
	$6 = ($3 + [36])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$9 }
	CALL $9($0)
	
.LABEL $label$9
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$8 }
	$2 = *(($3 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$2 = $5
	
.LABEL $label$6
	*($6) = $5
	CALL $9($2)
	$global$0 = ($3 + [48])
}

void .FUNC $56 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9981])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10027])
	
.LABEL $label$2
	*($1 + [24]) = *(*($3))
	$6 = *($1 + [8])
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = $3
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = ($1 + [16])
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [24])
	CALL $41(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [36]), $2, $4, [32])
	$2 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( (uint_64)($2) <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ((int_64)$2 + (int_64)1)
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

void .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9703])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9703])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = *(($5 + [16]))
	if ( ((int_32)(*(($4 + [8])) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9703])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $116 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [368])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [360]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$5
	CALL memcpy(($3 + [360]), $2, [8])
	*($3 + [352]) = (int_64)0
	*($3 + [344]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [344]), $5, [8])
	*($3 + [64]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$7
	CALL memcpy(($3 + [64]), $5, [8])
	*(($5 = (($3 + [344]) + [8]))) = *($3 + [64])
	*((($3 + [16]) + [8])) = $4
	*($3 + [48]) = $2
	*($3 + [52]) = ($2 + [24])
	*($3 + [56]) = $4
	*($3 + [16]) = *($3 + [48])
	$2 = CALL $99(($3 + [64]), $0, $1, ($3 + [16]))
	$0 = *($5)
	*((($3 + [32]) + [8])) = $0
	*(($3 + [8])) = $0
	$0 = *($3 + [344])
	*($3 + [32]) = $0
	*($3) = $0
	CALL $87($2, *($3 + [360]), $3)
	CALL $100($2)
	$global$0 = ($3 + [368])
}

void .FUNC $117 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [432])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [420]) = $2
	*($3 + [416]) = $2
	$5 = ($2 + $4)
	*($3 + [424]) = $5
	*($3 + [408]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10336])
	$5 = *(($3 + [424]))
	$2 = *($3 + [420])
	
.LABEL $label$5
	CALL memcpy(($3 + [408]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [420]) = $2
	*($3 + [400]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10336])
	$5 = *((($3 + [416]) + [8]))
	$2 = *($3 + [420])
	
.LABEL $label$6
	CALL memcpy(($3 + [400]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [420]) = $2
	*($3 + [392]) = (int_64)0
	*($3 + [384]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10336])
	$5 = *(($3 + [424]))
	$2 = *($3 + [420])
	
.LABEL $label$7
	CALL memcpy(($3 + [384]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [420]) = $2
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10336])
	$2 = *($3 + [420])
	
.LABEL $label$8
	CALL memcpy(($3 + [88]), $2, [8])
	*(($4 = (($3 + [384]) + [8]))) = *($3 + [88])
	*($3 + [420]) = ($2 + [8])
	*($3 + [376]) = [0]
	*($3 + [368]) = (int_64)0
	CALL $101(($3 + [416]), ($3 + [368]))
	$2 = *((($3 + [416]) + [8]))
	*((($3 + [72]) + [8])) = $2
	*((($3 + [24]) + [8])) = $2
	$6 = *($3 + [416])
	*($3 + [24]) = $6
	*($3 + [72]) = $6
	$5 = CALL $99(($3 + [88]), $0, $1, ($3 + [24]))
	*(($7 = (($3 + [56]) + [8]))) = *($4)
	*($3 + [56]) = *($3 + [384])
	$0 = *($3 + [400])
	$1 = *($3 + [408])
	$2 = CALL $19(($3 + [40]), ($3 + [368]))
	*((($3 + [8]) + [8])) = *($7)
	*($3 + [8]) = *($3 + [56])
	CALL $89($5, $1, $0, ($3 + [8]), $2)
	if ( (*($2) & [1]) ){ goto $label$11 }
	CALL $100($5)
	if ( (*($3 + [368]) & [1]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $9(*($2 + [8]))
	CALL $100($5)
	if ( ((*($3 + [368]) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $9(*(($3 + [376])))
	$global$0 = ($3 + [432])
	return 
	
.LABEL $label$9
	$global$0 = ($3 + [432])
}

void .FUNC $114 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [416])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [404]) = $2
	*($3 + [400]) = $2
	$5 = ($2 + $4)
	*($3 + [408]) = $5
	*($3 + [392]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10336])
	$5 = *(($3 + [408]))
	$2 = *($3 + [404])
	
.LABEL $label$5
	CALL memcpy(($3 + [392]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [404]) = $2
	*($3 + [384]) = (int_64)0
	*($3 + [376]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10336])
	$5 = *((($3 + [400]) + [8]))
	$2 = *($3 + [404])
	
.LABEL $label$6
	CALL memcpy(($3 + [376]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [404]) = $2
	*($3 + [80]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10336])
	$2 = *($3 + [404])
	
.LABEL $label$7
	CALL memcpy(($3 + [80]), $2, [8])
	*(($5 = (($3 + [376]) + [8]))) = *($3 + [80])
	*($3 + [404]) = ($2 + [8])
	*($3 + [368]) = [0]
	*($3 + [360]) = (int_64)0
	CALL $101(($3 + [400]), ($3 + [360]))
	$2 = *((($3 + [400]) + [8]))
	*((($3 + [64]) + [8])) = $2
	*((($3 + [16]) + [8])) = $2
	$6 = *($3 + [400])
	*($3 + [16]) = $6
	*($3 + [64]) = $6
	$4 = CALL $99(($3 + [80]), $0, $1, ($3 + [16]))
	*(($7 = (($3 + [48]) + [8]))) = *($5)
	*($3 + [48]) = *($3 + [376])
	$0 = *($3 + [392])
	$2 = CALL $19(($3 + [32]), ($3 + [360]))
	*(($3 + [8])) = *($7)
	*($3) = *($3 + [48])
	CALL $76($4, $0, $3, $2)
	if ( (*($2) & [1]) ){ goto $label$10 }
	CALL $100($4)
	if ( (*($3 + [360]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $9(*($2 + [8]))
	CALL $100($4)
	if ( ((*($3 + [360]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($3 + [368])))
	$global$0 = ($3 + [416])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [416])
}

int_32 .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9929])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [24]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$8
	$8 = ($5 + [16])
	CALL memcpy(($3 + [24]), $7, [8])
	*(($5 + [8])) = *($3 + [24])
	$7 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$9 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$9
	CALL memcpy($8, $7, [8])
	*($5 + [28]) = $1
	*($3 + [16]) = $5
	$9 = (uint_64)*(($5 + [8])) >> (uint_64)(int_64)8
	*($3 + [24]) = $9)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$12 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $147(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $2($2)
	
.LABEL $label$10
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $9($1)
	
.LABEL $label$13
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $112 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [32]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [9878])
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4992121821936484352, (int_64)-4992121821936484352)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $108($0, $4)
	if ( ((int_32)*($4 + [32]) == (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [9878])
	
.LABEL $label$2
	*($3) = $1
	CALL $138($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $139($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $113 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [368])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [360]) = (int_64)0
	*($3 + [352]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [352]), $2, [8])
	*($3 + [72]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$6
	CALL memcpy(($3 + [72]), $6, [8])
	*(($4 = (($3 + [352]) + [8]))) = *($3 + [72])
	*((($3 + [24]) + [8])) = $5
	*($3 + [56]) = $2
	*($3 + [60]) = ($2 + [16])
	*($3 + [64]) = $5
	*($3 + [24]) = *($3 + [56])
	$2 = CALL $99(($3 + [72]), $0, $1, ($3 + [24]))
	$0 = *($4)
	*((($3 + [40]) + [8])) = $0
	*((($3 + [8]) + [8])) = $0
	$0 = *($3 + [352])
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	CALL $85($2, ($3 + [8]))
	CALL $100($2)
	$global$0 = ($3 + [368])
}

void .FUNC $110 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $110($0, *($1))
	CALL $110($0, *($1 + [4]))
	CALL $9($1)
	
.LABEL $label$1
}

void .FUNC $111 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [40]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [9878])
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $107($0, $4)
	if ( ((int_32)*($4 + [40]) == (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [9878])
	
.LABEL $label$2
	*($3) = $1
	CALL $136($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $137($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $139 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [10137])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $7([48])) + [8]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [20 align=4]) = (int_64)0
	*($3 + [32]) = $1
	*($3 + [16]) = ($3 + [20])
	CALL $141(($4 + [16]), $3)
	*($4 + [32]) = $3
	*($4 + [16]) = (int_64)-4992121821936484352
	$5 = *($3 + [36])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = (int_64)-4992121821936484352
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $133(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	CALL $110(($3 + [16]), *(($3 + [20])))
	CALL $9($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $118 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [368])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [360]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$5
	CALL memcpy(($3 + [360]), $2, [8])
	*($3 + [352]) = (int_64)0
	*($3 + [344]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [344]), $5, [8])
	*($3 + [64]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$7
	CALL memcpy(($3 + [64]), $5, [8])
	*(($5 = (($3 + [344]) + [8]))) = *($3 + [64])
	*((($3 + [16]) + [8])) = $4
	*($3 + [48]) = $2
	*($3 + [52]) = ($2 + [24])
	*($3 + [56]) = $4
	*($3 + [16]) = *($3 + [48])
	$2 = CALL $99(($3 + [64]), $0, $1, ($3 + [16]))
	$0 = *($5)
	*((($3 + [32]) + [8])) = $0
	*(($3 + [8])) = $0
	$0 = *($3 + [344])
	*($3 + [32]) = $0
	*($3) = $0
	CALL $30($2, *($3 + [360]), $3)
	CALL $100($2)
	$global$0 = ($3 + [368])
}

void .FUNC $119 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [368])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [360]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$5
	CALL memcpy(($3 + [360]), $2, [8])
	*($3 + [352]) = (int_64)0
	*($3 + [344]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [344]), $5, [8])
	*($3 + [64]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$7
	CALL memcpy(($3 + [64]), $5, [8])
	*(($5 = (($3 + [344]) + [8]))) = *($3 + [64])
	*((($3 + [16]) + [8])) = $4
	*($3 + [48]) = $2
	*($3 + [52]) = ($2 + [24])
	*($3 + [56]) = $4
	*($3 + [16]) = *($3 + [48])
	$2 = CALL $99(($3 + [64]), $0, $1, ($3 + [16]))
	$0 = *($5)
	*((($3 + [32]) + [8])) = $0
	*(($3 + [8])) = $0
	$0 = *($3 + [344])
	*($3 + [32]) = $0
	*($3) = $0
	CALL $58($2, *($3 + [360]), $3)
	CALL $100($2)
	$global$0 = ($3 + [368])
}

void .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [20]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10233])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10283])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [8]) & [1]) == 0) ){ goto $label$13 }
	CALL $9(*(($5 + [16])))
	
.LABEL $label$13
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	if ( ((*($8 + [8]) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*(($8 + [16])))
	
.LABEL $label$16
	CALL $9($8)
	
.LABEL $label$15
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [24]))
}

void .FUNC $28 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	CALL require_auth(*($0))
	$3 = ($0 + [240])
	$5 = *(($0 + [268]))
	$4 = *(($0 + [264]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	if ( ((int_32)*($7 + [20]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [9878])
	CALL $29($3, $7)
	return 
	
.LABEL $label$2
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [248])), (int_64)6767209621867200512, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$7 = CALL $24($3, $6)
	if ( ((int_32)*($7 + [20]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [9878])
	CALL $29($3, $7)
	return 
	
.LABEL $label$5
	CALL eosio_assert([0], [8288])
	
.LABEL $label$1
	CALL $29($3, $7)
}

void .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10233])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1 + [8])
	if ( (uint_64)(((int_64)*(*(($4 + [-24])) + [8]) ^ (int_64)$6) <= (int_64)256) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((uint_64)((int_64)*(*($9) + [8]) ^ (int_64)$6) >= (uint_64)(int_64)256) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10283])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [36]))
}

int_32 .FUNC $107 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9929])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [40]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [16])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [32])
	CALL $130(($3 + [32]), ($3 + [24]))
	*($5 + [44]) = $1
	*($3 + [24]) = $5
	*($3 + [32]) = (int_64)7235159537265672192
	*($3 + [4]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = (int_64)7235159537265672192
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $131(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $106 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [368])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [360]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$5
	CALL memcpy(($3 + [360]), $2, [8])
	*($3 + [352]) = (int_64)0
	*($3 + [344]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [344]), $5, [8])
	*($3 + [64]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$7
	CALL memcpy(($3 + [64]), $5, [8])
	*(($5 = (($3 + [344]) + [8]))) = *($3 + [64])
	*((($3 + [16]) + [8])) = $4
	*($3 + [48]) = $2
	*($3 + [52]) = ($2 + [24])
	*($3 + [56]) = $4
	*($3 + [16]) = *($3 + [48])
	$2 = CALL $99(($3 + [64]), $0, $1, ($3 + [16]))
	$0 = *($5)
	*((($3 + [32]) + [8])) = $0
	*(($3 + [8])) = $0
	$0 = *($3 + [344])
	*($3 + [32]) = $0
	*($3) = $0
	CALL $82($2, *($3 + [360]), $3)
	CALL $100($2)
	$global$0 = ($3 + [368])
}

void .FUNC $21 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $7($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $9($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $21($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC $23 (int_32 $0)
{
}

void .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $7(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $9($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $25 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [64])
	$global$0 = $3
	*($3 + [16]) = $1
	CALL require_auth(*($0))
	$4 = ($0 + [240])
	$6 = *(($0 + [268]))
	$5 = *(($0 + [264]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$5:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$4 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	if ( ((int_32)*($8 + [20]) == (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [9878])
	goto $label$2 
	
.LABEL $label$3
	$7 = CALL db_find_i64(*($4), *(($0 + [248])), (int_64)6767209621867200512, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	if ( ((int_32)*(CALL $24($4, $7) + [20]) == (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [9878])
	
.LABEL $label$2
	CALL eosio_assert([0], [8257])
	
.LABEL $label$1
	$1 = *($0)
	*($3 + [12]) = $2
	*($3 + [8]) = ($3 + [16])
	*($3 + [56]) = $1
	if ( ((int_64)CALL current_receiver() == (int_64)*(($0 + [240]))) ){ goto $label$6 }
	CALL eosio_assert([0], [10137])
	
.LABEL $label$6
	*($3 + [32]) = $4
	*($3 + [36]) = ($3 + [8])
	*($3 + [40]) = ($3 + [56])
	*(($7 = CALL $7([32]))) = (int_64)0
	*($7 + [8 align=4]) = (int_64)0
	*($7 + [16]) = [0]
	*($7 + [20]) = $4
	CALL $26(($3 + [32]), $7)
	*($3 + [48]) = $7
	$1 = *($7)
	*($3 + [32]) = $1
	$5 = *($7 + [24])
	*($3 + [28]) = $5
	$8 = ($0 + [268])
	$6 = *($8)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [272]))) ){ goto $label$9 }
	*($6 + [8]) = $1
	*($6 + [16]) = $5
	*($3 + [48]) = [0]
	*($6) = $7
	*($8) = ($6 + [24])
	$7 = *($3 + [48])
	*($3 + [48]) = [0]
	if ( ($7 == 0) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $27(($0 + [264]), ($3 + [48]), ($3 + [32]), ($3 + [28]))
	$7 = *($3 + [48])
	*($3 + [48]) = [0]
	if ( $7 ){ goto $label$7 }
	
.LABEL $label$8
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$7
	if ( ((*($7 + [8]) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*(($7 + [16])))
	
.LABEL $label$10
	CALL $9($7)
	$global$0 = ($3 + [64])
}

int_32 .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$6 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $4
	$7 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9929])
	
.LABEL $label$5
	$4 = CALL $1($6)
	$7 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $6)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $6)
	*(($5 = CALL $7([32]))) = (int_64)0
	*($5 + [8 align=4]) = (int_64)0
	*($5 + [16]) = [0]
	*($5 + [20]) = $0
	$8 = ($5 + [8])
	$2 = $4
	if ( ((uint_32)$6 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10336])
	$2 = *($3 + [36])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [36]) = ($2 + [8])
	CALL $101(($3 + [32]), $8)
	*($5 + [24]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($6 + [8]) = $9
	*($6 + [16]) = $1
	*($3 + [24]) = [0]
	*($6) = $5
	*($2) = ($6 + [24])
	if ( $7 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $27(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($7 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $2($4)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$12 }
	CALL $9(*(($1 + [16])))
	
.LABEL $label$12
	CALL $9($1)
	
.LABEL $label$11
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $27 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [16])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $9($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($0)
	$6 = ($1 + [8])
	CALL $20($6, *($4 + [4]))
	$4 = *($1 + [8])
	$7 = ( *(($1 + [12])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($7 + [8])
	$8 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ($4 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $4)
	$7 = $2
	if ( ((int_32)$4 > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9703])
	$7 = *($3 + [4])
	
.LABEL $label$4
	CALL memcpy($7, $1, [8])
	*($3 + [4]) = ($7 + [8])
	CALL $146($3, $6)
	$8 = *($1)
	*($1 + [24]) = CALL db_store_i64(*($5 + [8]), (int_64)6767209621867200512, *(*($0 + [8])), $8, $2, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	if ( ((uint_64)$8 >= (uint_64)*($5 + [16])) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $2($2)
	if ( (uint_64)($8 <= *($5 + [16])) ){ goto $label$5 }
	
.LABEL $label$6
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [16])
}

void .FUNC $109 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = *(($1 + [28]))
	if ( ((int_32)$2 == (int_32)*($1 + [24])) ){ goto $label$3 }
	$2 = *(($2 + [-24]))
	if ( ((int_32)*($2 + [32]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [9878])
	
.LABEL $label$4
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$2 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-4992121821936484352, (int_64)-4992121821936484352)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$2 = CALL $108($1, $2)
	if ( ((int_32)*($2 + [32]) == (int_32)$1) ){ goto $label$2 }
	CALL eosio_assert([0], [9878])
	
.LABEL $label$2
	CALL $129($0, $2)
	return 
	
.LABEL $label$1
	CALL eosio_assert([0], [9952])
	CALL $129($0, [0])
}

void .FUNC $135 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10336])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10336])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$0 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10336])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10336])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $6, [8])
	*($0 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $69 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [80])
	$global$0 = $2
	$3 = [0]
	*(($2 + [72])) = [0]
	*($2 + [48]) = $1
	*($2 + [56]) = (int_64)-1
	*($2 + [64]) = (int_64)0
	$4 = *($0)
	*($2 + [40]) = $4
	$5 = CALL db_find_i64($4, $1, (int_64)-5001342331490664448, (uint_64)*($0 + [32]) >> (uint_64)(int_64)8)
	if ( ((int_32)$5) < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $31(($2 + [40]), $5)
	if ( ((int_32)*($3 + [24]) == (int_32)($2 + [40])) ){ goto $label$1 }
	CALL eosio_assert([0], [9878])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8546])
	
.LABEL $label$1
	if ( ((uint_64)((int_64)*($3 + [16]) + (int_64)259200000000) <= (uint_64)CALL $16()) ){ goto $label$3 }
	CALL eosio_assert([0], [8568])
	
.LABEL $label$3
	if ( ((int_64)*($3) > (int_64)0) ){ goto $label$4 }
	CALL eosio_assert([0], [8593])
	
.LABEL $label$4
	$6 = *(($3 + [8]))
	*((($2 + [24]) + [8])) = $6
	$4 = *($3)
	*((($2 + [8]) + [8])) = $6
	*($2 + [24]) = $4
	*($2 + [8]) = $4
	CALL $70($0, $1, ($2 + [8]), $1)
	CALL $33(($2 + [40]), $3)
	$5 = *($2 + [64])
	if ( ($5 == 0) ){ goto $label$5 }
	$7 = ($2 + [68])
	$3 = *($7)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$9 }
	CALL $9($0)
	
.LABEL $label$9
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$8 }
	$3 = *(($2 + [64]))
	goto $label$6 
	
.LABEL $label$7
	$3 = $5
	
.LABEL $label$6
	*($7) = $5
	CALL $9($3)
	
.LABEL $label$5
	$global$0 = ($2 + [80])
}

void .FUNC $68 (int_32 $0, int_64 $1)
{
	if ( CALL has_auth($1) ){ goto $label$1 }
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL eosio_assert([0], [8315])
	
.LABEL $label$1
	CALL $36($0, $1, [0])
}

int_32 .FUNC $108 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9929])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $7([48])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [20 align=4]) = (int_64)0
	*($5 + [32]) = $0
	*($5 + [16]) = ($5 + [20])
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [16])
	*($3 + [40]) = $5
	CALL $132(($3 + [40]), ($3 + [32]))
	*($5 + [36]) = $1
	*($3 + [32]) = $5
	*($3 + [40]) = (int_64)-4992121821936484352
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = (int_64)-4992121821936484352
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $133(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $110(($1 + [16]), *(($1 + [20])))
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $65 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [52])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($3 + [-16])
	$5 = *(($3 + [-12]))
	if ( ($5 == 0) ){ goto $label$5 }
	*(($3 + [-8])) = $5
	CALL $9($5)
	
.LABEL $label$5
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$3 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [40])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$10 }
	*(($3 + [-8])) = $4
	CALL $9($4)
	
.LABEL $label$10
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$11 }
	*(($3 + [-20])) = $5
	CALL $9($5)
	
.LABEL $label$11
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$3 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$16 }
	*(($3 + [-8])) = $4
	CALL $9($4)
	
.LABEL $label$16
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$17 }
	*(($3 + [-20])) = $5
	CALL $9($5)
	
.LABEL $label$17
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$15 }
	$3 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$12
	return $0
}

void .FUNC $64 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = [0]
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	*($4 + [16]) = [0]
	CALL $66(($4 + [16]), $0)
	$6 = *($4 + [16])
	if ( ($6 == 0) ){ goto $label$2 }
	CALL $49($4, $6)
	$5 = *($4 + [4])
	$6 = *($4)
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	*($4 + [20]) = $6
	*($4 + [16]) = $6
	*($4 + [24]) = $5
	CALL $67(($4 + [16]), $0)
	$0 = *($4)
	CALL send_deferred($1, $2, $0, (*($4 + [4]) - $0), $3)
	$0 = *($4)
	if ( ($0 == 0) ){ goto $label$3 }
	*($4 + [4]) = $0
	CALL $9($0)
	
.LABEL $label$3
	$global$0 = ($4 + [32])
}

int_32 .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $125($0, $1)
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [28])) - *($1 + [24])) / (int_32)[40]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [14]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9703])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [14]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *(($1 + [28]))
	$6 = *(($1 + [24]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$4:
	CALL $74($0, $6)
	$6 = ($6 + [40])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$4 }
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [40])) - *($1 + [36])) / (int_32)[40]))
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$5:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [9703])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$5 }
	$6 = *(($1 + [40]))
	$4 = *(($1 + [36]))
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$8:
	CALL $74($0, $4)
	$4 = ($4 + [40])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = CALL $126($0, ($1 + [48]))
	$global$0 = ($2 + [16])
	return $4
}

int_32 .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0)
	*($0) = ($2 + [10])
	$2 = ($2 + [11])
	$3 = *($1 + [12])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	*($0) = $2
	$3 = *($1 + [20])
	
.LOOP $label$2:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$2 }
	*($0) = $2
	$5 = *($1 + [24])
	$4 = *(($1 + [28]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$3 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$7 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$7
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$8:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$8 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	*($0) = $2
	
.LABEL $label$4
	$5 = *($1 + [36])
	$4 = *(($1 + [40]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$9:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$9 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$12:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$13 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$13
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$14:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$14 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$11 }
	*($0) = $2
	
.LABEL $label$10
	$5 = *($1 + [48])
	$8 = *(($1 + [52]))
	$3 = (CASTING uint_64)(uint_32 int_32(($8 - $5) >> [4]))
	
.LOOP $label$15:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$15 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = *($5 + [4])
	$6 = *(($5 + [8]))
	$2 = ((($2 + $6) + [2]) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$18:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$18 }
	$5 = ($5 + [16])
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$17 }
	*($0) = $2
	
.LABEL $label$16
	return $0
}

void .FUNC $61 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9703])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *($1 + [8])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9703])
	$4 = *($3)
	
.LABEL $label$2
	$6 = ($1 + [16])
	CALL memcpy($4, ($2 + [8]), [8])
	$1 = (*($3) + [8])
	*($3) = $1
	if ( ((int_32)(*($5) - $1) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9703])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $6, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $63 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[40])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$8 = [107374182]
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[40])
	if ( ((uint_32)$5 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($5 << [1])
	$8 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($8 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL $7(((int_32)$8 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	*(($6 = ($5 + ((int_32)$6 * (int_32)[40])))) = *($2)
	*($6 + [8]) = *($3)
	*($6 + [16 align=4]) = (int_64)0
	*(($3 = ($6 + [24]))) = [0]
	$2 = CALL $7([16])
	*($6 + [16]) = $2
	*($6 + [28 align=4]) = (int_64)0
	*(($6 + [36])) = [0]
	$7 = ($2 + [16])
	*($3) = $7
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($6 + [20])) = $7
	CALL $49(($6 + [28]), [8])
	$2 = ((int_32)$8 * (int_32)[40])
	$8 = *($6 + [28])
	if ( ((int_32)(*(($6 + [32])) - $8) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9703])
	
.LABEL $label$5
	$9 = ($5 + $2)
	CALL memcpy($8, $4, [8])
	$10 = ($6 + [40])
	$2 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$7 }
	$11 = ($2 - $7)
	$1 = [0]
	
.LOOP $label$8:
	$8 = ($7 + $1)
	*((($2 = ($6 + $1)) + [-32])) = *(($8 + [-32]))
	*(($2 + [-40])) = *(($8 + [-40]))
	*(($5 = ($2 + [-24]))) = (int_64)0
	*(($3 = ($2 + [-16]))) = [0]
	$4 = ($8 + [-24])
	*($5) = *($4)
	$5 = ($8 + [-16])
	*($3) = *($5)
	*($5) = [0]
	*(($5 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$3 = ($8 + [-12])
	*($5) = *($3)
	*($4) = (int_64)0
	$8 = ($8 + [-4])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$11 != (int_32)$1) ){ goto $label$8 }
	$6 = ($6 + $1)
	$2 = *(($0 + [4]))
	$5 = *($0)
	goto $label$6 
	
.LABEL $label$7
	$5 = $2
	
.LABEL $label$6
	*($0) = $6
	*(($0 + [4])) = $10
	*(($0 + [8])) = $9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$9 }
	
.LOOP $label$10:
	$8 = *(($2 + [-12]))
	if ( ($8 == 0) ){ goto $label$11 }
	*(($2 + [-8])) = $8
	CALL $9($8)
	
.LABEL $label$11
	$8 = ($2 + [-40])
	$1 = *(($2 + [-24]))
	if ( ($1 == 0) ){ goto $label$12 }
	*(($2 + [-20])) = $1
	CALL $9($1)
	
.LABEL $label$12
	$2 = $8
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ($5 == 0) ){ goto $label$13 }
	CALL $9($5)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $62 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9981])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10027])
	
.LABEL $label$2
	$7 = *($1 + [8])
	$6 = *($3)
	if ( ((int_64)*($6 + [8]) == (int_64)$7) ){ goto $label$3 }
	CALL eosio_assert([0], [9455])
	
.LABEL $label$3
	$8 = (int_64)
	*($1) = $8(*($1) - *($6)))
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9503])
	$8 = *($1)
	
.LABEL $label$4
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9525])
	
.LABEL $label$5
	*($1 + [16]) = *(*($3 + [4]))
	$6 = ($1 + [16])
	if ( ((int_64)$7 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10078])
	
.LABEL $label$6
	$4 = $4
	$3 = ($4 + [-32])
	$global$0 = $3
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = $4
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $6
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [24])
	CALL $41(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [36]), $2, $3, [32])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [48])
}

int_32 .FUNC $101 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $115($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $7($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $22($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $22($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $18($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $9($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

int_32 .FUNC $100 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $111(($0 + [88]), ($0 + [128]), *($0))
	CALL $112(($0 + [168]), ($0 + [208]), *($0))
	$1 = *(($0 + [264]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [268])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$6 }
	CALL $9(*(($4 + [16])))
	
.LABEL $label$6
	CALL $9($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [264]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$1
	CALL $110(($0 + [224]), *(($0 + [228])))
	$1 = *(($0 + [192]))
	if ( ($1 == 0) ){ goto $label$7 }
	$2 = ($0 + [196])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $110(($4 + [16]), *(($4 + [20])))
	CALL $9($4)
	
.LABEL $label$11
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$10 }
	$3 = *(($0 + [192]))
	goto $label$8 
	
.LABEL $label$9
	$3 = $1
	
.LABEL $label$8
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$7
	$1 = *(($0 + [112]))
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [116])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$16 }
	CALL $9($4)
	
.LABEL $label$16
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$15 }
	$3 = *(($0 + [112]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$12
	return $0
}

void .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10336])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10336])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10336])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $0, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10336])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($5 + [24])) = *($2 + [8])
	*($0) = (*($0) + [8])
	CALL $101(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $102 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [16]))
	*($2 + [32]) = *($1 + [8])
	$4 = *($1)
	$1 = CALL $19(($2 + [16]), ($1 + [24]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$5 = *($0 + [4])
	$3 = (*($0) + int_32($5 >> [1]))
	$0 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($6 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$5 = CALL $19(($2 + [64]), $1)
	*(($2 + [8])) = *($6)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $4), (int_64 $2), (int_32 $5), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($5 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $105 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10336])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	$2 = ($3 + [8])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10336])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [16])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10336])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [24])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10336])
	$4 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$0 = ($3 + [32])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10336])
	$3 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $104 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [24]))
	*($2 + [32]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $19(($2 + [16]), ($1 + [32]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$3 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$6 = CALL $19(($2 + [64]), $1)
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $5), (int_64 $4), (int_64 $2), (int_32 $6), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $89 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$5 = ($global$0 - [112])
	$global$0 = $5
	if ( ((int_64)$1 != (int_64)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [9207])
	
.LABEL $label$1
	if ( CALL has_auth($1) ){ goto $label$2 }
	if ( CALL has_auth(*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9231])
	
.LABEL $label$2
	if ( CALL is_account($2) ){ goto $label$3 }
	CALL eosio_assert([0], [9249])
	
.LABEL $label$3
	$6 = *($3 + [8])
	$7 = [0]
	*(($5 + [104])) = [0]
	$8 = (uint_64)$6 >> (uint_64)(int_64)8
	*($5 + [80]) = $8)
	*($5 + [88]) = (int_64)-1
	*($5 + [96]) = (int_64)0
	$9 = *($0)
	*($5 + [72]) = $9
	$10 = CALL db_find_i64($9, $8, (int_64)-4157508551318700032, $8)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$6 }
	$7 = CALL $79(($5 + [72]), $10)
	if ( ((int_32)*($7 + [44]) == (int_32)($5 + [72])) ){ goto $label$7 }
	CALL eosio_assert([0], [9878])
	
.LABEL $label$7
	if ( (*($7 + [40]) == 0) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	CALL eosio_assert([0], [9275])
	if ( (*([0] + [40]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL require_auth(*($7 + [32]))
	
.LABEL $label$4
	CALL require_recipient($1)
	CALL require_recipient($2)
	$11 = *($3)
	if ( ((uint_64)((int_64)$11 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$9 }
	$10 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$9 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$8 = $9
	$12 = $10
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$11
	$8 = $9
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$9 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$12 = ((int_32)$10 < (int_32)[6])
	$13 = ($10 + [1])
	$10 = $13
	if ( $12 ){ goto $label$12 }
	$10 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [9014])
	
.LABEL $label$8
	if ( ((int_64)$11 <= (int_64)0) ){ goto $label$17 }
	if ( ((int_64)$6 != (int_64)*($7 + [8])) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL eosio_assert([0], [9294])
	if ( ((int_64)$6 == (int_64)*($7 + [8])) ){ goto $label$15 }
	
.LABEL $label$16
	CALL eosio_assert([0], [9060])
	if ( (*($4) & [1]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	if ( ((*($4) & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	if ( (*($4 + [4]) <= [257]) ){ goto $label$13 }
	CALL eosio_assert([0], [8925])
	
.LABEL $label$13
	$10 = ($3 + [8])
	$9 = *($10)
	*((($5 + [56]) + [8])) = $9
	$8 = *($3)
	*((($5 + [24]) + [8])) = $9
	*($5 + [56]) = $8
	*($5 + [24]) = $8
	CALL $34($0, $1, ($5 + [24]))
	$9 = *($10)
	*((($5 + [40]) + [8])) = $9
	$8 = *($3)
	*((($5 + [8]) + [8])) = $9
	*($5 + [8]) = $8
	*($5 + [40]) = $8
	CALL $70($0, $2, ($5 + [8]), $1)
	$13 = *($5 + [96])
	if ( ($13 == 0) ){ goto $label$18 }
	$3 = ($5 + [100])
	$10 = *($3)
	if ( ((int_32)$10 == (int_32)$13) ){ goto $label$20 }
	
.LOOP $label$21:
	$10 = ($10 + [-24])
	$12 = *($10)
	*($10) = [0]
	if ( ($12 == 0) ){ goto $label$22 }
	CALL $9($12)
	
.LABEL $label$22
	if ( ((int_32)$13 != (int_32)$10) ){ goto $label$21 }
	$10 = *(($5 + [96]))
	goto $label$19 
	
.LABEL $label$20
	$10 = $13
	
.LABEL $label$19
	*($3) = $13
	CALL $9($10)
	
.LABEL $label$18
	$global$0 = ($5 + [112])
}

void .FUNC $88 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*(($1 + [44])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9981])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10027])
	
.LABEL $label$2
	$5 = *($1 + [8])
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [9455])
	
.LABEL $label$3
	$6 = (int_64)
	*($1) = $6(*($1) - *($2)))
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9503])
	$6 = *($1)
	
.LABEL $label$4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9525])
	
.LABEL $label$5
	if ( ((int_64)$5 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10078])
	
.LABEL $label$6
	$2 = $3
	$3 = ($2 + [-48])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($2 + [-7])
	*($4 + [24]) = ($4 + [8])
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [16])
	*($4 + [40]) = ($1 + [32])
	*($4 + [44]) = ($1 + [40])
	CALL $83(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [48]), (int_64)0, $3, [41])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
}

void .FUNC $87 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [80])
	$global$0 = $3
	$4 = [0]
	$5 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$6 = $5)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$6 = $7
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$5 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8337])
	
.LABEL $label$1
	$10 = [0]
	*(($3 + [72])) = [0]
	*($3 + [56]) = (int_64)-1
	*($3 + [64]) = (int_64)0
	$6 = *($0)
	*($3 + [40]) = $6
	*($3 + [48]) = $5
	$4 = CALL db_find_i64($6, $5, (int_64)-4157508551318700032, $5)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$7 }
	$10 = CALL $79(($3 + [40]), $4)
	if ( ((int_32)*($10 + [44]) == (int_32)($3 + [40])) ){ goto $label$6 }
	CALL eosio_assert([0], [9878])
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [9120])
	
.LABEL $label$6
	CALL require_auth(*($10 + [32]))
	$5 = *($2)
	if ( ((uint_64)((int_64)$5 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$9 }
	$6 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$11
	$6 = $7
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$9 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$12 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [9014])
	$5 = *($2)
	
.LABEL $label$8
	if ( ((int_64)$5 > (int_64)0) ){ goto $label$13 }
	CALL eosio_assert([0], [9179])
	
.LABEL $label$13
	$4 = ($2 + [8])
	if ( ((int_64)*($4) == (int_64)*($10 + [8])) ){ goto $label$14 }
	CALL eosio_assert([0], [9060])
	
.LABEL $label$14
	*($3 + [32]) = $2
	CALL $88(($3 + [40]), $10, ($3 + [32]))
	$7 = *($4)
	*((($3 + [16]) + [8])) = $7
	$6 = *($2)
	*(($3 + [8])) = $7
	*($3) = $6
	*($3 + [16]) = $6
	CALL $34($0, $1, $3)
	$9 = *($3 + [64])
	if ( ($9 == 0) ){ goto $label$15 }
	$2 = ($3 + [68])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$19 }
	CALL $9($8)
	
.LABEL $label$19
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$18 }
	$4 = *(($3 + [64]))
	goto $label$16 
	
.LABEL $label$17
	$4 = $9
	
.LABEL $label$16
	*($2) = $9
	CALL $9($4)
	
.LABEL $label$15
	$global$0 = ($3 + [80])
}

void .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	if ( ((int_32)*(($1 + [44])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9981])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10027])
	
.LABEL $label$2
	*($1 + [40]) = [0]
	$4 = *($1 + [8])
	$5 = $2
	$2 = ($5 + [-48])
	$global$0 = $2
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($5 + [-7])
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [16])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [32])
	*($3 + [44]) = ($1 + [40])
	CALL $83(($3 + [32]), ($3 + [24]))
	CALL db_update_i64(*($1 + [48]), (int_64)0, $2, [41])
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( (uint_64)($4) <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ((int_64)$4 + (int_64)1)
	
.LABEL $label$3
	$global$0 = ($3 + [48])
}

void .FUNC $85 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = [0]
	$4 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	$5 = $4)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$5 = $6
	$1 = $3
	$3 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$5 = $6
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$1 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $1 ){ goto $label$5 }
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8337])
	
.LABEL $label$1
	*(($2 + [40])) = [0]
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	$5 = *($0)
	*($2 + [8]) = $5
	*($2 + [16]) = $4
	$3 = CALL db_find_i64($5, $4, (int_64)-4157508551318700032, $4)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	$3 = CALL $79(($2 + [8]), $3)
	if ( ((int_32)*($3 + [44]) == (int_32)($2 + [8])) ){ goto $label$7 }
	CALL eosio_assert([0], [9878])
	
.LABEL $label$7
	CALL require_auth(*($3 + [32]))
	CALL $86(($2 + [8]), $3)
	$7 = *($2 + [32])
	if ( ($7 == 0) ){ goto $label$8 }
	$0 = ($2 + [36])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$10 }
	
.LOOP $label$11:
	$3 = ($3 + [-24])
	$1 = *($3)
	*($3) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $9($1)
	
.LABEL $label$12
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$11 }
	$3 = *(($2 + [32]))
	goto $label$9 
	
.LABEL $label$10
	$3 = $7
	
.LABEL $label$9
	*($0) = $7
	CALL $9($3)
	
.LABEL $label$8
	$global$0 = ($2 + [48])
	return (unreachable)
	
.LABEL $label$6
	CALL eosio_assert([0], [8864])
}

void .FUNC $84 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $83 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9703])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9703])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9703])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9703])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9703])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $6, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$1 = *($1)
	*($2 + [8]) = *(*($0 + [12]))
	$0 = *($1 + [4])
	if ( ((int_32)(*($1 + [8]) - $0) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [9703])
	$0 = *(($1 + [4]))
	
.LABEL $label$6
	CALL memcpy($0, ($2 + [8]), [1])
	*(($0 = ($1 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $82 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [144])
	$global$0 = $3
	CALL require_auth(*($0))
	$4 = [0]
	$5 = *($2 + [8])
	$6 = (uint_64)$5 >> (uint_64)(int_64)8
	$7 = $6)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$7 = $8
	$9 = $4
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = $8
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$4 < (int_32)[6])
	$10 = ($4 + [1])
	$4 = $10
	if ( $9 ){ goto $label$5 }
	$4 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8337])
	
.LABEL $label$1
	$11 = *($2)
	if ( ((uint_64)((int_64)$11 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$7 }
	$4 = [0]
	$7 = $6
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$7 = $8
	$9 = $4
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$7 = $8
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$4 < (int_32)[6])
	$10 = ($4 + [1])
	$4 = $10
	if ( $9 ){ goto $label$10 }
	$4 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [8788])
	
.LABEL $label$6
	if ( ((int_64)$11 > (int_64)0) ){ goto $label$11 }
	CALL eosio_assert([0], [8803])
	
.LABEL $label$11
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$7 = *($0)
	*($3 + [8]) = $7
	*($3 + [16]) = $6
	$4 = CALL db_find_i64($7, $6, (int_64)-4157508551318700032, $6)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$12 }
	if ( ((int_32)*(CALL $79(($3 + [8]), $4) + [44]) == (int_32)($3 + [8])) ){ goto $label$13 }
	CALL eosio_assert([0], [9878])
	
.LABEL $label$13
	CALL eosio_assert([0], [8831])
	
.LABEL $label$12
	$8 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($3 + [8])) ){ goto $label$14 }
	CALL eosio_assert([0], [10137])
	
.LABEL $label$14
	*(($4 = CALL $7([56])) + [40]) = [1]
	*($4) = (int_64)0
	*($4 + [44]) = ($3 + [8])
	*($4 + [8]) = $5
	*($4 + [32]) = $1
	*($4 + [16]) = *($2)
	*(($4 + [24])) = *(($2 + [8]))
	*($3 + [112]) = (($3 + [48]) + [41])
	*($3 + [108]) = ($3 + [48])
	*($3 + [104]) = ($3 + [48])
	*($3 + [120]) = ($3 + [104])
	*($3 + [132]) = ($4 + [16])
	*($3 + [128]) = $4
	*($3 + [136]) = ($4 + [32])
	*($3 + [140]) = ($4 + [40])
	CALL $83(($3 + [128]), ($3 + [120]))
	$7 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	$10 = CALL db_store_i64(*((($3 + [8]) + [8])), (int_64)-4157508551318700032, $8, $7), ($3 + [48]), [41]
	*($4 + [48]) = $10)
	$9 = (($3 + [8]) + [16])
	if ( (uint_64)($7 <= *($9)) ){ goto $label$15 }
	*($9) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$15
	*($3 + [128]) = $4
	$7 = (uint_64)*(($4 + [8])) >> (uint_64)(int_64)8
	*($3 + [48]) = $7)
	*($3 + [104]) = $10
	$2 = ($3 + [36])
	$9 = *($2)
	if ( ((uint_32)$9 >= (uint_32)*((($3 + [8]) + [32]))) ){ goto $label$18 }
	*($9 + [8]) = $7
	*($9 + [16]) = $10
	*($3 + [128]) = [0]
	*($9) = $4
	*($2) = ($9 + [24])
	$4 = *($3 + [128])
	*($3 + [128]) = [0]
	if ( $4 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $84(($3 + [32]), ($3 + [128]), ($3 + [48]), ($3 + [104]))
	$4 = *($3 + [128])
	*($3 + [128]) = [0]
	if ( ($4 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL $9($4)
	
.LABEL $label$16
	$10 = *($3 + [32])
	if ( ($10 == 0) ){ goto $label$19 }
	$2 = ($3 + [36])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$10) ){ goto $label$21 }
	
.LOOP $label$22:
	$4 = ($4 + [-24])
	$9 = *($4)
	*($4) = [0]
	if ( ($9 == 0) ){ goto $label$23 }
	CALL $9($9)
	
.LABEL $label$23
	if ( ((int_32)$10 != (int_32)$4) ){ goto $label$22 }
	$4 = *(($3 + [32]))
	goto $label$20 
	
.LABEL $label$21
	$4 = $10
	
.LABEL $label$20
	*($2) = $10
	CALL $9($4)
	
.LABEL $label$19
	$global$0 = ($3 + [144])
}

void .FUNC $81 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [96])
	$global$0 = $4
	*($4 + [16]) = [0]
	*($4 + [8]) = (int_64)0
	$5 = [0]
	$6 = [0]
	$7 = [0]
	$8 = (*($2 + [4]) - *($2))
	if ( ($8 == 0) ){ goto $label$2 }
	$5 = int_32($8 >> [4])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$7 = CALL $7($8)
	$5 = ($7 + ($5 << [4]))
	*(($4 + [16])) = $5
	*($4 + [8]) = $7
	*($4 + [12]) = $7
	$6 = *($2)
	$2 = (*(($2 + [4])) - $6)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($7, $6, $2)
	$6 = ($7 + $2)
	*($4 + [12]) = $6
	goto $label$2 
	
.LABEL $label$3
	$6 = $7
	
.LABEL $label$2
	*(($4 + [44])) = $6
	*(($4 + [48])) = $5
	*(($4 + [16])) = [0]
	*((($4 + [24]) + [36])) = [0]
	*($4 + [32]) = $1
	*($4 + [24]) = $0
	*($4 + [40]) = $7
	*($4 + [8]) = (int_64)0
	*($4 + [52 align=4]) = (int_64)0
	$7 = *($3 + [32])
	$2 = ( *(($3 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($2 + [32])
	$0 = (CASTING uint_64)(uint_32 $2)
	$2 = ($4 + [52])
	
.LOOP $label$4:
	$7 = ($7 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$4 }
	if ( ($7 == 0) ){ goto $label$6 }
	CALL $49($2, $7)
	$2 = *(($4 + [56]))
	$7 = *(($4 + [52]))
	goto $label$5 
	
.LABEL $label$6
	$2 = [0]
	$7 = [0]
	
.LABEL $label$5
	*($4 + [68]) = $7
	*($4 + [64]) = $7
	*($4 + [72]) = $2
	*($4 + [80]) = ($4 + [64])
	*($4 + [88]) = $3
	CALL $50(($4 + [88]), ($4 + [80]))
	CALL $51(($4 + [24]))
	$7 = *($4 + [52])
	if ( ($7 == 0) ){ goto $label$7 }
	*(($4 + [56])) = $7
	CALL $9($7)
	
.LABEL $label$7
	$7 = *($4 + [40])
	if ( ($7 == 0) ){ goto $label$8 }
	*(($4 + [44])) = $7
	CALL $9($7)
	
.LABEL $label$8
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$9 }
	*($4 + [12]) = $7
	CALL $9($7)
	
.LABEL $label$9
	$global$0 = ($4 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $15(($4 + [8]))
}

void .FUNC $80 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*(($1 + [44])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9981])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10027])
	
.LABEL $label$2
	$5 = *($1 + [8])
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [9375])
	
.LABEL $label$3
	$6 = ((int_64)*($1) + (int_64)*($2))
	*($1) = $6
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9418])
	$6 = *($1)
	
.LABEL $label$4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9437])
	
.LABEL $label$5
	if ( ((int_64)$5 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10078])
	
.LABEL $label$6
	$2 = $3
	$3 = ($2 + [-48])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($2 + [-7])
	*($4 + [24]) = ($4 + [8])
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [16])
	*($4 + [40]) = ($1 + [32])
	*($4 + [44]) = ($1 + [40])
	CALL $83(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [48]), (int_64)0, $3, [41])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
}

void .FUNC $149 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10336])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10336])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10336])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10336])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10336])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($6, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [10336])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	*($4) = ((int_32)*($2 + [8]) != (int_32)[0])
	$global$0 = ($2 + [16])
}

void .FUNC $148 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10336])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10336])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10336])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10336])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $145 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9703])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9703])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$0 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9703])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $0, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($0 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9703])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $144 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = *($1 + [8])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [31]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9703])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [31]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$5 = ($1 + [4])
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$1 = ($0 + [8])
	$8 = ($0 + [4])
	
.LOOP $label$4:
	$6 = ($7 + [16])
	if ( ((int_32)(*($1) - $3) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9703])
	$3 = *($8)
	
.LABEL $label$5
	CALL memcpy($3, $6, [8])
	*($8) = (*($8) + [8])
	*($2 + [8]) = $0
	*($2 + [20]) = ($7 + [40])
	*($2 + [16]) = ($7 + [24])
	CALL $145(($2 + [16]), ($2 + [8]))
	$3 = *($7 + [4])
	if ( ($3 == 0) ){ goto $label$7 }
	
.LOOP $label$8:
	$6 = $3
	$3 = *($6)
	if ( $3 ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$6 = *($7 + [8])
	if ( ((int_32)*($6) == (int_32)$7) ){ goto $label$6 }
	$7 = ($7 + [8])
	
.LOOP $label$9:
	$3 = *($7)
	$7 = ($3 + [8])
	$6 = *($3 + [8])
	if ( ((int_32)$3 != (int_32)*($6)) ){ goto $label$9 }
	
.LABEL $label$6
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$3 }
	$3 = *($8)
	$7 = $6
	goto $label$4 
	
.LABEL $label$3
	$global$0 = ($2 + [32])
	return $0
}

void .FUNC $147 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $146 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9703])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [9703])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $141 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	*($1) = *($5)
	*(($1 + [8])) = *(($5 + [8]))
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$1 }
	CALL $142(($1 + [16]), *($5 + [16]), ($5 + [20]))
	
.LABEL $label$1
	$6 = *(($1 + [24]))
	$7 = [16]
	
.LOOP $label$2:
	$7 = ($7 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$2 }
	$9 = ($1 + [20])
	$8 = *($1 + [16])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$4:
	$10 = $8
	$5 = *($10 + [4])
	if ( ($5 == 0) ){ goto $label$6 }
	
.LOOP $label$7:
	$8 = $5
	$5 = *($8)
	if ( $5 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$8 = *($10 + [8])
	if ( ((int_32)*($8) == (int_32)$10) ){ goto $label$5 }
	$10 = ($10 + [8])
	
.LOOP $label$8:
	$5 = *($10)
	$10 = ($5 + [8])
	$8 = *($5 + [8])
	if ( ((int_32)$5 != (int_32)*($8)) ){ goto $label$8 }
	
.LABEL $label$5
	$7 = ($7 + [40])
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ($7 <= [513]) ){ goto $label$10 }
	$5 = CALL $1($7)
	goto $label$9 
	
.LABEL $label$10
	$5 = ($2 - (($7 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$9
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($5 + $7)
	*($3 + [16]) = $3
	*($3 + [28]) = ($1 + [16])
	*($3 + [24]) = $1
	CALL $143(($3 + [24]), ($3 + [16]))
	*($1 + [36]) = CALL db_store_i64(*($4 + [8]), (int_64)-4992121821936484352, *(*($0 + [8])), (int_64)-4992121821936484352, $5, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$13 }
	if ( ((uint_64)*($4 + [16]) <= (uint_64)(int_64)-4992121821936484352) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL $2($5)
	if ( ((uint_64)*($4 + [16]) > (uint_64)(int_64)-4992121821936484352) ){ goto $label$11 }
	
.LABEL $label$12
	*(($4 + [16])) = (int_64)-4992121821936484351
	$global$0 = ($3 + [32])
	return 
	
.LABEL $label$11
	$global$0 = ($3 + [32])
}

void .FUNC $140 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9703])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9703])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9703])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9703])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9703])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $143 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9703])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9703])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	CALL $144(*($1), *($0 + [4]))
	$global$0 = ($2 + [16])
}

void .FUNC $142 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	if ( (*($0 + [8]) == 0) ){ goto $label$3 }
	$3 = *($0)
	$4 = ($0 + [4])
	*($0) = $4
	$5 = *($0 + [4])
	*($0 + [4]) = [0]
	*(($6 = ($0 + [8]))) = [0]
	*($5 + [8]) = [0]
	$5 = *($3 + [4])
	$3 = ( $5 ? $3 : $5 )
	if ( ($3 == 0) ){ goto $label$3 }
	$7 = ($0 + [4])
	
.LOOP $label$4:
	$8 = $3
	$9 = $1
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$2 }
	$10 = *($9 + [16])
	*($8 + [16]) = $10
	*(($8 + [48])) = *(($9 + [48]))
	*(($8 + [40])) = *(($9 + [40]))
	*(($8 + [32])) = *(($9 + [32]))
	*(($8 + [24])) = *($9 + [24])
	$3 = *($8 + [8])
	if ( ($3 == 0) ){ goto $label$10 }
	$1 = *($3)
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$9 }
	*($3 + [4]) = [0]
	if ( ($1 == 0) ){ goto $label$8 }
	
.LOOP $label$11:
	$3 = $1
	$1 = *($3)
	if ( $1 ){ goto $label$11 }
	$1 = *($3 + [4])
	if ( $1 ){ goto $label$11 }
	goto $label$8 
	
.LABEL $label$10
	$3 = [0]
	$1 = *($4)
	if ( $1 ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$9
	*($3) = [0]
	
.LOOP $label$12:
	$1 = *($3 + [4])
	if ( ($1 == 0) ){ goto $label$8 }
	
.LOOP $label$13:
	$3 = $1
	$1 = *($3)
	if ( $1 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$8
	$1 = *($4)
	if ( $1 ){ goto $label$6 }
	
.LABEL $label$7
	$1 = $4
	$5 = $4
	goto $label$5 
	
.LABEL $label$6
	
.LOOP $label$16:
	if ( ((uint_64)$10 >= (uint_64)*($1 + [16])) ){ goto $label$18 }
	$5 = *($1)
	if ( $5 ){ goto $label$17 }
	goto $label$14 
	
.LABEL $label$18
	$5 = *($1 + [4])
	if ( ($5 == 0) ){ goto $label$15 }
	
.LABEL $label$17
	$1 = $5
	goto $label$16 
	
.LABEL $label$15
	$5 = ($1 + [4])
	goto $label$5 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$5
	*($8) = (int_64)0
	*(($8 + [8])) = $1
	*($5) = $8
	$1 = *(*($0))
	if ( ($1 == 0) ){ goto $label$19 }
	*($0) = $1
	$8 = *($5)
	
.LABEL $label$19
	CALL $78(*($7), $8)
	*($6) = (*($6) + [1])
	$5 = *($9 + [4])
	if ( ($5 == 0) ){ goto $label$21 }
	
.LOOP $label$22:
	$1 = $5
	$5 = *($1)
	if ( $5 ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	$1 = *($9 + [8])
	if ( ((int_32)*($1) == (int_32)$9) ){ goto $label$20 }
	$8 = ($9 + [8])
	
.LOOP $label$23:
	$5 = *($8)
	$8 = ($5 + [8])
	$1 = *($5 + [8])
	if ( ((int_32)$5 != (int_32)*($1)) ){ goto $label$23 }
	
.LABEL $label$20
	if ( $3 ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	$6 = ($0 + [4])
	$9 = ($0 + [8])
	
.LOOP $label$24:
	$8 = $1
	*((($5 = CALL $7([56])) + [48])) = *(($8 + [48]))
	*(($5 + [40])) = *(($8 + [40]))
	*(($5 + [32])) = *(($8 + [32]))
	*(($5 + [24])) = *(($8 + [24]))
	*($5 + [16]) = *($8 + [16])
	$1 = *($6)
	if ( ($1 == 0) ){ goto $label$29 }
	$10 = *(($5 + [16]))
	if ( ((uint_64)$10 >= (uint_64)*($1 + [16])) ){ goto $label$27 }
	goto $label$28 
	
.LABEL $label$29
	$1 = $6
	$3 = $6
	goto $label$26 
	
.LABEL $label$28
	$11 = [2]
	goto $label$25 
	
.LABEL $label$27
	$11 = [0]
	goto $label$25 
	
.LABEL $label$26
	$11 = [4]
	
.LABEL $label$25
	
.LOOP $label$30:
	goto $label$52 
	
.LABEL $label$54
	$1 = $3
	if ( ((uint_64)$10 >= (uint_64)*($1 + [16])) ){ goto $label$41 }
	$11 = [2]
	goto $label$30 
	
.LABEL $label$53
	$3 = *($1)
	if ( $3 ){ goto $label$38 }
	goto $label$39 
	
.LABEL $label$52
	$3 = *($1 + [4])
	if ( $3 ){ goto $label$40 }
	$11 = [12]
	goto $label$30 
	
.LABEL $label$51
	$3 = ($1 + [4])
	goto $label$37 
	
.LABEL $label$50
	$3 = $1
	$11 = [4]
	goto $label$30 
	
.LABEL $label$49
	*($5 + [8]) = $1
	*($5) = (int_64)0
	*($3) = $5
	$1 = *(*($0))
	if ( ($1 == 0) ){ goto $label$36 }
	$11 = [5]
	goto $label$30 
	
.LABEL $label$48
	*($0) = $1
	$5 = *($3)
	$11 = [6]
	goto $label$30 
	
.LABEL $label$47
	CALL $78(*(($0 + [4])), $5)
	*($9) = (*($9) + [1])
	$3 = *($8 + [4])
	if ( ($3 == 0) ){ goto $label$33 }
	$11 = [7]
	goto $label$30 
	
.LABEL $label$46
	$1 = $3
	$3 = *($1)
	if ( $3 ){ goto $label$34 }
	goto $label$35 
	
.LABEL $label$45
	$1 = *($8 + [8])
	if ( ((int_32)*($1) == (int_32)$8) ){ goto $label$32 }
	$11 = [10]
	goto $label$30 
	
.LABEL $label$44
	$5 = ($8 + [8])
	$11 = [11]
	goto $label$30 
	
.LABEL $label$43
	$3 = *($5)
	$5 = ($3 + [8])
	$1 = *($3 + [8])
	if ( ((int_32)$3 != (int_32)*($1)) ){ goto $label$31 }
	$11 = [8]
	goto $label$30 
	
.LABEL $label$42
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$24 }
	goto $label$1 
	
.LABEL $label$41
	$11 = [0]
	goto $label$30 
	
.LABEL $label$40
	$11 = [1]
	goto $label$30 
	
.LABEL $label$39
	$11 = [3]
	goto $label$30 
	
.LABEL $label$38
	$11 = [1]
	goto $label$30 
	
.LABEL $label$37
	$11 = [4]
	goto $label$30 
	
.LABEL $label$36
	$11 = [6]
	goto $label$30 
	
.LABEL $label$35
	$11 = [8]
	goto $label$30 
	
.LABEL $label$34
	$11 = [7]
	goto $label$30 
	
.LABEL $label$33
	$11 = [9]
	goto $label$30 
	
.LABEL $label$32
	$11 = [8]
	goto $label$30 
	
.LABEL $label$31
	$11 = [11]
	goto $label$30 
	
.LABEL $label$2
	
.LOOP $label$56:
	$1 = *($8 + [8])
	if ( ($1 == 0) ){ goto $label$55 }
	$8 = $1
	goto $label$56 
	
.LABEL $label$55
	CALL $110($0, $8)
	return 
	
.LABEL $label$1
	$11
}

void .FUNC $72 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9981])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10027])
	
.LABEL $label$2
	$5 = *($1 + [8])
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [9375])
	
.LABEL $label$3
	$6 = ((int_64)*($1) + (int_64)*($2))
	*($1) = $6
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9418])
	$6 = *($1)
	
.LABEL $label$4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9437])
	
.LABEL $label$5
	$2 = ($1 + [8])
	if ( ((int_64)$5 == (int_64)(uint_64)*($2) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10078])
	
.LABEL $label$6
	$7 = $3
	$3 = ($7 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	*($4 + [8]) = *($2)
	CALL memcpy(($7 + [-8]), ($4 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $3, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($4 + [16])
}

void .FUNC $73 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $15($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $70 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [80])
	$global$0 = $4
	*(($4 + [32])) = [0]
	*($4 + [16]) = (int_64)-1
	*($4 + [24]) = (int_64)0
	$5 = *($0)
	*($4) = $5
	$6 = *($2 + [8])
	*($4 + [8]) = $1
	$0 = CALL db_find_i64($5, $1, (int_64)3607749779137757184, (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_32)$0) < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $71($4, $0)
	if ( ((int_32)*($0 + [16]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [9878])
	
.LABEL $label$4
	*($4 + [48]) = $2
	CALL $72($4, $0, ($4 + [48]))
	$7 = *($4 + [24])
	if ( $7 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_64)CALL current_receiver() == (int_64)*($4)) ){ goto $label$5 }
	CALL eosio_assert([0], [10137])
	
.LABEL $label$5
	*(($0 = CALL $7([32])) + [16]) = $4
	*($0 + [8]) = *(($2 + [8]))
	*($0) = *($2)
	CALL memcpy(($4 + [48]), $0, [8])
	*($4 + [72]) = *($0 + [8])
	CALL memcpy((($4 + [48]) | [8]), ($4 + [72]), [8])
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8
	$7 = CALL db_store_i64(*(($4 + [8])), (int_64)3607749779137757184, $3, $1), ($4 + [48]), [16]
	*($0 + [20]) = $7)
	$2 = ($4 + [16])
	if ( (uint_64)($1 <= *($2)) ){ goto $label$6 }
	*($2) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$6
	*($4 + [72]) = $0
	$1 = (uint_64)*(($0 + [8])) >> (uint_64)(int_64)8
	*($4 + [48]) = $1)
	*($4 + [44]) = $7
	$8 = ($4 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($4 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $1
	*($2 + [16]) = $7
	*($4 + [72]) = [0]
	*($2) = $0
	*($8) = ($2 + [24])
	$0 = *($4 + [72])
	*($4 + [72]) = [0]
	if ( $0 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $73(($4 + [24]), ($4 + [72]), ($4 + [48]), ($4 + [44]))
	$0 = *($4 + [72])
	*($4 + [72]) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9($0)
	
.LABEL $label$7
	$7 = *($4 + [24])
	if ( ($7 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$8 = ($4 + [28])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $9($2)
	
.LABEL $label$13
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($4 + [24]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $7
	
.LABEL $label$10
	*($8) = $7
	CALL $9($0)
	
.LABEL $label$1
	$global$0 = ($4 + [80])
}

int_32 .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9929])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$8
	CALL memcpy(($3 + [24]), $7, [8])
	$8 = *($3 + [24])
	*(($5 + [8])) = $8
	*($5 + [20]) = $1
	*($3 + [16]) = $5
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	*($3 + [24]) = $8)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $8
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $73(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $2($2)
	
.LABEL $label$9
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $9($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $76 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [208])
	$global$0 = $4
	$5 = [0]
	$6 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$7 = $6)
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$7 = $8
	$9 = $5
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	$7 = $8
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$3 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $9 ){ goto $label$7 }
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((*($3) & [1]) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [8337])
	if ( ((*($3) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	if ( (*($3 + [4]) <= [257]) ){ goto $label$1 }
	CALL eosio_assert([0], [8925])
	
.LABEL $label$1
	$11 = [0]
	*(($4 + [136])) = [0]
	*($4 + [120]) = (int_64)-1
	*($4 + [128]) = (int_64)0
	$7 = *($0)
	*($4 + [104]) = $7
	*($4 + [112]) = $6
	$5 = CALL db_find_i64($7, $6, (int_64)-4157508551318700032, $6)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$9 }
	$11 = CALL $79(($4 + [104]), $5)
	if ( ((int_32)*($11 + [44]) == (int_32)($4 + [104])) ){ goto $label$8 }
	CALL eosio_assert([0], [9878])
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [8954])
	
.LABEL $label$8
	CALL require_auth(*($11 + [32]))
	$6 = *($2)
	if ( ((uint_64)((int_64)$6 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$11 }
	$7 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$7 = $8
	$9 = $5
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$7 = $8
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $9 ){ goto $label$14 }
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [9014])
	$6 = *($2)
	
.LABEL $label$10
	if ( ((int_64)$6 > (int_64)0) ){ goto $label$15 }
	CALL eosio_assert([0], [9031])
	
.LABEL $label$15
	if ( ((int_64)*(($2 + [8])) == (int_64)*($11 + [8])) ){ goto $label$16 }
	CALL eosio_assert([0], [9060])
	
.LABEL $label$16
	if ( ((int_64)*($2) <= (int_64))(*($11 + [16]) - *($11))) ){ goto $label$17 }
	CALL eosio_assert([0], [9086])
	
.LABEL $label$17
	*($4 + [144]) = $2
	CALL $80(($4 + [104]), $11, ($4 + [144]))
	$5 = ($11 + [32])
	$7 = *($5)
	$10 = ($2 + [8])
	*(($9 = (($4 + [88]) + [8]))) = *($10)
	$8 = *($2)
	*((($4 + [8]) + [8])) = *($9)
	*($4 + [88]) = $8
	*($4 + [8]) = *($4 + [88])
	CALL $70($0, $7, ($4 + [8]), $7)
	$7 = *($5)
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$18 }
	$8 = *($0)
	*($4 + [72]) = [8534]
	*($4 + [76]) = CALL $17([8534])
	*($4) = *($4 + [72])
	$9 = CALL $48(($4 + [80]), $4)
	$6 = *($5)
	*(($11 = (($4 + [24]) + [24]))) = *($10)
	*($4 + [24]) = $6
	*($4 + [32]) = $1
	*($4 + [40]) = *($2)
	$6 = *($9)
	CALL $19((($4 + [24]) + [32]), $3)
	*(($5 = CALL $7([16]))) = $7
	*($5 + [8]) = $6
	*((($4 + [144]) + [24])) = *($11)
	$9 = (($4 + [24]) + [40])
	*(($10 = (($4 + [144]) + [40]))) = *($9)
	*($9) = [0]
	*($4 + [192]) = $5
	$5 = ($5 + [16])
	*($4 + [200]) = $5
	*($4 + [196]) = $5
	*($4 + [144]) = *($4 + [24])
	*($4 + [152]) = *($4 + [32])
	*($4 + [160]) = *($4 + [40])
	*($4 + [176]) = *($4 + [56])
	*($4 + [56]) = (int_64)0
	CALL $81($8, (int_64)-3617168760277827584, ($4 + [192]), ($4 + [144]))
	if ( ((*($4 + [176]) & [1]) == 0) ){ goto $label$19 }
	CALL $9(*($10))
	
.LABEL $label$19
	$5 = *($4 + [192])
	if ( ($5 == 0) ){ goto $label$20 }
	*($4 + [196]) = $5
	CALL $9($5)
	
.LABEL $label$20
	if ( ((*(($4 + [56])) & [1]) == 0) ){ goto $label$18 }
	CALL $9(*(($4 + [64])))
	
.LABEL $label$18
	$10 = *($4 + [128])
	if ( ($10 == 0) ){ goto $label$21 }
	$2 = ($4 + [132])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$10) ){ goto $label$23 }
	
.LOOP $label$24:
	$5 = ($5 + [-24])
	$9 = *($5)
	*($5) = [0]
	if ( ($9 == 0) ){ goto $label$25 }
	CALL $9($9)
	
.LABEL $label$25
	if ( ((int_32)$10 != (int_32)$5) ){ goto $label$24 }
	$5 = *(($4 + [128]))
	goto $label$22 
	
.LABEL $label$23
	$5 = $10
	
.LABEL $label$22
	*($2) = $10
	CALL $9($5)
	
.LABEL $label$21
	$global$0 = ($4 + [208])
}

void .FUNC $77 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9981])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10027])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9455])
	
.LABEL $label$3
	$7 = (int_64)
	*($1) = $7(*($1) - *($3)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9503])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9525])
	
.LABEL $label$5
	$3 = ($1 + [8])
	if ( ((int_64)$6 == (int_64)(uint_64)*($3) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10078])
	
.LABEL $label$6
	$8 = $4
	$4 = ($8 + [-16])
	$global$0 = $4
	CALL memcpy($4, $1, [8])
	*($5 + [8]) = *($3)
	CALL memcpy(($8 + [-8]), ($5 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

int_32 .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $127(CALL $128($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9703])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9703])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

int_32 .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9929])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([48])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [32]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [16])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [24])
	CALL $148(($3 + [32]), ($3 + [24]))
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	$7 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [32]) = $7)
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $42(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $36 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	float_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_32 $17
	int_32 $18
	$3 = ($global$0 - [416])
	$global$0 = $3
	$4 = [0]
	*((($3 + [344]) + [32])) = [0]
	*($3 + [352]) = $1
	*($3 + [360]) = (int_64)-1
	*($3 + [368]) = (int_64)0
	$5 = *($0)
	*($3 + [344]) = $5
	$6 = CALL db_find_i64($5, $1, (int_64)-5964829140208058368, (uint_64)*($0 + [32]) >> (uint_64)(int_64)8)
	if ( ((int_32)$6) < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $35(($3 + [344]), $6)
	if ( ((int_32)*($7 + [24]) == (int_32)($3 + [344])) ){ goto $label$2 }
	CALL eosio_assert([0], [9878])
	
.LABEL $label$2
	$5 = CALL $16()
	$8 = *(($0 + [136]))
	$9 = *($0 + [128])
	$10 = (float_64)1
	$5 = (int_64)
	if ( ((uint_64)$5($5 - *($7 + [16]))) > (uint_64)(int_64)604799999999) ){ goto $label$3 }
	$10 = ((float_64)(CASTING float_64)(uint_64 $5) / (float_64)(float_64)6048e8)
	
.LABEL $label$3
	$5 = *(($0 + [144]))
	$11 = *($7)
	CALL prints([8617])
	$10 = ((float_64)((float_64)((float_64)$10 * (float_64)(CASTING float_64)(int_64 $11)) * (float_64)(CASTING float_64)(int_64 $9)) / (float_64)(CASTING float_64)(int_64 $5))
	if ( (((float_64)$10 < (float_64)(float_64)18446744073709551615) & ((float_64)$10 >= (float_64)(float_64)0)) ){ goto $label$5 }
	$12 = (int_64)0
	goto $label$4 
	
.LABEL $label$5
	$12 = (Rounds 0)($10)
	
.LABEL $label$4
	CALL printui($12)
	CALL prints([8627])
	if ( (int_64)($12 == 0) ){ goto $label$6 }
	$13 = *(($0 + [32]))
	if ( (uint_64)(((int_64)$12 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$7 }
	CALL eosio_assert([0], [9326])
	
.LABEL $label$7
	$5 = (uint_64)$13 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$11 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$5 = $11
	$14 = $6
	$6 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$11
	$5 = $11
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$9 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$14 = ((int_32)$6 < (int_32)[6])
	$15 = ($6 + [1])
	$6 = $15
	if ( $14 ){ goto $label$12 }
	$6 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [8337])
	
.LABEL $label$8
	$5 = *($0)
	*($3 + [288]) = [8534]
	*($3 + [292]) = CALL $17([8534])
	*($3 + [48]) = *($3 + [288])
	$6 = CALL $48(($3 + [296]), ($3 + [48]))
	$11 = *($0)
	$16 = *($6)
	*($3 + [272]) = [8629]
	*($3 + [276]) = CALL $17([8629])
	*($3 + [40]) = *($3 + [272])
	$15 = CALL $48(($3 + [280]), ($3 + [40]))
	*(($3 + [144])) = [0]
	*($3 + [136]) = (int_64)0
	$6 = CALL $17([8638])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$19 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$22 }
	*($3 + [136]) = ($6 << [1])
	$14 = (($3 + [136]) | [1])
	if ( $6 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	$17 = (($6 + [16]) & [-16])
	$14 = CALL $7($17)
	*($3 + [136]) = ($17 | [1])
	*($3 + [144]) = $14
	*($3 + [140]) = $6
	
.LABEL $label$21
	CALL memcpy($14, [8638], $6)
	
.LABEL $label$20
	*(($14 + $6)) = [0]
	*((($3 + [224]) + [24])) = $13
	*(($14 = (($3 + [304]) + [24]))) = [0]
	$6 = ($3 + [144])
	*(($3 + [264])) = *($6)
	*($6) = [0]
	*($3 + [232]) = $1
	*($3 + [240]) = $12
	*($3 + [304]) = $11
	*($3 + [320]) = (int_64)0
	*($3 + [224]) = *($0)
	*($3 + [256]) = *($3 + [136])
	*($3 + [136]) = (int_64)0
	*($3 + [312]) = *($15)
	*(($6 = CALL $7([16]))) = $5
	*($6 + [8]) = $16
	*((($3 + [304]) + [36])) = [0]
	$15 = ($6 + [16])
	*($14) = $15
	*(($3 + [324])) = $15
	*($3 + [320]) = $6
	*($3 + [332 align=4]) = (int_64)0
	$6 = *($3 + [256])
	$14 = ( *((($3 + [224]) + [36])) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$6 = ($14 + [32])
	$5 = (CASTING uint_64)(uint_32 $14)
	$14 = ($3 + [332])
	
.LOOP $label$23:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$23 }
	if ( ($6 == 0) ){ goto $label$25 }
	CALL $49($14, $6)
	$14 = *(($3 + [336]))
	$6 = *(($3 + [332]))
	goto $label$24 
	
.LABEL $label$25
	$14 = [0]
	$6 = [0]
	
.LABEL $label$24
	*($3 + [180]) = $6
	*($3 + [176]) = $6
	*($3 + [184]) = $14
	*($3 + [88]) = ($3 + [176])
	*($3 + [392]) = ($3 + [224])
	CALL $50(($3 + [392]), ($3 + [88]))
	CALL $51(($3 + [304]))
	$6 = *($3 + [332])
	if ( ($6 == 0) ){ goto $label$26 }
	*(($3 + [336])) = $6
	CALL $9($6)
	
.LABEL $label$26
	$6 = *($3 + [320])
	if ( ($6 == 0) ){ goto $label$27 }
	*(($3 + [324])) = $6
	CALL $9($6)
	
.LABEL $label$27
	if ( (*(($3 + [256])) & [1]) ){ goto $label$29 }
	if ( (*($3 + [136]) & [1]) ){ goto $label$28 }
	goto $label$18 
	
.LABEL $label$29
	CALL $9(*(($3 + [264])))
	if ( ((*($3 + [136]) & [1]) == 0) ){ goto $label$18 }
	
.LABEL $label$28
	CALL $9(*(($3 + [144])))
	if ( ((int_64)$13 == (int_64)$8) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$19
	CALL $18(($3 + [136]))
	
.LABEL $label$18
	if ( ((int_64)$13 != (int_64)$8) ){ goto $label$16 }
	
.LABEL $label$17
	$5 = (int_64)
	if ( ((int_64)$5($9 - $12)) <= (int_64)-4611686018427387904) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL eosio_assert([0], [9455])
	$5 = (int_64)
	if ( ((int_64)$5($9 - $12)) > (int_64)-4611686018427387904) ){ goto $label$14 }
	
.LABEL $label$15
	CALL eosio_assert([0], [9503])
	goto $label$13 
	
.LABEL $label$14
	if ( ((int_64)$5 < (int_64)4611686018427387904) ){ goto $label$13 }
	CALL eosio_assert([0], [9525])
	
.LABEL $label$13
	*(($0 + [136])) = $8
	*(($0 + [128])) = $5
	
.LABEL $label$6
	$5 = *(($7 + [16]))
	$11 = *($0 + [80])
	*((($3 + [224]) + [32])) = [0]
	*($3 + [232]) = $1
	*($3 + [240]) = (int_64)-1
	*($3 + [248]) = (int_64)0
	$12 = *($0)
	*($3 + [224]) = $12
	$5 = ((uint_64)((uint_64)$5 / (uint_64)(int_64)1000000) / (uint_64)$11)
	if ( ((int_64)CALL current_receiver() == (int_64)*($3 + [224])) ){ goto $label$30 }
	CALL eosio_assert([0], [10137])
	
.LABEL $label$30
	*(($6 = CALL $7([48])) + [8]) = (int_64)0
	*($6) = (int_64)0
	*($6 + [32]) = ($3 + [224])
	*($6 + [8]) = *(($7 + [8]))
	*($6) = *($7)
	*($6 + [16]) = $5
	*($6 + [24]) = $5
	*($3 + [144]) = (($3 + [304]) + [32])
	*($3 + [140]) = ($3 + [304])
	*($3 + [136]) = ($3 + [304])
	*($3 + [392]) = ($3 + [136])
	*($3 + [180]) = ($6 + [16])
	*($3 + [176]) = $6
	*($3 + [184]) = ($6 + [24])
	CALL $41(($3 + [176]), ($3 + [392]))
	$5 = (uint_64)*($6 + [8]) >> (uint_64)(int_64)8
	$15 = CALL db_store_i64(*((($3 + [224]) + [8])), (int_64)-5964828963577528320, $12, $5), ($3 + [304]), [32]
	*($6 + [36]) = $15)
	if ( (uint_64)($5 <= *((($3 + [224]) + [16]))) ){ goto $label$31 }
	*(($3 + [240])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$31
	*($3 + [176]) = $6
	$5 = (uint_64)*(($6 + [8])) >> (uint_64)(int_64)8
	*($3 + [304]) = $5)
	*($3 + [136]) = $15
	$17 = ($3 + [252])
	$14 = *($17)
	if ( ((uint_32)$14 >= (uint_32)*(($3 + [256]))) ){ goto $label$34 }
	*($14 + [8]) = $5
	*($14 + [16]) = $15
	*($3 + [176]) = [0]
	*($14) = $6
	*($17) = ($14 + [24])
	$6 = *($3 + [176])
	*($3 + [176]) = [0]
	if ( $6 ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$34
	CALL $42(($3 + [248]), ($3 + [176]), ($3 + [304]), ($3 + [136]))
	$6 = *($3 + [176])
	*($3 + [176]) = [0]
	if ( ($6 == 0) ){ goto $label$32 }
	
.LABEL $label$33
	CALL $9($6)
	
.LABEL $label$32
	CALL $52(($3 + [344]), $7)
	$15 = *($3 + [248])
	if ( ($15 == 0) ){ goto $label$1 }
	$7 = ($3 + [252])
	$6 = *($7)
	if ( ((int_32)$6 == (int_32)$15) ){ goto $label$36 }
	
.LOOP $label$37:
	$6 = ($6 + [-24])
	$14 = *($6)
	*($6) = [0]
	if ( ($14 == 0) ){ goto $label$38 }
	CALL $9($14)
	
.LABEL $label$38
	if ( ((int_32)$15 != (int_32)$6) ){ goto $label$37 }
	$6 = *(($3 + [248]))
	goto $label$35 
	
.LABEL $label$36
	$6 = $15
	
.LABEL $label$35
	*($7) = $15
	CALL $9($6)
	
.LABEL $label$1
	*((($3 + [304]) + [32])) = [0]
	*($3 + [312]) = $1
	*($3 + [320]) = (int_64)-1
	*($3 + [328]) = (int_64)0
	*($3 + [304]) = *($0)
	$18 = CALL $37(($3 + [304]), (uint_64)*(($0 + [32])) >> (uint_64)(int_64)8), [8663]
	*($3 + [216]) = *($18) + [24])
	*((($3 + [176]) + [32])) = [0]
	*($3 + [184]) = $1
	*($3 + [192]) = (int_64)-1
	*($3 + [200]) = (int_64)0
	$5 = *($0)
	*($3 + [176]) = $5
	$6 = CALL db_lowerbound_i64($5, $1, (int_64)7760153368969871360, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$39 }
	$4 = CALL $53(($3 + [176]), $6)
	
.LABEL $label$39
	$7 = ($0 + [228])
	$14 = *(($0 + [224]))
	if ( ((int_32)$14 == (int_32)$7) ){ goto $label$45 }
	$11 = (int_64)0
	$17 = ($18 + [24])
	
.LOOP $label$46:
	$15 = $14
	$5 = *($15 + [16])
	if ( ((uint_64)$5 <= (uint_64)*($17)) ){ goto $label$50 }
	*($3 + [216]) = $5
	if ( ($4 == 0) ){ goto $label$53 }
	$10 = ((float_64)((float_64)(CASTING float_64)(int_64 *($4)) / (float_64)(CASTING float_64)(int_64 *($15 + [40]))) * (float_64)(CASTING float_64)(int_64 *($15 + [24])))
	if ( (((float_64)$10 < (float_64)(float_64)18446744073709551615) & ((float_64)$10 >= (float_64)(float_64)0)) ){ goto $label$52 }
	$11 = ((int_64)$11 + (int_64)0)
	if ( ((uint_64)*($4 + [16]) <= (uint_64)$5) ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$53
	$10 = ((float_64)((float_64)(CASTING float_64)(int_64 *($18)) / (float_64)(CASTING float_64)(int_64 *($15 + [40]))) * (float_64)(CASTING float_64)(int_64 *($15 + [24])))
	if ( ((((float_64)$10 < (float_64)(float_64)18446744073709551615) & ((float_64)$10 >= (float_64)(float_64)0)) == 0) ){ goto $label$54 }
	$11 = ((int_64)$11 + (int_64)(Rounds 0)($10))
	$4 = [0]
	$6 = *($15 + [4])
	if ( $6 ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$54
	$11 = ((int_64)$11 + (int_64)0)
	$4 = [0]
	$6 = *($15 + [4])
	if ( $6 ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$52
	$11 = ((int_64)$11 + (int_64)(Rounds 0)($10))
	if ( ((uint_64)*($4 + [16]) > (uint_64)$5) ){ goto $label$50 }
	
.LABEL $label$51
	$6 = [0]
	$14 = CALL db_next_i64(*($4 + [28]), ($3 + [224]))
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$55 }
	$6 = CALL $53(($3 + [176]), $14)
	
.LABEL $label$55
	CALL $54(($3 + [176]), $4)
	$4 = $6
	$6 = *($15 + [4])
	if ( $6 ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$50
	$6 = *($15 + [4])
	if ( ($6 == 0) ){ goto $label$48 }
	
.LABEL $label$49
	
.LOOP $label$56:
	$14 = $6
	$6 = *($14)
	if ( $6 ){ goto $label$56 }
	goto $label$47 
	
.LABEL $label$48
	$14 = *($15 + [8])
	if ( ((int_32)*($14) == (int_32)$15) ){ goto $label$47 }
	$15 = ($15 + [8])
	
.LOOP $label$57:
	$6 = *($15)
	$15 = ($6 + [8])
	$14 = *($6 + [8])
	if ( ((int_32)$6 != (int_32)*($14)) ){ goto $label$57 }
	
.LABEL $label$47
	if ( ((int_32)$14 != (int_32)$7) ){ goto $label$46 }
	if ( ((int_64)*($18) == (int_64)0) ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$45
	$11 = (int_64)0
	if ( ((int_64)*($18) != (int_64)0) ){ goto $label$43 }
	
.LABEL $label$44
	CALL $55(($3 + [304]), $18)
	if ( (int_64)($11 == 0) ){ goto $label$41 }
	goto $label$42 
	
.LABEL $label$43
	$5 = *($0)
	*($3 + [224]) = ($3 + [216])
	CALL $56(($3 + [304]), $18, $5, ($3 + [224]))
	if ( (int_64)($11 == 0) ){ goto $label$41 }
	
.LABEL $label$42
	$9 = *(($0 + [32]))
	if ( (uint_64)(((int_64)$11 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$58 }
	CALL eosio_assert([0], [9326])
	
.LABEL $label$58
	$5 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$61:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$60 }
	$12 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$62 }
	$5 = $12
	$14 = $6
	$6 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$61 }
	goto $label$59 
	
.LABEL $label$62
	$5 = $12
	
.LOOP $label$63:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$60 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$14 = ((int_32)$6 < (int_32)[6])
	$15 = ($6 + [1])
	$6 = $15
	if ( $14 ){ goto $label$63 }
	$6 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[6]) ){ goto $label$61 }
	goto $label$59 
	
.LABEL $label$60
	CALL eosio_assert([0], [8337])
	
.LABEL $label$59
	$5 = *($0 + [48])
	*($3 + [120]) = [8692]
	*($3 + [124]) = CALL $17([8692])
	*($3 + [32]) = *($3 + [120])
	$6 = CALL $48(($3 + [128]), ($3 + [32]))
	$12 = *($0)
	$13 = *($6)
	*($3 + [104]) = [8629]
	*($3 + [108]) = CALL $17([8629])
	*($3 + [24]) = *($3 + [104])
	$15 = CALL $48(($3 + [112]), ($3 + [24]))
	*(($3 + [96])) = [0]
	*($3 + [88]) = (int_64)0
	$6 = CALL $17([8699])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$40 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$66 }
	*($3 + [88]) = ($6 << [1])
	$14 = (($3 + [88]) | [1])
	if ( $6 ){ goto $label$65 }
	goto $label$64 
	
.LABEL $label$66
	$4 = (($6 + [16]) & [-16])
	$14 = CALL $7($4)
	*($3 + [88]) = ($4 | [1])
	*($3 + [96]) = $14
	*($3 + [92]) = $6
	
.LABEL $label$65
	CALL memcpy($14, [8699], $6)
	
.LABEL $label$64
	*(($14 + $6)) = [0]
	*((($3 + [224]) + [24])) = $9
	*(($14 = (($3 + [136]) + [24]))) = [0]
	$6 = ($3 + [96])
	*(($3 + [264])) = *($6)
	*($6) = [0]
	*($3 + [232]) = $1
	*($3 + [240]) = $11
	*($3 + [136]) = $12
	*($3 + [152]) = (int_64)0
	*($3 + [224]) = *(($0 + [48]))
	*($3 + [256]) = *($3 + [88])
	*($3 + [88]) = (int_64)0
	*($3 + [144]) = *($15)
	*(($6 = CALL $7([16]))) = $5
	*($6 + [8]) = $13
	*((($3 + [136]) + [36])) = [0]
	$15 = ($6 + [16])
	*($14) = $15
	*(($3 + [156])) = $15
	*($3 + [152]) = $6
	*($3 + [164 align=4]) = (int_64)0
	$6 = *($3 + [256])
	$14 = ( *((($3 + [224]) + [36])) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$6 = ($14 + [32])
	$5 = (CASTING uint_64)(uint_32 $14)
	$14 = ($3 + [164])
	
.LOOP $label$67:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$67 }
	if ( ($6 == 0) ){ goto $label$69 }
	CALL $49($14, $6)
	$14 = *(($3 + [168]))
	$6 = *(($3 + [164]))
	goto $label$68 
	
.LABEL $label$69
	$14 = [0]
	$6 = [0]
	
.LABEL $label$68
	*($3 + [396]) = $6
	*($3 + [392]) = $6
	*($3 + [400]) = $14
	*($3 + [384]) = ($3 + [392])
	*($3 + [408]) = ($3 + [224])
	CALL $50(($3 + [408]), ($3 + [384]))
	CALL $51(($3 + [136]))
	$6 = *($3 + [164])
	if ( ($6 == 0) ){ goto $label$70 }
	*(($3 + [168])) = $6
	CALL $9($6)
	
.LABEL $label$70
	$6 = *($3 + [152])
	if ( ($6 == 0) ){ goto $label$71 }
	*(($3 + [156])) = $6
	CALL $9($6)
	
.LABEL $label$71
	if ( ((*(($3 + [256])) & [1]) == 0) ){ goto $label$72 }
	CALL $9(*(($3 + [264])))
	
.LABEL $label$72
	if ( ((*($3 + [88]) & [1]) == 0) ){ goto $label$73 }
	CALL $9(*(($3 + [96])))
	
.LABEL $label$73
	$5 = *($0)
	*($3 + [72]) = [8534]
	*($3 + [76]) = CALL $17([8534])
	*($3 + [16]) = *($3 + [72])
	$12 = *(CALL $48(($3 + [80]), ($3 + [16])))
	$13 = *($0)
	*($3 + [56]) = [8722]
	*($3 + [60]) = CALL $17([8722])
	*($3 + [8]) = *($3 + [56])
	$6 = CALL $48(($3 + [64]), ($3 + [8]))
	*((($3 + [136]) + [16])) = $9
	*($3 + [144]) = $11
	*($3 + [136]) = $1
	*($3 + [224]) = $13
	*($3 + [232]) = *($6)
	*(($6 = CALL $7([16]))) = $5
	*($6 + [8]) = $12
	*(($3 + [260])) = [0]
	$14 = ($6 + [16])
	*((($3 + [224]) + [24])) = $14
	*(($3 + [244])) = $14
	*($3 + [240]) = $6
	*($3 + [252 align=4]) = (int_64)0
	CALL $49(($3 + [252]), [24])
	$15 = ($3 + [256])
	$6 = *($15)
	$14 = *($3 + [252])
	*($3 + [396]) = $14
	*($3 + [392]) = $14
	*($3 + [400]) = $6
	*($3 + [408]) = ($3 + [392])
	*($3 + [88]) = ($3 + [136])
	CALL $57(($3 + [88]), ($3 + [408]))
	CALL $51(($3 + [224]))
	$6 = *($3 + [252])
	if ( ($6 == 0) ){ goto $label$74 }
	*($15) = $6
	CALL $9($6)
	
.LABEL $label$74
	$6 = *($3 + [240])
	if ( ($6 == 0) ){ goto $label$41 }
	*(($3 + [244])) = $6
	CALL $9($6)
	
.LABEL $label$41
	$15 = *($3 + [200])
	if ( ($15 == 0) ){ goto $label$75 }
	$4 = ($3 + [204])
	$6 = *($4)
	if ( ((int_32)$6 == (int_32)$15) ){ goto $label$77 }
	
.LOOP $label$78:
	$6 = ($6 + [-24])
	$14 = *($6)
	*($6) = [0]
	if ( ($14 == 0) ){ goto $label$79 }
	CALL $9($14)
	
.LABEL $label$79
	if ( ((int_32)$15 != (int_32)$6) ){ goto $label$78 }
	$6 = *(($3 + [200]))
	goto $label$76 
	
.LABEL $label$77
	$6 = $15
	
.LABEL $label$76
	*($4) = $15
	CALL $9($6)
	
.LABEL $label$75
	$15 = *($3 + [328])
	if ( ($15 == 0) ){ goto $label$80 }
	$4 = ($3 + [332])
	$6 = *($4)
	if ( ((int_32)$6 == (int_32)$15) ){ goto $label$82 }
	
.LOOP $label$83:
	$6 = ($6 + [-24])
	$14 = *($6)
	*($6) = [0]
	if ( ($14 == 0) ){ goto $label$84 }
	CALL $9($14)
	
.LABEL $label$84
	if ( ((int_32)$15 != (int_32)$6) ){ goto $label$83 }
	$6 = *(($3 + [328]))
	goto $label$81 
	
.LABEL $label$82
	$6 = $15
	
.LABEL $label$81
	*($4) = $15
	CALL $9($6)
	
.LABEL $label$80
	$15 = *($3 + [368])
	if ( ($15 == 0) ){ goto $label$85 }
	$4 = ($3 + [372])
	$6 = *($4)
	if ( ((int_32)$6 == (int_32)$15) ){ goto $label$87 }
	
.LOOP $label$88:
	$6 = ($6 + [-24])
	$14 = *($6)
	*($6) = [0]
	if ( ($14 == 0) ){ goto $label$89 }
	CALL $9($14)
	
.LABEL $label$89
	if ( ((int_32)$15 != (int_32)$6) ){ goto $label$88 }
	$6 = *(($3 + [368]))
	goto $label$86 
	
.LABEL $label$87
	$6 = $15
	
.LABEL $label$86
	*($4) = $15
	CALL $9($6)
	
.LABEL $label$85
	$global$0 = ($3 + [416])
	return (unreachable)
	
.LABEL $label$40
	CALL $18(($3 + [88]))
	(unreachable)
}

int_32 .FUNC $37 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9878])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-5964828963577528320, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $39($0, $5)
	if ( ((int_32)*($6 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9878])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

void .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $2
	if ( $2 ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = *($1 + [8])
	if ( *($3 + [12]) ){ goto $label$3 }
	$4 = ($3 + [12])
	$2 = *($3 + [8])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$6 }
	if ( ($5 == 0) ){ goto $label$2 }
	if ( *($5 + [12]) ){ goto $label$2 }
	$3 = ($5 + [12])
	goto $label$5 
	
.LABEL $label$6
	$5 = *($2 + [4])
	if ( ($5 == 0) ){ goto $label$1 }
	if ( *($5 + [12]) ){ goto $label$1 }
	$3 = ($5 + [12])
	
.LABEL $label$5
	*($4) = [1]
	*($2 + [12]) = ((int_32)$2 == (int_32)$0)
	*($3) = [1]
	$1 = $2
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$4 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	if ( ((int_32)*($3) != (int_32)$1) ){ goto $label$7 }
	$5 = *($1 + [4])
	*($3) = $5
	if ( ($5 == 0) ){ goto $label$8 }
	*($5 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$8
	*(($5 = ($1 + [8]))) = $2
	*((($0 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($0) == (int_32)$3) ))) = $1
	*($2) = $1
	*(($1 + [4])) = $3
	$4 = ($1 + [12])
	$2 = *($5)
	
.LABEL $label$7
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2 + [4])
	$5 = *($3)
	*($2 + [4]) = $5
	if ( ($5 == 0) ){ goto $label$9 }
	*($5 + [8]) = $2
	
.LABEL $label$9
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*($3) = $2
	return 
	
.LABEL $label$1
	if ( ((int_32)*($3) == (int_32)$1) ){ goto $label$10 }
	$5 = *($3 + [4])
	$1 = *($5)
	*($3 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$11
	*($5 + [8]) = $2
	*((($1 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($1) == (int_32)$3) ))) = $5
	*($2) = $5
	*($5) = $3
	$4 = ($5 + [12])
	$2 = *($5 + [8])
	
.LABEL $label$10
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2)
	$5 = *($3 + [4])
	*($2) = $5
	if ( ($5 == 0) ){ goto $label$12 }
	*($5 + [8]) = $2
	
.LABEL $label$12
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*(($3 + [4])) = $2
}

int_32 .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9929])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = [1]
	*($5 + [44]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [16])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [32])
	*($3 + [44]) = ($5 + [40])
	CALL $149(($3 + [32]), ($3 + [24]))
	*($5 + [48]) = $1
	*($3 + [24]) = $5
	$7 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [32]) = $7)
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $84(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $32 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9981])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10027])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9455])
	
.LABEL $label$3
	$7 = (int_64)
	*($1) = $7(*($1) - *($3)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9503])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9525])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10078])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $60($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $4, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10233])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1 + [8])
	if ( (uint_64)(((int_64)*(*(($4 + [-24])) + [8]) ^ (int_64)$6) <= (int_64)256) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((uint_64)((int_64)*(*($9) + [8]) ^ (int_64)$6) >= (uint_64)(int_64)256) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10283])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [28]))
}

void .FUNC $30 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$3 = ($global$0 - [256])
	$global$0 = $3
	if ( CALL has_auth($1) ){ goto $label$1 }
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL eosio_assert([0], [8315])
	
.LABEL $label$1
	$4 = [0]
	$5 = *($2 + [8])
	$6 = (uint_64)$5 >> (uint_64)(int_64)8
	$7 = $6)
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$7 }
	$7 = $8
	$9 = $4
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$7
	$7 = $8
	
.LOOP $label$8:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$4 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$4 < (int_32)[6])
	$10 = ($4 + [1])
	$4 = $10
	if ( $9 ){ goto $label$8 }
	$4 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$5 }
	
.LABEL $label$6
	if ( ((int_64)$5 == (int_64)*($0 + [32])) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [8337])
	if ( ((int_64)$5 == (int_64)*($0 + [32])) ){ goto $label$2 }
	
.LABEL $label$3
	CALL eosio_assert([0], [8357])
	
.LABEL $label$2
	$7 = (int_64)0
	if ( ((int_64)*($2) > (int_64)0) ){ goto $label$9 }
	CALL eosio_assert([0], [8390])
	
.LABEL $label$9
	*($3 + [192]) = ((uint_64)((int_64)((int_64)CALL $16() / (int_64)1000000) & (int_64)4294967295) / (uint_64)*($0 + [80]))
	*(($3 + [184])) = [0]
	*($3 + [168]) = (int_64)-1
	*($3 + [176]) = (int_64)0
	$8 = *($0)
	*($3 + [152]) = $8
	$11 = *(($2 + [8]))
	*($3 + [160]) = $1
	$4 = CALL db_find_i64($8, $1, (int_64)-5001342331490664448, (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_32)$4) < (int_32)[0]) ){ goto $label$13 }
	$4 = CALL $31(($3 + [152]), $4)
	if ( ((int_32)*($4 + [24]) == (int_32)($3 + [152])) ){ goto $label$14 }
	CALL eosio_assert([0], [9878])
	
.LABEL $label$14
	$7 = *($4)
	if ( ((uint_64)$7 <= (uint_64)*($2)) ){ goto $label$12 }
	$8 = *($0)
	*($3 + [96]) = $2
	CALL $32(($3 + [152]), $4, $8, ($3 + [96]))
	
.LABEL $label$13
	$8 = *($2)
	if ( ((uint_64)$8 > (uint_64)$7) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$9 = CALL db_next_i64(*($4 + [28]), ($3 + [96]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	CALL $31(($3 + [152]), $9)
	
.LABEL $label$15
	CALL $33(($3 + [152]), $4)
	$8 = *($2)
	if ( ((uint_64)$8 <= (uint_64)$7) ){ goto $label$10 }
	
.LABEL $label$11
	$8 = (int_64)
	if ( (uint_64)(((int_64)$8($8 - $7)) + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$16 }
	CALL eosio_assert([0], [9326])
	
.LABEL $label$16
	$4 = [0]
	
.LOOP $label$19:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$20 }
	$6 = $7
	$9 = $4
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$20
	$6 = $7
	
.LOOP $label$21:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$18 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$9 = ((int_32)$4 < (int_32)[6])
	$10 = ($4 + [1])
	$4 = $10
	if ( $9 ){ goto $label$21 }
	$4 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	CALL eosio_assert([0], [8337])
	
.LABEL $label$17
	*(($3 + [8])) = $5
	*($3 + [144]) = $5
	*($3) = $8
	*($3 + [136]) = $8
	CALL $34($0, $1, $3)
	
.LABEL $label$10
	*((($3 + [96]) + [32])) = [0]
	*($3 + [112]) = (int_64)-1
	*($3 + [120]) = (int_64)0
	$7 = *($0)
	*($3 + [96]) = $7
	$9 = ($2 + [8])
	$6 = *($9)
	*($3 + [104]) = $1
	$4 = CALL db_find_i64($7, $1, (int_64)-5964829140208058368, (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_32)$4) < (int_32)[0]) ){ goto $label$32 }
	if ( ((int_32)*(CALL $35(($3 + [96]), $4) + [24]) == (int_32)($3 + [96])) ){ goto $label$33 }
	CALL eosio_assert([0], [9878])
	
.LABEL $label$33
	CALL $36($0, $1, [0])
	*(($3 + [88])) = [0]
	*($3 + [64]) = $1
	*($3 + [72]) = (int_64)-1
	*($3 + [80]) = (int_64)0
	*($3 + [56]) = *($0)
	$4 = CALL $37(($3 + [56]), (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8), [8421])
	$7 = *($0)
	*($3 + [16]) = $2
	*($3 + [20]) = ($3 + [192])
	CALL $38(($3 + [56]), $4, $7, ($3 + [16]))
	$10 = *($3 + [80])
	if ( ($10 == 0) ){ goto $label$22 }
	$12 = ($3 + [84])
	$4 = *($12)
	if ( ((int_32)$4 == (int_32)$10) ){ goto $label$31 }
	
.LOOP $label$34:
	$4 = ($4 + [-24])
	$9 = *($4)
	*($4) = [0]
	if ( ($9 == 0) ){ goto $label$35 }
	CALL $9($9)
	
.LABEL $label$35
	if ( ((int_32)$10 != (int_32)$4) ){ goto $label$34 }
	$4 = *(($3 + [80]))
	goto $label$30 
	
.LABEL $label$32
	*((($3 + [56]) + [32])) = [0]
	*($3 + [72]) = (int_64)-1
	*($3 + [80]) = (int_64)0
	$7 = *($0)
	*($3 + [56]) = $7
	$6 = *($9)
	*($3 + [64]) = $1
	$4 = CALL db_find_i64($7, $1, (int_64)-5964828963577528320, (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_32)$4) < (int_32)[0]) ){ goto $label$29 }
	$10 = CALL $39(($3 + [56]), $4)
	if ( ((int_32)*($10 + [32]) == (int_32)($3 + [56])) ){ goto $label$36 }
	CALL eosio_assert([0], [9878])
	
.LABEL $label$36
	$7 = *($3 + [192])
	if ( ((uint_64)*($10 + [24]) >= (uint_64)$7) ){ goto $label$25 }
	if ( ((uint_64)*($10 + [16]) >= (uint_64)$7) ){ goto $label$25 }
	*(($3 + [48])) = [0]
	*($3 + [24]) = $1
	*($3 + [32]) = (int_64)-1
	*($3 + [40]) = (int_64)0
	$6 = *($0)
	*($3 + [16]) = $6
	if ( ((int_64)CALL current_receiver() == (int_64)*($3 + [16])) ){ goto $label$37 }
	CALL eosio_assert([0], [10137])
	
.LABEL $label$37
	*(($4 = CALL $7([40])) + [8]) = (int_64)0
	*($4) = (int_64)0
	*($4 + [24]) = ($3 + [16])
	*($4 + [8]) = *(($10 + [8]))
	*($4) = *($10)
	*($4 + [16]) = *(($10 + [16]))
	*($3 + [248]) = (($3 + [208]) + [24])
	*($3 + [244]) = ($3 + [208])
	*($3 + [240]) = ($3 + [208])
	CALL $40(($3 + [240]), $4)
	$7 = *($4 + [16])
	$12 = CALL db_store_i64(*((($3 + [16]) + [8])), (int_64)7760153368969871360, $6, $7, ($3 + [208]), [24])
	*($4 + [28]) = $12
	$9 = (($3 + [16]) + [16])
	if ( (uint_64)($7 <= *($9)) ){ goto $label$38 }
	*($9) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$38
	*($3 + [240]) = $4
	$7 = *(($4 + [16]))
	*($3 + [208]) = $7
	*($3 + [200]) = $12
	$13 = ($3 + [44])
	$9 = *($13)
	if ( ((uint_32)$9 >= (uint_32)*(($3 + [48]))) ){ goto $label$28 }
	*($9 + [8]) = $7
	*($9 + [16]) = $12
	*($3 + [240]) = [0]
	*($9) = $4
	*($13) = ($9 + [24])
	$4 = *($3 + [240])
	*($3 + [240]) = [0]
	if ( $4 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$31
	$4 = $10
	
.LABEL $label$30
	*($12) = $10
	CALL $9($4)
	goto $label$22 
	
.LABEL $label$29
	$6 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($3 + [56])) ){ goto $label$39 }
	CALL eosio_assert([0], [10137])
	
.LABEL $label$39
	*(($4 = CALL $7([48])) + [32]) = ($3 + [56])
	*($4 + [8]) = *(($2 + [8]))
	*($4) = *($2)
	$7 = *($3 + [192])
	*($4 + [16]) = $7
	*($4 + [24]) = $7
	*($3 + [248]) = (($3 + [16]) + [32])
	*($3 + [244]) = ($3 + [16])
	*($3 + [240]) = ($3 + [16])
	*($3 + [200]) = ($3 + [240])
	*($3 + [212]) = ($4 + [16])
	*($3 + [208]) = $4
	*($3 + [216]) = ($4 + [24])
	CALL $41(($3 + [208]), ($3 + [200]))
	$7 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	$10 = CALL db_store_i64(*((($3 + [56]) + [8])), (int_64)-5964828963577528320, $6, $7), ($3 + [16]), [32]
	*($4 + [36]) = $10)
	$9 = (($3 + [56]) + [16])
	if ( (uint_64)($7 <= *($9)) ){ goto $label$40 }
	*($9) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$40
	*($3 + [208]) = $4
	$7 = (uint_64)*(($4 + [8])) >> (uint_64)(int_64)8
	*($3 + [16]) = $7)
	*($3 + [240]) = $10
	$12 = ($3 + [84])
	$9 = *($12)
	if ( ((uint_32)$9 >= (uint_32)*((($3 + [56]) + [32]))) ){ goto $label$42 }
	*($9 + [8]) = $7
	*($9 + [16]) = $10
	*($3 + [208]) = [0]
	*($9) = $4
	*($12) = ($9 + [24])
	$4 = *($3 + [208])
	*($3 + [208]) = [0]
	if ( $4 ){ goto $label$41 }
	goto $label$24 
	
.LABEL $label$42
	CALL $42(($3 + [80]), ($3 + [208]), ($3 + [16]), ($3 + [240]))
	$4 = *($3 + [208])
	*($3 + [208]) = [0]
	if ( ($4 == 0) ){ goto $label$24 }
	
.LABEL $label$41
	CALL $9($4)
	$10 = *($3 + [80])
	if ( $10 ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$28
	CALL $43(($3 + [40]), ($3 + [240]), ($3 + [208]), ($3 + [200]))
	$4 = *($3 + [240])
	*($3 + [240]) = [0]
	if ( ($4 == 0) ){ goto $label$26 }
	
.LABEL $label$27
	CALL $9($4)
	
.LABEL $label$26
	$12 = *($3 + [40])
	if ( ($12 == 0) ){ goto $label$25 }
	$13 = ($3 + [44])
	$4 = *($13)
	if ( ((int_32)$4 == (int_32)$12) ){ goto $label$44 }
	
.LOOP $label$45:
	$4 = ($4 + [-24])
	$9 = *($4)
	*($4) = [0]
	if ( ($9 == 0) ){ goto $label$46 }
	CALL $9($9)
	
.LABEL $label$46
	if ( ((int_32)$12 != (int_32)$4) ){ goto $label$45 }
	$4 = *(($3 + [40]))
	goto $label$43 
	
.LABEL $label$44
	$4 = $12
	
.LABEL $label$43
	*($13) = $12
	CALL $9($4)
	
.LABEL $label$25
	$7 = *($0)
	*($3 + [16]) = $2
	*($3 + [20]) = ($3 + [192])
	CALL $44(($3 + [56]), $10, $7, ($3 + [16]))
	
.LABEL $label$24
	$10 = *($3 + [80])
	if ( ($10 == 0) ){ goto $label$22 }
	
.LABEL $label$23
	$12 = ($3 + [84])
	$4 = *($12)
	if ( ((int_32)$4 == (int_32)$10) ){ goto $label$48 }
	
.LOOP $label$49:
	$4 = ($4 + [-24])
	$9 = *($4)
	*($4) = [0]
	if ( ($9 == 0) ){ goto $label$50 }
	CALL $9($9)
	
.LABEL $label$50
	if ( ((int_32)$10 != (int_32)$4) ){ goto $label$49 }
	$4 = *(($3 + [80]))
	goto $label$47 
	
.LABEL $label$48
	$4 = $10
	
.LABEL $label$47
	*($12) = $10
	CALL $9($4)
	
.LABEL $label$22
	if ( ((int_64)*(($2 + [8])) == (int_64)*(($0 + [216]))) ){ goto $label$51 }
	CALL eosio_assert([0], [9375])
	
.LABEL $label$51
	$7 = ((int_64)*($0 + [208]) + (int_64)*($2))
	*($0 + [208]) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$52 }
	CALL eosio_assert([0], [9418])
	$7 = *(($0 + [208]))
	
.LABEL $label$52
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$53 }
	CALL eosio_assert([0], [9437])
	
.LABEL $label$53
	if ( ((int_64)*(($2 + [8])) == (int_64)*(($0 + [152]))) ){ goto $label$54 }
	CALL eosio_assert([0], [9375])
	
.LABEL $label$54
	$7 = ((int_64)*($4) + (int_64)*($2))
	*(($4 = ($0 + [144]))) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$61 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$60 }
	goto $label$59 
	
.LABEL $label$61
	CALL eosio_assert([0], [9418])
	if ( ((int_64)*($4) < (int_64)4611686018427387904) ){ goto $label$59 }
	
.LABEL $label$60
	CALL eosio_assert([0], [9437])
	$10 = *($3 + [120])
	if ( ($10 == 0) ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$59
	$10 = *($3 + [120])
	if ( $10 ){ goto $label$57 }
	
.LABEL $label$58
	$10 = *($3 + [176])
	if ( $10 ){ goto $label$56 }
	goto $label$55 
	
.LABEL $label$57
	$0 = ($3 + [124])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$10) ){ goto $label$62 }
	
.LOOP $label$63:
	$4 = ($4 + [-24])
	$9 = *($4)
	*($4) = [0]
	if ( ($9 == 0) ){ goto $label$64 }
	CALL $9($9)
	
.LABEL $label$64
	if ( ((int_32)$10 != (int_32)$4) ){ goto $label$63 }
	$4 = *(($3 + [120]))
	*($0) = $10
	CALL $9($4)
	$10 = *($3 + [176])
	if ( $10 ){ goto $label$56 }
	goto $label$55 
	
.LABEL $label$62
	*($0) = $10
	CALL $9($10)
	$10 = *($3 + [176])
	if ( ($10 == 0) ){ goto $label$55 }
	
.LABEL $label$56
	$0 = ($3 + [180])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$10) ){ goto $label$66 }
	
.LOOP $label$67:
	$4 = ($4 + [-24])
	$9 = *($4)
	*($4) = [0]
	if ( ($9 == 0) ){ goto $label$68 }
	CALL $9($9)
	
.LABEL $label$68
	if ( ((int_32)$10 != (int_32)$4) ){ goto $label$67 }
	$4 = *(($3 + [176]))
	goto $label$65 
	
.LABEL $label$66
	$4 = $10
	
.LABEL $label$65
	*($0) = $10
	CALL $9($4)
	$global$0 = ($3 + [256])
	return 
	
.LABEL $label$55
	$global$0 = ($3 + [256])
}

int_32 .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9929])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [24]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$8
	$8 = ($5 + [16])
	CALL memcpy(($3 + [24]), $7, [8])
	*(($5 + [8])) = *($3 + [24])
	$7 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$9 }
	CALL eosio_assert([0], [10336])
	
.LABEL $label$9
	CALL memcpy($8, $7, [8])
	*($5 + [28]) = $1
	*($3 + [16]) = $5
	$9 = (uint_64)*(($5 + [8])) >> (uint_64)(int_64)8
	*($3 + [24]) = $9)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$12 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $61(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $2($2)
	
.LABEL $label$10
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $9($1)
	
.LABEL $label$13
	$global$0 = ($3 + [32])
	return $5
}

int_32 .FUNC $129 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	*($0) = *($1)
	*(($0 + [8])) = *(($1 + [8]))
	*(($2 = ($0 + [20]))) = (int_64)0
	*($0 + [16]) = $2
	$4 = ($1 + [20])
	$3 = *($1 + [16])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	$5 = [0]
	$6 = ($0 + [20])
	$7 = ($3 + [16])
	if ( ((int_32)$2 != (int_32)$2) ){ goto $label$3 }
	$9 = [28]
	goto $label$1 
	
.LABEL $label$3
	$9 = [3]
	goto $label$1 
	
.LABEL $label$2
	$9 = [29]
	
.LABEL $label$1
	
.LOOP $label$4:
	goto $label$38 
	
.LABEL $label$65
	$5 = *($6)
	$3 = $8
	$7 = ($3 + [16])
	if ( ((int_32)*(($0 + [16])) == (int_32)$2) ){ goto $label$35 }
	$9 = [3]
	goto $label$4 
	
.LABEL $label$64
	$8 = $5
	$10 = $2
	if ( ($5 == 0) ){ goto $label$18 }
	$9 = [4]
	goto $label$4 
	
.LABEL $label$63
	$1 = $8
	$8 = *($1 + [4])
	if ( $8 ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$62
	$1 = *($10 + [8])
	$8 = ((int_32)*($1) == (int_32)$10)
	$10 = $1
	if ( $8 ){ goto $label$17 }
	$9 = [5]
	goto $label$4 
	
.LABEL $label$61
	$11 = *($7)
	if ( (uint_64)(*($1 + [16]) <= $11) ){ goto $label$34 }
	$9 = [6]
	goto $label$4 
	
.LABEL $label$60
	if ( ($5 == 0) ){ goto $label$16 }
	$9 = [7]
	goto $label$4 
	
.LABEL $label$59
	$8 = $2
	$12 = *($5 + [16])
	if ( ((uint_64)$11 >= (uint_64)$12) ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$58
	$8 = $5
	$5 = $1
	$12 = *($5 + [16])
	if ( ((uint_64)$11 >= (uint_64)$12) ){ goto $label$31 }
	$9 = [20]
	goto $label$4 
	
.LABEL $label$57
	$1 = *($5)
	if ( $1 ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$56
	if ( ((uint_64)$12 >= (uint_64)$11) ){ goto $label$13 }
	$9 = [17]
	goto $label$4 
	
.LABEL $label$55
	$8 = ($5 + [4])
	$1 = *($5 + [4])
	if ( ($1 == 0) ){ goto $label$8 }
	$9 = [18]
	goto $label$4 
	
.LABEL $label$54
	$5 = $8
	goto $label$30 
	
.LABEL $label$53
	$1 = $2
	$9 = [24]
	goto $label$4 
	
.LABEL $label$52
	if ( ($5 == 0) ){ goto $label$5 }
	$9 = [25]
	goto $label$4 
	
.LABEL $label$51
	$5 = ($1 + [4])
	if ( (*($5) == 0) ){ goto $label$10 }
	$9 = [10]
	goto $label$4 
	
.LABEL $label$50
	$1 = *($3 + [4])
	if ( $1 ){ goto $label$27 }
	$9 = [11]
	goto $label$4 
	
.LABEL $label$49
	$8 = *($3 + [8])
	if ( ((int_32)*($8) == (int_32)$3) ){ goto $label$24 }
	$9 = [12]
	goto $label$4 
	
.LABEL $label$48
	$10 = ($3 + [8])
	$9 = [13]
	goto $label$4 
	
.LABEL $label$47
	$1 = *($10)
	$10 = ($1 + [8])
	$8 = *($1 + [8])
	if ( ((int_32)$1 != (int_32)*($8)) ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$46
	$1 = $2
	$5 = $2
	if ( *($5) ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$45
	$5 = $2
	$1 = $2
	goto $label$33 
	
.LABEL $label$44
	$1 = $5
	goto $label$32 
	
.LABEL $label$43
	$1 = $5
	$5 = $8
	if ( *($5) ){ goto $label$28 }
	goto $label$29 
	
.LABEL $label$42
	$1 = $5
	$5 = $8
	$9 = [14]
	goto $label$4 
	
.LABEL $label$41
	*((($8 = CALL $7([56])) + [48])) = *(($7 + [32]))
	*(($8 + [40])) = *(($7 + [24]))
	*(($8 + [32])) = *(($7 + [16]))
	*(($8 + [24])) = *(($7 + [8]))
	*($8 + [16]) = *($7)
	*($8) = (int_64)0
	*($8 + [8]) = $1
	*($5) = $8
	$1 = ($0 + [16])
	$10 = *(*($1))
	if ( ($10 == 0) ){ goto $label$9 }
	$9 = [15]
	goto $label$4 
	
.LABEL $label$40
	*($1) = $10
	$8 = *($5)
	$9 = [16]
	goto $label$4 
	
.LABEL $label$39
	CALL $78(*($6), $8)
	*(($1 = ($0 + [24]))) = (*($1) + [1])
	$1 = *($3 + [4])
	if ( ($1 == 0) ){ goto $label$25 }
	$9 = [0]
	goto $label$4 
	
.LABEL $label$38
	$8 = $1
	$1 = *($8)
	if ( $1 ){ goto $label$26 }
	$9 = [1]
	goto $label$4 
	
.LABEL $label$37
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$21 }
	$9 = [29]
	goto $label$4 
	
.LABEL $label$36
	return $0
	
.LABEL $label$35
	$9 = [28]
	goto $label$4 
	
.LABEL $label$34
	$9 = [24]
	goto $label$4 
	
.LABEL $label$33
	$9 = [14]
	goto $label$4 
	
.LABEL $label$32
	$9 = [14]
	goto $label$4 
	
.LABEL $label$31
	$9 = [8]
	goto $label$4 
	
.LABEL $label$30
	$9 = [19]
	goto $label$4 
	
.LABEL $label$29
	$9 = [14]
	goto $label$4 
	
.LABEL $label$28
	$9 = [10]
	goto $label$4 
	
.LABEL $label$27
	$9 = [0]
	goto $label$4 
	
.LABEL $label$26
	$9 = [0]
	goto $label$4 
	
.LABEL $label$25
	$9 = [11]
	goto $label$4 
	
.LABEL $label$24
	$9 = [1]
	goto $label$4 
	
.LABEL $label$23
	$9 = [1]
	goto $label$4 
	
.LABEL $label$22
	$9 = [13]
	goto $label$4 
	
.LABEL $label$21
	$9 = [2]
	goto $label$4 
	
.LABEL $label$20
	$9 = [5]
	goto $label$4 
	
.LABEL $label$19
	$9 = [4]
	goto $label$4 
	
.LABEL $label$18
	$9 = [27]
	goto $label$4 
	
.LABEL $label$17
	$9 = [27]
	goto $label$4 
	
.LABEL $label$16
	$9 = [23]
	goto $label$4 
	
.LABEL $label$15
	$9 = [20]
	goto $label$4 
	
.LABEL $label$14
	$9 = [8]
	goto $label$4 
	
.LABEL $label$13
	$9 = [9]
	goto $label$4 
	
.LABEL $label$12
	$9 = [14]
	goto $label$4 
	
.LABEL $label$11
	$9 = [10]
	goto $label$4 
	
.LABEL $label$10
	$9 = [14]
	goto $label$4 
	
.LABEL $label$9
	$9 = [16]
	goto $label$4 
	
.LABEL $label$8
	$9 = [22]
	goto $label$4 
	
.LABEL $label$7
	$9 = [21]
	goto $label$4 
	
.LABEL $label$6
	$9 = [19]
	goto $label$4 
	
.LABEL $label$5
	$9 = [26]
	goto $label$4 
	return $9
}

int_32 .FUNC $127 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9703])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9703])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}