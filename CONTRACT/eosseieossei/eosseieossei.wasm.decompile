(data (i32.const 8220) "failed to allocate pages\00\00\01\02\04\07\03\06\05\00onerror\00")
(data (i32.const 8272) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\01\02\03\04\05\06\07\08\t\ff\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
(data (i32.const 8544) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA")
(data (i32.const 8624) "stoi\00eosio\00")
(data (i32.const 8635) ": no conversion\00cannot pass end iterator to modify\00")
(data (i32.const 8686) ": out of range\00object passed to modify is not in multi_index\00")
(data (i32.const 8752) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00\f8?")
(data (i32.const 8768) "\00\00\00\00\00\00\00\00\06\d0\cfC\eb\fdL>")
(data (i32.const 8784) "\00\00\00\00\00\00\00\00\00\00\00@\03\b8\e2?")
(data (i32.const 8800) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 8864) "transfer\00")
(data (i32.const 8873) "invalid attempt\00")
(data (i32.const 8889) "string is too long to be a valid name\00")
(data (i32.const 8927) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 8994) "character is not in allowed character set for names\00")
(data (i32.const 9046) "to account does not exist\00")
(data (i32.const 9072) "not valid symbol\00")
(data (i32.const 9089) "order Id does not exist\00")
(data (i32.const 9113) "not authorized order\00")
(data (i32.const 9134) "EOS\00")
(data (i32.const 9138) "eosio.token\00")
(data (i32.const 9150) "cancel\00")
(data (i32.const 9157) "called getConfigId\n\00")
(data (i32.const 9177) "string is too long to be a valid symbol_code\00")
(data (i32.const 9222) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 9275) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 9326) "error reading iterator\00")
(data (i32.const 9349) "read\00")
(data (i32.const 9354) "cannot increment end iterator\00")
(data (i32.const 9384) "cannot decrement end iterator when the index is empty\00")
(data (i32.const 9438) "cannot decrement iterator at beginning of index\00")
(data (i32.const 9486) "cannot modify objects in table of another contract\00")
(data (i32.const 9537) "updater cannot change primary key when modifying an object\00")
(data (i32.const 9596) "write\00")
(data (i32.const 9604) "\88%\00\00")
(data (i32.const 9608) "0123456789\00")
(data (i32.const 9619) "cannot pass end iterator to erase\00")
(data (i32.const 9653) "object passed to erase is not in multi_index\00")
(data (i32.const 9698) "cannot erase objects in table of another contract\00")
(data (i32.const 9748) "attempt to remove object that was not in multi_index\00")
(data (i32.const 9801) "eosdaqmanage\00")
(data (i32.const 9814) "invalid authority\00")
(data (i32.const 9832) "invalid account\00")
(data (i32.const 9848) "cannot create objects in table of another contract\00")
(data (i32.const 9899) "next primary key in table is at autoincrement limit\00")
(data (i32.const 9951) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 10005) "cannot decrement iterator at beginning of table\00")
(data (i32.const 10053) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 10102) "invalid symbol name\00")
(data (i32.const 10122) "wrong symbol\00")
(data (i32.const 10135) "withdraw fee\00")
(data (i32.const 10148) "refund\00")
(data (i32.const 10155) ",\00")
(data (i32.const 10157) ":\00")
(data (i32.const 10159) ".\00")
(data (i32.const 10161) "type\00")
(data (i32.const 10166) "invalid key-type\00")
(data (i32.const 10183) "pair\00")
(data (i32.const 10188) "invalid key-pair\00")
(data (i32.const 10205) "price\00")
(data (i32.const 10211) "invalid key-price\00")
(data (i32.const 10229) "ref\00")
(data (i32.const 10233) "invalid key-ref\00")
(data (i32.const 10249) "origin\00")
(data (i32.const 10256) "invalid key-origin\00")
(data (i32.const 10275) "order\00")
(data (i32.const 10281) "fill\00")
(data (i32.const 10286) "invalid value-type\00")
(data (i32.const 10305) "invalid value-pair\00")
(data (i32.const 10324) "invalid token account\00")
(data (i32.const 10346) "no dot in price\00")
(data (i32.const 10362) "invalid precision length\00")
(data (i32.const 10387) "invalid numbers in integer part in price\00")
(data (i32.const 10428) "invalid price precision\00")
(data (i32.const 10452) "invalid value-origin\00")
(data (i32.const 10473) "Market is in maintenance.\00")
(data (i32.const 10499) "Blacklisted user\00")
(data (i32.const 10516) "invalid quantity\00")
(data (i32.const 10533) "after\n\00")
(data (i32.const 10540) "before1\n\00")
(data (i32.const 10549) "matched_quote: \00")
(data (i32.const 10565) "\n\00")
(data (i32.const 10567) "ask_itr->quantity: \00")
(data (i32.const 10587) "match_m\00")
(data (i32.const 10595) "endendendendendendendendendendend\n\00")
(data (i32.const 10630) "attempt to add asset with different symbol\00")
(data (i32.const 10673) "addition underflow\00")
(data (i32.const 10692) "addition overflow\00")
(data (i32.const 10710) "multiplication overflow\00")
(data (i32.const 10734) "multiplication underflow\00")
(data (i32.const 10759) "divide by zero\00")
(data (i32.const 10774) "signed division overflow\00")
(data (i32.const 10799) "attempt to subtract asset with different symbol\00")
(data (i32.const 10847) "subtraction underflow\00")
(data (i32.const 10869) "subtraction overflow\00")
(data (i32.const 10890) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 10949) "%lld%s%s %s\00")
(data (i32.const 10962) "PRICE\00")
(data (i32.const 10968) "match_t\00")
(data (i32.const 10976) "{ \"type\": \"\00")
(data (i32.const 10988) "\", \"pair\": \"\00")
(data (i32.const 11001) "\", \"price\": \"\00")
(data (i32.const 11015) "\", \"lastprice\": \"\00")
(data (i32.const 11033) "\" }\00")
(data (i32.const 11037) "\", \"ref\": \"\00")
(data (i32.const 11049) "get\00")
(data (i32.const 0) "0+\00\00")
(import "env" "eosio_assert" (func $fimport$0 (param i32 i32)))
(import "env" "memset" (func $fimport$1 (param i32 i32 i32) (result i32)))
(import "env" "action_data_size" (func $fimport$2 (result i32)))
(import "env" "read_action_data" (func $fimport$3 (param i32 i32) (result i32)))
(import "env" "abort" (func $fimport$4))
(import "env" "require_auth" (func $fimport$5 (param i64)))
(import "env" "is_account" (func $fimport$6 (param i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$7 (param i64 i64 i64 i64) (result i32)))
(import "env" "memcpy" (func $fimport$8 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$9 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$10 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$11 (param i32 i32)))
(import "env" "__multf3" (func $fimport$12 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$13 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$14 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$15 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$16 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$17 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$18 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$19 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$20 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$21 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$22 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$23 (param i64 i64) (result f32)))
(import "env" "prints_l" (func $fimport$24 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$25 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$26 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$27 (param i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$28 (param i32 i32) (result i32)))
(import "env" "eosio_assert_code" (func $fimport$29 (param i32 i64)))
(import "env" "prints" (func $fimport$30 (param i32)))
(import "env" "db_idx64_find_primary" (func $fimport$31 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_next" (func $fimport$32 (param i32 i32) (result i32)))
(import "env" "db_idx64_previous" (func $fimport$33 (param i32 i32) (result i32)))
(import "env" "db_idx64_end" (func $fimport$34 (param i64 i64 i64) (result i32)))
(import "env" "send_inline" (func $fimport$35 (param i32 i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$36 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_get_i64" (func $fimport$37 (param i32 i32 i32) (result i32)))
(import "env" "current_receiver" (func $fimport$38 (result i64)))
(import "env" "db_update_i64" (func $fimport$39 (param i32 i64 i32 i32)))
(import "env" "db_remove_i64" (func $fimport$40 (param i32)))
(import "env" "db_idx64_remove" (func $fimport$41 (param i32)))
(import "env" "db_store_i64" (func $fimport$42 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_store" (func $fimport$43 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx64_update" (func $fimport$44 (param i32 i64 i32)))
(import "env" "db_lowerbound_i64" (func $fimport$45 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_previous_i64" (func $fimport$46 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$47 (param i64 i64 i64) (result i32)))
(import "env" "__lttf2" (func $fimport$48 (param i64 i64 i64 i64) (result i32)))
(import "env" "__multi3" (func $fimport$49 (param i32 i64 i64 i64 i64)))
(import "env" "publication_time" (func $fimport$50 (result i64)))
(export "apply" (func $49))
(table $0 15 15 anyfunc)
(elem (i32.const 1) $27 $29 $51 $53 $55 $57 $59 $61 $63 $65 $67 $68 $69 $70)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 11053))
(global $global$2 i32 (i32.const 11053))


void .FUNC $174 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [68]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8701])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9486])
	
.LABEL $label$2
	*($5 + [24]) = *($1 + [24])
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [40]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10799])
	
.LABEL $label$3
	$7 = (int_64)
	*($1 + [32]) = $7(*($1 + [32]) - *($3)))
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [10847])
	if ( ((int_64)*(($1 + [32])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [10869])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [9537])
	
.LABEL $label$4
	$3 = *($1 + [56])
	$8 = ( *(($1 + [60])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($8 + [49])
	$7 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$9:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$9 }
	if ( ($3 <= [513]) ){ goto $label$11 }
	$4 = CALL $2($3)
	goto $label$10 
	
.LABEL $label$11
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$10
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	CALL $184(($5 + [8]), $1)
	CALL db_update_i64(*($1 + [72]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$12 }
	CALL $3($4)
	
.LABEL $label$12
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	*($5 + [40]) = *(($1 + [24]))
	if ( (CALL $17(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$14 }
	$3 = *($1 + [76])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$15 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4149657304265580544, ($5 + [32]), $6)
	*(($1 + [76])) = $3
	
.LABEL $label$15
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$14
	$global$0 = ($5 + [48])
}

int_32 .FUNC $6 ()
{
	return [8208]
}

void .FUNC $176 (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_32 $4, int_32 $5, int_64 $6)
{
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_64 $17
	$7 = ($global$0 - [336])
	$global$0 = $7
	$8 = *($2)
	if ( ((uint_64)((int_64)$8 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$2 }
	$9 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$11 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$9 = $11
	$12 = $10
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$9 = $11
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$12 = ((int_32)$10 < (int_32)[6])
	$13 = ($10 + [1])
	$10 = $13
	if ( $12 ){ goto $label$5 }
	$10 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [10516])
	
.LABEL $label$1
	$14 = ($0 + [152])
	$12 = *(($0 + [180]))
	$13 = *(($0 + [176]))
	if ( ((int_32)$13 == (int_32)$12) ){ goto $label$7 }
	
.LOOP $label$9:
	$10 = ($12 + [-24])
	$15 = *($10)
	if ( ((int_64)*($15) == (int_64)$6) ){ goto $label$8 }
	$12 = $10
	if ( ((int_32)$13 != (int_32)$10) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$13 == (int_32)$12) ){ goto $label$7 }
	if ( ((int_32)*(($15 + [76])) == (int_32)$14) ){ goto $label$6 }
	CALL eosio_assert([0], [9275])
	goto $label$6 
	
.LABEL $label$7
	$15 = [0]
	$10 = CALL db_find_i64(*($14), *(($0 + [160])), (int_64)-4156459970285535232, $6)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$6 }
	$15 = CALL $76($14, $10)
	if ( ((int_32)*($15 + [76]) == (int_32)$14) ){ goto $label$6 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$6
	$16 = ((int_64)*($0 + [240]) / (int_64)$8)
	$10 = CALL $1([10962])
	if ( ($10 <= [8]) ){ goto $label$13 }
	CALL eosio_assert([0], [9177])
	goto $label$12 
	
.LABEL $label$13
	if ( ($10 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$9 = (int_64)0
	
.LOOP $label$14:
	$12 = *(($10 + [10961]))
	if ( ((($12 + [-65]) & [255]) <= [26]) ){ goto $label$15 }
	CALL eosio_assert([0], [9222])
	
.LABEL $label$15
	$9 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56))
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$14 }
	$9 = ((int_64)$9 & (int_64)72057594037927935)
	goto $label$10 
	
.LABEL $label$11
	$9 = (int_64)0
	
.LABEL $label$10
	if ( (uint_64)(((int_64)$16 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$16 }
	CALL eosio_assert([0], [10053])
	
.LABEL $label$16
	$10 = [0]
	
.LOOP $label$19:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$11 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$20 }
	$9 = $11
	$12 = $10
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$20
	$9 = $11
	
.LOOP $label$21:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$18 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$12 = ((int_32)$10 < (int_32)[6])
	$13 = ($10 + [1])
	$10 = $13
	if ( $12 ){ goto $label$21 }
	$10 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	CALL eosio_assert([0], [10102])
	
.LABEL $label$17
	$10 = CALL $1([9134])
	if ( ($10 <= [8]) ){ goto $label$25 }
	CALL eosio_assert([0], [9177])
	goto $label$24 
	
.LABEL $label$25
	if ( ($10 == 0) ){ goto $label$23 }
	
.LABEL $label$24
	$9 = (int_64)0
	
.LOOP $label$26:
	$12 = *(($10 + [9133]))
	if ( ((($12 + [-65]) & [255]) <= [26]) ){ goto $label$27 }
	CALL eosio_assert([0], [9222])
	
.LABEL $label$27
	$9 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56))
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$26 }
	$11 = ((int_64)$9 << (int_64)8)
	goto $label$22 
	
.LABEL $label$23
	$11 = (int_64)0
	
.LABEL $label$22
	$9 = (uint_64)$11 >> (uint_64)(int_64)8)
	$17 = ((int_64)$11 | (int_64)4)
	$10 = [0]
	
.LOOP $label$31:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$30 }
	$11 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$33 }
	$9 = $11
	$12 = $10
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$31 }
	goto $label$32 
	
.LABEL $label$33
	$9 = $11
	
.LOOP $label$34:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$30 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$12 = ((int_32)$10 < (int_32)[6])
	$13 = ($10 + [1])
	$10 = $13
	if ( $12 ){ goto $label$34 }
	$10 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$31 }
	
.LABEL $label$32
	$11 = *($2 + [8])
	if ( ((int_64)$11 == (int_64)$17) ){ goto $label$28 }
	goto $label$29 
	
.LABEL $label$30
	CALL eosio_assert([0], [10102])
	$11 = *($2 + [8])
	if ( ((int_64)$11 == (int_64)$17) ){ goto $label$28 }
	
.LABEL $label$29
	CALL eosio_assert([0], [10890])
	
.LABEL $label$28
	if ( ((int_64)$8 < (int_64)1000) ){ goto $label$35 }
	$9 = (int_64)
	CALL __multi3(($7 + [8]), $9((int_64)1000 - *($15 + [56]))), (int_64)$9 >> (int_64)63), $8, (int_64)$8 >> (int_64)63))
	$9 = *(($7 + [16]))
	$8 = *($7 + [8])
	if ( (( (uint_64)($8 <= (int_64)4611686018427387904) ? ((int_64)$9 < (int_64)0) : (int_64)($9 == 0) ) == 0) ){ goto $label$37 }
	if ( ( ((uint_64)$8 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$9 > (int_64)-1) : ((int_64)$9 == (int_64)-1) ) ){ goto $label$36 }
	CALL eosio_assert([0], [10734])
	goto $label$36 
	
.LABEL $label$37
	CALL eosio_assert([0], [10710])
	
.LABEL $label$36
	$9 = *(($2 + [8]))
	*((($7 + [216]) + [8])) = $9
	*($7 + [216]) = *($2)
	$8 = ((int_64)$8 / (int_64)1000)
	if ( ((int_64)$11 == (int_64)$9) ){ goto $label$38 }
	CALL eosio_assert([0], [10799])
	
.LABEL $label$38
	$9 = (int_64)
	*($7 + [216]) = $9(*($7 + [216]) - $8))
	if ( ((int_64)$9 <= (int_64)-4611686018427387904) ){ goto $label$41 }
	if ( ((int_64)$9 >= (int_64)4611686018427387904) ){ goto $label$40 }
	if ( ((int_64)($9 == 0) == 0) ){ goto $label$39 }
	goto $label$35 
	
.LABEL $label$41
	CALL eosio_assert([0], [10847])
	goto $label$39 
	
.LABEL $label$40
	CALL eosio_assert([0], [10869])
	
.LABEL $label$39
	$9 = CALL $96($0, $5, $6)
	$14 = ($0 + [112])
	$12 = *(($0 + [140]))
	$2 = *(($0 + [136]))
	if ( ((int_32)$2 == (int_32)$12) ){ goto $label$43 }
	
.LOOP $label$45:
	$10 = ($12 + [-24])
	$13 = *($10)
	if ( ((int_64)*($13) == (int_64)$9) ){ goto $label$44 }
	$12 = $10
	if ( ((int_32)$2 != (int_32)$10) ){ goto $label$45 }
	goto $label$43 
	
.LABEL $label$44
	if ( ((int_32)$2 == (int_32)$12) ){ goto $label$43 }
	if ( ((int_32)*($13 + [80]) == (int_32)$14) ){ goto $label$42 }
	CALL eosio_assert([0], [9275])
	goto $label$42 
	
.LABEL $label$43
	$10 = CALL db_find_i64(*($14), *(($0 + [120])), (int_64)-4154952186784120832, $9)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$35 }
	$13 = CALL $97($14, $10)
	if ( ((int_32)*($13 + [80]) == (int_32)$14) ){ goto $label$42 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$42
	*((($7 + [296]) + [8])) = *((($7 + [216]) + [8]))
	*($7 + [296]) = *($7 + [216])
	$17 = *($13 + [40])
	if ( ((int_64)$17 == (int_64)0) ){ goto $label$47 }
	$9 = *($7 + [296])
	if ( ((int_64)$17 != (int_64)-1) ){ goto $label$46 }
	if ( ((int_64)$9 != (int_64)-9223372036854775808) ){ goto $label$46 }
	CALL eosio_assert([0], [10774])
	$9 = (int_64)-9223372036854775808
	goto $label$46 
	
.LABEL $label$47
	CALL eosio_assert([0], [10759])
	$9 = *($7 + [296])
	
.LABEL $label$46
	*($7 + [296]) = ((int_64)$9 / (int_64)$17)
	$9 = *($0)
	*($7 + [280]) = ($7 + [296])
	CALL $188($14, $13, $9, ($7 + [280]))
	$12 = *(($0 + [140]))
	$2 = *(($0 + [136]))
	if ( ((int_32)$2 == (int_32)$12) ){ goto $label$49 }
	
.LOOP $label$51:
	$10 = ($12 + [-24])
	$13 = *($10)
	if ( (int_64)(*($13) == 0) ){ goto $label$50 }
	$12 = $10
	if ( ((int_32)$2 != (int_32)$10) ){ goto $label$51 }
	goto $label$49 
	
.LABEL $label$50
	if ( ((int_32)$2 == (int_32)$12) ){ goto $label$49 }
	if ( ((int_32)*($13 + [80]) == (int_32)$14) ){ goto $label$48 }
	CALL eosio_assert([0], [9275])
	goto $label$48 
	
.LABEL $label$49
	$13 = [0]
	$10 = CALL db_find_i64(*(($0 + [112])), *(($0 + [120])), (int_64)-4154952186784120832, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$48 }
	$13 = CALL $97($14, $10)
	if ( ((int_32)*($13 + [80]) == (int_32)$14) ){ goto $label$48 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$48
	$9 = CALL $96($0, ($13 + [48]), $6)
	$12 = *(($0 + [140]))
	$2 = *(($0 + [136]))
	if ( ((int_32)$2 == (int_32)$12) ){ goto $label$53 }
	
.LOOP $label$55:
	$10 = ($12 + [-24])
	$13 = *($10)
	if ( ((int_64)*($13) == (int_64)$9) ){ goto $label$54 }
	$12 = $10
	if ( ((int_32)$2 != (int_32)$10) ){ goto $label$55 }
	goto $label$53 
	
.LABEL $label$54
	if ( ((int_32)$2 == (int_32)$12) ){ goto $label$53 }
	if ( ((int_32)*($13 + [80]) == (int_32)$14) ){ goto $label$52 }
	CALL eosio_assert([0], [9275])
	goto $label$52 
	
.LABEL $label$53
	$13 = [0]
	$10 = CALL db_find_i64(*(($0 + [112])), *(($0 + [120])), (int_64)-4154952186784120832, $9)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$52 }
	$13 = CALL $97($14, $10)
	if ( ((int_32)*($13 + [80]) == (int_32)$14) ){ goto $label$52 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$52
	$9 = *($0)
	*($7 + [284]) = ($7 + [296])
	*($7 + [280]) = ($7 + [216])
	if ( $13 ){ goto $label$56 }
	CALL eosio_assert([0], [8651])
	
.LABEL $label$56
	CALL $189($14, $13, $9, ($7 + [280]))
	
.LABEL $label$35
	if ( (int_64)($8 == 0) ){ goto $label$57 }
	*($7 + [288]) = (int_64)3617214756542218240
	*($7 + [280]) = *($0)
	*($7 + [264]) = [9138]
	*($7 + [268]) = CALL $1([9138])
	*($7) = *($7 + [264])
	$2 = CALL $50(($7 + [272]), $7)
	$6 = *($0)
	CALL $83(($7 + [72]), ($0 + [264]), [10968])
	$10 = *($0 + [276])
	$12 = ($10 & [1])
	$10 = CALL $37(($7 + [72]), ( *(($0 + [284])) ? ($0 + [277]) : $12 ), ( *(($0 + [280])) ? uint_32($10 >> [1]) : $12 ))
	$13 = ($10 + [8])
	*((($7 + [88]) + [8])) = *($13)
	*($7 + [88]) = *($10)
	*($10) = (int_64)0
	$12 = [0]
	*($13) = [0]
	$9 = (uint_64)*($15 + [32]) >> (uint_64)(int_64)8
	if ( (int_64)($9) == 0) ){ goto $label$61 }
	
.LOOP $label$63:
	*((($7 + [216]) + ($10 = $12))) = $9
	$12 = ($10 + [1])
	if ( ((uint_32)$10 > (uint_32)[5]) ){ goto $label$62 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$63 }
	
.LABEL $label$62
	*(($7 + [64])) = [0]
	*($7 + [56]) = (int_64)0
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$60 }
	*($7 + [56]) = ($12 << [1])
	$13 = (($7 + [56]) | [1])
	goto $label$59 
	
.LABEL $label$61
	*((($7 + [56]) + [8])) = [0]
	*($7 + [56]) = (int_64)0
	*($7 + [56]) = [0]
	$13 = (($7 + [56]) | [1])
	$10 = $13
	goto $label$58 
	
.LABEL $label$60
	$15 = (($12 + [16]) & [-16])
	$13 = CALL $9($15)
	*($7 + [56]) = ($15 | [1])
	*($7 + [64]) = $13
	*($7 + [60]) = $12
	
.LABEL $label$59
	$15 = ($10 + [1])
	$10 = [0]
	
.LOOP $label$64:
	*(($13 + $10)) = *((($7 + [216]) + $10))
	$10 = ($10 + [1])
	if ( ((int_32)$15 != (int_32)$10) ){ goto $label$64 }
	$10 = ($13 + $12)
	$13 = (($7 + [56]) | [1])
	
.LABEL $label$58
	*($10) = [0]
	$10 = *($7 + [56])
	$12 = ($10 & [1])
	$10 = CALL $37(($7 + [88]), ( *($7 + [64]) ? $13 : $12 ), ( *($7 + [60]) ? uint_32($10 >> [1]) : $12 ))
	$12 = ($10 + [8])
	*((($7 + [104]) + [8])) = *($12)
	*($7 + [104]) = *($10)
	*($10) = (int_64)0
	*($12) = [0]
	$10 = *($0 + [288])
	$12 = ($10 & [1])
	$10 = CALL $37(($7 + [104]), ( *(($0 + [296])) ? ($0 + [289]) : $12 ), ( *(($0 + [292])) ? uint_32($10 >> [1]) : $12 ))
	$12 = ($10 + [8])
	*((($7 + [120]) + [8])) = *($12)
	*($7 + [120]) = *($10)
	*($10) = (int_64)0
	*($12) = [0]
	CALL $84(($7 + [40]), $0, $16, [8])
	$10 = *($7 + [40])
	$12 = ($10 & [1])
	$10 = CALL $37(($7 + [120]), ( *($7 + [48]) ? (($7 + [40]) | [1]) : $12 ), ( *($7 + [44]) ? uint_32($10 >> [1]) : $12 ))
	$12 = ($10 + [8])
	*((($7 + [136]) + [8])) = *($12)
	*($7 + [136]) = *($10)
	*($10) = (int_64)0
	*($12) = [0]
	$10 = *($0 + [300])
	$12 = ($10 & [1])
	$10 = CALL $37(($7 + [136]), ( *(($0 + [308])) ? ($0 + [301]) : $12 ), ( *(($0 + [304])) ? uint_32($10 >> [1]) : $12 ))
	$12 = ($10 + [8])
	*((($7 + [152]) + [8])) = *($12)
	*($7 + [152]) = *($10)
	*($10) = (int_64)0
	*($12) = [0]
	CALL $84(($7 + [24]), $0, $3, [8])
	$10 = *($7 + [24])
	$12 = ($10 & [1])
	$10 = CALL $37(($7 + [152]), ( *($7 + [32]) ? (($7 + [24]) | [1]) : $12 ), ( *($7 + [28]) ? uint_32($10 >> [1]) : $12 ))
	$12 = ($10 + [8])
	*((($7 + [168]) + [8])) = *($12)
	*($7 + [168]) = *($10)
	*($10) = (int_64)0
	*($12) = [0]
	$10 = *($0 + [324])
	$12 = ($10 & [1])
	$10 = CALL $37(($7 + [168]), ( *(($0 + [332])) ? ($0 + [325]) : $12 ), ( *(($0 + [328])) ? uint_32($10 >> [1]) : $12 ))
	$12 = ($10 + [8])
	*((($7 + [184]) + [8])) = *($12)
	*($7 + [184]) = *($10)
	*($10) = (int_64)0
	*($12) = [0]
	$10 = *($4)
	$12 = ($10 & [1])
	$10 = CALL $37(($7 + [184]), ( *($4 + [8]) ? ($4 + [1]) : $12 ), ( *($4 + [4]) ? uint_32($10 >> [1]) : $12 ))
	$12 = ($10 + [8])
	*((($7 + [200]) + [8])) = *($12)
	*($7 + [200]) = *($10)
	*($10) = (int_64)0
	*($12) = [0]
	$10 = *($0 + [312])
	$12 = ($10 & [1])
	$10 = CALL $37(($7 + [200]), ( *(($0 + [320])) ? ($0 + [313]) : $12 ), ( *(($0 + [316])) ? uint_32($10 >> [1]) : $12 ))
	$12 = *($10 + [8])
	*($10 + [8]) = [0]
	$9 = *($10)
	*($10) = (int_64)0
	*(($7 + [240])) = $11
	*(($7 + [256])) = $12
	*($7 + [224]) = $1
	*($7 + [216]) = $6
	*($7 + [232]) = $8
	*($7 + [248]) = $9
	$10 = CALL $85(($7 + [296]), ($7 + [280]), *($2), (int_64)-3617168760277827584, ($7 + [216]))
	CALL $86($10)
	$12 = *($10 + [28])
	if ( ($12 == 0) ){ goto $label$65 }
	*(($10 + [32])) = $12
	CALL $11($12)
	
.LABEL $label$65
	$12 = *($10 + [16])
	if ( ($12 == 0) ){ goto $label$66 }
	*(($10 + [20])) = $12
	CALL $11($12)
	
.LABEL $label$66
	if ( (*($7 + [248]) & [1]) ){ goto $label$90 }
	if ( (*($7 + [200]) & [1]) ){ goto $label$89 }
	goto $label$88 
	
.LABEL $label$90
	CALL $11(*(($7 + [256])))
	if ( ((*($7 + [200]) & [1]) == 0) ){ goto $label$88 }
	
.LABEL $label$89
	CALL $11(*($7 + [208]))
	$10 = [1]
	if ( ((*($7 + [184]) & [1]) == 0) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$88
	$10 = [1]
	if ( (*($7 + [184]) & [1]) ){ goto $label$86 }
	
.LABEL $label$87
	if ( (*($7 + [168]) & $10) ){ goto $label$85 }
	goto $label$84 
	
.LABEL $label$86
	CALL $11(*($7 + [192]))
	if ( ((*($7 + [168]) & $10) == 0) ){ goto $label$84 }
	
.LABEL $label$85
	CALL $11(*($7 + [176]))
	$10 = [1]
	if ( ((*($7 + [24]) & [1]) == 0) ){ goto $label$83 }
	goto $label$82 
	
.LABEL $label$84
	$10 = [1]
	if ( (*($7 + [24]) & [1]) ){ goto $label$82 }
	
.LABEL $label$83
	if ( (*($7 + [152]) & $10) ){ goto $label$81 }
	goto $label$80 
	
.LABEL $label$82
	CALL $11(*(($7 + [32])))
	if ( ((*($7 + [152]) & $10) == 0) ){ goto $label$80 }
	
.LABEL $label$81
	CALL $11(*($7 + [160]))
	$10 = [1]
	if ( ((*($7 + [136]) & [1]) == 0) ){ goto $label$79 }
	goto $label$78 
	
.LABEL $label$80
	$10 = [1]
	if ( (*($7 + [136]) & [1]) ){ goto $label$78 }
	
.LABEL $label$79
	if ( (*($7 + [40]) & $10) ){ goto $label$77 }
	goto $label$76 
	
.LABEL $label$78
	CALL $11(*($7 + [144]))
	if ( ((*($7 + [40]) & $10) == 0) ){ goto $label$76 }
	
.LABEL $label$77
	CALL $11(*(($7 + [48])))
	$10 = [1]
	if ( ((*($7 + [120]) & [1]) == 0) ){ goto $label$75 }
	goto $label$74 
	
.LABEL $label$76
	$10 = [1]
	if ( (*($7 + [120]) & [1]) ){ goto $label$74 }
	
.LABEL $label$75
	if ( (*($7 + [104]) & $10) ){ goto $label$73 }
	goto $label$72 
	
.LABEL $label$74
	CALL $11(*($7 + [128]))
	if ( ((*($7 + [104]) & $10) == 0) ){ goto $label$72 }
	
.LABEL $label$73
	CALL $11(*($7 + [112]))
	$10 = [1]
	if ( ((*($7 + [56]) & [1]) == 0) ){ goto $label$71 }
	goto $label$70 
	
.LABEL $label$72
	$10 = [1]
	if ( (*($7 + [56]) & [1]) ){ goto $label$70 }
	
.LABEL $label$71
	if ( (*($7 + [88]) & $10) ){ goto $label$69 }
	goto $label$68 
	
.LABEL $label$70
	CALL $11(*(($7 + [64])))
	if ( ((*($7 + [88]) & $10) == 0) ){ goto $label$68 }
	
.LABEL $label$69
	CALL $11(*($7 + [96]))
	if ( (*($7 + [72]) & [1]) ){ goto $label$67 }
	goto $label$57 
	
.LABEL $label$68
	if ( ((*($7 + [72]) & [1]) == 0) ){ goto $label$57 }
	
.LABEL $label$67
	CALL $11(*($7 + [80]))
	
.LABEL $label$57
	$10 = CALL $1([9134])
	if ( ($10 <= [8]) ){ goto $label$94 }
	CALL eosio_assert([0], [9177])
	goto $label$93 
	
.LABEL $label$94
	if ( ($10 == 0) ){ goto $label$92 }
	
.LABEL $label$93
	$9 = (int_64)0
	
.LOOP $label$95:
	$12 = *(($10 + [9133]))
	if ( ((($12 + [-65]) & [255]) <= [26]) ){ goto $label$96 }
	CALL eosio_assert([0], [9222])
	
.LABEL $label$96
	$9 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56))
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$95 }
	$11 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)4)
	goto $label$91 
	
.LABEL $label$92
	$11 = (int_64)4
	
.LABEL $label$91
	$9 = (uint_64)$11 >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$99:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$98 }
	$6 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$100 }
	$9 = $6
	$12 = $10
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$99 }
	goto $label$97 
	
.LABEL $label$100
	$9 = $6
	
.LOOP $label$101:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$98 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$12 = ((int_32)$10 < (int_32)[6])
	$13 = ($10 + [1])
	$10 = $13
	if ( $12 ){ goto $label$101 }
	$10 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$99 }
	goto $label$97 
	
.LABEL $label$98
	CALL eosio_assert([0], [10102])
	
.LABEL $label$97
	*($0 + [208]) = (int_64)0
	*(($0 + [216])) = $11
	$global$0 = ($7 + [336])
}

void .FUNC $177 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9848])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $9([80])) + [32]) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [40]) = (int_64)0
	*($3 + [56 align=4]) = (int_64)0
	*($3 + [64]) = [0]
	*($3 + [68]) = $1
	CALL $187(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [72])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $139(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($3 + [64])))
	
.LABEL $label$5
	CALL $11($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $170 (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_32 $4, int_32 $5, int_64 $6)
{
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_64 $17
	$7 = ($global$0 - [320])
	$global$0 = $7
	$8 = *($2)
	if ( ((uint_64)((int_64)$8 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$2 }
	$9 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$11 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$9 = $11
	$12 = $10
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$9 = $11
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$12 = ((int_32)$10 < (int_32)[6])
	$13 = ($10 + [1])
	$10 = $13
	if ( $12 ){ goto $label$5 }
	$10 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [10516])
	
.LABEL $label$1
	$14 = ($0 + [152])
	$12 = *(($0 + [180]))
	$13 = *(($0 + [176]))
	if ( ((int_32)$13 == (int_32)$12) ){ goto $label$7 }
	
.LOOP $label$9:
	$10 = ($12 + [-24])
	$15 = *($10)
	if ( ((int_64)*($15) == (int_64)$6) ){ goto $label$8 }
	$12 = $10
	if ( ((int_32)$13 != (int_32)$10) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$13 == (int_32)$12) ){ goto $label$7 }
	if ( ((int_32)*(($15 + [76])) == (int_32)$14) ){ goto $label$6 }
	CALL eosio_assert([0], [9275])
	goto $label$6 
	
.LABEL $label$7
	$15 = [0]
	$10 = CALL db_find_i64(*($14), *(($0 + [160])), (int_64)-4156459970285535232, $6)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$6 }
	$15 = CALL $76($14, $10)
	if ( ((int_32)*($15 + [76]) == (int_32)$14) ){ goto $label$6 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$6
	$16 = ((int_64)*($0 + [224]) / (int_64)$8)
	$10 = CALL $1([10962])
	if ( ($10 <= [8]) ){ goto $label$13 }
	CALL eosio_assert([0], [9177])
	goto $label$12 
	
.LABEL $label$13
	if ( ($10 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$9 = (int_64)0
	
.LOOP $label$14:
	$12 = *(($10 + [10961]))
	if ( ((($12 + [-65]) & [255]) <= [26]) ){ goto $label$15 }
	CALL eosio_assert([0], [9222])
	
.LABEL $label$15
	$9 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56))
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$14 }
	$9 = ((int_64)$9 & (int_64)72057594037927935)
	goto $label$10 
	
.LABEL $label$11
	$9 = (int_64)0
	
.LABEL $label$10
	if ( (uint_64)(((int_64)$16 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$16 }
	CALL eosio_assert([0], [10053])
	
.LABEL $label$16
	$10 = [0]
	
.LOOP $label$19:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$11 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$20 }
	$9 = $11
	$12 = $10
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$20
	$9 = $11
	
.LOOP $label$21:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$18 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$12 = ((int_32)$10 < (int_32)[6])
	$13 = ($10 + [1])
	$10 = $13
	if ( $12 ){ goto $label$21 }
	$10 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	CALL eosio_assert([0], [10102])
	
.LABEL $label$17
	$17 = *($15 + [32])
	$9 = (uint_64)$17 >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$25:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$24 }
	$11 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$27 }
	$9 = $11
	$12 = $10
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$25 }
	goto $label$26 
	
.LABEL $label$27
	$9 = $11
	
.LOOP $label$28:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$24 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$12 = ((int_32)$10 < (int_32)[6])
	$13 = ($10 + [1])
	$10 = $13
	if ( $12 ){ goto $label$28 }
	$10 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$25 }
	
.LABEL $label$26
	$11 = *($2 + [8])
	if ( ((int_64)$11 == (int_64)$17) ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$24
	CALL eosio_assert([0], [10102])
	$11 = *($2 + [8])
	if ( ((int_64)$11 == (int_64)$17) ){ goto $label$22 }
	
.LABEL $label$23
	CALL eosio_assert([0], [10890])
	
.LABEL $label$22
	if ( ((int_64)$8 < (int_64)1000) ){ goto $label$29 }
	$9 = (int_64)
	CALL __multi3(($7 + [8]), $9((int_64)1000 - *($15 + [56]))), (int_64)$9 >> (int_64)63), $8, (int_64)$8 >> (int_64)63))
	$9 = *(($7 + [16]))
	$8 = *($7 + [8])
	if ( (( (uint_64)($8 <= (int_64)4611686018427387904) ? ((int_64)$9 < (int_64)0) : (int_64)($9 == 0) ) == 0) ){ goto $label$31 }
	if ( ( ((uint_64)$8 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$9 > (int_64)-1) : ((int_64)$9 == (int_64)-1) ) ){ goto $label$30 }
	CALL eosio_assert([0], [10734])
	goto $label$30 
	
.LABEL $label$31
	CALL eosio_assert([0], [10710])
	
.LABEL $label$30
	$9 = *(($2 + [8]))
	*((($7 + [216]) + [8])) = $9
	*($7 + [216]) = *($2)
	$8 = ((int_64)$8 / (int_64)1000)
	if ( ((int_64)$11 == (int_64)$9) ){ goto $label$32 }
	CALL eosio_assert([0], [10799])
	
.LABEL $label$32
	$9 = (int_64)
	*($7 + [216]) = $9(*($7 + [216]) - $8))
	if ( ((int_64)$9 <= (int_64)-4611686018427387904) ){ goto $label$35 }
	if ( ((int_64)$9 >= (int_64)4611686018427387904) ){ goto $label$34 }
	if ( ((int_64)($9 == 0) == 0) ){ goto $label$33 }
	goto $label$29 
	
.LABEL $label$35
	CALL eosio_assert([0], [10847])
	goto $label$33 
	
.LABEL $label$34
	CALL eosio_assert([0], [10869])
	
.LABEL $label$33
	$9 = CALL $96($0, $5, $6)
	$14 = ($0 + [112])
	$12 = *(($0 + [140]))
	$2 = *(($0 + [136]))
	if ( ((int_32)$2 == (int_32)$12) ){ goto $label$37 }
	
.LOOP $label$39:
	$10 = ($12 + [-24])
	$13 = *($10)
	if ( ((int_64)*($13) == (int_64)$9) ){ goto $label$38 }
	$12 = $10
	if ( ((int_32)$2 != (int_32)$10) ){ goto $label$39 }
	goto $label$37 
	
.LABEL $label$38
	if ( ((int_32)$2 == (int_32)$12) ){ goto $label$37 }
	if ( ((int_32)*($13 + [80]) == (int_32)$14) ){ goto $label$36 }
	CALL eosio_assert([0], [9275])
	goto $label$36 
	
.LABEL $label$37
	$10 = CALL db_find_i64(*($14), *(($0 + [120])), (int_64)-4154952186784120832, $9)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$29 }
	$13 = CALL $97($14, $10)
	if ( ((int_32)*($13 + [80]) == (int_32)$14) ){ goto $label$36 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$36
	*((($7 + [280]) + [8])) = *((($7 + [216]) + [8]))
	*($7 + [280]) = *($7 + [216])
	$17 = *($13 + [40])
	if ( ((int_64)$17 == (int_64)0) ){ goto $label$41 }
	$9 = *($7 + [280])
	if ( ((int_64)$17 != (int_64)-1) ){ goto $label$40 }
	if ( ((int_64)$9 != (int_64)-9223372036854775808) ){ goto $label$40 }
	CALL eosio_assert([0], [10774])
	$9 = (int_64)-9223372036854775808
	goto $label$40 
	
.LABEL $label$41
	CALL eosio_assert([0], [10759])
	$9 = *($7 + [280])
	
.LABEL $label$40
	*($7 + [280]) = ((int_64)$9 / (int_64)$17)
	$9 = *($0)
	*($7 + [264]) = ($7 + [280])
	CALL $182($14, $13, $9, ($7 + [264]))
	$12 = *(($0 + [140]))
	$2 = *(($0 + [136]))
	if ( ((int_32)$2 == (int_32)$12) ){ goto $label$43 }
	
.LOOP $label$45:
	$10 = ($12 + [-24])
	$13 = *($10)
	if ( (int_64)(*($13) == 0) ){ goto $label$44 }
	$12 = $10
	if ( ((int_32)$2 != (int_32)$10) ){ goto $label$45 }
	goto $label$43 
	
.LABEL $label$44
	if ( ((int_32)$2 == (int_32)$12) ){ goto $label$43 }
	if ( ((int_32)*($13 + [80]) == (int_32)$14) ){ goto $label$42 }
	CALL eosio_assert([0], [9275])
	goto $label$42 
	
.LABEL $label$43
	$13 = [0]
	$10 = CALL db_find_i64(*(($0 + [112])), *(($0 + [120])), (int_64)-4154952186784120832, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$42 }
	$13 = CALL $97($14, $10)
	if ( ((int_32)*($13 + [80]) == (int_32)$14) ){ goto $label$42 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$42
	$9 = CALL $96($0, ($13 + [48]), $6)
	$12 = *(($0 + [140]))
	$2 = *(($0 + [136]))
	if ( ((int_32)$2 == (int_32)$12) ){ goto $label$47 }
	
.LOOP $label$49:
	$10 = ($12 + [-24])
	$13 = *($10)
	if ( ((int_64)*($13) == (int_64)$9) ){ goto $label$48 }
	$12 = $10
	if ( ((int_32)$2 != (int_32)$10) ){ goto $label$49 }
	goto $label$47 
	
.LABEL $label$48
	if ( ((int_32)$2 == (int_32)$12) ){ goto $label$47 }
	if ( ((int_32)*($13 + [80]) == (int_32)$14) ){ goto $label$46 }
	CALL eosio_assert([0], [9275])
	goto $label$46 
	
.LABEL $label$47
	$13 = [0]
	$10 = CALL db_find_i64(*(($0 + [112])), *(($0 + [120])), (int_64)-4154952186784120832, $9)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$46 }
	$13 = CALL $97($14, $10)
	if ( ((int_32)*($13 + [80]) == (int_32)$14) ){ goto $label$46 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$46
	$9 = *($0)
	*($7 + [268]) = ($7 + [280])
	*($7 + [264]) = ($7 + [216])
	if ( $13 ){ goto $label$50 }
	CALL eosio_assert([0], [8651])
	
.LABEL $label$50
	CALL $183($14, $13, $9, ($7 + [264]))
	
.LABEL $label$29
	if ( (int_64)($8 == 0) ){ goto $label$51 }
	*($7 + [272]) = (int_64)3617214756542218240
	$6 = *($0)
	*($7 + [264]) = $6
	$17 = *($15 + [8])
	CALL $83(($7 + [72]), ($0 + [264]), [10968])
	$10 = *($0 + [276])
	$12 = ($10 & [1])
	$10 = CALL $37(($7 + [72]), ( *(($0 + [284])) ? ($0 + [277]) : $12 ), ( *(($0 + [280])) ? uint_32($10 >> [1]) : $12 ))
	$13 = ($10 + [8])
	*((($7 + [88]) + [8])) = *($13)
	*($7 + [88]) = *($10)
	*($10) = (int_64)0
	$12 = [0]
	*($13) = [0]
	$9 = (uint_64)*(($15 + [32])) >> (uint_64)(int_64)8
	if ( (int_64)($9) == 0) ){ goto $label$55 }
	
.LOOP $label$57:
	*((($7 + [216]) + ($10 = $12))) = $9
	$12 = ($10 + [1])
	if ( ((uint_32)$10 > (uint_32)[5]) ){ goto $label$56 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$57 }
	
.LABEL $label$56
	*(($7 + [64])) = [0]
	*($7 + [56]) = (int_64)0
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$54 }
	*($7 + [56]) = ($12 << [1])
	$13 = (($7 + [56]) | [1])
	goto $label$53 
	
.LABEL $label$55
	*((($7 + [56]) + [8])) = [0]
	*($7 + [56]) = (int_64)0
	*($7 + [56]) = [0]
	$13 = (($7 + [56]) | [1])
	$10 = $13
	goto $label$52 
	
.LABEL $label$54
	$2 = (($12 + [16]) & [-16])
	$13 = CALL $9($2)
	*($7 + [56]) = ($2 | [1])
	*($7 + [64]) = $13
	*($7 + [60]) = $12
	
.LABEL $label$53
	$2 = ($10 + [1])
	$10 = [0]
	
.LOOP $label$58:
	*(($13 + $10)) = *((($7 + [216]) + $10))
	$10 = ($10 + [1])
	if ( ((int_32)$2 != (int_32)$10) ){ goto $label$58 }
	$10 = ($13 + $12)
	$13 = (($7 + [56]) | [1])
	
.LABEL $label$52
	*($10) = [0]
	$10 = *($7 + [56])
	$12 = ($10 & [1])
	$10 = CALL $37(($7 + [88]), ( *($7 + [64]) ? $13 : $12 ), ( *($7 + [60]) ? uint_32($10 >> [1]) : $12 ))
	$12 = ($10 + [8])
	*((($7 + [104]) + [8])) = *($12)
	*($7 + [104]) = *($10)
	*($10) = (int_64)0
	*($12) = [0]
	$10 = *($0 + [288])
	$12 = ($10 & [1])
	$10 = CALL $37(($7 + [104]), ( *(($0 + [296])) ? ($0 + [289]) : $12 ), ( *(($0 + [292])) ? uint_32($10 >> [1]) : $12 ))
	$12 = ($10 + [8])
	*((($7 + [120]) + [8])) = *($12)
	*($7 + [120]) = *($10)
	*($10) = (int_64)0
	*($12) = [0]
	CALL $84(($7 + [40]), $0, $16, [8])
	$10 = *($7 + [40])
	$12 = ($10 & [1])
	$10 = CALL $37(($7 + [120]), ( *($7 + [48]) ? (($7 + [40]) | [1]) : $12 ), ( *($7 + [44]) ? uint_32($10 >> [1]) : $12 ))
	$12 = ($10 + [8])
	*((($7 + [136]) + [8])) = *($12)
	*($7 + [136]) = *($10)
	*($10) = (int_64)0
	*($12) = [0]
	$10 = *($0 + [300])
	$12 = ($10 & [1])
	$10 = CALL $37(($7 + [136]), ( *(($0 + [308])) ? ($0 + [301]) : $12 ), ( *(($0 + [304])) ? uint_32($10 >> [1]) : $12 ))
	$12 = ($10 + [8])
	*((($7 + [152]) + [8])) = *($12)
	*($7 + [152]) = *($10)
	*($10) = (int_64)0
	*($12) = [0]
	CALL $84(($7 + [24]), $0, $3, [8])
	$10 = *($7 + [24])
	$12 = ($10 & [1])
	$10 = CALL $37(($7 + [152]), ( *($7 + [32]) ? (($7 + [24]) | [1]) : $12 ), ( *($7 + [28]) ? uint_32($10 >> [1]) : $12 ))
	$12 = ($10 + [8])
	*((($7 + [168]) + [8])) = *($12)
	*($7 + [168]) = *($10)
	*($10) = (int_64)0
	*($12) = [0]
	$10 = *($0 + [324])
	$12 = ($10 & [1])
	$10 = CALL $37(($7 + [168]), ( *(($0 + [332])) ? ($0 + [325]) : $12 ), ( *(($0 + [328])) ? uint_32($10 >> [1]) : $12 ))
	$12 = ($10 + [8])
	*((($7 + [184]) + [8])) = *($12)
	*($7 + [184]) = *($10)
	*($10) = (int_64)0
	*($12) = [0]
	$10 = *($4)
	$12 = ($10 & [1])
	$10 = CALL $37(($7 + [184]), ( *($4 + [8]) ? ($4 + [1]) : $12 ), ( *($4 + [4]) ? uint_32($10 >> [1]) : $12 ))
	$12 = ($10 + [8])
	*((($7 + [200]) + [8])) = *($12)
	*($7 + [200]) = *($10)
	*($10) = (int_64)0
	*($12) = [0]
	$10 = *($0 + [312])
	$12 = ($10 & [1])
	$10 = CALL $37(($7 + [200]), ( *(($0 + [320])) ? ($0 + [313]) : $12 ), ( *(($0 + [316])) ? uint_32($10 >> [1]) : $12 ))
	$9 = *($10)
	*($10) = (int_64)0
	$12 = *($10 + [8])
	*($10 + [8]) = [0]
	*(($7 + [240])) = $11
	*(($7 + [256])) = $12
	*($7 + [224]) = $1
	*($7 + [216]) = $6
	*($7 + [248]) = $9
	*($7 + [232]) = $8
	$10 = CALL $85(($7 + [280]), ($7 + [264]), $17, (int_64)-3617168760277827584, ($7 + [216]))
	CALL $86($10)
	$12 = *($10 + [28])
	if ( ($12 == 0) ){ goto $label$59 }
	*(($10 + [32])) = $12
	CALL $11($12)
	
.LABEL $label$59
	$12 = *($10 + [16])
	if ( ($12 == 0) ){ goto $label$60 }
	*(($10 + [20])) = $12
	CALL $11($12)
	
.LABEL $label$60
	if ( (*($7 + [248]) & [1]) ){ goto $label$84 }
	if ( (*($7 + [200]) & [1]) ){ goto $label$83 }
	goto $label$82 
	
.LABEL $label$84
	CALL $11(*(($7 + [256])))
	if ( ((*($7 + [200]) & [1]) == 0) ){ goto $label$82 }
	
.LABEL $label$83
	CALL $11(*($7 + [208]))
	$10 = [1]
	if ( ((*($7 + [184]) & [1]) == 0) ){ goto $label$81 }
	goto $label$80 
	
.LABEL $label$82
	$10 = [1]
	if ( (*($7 + [184]) & [1]) ){ goto $label$80 }
	
.LABEL $label$81
	if ( (*($7 + [168]) & $10) ){ goto $label$79 }
	goto $label$78 
	
.LABEL $label$80
	CALL $11(*($7 + [192]))
	if ( ((*($7 + [168]) & $10) == 0) ){ goto $label$78 }
	
.LABEL $label$79
	CALL $11(*($7 + [176]))
	$10 = [1]
	if ( ((*($7 + [24]) & [1]) == 0) ){ goto $label$77 }
	goto $label$76 
	
.LABEL $label$78
	$10 = [1]
	if ( (*($7 + [24]) & [1]) ){ goto $label$76 }
	
.LABEL $label$77
	if ( (*($7 + [152]) & $10) ){ goto $label$75 }
	goto $label$74 
	
.LABEL $label$76
	CALL $11(*(($7 + [32])))
	if ( ((*($7 + [152]) & $10) == 0) ){ goto $label$74 }
	
.LABEL $label$75
	CALL $11(*($7 + [160]))
	$10 = [1]
	if ( ((*($7 + [136]) & [1]) == 0) ){ goto $label$73 }
	goto $label$72 
	
.LABEL $label$74
	$10 = [1]
	if ( (*($7 + [136]) & [1]) ){ goto $label$72 }
	
.LABEL $label$73
	if ( (*($7 + [40]) & $10) ){ goto $label$71 }
	goto $label$70 
	
.LABEL $label$72
	CALL $11(*($7 + [144]))
	if ( ((*($7 + [40]) & $10) == 0) ){ goto $label$70 }
	
.LABEL $label$71
	CALL $11(*(($7 + [48])))
	$10 = [1]
	if ( ((*($7 + [120]) & [1]) == 0) ){ goto $label$69 }
	goto $label$68 
	
.LABEL $label$70
	$10 = [1]
	if ( (*($7 + [120]) & [1]) ){ goto $label$68 }
	
.LABEL $label$69
	if ( (*($7 + [104]) & $10) ){ goto $label$67 }
	goto $label$66 
	
.LABEL $label$68
	CALL $11(*($7 + [128]))
	if ( ((*($7 + [104]) & $10) == 0) ){ goto $label$66 }
	
.LABEL $label$67
	CALL $11(*($7 + [112]))
	$10 = [1]
	if ( ((*($7 + [56]) & [1]) == 0) ){ goto $label$65 }
	goto $label$64 
	
.LABEL $label$66
	$10 = [1]
	if ( (*($7 + [56]) & [1]) ){ goto $label$64 }
	
.LABEL $label$65
	if ( (*($7 + [88]) & $10) ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$64
	CALL $11(*(($7 + [64])))
	if ( ((*($7 + [88]) & $10) == 0) ){ goto $label$62 }
	
.LABEL $label$63
	CALL $11(*($7 + [96]))
	if ( (*($7 + [72]) & [1]) ){ goto $label$61 }
	goto $label$51 
	
.LABEL $label$62
	if ( ((*($7 + [72]) & [1]) == 0) ){ goto $label$51 }
	
.LABEL $label$61
	CALL $11(*($7 + [80]))
	
.LABEL $label$51
	$11 = *(($15 + [32]))
	$9 = (uint_64)$11 >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$87:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$86 }
	$6 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$88 }
	$9 = $6
	$12 = $10
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$87 }
	goto $label$85 
	
.LABEL $label$88
	$9 = $6
	
.LOOP $label$89:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$86 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$12 = ((int_32)$10 < (int_32)[6])
	$13 = ($10 + [1])
	$10 = $13
	if ( $12 ){ goto $label$89 }
	$10 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$87 }
	goto $label$85 
	
.LABEL $label$86
	CALL eosio_assert([0], [10102])
	
.LABEL $label$85
	*($0 + [192]) = (int_64)0
	*(($0 + [200])) = $11
	$global$0 = ($7 + [320])
}

void .FUNC $171 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9848])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $9([80])) + [32]) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [40]) = (int_64)0
	*($3 + [56 align=4]) = (int_64)0
	*($3 + [64]) = [0]
	*($3 + [68]) = $1
	CALL $181(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [72])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $139(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($3 + [64])))
	
.LABEL $label$5
	CALL $11($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $172 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8701])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9486])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $142($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $4, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [16])
}

int_32 .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $2($1)
	
.LABEL $label$2
	*(CALL $6()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $2(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $3($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC $178 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8701])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9486])
	
.LABEL $label$2
	*($1 + [16]) = *(*($3))
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $142($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $4, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [16])
}

void .FUNC $4 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

void .FUNC $5 (int_32 $0)
{
}

void .FUNC $127 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [416])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [404]) = $2
	*($3 + [400]) = $2
	$5 = ($2 + $4)
	*($3 + [408]) = $5
	*($3 + [392]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9349])
	$5 = *(($3 + [408]))
	$2 = *($3 + [404])
	
.LABEL $label$5
	CALL memcpy(($3 + [392]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [404]) = $2
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9349])
	$2 = *($3 + [404])
	
.LABEL $label$6
	CALL memcpy(($3 + [384]), $2, [8])
	*($3 + [404]) = ($2 + [8])
	*($3 + [376]) = [0]
	*($3 + [368]) = (int_64)0
	CALL $120(($3 + [400]), ($3 + [368]))
	$2 = *((($3 + [400]) + [8]))
	*((($3 + [16]) + [8])) = $2
	*(($3 + [8])) = $2
	$6 = *($3 + [400])
	*($3) = $6
	*($3 + [16]) = $6
	$2 = CALL $72(($3 + [32]), $0, $1, $3)
	CALL $69($2, *($3 + [392]), *($3 + [384]), ($3 + [368]))
	CALL $74($2)
	if ( ((*($3 + [368]) & [1]) == 0) ){ goto $label$7 }
	CALL $11(*(($3 + [376])))
	
.LABEL $label$7
	$global$0 = ($3 + [416])
}

void .FUNC $3 (int_32 $0)
{
}

void .FUNC $189 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8701])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9486])
	
.LABEL $label$2
	*($5 + [24]) = *($1 + [72])
	$6 = *($1)
	$7 = *($3)
	$8 = *($7)
	$9 = *($7 + [8])
	$3 = *($3 + [4])
	if ( ((int_64)*($3 + [8]) == (int_64)$9) ){ goto $label$3 }
	CALL eosio_assert([0], [10799])
	
.LABEL $label$3
	$8 = (int_64)
	if ( ((int_64)$8($8 - *($3))) <= (int_64)-4611686018427387904) ){ goto $label$5 }
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [10869])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [10847])
	
.LABEL $label$4
	if ( ((int_64)$9 == (int_64)*(($1 + [16]))) ){ goto $label$6 }
	CALL eosio_assert([0], [10630])
	
.LABEL $label$6
	$8 = ((int_64)*($1 + [8]) + (int_64)$8)
	*($1 + [8]) = $8
	if ( ((int_64)$8 <= (int_64)-4611686018427387904) ){ goto $label$11 }
	if ( ((int_64)$8 >= (int_64)4611686018427387904) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL eosio_assert([0], [10673])
	if ( ((int_64)*(($1 + [8])) < (int_64)4611686018427387904) ){ goto $label$9 }
	
.LABEL $label$10
	CALL eosio_assert([0], [10692])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [9537])
	
.LABEL $label$7
	$3 = *($1 + [48])
	$7 = ( *(($1 + [52])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($7 + [64])
	$8 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$12:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ($3 <= [513]) ){ goto $label$14 }
	$4 = CALL $2($3)
	goto $label$13 
	
.LABEL $label$14
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$13
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	CALL $157(($5 + [8]), $1)
	CALL db_update_i64(*($1 + [84]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$15 }
	CALL $3($4)
	
.LABEL $label$15
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$16 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	*($5 + [40]) = *(($1 + [72]))
	if ( (CALL $17(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$17 }
	$1 = ($1 + [88])
	$3 = *($1)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$18 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4154952186784120832, ($5 + [32]), $6)
	*($1) = $3
	
.LABEL $label$18
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$17
	$global$0 = ($5 + [48])
}

void .FUNC $188 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8701])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9486])
	
.LABEL $label$2
	*($5 + [24]) = *($1 + [72])
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10630])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [10673])
	if ( ((int_64)*(($1 + [8])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [10692])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [9537])
	
.LABEL $label$4
	$3 = *($1 + [48])
	$8 = ( *(($1 + [52])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($8 + [64])
	$7 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$9:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$9 }
	if ( ($3 <= [513]) ){ goto $label$11 }
	$4 = CALL $2($3)
	goto $label$10 
	
.LABEL $label$11
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$10
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	CALL $157(($5 + [8]), $1)
	CALL db_update_i64(*($1 + [84]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$12 }
	CALL $3($4)
	
.LABEL $label$12
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	*($5 + [40]) = *(($1 + [72]))
	if ( (CALL $17(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$14 }
	$1 = ($1 + [88])
	$3 = *($1)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$15 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4154952186784120832, ($5 + [32]), $6)
	*($1) = $3
	
.LABEL $label$15
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$14
	$global$0 = ($5 + [48])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [288])
	$global$0 = $3
	CALL $0()
	*($3 + [272]) = [8254]
	*($3 + [276]) = CALL $1([8254])
	*($3 + [136]) = *($3 + [272])
	CALL $50(($3 + [280]), ($3 + [136]))
	if ( ((int_64)$2 != (int_64)-6569208335818555392) ){ goto $label$1 }
	*($3 + [264]) = [8629]
	*($3 + [268]) = CALL $1([8629])
	*($3 + [128]) = *($3 + [264])
	CALL $50(($3 + [280]), ($3 + [128]))
	if ( ((int_64)$1 == (int_64)6138663577826885632) ){ goto $label$1 }
	CALL eosio_assert([0], [8800])
	
.LABEL $label$1
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$14 }
	*($3 + [256]) = [8864]
	*($3 + [260]) = CALL $1([8864])
	*($3 + [104]) = *($3 + [256])
	CALL $50(($3 + [280]), ($3 + [104]))
	if ( ((int_64)$2 > (int_64)-3075276122089661249) ){ goto $label$13 }
	if ( ((int_64)$2 > (int_64)-4848488765414440961) ){ goto $label$12 }
	if ( ((int_64)$2 == (int_64)-5001342328203727360) ){ goto $label$10 }
	if ( ((int_64)$2 == (int_64)-4859644435866701312) ){ goto $label$9 }
	if ( ((int_64)$2 != (int_64)-4848535883648860160) ){ goto $label$2 }
	*($3 + [180]) = [0]
	*($3 + [176]) = [3]
	*($3 + [88]) = *($3 + [176])
	CALL $52($1, $1, ($3 + [88]))
	goto $label$2 
	
.LABEL $label$14
	*($3 + [152]) = [8864]
	*($3 + [156]) = CALL $1([8864])
	*($3 + [120]) = *($3 + [152])
	CALL $50(($3 + [280]), ($3 + [120]))
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$2 }
	*($3 + [148]) = [0]
	*($3 + [144]) = [4]
	*($3 + [112]) = *($3 + [144])
	CALL $54($0, $1, ($3 + [112]))
	goto $label$2 
	
.LABEL $label$13
	if ( ((int_64)$2 > (int_64)-2039333636190596097) ){ goto $label$11 }
	if ( ((int_64)$2 == (int_64)-3075276122089661248) ){ goto $label$8 }
	if ( ((int_64)$2 == (int_64)-3075276120651726848) ){ goto $label$7 }
	if ( ((int_64)$2 != (int_64)-3075276114271464448) ){ goto $label$2 }
	*($3 + [172]) = [0]
	*($3 + [168]) = [5]
	*($3 + [96]) = *($3 + [168])
	CALL $56($1, $1, ($3 + [96]))
	goto $label$2 
	
.LABEL $label$12
	if ( ((int_64)$2 == (int_64)-4848488765414440960) ){ goto $label$6 }
	if ( ((int_64)$2 == (int_64)-4848279696976117760) ){ goto $label$5 }
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$2 }
	*($3 + [160]) = [8864]
	*($3 + [164]) = CALL $1([8864])
	*($3 + [8]) = *($3 + [160])
	CALL $50(($3 + [280]), ($3 + [8]))
	CALL eosio_assert([0], [8873])
	goto $label$2 
	
.LABEL $label$11
	if ( ((int_64)$2 == (int_64)-2039333636190596096) ){ goto $label$4 }
	if ( ((int_64)$2 == (int_64)3626093248789590416) ){ goto $label$3 }
	if ( ((int_64)$2 != (int_64)4730614996831743488) ){ goto $label$2 }
	*($3 + [252]) = [0]
	*($3 + [248]) = [6]
	*($3 + [16]) = *($3 + [248])
	CALL $58($1, $1, ($3 + [16]))
	goto $label$2 
	
.LABEL $label$10
	*($3 + [204]) = [0]
	*($3 + [200]) = [7]
	*($3 + [64]) = *($3 + [200])
	CALL $60($1, $1, ($3 + [64]))
	goto $label$2 
	
.LABEL $label$9
	*($3 + [212]) = [0]
	*($3 + [208]) = [8]
	*($3 + [56]) = *($3 + [208])
	CALL $62($1, $1, ($3 + [56]))
	goto $label$2 
	
.LABEL $label$8
	*($3 + [244]) = [0]
	*($3 + [240]) = [9]
	*($3 + [24]) = *($3 + [240])
	CALL $64($1, $1, ($3 + [24]))
	goto $label$2 
	
.LABEL $label$7
	*($3 + [236]) = [0]
	*($3 + [232]) = [10]
	*($3 + [32]) = *($3 + [232])
	CALL $66($1, $1, ($3 + [32]))
	goto $label$2 
	
.LABEL $label$6
	*($3 + [188]) = [0]
	*($3 + [184]) = [11]
	*($3 + [80]) = *($3 + [184])
	CALL $52($1, $1, ($3 + [80]))
	goto $label$2 
	
.LABEL $label$5
	*($3 + [196]) = [0]
	*($3 + [192]) = [12]
	*($3 + [72]) = *($3 + [192])
	CALL $52($1, $1, ($3 + [72]))
	goto $label$2 
	
.LABEL $label$4
	*($3 + [228]) = [0]
	*($3 + [224]) = [13]
	*($3 + [40]) = *($3 + [224])
	CALL $60($1, $1, ($3 + [40]))
	goto $label$2 
	
.LABEL $label$3
	*($3 + [220]) = [0]
	*($3 + [216]) = [14]
	*($3 + [48]) = *($3 + [216])
	CALL $62($1, $1, ($3 + [48]))
	
.LABEL $label$2
	CALL $5([0])
	$global$0 = ($3 + [288])
}

void .FUNC $48 (int_32 $0, int_64 $1, int_64 $2)
{
	*($0 + [8]) = ((int_64)$2 & (int_64)9223372036854775807)
	*($0) = $1
}

void .FUNC $0 ()
{
	CALL $4()
}

void .FUNC $43 ()
{
	CALL abort()
	(unreachable)
}

void .FUNC $42 (int_32 $0)
{
	int_32 $1
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL $83($1, $0, [8635])
	CALL $44()
	(unreachable)
}

void .FUNC $41 (int_32 $0)
{
	int_32 $1
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL $83($1, $0, [8686])
	CALL $43()
	(unreachable)
}

int_32 .FUNC $40 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [16])
	$global$0 = $3
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	$4 = CALL $1([8624])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$6 }
	*($3) = ($4 << [1])
	$5 = ($3 | [1])
	if ( $4 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $9($6)
	*($3) = ($6 | [1])
	*($3 + [8]) = $5
	*($3 + [4]) = $4
	
.LABEL $label$5
	CALL memcpy($5, [8624], $4)
	
.LABEL $label$4
	*(($5 + $4)) = [0]
	*($3 + [12]) = [0]
	$4 = *($0 + [8])
	$5 = *($0)
	$6 = *(CALL $6())
	*(CALL $6()) = [0]
	$4 = ( $4 ? ($0 + [1]) : ($5 & [1]) )
	$0 = CALL $23($4, ($3 + [12]), $2)
	$5 = CALL $6()
	$2 = *($5)
	*($5) = $6
	if ( ((int_32)$2 == (int_32)[34]) ){ goto $label$2 }
	$5 = *($3 + [12])
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$1 }
	if ( ($1 == 0) ){ goto $label$7 }
	*($1) = ($5 - $4)
	
.LABEL $label$7
	if ( ((*($3) & [1]) == 0) ){ goto $label$8 }
	CALL $11(*($3 + [8]))
	
.LABEL $label$8
	$global$0 = ($3 + [16])
	return $0
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL $41($3)
	
.LABEL $label$1
	CALL $42($3)
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $47 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_64 .FUNC $46 (float_64 $0, float_64 $1)
{
	float_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	float_64 $13
	float_64 $14
	float_64 $15
	float_64 $16
	float_64 $17
	float_64 $18
	float_64 $19
	float_64 $20
	$2 = (float_64)1
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (CASTING int_64)(float_64 $1)
	$4 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	$5 = ($4) & [2147483647]
	if ( (($5) | $6) == 0) ){ goto $label$1 }
	$7 = (CASTING int_64)(float_64 $0)
	$8 = (CASTING uint_32)(uint_64 (uint_64)$7 >> (uint_64)(int_64)32))
	$9 = (CASTING uint_32)(uint_64 $7)
	if ( $9 ){ goto $label$2 }
	if ( ((int_32)$8 == (int_32)[1072693248]) ){ goto $label$1 }
	
.LABEL $label$2
	$10 = ($8 & [2147483647])
	if ( ((uint_32)$10 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( (((int_32)$9 != (int_32)[0]) & ((int_32)$10 == (int_32)[2146435072])) ){ goto $label$4 }
	if ( ((uint_32)$5 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$3 }
	if ( ((int_32)$5 != (int_32)[2146435072]) ){ goto $label$3 }
	
.LABEL $label$4
	return ((float_64)$0 + (float_64)$1)
	
.LABEL $label$3
	$11 = [0]
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$8 }
	$11 = [2]
	if ( ((uint_32)$5 > (uint_32)[1128267775]) ){ goto $label$8 }
	$11 = [0]
	if ( ($5 <= [1072693248]) ){ goto $label$8 }
	$12 = uint_32($5 >> [20])
	if ( ($5 <= [1094713344]) ){ goto $label$7 }
	$11 = ([1075] - $12)
	$12 = uint_32($6 >> $11)
	$11 = ( ([2] - ($12 & [1])) ? [0] : ((int_32)($12 << $11) == (int_32)$6) )
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$11 = [0]
	if ( $6 ){ goto $label$5 }
	$6 = ([1043] - $12)
	$11 = uint_32($5 >> $6)
	$11 = ( ([2] - ($11 & [1])) ? [0] : ((int_32)($11 << $6) == (int_32)$5) )
	
.LABEL $label$6
	if ( ((int_32)$5 != (int_32)[2146435072]) ){ goto $label$12 }
	if ( ((($10 + [-1072693248]) | $9) == 0) ){ goto $label$1 }
	if ( ($10 <= [1072693248]) ){ goto $label$11 }
	return ( $1 ? (float_64)0 : ((int_32)$4 > (int_32)[-1]) )
	
.LABEL $label$12
	if ( ((int_32)$5 != (int_32)[1072693248]) ){ goto $label$13 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$9 }
	return $0
	
.LABEL $label$13
	if ( ((int_32)$4 != (int_32)[1073741824]) ){ goto $label$10 }
	return ((float_64)$0 * (float_64)$0)
	
.LABEL $label$11
	return ( (float_64)0 ? !(float_64)$1 : ((int_32)$4 > (int_32)[-1]) )
	
.LABEL $label$10
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$5 }
	if ( ((int_32)$4 != (int_32)[1071644672]) ){ goto $label$5 }
	return CALL $45($0)
	
.LABEL $label$9
	return ((float_64)(float_64)1 / (float_64)$0)
	
.LABEL $label$5
	$2 = CALL $25($0)
	if ( $9 ){ goto $label$26 }
	if ( ($10 == 0) ){ goto $label$25 }
	if ( ((int_32)($10 | [1073741824]) == (int_32)[2146435072]) ){ goto $label$25 }
	
.LABEL $label$26
	$13 = (float_64)1
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$22 }
	if ( ((int_32)$11 == (int_32)[1]) ){ goto $label$24 }
	if ( $11 ){ goto $label$22 }
	$1 = (float_64)
	return ((float_64)$1($0 - $0)) / (float_64)$1)
	
.LABEL $label$25
	$2 = ( ((float_64)(float_64)1 / (float_64)$2) ? $2 : ((int_32)$4 < (int_32)[0]) )
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$1 }
	if ( (($11 | ($10 + [-1072693248])) == 0) ){ goto $label$23 }
	return ( !(float_64)$2 ? $2 : ((int_32)$11 == (int_32)[1]) )
	
.LABEL $label$24
	$13 = (float_64)-1
	if ( ((uint_32)$5 >= (uint_32)[1105199105]) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$1 = (float_64)
	return ((float_64)$1($2 - $2)) / (float_64)$1)
	
.LABEL $label$22
	if ( ($5 <= [1105199105]) ){ goto $label$20 }
	
.LABEL $label$21
	if ( ($5 <= [1139802113]) ){ goto $label$27 }
	if ( ((uint_32)$10 > (uint_32)[1072693247]) ){ goto $label$19 }
	return ( (float_64)inf ? (float_64)0 : ((int_32)$4 < (int_32)[0]) )
	
.LABEL $label$27
	if ( ((uint_32)$10 > (uint_32)[1072693246]) ){ goto $label$18 }
	return ( ((float_64)((float_64)$13 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300) ? ((float_64)((float_64)$13 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300) : ((int_32)$4 < (int_32)[0]) )
	
.LABEL $label$20
	$5 = [0]
	if ( ((uint_32)$10 > (uint_32)[1048575]) ){ goto $label$29 }
	$2 = ((float_64)$2 * (float_64)(float_64)9007199254740992)
	$10 = (CASTING uint_32)(uint_64 (uint_64)(CASTING int_64)(float_64 $2) >> (uint_64)(int_64)32))
	$4 = [-53]
	goto $label$28 
	
.LABEL $label$29
	$4 = [0]
	
.LABEL $label$28
	$6 = ($10 & [1048575])
	$8 = ($6 | [1072693248])
	$4 = ((int_32($10 >> [20]) + $4) + [-1023])
	if ( ($6 <= [235663]) ){ goto $label$16 }
	if ( ((uint_32)$6 >= (uint_32)[767610]) ){ goto $label$17 }
	$5 = [1]
	goto $label$16 
	
.LABEL $label$19
	return ( (float_64)inf ? (float_64)0 : ((int_32)$4 > (int_32)[0]) )
	
.LABEL $label$18
	if ( ($10 <= [1072693249]) ){ goto $label$15 }
	return ( ((float_64)((float_64)$13 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300) ? ((float_64)((float_64)$13 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300) : ((int_32)$4 > (int_32)[0]) )
	
.LABEL $label$17
	$8 = ($8 + [-1048576])
	$4 = ($4 + [1])
	
.LABEL $label$16
	$2 = (CASTING float_64)(int_32 $4)
	$16 = ((float_64)*(($6 + [8768])) + (float_64)((float_64)((float_64)(float_64))($2 - (float_64))($0 - $17)) * (float_64)(float_64)0.9617966939259756) + (float_64)((float_64)$0 * (float_64)(float_64)-7.028461650952758e-09)
	$2 = ((float_64)((float_64)$15 * (float_64)$0) + (float_64)((float_64)$2 * (float_64)(float_64))($16 - (float_64))(((float_64)$0 + (float_64)(float_64)-3) - $19))
	$0 = ((float_64)$2 * (float_64)$2)
	$20 = (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 (((int_32($8 >> [1]) | [536870912]) + ($5 << [18])) + [524288])) << (int_64)32))
	$15 = ((float_64)$18 * (float_64)(float_64))((float_64))($17 - ((float_64)$0 * (float_64)$20)) - ((float_64)$0 * (float_64)(float_64))($15 - (float_64))($20 - $16)
	$16 = ((float_64)((float_64)((float_64)$2 + (float_64)$0) * (float_64)$15))
	$19 = ((float_64)$0 * (float_64)$0)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)((float_64)$19 + (float_64)(float_64)3) + (float_64)$16)) + (float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)0.20697501780033842) + (float_64)(float_64)0.23066074577556175)) + (float_64)(float_64)0.272728123808534)) + (float_64)(float_64)0.33333332981837743)) + (float_64)(float_64)0.4285714285785502)) + (float_64)(float_64)0.5999999999999946))))
	$18 = ((float_64)(float_64)1 / (float_64)((float_64)$16 + (float_64)$15))
	$16 = *(($6 + [8752]))
	$15 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)((int_64)(CASTING int_64)(float_64 $2) & (int_64)4294967295)))
	$17 = (float_64)
	$2 = ((float_64)$17($15 - $16)) * (float_64)$18
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $2)) & (int_64)-4294967296)
	$17 = ((float_64)$0) * (float_64)$0
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$17 & (int_64)-4294967296))))
	$15 = ((float_64)$0 + (float_64)$2)
	$6 = ($5 << [3])
	$14 = *(($6 + [8784]))
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)((float_64)$14 + (float_64)((float_64)$15)) & (int_64)-4294967296))) * (float_64)(float_64)0.9617967009544373)
	$14 = (float_64))((float_64))((float_64))($0 + (float_64)$16)))) + (float_64)$2)) & (int_64)-4294967296))) - $2) - $14) - $15)
	goto $label$14 
	
.LABEL $label$15
	$16 = ((float_64)((float_64)$0 * (float_64)(float_64)1.9259629911266175e-08) + (float_64)((float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)(float_64))((float_64)0.5 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)-0.25) + (float_64)(float_64)0.3333333333333333)))) * (float_64)(float_64)-1.4426950408889634)
	$0 = ((float_64)$2 + (float_64)(float_64)-1)
	$2 = ((float_64)$0 * (float_64)(float_64)1.4426950216293335)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$2 + (float_64)$16))) & (int_64)-4294967296)
	$14 = (float_64))($0) - $2)
	
.LABEL $label$14
	$1 = ((float_64)((float_64)(float_64))($16 - $14) * (float_64)$1) + (float_64)((float_64)(float_64))($1 - $15) * (float_64)$0
	$15 = (CASTING float_64)(int_64 ((int_64)$3 & (int_64)-4294967296))
	$2 = ((float_64)$0 * (float_64)$15)
	$0 = ((float_64)$2 + (float_64)$1)
	$3 = (CASTING int_64)(float_64 $0)
	$5 = (CASTING uint_32)(uint_64 $3)))
	$8 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	if ( ((int_32)$8) < (int_32)[1083179008]) ){ goto $label$34 }
	if ( ((($8 + [-1083179008]) | $5) == 0) ){ goto $label$33 }
	return ((float_64)((float_64)$13 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$34
	if ( (($8 & [2147482624]) <= [1083231232]) ){ goto $label$31 }
	if ( ((($8 + [1064252416]) | $5) == 0) ){ goto $label$32 }
	return ((float_64)((float_64)$13 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$33
	if ( ((int_32)((float_64)((float_64)$1 + (float_64)(float_64)8.008566259537294e-17) > (float_64)(float_64))($0 - $2)) ^ (int_32)[1]) ){ goto $label$31 }
	return ((float_64)((float_64)$13 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$32
	if ( (((int_32)((float_64)$1 <= (float_64)(float_64))($0 - $2)) ^ (int_32)[1]) == 0) ){ goto $label$30 }
	
.LABEL $label$31
	$5 = [0]
	$6 = ($8 & [2147483647])
	if ( ($6 <= [1071644673]) ){ goto $label$35 }
	$4 = (uint_32($6 >> [20]) & [2047])
	$6 = (uint_32([1048576] >> (uint_32($6 >> [20]) + [-1022])) + $8)
	$5 = uint_32((($6 & [1048575]) | [1048576]) >> ([1043] - $4))
	$5 = ( ([0] - $5) ? $5 : ((int_32)$8 < (int_32)[0]) )
	$2 = (float_64)
	$3 = (CASTING int_64)(float_64 ((float_64)$1 + (float_64)$2($2 - (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 (int_32([-1048576] >> ($4 + [-1023])) & $6)) << (int_64)32))))))
	
.LABEL $label$35
	$0 = (float_64)
	$0 = ((float_64)$1 * (float_64)$1)
	$2 = ((float_64)((float_64)(float_64))($1 - (float_64))($0 - $2)) * (float_64)(float_64)0.6931471805599453
	$0 = (CASTING float_64)(int_64 ((int_64)$3 & (int_64)-4294967296))
	$15 = ((float_64)$0 * (float_64)(float_64)0.6931471824645996)
	$1 = ((float_64)$15 + (float_64)$2 + (float_64)((float_64)$0 * (float_64)(float_64)-1.904654299957768e-09))
	$1 = ((float_64)(float_64))($1)
	$3 = (CASTING int_64)(float_64 $1 - (float_64))(((float_64)((float_64)$1 * (float_64)$0($1 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)4.1381367970572385e-08) + (float_64)(float_64)-1.6533902205465252e-06)) + (float_64)(float_64)6.613756321437934e-05)) + (float_64)(float_64)-2.7777777777015593e-03)) + (float_64)(float_64)0.16666666666666602))))) / (float_64)((float_64)$0 + (float_64)(float_64)-2)) - ((float_64)$0($2 - (float_64))($1 - $15))
	$8 = (($5 << [20]) + (CASTING uint_32)(uint_64 (uint_64)$3 + (float_64)((float_64)$1 * (float_64)$0)))
	if ( ((int_32)$8 + (float_64)(float_64)1)))) >> (uint_64)(int_64)32)))) > (int_32)[1048575]) ){ goto $label$36 }
	return ((float_64)$13 * (float_64)CALL $24($1, $5))
	
.LABEL $label$36
	return ((float_64)$13 * (float_64)(CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)((int_64)$3 & (int_64)4294967295))))
	
.LABEL $label$30
	return ((float_64)((float_64)$13 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$1
	return $2
}

int_64 .FUNC $45 (float_64 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$1 = (CASTING int_64)(float_64 $0)
	$2 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ((int_32)($2) & [2146435072]) != (int_32)[2146435072]) ){ goto $label$1 }
	return ((float_64)((float_64)$0 * (float_64)$0) + (float_64)$0)
	
.LABEL $label$1
	$3 = (CASTING uint_32)(uint_64 $1)
	if ( ((int_32)$2 > (int_32)[0]) ){ goto $label$3 }
	if ( ((($2 & [2147483647]) | $3) == 0) ){ goto $label$2 }
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$3 }
	$0 = (float_64)
	return ((float_64)$0($0 - $0)) / (float_64)$0)
	
.LABEL $label$3
	$4 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)52)
	if ( $4) ){ goto $label$4 }
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$8 }
	$4 = [0]
	$6 = $3
	if ( (($2 & [1048576]) == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$4 = [0]
	
.LOOP $label$9:
	$2 = uint_32($3 >> [11])
	$4 = ($4 + [-21])
	$6 = ($3 << [21])
	$3 = $6
	if ( ($2 == 0) ){ goto $label$9 }
	if ( ($2 & [1048576]) ){ goto $label$6 }
	
.LABEL $label$7
	$5 = [0]
	
.LOOP $label$10:
	$5 = ($5 + [1])
	$3 = ($2 & [524288])
	$7 = ($2 << [1])
	$2 = $7
	if ( ($3 == 0) ){ goto $label$10 }
	goto $label$5 
	
.LABEL $label$6
	$7 = $2
	
.LABEL $label$5
	$3 = ($6 << $5)
	$4 = (($4 + [1]) - $5)
	$2 = (uint_32($6 >> ([32] - $5)) | $7)
	
.LABEL $label$4
	$2 = (($2 & [1048575]) | [1048576])
	$7 = ($4 + [-1023])
	if ( (($7 & [1]) == 0) ){ goto $label$11 }
	$2 = (($2 << [1]) | uint_32($3 >> [31]))
	$3 = ($3 << [1])
	
.LABEL $label$11
	$5 = (uint_32($3 >> [31]) | ($2 << [1]))
	$2 = ((int_32)$5 < (int_32)[2097152])
	$8 = ( [0] ? [2097152] : $2 )
	$5 = ( [0] ? [4194304] : $2 )
	$2 = ($5 | [1048576])
	$5 = ($5 << [1])
	$4 = (( $5 ? ($5 + [-4194304]) : $2 ) | (uint_32($3 >> [30]) & [1]))
	if ( ((int_32)$4 < (int_32)$2) ){ goto $label$12 }
	$8 = ($8 | [1048576])
	$4 = ($4 - $2)
	$5 = ($2 + [1048576])
	
.LABEL $label$12
	$4 = ($5 + [524288])
	$2 = (($4 << [1]) | (uint_32($3 >> [29]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$13 }
	$8 = ($8 + [524288])
	$2 = ($2 - $4)
	$5 = ($5 + [1048576])
	
.LABEL $label$13
	$4 = ($5 + [262144])
	$2 = (($2 << [1]) | (uint_32($3 >> [28]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$14 }
	$8 = ($8 + [262144])
	$2 = ($2 - $4)
	$5 = ($5 + [524288])
	
.LABEL $label$14
	$4 = ($5 + [131072])
	$2 = (($2 << [1]) | (uint_32($3 >> [27]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$15 }
	$8 = ($8 + [131072])
	$2 = ($2 - $4)
	$5 = ($5 + [262144])
	
.LABEL $label$15
	$4 = ($5 + [65536])
	$2 = (($2 << [1]) | (uint_32($3 >> [26]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$16 }
	$8 = ($8 + [65536])
	$2 = ($2 - $4)
	$5 = ($5 + [131072])
	
.LABEL $label$16
	$4 = ($5 + [32768])
	$2 = (($2 << [1]) | (uint_32($3 >> [25]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$17 }
	$8 = ($8 + [32768])
	$2 = ($2 - $4)
	$5 = ($5 + [65536])
	
.LABEL $label$17
	$4 = ($5 + [16384])
	$2 = (($2 << [1]) | (uint_32($3 >> [24]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$18 }
	$8 = ($8 + [16384])
	$2 = ($2 - $4)
	$5 = ($5 + [32768])
	
.LABEL $label$18
	$4 = ($5 + [8192])
	$2 = (($2 << [1]) | (uint_32($3 >> [23]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$19 }
	$8 = ($8 + [8192])
	$2 = ($2 - $4)
	$5 = ($5 + [16384])
	
.LABEL $label$19
	$4 = ($5 + [4096])
	$2 = (($2 << [1]) | (uint_32($3 >> [22]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$20 }
	$8 = ($8 + [4096])
	$2 = ($2 - $4)
	$5 = ($5 + [8192])
	
.LABEL $label$20
	$4 = ($5 + [2048])
	$2 = (($2 << [1]) | (uint_32($3 >> [21]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$21 }
	$8 = ($8 + [2048])
	$2 = ($2 - $4)
	$5 = ($5 + [4096])
	
.LABEL $label$21
	$4 = ($5 + [1024])
	$2 = (($2 << [1]) | (uint_32($3 >> [20]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$22 }
	$8 = ($8 + [1024])
	$2 = ($2 - $4)
	$5 = ($5 + [2048])
	
.LABEL $label$22
	$4 = ($5 + [512])
	$2 = (($2 << [1]) | (uint_32($3 >> [19]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$23 }
	$8 = ($8 + [512])
	$2 = ($2 - $4)
	$5 = ($5 + [1024])
	
.LABEL $label$23
	$4 = ($5 + [256])
	$2 = (($2 << [1]) | (uint_32($3 >> [18]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$24 }
	$8 = ($8 + [256])
	$2 = ($2 - $4)
	$5 = ($5 + [512])
	
.LABEL $label$24
	$4 = ($5 + [128])
	$2 = (($2 << [1]) | (uint_32($3 >> [17]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$25 }
	$8 = ($8 + [128])
	$2 = ($2 - $4)
	$5 = ($5 + [256])
	
.LABEL $label$25
	$4 = ($5 + [64])
	$2 = (($2 << [1]) | (uint_32($3 >> [16]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$26 }
	$8 = ($8 + [64])
	$2 = ($2 - $4)
	$5 = ($5 + [128])
	
.LABEL $label$26
	$4 = ($5 + [32])
	$2 = (($2 << [1]) | (uint_32($3 >> [15]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$27 }
	$8 = ($8 + [32])
	$2 = ($2 - $4)
	$5 = ($5 + [64])
	
.LABEL $label$27
	$4 = ($5 + [16])
	$2 = (($2 << [1]) | (uint_32($3 >> [14]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$28 }
	$8 = ($8 + [16])
	$2 = ($2 - $4)
	$5 = ($5 + [32])
	
.LABEL $label$28
	$4 = ($5 + [8])
	$2 = (($2 << [1]) | (uint_32($3 >> [13]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$29 }
	$8 = ($8 + [8])
	$2 = ($2 - $4)
	$5 = ($5 + [16])
	
.LABEL $label$29
	$4 = ($5 + [4])
	$2 = (($2 << [1]) | (uint_32($3 >> [12]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$30 }
	$8 = ($8 + [4])
	$2 = ($2 - $4)
	$5 = ($5 + [8])
	
.LABEL $label$30
	$4 = ($5 + [2])
	$2 = (($2 << [1]) | (uint_32($3 >> [11]) & [1]))
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$31 }
	$8 = ($8 + [2])
	$2 = ($2 - $4)
	$5 = ($5 + [4])
	
.LABEL $label$31
	$2 = ($5 + [1])
	$4 = (($2 << [1]) | (uint_32($3 >> [10]) & [1]))
	if ( ((int_32)$4 < (int_32)$2) ){ goto $label$32 }
	$8 = ($8 + [1])
	$4 = ($4 - $2)
	$5 = ($5 + [2])
	
.LABEL $label$32
	$2 = ($3 << [23])
	$3 = (($4 << [1]) | (uint_32($3 >> [9]) & [1]))
	$9 = uint_32($7 >> [1])
	$4 = [-2147483648]
	$10 = [0]
	$6 = [0]
	
.LOOP $label$33:
	$7 = ($6 + $4)
	if ( ((int_32)$3 > (int_32)$5) ){ goto $label$35 }
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$34 }
	if ( ($2 <= $7) ){ goto $label$34 }
	
.LABEL $label$35
	$3 = (($3 - $5) - ($2 <= $7))
	$6 = ($7 + $4)
	$5 = ($5 + (((int_32)$7 < (int_32)[0]) & ((int_32)$6 > (int_32)[-1])))
	$10 = ($10 + $4)
	$2 = ($2 - $7)
	
.LABEL $label$34
	$3 = (uint_32($2 >> [31]) | ($3 << [1]))
	$2 = ($2 << [1])
	$4 = uint_32($4 >> [1])
	if ( $4 ){ goto $label$33 }
	if ( (($2 | $3) == 0) ){ goto $label$36 }
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$37 }
	$10 = (($10 & [1]) + $10)
	goto $label$36 
	
.LABEL $label$37
	$8 = ($8 + [1])
	$10 = [0]
	
.LABEL $label$36
	$0 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 ((($9 << [20]) + int_32($8 >> [1])) + [1071644672])) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 (uint_32($10 >> [1]) | ($8 << [31])))))
	
.LABEL $label$2
	return $0
}

void .FUNC $44 ()
{
	CALL abort()
	(unreachable)
}

void .FUNC $167 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($1 + [8])
	$5 = (CASTING uint_32)(uint_64 $4)
	$6 = ((int_64)$4 & (int_64)255)
	$7 = (int_64)($6 == 0)
	if ( $7 ){ goto $label$2 }
	$8 = ((int_64)$6 + (int_64)1)
	$9 = (int_64)1
	
.LOOP $label$3:
	$9 = ((int_64)$9 * (int_64)10)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 > (int_64)1) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = (int_64)1
	
.LABEL $label$1
	$5 = ($5 & [255])
	$10 = ($2 - (($5 + [16]) & [496]))
	$2 = $10
	$global$0 = $2
	*(($11 = ($10 + $5))) = [0]
	$12 = *($1)
	if ( $7 ){ goto $label$4 }
	$8 = ((int_64)( (int_64)-1 ? (int_64)1 : ((int_64)$12 < (int_64)0) ) * (int_64)((int_64)$12 % (int_64)$9))
	$6 = ((int_64)$6 + (int_64)1)
	$1 = ($11 + [-1])
	
.LOOP $label$5:
	$13 = ((int_64)$8 / (int_64)10)
	*($1) = ((CASTING uint_32)(uint_64 (int_64))($8 - ((int_64)$13 * (int_64)10))) + [48])
	$1 = ($1 + [-1])
	$8 = $13
	$6 = ((int_64)$6 + (int_64)-1)
	if ( ((int_64)$6 > (int_64)1) ){ goto $label$5 }
	
.LABEL $label$4
	$11 = ($2 - (($5 + [47]) & [496]))
	$global$0 = $11
	$14 = ( [10159] ? [10961] : *($10) )
	$9 = ((int_64)$12 / (int_64)$9)
	$15 = ($5 + [32])
	$8 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( (int_64)($8) == 0) ){ goto $label$9 }
	$5 = [0]
	
.LOOP $label$11:
	*((($3 + [41]) + ($1 = $5))) = $8
	$5 = ($1 + [1])
	if ( ((uint_32)$1 > (uint_32)[5]) ){ goto $label$10 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$11 }
	
.LABEL $label$10
	*(($3 + [32])) = [0]
	*($3 + [24]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$8 }
	*($3 + [24]) = ($5 << [1])
	$2 = (($3 + [24]) | [1])
	goto $label$7 
	
.LABEL $label$9
	*(($3 + [32])) = [0]
	*($3 + [24]) = (int_64)0
	*($3 + [24]) = [0]
	$1 = (($3 + [24]) | [1])
	$5 = $1
	goto $label$6 
	
.LABEL $label$8
	$7 = (($5 + [16]) & [-16])
	$2 = CALL $9($7)
	*($3 + [24]) = ($7 | [1])
	*($3 + [32]) = $2
	*($3 + [28]) = $5
	
.LABEL $label$7
	$7 = ($1 + [1])
	$1 = [0]
	
.LOOP $label$12:
	*(($2 + $1)) = *((($3 + [41]) + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$12 }
	$5 = ($2 + $5)
	$1 = (($3 + [24]) | [1])
	
.LABEL $label$6
	*($5) = [0]
	*(($3 + [16])) = ( *($3 + [32]) ? $1 : (*($3 + [24]) & [1]) )
	*($3 + [12]) = $10
	*($3 + [8]) = $14
	*($3) = $9
	CALL $30($11, $15, [10949], $3)
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$13 }
	CALL $11(*(($3 + [32])))
	
.LABEL $label$13
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$1 = CALL $1($11)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$17 }
	*($0) = ($1 << [1])
	$5 = ($0 + [1])
	if ( $1 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$2 = (($1 + [16]) & [-16])
	$5 = CALL $9($2)
	*($0) = ($2 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $1
	
.LABEL $label$16
	CALL memcpy($5, $11, $1)
	
.LABEL $label$15
	*(($5 + $1)) = [0]
	$global$0 = ($3 + [48])
	return (unreachable)
	
.LABEL $label$14
	CALL $31($0)
}

void .FUNC $166 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_64 $5, int_32 $6, int_32 $7, int_32 $8, int_64 $9)
{
	int_32 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_64 $14
	int_32 $15
	int_32 $16
	int_64 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	$10 = ($global$0 - [384])
	$global$0 = $10
	$11 = *($4)
	if ( ((uint_64)((int_64)$11 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$2 }
	$12 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8)
	$13 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$14 = (uint_64)$12 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$12 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$12 = $14
	$15 = $13
	$13 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$12 = $14
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$12 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8)
	$15 = ((int_32)$13 < (int_32)[6])
	$16 = ($13 + [1])
	$13 = $16
	if ( $15 ){ goto $label$5 }
	$13 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [10516])
	
.LABEL $label$1
	$17 = *($3)
	if ( ((uint_64)((int_64)$17 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$7 }
	$12 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8)
	$13 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$14 = (uint_64)$12 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$12 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$12 = $14
	$15 = $13
	$13 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$12 = $14
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$12 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8)
	$15 = ((int_32)$13 < (int_32)[6])
	$16 = ($13 + [1])
	$13 = $16
	if ( $15 ){ goto $label$10 }
	$13 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [10516])
	
.LABEL $label$6
	$18 = ($0 + [152])
	$15 = *(($0 + [180]))
	$16 = *(($0 + [176]))
	if ( ((int_32)$16 == (int_32)$15) ){ goto $label$12 }
	
.LOOP $label$14:
	$13 = ($15 + [-24])
	$19 = *($13)
	if ( ((int_64)*($19) == (int_64)$9) ){ goto $label$13 }
	$15 = $13
	if ( ((int_32)$16 != (int_32)$13) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	if ( ((int_32)$16 == (int_32)$15) ){ goto $label$12 }
	if ( ((int_32)*(($19 + [76])) == (int_32)$18) ){ goto $label$11 }
	CALL eosio_assert([0], [9275])
	goto $label$11 
	
.LABEL $label$12
	$19 = [0]
	$13 = CALL db_find_i64(*($18), *(($0 + [160])), (int_64)-4156459970285535232, $9)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$11 }
	$19 = CALL $76($18, $13)
	if ( ((int_32)*($19 + [76]) == (int_32)$18) ){ goto $label$11 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$11
	$13 = CALL $1([9134])
	if ( ($13 <= [8]) ){ goto $label$18 }
	CALL eosio_assert([0], [9177])
	goto $label$17 
	
.LABEL $label$18
	if ( ($13 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	$12 = (int_64)0
	
.LOOP $label$19:
	$15 = *(($13 + [9133]))
	if ( ((($15 + [-65]) & [255]) <= [26]) ){ goto $label$20 }
	CALL eosio_assert([0], [9222])
	
.LABEL $label$20
	$12 = ((int_64)((int_64)$12 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $15) << (int_64)56) >> (int_64)56))
	$13 = ($13 + [-1])
	if ( $13 ){ goto $label$19 }
	$14 = ((int_64)$12 << (int_64)8)
	goto $label$15 
	
.LABEL $label$16
	$14 = (int_64)0
	
.LABEL $label$15
	$12 = (uint_64)$14 >> (uint_64)(int_64)8)
	$20 = ((int_64)$14 | (int_64)4)
	$13 = [0]
	
.LOOP $label$24:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$23 }
	$14 = (uint_64)$12 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$12 & (int_64)65280) == (int_64)0) ){ goto $label$26 }
	$12 = $14
	$15 = $13
	$13 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[6]) ){ goto $label$24 }
	goto $label$25 
	
.LABEL $label$26
	$12 = $14
	
.LOOP $label$27:
	if ( ((int_64)((int_64)$12 & (int_64)65280) != (int_64)0) ){ goto $label$23 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8)
	$15 = ((int_32)$13 < (int_32)[6])
	$16 = ($13 + [1])
	$13 = $16
	if ( $15 ){ goto $label$27 }
	$13 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[6]) ){ goto $label$24 }
	
.LABEL $label$25
	$21 = *($4 + [8])
	if ( ((int_64)$21 == (int_64)$20) ){ goto $label$21 }
	goto $label$22 
	
.LABEL $label$23
	CALL eosio_assert([0], [10102])
	$21 = *($4 + [8])
	if ( ((int_64)$21 == (int_64)$20) ){ goto $label$21 }
	
.LABEL $label$22
	CALL eosio_assert([0], [10890])
	
.LABEL $label$21
	if ( ((int_64)$11 == (int_64)0) ){ goto $label$31 }
	$20 = *($19 + [32])
	$12 = (uint_64)$20 >> (uint_64)(int_64)8)
	$13 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$14 = (uint_64)$12 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$12 & (int_64)65280) == (int_64)0) ){ goto $label$35 }
	$12 = $14
	$15 = $13
	$13 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[6]) ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$35
	$12 = $14
	
.LOOP $label$36:
	if ( ((int_64)((int_64)$12 & (int_64)65280) != (int_64)0) ){ goto $label$32 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8)
	$15 = ((int_32)$13 < (int_32)[6])
	$16 = ($13 + [1])
	$13 = $16
	if ( $15 ){ goto $label$36 }
	$13 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[6]) ){ goto $label$33 }
	
.LABEL $label$34
	$12 = *($3 + [8])
	if ( ((int_64)$12 == (int_64)$20) ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$32
	CALL eosio_assert([0], [10102])
	$12 = *($3 + [8])
	if ( ((int_64)$12 != (int_64)$20) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$31
	*($10 + [336]) = (int_64)3617214756542218240
	$9 = *($0)
	*($10 + [328]) = $9
	$14 = *($19 + [8])
	CALL $83(($10 + [168]), ($0 + [264]), [10148])
	$13 = *($0 + [276])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [168]), ( *(($0 + [284])) ? ($0 + [277]) : $15 ), ( *(($0 + [280])) ? uint_32($13 >> [1]) : $15 ))
	$16 = ($13 + [8])
	*((($10 + [184]) + [8])) = *($16)
	*($10 + [184]) = *($13)
	*($13) = (int_64)0
	$15 = [0]
	*($16) = [0]
	$12 = (uint_64)*($19 + [32]) >> (uint_64)(int_64)8
	if ( (int_64)($12) == 0) ){ goto $label$40 }
	
.LOOP $label$42:
	*((($10 + [280]) + ($13 = $15))) = $12
	$15 = ($13 + [1])
	if ( ((uint_32)$13 > (uint_32)[5]) ){ goto $label$41 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$42 }
	
.LABEL $label$41
	*(($10 + [160])) = [0]
	*($10 + [152]) = (int_64)0
	if ( ((uint_32)$15 >= (uint_32)[11]) ){ goto $label$39 }
	*($10 + [152]) = ($15 << [1])
	$16 = (($10 + [152]) | [1])
	goto $label$38 
	
.LABEL $label$40
	*((($10 + [152]) + [8])) = [0]
	*($10 + [152]) = (int_64)0
	*($10 + [152]) = [0]
	$13 = (($10 + [152]) | [1])
	$15 = $13
	goto $label$37 
	
.LABEL $label$39
	$19 = (($15 + [16]) & [-16])
	$16 = CALL $9($19)
	*($10 + [152]) = ($19 | [1])
	*($10 + [160]) = $16
	*($10 + [156]) = $15
	
.LABEL $label$38
	$19 = ($13 + [1])
	$13 = [0]
	
.LOOP $label$43:
	*(($16 + $13)) = *((($10 + [280]) + $13))
	$13 = ($13 + [1])
	if ( ((int_32)$19 != (int_32)$13) ){ goto $label$43 }
	$15 = ($16 + $15)
	$13 = (($10 + [152]) | [1])
	
.LABEL $label$37
	*($15) = [0]
	$15 = *($10 + [152])
	$16 = ($15 & [1])
	$13 = CALL $37(($10 + [184]), ( *($10 + [160]) ? $13 : $16 ), ( *($10 + [156]) ? uint_32($15 >> [1]) : $16 ))
	$15 = ($13 + [8])
	*((($10 + [200]) + [8])) = *($15)
	*($10 + [200]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	$13 = *($0 + [288])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [200]), ( *(($0 + [296])) ? ($0 + [289]) : $15 ), ( *(($0 + [292])) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [216]) + [8])) = *($15)
	*($10 + [216]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	CALL $84(($10 + [136]), $0, $5, [8])
	$13 = *($10 + [136])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [216]), ( *($10 + [144]) ? (($10 + [136]) | [1]) : $15 ), ( *($10 + [140]) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [232]) + [8])) = *($15)
	*($10 + [232]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	$13 = *($0 + [324])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [232]), ( *(($0 + [332])) ? ($0 + [325]) : $15 ), ( *(($0 + [328])) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [248]) + [8])) = *($15)
	*($10 + [248]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	$13 = *($7)
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [248]), ( *($7 + [8]) ? ($7 + [1]) : $15 ), ( *($7 + [4]) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [264]) + [8])) = *($15)
	*($10 + [264]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	$13 = *($0 + [312])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [264]), ( *(($0 + [320])) ? ($0 + [313]) : $15 ), ( *(($0 + [316])) ? uint_32($13 >> [1]) : $15 ))
	$15 = *($13 + [8])
	*($13 + [8]) = [0]
	$12 = *($13)
	*($13) = (int_64)0
	*(($10 + [304])) = *(($3 + [8]))
	*(($10 + [320])) = $15
	*($10 + [280]) = $9
	*($10 + [288]) = $1
	*($10 + [296]) = *($3)
	*($10 + [312]) = $12
	$13 = CALL $85(($10 + [344]), ($10 + [328]), $14, (int_64)-3617168760277827584, ($10 + [280]))
	CALL $86($13)
	$15 = *($13 + [28])
	if ( ($15 == 0) ){ goto $label$44 }
	*(($13 + [32])) = $15
	CALL $11($15)
	
.LABEL $label$44
	$15 = *($13 + [16])
	if ( ($15 == 0) ){ goto $label$45 }
	*(($13 + [20])) = $15
	CALL $11($15)
	
.LABEL $label$45
	if ( (*($10 + [312]) & [1]) ){ goto $label$63 }
	if ( (*($10 + [264]) & [1]) ){ goto $label$62 }
	goto $label$61 
	
.LABEL $label$63
	CALL $11(*(($10 + [320])))
	if ( ((*($10 + [264]) & [1]) == 0) ){ goto $label$61 }
	
.LABEL $label$62
	CALL $11(*($10 + [272]))
	$13 = [1]
	if ( ((*($10 + [248]) & [1]) == 0) ){ goto $label$60 }
	goto $label$59 
	
.LABEL $label$61
	$13 = [1]
	if ( (*($10 + [248]) & [1]) ){ goto $label$59 }
	
.LABEL $label$60
	if ( (*($10 + [232]) & $13) ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$59
	CALL $11(*($10 + [256]))
	if ( ((*($10 + [232]) & $13) == 0) ){ goto $label$57 }
	
.LABEL $label$58
	CALL $11(*($10 + [240]))
	$13 = [1]
	if ( ((*($10 + [136]) & [1]) == 0) ){ goto $label$56 }
	goto $label$55 
	
.LABEL $label$57
	$13 = [1]
	if ( (*($10 + [136]) & [1]) ){ goto $label$55 }
	
.LABEL $label$56
	if ( (*($10 + [216]) & $13) ){ goto $label$54 }
	goto $label$53 
	
.LABEL $label$55
	CALL $11(*(($10 + [144])))
	if ( ((*($10 + [216]) & $13) == 0) ){ goto $label$53 }
	
.LABEL $label$54
	CALL $11(*($10 + [224]))
	$13 = [1]
	if ( ((*($10 + [200]) & [1]) == 0) ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$53
	$13 = [1]
	if ( (*($10 + [200]) & [1]) ){ goto $label$51 }
	
.LABEL $label$52
	if ( (*($10 + [152]) & $13) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$51
	CALL $11(*($10 + [208]))
	if ( ((*($10 + [152]) & $13) == 0) ){ goto $label$49 }
	
.LABEL $label$50
	CALL $11(*(($10 + [160])))
	$13 = [1]
	if ( ((*($10 + [184]) & [1]) == 0) ){ goto $label$48 }
	goto $label$47 
	
.LABEL $label$49
	$13 = [1]
	if ( (*($10 + [184]) & [1]) ){ goto $label$47 }
	
.LABEL $label$48
	if ( (*($10 + [168]) & $13) ){ goto $label$46 }
	goto $label$28 
	
.LABEL $label$47
	CALL $11(*($10 + [192]))
	if ( ((*($10 + [168]) & $13) == 0) ){ goto $label$28 }
	
.LABEL $label$46
	CALL $11(*($10 + [176]))
	goto $label$28 
	
.LABEL $label$30
	CALL eosio_assert([0], [10890])
	
.LABEL $label$29
	if ( ((int_64)$17 == (int_64)0) ){ goto $label$88 }
	if ( ((int_64)$12 == (int_64)*(($0 + [200]))) ){ goto $label$89 }
	CALL eosio_assert([0], [10630])
	
.LABEL $label$89
	$14 = ((int_64)*($0 + [192]) + (int_64)$17)
	*($0 + [192]) = $14
	if ( ((int_64)$14 > (int_64)-4611686018427387904) ){ goto $label$90 }
	CALL eosio_assert([0], [10673])
	$14 = *(($0 + [192]))
	
.LABEL $label$90
	if ( ((int_64)$14 < (int_64)4611686018427387904) ){ goto $label$91 }
	CALL eosio_assert([0], [10692])
	
.LABEL $label$91
	CALL __multi3(($10 + [40]), $17, (int_64)$17 >> (int_64)63), $5, (int_64)$5 >> (int_64)63))
	$14 = *(($10 + [48]))
	$17 = *($10 + [40])
	if ( (( (uint_64)($17 <= (int_64)4611686018427387904) ? ((int_64)$14 < (int_64)0) : (int_64)($14 == 0) ) == 0) ){ goto $label$87 }
	if ( ( ((uint_64)$17 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$14 > (int_64)-1) : ((int_64)$14 == (int_64)-1) ) ){ goto $label$86 }
	CALL eosio_assert([0], [10734])
	goto $label$86 
	
.LABEL $label$88
	*($10 + [336]) = (int_64)3617214756542218240
	*($10 + [328]) = *($0)
	*($10 + [120]) = [9138]
	*($10 + [124]) = CALL $1([9138])
	*($10 + [8]) = *($10 + [120])
	$3 = CALL $50(($10 + [128]), ($10 + [8]))
	$9 = *($0)
	CALL $83(($10 + [168]), ($0 + [264]), [10148])
	$13 = *($0 + [276])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [168]), ( *(($0 + [284])) ? ($0 + [277]) : $15 ), ( *(($0 + [280])) ? uint_32($13 >> [1]) : $15 ))
	$16 = ($13 + [8])
	*((($10 + [184]) + [8])) = *($16)
	*($10 + [184]) = *($13)
	*($13) = (int_64)0
	$15 = [0]
	*($16) = [0]
	$12 = (uint_64)*(($19 + [32])) >> (uint_64)(int_64)8
	if ( (int_64)($12) == 0) ){ goto $label$85 }
	
.LOOP $label$93:
	*((($10 + [280]) + ($13 = $15))) = $12
	$15 = ($13 + [1])
	if ( ((uint_32)$13 > (uint_32)[5]) ){ goto $label$92 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$93 }
	
.LABEL $label$92
	*(($10 + [160])) = [0]
	*($10 + [152]) = (int_64)0
	if ( ((uint_32)$15 >= (uint_32)[11]) ){ goto $label$84 }
	*($10 + [152]) = ($15 << [1])
	$16 = (($10 + [152]) | [1])
	goto $label$83 
	
.LABEL $label$87
	CALL eosio_assert([0], [10710])
	
.LABEL $label$86
	if ( ((int_64)$12 == (int_64)*(($0 + [232]))) ){ goto $label$94 }
	CALL eosio_assert([0], [10630])
	
.LABEL $label$94
	$12 = ((int_64)*($0 + [224]) + (int_64)$17)
	*($0 + [224]) = $12
	if ( ((int_64)$12 > (int_64)-4611686018427387904) ){ goto $label$95 }
	CALL eosio_assert([0], [10673])
	$12 = *(($0 + [224]))
	
.LABEL $label$95
	if ( ((int_64)$12 < (int_64)4611686018427387904) ){ goto $label$96 }
	CALL eosio_assert([0], [10692])
	
.LABEL $label$96
	$13 = CALL $1([9134])
	if ( ($13 <= [8]) ){ goto $label$98 }
	CALL eosio_assert([0], [9177])
	goto $label$97 
	
.LABEL $label$98
	if ( ($13 == 0) ){ goto $label$81 }
	
.LABEL $label$97
	$12 = (int_64)0
	
.LOOP $label$99:
	$15 = *(($13 + [9133]))
	if ( ((($15 + [-65]) & [255]) <= [26]) ){ goto $label$100 }
	CALL eosio_assert([0], [9222])
	
.LABEL $label$100
	$12 = ((int_64)((int_64)$12 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $15) << (int_64)56) >> (int_64)56))
	$13 = ($13 + [-1])
	if ( $13 ){ goto $label$99 }
	$14 = ((int_64)$12 << (int_64)8)
	goto $label$64 
	
.LABEL $label$85
	*((($10 + [152]) + [8])) = [0]
	*($10 + [152]) = (int_64)0
	*($10 + [152]) = [0]
	$16 = (($10 + [152]) | [1])
	$13 = $16
	goto $label$82 
	
.LABEL $label$84
	$19 = (($15 + [16]) & [-16])
	$16 = CALL $9($19)
	*($10 + [152]) = ($19 | [1])
	*($10 + [160]) = $16
	*($10 + [156]) = $15
	
.LABEL $label$83
	$19 = ($13 + [1])
	$13 = [0]
	
.LOOP $label$101:
	*(($16 + $13)) = *((($10 + [280]) + $13))
	$13 = ($13 + [1])
	if ( ((int_32)$19 != (int_32)$13) ){ goto $label$101 }
	$13 = ($16 + $15)
	$16 = (($10 + [152]) | [1])
	
.LABEL $label$82
	*($13) = [0]
	$13 = *($10 + [152])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [184]), ( *($10 + [160]) ? $16 : $15 ), ( *($10 + [156]) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [200]) + [8])) = *($15)
	*($10 + [200]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	$13 = *($0 + [288])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [200]), ( *(($0 + [296])) ? ($0 + [289]) : $15 ), ( *(($0 + [292])) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [216]) + [8])) = *($15)
	*($10 + [216]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	CALL $84(($10 + [136]), $0, $5, [8])
	$13 = *($10 + [136])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [216]), ( *($10 + [144]) ? (($10 + [136]) | [1]) : $15 ), ( *($10 + [140]) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [232]) + [8])) = *($15)
	*($10 + [232]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	$13 = *($0 + [324])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [232]), ( *(($0 + [332])) ? ($0 + [325]) : $15 ), ( *(($0 + [328])) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [248]) + [8])) = *($15)
	*($10 + [248]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	$13 = *($7)
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [248]), ( *($7 + [8]) ? ($7 + [1]) : $15 ), ( *($7 + [4]) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [264]) + [8])) = *($15)
	*($10 + [264]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	$13 = *($0 + [312])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [264]), ( *(($0 + [320])) ? ($0 + [313]) : $15 ), ( *(($0 + [316])) ? uint_32($13 >> [1]) : $15 ))
	$15 = *($13 + [8])
	*($13 + [8]) = [0]
	$12 = *($13)
	*($13) = (int_64)0
	*(($10 + [304])) = *(($4 + [8]))
	*(($10 + [320])) = $15
	*($10 + [280]) = $9
	*($10 + [288]) = $2
	*($10 + [296]) = *($4)
	*($10 + [312]) = $12
	$13 = CALL $85(($10 + [344]), ($10 + [328]), *($3), (int_64)-3617168760277827584, ($10 + [280]))
	CALL $86($13)
	$15 = *($13 + [28])
	if ( ($15 == 0) ){ goto $label$102 }
	*(($13 + [32])) = $15
	CALL $11($15)
	
.LABEL $label$102
	$15 = *($13 + [16])
	if ( ($15 == 0) ){ goto $label$103 }
	*(($13 + [20])) = $15
	CALL $11($15)
	
.LABEL $label$103
	if ( (*($10 + [312]) & [1]) ){ goto $label$105 }
	if ( (*($10 + [264]) & [1]) ){ goto $label$104 }
	goto $label$80 
	
.LABEL $label$105
	CALL $11(*(($10 + [320])))
	if ( ((*($10 + [264]) & [1]) == 0) ){ goto $label$80 }
	
.LABEL $label$104
	CALL $11(*($10 + [272]))
	$13 = [1]
	if ( ((*($10 + [248]) & [1]) == 0) ){ goto $label$79 }
	goto $label$78 
	
.LABEL $label$81
	$14 = (int_64)0
	goto $label$64 
	
.LABEL $label$80
	$13 = [1]
	if ( (*($10 + [248]) & [1]) ){ goto $label$78 }
	
.LABEL $label$79
	if ( (*($10 + [232]) & $13) ){ goto $label$77 }
	goto $label$76 
	
.LABEL $label$78
	CALL $11(*($10 + [256]))
	if ( ((*($10 + [232]) & $13) == 0) ){ goto $label$76 }
	
.LABEL $label$77
	CALL $11(*($10 + [240]))
	$13 = [1]
	if ( ((*($10 + [136]) & [1]) == 0) ){ goto $label$75 }
	goto $label$74 
	
.LABEL $label$76
	$13 = [1]
	if ( (*($10 + [136]) & [1]) ){ goto $label$74 }
	
.LABEL $label$75
	if ( (*($10 + [216]) & $13) ){ goto $label$73 }
	goto $label$72 
	
.LABEL $label$74
	CALL $11(*(($10 + [144])))
	if ( ((*($10 + [216]) & $13) == 0) ){ goto $label$72 }
	
.LABEL $label$73
	CALL $11(*($10 + [224]))
	$13 = [1]
	if ( ((*($10 + [200]) & [1]) == 0) ){ goto $label$71 }
	goto $label$70 
	
.LABEL $label$72
	$13 = [1]
	if ( (*($10 + [200]) & [1]) ){ goto $label$70 }
	
.LABEL $label$71
	if ( (*($10 + [152]) & $13) ){ goto $label$69 }
	goto $label$68 
	
.LABEL $label$70
	CALL $11(*($10 + [208]))
	if ( ((*($10 + [152]) & $13) == 0) ){ goto $label$68 }
	
.LABEL $label$69
	CALL $11(*(($10 + [160])))
	$13 = [1]
	if ( ((*($10 + [184]) & [1]) == 0) ){ goto $label$67 }
	goto $label$66 
	
.LABEL $label$68
	$13 = [1]
	if ( (*($10 + [184]) & [1]) ){ goto $label$66 }
	
.LABEL $label$67
	if ( (*($10 + [168]) & $13) ){ goto $label$65 }
	goto $label$28 
	
.LABEL $label$66
	CALL $11(*($10 + [192]))
	if ( ((*($10 + [168]) & $13) == 0) ){ goto $label$28 }
	
.LABEL $label$65
	CALL $11(*($10 + [176]))
	goto $label$28 
	
.LABEL $label$64
	$12 = (uint_64)$14 >> (uint_64)(int_64)8)
	$17 = ((int_64)$14 | (int_64)4)
	$13 = [0]
	
.LOOP $label$108:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$107 }
	$14 = (uint_64)$12 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$12 & (int_64)65280) == (int_64)0) ){ goto $label$109 }
	$12 = $14
	$15 = $13
	$13 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[6]) ){ goto $label$108 }
	goto $label$106 
	
.LABEL $label$109
	$12 = $14
	
.LOOP $label$110:
	if ( ((int_64)((int_64)$12 & (int_64)65280) != (int_64)0) ){ goto $label$107 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8)
	$15 = ((int_32)$13 < (int_32)[6])
	$16 = ($13 + [1])
	$13 = $16
	if ( $15 ){ goto $label$110 }
	$13 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[6]) ){ goto $label$108 }
	goto $label$106 
	
.LABEL $label$107
	CALL eosio_assert([0], [10102])
	
.LABEL $label$106
	if ( ((int_64)$21 == (int_64)$17) ){ goto $label$111 }
	CALL eosio_assert([0], [10890])
	
.LABEL $label$111
	if ( ((int_64)$11 < (int_64)1000) ){ goto $label$112 }
	$12 = (int_64)
	CALL __multi3(($10 + [24]), $12((int_64)1000 - *($19 + [56]))), (int_64)$12 >> (int_64)63), $11, (int_64)$11 >> (int_64)63))
	$12 = *(($10 + [32]))
	$14 = *($10 + [24])
	if ( (( (uint_64)($14 <= (int_64)4611686018427387904) ? ((int_64)$12 < (int_64)0) : (int_64)($12 == 0) ) == 0) ){ goto $label$114 }
	if ( ( ((uint_64)$14 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$12 > (int_64)-1) : ((int_64)$12 == (int_64)-1) ) ){ goto $label$113 }
	CALL eosio_assert([0], [10734])
	goto $label$113 
	
.LABEL $label$114
	CALL eosio_assert([0], [10710])
	
.LABEL $label$113
	$12 = *(($4 + [8]))
	*((($10 + [280]) + [8])) = $12
	*($10 + [280]) = *($4)
	$11 = ((int_64)$14 / (int_64)1000)
	if ( ((int_64)$21 == (int_64)$12) ){ goto $label$115 }
	CALL eosio_assert([0], [10799])
	
.LABEL $label$115
	$12 = (int_64)
	*($10 + [280]) = $12(*($10 + [280]) - $11))
	if ( ((int_64)$12 <= (int_64)-4611686018427387904) ){ goto $label$117 }
	if ( ((int_64)$12 < (int_64)4611686018427387904) ){ goto $label$116 }
	CALL eosio_assert([0], [10869])
	goto $label$116 
	
.LABEL $label$117
	CALL eosio_assert([0], [10847])
	
.LABEL $label$116
	$3 = ($0 + [112])
	*($10 + [264]) = $3
	*($10 + [328]) = (int_64)-2
	CALL $153(($10 + [344]), ($10 + [264]), ($10 + [328]))
	if ( (int_64)(*($10 + [280]) == 0) ){ goto $label$112 }
	$12 = CALL $96($0, $8, $9)
	$15 = *(($0 + [140]))
	$4 = *(($0 + [136]))
	if ( ((int_32)$4 == (int_32)$15) ){ goto $label$119 }
	
.LOOP $label$121:
	$13 = ($15 + [-24])
	$16 = *($13)
	if ( ((int_64)*($16) == (int_64)$12) ){ goto $label$120 }
	$15 = $13
	if ( ((int_32)$4 != (int_32)$13) ){ goto $label$121 }
	goto $label$119 
	
.LABEL $label$120
	if ( ((int_32)$4 == (int_32)$15) ){ goto $label$119 }
	if ( ((int_32)*($16 + [80]) == (int_32)$3) ){ goto $label$118 }
	CALL eosio_assert([0], [9275])
	goto $label$118 
	
.LABEL $label$119
	$13 = CALL db_find_i64(*(($0 + [112])), *(($0 + [120])), (int_64)-4154952186784120832, $12)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$112 }
	$16 = CALL $97($3, $13)
	if ( ((int_32)*($16 + [80]) == (int_32)$3) ){ goto $label$118 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$118
	*((($10 + [344]) + [8])) = *((($10 + [280]) + [8]))
	*($10 + [344]) = *($10 + [280])
	$14 = *($16 + [40])
	if ( ((int_64)$14 == (int_64)0) ){ goto $label$123 }
	$12 = *($10 + [344])
	if ( ((int_64)$14 != (int_64)-1) ){ goto $label$122 }
	if ( ((int_64)$12 != (int_64)-9223372036854775808) ){ goto $label$122 }
	CALL eosio_assert([0], [10774])
	$12 = (int_64)-9223372036854775808
	goto $label$122 
	
.LABEL $label$123
	CALL eosio_assert([0], [10759])
	$12 = *($10 + [344])
	
.LABEL $label$122
	*($10 + [344]) = ((int_64)$12 / (int_64)$14)
	$12 = *($0)
	*($10 + [328]) = ($10 + [344])
	CALL $179($3, $16, $12, ($10 + [328]))
	$15 = *(($0 + [140]))
	$4 = *(($0 + [136]))
	if ( ((int_32)$4 == (int_32)$15) ){ goto $label$125 }
	
.LOOP $label$127:
	$13 = ($15 + [-24])
	$16 = *($13)
	if ( (int_64)(*($16) == 0) ){ goto $label$126 }
	$15 = $13
	if ( ((int_32)$4 != (int_32)$13) ){ goto $label$127 }
	goto $label$125 
	
.LABEL $label$126
	if ( ((int_32)$4 == (int_32)$15) ){ goto $label$125 }
	if ( ((int_32)*($16 + [80]) == (int_32)$3) ){ goto $label$124 }
	CALL eosio_assert([0], [9275])
	goto $label$124 
	
.LABEL $label$125
	$16 = [0]
	$13 = CALL db_find_i64(*(($0 + [112])), *(($0 + [120])), (int_64)-4154952186784120832, (int_64)0)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$124 }
	$16 = CALL $97($3, $13)
	if ( ((int_32)*($16 + [80]) == (int_32)$3) ){ goto $label$124 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$124
	$12 = CALL $96($0, ($16 + [48]), $9)
	$15 = *(($0 + [140]))
	$4 = *(($0 + [136]))
	if ( ((int_32)$4 == (int_32)$15) ){ goto $label$129 }
	
.LOOP $label$131:
	$13 = ($15 + [-24])
	$16 = *($13)
	if ( ((int_64)*($16) == (int_64)$12) ){ goto $label$130 }
	$15 = $13
	if ( ((int_32)$4 != (int_32)$13) ){ goto $label$131 }
	goto $label$129 
	
.LABEL $label$130
	if ( ((int_32)$4 == (int_32)$15) ){ goto $label$129 }
	if ( ((int_32)*($16 + [80]) == (int_32)$3) ){ goto $label$128 }
	CALL eosio_assert([0], [9275])
	goto $label$128 
	
.LABEL $label$129
	$16 = [0]
	$13 = CALL db_find_i64(*(($0 + [112])), *(($0 + [120])), (int_64)-4154952186784120832, $12)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$128 }
	$16 = CALL $97($3, $13)
	if ( ((int_32)*($16 + [80]) == (int_32)$3) ){ goto $label$128 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$128
	$12 = *($0)
	*($10 + [332]) = ($10 + [344])
	*($10 + [328]) = ($10 + [280])
	if ( $16 ){ goto $label$132 }
	CALL eosio_assert([0], [8651])
	
.LABEL $label$132
	CALL $180($3, $16, $12, ($10 + [328]))
	
.LABEL $label$112
	if ( (int_64)($11 == 0) ){ goto $label$28 }
	*($10 + [336]) = (int_64)3617214756542218240
	*($10 + [328]) = *($0)
	*($10 + [104]) = [9138]
	*($10 + [108]) = CALL $1([9138])
	*($10 + [16]) = *($10 + [104])
	$4 = CALL $50(($10 + [112]), ($10 + [16]))
	$9 = *($0)
	CALL $83(($10 + [136]), ($0 + [264]), [10587])
	$13 = *($0 + [276])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [136]), ( *(($0 + [284])) ? ($0 + [277]) : $15 ), ( *(($0 + [280])) ? uint_32($13 >> [1]) : $15 ))
	$16 = ($13 + [8])
	*((($10 + [152]) + [8])) = *($16)
	*($10 + [152]) = *($13)
	*($13) = (int_64)0
	$15 = [0]
	*($16) = [0]
	$12 = (uint_64)*(($19 + [32])) >> (uint_64)(int_64)8
	if ( (int_64)($12) == 0) ){ goto $label$136 }
	
.LOOP $label$138:
	*((($10 + [280]) + ($13 = $15))) = $12
	$15 = ($13 + [1])
	if ( ((uint_32)$13 > (uint_32)[5]) ){ goto $label$137 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$138 }
	
.LABEL $label$137
	*(($10 + [96])) = [0]
	*($10 + [88]) = (int_64)0
	if ( ((uint_32)$15 >= (uint_32)[11]) ){ goto $label$135 }
	*($10 + [88]) = ($15 << [1])
	$16 = (($10 + [88]) | [1])
	goto $label$134 
	
.LABEL $label$136
	*((($10 + [88]) + [8])) = [0]
	*($10 + [88]) = (int_64)0
	*($10 + [88]) = [0]
	$13 = (($10 + [88]) | [1])
	$15 = $13
	goto $label$133 
	
.LABEL $label$135
	$19 = (($15 + [16]) & [-16])
	$16 = CALL $9($19)
	*($10 + [88]) = ($19 | [1])
	*($10 + [96]) = $16
	*($10 + [92]) = $15
	
.LABEL $label$134
	$19 = ($13 + [1])
	$13 = [0]
	
.LOOP $label$139:
	*(($16 + $13)) = *((($10 + [280]) + $13))
	$13 = ($13 + [1])
	if ( ((int_32)$19 != (int_32)$13) ){ goto $label$139 }
	$15 = ($16 + $15)
	$13 = (($10 + [88]) | [1])
	
.LABEL $label$133
	*($15) = [0]
	$15 = *($10 + [88])
	$16 = ($15 & [1])
	$13 = CALL $37(($10 + [152]), ( *($10 + [96]) ? $13 : $16 ), ( *($10 + [92]) ? uint_32($15 >> [1]) : $16 ))
	$15 = ($13 + [8])
	*((($10 + [168]) + [8])) = *($15)
	*($10 + [168]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	$13 = *($0 + [288])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [168]), ( *(($0 + [296])) ? ($0 + [289]) : $15 ), ( *(($0 + [292])) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [184]) + [8])) = *($15)
	*($10 + [184]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	CALL $84(($10 + [72]), $0, $5, [8])
	$13 = *($10 + [72])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [184]), ( *($10 + [80]) ? (($10 + [72]) | [1]) : $15 ), ( *($10 + [76]) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [200]) + [8])) = *($15)
	*($10 + [200]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	$13 = *($0 + [300])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [200]), ( *(($0 + [308])) ? ($0 + [301]) : $15 ), ( *(($0 + [304])) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [216]) + [8])) = *($15)
	*($10 + [216]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	CALL $84(($10 + [56]), $0, $5, [8])
	$13 = *($10 + [56])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [216]), ( *($10 + [64]) ? (($10 + [56]) | [1]) : $15 ), ( *($10 + [60]) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [232]) + [8])) = *($15)
	*($10 + [232]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	$13 = *($0 + [324])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [232]), ( *(($0 + [332])) ? ($0 + [325]) : $15 ), ( *(($0 + [328])) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [248]) + [8])) = *($15)
	*($10 + [248]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	$13 = *($6)
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [248]), ( *($6 + [8]) ? ($6 + [1]) : $15 ), ( *($6 + [4]) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [264]) + [8])) = *($15)
	*($10 + [264]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	$13 = *($0 + [312])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [264]), ( *(($0 + [320])) ? ($0 + [313]) : $15 ), ( *(($0 + [316])) ? uint_32($13 >> [1]) : $15 ))
	$15 = *($13 + [8])
	*($13 + [8]) = [0]
	$12 = *($13)
	*($13) = (int_64)0
	*(($10 + [304])) = $21
	*(($10 + [320])) = $15
	*($10 + [288]) = $2
	*($10 + [280]) = $9
	*($10 + [296]) = $11
	*($10 + [312]) = $12
	$13 = CALL $85(($10 + [344]), ($10 + [328]), *($4), (int_64)-3617168760277827584, ($10 + [280]))
	CALL $86($13)
	$15 = *($13 + [28])
	if ( ($15 == 0) ){ goto $label$140 }
	*(($13 + [32])) = $15
	CALL $11($15)
	
.LABEL $label$140
	$15 = *($13 + [16])
	if ( ($15 == 0) ){ goto $label$141 }
	*(($13 + [20])) = $15
	CALL $11($15)
	
.LABEL $label$141
	if ( (*($10 + [312]) & [1]) ){ goto $label$165 }
	if ( (*($10 + [264]) & [1]) ){ goto $label$164 }
	goto $label$163 
	
.LABEL $label$165
	CALL $11(*(($10 + [320])))
	if ( ((*($10 + [264]) & [1]) == 0) ){ goto $label$163 }
	
.LABEL $label$164
	CALL $11(*($10 + [272]))
	$13 = [1]
	if ( ((*($10 + [248]) & [1]) == 0) ){ goto $label$162 }
	goto $label$161 
	
.LABEL $label$163
	$13 = [1]
	if ( (*($10 + [248]) & [1]) ){ goto $label$161 }
	
.LABEL $label$162
	if ( (*($10 + [232]) & $13) ){ goto $label$160 }
	goto $label$159 
	
.LABEL $label$161
	CALL $11(*($10 + [256]))
	if ( ((*($10 + [232]) & $13) == 0) ){ goto $label$159 }
	
.LABEL $label$160
	CALL $11(*($10 + [240]))
	$13 = [1]
	if ( ((*($10 + [56]) & [1]) == 0) ){ goto $label$158 }
	goto $label$157 
	
.LABEL $label$159
	$13 = [1]
	if ( (*($10 + [56]) & [1]) ){ goto $label$157 }
	
.LABEL $label$158
	if ( (*($10 + [216]) & $13) ){ goto $label$156 }
	goto $label$155 
	
.LABEL $label$157
	CALL $11(*(($10 + [64])))
	if ( ((*($10 + [216]) & $13) == 0) ){ goto $label$155 }
	
.LABEL $label$156
	CALL $11(*($10 + [224]))
	$13 = [1]
	if ( ((*($10 + [200]) & [1]) == 0) ){ goto $label$154 }
	goto $label$153 
	
.LABEL $label$155
	$13 = [1]
	if ( (*($10 + [200]) & [1]) ){ goto $label$153 }
	
.LABEL $label$154
	if ( (*($10 + [72]) & $13) ){ goto $label$152 }
	goto $label$151 
	
.LABEL $label$153
	CALL $11(*($10 + [208]))
	if ( ((*($10 + [72]) & $13) == 0) ){ goto $label$151 }
	
.LABEL $label$152
	CALL $11(*(($10 + [80])))
	$13 = [1]
	if ( ((*($10 + [184]) & [1]) == 0) ){ goto $label$150 }
	goto $label$149 
	
.LABEL $label$151
	$13 = [1]
	if ( (*($10 + [184]) & [1]) ){ goto $label$149 }
	
.LABEL $label$150
	if ( (*($10 + [168]) & $13) ){ goto $label$148 }
	goto $label$147 
	
.LABEL $label$149
	CALL $11(*($10 + [192]))
	if ( ((*($10 + [168]) & $13) == 0) ){ goto $label$147 }
	
.LABEL $label$148
	CALL $11(*($10 + [176]))
	$13 = [1]
	if ( ((*($10 + [88]) & [1]) == 0) ){ goto $label$146 }
	goto $label$145 
	
.LABEL $label$147
	$13 = [1]
	if ( (*($10 + [88]) & [1]) ){ goto $label$145 }
	
.LABEL $label$146
	if ( (*($10 + [152]) & $13) ){ goto $label$144 }
	goto $label$143 
	
.LABEL $label$145
	CALL $11(*(($10 + [96])))
	if ( ((*($10 + [152]) & $13) == 0) ){ goto $label$143 }
	
.LABEL $label$144
	CALL $11(*($10 + [160]))
	if ( (*($10 + [136]) & [1]) ){ goto $label$142 }
	goto $label$28 
	
.LABEL $label$143
	if ( ((*($10 + [136]) & [1]) == 0) ){ goto $label$28 }
	
.LABEL $label$142
	CALL $11(*($10 + [144]))
	
.LABEL $label$28
	CALL prints([10595])
	$global$0 = ($10 + [384])
}

int_32 .FUNC $165 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [72]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10005])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-4149657304265580544)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [9951])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [9951])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $77(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $164 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5, int_64 $6)
{
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	float_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	float_64 $20
	float_64 $21
	$7 = ($global$0 - [368])
	$global$0 = $7
	*($7 + [336]) = $2
	*($7 + [344]) = $1
	if ( ((uint_64)((int_64)*($3) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$2 }
	$1 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$1 = $9
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$1 = $9
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$10 = ((int_32)$8 < (int_32)[6])
	$11 = ($8 + [1])
	$8 = $11
	if ( $10 ){ goto $label$5 }
	$8 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [10516])
	
.LABEL $label$1
	$12 = ($0 + [152])
	$10 = *(($0 + [180]))
	$13 = *(($0 + [176]))
	if ( ((int_32)$13 == (int_32)$10) ){ goto $label$7 }
	
.LOOP $label$9:
	$8 = ($10 + [-24])
	$11 = *($8)
	if ( ((int_64)*($11) == (int_64)$6) ){ goto $label$8 }
	$10 = $8
	if ( ((int_32)$13 != (int_32)$8) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$13 == (int_32)$10) ){ goto $label$7 }
	if ( ((int_32)*(($11 + [76])) == (int_32)$12) ){ goto $label$6 }
	CALL eosio_assert([0], [9275])
	goto $label$6 
	
.LABEL $label$7
	$11 = [0]
	$8 = CALL db_find_i64(*($12), *(($0 + [160])), (int_64)-4156459970285535232, $6)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$6 }
	$11 = CALL $76($12, $8)
	if ( ((int_32)*($11 + [76]) == (int_32)$12) ){ goto $label$6 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$6
	$14 = ($0 + [72])
	$10 = *(($0 + [100]))
	$12 = *(($0 + [96]))
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$11 }
	
.LOOP $label$13:
	$8 = ($10 + [-24])
	$13 = *($8)
	if ( ((int_64)*($13) == (int_64)$6) ){ goto $label$12 }
	$10 = $8
	if ( ((int_32)$12 != (int_32)$8) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$11 }
	if ( ((int_32)*($13 + [24]) == (int_32)$14) ){ goto $label$10 }
	CALL eosio_assert([0], [9275])
	goto $label$10 
	
.LABEL $label$11
	$13 = [0]
	$8 = CALL db_find_i64(*($14), *(($0 + [80])), (int_64)-4148261996757778432, $6)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$10 }
	$13 = CALL $78($14, $8)
	if ( ((int_32)*($13 + [24]) == (int_32)$14) ){ goto $label$10 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$10
	$9 = *($13 + [8])
	*($7 + [328]) = *($13 + [16])
	$12 = [0]
	*(($7 + [320])) = [0]
	*($7 + [304]) = (int_64)-1
	*($7 + [312]) = (int_64)0
	*($7 + [288]) = *($0)
	$1 = *($11 + [32])
	*($7 + [324]) = [0]
	*($7 + [296]) = (uint_64)$1 >> (uint_64)(int_64)8)
	*($7 + [280]) = ($7 + [288])
	CALL $79(($7 + [152]), ($7 + [280]), ($7 + [328]))
	$1 = *($7 + [328])
	$8 = *($7 + [156])
	if ( ($8 == 0) ){ goto $label$14 }
	$12 = ( $8 ? [0] : ((int_64)$1 == (int_64)*($8 + [24])) )
	
.LABEL $label$14
	if ( ((uint_64)$1 <= (uint_64)$2) ){ goto $label$34 }
	$1 = *(($7 + [304]))
	if ( ((int_64)$1 == (int_64)-1) ){ goto $label$33 }
	if ( (uint_64)($1 <= (int_64)-2) ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$34
	$15 = CALL $46((float_64)10, (CASTING float_64)(uint_32 *(($11 + [32]))))
	$15 = (Rounds 0)($15)
	if ( ((float_64)((float_64)((float_64)CALL $46((float_64)10, (float_64)8) / (float_64)(CASTING float_64)(uint_64 *($12 + [24]))) * (float_64)(CASTING float_64)(int_64 *($3))) > (float_64)((float_64)((float_64)CALL $46((float_64)10, (float_64)4) / (float_64)$15) * (float_64)(CASTING float_64)(int_64 *($12 + [32])))) ){ goto $label$35 }
	$8 = ($12 + [24])
	CALL __extenddftf2(($7 + [96]), (float_64))(((float_64)((float_64)CALL $46((float_64)10, (float_64)8) / (float_64)(CASTING float_64)(uint_64 *($8))) * (float_64)(CASTING float_64)(int_64 *($3))) - ((float_64)((float_64)CALL $46((float_64)10, (float_64)4) / (float_64)$15) * (float_64)(CASTING float_64)(int_64 *(($12 + [32]))))))
	CALL $48(($7 + [112]), *($7 + [96]), *(($7 + [104])))
	if ( ((int_32)CALL __lttf2(*($7 + [112]), *($7 + [120]), (int_64)0, (int_64)4579879346059083776) > (int_32)[-1]) ){ goto $label$30 }
	
.LABEL $label$35
	$15 = ((float_64)((float_64)((float_64)(CASTING float_64)(uint_64 *(($12 + [24]))) / (float_64)CALL $46((float_64)10, (float_64)8)) * (float_64)(CASTING float_64)(int_64 *(($12 + [32])))) * (float_64)((float_64)CALL $46((float_64)10, (float_64)4) / (float_64)$15))
	if ( ((float_64)(float_64)|$15| < (float_64)(float_64)9223372036854775808) ){ goto $label$32 }
	$2 = (int_64)-9223372036854775808
	goto $label$31 
	
.LABEL $label$33
	$8 = CALL db_lowerbound_i64(*($7 + [288]), *(($7 + [296])), (int_64)-4149657304265580544, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$29 }
	CALL $77(($7 + [288]), $8)
	*($7 + [156]) = [0]
	*($7 + [152]) = ($7 + [288])
	$1 = *(*(CALL $165(($7 + [152])) + [4]))
	$1 = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	*(($7 + [304])) = $1
	if ( ((uint_64)$1 >= (uint_64)(int_64)-2) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$32
	$2 = (Rounds 0)($15)
	
.LABEL $label$31
	$8 = CALL $1([9134])
	if ( ($8 <= [8]) ){ goto $label$37 }
	CALL eosio_assert([0], [9177])
	goto $label$36 
	
.LABEL $label$37
	if ( ($8 == 0) ){ goto $label$28 }
	
.LABEL $label$36
	$1 = (int_64)0
	
.LOOP $label$38:
	$10 = *(($8 + [9133]))
	if ( ((($10 + [-65]) & [255]) <= [26]) ){ goto $label$39 }
	CALL eosio_assert([0], [9222])
	
.LABEL $label$39
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$38 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$23 
	
.LABEL $label$30
	if ( ((int_32)((float_64)((float_64)((float_64)CALL $46((float_64)10, (float_64)8) / (float_64)(CASTING float_64)(uint_64 *($8))) * (float_64)(CASTING float_64)(int_64 *($3))) < (float_64)((float_64)((float_64)CALL $46((float_64)10, (float_64)4) / (float_64)$15) * (float_64)(CASTING float_64)(int_64 *(($12 + [32]))))) ^ (int_32)[1]) ){ goto $label$22 }
	$2 = *($3)
	$8 = CALL $1([9134])
	if ( ($8 <= [8]) ){ goto $label$27 }
	CALL eosio_assert([0], [9177])
	goto $label$26 
	
.LABEL $label$29
	*(($7 + [304])) = (int_64)0
	goto $label$19 
	
.LABEL $label$28
	$1 = (int_64)0
	goto $label$23 
	
.LABEL $label$27
	if ( ($8 == 0) ){ goto $label$25 }
	
.LABEL $label$26
	$1 = (int_64)0
	
.LOOP $label$40:
	$10 = *(($8 + [9133]))
	if ( ((($10 + [-65]) & [255]) <= [26]) ){ goto $label$41 }
	CALL eosio_assert([0], [9222])
	
.LABEL $label$41
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$40 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$24 
	
.LABEL $label$25
	$1 = (int_64)0
	
.LABEL $label$24
	if ( (uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$42 }
	CALL eosio_assert([0], [10053])
	
.LABEL $label$42
	$17 = ((int_64)$1 | (int_64)4)
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$45:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$44 }
	$9 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$46 }
	$1 = $9
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$45 }
	goto $label$43 
	
.LABEL $label$46
	$1 = $9
	
.LOOP $label$47:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$44 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$10 = ((int_32)$8 < (int_32)[6])
	$13 = ($8 + [1])
	$8 = $13
	if ( $10 ){ goto $label$47 }
	$8 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$45 }
	goto $label$43 
	
.LABEL $label$44
	CALL eosio_assert([0], [10102])
	
.LABEL $label$43
	$20 = CALL $46((float_64)10, (float_64)8)
	$1 = *(($12 + [24]))
	$16 = *($3)
	$21 = CALL $46((float_64)10, (float_64)4)
	$9 = *(($11 + [32]))
	*($7 + [160]) = $9
	$15 = ((float_64)((float_64)((float_64)$20 / (float_64)(CASTING float_64)(uint_64 $1)) * (float_64)(CASTING float_64)(int_64 $16)) / (float_64)((float_64)$21 / (float_64)$15))
	if ( ((float_64)(float_64)|$15| < (float_64)(float_64)9223372036854775808) ){ goto $label$49 }
	$1 = (int_64)-9223372036854775808
	goto $label$48 
	
.LABEL $label$49
	$1 = (Rounds 0)($15)
	
.LABEL $label$48
	*($7 + [152]) = $1
	if ( (uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$50 }
	CALL eosio_assert([0], [10053])
	$9 = *(($7 + [160]))
	
.LABEL $label$50
	$1 = (uint_64)$9 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$53:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$52 }
	$9 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$54 }
	$1 = $9
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$53 }
	goto $label$51 
	
.LABEL $label$54
	$1 = $9
	
.LOOP $label$55:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$52 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$10 = ((int_32)$8 < (int_32)[6])
	$13 = ($8 + [1])
	$8 = $13
	if ( $10 ){ goto $label$55 }
	$8 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$53 }
	goto $label$51 
	
.LABEL $label$52
	CALL eosio_assert([0], [10102])
	
.LABEL $label$51
	$1 = *((($7 + [152]) + [8]))
	*((($7 + [192]) + [8])) = $1
	$9 = *($7 + [152])
	*($7 + [192]) = $9
	*($7 + [176]) = $2
	*($7 + [184]) = $17
	$16 = *(($12 + [24]))
	$18 = *($12 + [16])
	*((($7 + [64]) + [8])) = $17
	*((($7 + [80]) + [8])) = $1
	*($7 + [80]) = $9
	*($7 + [64]) = $2
	CALL $166($0, *($7 + [344]), $18, ($7 + [80]), ($7 + [64]), $16, $4, ($12 + [56]), $5, $6)
	CALL prints([10540])
	CALL prints([10549])
	CALL $167(($7 + [352]), ($7 + [152]))
	$10 = *($7 + [352])
	$13 = ($10 & [1])
	$8 = (($7 + [352]) | [1])
	CALL prints_l(( *($7 + [360]) ? $8 : $13 ), ( *($7 + [356]) ? uint_32($10 >> [1]) : $13 ))
	if ( ((*($7 + [352]) & [1]) == 0) ){ goto $label$56 }
	CALL $11(*((($7 + [352]) + [8])))
	
.LABEL $label$56
	CALL prints([10565])
	CALL prints([10567])
	$10 = ($12 + [32])
	CALL $167(($7 + [352]), $10)
	$13 = *($7 + [352])
	$3 = ($13 & [1])
	CALL prints_l(( *($7 + [360]) ? $8 : $3 ), ( *($7 + [356]) ? uint_32($13 >> [1]) : $3 ))
	if ( ((*($7 + [352]) & [1]) == 0) ){ goto $label$57 }
	CALL $11(*(($7 + [360])))
	
.LABEL $label$57
	CALL prints([10565])
	if ( ((int_64)*(($7 + [160])) == (int_64)*(($12 + [40]))) ){ goto $label$58 }
	CALL eosio_assert([0], [10890])
	
.LABEL $label$58
	if ( ((int_64)*($7 + [152]) >= (int_64)*($10)) ){ goto $label$22 }
	*($0 + [256]) = *(($12 + [24]))
	$1 = *($12)
	$10 = *(($7 + [316]))
	$12 = *((($7 + [288]) + [24]))
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$60 }
	
.LOOP $label$62:
	$8 = ($10 + [-24])
	$13 = *($8)
	if ( ((int_64)*($13) == (int_64)$1) ){ goto $label$61 }
	$10 = $8
	if ( ((int_32)$12 != (int_32)$8) ){ goto $label$62 }
	goto $label$60 
	
.LABEL $label$61
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$60 }
	if ( ((int_32)*($13 + [68]) == (int_32)($7 + [288])) ){ goto $label$59 }
	CALL eosio_assert([0], [9275])
	goto $label$59 
	
.LABEL $label$60
	$13 = [0]
	$8 = CALL db_find_i64(*($7 + [288]), *(($7 + [296])), (int_64)-4149657304265580544, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$59 }
	$13 = CALL $77(($7 + [288]), $8)
	if ( ((int_32)*($13 + [68]) == (int_32)($7 + [288])) ){ goto $label$59 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$59
	$1 = *($0)
	*($7 + [352]) = ($7 + [152])
	if ( $13 ){ goto $label$63 }
	CALL eosio_assert([0], [8651])
	
.LABEL $label$63
	CALL $168(($7 + [288]), $13, $1, ($7 + [352]))
	goto $label$22 
	
.LABEL $label$23
	if ( (uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$64 }
	CALL eosio_assert([0], [10053])
	
.LABEL $label$64
	$16 = ((int_64)$1 | (int_64)4)
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$67:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$66 }
	$9 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$68 }
	$1 = $9
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$67 }
	goto $label$65 
	
.LABEL $label$68
	$1 = $9
	
.LOOP $label$69:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$66 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$10 = ((int_32)$8 < (int_32)[6])
	$13 = ($8 + [1])
	$8 = $13
	if ( $10 ){ goto $label$69 }
	$8 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$67 }
	goto $label$65 
	
.LABEL $label$66
	CALL eosio_assert([0], [10102])
	
.LABEL $label$65
	$17 = *(($11 + [32]))
	$18 = *(($12 + [32]))
	if ( (uint_64)(((int_64)$18 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$70 }
	CALL eosio_assert([0], [10053])
	
.LABEL $label$70
	$1 = (uint_64)$17 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$73:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$72 }
	$9 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$74 }
	$1 = $9
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$73 }
	goto $label$71 
	
.LABEL $label$74
	$1 = $9
	
.LOOP $label$75:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$72 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$10 = ((int_32)$8 < (int_32)[6])
	$13 = ($8 + [1])
	$8 = $13
	if ( $10 ){ goto $label$75 }
	$8 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$73 }
	goto $label$71 
	
.LABEL $label$72
	CALL eosio_assert([0], [10102])
	
.LABEL $label$71
	*($7 + [264]) = $18
	*($7 + [272]) = $17
	*($7 + [248]) = $2
	*($7 + [256]) = $16
	$1 = *(($12 + [24]))
	$9 = *($12 + [16])
	*((($7 + [48]) + [8])) = $17
	*((($7 + [32]) + [8])) = $16
	*($7 + [48]) = $18
	*($7 + [32]) = $2
	CALL $166($0, *($7 + [344]), $9, ($7 + [48]), ($7 + [32]), $1, $4, ($12 + [56]), $5, $6)
	$1 = *($3)
	$19 = *($3 + [8])
	if ( ((int_64)$16 == (int_64)$19) ){ goto $label$76 }
	CALL eosio_assert([0], [10799])
	
.LABEL $label$76
	$9 = (int_64)
	if ( ((int_64)$9($1 - $2)) <= (int_64)-4611686018427387904) ){ goto $label$78 }
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$77 }
	CALL eosio_assert([0], [10869])
	goto $label$77 
	
.LABEL $label$78
	CALL eosio_assert([0], [10847])
	
.LABEL $label$77
	if ( ((int_64)$17 == (int_64)*(($12 + [40]))) ){ goto $label$79 }
	CALL eosio_assert([0], [10890])
	
.LABEL $label$79
	if ( ((int_64)$18 != (int_64)*(($12 + [32]))) ){ goto $label$80 }
	*($0 + [256]) = *(($12 + [24]))
	CALL prints([10533])
	$1 = *($12)
	$10 = *(($7 + [316]))
	$12 = *((($7 + [288]) + [24]))
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$82 }
	
.LOOP $label$84:
	$8 = ($10 + [-24])
	$13 = *($8)
	if ( ((int_64)*($13) == (int_64)$1) ){ goto $label$83 }
	$10 = $8
	if ( ((int_32)$12 != (int_32)$8) ){ goto $label$84 }
	goto $label$82 
	
.LABEL $label$83
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$82 }
	if ( ((int_32)*($13 + [68]) == (int_32)($7 + [288])) ){ goto $label$81 }
	CALL eosio_assert([0], [9275])
	goto $label$81 
	
.LABEL $label$82
	$13 = [0]
	$8 = CALL db_find_i64(*($7 + [288]), *(($7 + [296])), (int_64)-4149657304265580544, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$81 }
	$13 = CALL $77(($7 + [288]), $8)
	if ( ((int_32)*($13 + [68]) == (int_32)($7 + [288])) ){ goto $label$81 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$81
	*($7 + [240]) = ($7 + [288])
	$8 = ($13 + [24])
	CALL $79(($7 + [152]), ($7 + [240]), $8)
	$10 = *($7 + [156])
	if ( ($10 == 0) ){ goto $label$87 }
	if ( ((int_64)*($8) != (int_64)*($10 + [24])) ){ goto $label$86 }
	*($7 + [352]) = *($7 + [152])
	$8 = (($7 + [352]) | [4])
	goto $label$85 
	
.LABEL $label$87
	*($7 + [356]) = [0]
	*($7 + [352]) = ($7 + [240])
	$8 = (($7 + [352]) | [4])
	goto $label$85 
	
.LABEL $label$86
	*($7 + [356]) = [0]
	*($7 + [352]) = ($7 + [240])
	$8 = (($7 + [352]) | [4])
	
.LABEL $label$85
	*($7 + [152]) = (int_64)0
	CALL $79(($7 + [232]), ($7 + [240]), ($7 + [152]))
	if ( ((int_32)*($7 + [356]) == (int_32)*($7 + [236])) ){ goto $label$90 }
	*($7 + [228]) = [0]
	*($7 + [224]) = ($7 + [240])
	$10 = CALL $80(($7 + [224]))
	$12 = *($7 + [356])
	if ( ((int_32)$12 == (int_32)*($10 + [4])) ){ goto $label$89 }
	$1 = *($12 + [24])
	CALL $80(($7 + [352]))
	if ( ((int_64)$1 == (int_64)*(*($8) + [24])) ){ goto $label$88 }
	CALL $81(($7 + [352]))
	CALL $81(($7 + [352]))
	goto $label$88 
	
.LABEL $label$90
	CALL $81(($7 + [352]))
	goto $label$88 
	
.LABEL $label$89
	CALL $80(($7 + [352]))
	
.LABEL $label$88
	*($7 + [232]) = (int_64)-1
	$8 = *($8)
	if ( ((int_64)*(($8 + [40])) != (int_64)*(($11 + [32]))) ){ goto $label$91 }
	*($7 + [232]) = *($8 + [24])
	
.LABEL $label$91
	$10 = *(($0 + [100]))
	$3 = *(($0 + [96]))
	if ( ((int_32)$3 == (int_32)$10) ){ goto $label$93 }
	
.LOOP $label$95:
	$8 = ($10 + [-24])
	$12 = *($8)
	if ( ((int_64)*($12) == (int_64)$6) ){ goto $label$94 }
	$10 = $8
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$95 }
	goto $label$93 
	
.LABEL $label$94
	if ( ((int_32)$3 == (int_32)$10) ){ goto $label$93 }
	if ( ((int_32)*($12 + [24]) == (int_32)$14) ){ goto $label$92 }
	CALL eosio_assert([0], [9275])
	goto $label$92 
	
.LABEL $label$93
	$12 = [0]
	$8 = CALL db_find_i64(*(($0 + [72])), *(($0 + [80])), (int_64)-4148261996757778432, $6)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$92 }
	$12 = CALL $78($14, $8)
	if ( ((int_32)*($12 + [24]) == (int_32)$14) ){ goto $label$92 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$92
	$1 = *($0)
	*($7 + [152]) = ($7 + [232])
	if ( $12 ){ goto $label$96 }
	CALL eosio_assert([0], [8651])
	
.LABEL $label$96
	CALL $169($14, $12, $1, ($7 + [152]))
	if ( $13 ){ goto $label$97 }
	CALL eosio_assert([0], [9619])
	CALL eosio_assert([0], [9354])
	
.LABEL $label$97
	$8 = CALL db_next_i64(*($13 + [72]), ($7 + [152]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$98 }
	CALL $77(($7 + [288]), $8)
	
.LABEL $label$98
	CALL $88(($7 + [288]), $13)
	
.LABEL $label$80
	if ( (int_64)($9 == 0) ){ goto $label$22 }
	*(($7 + [24])) = $19
	*($7 + [208]) = $9
	*($7 + [216]) = $19
	*($7 + [16]) = $9
	CALL $164($0, *($7 + [344]), *($7 + [336]), ($7 + [16]), $4, $5, $6)
	
.LABEL $label$22
	$13 = ($0 + [192])
	$2 = *(($11 + [32]))
	$1 = (uint_64)$2 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$101:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$100 }
	$9 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$102 }
	$1 = $9
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$101 }
	goto $label$99 
	
.LABEL $label$102
	$1 = $9
	
.LOOP $label$103:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$100 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$10 = ((int_32)$8 < (int_32)[6])
	$11 = ($8 + [1])
	$8 = $11
	if ( $10 ){ goto $label$103 }
	$8 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$101 }
	goto $label$99 
	
.LABEL $label$100
	CALL eosio_assert([0], [10102])
	
.LABEL $label$99
	if ( ((int_64)*(($0 + [200])) == (int_64)$2) ){ goto $label$104 }
	CALL eosio_assert([0], [10890])
	
.LABEL $label$104
	if ( (int_64)(*($13) == 0) ){ goto $label$17 }
	$9 = *(($13 + [8]))
	*((($7 + [136]) + [8])) = $9
	$2 = *($0 + [256])
	$1 = *($13)
	*(($7 + [8])) = $9
	*($7 + [136]) = $1
	*($7) = $1
	CALL $170($0, *($7 + [344]), $7, $2, $4, $5, $6)
	goto $label$17 
	
.LABEL $label$21
	CALL eosio_assert([0], [9899])
	$1 = *(($7 + [304]))
	
.LABEL $label$20
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$18 }
	
.LABEL $label$19
	$1 = (int_64)1
	
.LABEL $label$18
	*($7 + [352]) = $1
	$1 = *($0)
	*($7 + [164]) = $3
	*($7 + [168]) = $4
	*($7 + [156]) = ($7 + [344])
	*($7 + [152]) = ($7 + [352])
	*($7 + [160]) = ($7 + [336])
	CALL $171(($7 + [232]), ($7 + [288]), $1, ($7 + [152]))
	$10 = *(($0 + [100]))
	$13 = *(($0 + [96]))
	if ( ((int_32)$13 == (int_32)$10) ){ goto $label$107 }
	
.LOOP $label$109:
	$8 = ($10 + [-24])
	$11 = *($8)
	if ( ((int_64)*($11) == (int_64)$6) ){ goto $label$108 }
	$10 = $8
	if ( ((int_32)$13 != (int_32)$8) ){ goto $label$109 }
	goto $label$107 
	
.LABEL $label$108
	if ( ((int_32)$13 == (int_32)$10) ){ goto $label$107 }
	if ( ((int_32)*($11 + [24]) == (int_32)$14) ){ goto $label$106 }
	CALL eosio_assert([0], [9275])
	if ( (uint_64)($9 <= *($7 + [336])) ){ goto $label$105 }
	goto $label$17 
	
.LABEL $label$107
	$11 = [0]
	$8 = CALL db_find_i64(*(($0 + [72])), *(($0 + [80])), (int_64)-4148261996757778432, $6)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$106 }
	$11 = CALL $78($14, $8)
	if ( ((int_32)*($11 + [24]) == (int_32)$14) ){ goto $label$106 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$106
	if ( ((uint_64)$9 >= (uint_64)*($7 + [336])) ){ goto $label$17 }
	
.LABEL $label$105
	$1 = *($0)
	*($7 + [152]) = ($7 + [336])
	if ( $11 ){ goto $label$110 }
	CALL eosio_assert([0], [8651])
	
.LABEL $label$110
	CALL $172($14, $11, $1, ($7 + [152]))
	$0 = *($7 + [312])
	if ( $0 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$0 = *($7 + [312])
	if ( ($0 == 0) ){ goto $label$15 }
	
.LABEL $label$16
	$11 = ($7 + [316])
	$8 = *($11)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$112 }
	
.LOOP $label$113:
	$8 = ($8 + [-24])
	$10 = *($8)
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$114 }
	if ( ((*($10 + [56]) & [1]) == 0) ){ goto $label$115 }
	CALL $11(*(($10 + [64])))
	
.LABEL $label$115
	CALL $11($10)
	
.LABEL $label$114
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$113 }
	$8 = *(($7 + [312]))
	goto $label$111 
	
.LABEL $label$112
	$8 = $0
	
.LABEL $label$111
	*($11) = $0
	CALL $11($8)
	
.LABEL $label$15
	$global$0 = ($7 + [368])
}

void .FUNC $163 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5, int_64 $6)
{
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	float_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	$7 = ($global$0 - [352])
	$global$0 = $7
	*($7 + [336]) = $2
	*($7 + [344]) = $1
	if ( ((uint_64)((int_64)*($3) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$2 }
	$1 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$1 = $9
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$1 = $9
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$10 = ((int_32)$8 < (int_32)[6])
	$11 = ($8 + [1])
	$8 = $11
	if ( $10 ){ goto $label$5 }
	$8 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [10516])
	
.LABEL $label$1
	$12 = ($0 + [152])
	$10 = *(($0 + [180]))
	$11 = *(($0 + [176]))
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$7 }
	
.LOOP $label$9:
	$8 = ($10 + [-24])
	$13 = *($8)
	if ( ((int_64)*($13) == (int_64)$6) ){ goto $label$8 }
	$10 = $8
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$7 }
	if ( ((int_32)*(($13 + [76])) == (int_32)$12) ){ goto $label$6 }
	CALL eosio_assert([0], [9275])
	goto $label$6 
	
.LABEL $label$7
	$13 = [0]
	$8 = CALL db_find_i64(*($12), *(($0 + [160])), (int_64)-4156459970285535232, $6)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$6 }
	$13 = CALL $76($12, $8)
	if ( ((int_32)*($13 + [76]) == (int_32)$12) ){ goto $label$6 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$6
	$14 = ($0 + [72])
	$10 = *(($0 + [100]))
	$12 = *(($0 + [96]))
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$11 }
	
.LOOP $label$13:
	$8 = ($10 + [-24])
	$11 = *($8)
	if ( ((int_64)*($11) == (int_64)$6) ){ goto $label$12 }
	$10 = $8
	if ( ((int_32)$12 != (int_32)$8) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$11 }
	if ( ((int_32)*($11 + [24]) == (int_32)$14) ){ goto $label$10 }
	CALL eosio_assert([0], [9275])
	goto $label$10 
	
.LABEL $label$11
	$11 = [0]
	$8 = CALL db_find_i64(*($14), *(($0 + [80])), (int_64)-4148261996757778432, $6)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$10 }
	$11 = CALL $78($14, $8)
	if ( ((int_32)*($11 + [24]) == (int_32)$14) ){ goto $label$10 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$10
	*($7 + [328]) = *($11 + [8])
	$9 = *($11 + [16])
	$12 = [0]
	*(($7 + [320])) = [0]
	*($7 + [304]) = (int_64)-1
	*($7 + [312]) = (int_64)0
	*($7 + [288]) = *($0)
	$1 = *($13 + [32])
	*($7 + [324]) = [0]
	*($7 + [296]) = (uint_64)$1 >> (uint_64)(int_64)8)
	*($7 + [280]) = ($7 + [288])
	CALL $79(($7 + [144]), ($7 + [280]), ($7 + [328]))
	$1 = *($7 + [328])
	$8 = *($7 + [148])
	if ( ($8 == 0) ){ goto $label$14 }
	$12 = ( $8 ? [0] : ((int_64)$1 == (int_64)*($8 + [24])) )
	
.LABEL $label$14
	if ( ((uint_64)$1 >= (uint_64)$2) ){ goto $label$32 }
	$1 = *(($7 + [304]))
	if ( ((int_64)$1 == (int_64)-1) ){ goto $label$31 }
	if ( (uint_64)($1 <= (int_64)-2) ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$32
	$15 = CALL $46((float_64)10, (CASTING float_64)(uint_32 *(($13 + [32]))))
	$2 = *($12 + [32])
	$15 = (Rounds 0)($15)
	if ( ((float_64)((float_64)((float_64)CALL $46((float_64)10, (float_64)4) / (float_64)$15) * (float_64)(CASTING float_64)(int_64 *($3))) > (float_64)((float_64)((float_64)CALL $46((float_64)10, (float_64)8) / (float_64)(CASTING float_64)(uint_64 *($12 + [24]))) * (float_64)(CASTING float_64)(int_64 $2))) ){ goto $label$33 }
	$8 = ($12 + [24])
	CALL __extenddftf2(($7 + [96]), (float_64))(((float_64)((float_64)CALL $46((float_64)10, (float_64)4) / (float_64)$15) * (float_64)(CASTING float_64)(int_64 *($3))) - ((float_64)((float_64)CALL $46((float_64)10, (float_64)8) / (float_64)(CASTING float_64)(uint_64 *($8))) * (float_64)(CASTING float_64)(int_64 *(($12 + [32]))))))
	CALL $48(($7 + [112]), *($7 + [96]), *(($7 + [104])))
	if ( ((int_32)CALL __lttf2(*($7 + [112]), *($7 + [120]), (int_64)0, (int_64)4579879346059083776) > (int_32)[-1]) ){ goto $label$28 }
	$2 = *(($12 + [32]))
	
.LABEL $label$33
	$8 = CALL $1([9134])
	if ( ($8 <= [8]) ){ goto $label$30 }
	CALL eosio_assert([0], [9177])
	goto $label$29 
	
.LABEL $label$31
	$8 = CALL db_lowerbound_i64(*($7 + [288]), *(($7 + [296])), (int_64)-4149657304265580544, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$27 }
	CALL $77(($7 + [288]), $8)
	*($7 + [148]) = [0]
	*($7 + [144]) = ($7 + [288])
	$1 = *(*(CALL $165(($7 + [144])) + [4]))
	$1 = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	*(($7 + [304])) = $1
	if ( ((uint_64)$1 >= (uint_64)(int_64)-2) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$30
	if ( ($8 == 0) ){ goto $label$26 }
	
.LABEL $label$29
	$1 = (int_64)0
	
.LOOP $label$34:
	$10 = *(($8 + [9133]))
	if ( ((($10 + [-65]) & [255]) <= [26]) ){ goto $label$35 }
	CALL eosio_assert([0], [9222])
	
.LABEL $label$35
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$34 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$23 
	
.LABEL $label$28
	if ( ((int_32)((float_64)((float_64)((float_64)CALL $46((float_64)10, (float_64)4) / (float_64)$15) * (float_64)(CASTING float_64)(int_64 *($3))) < (float_64)((float_64)((float_64)CALL $46((float_64)10, (float_64)8) / (float_64)(CASTING float_64)(uint_64 *($8))) * (float_64)(CASTING float_64)(int_64 *(($12 + [32]))))) ^ (int_32)[1]) ){ goto $label$22 }
	$15 = ((float_64)((float_64)((float_64)((float_64)CALL $46((float_64)10, (float_64)4) / (float_64)$15) * (float_64)(CASTING float_64)(int_64 *($3))) * (float_64)(CASTING float_64)(uint_64 *(($12 + [24])))) / (float_64)CALL $46((float_64)10, (float_64)8))
	if ( ((float_64)(float_64)|$15| < (float_64)(float_64)9223372036854775808) ){ goto $label$25 }
	$9 = (int_64)-9223372036854775808
	goto $label$24 
	
.LABEL $label$27
	*(($7 + [304])) = (int_64)0
	goto $label$19 
	
.LABEL $label$26
	$1 = (int_64)0
	goto $label$23 
	
.LABEL $label$25
	$9 = (Rounds 0)($15)
	
.LABEL $label$24
	$8 = CALL $1([9134])
	if ( ($8 <= [8]) ){ goto $label$39 }
	CALL eosio_assert([0], [9177])
	goto $label$38 
	
.LABEL $label$39
	if ( ($8 == 0) ){ goto $label$37 }
	
.LABEL $label$38
	$1 = (int_64)0
	
.LOOP $label$40:
	$10 = *(($8 + [9133]))
	if ( ((($10 + [-65]) & [255]) <= [26]) ){ goto $label$41 }
	CALL eosio_assert([0], [9222])
	
.LABEL $label$41
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$40 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$36 
	
.LABEL $label$37
	$1 = (int_64)0
	
.LABEL $label$36
	$1 = ((int_64)$1 | (int_64)4)
	*($7 + [152]) = $1
	*($7 + [144]) = $9
	if ( (uint_64)(((int_64)$9 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$42 }
	CALL eosio_assert([0], [10053])
	$1 = *(($7 + [152]))
	
.LABEL $label$42
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$45:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$44 }
	$9 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$46 }
	$1 = $9
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$45 }
	goto $label$43 
	
.LABEL $label$46
	$1 = $9
	
.LOOP $label$47:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$44 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$10 = ((int_32)$8 < (int_32)[6])
	$11 = ($8 + [1])
	$8 = $11
	if ( $10 ){ goto $label$47 }
	$8 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$45 }
	goto $label$43 
	
.LABEL $label$44
	CALL eosio_assert([0], [10102])
	
.LABEL $label$43
	$2 = *(($13 + [32]))
	$17 = *($3)
	if ( (uint_64)(((int_64)$17 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$48 }
	CALL eosio_assert([0], [10053])
	
.LABEL $label$48
	$1 = (uint_64)$2 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$51:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$50 }
	$9 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$52 }
	$1 = $9
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$51 }
	goto $label$49 
	
.LABEL $label$52
	$1 = $9
	
.LOOP $label$53:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$50 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$10 = ((int_32)$8 < (int_32)[6])
	$11 = ($8 + [1])
	$8 = $11
	if ( $10 ){ goto $label$53 }
	$8 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$51 }
	goto $label$49 
	
.LABEL $label$50
	CALL eosio_assert([0], [10102])
	
.LABEL $label$49
	$8 = (($7 + [144]) + [8])
	$1 = *($8)
	*((($7 + [184]) + [8])) = $1
	$9 = *($7 + [144])
	*($7 + [184]) = $9
	*($7 + [168]) = $17
	*($7 + [176]) = $2
	$18 = *(($12 + [24]))
	$16 = *($12 + [16])
	*((($7 + [64]) + [8])) = $2
	*((($7 + [80]) + [8])) = $1
	*($7 + [80]) = $9
	*($7 + [64]) = $17
	CALL $173($0, *($7 + [344]), $16, ($7 + [80]), ($7 + [64]), $18, $4, ($12 + [56]), $5, $6)
	if ( ((int_64)*($8) == (int_64)*(($12 + [40]))) ){ goto $label$54 }
	CALL eosio_assert([0], [10890])
	
.LABEL $label$54
	if ( ((int_64)*($7 + [144]) >= (int_64)*(($12 + [32]))) ){ goto $label$22 }
	*($0 + [256]) = *(($12 + [24]))
	$1 = *($12)
	$10 = *(($7 + [316]))
	$13 = *((($7 + [288]) + [24]))
	if ( ((int_32)$13 == (int_32)$10) ){ goto $label$56 }
	
.LOOP $label$58:
	$8 = ($10 + [-24])
	$11 = *($8)
	if ( ((int_64)*($11) == (int_64)$1) ){ goto $label$57 }
	$10 = $8
	if ( ((int_32)$13 != (int_32)$8) ){ goto $label$58 }
	goto $label$56 
	
.LABEL $label$57
	if ( ((int_32)$13 == (int_32)$10) ){ goto $label$56 }
	if ( ((int_32)*($11 + [68]) == (int_32)($7 + [288])) ){ goto $label$55 }
	CALL eosio_assert([0], [9275])
	goto $label$55 
	
.LABEL $label$56
	$11 = [0]
	$8 = CALL db_find_i64(*($7 + [288]), *(($7 + [296])), (int_64)-4149657304265580544, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$55 }
	$11 = CALL $77(($7 + [288]), $8)
	if ( ((int_32)*($11 + [68]) == (int_32)($7 + [288])) ){ goto $label$55 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$55
	$1 = *($0)
	*($7 + [232]) = ($7 + [144])
	if ( $11 ){ goto $label$59 }
	CALL eosio_assert([0], [8651])
	
.LABEL $label$59
	CALL $174(($7 + [288]), $11, $1, ($7 + [232]))
	goto $label$22 
	
.LABEL $label$23
	if ( (uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$60 }
	CALL eosio_assert([0], [10053])
	
.LABEL $label$60
	$16 = ((int_64)$1 | (int_64)4)
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$63:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$62 }
	$9 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$64 }
	$1 = $9
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$63 }
	goto $label$61 
	
.LABEL $label$64
	$1 = $9
	
.LOOP $label$65:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$62 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$10 = ((int_32)$8 < (int_32)[6])
	$11 = ($8 + [1])
	$8 = $11
	if ( $10 ){ goto $label$65 }
	$8 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$63 }
	goto $label$61 
	
.LABEL $label$62
	CALL eosio_assert([0], [10102])
	
.LABEL $label$61
	$15 = ((float_64)((float_64)((float_64)CALL $46((float_64)10, (float_64)8) / (float_64)(CASTING float_64)(uint_64 *(($12 + [24])))) * (float_64)(CASTING float_64)(int_64 *(($12 + [32])))) / (float_64)((float_64)CALL $46((float_64)10, (float_64)4) / (float_64)$15))
	if ( ((float_64)(float_64)|$15| < (float_64)(float_64)9223372036854775808) ){ goto $label$67 }
	$17 = (int_64)-9223372036854775808
	goto $label$66 
	
.LABEL $label$67
	$17 = (Rounds 0)($15)
	
.LABEL $label$66
	$18 = *(($13 + [32]))
	if ( (uint_64)(((int_64)$17 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$68 }
	CALL eosio_assert([0], [10053])
	
.LABEL $label$68
	$1 = (uint_64)$18 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$71:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$70 }
	$9 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$72 }
	$1 = $9
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$71 }
	goto $label$69 
	
.LABEL $label$72
	$1 = $9
	
.LOOP $label$73:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$70 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$10 = ((int_32)$8 < (int_32)[6])
	$11 = ($8 + [1])
	$8 = $11
	if ( $10 ){ goto $label$73 }
	$8 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$71 }
	goto $label$69 
	
.LABEL $label$70
	CALL eosio_assert([0], [10102])
	
.LABEL $label$69
	*($7 + [264]) = $2
	*($7 + [272]) = $16
	*($7 + [248]) = $17
	*($7 + [256]) = $18
	$1 = *(($12 + [24]))
	$9 = *($12 + [16])
	*((($7 + [48]) + [8])) = $16
	*((($7 + [32]) + [8])) = $18
	*($7 + [48]) = $2
	*($7 + [32]) = $17
	CALL $173($0, *($7 + [344]), $9, ($7 + [48]), ($7 + [32]), $1, $4, ($12 + [56]), $5, $6)
	$1 = *($3)
	$19 = *($3 + [8])
	if ( ((int_64)$18 == (int_64)$19) ){ goto $label$74 }
	CALL eosio_assert([0], [10799])
	
.LABEL $label$74
	$9 = (int_64)
	if ( ((int_64)$9($1 - $17)) <= (int_64)-4611686018427387904) ){ goto $label$76 }
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$75 }
	CALL eosio_assert([0], [10869])
	goto $label$75 
	
.LABEL $label$76
	CALL eosio_assert([0], [10847])
	
.LABEL $label$75
	if ( ((int_64)$16 == (int_64)*(($12 + [40]))) ){ goto $label$77 }
	CALL eosio_assert([0], [10890])
	
.LABEL $label$77
	if ( ((int_64)$2 != (int_64)*(($12 + [32]))) ){ goto $label$78 }
	*($0 + [256]) = *(($12 + [24]))
	$1 = *($12)
	$10 = *(($7 + [316]))
	$13 = *((($7 + [288]) + [24]))
	if ( ((int_32)$13 == (int_32)$10) ){ goto $label$80 }
	
.LOOP $label$82:
	$8 = ($10 + [-24])
	$11 = *($8)
	if ( ((int_64)*($11) == (int_64)$1) ){ goto $label$81 }
	$10 = $8
	if ( ((int_32)$13 != (int_32)$8) ){ goto $label$82 }
	goto $label$80 
	
.LABEL $label$81
	if ( ((int_32)$13 == (int_32)$10) ){ goto $label$80 }
	if ( ((int_32)*($11 + [68]) == (int_32)($7 + [288])) ){ goto $label$79 }
	CALL eosio_assert([0], [9275])
	goto $label$79 
	
.LABEL $label$80
	$11 = [0]
	$8 = CALL db_find_i64(*($7 + [288]), *(($7 + [296])), (int_64)-4149657304265580544, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$79 }
	$11 = CALL $77(($7 + [288]), $8)
	if ( ((int_32)*($11 + [68]) == (int_32)($7 + [288])) ){ goto $label$79 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$79
	*($7 + [240]) = ($7 + [288])
	$8 = ($11 + [24])
	CALL $79(($7 + [144]), ($7 + [240]), $8)
	$10 = *($7 + [148])
	if ( ($10 == 0) ){ goto $label$85 }
	if ( ((int_64)*($8) != (int_64)*($10 + [24])) ){ goto $label$84 }
	*($7 + [232]) = *($7 + [144])
	$13 = (($7 + [232]) | [4])
	goto $label$83 
	
.LABEL $label$85
	*($7 + [236]) = [0]
	*($7 + [232]) = ($7 + [240])
	$13 = (($7 + [232]) | [4])
	goto $label$83 
	
.LABEL $label$84
	*($7 + [236]) = [0]
	*($7 + [232]) = ($7 + [240])
	$13 = (($7 + [232]) | [4])
	
.LABEL $label$83
	*($7 + [144]) = (int_64)0
	CALL $79(($7 + [224]), ($7 + [240]), ($7 + [144]))
	if ( ((int_32)*($7 + [236]) == (int_32)*($7 + [228])) ){ goto $label$88 }
	*($7 + [220]) = [0]
	*($7 + [216]) = ($7 + [240])
	$8 = CALL $80(($7 + [216]))
	$10 = *($7 + [236])
	if ( ((int_32)$10 == (int_32)*($8 + [4])) ){ goto $label$87 }
	$1 = *($10 + [24])
	CALL $81(($7 + [232]))
	if ( ((int_64)$1 == (int_64)*(*($13) + [24])) ){ goto $label$86 }
	CALL $80(($7 + [232]))
	CALL $80(($7 + [232]))
	goto $label$86 
	
.LABEL $label$88
	CALL $81(($7 + [232]))
	goto $label$86 
	
.LABEL $label$87
	CALL $80(($7 + [232]))
	
.LABEL $label$86
	$1 = (int_64)0
	*($7 + [224]) = (int_64)0
	$12 = *($13)
	$8 = CALL $1([9134])
	if ( ($8 <= [8]) ){ goto $label$91 }
	CALL eosio_assert([0], [9177])
	goto $label$90 
	
.LABEL $label$91
	if ( ($8 == 0) ){ goto $label$89 }
	
.LABEL $label$90
	$1 = (int_64)0
	
.LOOP $label$92:
	$10 = *(($8 + [9133]))
	if ( ((($10 + [-65]) & [255]) <= [26]) ){ goto $label$93 }
	CALL eosio_assert([0], [9222])
	
.LABEL $label$93
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$92 }
	$1 = ((int_64)$1 << (int_64)8)
	
.LABEL $label$89
	if ( ((int_64)*(($12 + [40])) != (int_64)((int_64)$1 | (int_64)4)) ){ goto $label$94 }
	*($7 + [224]) = *(*($13) + [24])
	
.LABEL $label$94
	$10 = *(($0 + [100]))
	$12 = *(($0 + [96]))
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$96 }
	
.LOOP $label$98:
	$8 = ($10 + [-24])
	$13 = *($8)
	if ( ((int_64)*($13) == (int_64)$6) ){ goto $label$97 }
	$10 = $8
	if ( ((int_32)$12 != (int_32)$8) ){ goto $label$98 }
	goto $label$96 
	
.LABEL $label$97
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$96 }
	if ( ((int_32)*($13 + [24]) == (int_32)$14) ){ goto $label$95 }
	CALL eosio_assert([0], [9275])
	goto $label$95 
	
.LABEL $label$96
	$13 = [0]
	$8 = CALL db_find_i64(*(($0 + [72])), *(($0 + [80])), (int_64)-4148261996757778432, $6)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$95 }
	$13 = CALL $78($14, $8)
	if ( ((int_32)*($13 + [24]) == (int_32)$14) ){ goto $label$95 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$95
	$1 = *($0)
	*($7 + [144]) = ($7 + [224])
	if ( $13 ){ goto $label$99 }
	CALL eosio_assert([0], [8651])
	
.LABEL $label$99
	CALL $175($14, $13, $1, ($7 + [144]))
	if ( $11 ){ goto $label$100 }
	CALL eosio_assert([0], [9619])
	CALL eosio_assert([0], [9354])
	
.LABEL $label$100
	$8 = CALL db_next_i64(*($11 + [72]), ($7 + [144]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$101 }
	CALL $77(($7 + [288]), $8)
	
.LABEL $label$101
	CALL $88(($7 + [288]), $11)
	
.LABEL $label$78
	if ( (int_64)($9 == 0) ){ goto $label$22 }
	*(($7 + [24])) = $19
	*($7 + [200]) = $9
	*($7 + [208]) = $19
	*($7 + [16]) = $9
	CALL $163($0, *($7 + [344]), *($7 + [336]), ($7 + [16]), $4, $5, $6)
	
.LABEL $label$22
	$8 = CALL $1([9134])
	if ( ($8 <= [8]) ){ goto $label$105 }
	CALL eosio_assert([0], [9177])
	goto $label$104 
	
.LABEL $label$105
	if ( ($8 == 0) ){ goto $label$103 }
	
.LABEL $label$104
	$1 = (int_64)0
	
.LOOP $label$106:
	$10 = *(($8 + [9133]))
	if ( ((($10 + [-65]) & [255]) <= [26]) ){ goto $label$107 }
	CALL eosio_assert([0], [9222])
	
.LABEL $label$107
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$106 }
	$2 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)4)
	goto $label$102 
	
.LABEL $label$103
	$2 = (int_64)4
	
.LABEL $label$102
	$13 = ($0 + [208])
	$1 = (uint_64)$2 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$110:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$109 }
	$9 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$111 }
	$1 = $9
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$110 }
	goto $label$108 
	
.LABEL $label$111
	$1 = $9
	
.LOOP $label$112:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$109 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$10 = ((int_32)$8 < (int_32)[6])
	$11 = ($8 + [1])
	$8 = $11
	if ( $10 ){ goto $label$112 }
	$8 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$110 }
	goto $label$108 
	
.LABEL $label$109
	CALL eosio_assert([0], [10102])
	
.LABEL $label$108
	if ( ((int_64)*(($0 + [216])) == (int_64)$2) ){ goto $label$113 }
	CALL eosio_assert([0], [10890])
	
.LABEL $label$113
	if ( (int_64)(*($13) == 0) ){ goto $label$17 }
	$9 = *(($13 + [8]))
	*((($7 + [128]) + [8])) = $9
	$2 = *($0 + [256])
	$1 = *($13)
	*(($7 + [8])) = $9
	*($7 + [128]) = $1
	*($7) = $1
	CALL $176($0, *($7 + [344]), $7, $2, $4, $5, $6)
	goto $label$17 
	
.LABEL $label$21
	CALL eosio_assert([0], [9899])
	$1 = *(($7 + [304]))
	
.LABEL $label$20
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$18 }
	
.LABEL $label$19
	$1 = (int_64)1
	
.LABEL $label$18
	*($7 + [232]) = $1
	$1 = *($0)
	*($7 + [156]) = $3
	*($7 + [160]) = $4
	*($7 + [148]) = ($7 + [344])
	*($7 + [144]) = ($7 + [232])
	*($7 + [152]) = ($7 + [336])
	CALL $177(($7 + [224]), ($7 + [288]), $1, ($7 + [144]))
	if ( ((uint_64)$9 <= (uint_64)*($7 + [336])) ){ goto $label$17 }
	$10 = *(($0 + [100]))
	$13 = *(($0 + [96]))
	if ( ((int_32)$13 == (int_32)$10) ){ goto $label$115 }
	
.LOOP $label$117:
	$8 = ($10 + [-24])
	$11 = *($8)
	if ( ((int_64)*($11) == (int_64)$6) ){ goto $label$116 }
	$10 = $8
	if ( ((int_32)$13 != (int_32)$8) ){ goto $label$117 }
	goto $label$115 
	
.LABEL $label$116
	if ( ((int_32)$13 == (int_32)$10) ){ goto $label$115 }
	if ( ((int_32)*($11 + [24]) == (int_32)$14) ){ goto $label$114 }
	CALL eosio_assert([0], [9275])
	goto $label$114 
	
.LABEL $label$115
	$11 = [0]
	$8 = CALL db_find_i64(*(($0 + [72])), *(($0 + [80])), (int_64)-4148261996757778432, $6)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$114 }
	$11 = CALL $78($14, $8)
	if ( ((int_32)*($11 + [24]) == (int_32)$14) ){ goto $label$114 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$114
	$1 = *($0)
	*($7 + [144]) = ($7 + [336])
	if ( $11 ){ goto $label$118 }
	CALL eosio_assert([0], [8651])
	
.LABEL $label$118
	CALL $178($14, $11, $1, ($7 + [144]))
	$0 = *($7 + [312])
	if ( $0 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$0 = *($7 + [312])
	if ( ($0 == 0) ){ goto $label$15 }
	
.LABEL $label$16
	$11 = ($7 + [316])
	$8 = *($11)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$120 }
	
.LOOP $label$121:
	$8 = ($8 + [-24])
	$10 = *($8)
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$122 }
	if ( ((*($10 + [56]) & [1]) == 0) ){ goto $label$123 }
	CALL $11(*(($10 + [64])))
	
.LABEL $label$123
	CALL $11($10)
	
.LABEL $label$122
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$121 }
	$8 = *(($7 + [312]))
	goto $label$119 
	
.LABEL $label$120
	$8 = $0
	
.LABEL $label$119
	*($11) = $0
	CALL $11($8)
	
.LABEL $label$15
	$global$0 = ($7 + [352])
}

void .FUNC $162 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$2 = ($0 + [152])
	$4 = *(($0 + [180]))
	$3 = *(($0 + [176]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*(($6 + [76])) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [9275])
	goto $label$1 
	
.LABEL $label$2
	$6 = CALL $76($2, CALL $fimport$7(*($2), *(($0 + [160])), (int_64)-4156459970285535232, $1))
	if ( ((int_32)*($6 + [76]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$1
	$7 = *($6 + [32])
	$1 = (uint_64)$7 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$7:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$6 }
	$8 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$8 }
	$1 = $8
	$4 = $5
	$5 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$8
	$1 = $8
	
.LOOP $label$9:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$6 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$4 = ((int_32)$5 < (int_32)[6])
	$3 = ($5 + [1])
	$5 = $3
	if ( $4 ){ goto $label$9 }
	$5 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	CALL eosio_assert([0], [10102])
	
.LABEL $label$5
	*($0 + [192]) = (int_64)0
	*(($0 + [200])) = $7
	$5 = CALL $1([9134])
	if ( ($5 <= [8]) ){ goto $label$13 }
	CALL eosio_assert([0], [9177])
	goto $label$12 
	
.LABEL $label$13
	if ( ($5 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$1 = (int_64)0
	
.LOOP $label$14:
	$4 = *(($5 + [9133]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$15 }
	CALL eosio_assert([0], [9222])
	
.LABEL $label$15
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$14 }
	$7 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)4)
	goto $label$10 
	
.LABEL $label$11
	$7 = (int_64)4
	
.LABEL $label$10
	$1 = (uint_64)$7 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$8 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$19 }
	$1 = $8
	$4 = $5
	$5 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$19
	$1 = $8
	
.LOOP $label$20:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$17 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$4 = ((int_32)$5 < (int_32)[6])
	$3 = ($5 + [1])
	$5 = $3
	if ( $4 ){ goto $label$20 }
	$5 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	CALL eosio_assert([0], [10102])
	
.LABEL $label$16
	*($0 + [208]) = (int_64)0
	*(($0 + [216])) = $7
	$7 = *(($6 + [32]))
	$1 = (uint_64)$7 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$8 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$24 }
	$1 = $8
	$4 = $5
	$5 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$24
	$1 = $8
	
.LOOP $label$25:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$22 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$4 = ((int_32)$5 < (int_32)[6])
	$3 = ($5 + [1])
	$5 = $3
	if ( $4 ){ goto $label$25 }
	$5 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	CALL eosio_assert([0], [10102])
	
.LABEL $label$21
	*($0 + [224]) = (int_64)0
	*(($0 + [232])) = $7
	$5 = CALL $1([9134])
	if ( ($5 <= [8]) ){ goto $label$29 }
	CALL eosio_assert([0], [9177])
	goto $label$28 
	
.LABEL $label$29
	if ( ($5 == 0) ){ goto $label$27 }
	
.LABEL $label$28
	$1 = (int_64)0
	
.LOOP $label$30:
	$4 = *(($5 + [9133]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$31 }
	CALL eosio_assert([0], [9222])
	
.LABEL $label$31
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$30 }
	$7 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)4)
	goto $label$26 
	
.LABEL $label$27
	$7 = (int_64)4
	
.LABEL $label$26
	$1 = (uint_64)$7 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$34:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$33 }
	$8 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$35 }
	$1 = $8
	$4 = $5
	$5 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$34 }
	goto $label$32 
	
.LABEL $label$35
	$1 = $8
	
.LOOP $label$36:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$33 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$4 = ((int_32)$5 < (int_32)[6])
	$3 = ($5 + [1])
	$5 = $3
	if ( $4 ){ goto $label$36 }
	$5 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$34 }
	goto $label$32 
	
.LABEL $label$33
	CALL eosio_assert([0], [10102])
	
.LABEL $label$32
	*($0 + [240]) = (int_64)0
	*(($0 + [248])) = $7
}

void .FUNC $161 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9349])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9349])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9349])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9349])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	CALL $120(*($1), *($0 + [12]))
	$global$0 = ($2 + [16])
}

void .FUNC $160 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $47($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $169 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8701])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9486])
	
.LABEL $label$2
	*($1 + [16]) = *(*($3))
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $142($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $4, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [16])
}

void .FUNC $168 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [68]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8701])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9486])
	
.LABEL $label$2
	*($5 + [24]) = *($1 + [24])
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [40]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10799])
	
.LABEL $label$3
	$7 = (int_64)
	*($1 + [32]) = $7(*($1 + [32]) - *($3)))
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [10847])
	if ( ((int_64)*(($1 + [32])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [10869])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [9537])
	
.LABEL $label$4
	$3 = *($1 + [56])
	$8 = ( *(($1 + [60])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($8 + [49])
	$7 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$9:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$9 }
	if ( ($3 <= [513]) ){ goto $label$11 }
	$4 = CALL $2($3)
	goto $label$10 
	
.LABEL $label$11
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$10
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	CALL $184(($5 + [8]), $1)
	CALL db_update_i64(*($1 + [72]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$12 }
	CALL $3($4)
	
.LABEL $label$12
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	*($5 + [40]) = *(($1 + [24]))
	if ( (CALL $17(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$14 }
	$3 = *($1 + [76])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$15 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4149657304265580544, ($5 + [32]), $6)
	*(($1 + [76])) = $3
	
.LABEL $label$15
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$14
	$global$0 = ($5 + [48])
}

void .FUNC $175 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8701])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9486])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $142($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $4, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [16])
}

int_32 .FUNC $58 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [448])
	$global$0 = $3
	*(($4 = $3) + [440]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [408])) = [0]
	*(($4 + [432])) = [0]
	*($4 + [392]) = (int_64)0
	*($4 + [400]) = (int_64)0
	*($4 + [416]) = (int_64)0
	*($4 + [424]) = (int_64)0
	*($4 + [380]) = $2
	*($4 + [376]) = $2
	*($4 + [384]) = ($2 + $5)
	*($4 + [16]) = ($4 + [376])
	*($4 + [40]) = ($4 + [392])
	CALL $71(($4 + [40]), ($4 + [16]))
	$3 = *($4 + [384])
	*((($4 + [24]) + [8])) = $3
	*(($4 + [8])) = $3
	$6 = *($4 + [376])
	*($4) = $6
	*($4 + [24]) = $6
	$3 = CALL $72(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $3
	*($4 + [20]) = ($4 + [440])
	CALL $73(($4 + [16]), ($4 + [392]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $3($2)
	
.LABEL $label$4
	CALL $74($3)
	if ( ((*($4 + [424]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($4 + [432])))
	
.LABEL $label$5
	if ( ((*($4 + [400]) & [1]) == 0) ){ goto $label$6 }
	CALL $11(*(($4 + [408])))
	
.LABEL $label$6
	$global$0 = ($4 + [448])
	return [1]
}

void .FUNC $59 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	$4 = ($global$0 - [368])
	$global$0 = $4
	CALL require_auth($1)
	*($4 + [360]) = [9801]
	*($4 + [364]) = CALL $1([9801])
	*($4 + [16]) = *($4 + [360])
	if ( ((int_64)*(CALL $50(($4 + [176]), ($4 + [16]))) != (int_64)$1) ){ goto $label$5 }
	if ( (CALL is_account($1) == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL eosio_assert([0], [9814])
	if ( CALL is_account($1) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [9832])
	$1 = CALL $75($0, $3)
	if ( ((int_64)$1 != (int_64)-1) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$1 = CALL $75($0, $3)
	if ( ((int_64)$1 != (int_64)-1) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9072])
	
.LABEL $label$1
	$5 = ($0 + [152])
	$7 = *(($0 + [180]))
	$6 = *(($0 + [176]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$7 }
	
.LOOP $label$9:
	$3 = ($7 + [-24])
	$8 = *($3)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$8 }
	$7 = $3
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$7 }
	if ( ((int_32)*(($8 + [76])) == (int_32)$5) ){ goto $label$6 }
	CALL eosio_assert([0], [9275])
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	$3 = CALL db_find_i64(*($5), *(($0 + [160])), (int_64)-4156459970285535232, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	$8 = CALL $76($5, $3)
	if ( ((int_32)*($8 + [76]) == (int_32)$5) ){ goto $label$6 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$6
	$5 = [0]
	*(($4 + [352])) = [0]
	*($4 + [336]) = (int_64)-1
	*($4 + [344]) = (int_64)0
	$9 = *($0)
	*($4 + [320]) = $9
	$10 = *($8 + [32])
	*($4 + [356]) = [0]
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	*($4 + [328]) = $10)
	$3 = CALL db_find_i64($9, $10, (int_64)-4149657304265580544, $2)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$11 }
	$5 = CALL $77(($4 + [320]), $3)
	if ( ((int_32)*($5 + [68]) == (int_32)($4 + [320])) ){ goto $label$10 }
	CALL eosio_assert([0], [9275])
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [9089])
	
.LABEL $label$10
	$11 = ($0 + [72])
	$7 = *(($0 + [100]))
	$12 = *(($0 + [96]))
	if ( ((int_32)$12 == (int_32)$7) ){ goto $label$13 }
	
.LOOP $label$15:
	$3 = ($7 + [-24])
	$6 = *($3)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$14 }
	$7 = $3
	if ( ((int_32)$12 != (int_32)$3) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	if ( ((int_32)$12 == (int_32)$7) ){ goto $label$13 }
	if ( ((int_32)*($6 + [24]) == (int_32)$11) ){ goto $label$12 }
	CALL eosio_assert([0], [9275])
	goto $label$12 
	
.LABEL $label$13
	$6 = [0]
	$3 = CALL db_find_i64(*($11), *(($0 + [80])), (int_64)-4148261996757778432, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$12 }
	$6 = CALL $78($11, $3)
	if ( ((int_32)*($6 + [24]) == (int_32)$11) ){ goto $label$12 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$12
	*($4 + [312]) = ($4 + [320])
	$12 = ($5 + [24])
	CALL $79(($4 + [176]), ($4 + [312]), $12)
	$3 = *($4 + [180])
	if ( ($3 == 0) ){ goto $label$18 }
	if ( ((int_64)*($12) != (int_64)*($3 + [24])) ){ goto $label$17 }
	*($4 + [304]) = *($4 + [176])
	goto $label$16 
	
.LABEL $label$18
	*($4 + [308]) = [0]
	*($4 + [304]) = ($4 + [312])
	goto $label$16 
	
.LABEL $label$17
	*($4 + [308]) = [0]
	*($4 + [304]) = ($4 + [312])
	
.LABEL $label$16
	$3 = CALL $1([9134])
	if ( ($3 <= [8]) ){ goto $label$22 }
	CALL eosio_assert([0], [9177])
	goto $label$21 
	
.LABEL $label$22
	if ( ($3 == 0) ){ goto $label$20 }
	
.LABEL $label$21
	$1 = (int_64)0
	
.LOOP $label$23:
	$7 = *(($3 + [9133]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$24 }
	CALL eosio_assert([0], [9222])
	
.LABEL $label$24
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$23 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$19 
	
.LABEL $label$20
	$1 = (int_64)0
	
.LABEL $label$19
	$2 = *(($5 + [40]))
	if ( ((int_64)$2 != (int_64)((int_64)$1 | (int_64)4)) ){ goto $label$52 }
	if ( ((int_64)*($12) != (int_64)*($6 + [8])) ){ goto $label$48 }
	*($4 + [176]) = (int_64)0
	CALL $79(($4 + [256]), ($4 + [312]), ($4 + [176]))
	if ( ((int_32)*($4 + [308]) == (int_32)*($4 + [260])) ){ goto $label$51 }
	*($4 + [300]) = [0]
	*($4 + [296]) = ($4 + [312])
	$3 = CALL $80(($4 + [296]))
	$7 = *($4 + [308])
	if ( ((int_32)$7 == (int_32)*($3 + [4])) ){ goto $label$50 }
	$1 = *($7 + [24])
	CALL $81(($4 + [304]))
	if ( ((int_64)$1 == (int_64)*(*($4 + [308]) + [24])) ){ goto $label$49 }
	CALL $80(($4 + [304]))
	CALL $80(($4 + [304]))
	goto $label$49 
	
.LABEL $label$52
	if ( ((int_64)$2 != (int_64)*(($8 + [32]))) ){ goto $label$27 }
	if ( ((int_64)*($12) != (int_64)*($6 + [16])) ){ goto $label$44 }
	*($4 + [176]) = (int_64)0
	CALL $79(($4 + [256]), ($4 + [312]), ($4 + [176]))
	if ( ((int_32)*($4 + [308]) == (int_32)*($4 + [260])) ){ goto $label$47 }
	*($4 + [28]) = [0]
	*($4 + [24]) = ($4 + [312])
	$3 = CALL $80(($4 + [24]))
	$7 = *($4 + [308])
	if ( ((int_32)$7 == (int_32)*($3 + [4])) ){ goto $label$46 }
	$1 = *($7 + [24])
	CALL $80(($4 + [304]))
	if ( ((int_64)$1 == (int_64)*(*($4 + [308]) + [24])) ){ goto $label$45 }
	CALL $81(($4 + [304]))
	CALL $81(($4 + [304]))
	goto $label$45 
	
.LABEL $label$51
	CALL $81(($4 + [304]))
	goto $label$49 
	
.LABEL $label$50
	CALL $80(($4 + [304]))
	
.LABEL $label$49
	$1 = (int_64)0
	*($4 + [176]) = (int_64)0
	$12 = *($4 + [308])
	$3 = CALL $1([9134])
	if ( ($3 <= [8]) ){ goto $label$55 }
	CALL eosio_assert([0], [9177])
	goto $label$54 
	
.LABEL $label$55
	if ( ($3 == 0) ){ goto $label$53 }
	
.LABEL $label$54
	$1 = (int_64)0
	
.LOOP $label$56:
	$7 = *(($3 + [9133]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$57 }
	CALL eosio_assert([0], [9222])
	
.LABEL $label$57
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$56 }
	$1 = ((int_64)$1 << (int_64)8)
	
.LABEL $label$53
	if ( ((int_64)*(($12 + [40])) != (int_64)((int_64)$1 | (int_64)4)) ){ goto $label$58 }
	*($4 + [176]) = *(*($4 + [308]) + [24])
	
.LABEL $label$58
	$1 = *($0)
	*($4 + [256]) = ($4 + [176])
	if ( $6 ){ goto $label$59 }
	CALL eosio_assert([0], [8651])
	
.LABEL $label$59
	CALL $108($11, $6, $1, ($4 + [256]))
	
.LABEL $label$48
	*($4 + [248]) = (int_64)3617214756542218240
	*($4 + [240]) = *($0)
	*($4 + [224]) = [9138]
	*($4 + [228]) = CALL $1([9138])
	*($4 + [8]) = *($4 + [224])
	$11 = CALL $50(($4 + [232]), ($4 + [8]))
	$2 = *($0)
	CALL $83(($4 + [64]), ($0 + [264]), [10148])
	$3 = *($0 + [276])
	$7 = ($3 & [1])
	$3 = CALL $37(($4 + [64]), ( *(($0 + [284])) ? ($0 + [277]) : $7 ), ( *(($0 + [280])) ? uint_32($3 >> [1]) : $7 ))
	$6 = ($3 + [8])
	*((($4 + [80]) + [8])) = *($6)
	*($4 + [80]) = *($3)
	*($3) = (int_64)0
	$7 = [0]
	*($6) = [0]
	$12 = ($5 + [32])
	$1 = (uint_64)*(($8 + [32])) >> (uint_64)(int_64)8
	if ( (int_64)($1) == 0) ){ goto $label$63 }
	
.LOOP $label$65:
	*((($4 + [176]) + ($3 = $7))) = $1
	$7 = ($3 + [1])
	if ( ((uint_32)$3 > (uint_32)[5]) ){ goto $label$64 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)$1) != (int_64)0) ){ goto $label$65 }
	
.LABEL $label$64
	*(($4 + [56])) = [0]
	*($4 + [48]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$62 }
	*($4 + [48]) = ($7 << [1])
	$8 = (($4 + [48]) | [1])
	goto $label$61 
	
.LABEL $label$63
	*((($4 + [48]) + [8])) = [0]
	*($4 + [48]) = (int_64)0
	*($4 + [48]) = [0]
	$3 = (($4 + [48]) | [1])
	$7 = $3
	goto $label$60 
	
.LABEL $label$62
	$6 = (($7 + [16]) & [-16])
	$8 = CALL $9($6)
	*($4 + [48]) = ($6 | [1])
	*($4 + [56]) = $8
	*($4 + [52]) = $7
	
.LABEL $label$61
	$6 = ($3 + [1])
	$3 = [0]
	
.LOOP $label$66:
	*(($8 + $3)) = *((($4 + [176]) + $3))
	$3 = ($3 + [1])
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$66 }
	$7 = ($8 + $7)
	$3 = (($4 + [48]) | [1])
	
.LABEL $label$60
	*($7) = [0]
	$7 = *($4 + [48])
	$8 = ($7 & [1])
	$3 = CALL $37(($4 + [80]), ( *($4 + [56]) ? $3 : $8 ), ( *($4 + [52]) ? uint_32($7 >> [1]) : $8 ))
	$7 = ($3 + [8])
	*((($4 + [96]) + [8])) = *($7)
	*($4 + [96]) = *($3)
	*($3) = (int_64)0
	*($7) = [0]
	$3 = *($0 + [288])
	$7 = ($3 & [1])
	$3 = CALL $37(($4 + [96]), ( *(($0 + [296])) ? ($0 + [289]) : $7 ), ( *(($0 + [292])) ? uint_32($3 >> [1]) : $7 ))
	$7 = ($3 + [8])
	*((($4 + [112]) + [8])) = *($7)
	*($4 + [112]) = *($3)
	*($3) = (int_64)0
	*($7) = [0]
	CALL $84(($4 + [32]), $0, *(($5 + [24])), [8])
	$3 = *($4 + [32])
	$7 = ($3 & [1])
	$3 = CALL $37(($4 + [112]), ( *($4 + [40]) ? (($4 + [32]) | [1]) : $7 ), ( *($4 + [36]) ? uint_32($3 >> [1]) : $7 ))
	$7 = ($3 + [8])
	*((($4 + [128]) + [8])) = *($7)
	*($4 + [128]) = *($3)
	*($3) = (int_64)0
	*($7) = [0]
	$3 = *($0 + [324])
	$7 = ($3 & [1])
	$3 = CALL $37(($4 + [128]), ( *(($0 + [332])) ? ($0 + [325]) : $7 ), ( *(($0 + [328])) ? uint_32($3 >> [1]) : $7 ))
	$7 = ($3 + [8])
	*((($4 + [144]) + [8])) = *($7)
	*($4 + [144]) = *($3)
	*($3) = (int_64)0
	*($7) = [0]
	$3 = *($5 + [56])
	$7 = ($3 & [1])
	$3 = CALL $37(($4 + [144]), ( *(($5 + [64])) ? ($5 + [57]) : $7 ), ( *(($5 + [60])) ? uint_32($3 >> [1]) : $7 ))
	$7 = ($3 + [8])
	*((($4 + [160]) + [8])) = *($7)
	*($4 + [160]) = *($3)
	*($3) = (int_64)0
	*($7) = [0]
	$3 = *($0 + [312])
	$7 = ($3 & [1])
	$3 = CALL $37(($4 + [160]), ( *(($0 + [320])) ? ($0 + [313]) : $7 ), ( *(($0 + [316])) ? uint_32($3 >> [1]) : $7 ))
	$7 = *($3 + [8])
	*($3 + [8]) = [0]
	$1 = *($3)
	*($3) = (int_64)0
	$9 = *(($12 + [8]))
	$10 = *($12)
	$13 = *($5 + [16])
	*(($4 + [216])) = $7
	*((($4 + [176]) + [24])) = $9
	*($4 + [176]) = $2
	*($4 + [184]) = $13
	*($4 + [192]) = $10
	*($4 + [208]) = $1
	$3 = CALL $85(($4 + [256]), ($4 + [240]), *($11), (int_64)-3617168760277827584, ($4 + [176]))
	CALL $86($3)
	$7 = *($3 + [28])
	if ( ($7 == 0) ){ goto $label$67 }
	*(($3 + [32])) = $7
	CALL $11($7)
	
.LABEL $label$67
	$7 = *($3 + [16])
	if ( ($7 == 0) ){ goto $label$68 }
	*(($3 + [20])) = $7
	CALL $11($7)
	
.LABEL $label$68
	if ( (*($4 + [208]) & [1]) ){ goto $label$70 }
	if ( (*($4 + [160]) & [1]) ){ goto $label$69 }
	goto $label$43 
	
.LABEL $label$70
	CALL $11(*(($4 + [216])))
	if ( ((*($4 + [160]) & [1]) == 0) ){ goto $label$43 }
	
.LABEL $label$69
	CALL $11(*($4 + [168]))
	$3 = [1]
	if ( ((*($4 + [144]) & [1]) == 0) ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$47
	CALL $81(($4 + [304]))
	goto $label$45 
	
.LABEL $label$46
	CALL $80(($4 + [304]))
	
.LABEL $label$45
	*($4 + [176]) = (int_64)-1
	$3 = *($4 + [308])
	if ( ((int_64)*(($3 + [40])) != (int_64)*(($8 + [32]))) ){ goto $label$71 }
	*($4 + [176]) = *($3 + [24])
	
.LABEL $label$71
	$1 = *($0)
	*($4 + [256]) = ($4 + [176])
	if ( $6 ){ goto $label$72 }
	CALL eosio_assert([0], [8651])
	
.LABEL $label$72
	CALL $109($11, $6, $1, ($4 + [256]))
	
.LABEL $label$44
	*($4 + [248]) = (int_64)3617214756542218240
	$2 = *($0)
	*($4 + [240]) = $2
	$9 = *($8 + [8])
	CALL $83(($4 + [64]), ($0 + [264]), [10148])
	$3 = *($0 + [276])
	$7 = ($3 & [1])
	$3 = CALL $37(($4 + [64]), ( *(($0 + [284])) ? ($0 + [277]) : $7 ), ( *(($0 + [280])) ? uint_32($3 >> [1]) : $7 ))
	$6 = ($3 + [8])
	*((($4 + [80]) + [8])) = *($6)
	*($4 + [80]) = *($3)
	*($3) = (int_64)0
	$7 = [0]
	*($6) = [0]
	$12 = ($5 + [32])
	$1 = (uint_64)*(($8 + [32])) >> (uint_64)(int_64)8
	if ( (int_64)($1) == 0) ){ goto $label$76 }
	
.LOOP $label$78:
	*((($4 + [176]) + ($3 = $7))) = $1
	$7 = ($3 + [1])
	if ( ((uint_32)$3 > (uint_32)[5]) ){ goto $label$77 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)$1) != (int_64)0) ){ goto $label$78 }
	
.LABEL $label$77
	*(($4 + [56])) = [0]
	*($4 + [48]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$75 }
	*($4 + [48]) = ($7 << [1])
	$8 = (($4 + [48]) | [1])
	goto $label$74 
	
.LABEL $label$76
	*((($4 + [48]) + [8])) = [0]
	*($4 + [48]) = (int_64)0
	*($4 + [48]) = [0]
	$8 = (($4 + [48]) | [1])
	$3 = $8
	goto $label$73 
	
.LABEL $label$75
	$6 = (($7 + [16]) & [-16])
	$8 = CALL $9($6)
	*($4 + [48]) = ($6 | [1])
	*($4 + [56]) = $8
	*($4 + [52]) = $7
	
.LABEL $label$74
	$6 = ($3 + [1])
	$3 = [0]
	
.LOOP $label$79:
	*(($8 + $3)) = *((($4 + [176]) + $3))
	$3 = ($3 + [1])
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$79 }
	$3 = ($8 + $7)
	$8 = (($4 + [48]) | [1])
	
.LABEL $label$73
	*($3) = [0]
	$3 = *($4 + [48])
	$7 = ($3 & [1])
	$3 = CALL $37(($4 + [80]), ( *($4 + [56]) ? $8 : $7 ), ( *($4 + [52]) ? uint_32($3 >> [1]) : $7 ))
	$7 = ($3 + [8])
	*((($4 + [96]) + [8])) = *($7)
	*($4 + [96]) = *($3)
	*($3) = (int_64)0
	*($7) = [0]
	$3 = *($0 + [288])
	$7 = ($3 & [1])
	$3 = CALL $37(($4 + [96]), ( *(($0 + [296])) ? ($0 + [289]) : $7 ), ( *(($0 + [292])) ? uint_32($3 >> [1]) : $7 ))
	$7 = ($3 + [8])
	*((($4 + [112]) + [8])) = *($7)
	*($4 + [112]) = *($3)
	*($3) = (int_64)0
	*($7) = [0]
	CALL $84(($4 + [32]), $0, *(($5 + [24])), [8])
	$3 = *($4 + [32])
	$7 = ($3 & [1])
	$3 = CALL $37(($4 + [112]), ( *($4 + [40]) ? (($4 + [32]) | [1]) : $7 ), ( *($4 + [36]) ? uint_32($3 >> [1]) : $7 ))
	$7 = ($3 + [8])
	*((($4 + [128]) + [8])) = *($7)
	*($4 + [128]) = *($3)
	*($3) = (int_64)0
	*($7) = [0]
	$3 = *($0 + [324])
	$7 = ($3 & [1])
	$3 = CALL $37(($4 + [128]), ( *(($0 + [332])) ? ($0 + [325]) : $7 ), ( *(($0 + [328])) ? uint_32($3 >> [1]) : $7 ))
	$7 = ($3 + [8])
	*((($4 + [144]) + [8])) = *($7)
	*($4 + [144]) = *($3)
	*($3) = (int_64)0
	*($7) = [0]
	$3 = *($5 + [56])
	$7 = ($3 & [1])
	$3 = CALL $37(($4 + [144]), ( *(($5 + [64])) ? ($5 + [57]) : $7 ), ( *(($5 + [60])) ? uint_32($3 >> [1]) : $7 ))
	$7 = ($3 + [8])
	*((($4 + [160]) + [8])) = *($7)
	*($4 + [160]) = *($3)
	*($3) = (int_64)0
	*($7) = [0]
	$3 = *($0 + [312])
	$7 = ($3 & [1])
	$3 = CALL $37(($4 + [160]), ( *(($0 + [320])) ? ($0 + [313]) : $7 ), ( *(($0 + [316])) ? uint_32($3 >> [1]) : $7 ))
	$7 = *($3 + [8])
	*($3 + [8]) = [0]
	$1 = *($3)
	*($3) = (int_64)0
	$10 = *(($12 + [8]))
	$13 = *($12)
	$14 = *($5 + [16])
	*(($4 + [216])) = $7
	*((($4 + [176]) + [24])) = $10
	*($4 + [176]) = $2
	*($4 + [184]) = $14
	*($4 + [192]) = $13
	*($4 + [208]) = $1
	$3 = CALL $85(($4 + [256]), ($4 + [240]), $9, (int_64)-3617168760277827584, ($4 + [176]))
	CALL $86($3)
	$7 = *($3 + [28])
	if ( ($7 == 0) ){ goto $label$80 }
	*(($3 + [32])) = $7
	CALL $11($7)
	
.LABEL $label$80
	$7 = *($3 + [16])
	if ( ($7 == 0) ){ goto $label$81 }
	*(($3 + [20])) = $7
	CALL $11($7)
	
.LABEL $label$81
	if ( (*($4 + [208]) & [1]) ){ goto $label$99 }
	if ( (*($4 + [160]) & [1]) ){ goto $label$98 }
	goto $label$97 
	
.LABEL $label$99
	CALL $11(*(($4 + [216])))
	if ( ((*($4 + [160]) & [1]) == 0) ){ goto $label$97 }
	
.LABEL $label$98
	CALL $11(*($4 + [168]))
	$3 = [1]
	if ( ((*($4 + [144]) & [1]) == 0) ){ goto $label$96 }
	goto $label$95 
	
.LABEL $label$97
	$3 = [1]
	if ( (*($4 + [144]) & [1]) ){ goto $label$95 }
	
.LABEL $label$96
	if ( (*($4 + [128]) & $3) ){ goto $label$94 }
	goto $label$93 
	
.LABEL $label$95
	CALL $11(*($4 + [152]))
	if ( ((*($4 + [128]) & $3) == 0) ){ goto $label$93 }
	
.LABEL $label$94
	CALL $11(*($4 + [136]))
	$3 = [1]
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$92 }
	goto $label$91 
	
.LABEL $label$93
	$3 = [1]
	if ( (*($4 + [32]) & [1]) ){ goto $label$91 }
	
.LABEL $label$92
	if ( (*($4 + [112]) & $3) ){ goto $label$90 }
	goto $label$89 
	
.LABEL $label$91
	CALL $11(*(($4 + [40])))
	if ( ((*($4 + [112]) & $3) == 0) ){ goto $label$89 }
	
.LABEL $label$90
	CALL $11(*($4 + [120]))
	$3 = [1]
	if ( ((*($4 + [96]) & [1]) == 0) ){ goto $label$88 }
	goto $label$87 
	
.LABEL $label$89
	$3 = [1]
	if ( (*($4 + [96]) & [1]) ){ goto $label$87 }
	
.LABEL $label$88
	if ( (*($4 + [48]) & $3) ){ goto $label$86 }
	goto $label$85 
	
.LABEL $label$87
	CALL $11(*($4 + [104]))
	if ( ((*($4 + [48]) & $3) == 0) ){ goto $label$85 }
	
.LABEL $label$86
	CALL $11(*(($4 + [56])))
	$3 = [1]
	if ( ((*($4 + [80]) & [1]) == 0) ){ goto $label$84 }
	goto $label$83 
	
.LABEL $label$85
	$3 = [1]
	if ( (*($4 + [80]) & [1]) ){ goto $label$83 }
	
.LABEL $label$84
	if ( ((*($4 + [64]) & $3) == 0) ){ goto $label$27 }
	goto $label$82 
	
.LABEL $label$83
	CALL $11(*($4 + [88]))
	if ( ((*($4 + [64]) & $3) == 0) ){ goto $label$27 }
	
.LABEL $label$82
	CALL $11(*($4 + [72]))
	goto $label$27 
	
.LABEL $label$43
	$3 = [1]
	if ( (*($4 + [144]) & [1]) ){ goto $label$41 }
	
.LABEL $label$42
	if ( (*($4 + [128]) & $3) ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$41
	CALL $11(*($4 + [152]))
	if ( ((*($4 + [128]) & $3) == 0) ){ goto $label$39 }
	
.LABEL $label$40
	CALL $11(*($4 + [136]))
	$3 = [1]
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$39
	$3 = [1]
	if ( (*($4 + [32]) & [1]) ){ goto $label$37 }
	
.LABEL $label$38
	if ( (*($4 + [112]) & $3) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$37
	CALL $11(*(($4 + [40])))
	if ( ((*($4 + [112]) & $3) == 0) ){ goto $label$35 }
	
.LABEL $label$36
	CALL $11(*($4 + [120]))
	$3 = [1]
	if ( ((*($4 + [96]) & [1]) == 0) ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$35
	$3 = [1]
	if ( (*($4 + [96]) & [1]) ){ goto $label$33 }
	
.LABEL $label$34
	if ( (*($4 + [48]) & $3) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$33
	CALL $11(*($4 + [104]))
	if ( ((*($4 + [48]) & $3) == 0) ){ goto $label$31 }
	
.LABEL $label$32
	CALL $11(*(($4 + [56])))
	$3 = [1]
	if ( ((*($4 + [80]) & [1]) == 0) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$31
	$3 = [1]
	if ( (*($4 + [80]) & [1]) ){ goto $label$29 }
	
.LABEL $label$30
	if ( (*($4 + [64]) & $3) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	CALL $11(*($4 + [88]))
	if ( ((*($4 + [64]) & $3) == 0) ){ goto $label$27 }
	
.LABEL $label$28
	CALL $11(*($4 + [72]))
	if ( $5 ){ goto $label$25 }
	goto $label$26 
	
.LABEL $label$27
	if ( $5 ){ goto $label$25 }
	
.LABEL $label$26
	CALL eosio_assert([0], [9619])
	CALL eosio_assert([0], [9354])
	
.LABEL $label$25
	$3 = CALL db_next_i64(*($5 + [72]), ($4 + [176]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$100 }
	CALL $77(($4 + [320]), $3)
	
.LABEL $label$100
	CALL $88(($4 + [320]), $5)
	$0 = *($4 + [344])
	if ( ($0 == 0) ){ goto $label$101 }
	$8 = ($4 + [348])
	$3 = *($8)
	if ( ((int_32)$3 == (int_32)$0) ){ goto $label$103 }
	
.LOOP $label$104:
	$3 = ($3 + [-24])
	$7 = *($3)
	*($3) = [0]
	if ( ($7 == 0) ){ goto $label$105 }
	if ( ((*($7 + [56]) & [1]) == 0) ){ goto $label$106 }
	CALL $11(*(($7 + [64])))
	
.LABEL $label$106
	CALL $11($7)
	
.LABEL $label$105
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$104 }
	$3 = *(($4 + [344]))
	goto $label$102 
	
.LABEL $label$103
	$3 = $0
	
.LABEL $label$102
	*($8) = $0
	CALL $11($3)
	
.LABEL $label$101
	$global$0 = ($4 + [368])
}

int_32 .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$5 }
	CALL eosio_assert([0], [8889])
	$3 = [12]
	goto $label$4 
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$6:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$8 }
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$9 }
	$7 = ($7 + [-48])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [-91])
	goto $label$7 
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert([0], [8994])
	$4 = *($0)
	
.LABEL $label$7
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$2
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [8927])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [8994])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$1
	return $0
}

void .FUNC $51 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [32])
	$global$0 = $3
	CALL require_auth($1)
	*($3 + [16]) = [9801]
	*($3 + [20]) = CALL $1([9801])
	*($3 + [8]) = *($3 + [16])
	if ( ((int_64)*(CALL $50(($3 + [24]), ($3 + [8]))) == (int_64)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [9814])
	
.LABEL $label$1
	if ( CALL is_account($1) ){ goto $label$2 }
	CALL eosio_assert([0], [9832])
	
.LABEL $label$2
	$4 = ($0 + [152])
	$6 = *(($0 + [180]))
	$5 = *(($0 + [176]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	
.LOOP $label$7:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$2) ){ goto $label$6 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	if ( ((int_32)*(($8 + [76])) == (int_32)$4) ){ goto $label$8 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$8
	if ( $8 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$8 = [0]
	$7 = CALL db_find_i64(*($4), *(($0 + [160])), (int_64)-4156459970285535232, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$8 = CALL $76($4, $7)
	if ( ((int_32)*($8 + [76]) == (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [9275])
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [9619])
	CALL eosio_assert([0], [9354])
	
.LABEL $label$3
	$7 = CALL db_next_i64(*($8 + [80]), ($3 + [24]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	CALL $76($4, $7)
	
.LABEL $label$9
	CALL $111($4, $8)
	$global$0 = ($3 + [32])
}

int_32 .FUNC $52 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [384])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [376]) = (int_64)0
	*($4 + [368]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9349])
	
.LABEL $label$5
	$3 = ($2 + $7)
	$8 = (($4 + [368]) + [8])
	CALL memcpy(($4 + [368]), $2, [8])
	$9 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9349])
	
.LABEL $label$6
	CALL memcpy($8, $9, [8])
	*(($4 + [8])) = $3
	*($4 + [16]) = $2
	*($4 + [20]) = ($2 + [16])
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$8 = CALL $72(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$0 = *((($4 + [368]) + [8]))
	$1 = *($4 + [368])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $3($2)
	
.LABEL $label$8
	CALL $74($8)
	$global$0 = ($4 + [384])
	return [1]
}

void .FUNC $53 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	float_64 $19
	int_64 $20
	$3 = ($global$0 - [400])
	$global$0 = $3
	CALL $114(($3 + [320]))
	$5 = *($0)
	$4 = *($3 + [320])
	if ( ((int_64)$4 == (int_64)$5) ){ goto $label$3 }
	if ( ((int_64)*($3 + [328]) != (int_64)$5) ){ goto $label$3 }
	if ( ((int_64)$4 > (int_64)6138663590357893119) ){ goto $label$7 }
	if ( ((int_64)$4 <= (int_64)6138663588137709567) ){ goto $label$6 }
	if ( ((int_64)$4 == (int_64)6138663588137709568) ){ goto $label$3 }
	if ( ((int_64)$4 == (int_64)6138663590285017088) ){ goto $label$3 }
	if ( ((int_64)$4 == (int_64)6138663590285202592) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$7
	if ( ((int_64)$4 <= (int_64)6138663591134630911) ){ goto $label$5 }
	if ( ((int_64)$4 == (int_64)6138663591134630912) ){ goto $label$3 }
	if ( ((int_64)$4 == (int_64)6138663591592764928) ){ goto $label$3 }
	if ( ((int_64)$4 == (int_64)6138663592678359040) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$4 == (int_64)6138663581940940800) ){ goto $label$3 }
	if ( ((int_64)$4 == (int_64)6138663587900751872) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_64)$4 == (int_64)6138663590357893120) ){ goto $label$3 }
	if ( ((int_64)$4 == (int_64)6138663590826845888) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ((int_64)$5 > (int_64)6138663590357893119) ){ goto $label$11 }
	if ( ((int_64)$5 <= (int_64)6138663588137709567) ){ goto $label$10 }
	if ( ((int_64)$5 == (int_64)6138663588137709568) ){ goto $label$3 }
	if ( ((int_64)$5 == (int_64)6138663590285017088) ){ goto $label$3 }
	if ( ((int_64)$5 == (int_64)6138663590285202592) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$11
	if ( ((int_64)$5 <= (int_64)6138663591134630911) ){ goto $label$9 }
	if ( ((int_64)$5 == (int_64)6138663591134630912) ){ goto $label$3 }
	if ( ((int_64)$5 == (int_64)6138663591592764928) ){ goto $label$3 }
	if ( ((int_64)$5 == (int_64)6138663592678359040) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$10
	if ( ((int_64)$5 == (int_64)6138663581940940800) ){ goto $label$3 }
	if ( ((int_64)$5 == (int_64)6138663587900751872) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_64)$5 == (int_64)6138663590357893120) ){ goto $label$3 }
	if ( ((int_64)$5 == (int_64)6138663590826845888) ){ goto $label$3 }
	
.LABEL $label$8
	*($3 + [384]) = *($0 + [8])
	$6 = ($0 + [152])
	*($3 + [376]) = $6
	CALL $115(($3 + [392]), ($3 + [376]), ($3 + [384]))
	$7 = *($3 + [396])
	if ( ($7 == 0) ){ goto $label$13 }
	$7 = ( $7 ? [0] : ((int_64)*($3 + [384]) == (int_64)*($7 + [8])) )
	goto $label$12 
	
.LABEL $label$13
	$7 = [0]
	
.LABEL $label$12
	*($3 + [368]) = [9138]
	*($3 + [372]) = CALL $1([9138])
	*($3 + [32]) = *($3 + [368])
	CALL $50(($3 + [392]), ($3 + [32]))
	$4 = *($3 + [384])
	if ( ((int_64)$4 == (int_64)6138663591592764928) ){ goto $label$14 }
	if ( ($7 == 0) ){ goto $label$3 }
	if ( ((int_64)*($7 + [8]) != (int_64)$4) ){ goto $label$3 }
	
.LABEL $label$14
	$10 = ( *(($3 + [356])) ? uint_32($9 >> [1]) : $10 )
	$9 = *($3 + [352])
	$10 = ($9 & [1])
	$8 = ($3 + [353])
	$7 = ( *(($3 + [360])) ? $8 : $10 )
	$11 = ($7 + $10)
	if ( ($10 == 0) ){ goto $label$16 }
	
.LOOP $label$17:
	if ( ((int_32)*($7) == (int_32)[32]) ){ goto $label$16 }
	$7 = ($7 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( ((int_32)$7 == (int_32)$11) ){ goto $label$18 }
	$10 = ($7 + [1])
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$18 }
	
.LOOP $label$19:
	$9 = *($10)
	if ( ((int_32)$9 == (int_32)[32]) ){ goto $label$20 }
	*($7) = $9
	$7 = ($7 + [1])
	
.LABEL $label$20
	$10 = ($10 + [1])
	if ( ((int_32)$11 != (int_32)$10) ){ goto $label$19 }
	$9 = *(($3 + [352]))
	
.LABEL $label$18
	$11 = $7
	
.LABEL $label$15
	$12 = (($3 + [320]) + [32])
	if ( ($9 & [1]) ){ goto $label$22 }
	$7 = (($12 + uint_32(($9 & [254]) >> [1])) + [1])
	$10 = $8
	goto $label$21 
	
.LABEL $label$22
	$10 = *(($3 + [360]))
	$7 = ($10 + *(($3 + [356])))
	
.LABEL $label$21
	CALL $38($12, ($11 - $10), ($7 - $11))
	$10 = ( *(($3 + [356])) ? uint_32($9 >> [1]) : $10 )
	$9 = *(($3 + [352]))
	$10 = ($9 & [1])
	$7 = ( *(($3 + [360])) ? $8 : $10 )
	$11 = ($7 + $10)
	if ( ($10 == 0) ){ goto $label$24 }
	
.LOOP $label$25:
	if ( ((int_32)*($7) == (int_32)[34]) ){ goto $label$24 }
	$7 = ($7 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$25 }
	goto $label$23 
	
.LABEL $label$24
	if ( ((int_32)$7 == (int_32)$11) ){ goto $label$26 }
	$10 = ($7 + [1])
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$26 }
	
.LOOP $label$27:
	$9 = *($10)
	if ( ((int_32)$9 == (int_32)[34]) ){ goto $label$28 }
	*($7) = $9
	$7 = ($7 + [1])
	
.LABEL $label$28
	$10 = ($10 + [1])
	if ( ((int_32)$11 != (int_32)$10) ){ goto $label$27 }
	$9 = *(($3 + [352]))
	
.LABEL $label$26
	$11 = $7
	
.LABEL $label$23
	if ( ($9 & [1]) ){ goto $label$30 }
	$7 = (($12 + uint_32(($9 & [254]) >> [1])) + [1])
	$10 = $8
	goto $label$29 
	
.LABEL $label$30
	$10 = *(($3 + [360]))
	$7 = ($10 + *(($3 + [356])))
	
.LABEL $label$29
	CALL $38($12, ($11 - $10), ($7 - $11))
	$10 = ( *(($3 + [356])) ? uint_32($9 >> [1]) : $10 )
	$9 = *(($3 + [352]))
	$10 = ($9 & [1])
	$7 = ( *(($3 + [360])) ? $8 : $10 )
	$11 = ($7 + $10)
	if ( ($10 == 0) ){ goto $label$32 }
	
.LOOP $label$33:
	if ( ((int_32)*($7) == (int_32)[123]) ){ goto $label$32 }
	$7 = ($7 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$32
	if ( ((int_32)$7 == (int_32)$11) ){ goto $label$34 }
	$10 = ($7 + [1])
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$34 }
	
.LOOP $label$35:
	$9 = *($10)
	if ( ((int_32)$9 == (int_32)[123]) ){ goto $label$36 }
	*($7) = $9
	$7 = ($7 + [1])
	
.LABEL $label$36
	$10 = ($10 + [1])
	if ( ((int_32)$11 != (int_32)$10) ){ goto $label$35 }
	$9 = *(($3 + [352]))
	
.LABEL $label$34
	$11 = $7
	
.LABEL $label$31
	if ( ($9 & [1]) ){ goto $label$38 }
	$7 = (($12 + uint_32(($9 & [254]) >> [1])) + [1])
	$10 = $8
	goto $label$37 
	
.LABEL $label$38
	$10 = *(($3 + [360]))
	$7 = ($10 + *(($3 + [356])))
	
.LABEL $label$37
	CALL $38($12, ($11 - $10), ($7 - $11))
	$10 = ( *(($3 + [356])) ? uint_32($9 >> [1]) : $10 )
	$9 = *(($3 + [352]))
	$10 = ($9 & [1])
	$7 = ( *(($3 + [360])) ? $8 : $10 )
	$11 = ($7 + $10)
	if ( ($10 == 0) ){ goto $label$40 }
	
.LOOP $label$41:
	if ( ((int_32)*($7) == (int_32)[125]) ){ goto $label$40 }
	$7 = ($7 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$41 }
	goto $label$39 
	
.LABEL $label$40
	if ( ((int_32)$7 == (int_32)$11) ){ goto $label$42 }
	$10 = ($7 + [1])
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$42 }
	
.LOOP $label$43:
	$9 = *($10)
	if ( ((int_32)$9 == (int_32)[125]) ){ goto $label$44 }
	*($7) = $9
	$7 = ($7 + [1])
	
.LABEL $label$44
	$10 = ($10 + [1])
	if ( ((int_32)$11 != (int_32)$10) ){ goto $label$43 }
	$9 = *(($3 + [352]))
	
.LABEL $label$42
	$11 = $7
	
.LABEL $label$39
	if ( ($9 & [1]) ){ goto $label$46 }
	$7 = (($12 + uint_32(($9 & [254]) >> [1])) + [1])
	goto $label$45 
	
.LABEL $label$46
	$8 = *(($3 + [360]))
	$7 = ($8 + *(($3 + [356])))
	
.LABEL $label$45
	CALL $38($12, ($11 - $8), ($7 - $11))
	$10 = CALL $32(($3 + [304]), $12)
	*(($3 + [296])) = [0]
	*($3 + [288]) = (int_64)0
	$7 = CALL $1([10155])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$53 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$56 }
	*($3 + [288]) = ($7 << [1])
	$11 = (($3 + [288]) | [1])
	if ( $7 ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$56
	$9 = (($7 + [16]) & [-16])
	$11 = CALL $9($9)
	*($3 + [288]) = ($9 | [1])
	*($3 + [296]) = $11
	*($3 + [292]) = $7
	
.LABEL $label$55
	CALL memcpy($11, [10155], $7)
	
.LABEL $label$54
	*(($11 + $7)) = [0]
	$7 = CALL $116($0, $10, ($3 + [288]), [5])
	if ( ((*($3 + [288]) & [1]) == 0) ){ goto $label$57 }
	CALL $11(*($3 + [296]))
	
.LABEL $label$57
	if ( ((*($10) & [1]) == 0) ){ goto $label$58 }
	CALL $11(*($10 + [8]))
	
.LABEL $label$58
	$11 = CALL $32(($3 + [272]), $7)
	*(($3 + [264])) = [0]
	*($3 + [256]) = (int_64)0
	$10 = CALL $1([10157])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$52 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$61 }
	*($3 + [256]) = ($10 << [1])
	$9 = (($3 + [256]) | [1])
	if ( $10 ){ goto $label$60 }
	goto $label$59 
	
.LABEL $label$61
	$12 = (($10 + [16]) & [-16])
	$9 = CALL $9($12)
	*($3 + [256]) = ($12 | [1])
	*($3 + [264]) = $9
	*($3 + [260]) = $10
	
.LABEL $label$60
	CALL memcpy($9, [10157], $10)
	
.LABEL $label$59
	*(($9 + $10)) = [0]
	$13 = CALL $116($0, $11, ($3 + [256]), [2])
	if ( ((*($3 + [256]) & [1]) == 0) ){ goto $label$62 }
	CALL $11(*($3 + [264]))
	
.LABEL $label$62
	if ( ((*($11) & [1]) == 0) ){ goto $label$63 }
	CALL $11(*($11 + [8]))
	
.LABEL $label$63
	$11 = CALL $32(($3 + [240]), ($7 + [12]))
	*(($3 + [232])) = [0]
	*($3 + [224]) = (int_64)0
	$10 = CALL $1([10157])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$51 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$66 }
	*($3 + [224]) = ($10 << [1])
	$9 = (($3 + [224]) | [1])
	if ( $10 ){ goto $label$65 }
	goto $label$64 
	
.LABEL $label$66
	$12 = (($10 + [16]) & [-16])
	$9 = CALL $9($12)
	*($3 + [224]) = ($12 | [1])
	*($3 + [232]) = $9
	*($3 + [228]) = $10
	
.LABEL $label$65
	CALL memcpy($9, [10157], $10)
	
.LABEL $label$64
	*(($9 + $10)) = [0]
	$14 = CALL $116($0, $11, ($3 + [224]), [2])
	if ( ((*($3 + [224]) & [1]) == 0) ){ goto $label$67 }
	CALL $11(*($3 + [232]))
	
.LABEL $label$67
	if ( ((*($11) & [1]) == 0) ){ goto $label$68 }
	CALL $11(*($11 + [8]))
	
.LABEL $label$68
	$11 = CALL $32(($3 + [208]), ($7 + [24]))
	*(($3 + [200])) = [0]
	*($3 + [192]) = (int_64)0
	$10 = CALL $1([10157])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$50 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$71 }
	*($3 + [192]) = ($10 << [1])
	$9 = (($3 + [192]) | [1])
	if ( $10 ){ goto $label$70 }
	goto $label$69 
	
.LABEL $label$71
	$12 = (($10 + [16]) & [-16])
	$9 = CALL $9($12)
	*($3 + [192]) = ($12 | [1])
	*($3 + [200]) = $9
	*($3 + [196]) = $10
	
.LABEL $label$70
	CALL memcpy($9, [10157], $10)
	
.LABEL $label$69
	*(($9 + $10)) = [0]
	$15 = CALL $116($0, $11, ($3 + [192]), [2])
	if ( ((*($3 + [192]) & [1]) == 0) ){ goto $label$72 }
	CALL $11(*($3 + [200]))
	
.LABEL $label$72
	if ( ((*($11) & [1]) == 0) ){ goto $label$73 }
	CALL $11(*($11 + [8]))
	
.LABEL $label$73
	$11 = CALL $32(($3 + [176]), ($7 + [36]))
	*(($3 + [168])) = [0]
	*($3 + [160]) = (int_64)0
	$10 = CALL $1([10157])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$49 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$76 }
	*($3 + [160]) = ($10 << [1])
	$9 = (($3 + [160]) | [1])
	if ( $10 ){ goto $label$75 }
	goto $label$74 
	
.LABEL $label$76
	$12 = (($10 + [16]) & [-16])
	$9 = CALL $9($12)
	*($3 + [160]) = ($12 | [1])
	*($3 + [168]) = $9
	*($3 + [164]) = $10
	
.LABEL $label$75
	CALL memcpy($9, [10157], $10)
	
.LABEL $label$74
	*(($9 + $10)) = [0]
	$16 = CALL $116($0, $11, ($3 + [160]), [2])
	if ( ((*($3 + [160]) & [1]) == 0) ){ goto $label$77 }
	CALL $11(*($3 + [168]))
	
.LABEL $label$77
	if ( ((*($11) & [1]) == 0) ){ goto $label$78 }
	CALL $11(*($11 + [8]))
	
.LABEL $label$78
	$10 = CALL $32(($3 + [144]), ($7 + [48]))
	*(($3 + [136])) = [0]
	*($3 + [128]) = (int_64)0
	$7 = CALL $1([10157])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$48 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$81 }
	*($3 + [128]) = ($7 << [1])
	$11 = (($3 + [128]) | [1])
	if ( $7 ){ goto $label$80 }
	goto $label$79 
	
.LABEL $label$81
	$9 = (($7 + [16]) & [-16])
	$11 = CALL $9($9)
	*($3 + [128]) = ($9 | [1])
	*($3 + [136]) = $11
	*($3 + [132]) = $7
	
.LABEL $label$80
	CALL memcpy($11, [10157], $7)
	
.LABEL $label$79
	*(($11 + $7)) = [0]
	$17 = CALL $116($0, $10, ($3 + [128]), [2])
	if ( ((*($3 + [128]) & [1]) == 0) ){ goto $label$82 }
	CALL $11(*($3 + [136]))
	
.LABEL $label$82
	if ( ((*($10) & [1]) == 0) ){ goto $label$83 }
	CALL $11(*($10 + [8]))
	
.LABEL $label$83
	$18 = ($15 + [12])
	$10 = CALL $32(($3 + [112]), $18)
	*(($3 + [104])) = [0]
	*($3 + [96]) = (int_64)0
	$7 = CALL $1([10159])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$47 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$86 }
	*($3 + [96]) = ($7 << [1])
	$11 = (($3 + [96]) | [1])
	if ( $7 ){ goto $label$85 }
	goto $label$84 
	
.LABEL $label$86
	$9 = (($7 + [16]) & [-16])
	$11 = CALL $9($9)
	*($3 + [96]) = ($9 | [1])
	*($3 + [104]) = $11
	*($3 + [100]) = $7
	
.LABEL $label$85
	CALL memcpy($11, [10159], $7)
	
.LABEL $label$84
	*(($11 + $7)) = [0]
	$12 = CALL $116($0, $10, ($3 + [96]), [2])
	if ( ((*($3 + [96]) & [1]) == 0) ){ goto $label$87 }
	CALL $11(*($3 + [104]))
	
.LABEL $label$87
	if ( ((*($10) & [1]) == 0) ){ goto $label$88 }
	CALL $11(*($10 + [8]))
	
.LABEL $label$88
	$7 = CALL $40($12, [0], [10])
	$8 = ($12 + [12])
	$19 = ((float_64)((float_64)CALL $46((float_64)10, (float_64)8) * (float_64)(CASTING float_64)(int_32 $7)) + (float_64)(CASTING float_64)(int_32 CALL $40($8, [0], [10])))
	if ( (((float_64)$19 < (float_64)(float_64)18446744073709551615) & ((float_64)$19 >= (float_64)(float_64)0)) ){ goto $label$91 }
	$20 = (int_64)0
	if ( CALL $39($13, [10161]) ){ goto $label$90 }
	goto $label$89 
	
.LABEL $label$91
	$20 = (Rounds 0)($19)
	if ( (CALL $39($13, [10161]) == 0) ){ goto $label$89 }
	
.LABEL $label$90
	CALL eosio_assert([0], [10166])
	
.LABEL $label$89
	if ( (CALL $39($14, [10183]) == 0) ){ goto $label$92 }
	CALL eosio_assert([0], [10188])
	
.LABEL $label$92
	if ( (CALL $39($15, [10205]) == 0) ){ goto $label$93 }
	CALL eosio_assert([0], [10211])
	
.LABEL $label$93
	if ( (CALL $39($16, [10229]) == 0) ){ goto $label$94 }
	CALL eosio_assert([0], [10233])
	
.LABEL $label$94
	if ( (CALL $39($17, [10249]) == 0) ){ goto $label$95 }
	CALL eosio_assert([0], [10256])
	
.LABEL $label$95
	$7 = ($13 + [12])
	if ( (CALL $39($7, [10275]) == 0) ){ goto $label$96 }
	if ( (CALL $39($7, [10281]) == 0) ){ goto $label$96 }
	CALL eosio_assert([0], [10286])
	
.LABEL $label$96
	$4 = CALL $75($0, ($14 + [12]))
	if ( ((int_64)$4 != (int_64)-1) ){ goto $label$97 }
	CALL eosio_assert([0], [10305])
	
.LABEL $label$97
	$10 = *(($0 + [180]))
	$9 = *(($0 + [176]))
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$99 }
	
.LOOP $label$101:
	$7 = ($10 + [-24])
	$11 = *($7)
	if ( ((int_64)*($11) == (int_64)$4) ){ goto $label$100 }
	$10 = $7
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$101 }
	goto $label$99 
	
.LABEL $label$100
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$99 }
	if ( ((int_32)*(($11 + [76])) == (int_32)$6) ){ goto $label$98 }
	CALL eosio_assert([0], [9275])
	goto $label$98 
	
.LABEL $label$99
	$11 = [0]
	$7 = CALL db_find_i64(*(($0 + [152])), *(($0 + [160])), (int_64)-4156459970285535232, $4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$98 }
	$11 = CALL $76($6, $7)
	if ( ((int_32)*($11 + [76]) == (int_32)$6) ){ goto $label$98 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$98
	$7 = ($0 + [8])
	if ( ((int_64)*($11 + [8]) == (int_64)*($7)) ){ goto $label$102 }
	*($3 + [88]) = [9138]
	*($3 + [92]) = CALL $1([9138])
	*($3 + [24]) = *($3 + [88])
	if ( ((int_64)*(CALL $50(($3 + [392]), ($3 + [24]))) == (int_64)*($7)) ){ goto $label$102 }
	CALL eosio_assert([0], [10324])
	
.LABEL $label$102
	$7 = *($18)
	if ( ($7 & [1]) ){ goto $label$108 }
	$10 = uint_32($7 >> [1])
	$7 = [1]
	$9 = *($12)
	if ( (($9 & [1]) == 0) ){ goto $label$107 }
	goto $label$106 
	
.LABEL $label$108
	$10 = *(($15 + [16]))
	$7 = [1]
	$9 = *($12)
	if ( ($9 & [1]) ){ goto $label$106 }
	
.LABEL $label$107
	$9 = uint_32($9 >> $7)
	$15 = [1]
	$7 = *($8)
	if ( (($7 & [1]) == 0) ){ goto $label$105 }
	goto $label$104 
	
.LABEL $label$106
	$9 = *($12 + [4])
	$15 = [1]
	$7 = *($8)
	if ( ($7 & [1]) ){ goto $label$104 }
	
.LABEL $label$105
	$15 = uint_32($7 >> $15)
	goto $label$103 
	
.LABEL $label$104
	$15 = *(($12 + [16]))
	
.LABEL $label$103
	if ( ((int_32)$10 == (int_32)(($9 + $15) + [1])) ){ goto $label$109 }
	CALL eosio_assert([0], [10346])
	$7 = *($8)
	
.LABEL $label$109
	if ( ($7 & [1]) ){ goto $label$112 }
	if ( ((int_32)uint_32(($7 & [254]) >> [1]) != (int_32)[8]) ){ goto $label$111 }
	goto $label$110 
	
.LABEL $label$112
	if ( ((int_32)*(($12 + [16])) == (int_32)[8]) ){ goto $label$110 }
	
.LABEL $label$111
	CALL eosio_assert([0], [10362])
	
.LABEL $label$110
	$15 = CALL $32(($3 + [72]), $12)
	$7 = *($12)
	if ( ($7 & [1]) ){ goto $label$115 }
	$7 = uint_32($7 >> [1])
	if ( $7 ){ goto $label$114 }
	goto $label$113 
	
.LABEL $label$115
	$7 = *($12 + [4])
	if ( ($7 == 0) ){ goto $label$113 }
	
.LABEL $label$114
	if ( (*($15) & [1]) ){ goto $label$117 }
	$9 = (($3 + [72]) | [1])
	$10 = [0]
	
.LOOP $label$118:
	$5 = ((int_64)*(($9 + $10)) + (int_64)-48)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$120 }
	if ( ((uint_64)$5 <= (uint_64)(int_64)9) ){ goto $label$119 }
	goto $label$116 
	
.LABEL $label$120
	if ( ((int_64)($5 == 0) == 0) ){ goto $label$116 }
	
.LABEL $label$119
	$10 = ($10 + [1])
	if ( ($10 <= $7) ){ goto $label$118 }
	goto $label$113 
	
.LABEL $label$117
	$9 = *($15 + [8])
	$10 = [0]
	
.LOOP $label$121:
	$5 = ((int_64)*(($9 + $10)) + (int_64)-48)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$123 }
	if ( ((uint_64)$5 <= (uint_64)(int_64)9) ){ goto $label$122 }
	goto $label$116 
	
.LABEL $label$123
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$116 }
	
.LABEL $label$122
	$10 = ($10 + [1])
	if ( ($10 <= $7) ){ goto $label$121 }
	goto $label$113 
	
.LABEL $label$116
	CALL eosio_assert([0], [10387])
	
.LABEL $label$113
	if ( ((*($15) & [1]) == 0) ){ goto $label$124 }
	CALL $11(*($15 + [8]))
	
.LABEL $label$124
	$15 = CALL $32(($3 + [56]), $8)
	$7 = *($11 + [40])
	$10 = *($8)
	if ( ($10 & [1]) ){ goto $label$127 }
	$10 = uint_32($10 >> [1])
	if ( $10 ){ goto $label$126 }
	goto $label$125 
	
.LABEL $label$127
	$10 = *(($12 + [16]))
	if ( ($10 == 0) ){ goto $label$125 }
	
.LABEL $label$126
	$9 = ($7 & [255])
	if ( (*($15) & [1]) ){ goto $label$129 }
	$12 = (($3 + [56]) | [1])
	$7 = [0]
	
.LOOP $label$130:
	$5 = ((int_64)*(($12 + $7)) + (int_64)-48)
	if ( ((uint_32)$7 >= (uint_32)$9) ){ goto $label$132 }
	if ( ((uint_64)$5 <= (uint_64)(int_64)9) ){ goto $label$131 }
	goto $label$128 
	
.LABEL $label$132
	if ( ((int_64)($5 == 0) == 0) ){ goto $label$128 }
	
.LABEL $label$131
	$7 = ($7 + [1])
	if ( ($7 <= $10) ){ goto $label$130 }
	goto $label$125 
	
.LABEL $label$129
	$12 = *($15 + [8])
	$7 = [0]
	
.LOOP $label$133:
	$5 = ((int_64)*(($12 + $7)) + (int_64)-48)
	if ( ((uint_32)$7 >= (uint_32)$9) ){ goto $label$135 }
	if ( ((uint_64)$5 <= (uint_64)(int_64)9) ){ goto $label$134 }
	goto $label$128 
	
.LABEL $label$135
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$128 }
	
.LABEL $label$134
	$7 = ($7 + [1])
	if ( ($7 <= $10) ){ goto $label$133 }
	goto $label$125 
	
.LABEL $label$128
	CALL eosio_assert([0], [10428])
	
.LABEL $label$125
	if ( ((*($15) & [1]) == 0) ){ goto $label$136 }
	CALL $11(*($15 + [8]))
	
.LABEL $label$136
	$10 = ($17 + [12])
	if ( ((int_64)CALL $96($0, $10, $4) != (int_64)-1) ){ goto $label$137 }
	CALL eosio_assert([0], [10452])
	
.LABEL $label$137
	$7 = *($11 + [72])
	if ( ((int_32)$7 == (int_32)[2]) ){ goto $label$138 }
	if ( ((int_32)$7 != (int_32)[1]) ){ goto $label$3 }
	$5 = *(($3 + [344]))
	*((($3 + [40]) + [8])) = $5
	*((($3 + [8]) + [8])) = $5
	$5 = *($3 + [336])
	*($3 + [40]) = $5
	*($3 + [8]) = $5
	CALL $117($0, *($3 + [320]), *((($3 + [320]) + [8])), ($3 + [8]), $20, ($16 + [12]), $10, $4)
	if ( (*($3 + [352]) & [1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$138
	CALL eosio_assert([0], [10473])
	if ( (*($3 + [352]) & [1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$53
	CALL $31(($3 + [288]))
	
.LABEL $label$52
	CALL $31(($3 + [256]))
	
.LABEL $label$51
	CALL $31(($3 + [224]))
	
.LABEL $label$50
	CALL $31(($3 + [192]))
	
.LABEL $label$49
	CALL $31(($3 + [160]))
	
.LABEL $label$48
	CALL $31(($3 + [128]))
	
.LABEL $label$47
	CALL $31(($3 + [96]))
	
.LABEL $label$3
	if ( ((*($3 + [352]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL $11(*(($3 + [360])))
	
.LABEL $label$1
	$global$0 = ($3 + [400])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $54 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [384])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [376]) = (int_64)0
	*($4 + [368]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9349])
	
.LABEL $label$5
	$3 = ($2 + $7)
	$8 = (($4 + [368]) + [8])
	CALL memcpy(($4 + [368]), $2, [8])
	$9 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9349])
	
.LABEL $label$6
	CALL memcpy($8, $9, [8])
	*(($4 + [8])) = $3
	*($4 + [16]) = $2
	*($4 + [20]) = ($2 + [16])
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$8 = CALL $72(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$0 = *((($4 + [368]) + [8]))
	$1 = *($4 + [368])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $3($2)
	
.LABEL $label$8
	CALL $74($8)
	$global$0 = ($4 + [384])
	return [1]
}

void .FUNC $55 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$5 = ($global$0 - [48])
	$global$0 = $5
	*($5 + [32]) = $4
	*($5 + [40]) = $3
	CALL require_auth($1)
	*($5 + [16]) = [9801]
	*($5 + [20]) = CALL $1([9801])
	*($5 + [8]) = *($5 + [16])
	if ( ((int_64)*(CALL $50(($5 + [24]), ($5 + [8]))) == (int_64)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [9814])
	
.LABEL $label$1
	if ( CALL is_account($1) ){ goto $label$2 }
	CALL eosio_assert([0], [9832])
	
.LABEL $label$2
	$6 = ($0 + [72])
	$8 = *(($0 + [100]))
	$7 = *(($0 + [96]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$4 }
	
.LOOP $label$6:
	$9 = ($8 + [-24])
	$10 = *($9)
	if ( ((int_64)*($10) == (int_64)$2) ){ goto $label$5 }
	$8 = $9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$4 }
	if ( ((int_32)*($10 + [24]) == (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9275])
	goto $label$3 
	
.LABEL $label$4
	$10 = [0]
	$9 = CALL db_find_i64(*($6), *(($0 + [80])), (int_64)-4148261996757778432, $2)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$3 }
	$10 = CALL $78($6, $9)
	if ( ((int_32)*($10 + [24]) == (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$3
	$2 = *($0)
	*($5 + [28]) = ($5 + [32])
	*($5 + [24]) = ($5 + [40])
	if ( $10 ){ goto $label$7 }
	CALL eosio_assert([0], [8651])
	
.LABEL $label$7
	CALL $113($6, $10, $2, ($5 + [24]))
	$global$0 = ($5 + [48])
}

int_32 .FUNC $56 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	$3 = ($global$0 - [432])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [400]) = (int_64)0
	*($4 + [392]) = (int_64)0
	*($4 + [408]) = (int_64)0
	*($4 + [416]) = (int_64)0
	*($4 + [380]) = $2
	*($4 + [376]) = $2
	*($4 + [384]) = ($2 + $7)
	*($4 + [424]) = ($4 + [376])
	*($4 + [40]) = ($4 + [392])
	CALL $112(($4 + [40]), ($4 + [424]))
	$3 = *($4 + [384])
	*((($4 + [24]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$8 = *($4 + [376])
	*($4 + [8]) = $8
	*($4 + [24]) = $8
	$9 = CALL $72(($4 + [40]), $0, $1, ($4 + [8]))
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	$0 = *($4 + [416])
	$1 = *($4 + [408])
	$8 = *($4 + [400])
	$10 = *($4 + [392])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $10), (int_64 $8), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $3($2)
	
.LABEL $label$6
	CALL $74($9)
	$global$0 = ($4 + [432])
	return [1]
}

void .FUNC $57 (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	$5 = ($global$0 - [352])
	$global$0 = $5
	CALL require_auth($1)
	if ( CALL is_account($1) ){ goto $label$1 }
	CALL eosio_assert([0], [9046])
	
.LABEL $label$1
	$6 = CALL $75($0, $4)
	if ( ((int_64)$6 != (int_64)-1) ){ goto $label$2 }
	CALL eosio_assert([0], [9072])
	
.LABEL $label$2
	$7 = ($0 + [152])
	$9 = *(($0 + [180]))
	$8 = *(($0 + [176]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$4 }
	
.LOOP $label$6:
	$4 = ($9 + [-24])
	$10 = *($4)
	if ( ((int_64)*($10) == (int_64)$6) ){ goto $label$5 }
	$9 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$4 }
	if ( ((int_32)*(($10 + [76])) == (int_32)$7) ){ goto $label$3 }
	CALL eosio_assert([0], [9275])
	goto $label$3 
	
.LABEL $label$4
	$10 = [0]
	$4 = CALL db_find_i64(*($7), *(($0 + [160])), (int_64)-4156459970285535232, $6)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	$10 = CALL $76($7, $4)
	if ( ((int_32)*($10 + [76]) == (int_32)$7) ){ goto $label$3 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$3
	$8 = [0]
	*(($5 + [344])) = [0]
	*($5 + [328]) = (int_64)-1
	*($5 + [336]) = (int_64)0
	$11 = *($0)
	*($5 + [312]) = $11
	$12 = *($10 + [32])
	*($5 + [348]) = [0]
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	*($5 + [320]) = $12)
	$4 = CALL db_find_i64($11, $12, (int_64)-4149657304265580544, $3)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$9 }
	$8 = CALL $77(($5 + [312]), $4)
	if ( ((int_32)*($8 + [68]) == (int_32)($5 + [312])) ){ goto $label$10 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$10
	if ( ((int_64)*($8 + [16]) == (int_64)$1) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [9089])
	if ( ((int_64)*([0] + [16]) == (int_64)$1) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [9113])
	
.LABEL $label$7
	$13 = ($8 + [56])
	$9 = ($4 & [1])
	$4 = *($2)
	$7 = ($4 & [1])
	$4 = *($8 + [56])
	$14 = uint_32($4 >> [1])
	$15 = ( *(($8 + [60])) ? $14 : $7 )
	if ( ((int_32)$15 != (int_32)( *($2 + [4]) ? uint_32($4 >> [1]) : $9 )) ){ goto $label$12 }
	$4 = ($13 + [1])
	$9 = ( *($2 + [8]) ? ($2 + [1]) : $9 )
	if ( $7 ){ goto $label$13 }
	if ( ($15 == 0) ){ goto $label$11 }
	$7 = ([0] - $14)
	
.LOOP $label$14:
	if ( ((int_32)*($4) != (int_32)*($9)) ){ goto $label$12 }
	$9 = ($9 + [1])
	$4 = ($4 + [1])
	$7 = ($7 + [1])
	if ( $7 ){ goto $label$14 }
	goto $label$11 
	
.LABEL $label$13
	if ( ($15 == 0) ){ goto $label$11 }
	if ( (CALL $17(( *(($8 + [64])) ? $4 : $7 ), $9, $15) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL eosio_assert([0], [9113])
	
.LABEL $label$11
	$14 = ($0 + [72])
	$9 = *(($0 + [100]))
	$15 = *(($0 + [96]))
	if ( ((int_32)$15 == (int_32)$9) ){ goto $label$16 }
	
.LOOP $label$18:
	$4 = ($9 + [-24])
	$7 = *($4)
	if ( ((int_64)*($7) == (int_64)$6) ){ goto $label$17 }
	$9 = $4
	if ( ((int_32)$15 != (int_32)$4) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	if ( ((int_32)$15 == (int_32)$9) ){ goto $label$16 }
	if ( ((int_32)*($7 + [24]) == (int_32)$14) ){ goto $label$15 }
	CALL eosio_assert([0], [9275])
	goto $label$15 
	
.LABEL $label$16
	$7 = [0]
	$4 = CALL db_find_i64(*($14), *(($0 + [80])), (int_64)-4148261996757778432, $6)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$15 }
	$7 = CALL $78($14, $4)
	if ( ((int_32)*($7 + [24]) == (int_32)$14) ){ goto $label$15 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$15
	*($5 + [304]) = ($5 + [312])
	$15 = ($8 + [24])
	CALL $79(($5 + [168]), ($5 + [304]), $15)
	$4 = *($5 + [172])
	if ( ($4 == 0) ){ goto $label$21 }
	if ( ((int_64)*($15) != (int_64)*($4 + [24])) ){ goto $label$20 }
	*($5 + [296]) = *($5 + [168])
	goto $label$19 
	
.LABEL $label$21
	*($5 + [300]) = [0]
	*($5 + [296]) = ($5 + [304])
	goto $label$19 
	
.LABEL $label$20
	*($5 + [300]) = [0]
	*($5 + [296]) = ($5 + [304])
	
.LABEL $label$19
	$4 = CALL $1([9134])
	if ( ($4 <= [8]) ){ goto $label$25 }
	CALL eosio_assert([0], [9177])
	goto $label$24 
	
.LABEL $label$25
	if ( ($4 == 0) ){ goto $label$23 }
	
.LABEL $label$24
	$6 = (int_64)0
	
.LOOP $label$26:
	$9 = *(($4 + [9133]))
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$27 }
	CALL eosio_assert([0], [9222])
	
.LABEL $label$27
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$26 }
	$6 = ((int_64)$6 << (int_64)8)
	goto $label$22 
	
.LABEL $label$23
	$6 = (int_64)0
	
.LABEL $label$22
	$1 = *(($8 + [40]))
	if ( ((int_64)$1 != (int_64)((int_64)$6 | (int_64)4)) ){ goto $label$55 }
	if ( ((int_64)*($15) != (int_64)*($7 + [8])) ){ goto $label$51 }
	*($5 + [168]) = (int_64)0
	CALL $79(($5 + [248]), ($5 + [304]), ($5 + [168]))
	if ( ((int_32)*($5 + [300]) == (int_32)*($5 + [252])) ){ goto $label$54 }
	*($5 + [292]) = [0]
	*($5 + [288]) = ($5 + [304])
	$4 = CALL $80(($5 + [288]))
	$9 = *($5 + [300])
	if ( ((int_32)$9 == (int_32)*($4 + [4])) ){ goto $label$53 }
	$6 = *($9 + [24])
	CALL $81(($5 + [296]))
	if ( ((int_64)$6 == (int_64)*(*($5 + [300]) + [24])) ){ goto $label$52 }
	CALL $80(($5 + [296]))
	CALL $80(($5 + [296]))
	goto $label$52 
	
.LABEL $label$55
	if ( ((int_64)$1 != (int_64)*(($10 + [32]))) ){ goto $label$30 }
	if ( ((int_64)*($15) != (int_64)*($7 + [16])) ){ goto $label$47 }
	*($5 + [168]) = (int_64)0
	CALL $79(($5 + [248]), ($5 + [304]), ($5 + [168]))
	if ( ((int_32)*($5 + [300]) == (int_32)*($5 + [252])) ){ goto $label$50 }
	*($5 + [20]) = [0]
	*($5 + [16]) = ($5 + [304])
	$4 = CALL $80(($5 + [16]))
	$9 = *($5 + [300])
	if ( ((int_32)$9 == (int_32)*($4 + [4])) ){ goto $label$49 }
	$6 = *($9 + [24])
	CALL $80(($5 + [296]))
	if ( ((int_64)$6 == (int_64)*(*($5 + [300]) + [24])) ){ goto $label$48 }
	CALL $81(($5 + [296]))
	CALL $81(($5 + [296]))
	goto $label$48 
	
.LABEL $label$54
	CALL $81(($5 + [296]))
	goto $label$52 
	
.LABEL $label$53
	CALL $80(($5 + [296]))
	
.LABEL $label$52
	$6 = (int_64)0
	*($5 + [168]) = (int_64)0
	$15 = *($5 + [300])
	$4 = CALL $1([9134])
	if ( ($4 <= [8]) ){ goto $label$58 }
	CALL eosio_assert([0], [9177])
	goto $label$57 
	
.LABEL $label$58
	if ( ($4 == 0) ){ goto $label$56 }
	
.LABEL $label$57
	$6 = (int_64)0
	
.LOOP $label$59:
	$9 = *(($4 + [9133]))
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$60 }
	CALL eosio_assert([0], [9222])
	
.LABEL $label$60
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$59 }
	$6 = ((int_64)$6 << (int_64)8)
	
.LABEL $label$56
	if ( ((int_64)*(($15 + [40])) != (int_64)((int_64)$6 | (int_64)4)) ){ goto $label$61 }
	*($5 + [168]) = *(*($5 + [300]) + [24])
	
.LABEL $label$61
	$6 = *($0)
	*($5 + [248]) = ($5 + [168])
	if ( $7 ){ goto $label$62 }
	CALL eosio_assert([0], [8651])
	
.LABEL $label$62
	CALL $82($14, $7, $6, ($5 + [248]))
	
.LABEL $label$51
	*($5 + [240]) = (int_64)3617214756542218240
	*($5 + [232]) = *($0)
	*($5 + [216]) = [9138]
	*($5 + [220]) = CALL $1([9138])
	*($5 + [8]) = *($5 + [216])
	$2 = CALL $50(($5 + [224]), ($5 + [8]))
	$1 = *($0)
	CALL $83(($5 + [56]), ($0 + [264]), [9150])
	$4 = *($0 + [276])
	$9 = ($4 & [1])
	$4 = CALL $37(($5 + [56]), ( *(($0 + [284])) ? ($0 + [277]) : $9 ), ( *(($0 + [280])) ? uint_32($4 >> [1]) : $9 ))
	$7 = ($4 + [8])
	*((($5 + [72]) + [8])) = *($7)
	*($5 + [72]) = *($4)
	*($4) = (int_64)0
	$9 = [0]
	*($7) = [0]
	$15 = ($8 + [32])
	$6 = (uint_64)*(($10 + [32])) >> (uint_64)(int_64)8
	if ( (int_64)($6) == 0) ){ goto $label$66 }
	
.LOOP $label$68:
	*((($5 + [168]) + ($4 = $9))) = $6
	$9 = ($4 + [1])
	if ( ((uint_32)$4 > (uint_32)[5]) ){ goto $label$67 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$68 }
	
.LABEL $label$67
	*(($5 + [48])) = [0]
	*($5 + [40]) = (int_64)0
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$65 }
	*($5 + [40]) = ($9 << [1])
	$10 = (($5 + [40]) | [1])
	goto $label$64 
	
.LABEL $label$66
	*((($5 + [40]) + [8])) = [0]
	*($5 + [40]) = (int_64)0
	*($5 + [40]) = [0]
	$4 = (($5 + [40]) | [1])
	$9 = $4
	goto $label$63 
	
.LABEL $label$65
	$7 = (($9 + [16]) & [-16])
	$10 = CALL $9($7)
	*($5 + [40]) = ($7 | [1])
	*($5 + [48]) = $10
	*($5 + [44]) = $9
	
.LABEL $label$64
	$7 = ($4 + [1])
	$4 = [0]
	
.LOOP $label$69:
	*(($10 + $4)) = *((($5 + [168]) + $4))
	$4 = ($4 + [1])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$69 }
	$9 = ($10 + $9)
	$4 = (($5 + [40]) | [1])
	
.LABEL $label$63
	*($9) = [0]
	$9 = *($5 + [40])
	$10 = ($9 & [1])
	$4 = CALL $37(($5 + [72]), ( *($5 + [48]) ? $4 : $10 ), ( *($5 + [44]) ? uint_32($9 >> [1]) : $10 ))
	$9 = ($4 + [8])
	*((($5 + [88]) + [8])) = *($9)
	*($5 + [88]) = *($4)
	*($4) = (int_64)0
	*($9) = [0]
	$4 = *($0 + [288])
	$9 = ($4 & [1])
	$4 = CALL $37(($5 + [88]), ( *(($0 + [296])) ? ($0 + [289]) : $9 ), ( *(($0 + [292])) ? uint_32($4 >> [1]) : $9 ))
	$9 = ($4 + [8])
	*((($5 + [104]) + [8])) = *($9)
	*($5 + [104]) = *($4)
	*($4) = (int_64)0
	*($9) = [0]
	CALL $84(($5 + [24]), $0, *(($8 + [24])), [8])
	$4 = *($5 + [24])
	$9 = ($4 & [1])
	$4 = CALL $37(($5 + [104]), ( *($5 + [32]) ? (($5 + [24]) | [1]) : $9 ), ( *($5 + [28]) ? uint_32($4 >> [1]) : $9 ))
	$9 = ($4 + [8])
	*((($5 + [120]) + [8])) = *($9)
	*($5 + [120]) = *($4)
	*($4) = (int_64)0
	*($9) = [0]
	$4 = *($0 + [324])
	$9 = ($4 & [1])
	$4 = CALL $37(($5 + [120]), ( *(($0 + [332])) ? ($0 + [325]) : $9 ), ( *(($0 + [328])) ? uint_32($4 >> [1]) : $9 ))
	$9 = ($4 + [8])
	*((($5 + [136]) + [8])) = *($9)
	*($5 + [136]) = *($4)
	*($4) = (int_64)0
	*($9) = [0]
	$4 = *(($8 + [56]))
	$9 = ($4 & [1])
	$4 = CALL $37(($5 + [136]), ( *(($8 + [64])) ? ($13 + [1]) : $9 ), ( *(($8 + [60])) ? uint_32($4 >> [1]) : $9 ))
	$9 = ($4 + [8])
	*((($5 + [152]) + [8])) = *($9)
	*($5 + [152]) = *($4)
	*($4) = (int_64)0
	*($9) = [0]
	$4 = *($0 + [312])
	$9 = ($4 & [1])
	$4 = CALL $37(($5 + [152]), ( *(($0 + [320])) ? ($0 + [313]) : $9 ), ( *(($0 + [316])) ? uint_32($4 >> [1]) : $9 ))
	$9 = *($4 + [8])
	*($4 + [8]) = [0]
	$6 = *($4)
	*($4) = (int_64)0
	$3 = *(($8 + [16]))
	$11 = *(($15 + [8]))
	$12 = *($15)
	*(($5 + [208])) = $9
	*((($5 + [168]) + [24])) = $11
	*($5 + [168]) = $1
	*($5 + [176]) = $3
	*($5 + [184]) = $12
	*($5 + [200]) = $6
	$4 = CALL $85(($5 + [248]), ($5 + [232]), *($2), (int_64)-3617168760277827584, ($5 + [168]))
	CALL $86($4)
	$9 = *($4 + [28])
	if ( ($9 == 0) ){ goto $label$70 }
	*(($4 + [32])) = $9
	CALL $11($9)
	
.LABEL $label$70
	$9 = *($4 + [16])
	if ( ($9 == 0) ){ goto $label$71 }
	*(($4 + [20])) = $9
	CALL $11($9)
	
.LABEL $label$71
	if ( (*($5 + [200]) & [1]) ){ goto $label$73 }
	if ( (*($5 + [152]) & [1]) ){ goto $label$72 }
	goto $label$46 
	
.LABEL $label$73
	CALL $11(*(($5 + [208])))
	if ( ((*($5 + [152]) & [1]) == 0) ){ goto $label$46 }
	
.LABEL $label$72
	CALL $11(*($5 + [160]))
	$4 = [1]
	if ( ((*($5 + [136]) & [1]) == 0) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$50
	CALL $81(($5 + [296]))
	goto $label$48 
	
.LABEL $label$49
	CALL $80(($5 + [296]))
	
.LABEL $label$48
	*($5 + [168]) = (int_64)-1
	$4 = *($5 + [300])
	if ( ((int_64)*(($4 + [40])) != (int_64)*(($10 + [32]))) ){ goto $label$74 }
	*($5 + [168]) = *($4 + [24])
	
.LABEL $label$74
	$6 = *($0)
	*($5 + [248]) = ($5 + [168])
	if ( $7 ){ goto $label$75 }
	CALL eosio_assert([0], [8651])
	
.LABEL $label$75
	CALL $87($14, $7, $6, ($5 + [248]))
	
.LABEL $label$47
	*($5 + [240]) = (int_64)3617214756542218240
	$1 = *($0)
	*($5 + [232]) = $1
	$3 = *($10 + [8])
	CALL $83(($5 + [56]), ($0 + [264]), [9150])
	$4 = *($0 + [276])
	$9 = ($4 & [1])
	$4 = CALL $37(($5 + [56]), ( *(($0 + [284])) ? ($0 + [277]) : $9 ), ( *(($0 + [280])) ? uint_32($4 >> [1]) : $9 ))
	$7 = ($4 + [8])
	*((($5 + [72]) + [8])) = *($7)
	*($5 + [72]) = *($4)
	*($4) = (int_64)0
	$9 = [0]
	*($7) = [0]
	$15 = ($8 + [32])
	$6 = (uint_64)*(($10 + [32])) >> (uint_64)(int_64)8
	if ( (int_64)($6) == 0) ){ goto $label$79 }
	
.LOOP $label$81:
	*((($5 + [168]) + ($4 = $9))) = $6
	$9 = ($4 + [1])
	if ( ((uint_32)$4 > (uint_32)[5]) ){ goto $label$80 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$81 }
	
.LABEL $label$80
	*(($5 + [48])) = [0]
	*($5 + [40]) = (int_64)0
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$78 }
	*($5 + [40]) = ($9 << [1])
	$10 = (($5 + [40]) | [1])
	goto $label$77 
	
.LABEL $label$79
	*((($5 + [40]) + [8])) = [0]
	*($5 + [40]) = (int_64)0
	*($5 + [40]) = [0]
	$10 = (($5 + [40]) | [1])
	$4 = $10
	goto $label$76 
	
.LABEL $label$78
	$7 = (($9 + [16]) & [-16])
	$10 = CALL $9($7)
	*($5 + [40]) = ($7 | [1])
	*($5 + [48]) = $10
	*($5 + [44]) = $9
	
.LABEL $label$77
	$7 = ($4 + [1])
	$4 = [0]
	
.LOOP $label$82:
	*(($10 + $4)) = *((($5 + [168]) + $4))
	$4 = ($4 + [1])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$82 }
	$4 = ($10 + $9)
	$10 = (($5 + [40]) | [1])
	
.LABEL $label$76
	*($4) = [0]
	$4 = *($5 + [40])
	$9 = ($4 & [1])
	$4 = CALL $37(($5 + [72]), ( *($5 + [48]) ? $10 : $9 ), ( *($5 + [44]) ? uint_32($4 >> [1]) : $9 ))
	$9 = ($4 + [8])
	*((($5 + [88]) + [8])) = *($9)
	*($5 + [88]) = *($4)
	*($4) = (int_64)0
	*($9) = [0]
	$4 = *($0 + [288])
	$9 = ($4 & [1])
	$4 = CALL $37(($5 + [88]), ( *(($0 + [296])) ? ($0 + [289]) : $9 ), ( *(($0 + [292])) ? uint_32($4 >> [1]) : $9 ))
	$9 = ($4 + [8])
	*((($5 + [104]) + [8])) = *($9)
	*($5 + [104]) = *($4)
	*($4) = (int_64)0
	*($9) = [0]
	CALL $84(($5 + [24]), $0, *(($8 + [24])), [8])
	$4 = *($5 + [24])
	$9 = ($4 & [1])
	$4 = CALL $37(($5 + [104]), ( *($5 + [32]) ? (($5 + [24]) | [1]) : $9 ), ( *($5 + [28]) ? uint_32($4 >> [1]) : $9 ))
	$9 = ($4 + [8])
	*((($5 + [120]) + [8])) = *($9)
	*($5 + [120]) = *($4)
	*($4) = (int_64)0
	*($9) = [0]
	$4 = *($0 + [324])
	$9 = ($4 & [1])
	$4 = CALL $37(($5 + [120]), ( *(($0 + [332])) ? ($0 + [325]) : $9 ), ( *(($0 + [328])) ? uint_32($4 >> [1]) : $9 ))
	$9 = ($4 + [8])
	*((($5 + [136]) + [8])) = *($9)
	*($5 + [136]) = *($4)
	*($4) = (int_64)0
	*($9) = [0]
	$4 = *($2)
	$9 = ($4 & [1])
	$4 = CALL $37(($5 + [136]), ( *($2 + [8]) ? ($2 + [1]) : $9 ), ( *(($2 + [4])) ? uint_32($4 >> [1]) : $9 ))
	$9 = ($4 + [8])
	*((($5 + [152]) + [8])) = *($9)
	*($5 + [152]) = *($4)
	*($4) = (int_64)0
	*($9) = [0]
	$4 = *($0 + [312])
	$9 = ($4 & [1])
	$4 = CALL $37(($5 + [152]), ( *(($0 + [320])) ? ($0 + [313]) : $9 ), ( *(($0 + [316])) ? uint_32($4 >> [1]) : $9 ))
	$9 = *($4 + [8])
	*($4 + [8]) = [0]
	$6 = *($4)
	*($4) = (int_64)0
	$11 = *(($8 + [16]))
	$12 = *(($15 + [8]))
	$16 = *($15)
	*(($5 + [208])) = $9
	*((($5 + [168]) + [24])) = $12
	*($5 + [168]) = $1
	*($5 + [176]) = $11
	*($5 + [184]) = $16
	*($5 + [200]) = $6
	$4 = CALL $85(($5 + [248]), ($5 + [232]), $3, (int_64)-3617168760277827584, ($5 + [168]))
	CALL $86($4)
	$9 = *($4 + [28])
	if ( ($9 == 0) ){ goto $label$83 }
	*(($4 + [32])) = $9
	CALL $11($9)
	
.LABEL $label$83
	$9 = *($4 + [16])
	if ( ($9 == 0) ){ goto $label$84 }
	*(($4 + [20])) = $9
	CALL $11($9)
	
.LABEL $label$84
	if ( (*($5 + [200]) & [1]) ){ goto $label$102 }
	if ( (*($5 + [152]) & [1]) ){ goto $label$101 }
	goto $label$100 
	
.LABEL $label$102
	CALL $11(*(($5 + [208])))
	if ( ((*($5 + [152]) & [1]) == 0) ){ goto $label$100 }
	
.LABEL $label$101
	CALL $11(*($5 + [160]))
	$4 = [1]
	if ( ((*($5 + [136]) & [1]) == 0) ){ goto $label$99 }
	goto $label$98 
	
.LABEL $label$100
	$4 = [1]
	if ( (*($5 + [136]) & [1]) ){ goto $label$98 }
	
.LABEL $label$99
	if ( (*($5 + [120]) & $4) ){ goto $label$97 }
	goto $label$96 
	
.LABEL $label$98
	CALL $11(*($5 + [144]))
	if ( ((*($5 + [120]) & $4) == 0) ){ goto $label$96 }
	
.LABEL $label$97
	CALL $11(*($5 + [128]))
	$4 = [1]
	if ( ((*($5 + [24]) & [1]) == 0) ){ goto $label$95 }
	goto $label$94 
	
.LABEL $label$96
	$4 = [1]
	if ( (*($5 + [24]) & [1]) ){ goto $label$94 }
	
.LABEL $label$95
	if ( (*($5 + [104]) & $4) ){ goto $label$93 }
	goto $label$92 
	
.LABEL $label$94
	CALL $11(*(($5 + [32])))
	if ( ((*($5 + [104]) & $4) == 0) ){ goto $label$92 }
	
.LABEL $label$93
	CALL $11(*($5 + [112]))
	$4 = [1]
	if ( ((*($5 + [88]) & [1]) == 0) ){ goto $label$91 }
	goto $label$90 
	
.LABEL $label$92
	$4 = [1]
	if ( (*($5 + [88]) & [1]) ){ goto $label$90 }
	
.LABEL $label$91
	if ( (*($5 + [40]) & $4) ){ goto $label$89 }
	goto $label$88 
	
.LABEL $label$90
	CALL $11(*($5 + [96]))
	if ( ((*($5 + [40]) & $4) == 0) ){ goto $label$88 }
	
.LABEL $label$89
	CALL $11(*(($5 + [48])))
	$4 = [1]
	if ( ((*($5 + [72]) & [1]) == 0) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$88
	$4 = [1]
	if ( (*($5 + [72]) & [1]) ){ goto $label$86 }
	
.LABEL $label$87
	if ( ((*($5 + [56]) & $4) == 0) ){ goto $label$30 }
	goto $label$85 
	
.LABEL $label$86
	CALL $11(*($5 + [80]))
	if ( ((*($5 + [56]) & $4) == 0) ){ goto $label$30 }
	
.LABEL $label$85
	CALL $11(*($5 + [64]))
	goto $label$30 
	
.LABEL $label$46
	$4 = [1]
	if ( (*($5 + [136]) & [1]) ){ goto $label$44 }
	
.LABEL $label$45
	if ( (*($5 + [120]) & $4) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$44
	CALL $11(*($5 + [144]))
	if ( ((*($5 + [120]) & $4) == 0) ){ goto $label$42 }
	
.LABEL $label$43
	CALL $11(*($5 + [128]))
	$4 = [1]
	if ( ((*($5 + [24]) & [1]) == 0) ){ goto $label$41 }
	goto $label$40 
	
.LABEL $label$42
	$4 = [1]
	if ( (*($5 + [24]) & [1]) ){ goto $label$40 }
	
.LABEL $label$41
	if ( (*($5 + [104]) & $4) ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$40
	CALL $11(*(($5 + [32])))
	if ( ((*($5 + [104]) & $4) == 0) ){ goto $label$38 }
	
.LABEL $label$39
	CALL $11(*($5 + [112]))
	$4 = [1]
	if ( ((*($5 + [88]) & [1]) == 0) ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$38
	$4 = [1]
	if ( (*($5 + [88]) & [1]) ){ goto $label$36 }
	
.LABEL $label$37
	if ( (*($5 + [40]) & $4) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$36
	CALL $11(*($5 + [96]))
	if ( ((*($5 + [40]) & $4) == 0) ){ goto $label$34 }
	
.LABEL $label$35
	CALL $11(*(($5 + [48])))
	$4 = [1]
	if ( ((*($5 + [72]) & [1]) == 0) ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$34
	$4 = [1]
	if ( (*($5 + [72]) & [1]) ){ goto $label$32 }
	
.LABEL $label$33
	if ( (*($5 + [56]) & $4) ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	CALL $11(*($5 + [80]))
	if ( ((*($5 + [56]) & $4) == 0) ){ goto $label$30 }
	
.LABEL $label$31
	CALL $11(*($5 + [64]))
	if ( $8 ){ goto $label$28 }
	goto $label$29 
	
.LABEL $label$30
	if ( $8 ){ goto $label$28 }
	
.LABEL $label$29
	CALL eosio_assert([0], [9619])
	CALL eosio_assert([0], [9354])
	
.LABEL $label$28
	$4 = CALL db_next_i64(*($8 + [72]), ($5 + [168]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$103 }
	CALL $77(($5 + [312]), $4)
	
.LABEL $label$103
	CALL $88(($5 + [312]), $8)
	$0 = *($5 + [336])
	if ( ($0 == 0) ){ goto $label$104 }
	$10 = ($5 + [340])
	$4 = *($10)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$106 }
	
.LOOP $label$107:
	$4 = ($4 + [-24])
	$9 = *($4)
	*($4) = [0]
	if ( ($9 == 0) ){ goto $label$108 }
	if ( ((*($9 + [56]) & [1]) == 0) ){ goto $label$109 }
	CALL $11(*(($9 + [64])))
	
.LABEL $label$109
	CALL $11($9)
	
.LABEL $label$108
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$107 }
	$4 = *(($5 + [336]))
	goto $label$105 
	
.LABEL $label$106
	$4 = $0
	
.LABEL $label$105
	*($10) = $0
	CALL $11($4)
	
.LABEL $label$104
	$global$0 = ($5 + [352])
}

void .FUNC $173 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_64 $5, int_32 $6, int_32 $7, int_32 $8, int_64 $9)
{
	int_32 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_64 $14
	int_32 $15
	int_32 $16
	int_64 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	$10 = ($global$0 - [352])
	$global$0 = $10
	$11 = *($4)
	if ( ((uint_64)((int_64)$11 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$2 }
	$12 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8)
	$13 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$14 = (uint_64)$12 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$12 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$12 = $14
	$15 = $13
	$13 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$12 = $14
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$12 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8)
	$15 = ((int_32)$13 < (int_32)[6])
	$16 = ($13 + [1])
	$13 = $16
	if ( $15 ){ goto $label$5 }
	$13 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [10516])
	
.LABEL $label$1
	$17 = *($3)
	if ( ((uint_64)((int_64)$17 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$7 }
	$12 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8)
	$13 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$14 = (uint_64)$12 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$12 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$12 = $14
	$15 = $13
	$13 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$12 = $14
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$12 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8)
	$15 = ((int_32)$13 < (int_32)[6])
	$16 = ($13 + [1])
	$13 = $16
	if ( $15 ){ goto $label$10 }
	$13 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [10516])
	
.LABEL $label$6
	$18 = ($0 + [152])
	$15 = *(($0 + [180]))
	$16 = *(($0 + [176]))
	if ( ((int_32)$16 == (int_32)$15) ){ goto $label$12 }
	
.LOOP $label$14:
	$13 = ($15 + [-24])
	$19 = *($13)
	if ( ((int_64)*($19) == (int_64)$9) ){ goto $label$13 }
	$15 = $13
	if ( ((int_32)$16 != (int_32)$13) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	if ( ((int_32)$16 == (int_32)$15) ){ goto $label$12 }
	if ( ((int_32)*(($19 + [76])) == (int_32)$18) ){ goto $label$11 }
	CALL eosio_assert([0], [9275])
	goto $label$11 
	
.LABEL $label$12
	$19 = [0]
	$13 = CALL db_find_i64(*($18), *(($0 + [160])), (int_64)-4156459970285535232, $9)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$11 }
	$19 = CALL $76($18, $13)
	if ( ((int_32)*($19 + [76]) == (int_32)$18) ){ goto $label$11 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$11
	$20 = *($19 + [32])
	$12 = (uint_64)$20 >> (uint_64)(int_64)8)
	$13 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$14 = (uint_64)$12 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$12 & (int_64)65280) == (int_64)0) ){ goto $label$20 }
	$12 = $14
	$15 = $13
	$13 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[6]) ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$20
	$12 = $14
	
.LOOP $label$21:
	if ( ((int_64)((int_64)$12 & (int_64)65280) != (int_64)0) ){ goto $label$17 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8)
	$15 = ((int_32)$13 < (int_32)[6])
	$16 = ($13 + [1])
	$13 = $16
	if ( $15 ){ goto $label$21 }
	$13 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[6]) ){ goto $label$18 }
	
.LABEL $label$19
	$21 = *($4 + [8])
	if ( ((int_64)$21 == (int_64)$20) ){ goto $label$15 }
	goto $label$16 
	
.LABEL $label$17
	CALL eosio_assert([0], [10102])
	$21 = *($4 + [8])
	if ( ((int_64)$21 == (int_64)$20) ){ goto $label$15 }
	
.LABEL $label$16
	CALL eosio_assert([0], [10890])
	
.LABEL $label$15
	if ( ((int_64)$11 == (int_64)0) ){ goto $label$47 }
	$13 = CALL $1([9134])
	if ( ($13 <= [8]) ){ goto $label$46 }
	CALL eosio_assert([0], [9177])
	goto $label$45 
	
.LABEL $label$47
	*($10 + [304]) = (int_64)3617214756542218240
	*($10 + [296]) = *($0)
	*($10 + [280]) = [9138]
	*($10 + [284]) = CALL $1([9138])
	*($10) = *($10 + [280])
	$4 = CALL $50(($10 + [288]), $10)
	$9 = *($0)
	CALL $83(($10 + [120]), ($0 + [264]), [10148])
	$13 = *($0 + [276])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [120]), ( *(($0 + [284])) ? ($0 + [277]) : $15 ), ( *(($0 + [280])) ? uint_32($13 >> [1]) : $15 ))
	$16 = ($13 + [8])
	*((($10 + [136]) + [8])) = *($16)
	*($10 + [136]) = *($13)
	*($13) = (int_64)0
	$15 = [0]
	*($16) = [0]
	$12 = (uint_64)*(($19 + [32])) >> (uint_64)(int_64)8
	if ( (int_64)($12) == 0) ){ goto $label$44 }
	
.LOOP $label$49:
	*((($10 + [232]) + ($13 = $15))) = $12
	$15 = ($13 + [1])
	if ( ((uint_32)$13 > (uint_32)[5]) ){ goto $label$48 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$49 }
	
.LABEL $label$48
	*(($10 + [112])) = [0]
	*($10 + [104]) = (int_64)0
	if ( ((uint_32)$15 >= (uint_32)[11]) ){ goto $label$43 }
	*($10 + [104]) = ($15 << [1])
	$16 = (($10 + [104]) | [1])
	goto $label$42 
	
.LABEL $label$46
	if ( ($13 == 0) ){ goto $label$40 }
	
.LABEL $label$45
	$12 = (int_64)0
	
.LOOP $label$50:
	$15 = *(($13 + [9133]))
	if ( ((($15 + [-65]) & [255]) <= [26]) ){ goto $label$51 }
	CALL eosio_assert([0], [9222])
	
.LABEL $label$51
	$12 = ((int_64)((int_64)$12 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $15) << (int_64)56) >> (int_64)56))
	$13 = ($13 + [-1])
	if ( $13 ){ goto $label$50 }
	$14 = ((int_64)$12 << (int_64)8)
	goto $label$23 
	
.LABEL $label$44
	*((($10 + [104]) + [8])) = [0]
	*($10 + [104]) = (int_64)0
	*($10 + [104]) = [0]
	$13 = (($10 + [104]) | [1])
	$15 = $13
	goto $label$41 
	
.LABEL $label$43
	$19 = (($15 + [16]) & [-16])
	$16 = CALL $9($19)
	*($10 + [104]) = ($19 | [1])
	*($10 + [112]) = $16
	*($10 + [108]) = $15
	
.LABEL $label$42
	$19 = ($13 + [1])
	$13 = [0]
	
.LOOP $label$52:
	*(($16 + $13)) = *((($10 + [232]) + $13))
	$13 = ($13 + [1])
	if ( ((int_32)$19 != (int_32)$13) ){ goto $label$52 }
	$15 = ($16 + $15)
	$13 = (($10 + [104]) | [1])
	
.LABEL $label$41
	*($15) = [0]
	$15 = *($10 + [104])
	$16 = ($15 & [1])
	$13 = CALL $37(($10 + [136]), ( *($10 + [112]) ? $13 : $16 ), ( *($10 + [108]) ? uint_32($15 >> [1]) : $16 ))
	$15 = ($13 + [8])
	*((($10 + [152]) + [8])) = *($15)
	*($10 + [152]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	$13 = *($0 + [288])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [152]), ( *(($0 + [296])) ? ($0 + [289]) : $15 ), ( *(($0 + [292])) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [168]) + [8])) = *($15)
	*($10 + [168]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	CALL $84(($10 + [88]), $0, $5, [8])
	$13 = *($10 + [88])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [168]), ( *($10 + [96]) ? (($10 + [88]) | [1]) : $15 ), ( *($10 + [92]) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [184]) + [8])) = *($15)
	*($10 + [184]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	$13 = *($0 + [324])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [184]), ( *(($0 + [332])) ? ($0 + [325]) : $15 ), ( *(($0 + [328])) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [200]) + [8])) = *($15)
	*($10 + [200]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	$13 = *($7)
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [200]), ( *($7 + [8]) ? ($7 + [1]) : $15 ), ( *($7 + [4]) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [216]) + [8])) = *($15)
	*($10 + [216]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	$13 = *($0 + [312])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [216]), ( *(($0 + [320])) ? ($0 + [313]) : $15 ), ( *(($0 + [316])) ? uint_32($13 >> [1]) : $15 ))
	$15 = *($13 + [8])
	*($13 + [8]) = [0]
	$12 = *($13)
	*($13) = (int_64)0
	*(($10 + [256])) = *(($3 + [8]))
	*(($10 + [272])) = $15
	*($10 + [232]) = $9
	*($10 + [240]) = $2
	*($10 + [248]) = *($3)
	*($10 + [264]) = $12
	$13 = CALL $85(($10 + [312]), ($10 + [296]), *($4), (int_64)-3617168760277827584, ($10 + [232]))
	CALL $86($13)
	$15 = *($13 + [28])
	if ( ($15 == 0) ){ goto $label$53 }
	*(($13 + [32])) = $15
	CALL $11($15)
	
.LABEL $label$53
	$15 = *($13 + [16])
	if ( ($15 == 0) ){ goto $label$54 }
	*(($13 + [20])) = $15
	CALL $11($15)
	
.LABEL $label$54
	if ( (*($10 + [264]) & [1]) ){ goto $label$56 }
	if ( (*($10 + [216]) & [1]) ){ goto $label$55 }
	goto $label$39 
	
.LABEL $label$56
	CALL $11(*(($10 + [272])))
	if ( ((*($10 + [216]) & [1]) == 0) ){ goto $label$39 }
	
.LABEL $label$55
	CALL $11(*($10 + [224]))
	$13 = [1]
	if ( ((*($10 + [200]) & [1]) == 0) ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$40
	$14 = (int_64)0
	goto $label$23 
	
.LABEL $label$39
	$13 = [1]
	if ( (*($10 + [200]) & [1]) ){ goto $label$37 }
	
.LABEL $label$38
	if ( (*($10 + [184]) & $13) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$37
	CALL $11(*($10 + [208]))
	if ( ((*($10 + [184]) & $13) == 0) ){ goto $label$35 }
	
.LABEL $label$36
	CALL $11(*($10 + [192]))
	$13 = [1]
	if ( ((*($10 + [88]) & [1]) == 0) ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$35
	$13 = [1]
	if ( (*($10 + [88]) & [1]) ){ goto $label$33 }
	
.LABEL $label$34
	if ( (*($10 + [168]) & $13) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$33
	CALL $11(*(($10 + [96])))
	if ( ((*($10 + [168]) & $13) == 0) ){ goto $label$31 }
	
.LABEL $label$32
	CALL $11(*($10 + [176]))
	$13 = [1]
	if ( ((*($10 + [152]) & [1]) == 0) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$31
	$13 = [1]
	if ( (*($10 + [152]) & [1]) ){ goto $label$29 }
	
.LABEL $label$30
	if ( (*($10 + [104]) & $13) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	CALL $11(*($10 + [160]))
	if ( ((*($10 + [104]) & $13) == 0) ){ goto $label$27 }
	
.LABEL $label$28
	CALL $11(*(($10 + [112])))
	$13 = [1]
	if ( ((*($10 + [136]) & [1]) == 0) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$13 = [1]
	if ( (*($10 + [136]) & [1]) ){ goto $label$25 }
	
.LABEL $label$26
	if ( (*($10 + [120]) & $13) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$25
	CALL $11(*($10 + [144]))
	if ( ((*($10 + [120]) & $13) == 0) ){ goto $label$22 }
	
.LABEL $label$24
	CALL $11(*($10 + [128]))
	$global$0 = ($10 + [352])
	return 
	
.LABEL $label$23
	$12 = (uint_64)$14 >> (uint_64)(int_64)8)
	$20 = ((int_64)$14 | (int_64)4)
	$13 = [0]
	
.LOOP $label$60:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$59 }
	$14 = (uint_64)$12 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$12 & (int_64)65280) == (int_64)0) ){ goto $label$62 }
	$12 = $14
	$15 = $13
	$13 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[6]) ){ goto $label$60 }
	goto $label$61 
	
.LABEL $label$62
	$12 = $14
	
.LOOP $label$63:
	if ( ((int_64)((int_64)$12 & (int_64)65280) != (int_64)0) ){ goto $label$59 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8)
	$15 = ((int_32)$13 < (int_32)[6])
	$16 = ($13 + [1])
	$13 = $16
	if ( $15 ){ goto $label$63 }
	$13 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[6]) ){ goto $label$60 }
	
.LABEL $label$61
	$12 = *($3 + [8])
	if ( ((int_64)$12 == (int_64)$20) ){ goto $label$57 }
	goto $label$58 
	
.LABEL $label$59
	CALL eosio_assert([0], [10102])
	$12 = *($3 + [8])
	if ( ((int_64)$12 == (int_64)$20) ){ goto $label$57 }
	
.LABEL $label$58
	CALL eosio_assert([0], [10890])
	
.LABEL $label$57
	if ( ((int_64)$17 == (int_64)0) ){ goto $label$89 }
	if ( ((int_64)$12 == (int_64)*(($0 + [216]))) ){ goto $label$90 }
	CALL eosio_assert([0], [10630])
	
.LABEL $label$90
	$14 = ((int_64)*($0 + [208]) + (int_64)$17)
	*($0 + [208]) = $14
	if ( ((int_64)$14 > (int_64)-4611686018427387904) ){ goto $label$91 }
	CALL eosio_assert([0], [10673])
	$14 = *(($0 + [208]))
	
.LABEL $label$91
	if ( ((int_64)$14 < (int_64)4611686018427387904) ){ goto $label$92 }
	CALL eosio_assert([0], [10692])
	
.LABEL $label$92
	CALL __multi3(($10 + [24]), $17, (int_64)$17 >> (int_64)63), $5, (int_64)$5 >> (int_64)63))
	$14 = *(($10 + [32]))
	$17 = *($10 + [24])
	if ( (( (uint_64)($17 <= (int_64)4611686018427387904) ? ((int_64)$14 < (int_64)0) : (int_64)($14 == 0) ) == 0) ){ goto $label$88 }
	if ( ( ((uint_64)$17 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$14 > (int_64)-1) : ((int_64)$14 == (int_64)-1) ) ){ goto $label$87 }
	CALL eosio_assert([0], [10734])
	goto $label$87 
	
.LABEL $label$89
	*($10 + [304]) = (int_64)3617214756542218240
	$9 = *($0)
	*($10 + [296]) = $9
	$14 = *($19 + [8])
	CALL $83(($10 + [120]), ($0 + [264]), [10148])
	$13 = *($0 + [276])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [120]), ( *(($0 + [284])) ? ($0 + [277]) : $15 ), ( *(($0 + [280])) ? uint_32($13 >> [1]) : $15 ))
	$16 = ($13 + [8])
	*((($10 + [136]) + [8])) = *($16)
	*($10 + [136]) = *($13)
	*($13) = (int_64)0
	$15 = [0]
	*($16) = [0]
	$12 = (uint_64)*(($19 + [32])) >> (uint_64)(int_64)8
	if ( (int_64)($12) == 0) ){ goto $label$86 }
	
.LOOP $label$94:
	*((($10 + [232]) + ($13 = $15))) = $12
	$15 = ($13 + [1])
	if ( ((uint_32)$13 > (uint_32)[5]) ){ goto $label$93 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$94 }
	
.LABEL $label$93
	*(($10 + [112])) = [0]
	*($10 + [104]) = (int_64)0
	if ( ((uint_32)$15 >= (uint_32)[11]) ){ goto $label$85 }
	*($10 + [104]) = ($15 << [1])
	$16 = (($10 + [104]) | [1])
	goto $label$84 
	
.LABEL $label$88
	CALL eosio_assert([0], [10710])
	
.LABEL $label$87
	if ( ((int_64)$12 == (int_64)*(($0 + [248]))) ){ goto $label$95 }
	CALL eosio_assert([0], [10630])
	
.LABEL $label$95
	$12 = ((int_64)*($0 + [240]) + (int_64)$17)
	*($0 + [240]) = $12
	if ( ((int_64)$12 > (int_64)-4611686018427387904) ){ goto $label$96 }
	CALL eosio_assert([0], [10673])
	$12 = *(($0 + [240]))
	
.LABEL $label$96
	if ( ((int_64)$12 < (int_64)4611686018427387904) ){ goto $label$97 }
	CALL eosio_assert([0], [10692])
	
.LABEL $label$97
	$17 = *(($19 + [32]))
	$12 = (uint_64)$17 >> (uint_64)(int_64)8)
	$13 = [0]
	
.LOOP $label$100:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$99 }
	$14 = (uint_64)$12 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$12 & (int_64)65280) == (int_64)0) ){ goto $label$101 }
	$12 = $14
	$15 = $13
	$13 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[6]) ){ goto $label$100 }
	goto $label$98 
	
.LABEL $label$101
	$12 = $14
	
.LOOP $label$102:
	if ( ((int_64)((int_64)$12 & (int_64)65280) != (int_64)0) ){ goto $label$99 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8)
	$15 = ((int_32)$13 < (int_32)[6])
	$16 = ($13 + [1])
	$13 = $16
	if ( $15 ){ goto $label$102 }
	$13 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[6]) ){ goto $label$100 }
	goto $label$98 
	
.LABEL $label$99
	CALL eosio_assert([0], [10102])
	
.LABEL $label$98
	if ( ((int_64)$21 == (int_64)$17) ){ goto $label$103 }
	CALL eosio_assert([0], [10890])
	
.LABEL $label$103
	if ( ((int_64)$11 < (int_64)1000) ){ goto $label$80 }
	$12 = (int_64)
	CALL __multi3(($10 + [8]), $12((int_64)1000 - *($19 + [56]))), (int_64)$12 >> (int_64)63), $11, (int_64)$11 >> (int_64)63))
	$12 = *(($10 + [16]))
	$14 = *($10 + [8])
	if ( (( (uint_64)($14 <= (int_64)4611686018427387904) ? ((int_64)$12 < (int_64)0) : (int_64)($12 == 0) ) == 0) ){ goto $label$105 }
	if ( ( ((uint_64)$14 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$12 > (int_64)-1) : ((int_64)$12 == (int_64)-1) ) ){ goto $label$104 }
	CALL eosio_assert([0], [10734])
	goto $label$104 
	
.LABEL $label$105
	CALL eosio_assert([0], [10710])
	
.LABEL $label$104
	$12 = *(($4 + [8]))
	*((($10 + [232]) + [8])) = $12
	*($10 + [232]) = *($4)
	$11 = ((int_64)$14 / (int_64)1000)
	if ( ((int_64)$21 == (int_64)$12) ){ goto $label$106 }
	CALL eosio_assert([0], [10799])
	
.LABEL $label$106
	$12 = (int_64)
	*($10 + [232]) = $12(*($10 + [232]) - $11))
	if ( ((int_64)$12 <= (int_64)-4611686018427387904) ){ goto $label$107 }
	if ( ((int_64)$12 >= (int_64)4611686018427387904) ){ goto $label$82 }
	if ( ((int_64)($12 == 0) == 0) ){ goto $label$81 }
	goto $label$80 
	
.LABEL $label$107
	CALL eosio_assert([0], [10847])
	goto $label$81 
	
.LABEL $label$86
	*((($10 + [104]) + [8])) = [0]
	*($10 + [104]) = (int_64)0
	*($10 + [104]) = [0]
	$16 = (($10 + [104]) | [1])
	$13 = $16
	goto $label$83 
	
.LABEL $label$85
	$19 = (($15 + [16]) & [-16])
	$16 = CALL $9($19)
	*($10 + [104]) = ($19 | [1])
	*($10 + [112]) = $16
	*($10 + [108]) = $15
	
.LABEL $label$84
	$19 = ($13 + [1])
	$13 = [0]
	
.LOOP $label$108:
	*(($16 + $13)) = *((($10 + [232]) + $13))
	$13 = ($13 + [1])
	if ( ((int_32)$19 != (int_32)$13) ){ goto $label$108 }
	$13 = ($16 + $15)
	$16 = (($10 + [104]) | [1])
	
.LABEL $label$83
	*($13) = [0]
	$13 = *($10 + [104])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [136]), ( *($10 + [112]) ? $16 : $15 ), ( *($10 + [108]) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [152]) + [8])) = *($15)
	*($10 + [152]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	$13 = *($0 + [288])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [152]), ( *(($0 + [296])) ? ($0 + [289]) : $15 ), ( *(($0 + [292])) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [168]) + [8])) = *($15)
	*($10 + [168]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	CALL $84(($10 + [88]), $0, $5, [8])
	$13 = *($10 + [88])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [168]), ( *($10 + [96]) ? (($10 + [88]) | [1]) : $15 ), ( *($10 + [92]) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [184]) + [8])) = *($15)
	*($10 + [184]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	$13 = *($0 + [324])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [184]), ( *(($0 + [332])) ? ($0 + [325]) : $15 ), ( *(($0 + [328])) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [200]) + [8])) = *($15)
	*($10 + [200]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	$13 = *($7)
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [200]), ( *($7 + [8]) ? ($7 + [1]) : $15 ), ( *($7 + [4]) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [216]) + [8])) = *($15)
	*($10 + [216]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	$13 = *($0 + [312])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [216]), ( *(($0 + [320])) ? ($0 + [313]) : $15 ), ( *(($0 + [316])) ? uint_32($13 >> [1]) : $15 ))
	$15 = *($13 + [8])
	*($13 + [8]) = [0]
	$12 = *($13)
	*($13) = (int_64)0
	*(($10 + [256])) = *(($4 + [8]))
	*(($10 + [272])) = $15
	*($10 + [232]) = $9
	*($10 + [240]) = $1
	*($10 + [248]) = *($4)
	*($10 + [264]) = $12
	$13 = CALL $85(($10 + [312]), ($10 + [296]), $14, (int_64)-3617168760277827584, ($10 + [232]))
	CALL $86($13)
	$15 = *($13 + [28])
	if ( ($15 == 0) ){ goto $label$109 }
	*(($13 + [32])) = $15
	CALL $11($15)
	
.LABEL $label$109
	$15 = *($13 + [16])
	if ( ($15 == 0) ){ goto $label$110 }
	*(($13 + [20])) = $15
	CALL $11($15)
	
.LABEL $label$110
	if ( (*($10 + [264]) & [1]) ){ goto $label$112 }
	if ( (*($10 + [216]) & [1]) ){ goto $label$111 }
	goto $label$79 
	
.LABEL $label$112
	CALL $11(*(($10 + [272])))
	if ( ((*($10 + [216]) & [1]) == 0) ){ goto $label$79 }
	
.LABEL $label$111
	CALL $11(*($10 + [224]))
	$13 = [1]
	if ( ((*($10 + [200]) & [1]) == 0) ){ goto $label$78 }
	goto $label$77 
	
.LABEL $label$82
	CALL eosio_assert([0], [10869])
	
.LABEL $label$81
	$12 = CALL $96($0, $8, $9)
	$3 = ($0 + [112])
	$15 = *(($0 + [140]))
	$4 = *(($0 + [136]))
	if ( ((int_32)$4 == (int_32)$15) ){ goto $label$114 }
	
.LOOP $label$116:
	$13 = ($15 + [-24])
	$16 = *($13)
	if ( ((int_64)*($16) == (int_64)$12) ){ goto $label$115 }
	$15 = $13
	if ( ((int_32)$4 != (int_32)$13) ){ goto $label$116 }
	goto $label$114 
	
.LABEL $label$115
	if ( ((int_32)$4 == (int_32)$15) ){ goto $label$114 }
	if ( ((int_32)*($16 + [80]) == (int_32)$3) ){ goto $label$113 }
	CALL eosio_assert([0], [9275])
	goto $label$113 
	
.LABEL $label$114
	$13 = CALL db_find_i64(*($3), *(($0 + [120])), (int_64)-4154952186784120832, $12)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$80 }
	$16 = CALL $97($3, $13)
	if ( ((int_32)*($16 + [80]) == (int_32)$3) ){ goto $label$113 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$113
	*((($10 + [312]) + [8])) = *((($10 + [232]) + [8]))
	*($10 + [312]) = *($10 + [232])
	$14 = *($16 + [40])
	if ( ((int_64)$14 == (int_64)0) ){ goto $label$118 }
	$12 = *($10 + [312])
	if ( ((int_64)$14 != (int_64)-1) ){ goto $label$117 }
	if ( ((int_64)$12 != (int_64)-9223372036854775808) ){ goto $label$117 }
	CALL eosio_assert([0], [10774])
	$12 = (int_64)-9223372036854775808
	goto $label$117 
	
.LABEL $label$118
	CALL eosio_assert([0], [10759])
	$12 = *($10 + [312])
	
.LABEL $label$117
	*($10 + [312]) = ((int_64)$12 / (int_64)$14)
	$12 = *($0)
	*($10 + [296]) = ($10 + [312])
	CALL $185($3, $16, $12, ($10 + [296]))
	$15 = *(($0 + [140]))
	$4 = *(($0 + [136]))
	if ( ((int_32)$4 == (int_32)$15) ){ goto $label$120 }
	
.LOOP $label$122:
	$13 = ($15 + [-24])
	$16 = *($13)
	if ( (int_64)(*($16) == 0) ){ goto $label$121 }
	$15 = $13
	if ( ((int_32)$4 != (int_32)$13) ){ goto $label$122 }
	goto $label$120 
	
.LABEL $label$121
	if ( ((int_32)$4 == (int_32)$15) ){ goto $label$120 }
	if ( ((int_32)*($16 + [80]) == (int_32)$3) ){ goto $label$119 }
	CALL eosio_assert([0], [9275])
	goto $label$119 
	
.LABEL $label$120
	$16 = [0]
	$13 = CALL db_find_i64(*(($0 + [112])), *(($0 + [120])), (int_64)-4154952186784120832, (int_64)0)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$119 }
	$16 = CALL $97($3, $13)
	if ( ((int_32)*($16 + [80]) == (int_32)$3) ){ goto $label$119 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$119
	$12 = CALL $96($0, ($16 + [48]), $9)
	$15 = *(($0 + [140]))
	$4 = *(($0 + [136]))
	if ( ((int_32)$4 == (int_32)$15) ){ goto $label$124 }
	
.LOOP $label$126:
	$13 = ($15 + [-24])
	$16 = *($13)
	if ( ((int_64)*($16) == (int_64)$12) ){ goto $label$125 }
	$15 = $13
	if ( ((int_32)$4 != (int_32)$13) ){ goto $label$126 }
	goto $label$124 
	
.LABEL $label$125
	if ( ((int_32)$4 == (int_32)$15) ){ goto $label$124 }
	if ( ((int_32)*($16 + [80]) == (int_32)$3) ){ goto $label$123 }
	CALL eosio_assert([0], [9275])
	goto $label$123 
	
.LABEL $label$124
	$16 = [0]
	$13 = CALL db_find_i64(*(($0 + [112])), *(($0 + [120])), (int_64)-4154952186784120832, $12)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$123 }
	$16 = CALL $97($3, $13)
	if ( ((int_32)*($16 + [80]) == (int_32)$3) ){ goto $label$123 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$123
	$12 = *($0)
	*($10 + [300]) = ($10 + [312])
	*($10 + [296]) = ($10 + [232])
	if ( $16 ){ goto $label$127 }
	CALL eosio_assert([0], [8651])
	
.LABEL $label$127
	CALL $186($3, $16, $12, ($10 + [296]))
	
.LABEL $label$80
	if ( (int_64)($11 == 0) ){ goto $label$22 }
	*($10 + [304]) = (int_64)3617214756542218240
	$9 = *($0)
	*($10 + [296]) = $9
	$14 = *($19 + [8])
	CALL $83(($10 + [88]), ($0 + [264]), [10587])
	$13 = *($0 + [276])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [88]), ( *(($0 + [284])) ? ($0 + [277]) : $15 ), ( *(($0 + [280])) ? uint_32($13 >> [1]) : $15 ))
	$16 = ($13 + [8])
	*((($10 + [104]) + [8])) = *($16)
	*($10 + [104]) = *($13)
	*($13) = (int_64)0
	$15 = [0]
	*($16) = [0]
	$12 = (uint_64)*(($19 + [32])) >> (uint_64)(int_64)8
	if ( (int_64)($12) == 0) ){ goto $label$131 }
	
.LOOP $label$133:
	*((($10 + [232]) + ($13 = $15))) = $12
	$15 = ($13 + [1])
	if ( ((uint_32)$13 > (uint_32)[5]) ){ goto $label$132 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$133 }
	
.LABEL $label$132
	*(($10 + [80])) = [0]
	*($10 + [72]) = (int_64)0
	if ( ((uint_32)$15 >= (uint_32)[11]) ){ goto $label$130 }
	*($10 + [72]) = ($15 << [1])
	$16 = (($10 + [72]) | [1])
	goto $label$129 
	
.LABEL $label$131
	*((($10 + [72]) + [8])) = [0]
	*($10 + [72]) = (int_64)0
	*($10 + [72]) = [0]
	$16 = (($10 + [72]) | [1])
	$13 = $16
	goto $label$128 
	
.LABEL $label$130
	$19 = (($15 + [16]) & [-16])
	$16 = CALL $9($19)
	*($10 + [72]) = ($19 | [1])
	*($10 + [80]) = $16
	*($10 + [76]) = $15
	
.LABEL $label$129
	$19 = ($13 + [1])
	$13 = [0]
	
.LOOP $label$134:
	*(($16 + $13)) = *((($10 + [232]) + $13))
	$13 = ($13 + [1])
	if ( ((int_32)$19 != (int_32)$13) ){ goto $label$134 }
	$13 = ($16 + $15)
	$16 = (($10 + [72]) | [1])
	
.LABEL $label$128
	*($13) = [0]
	$13 = *($10 + [72])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [104]), ( *($10 + [80]) ? $16 : $15 ), ( *($10 + [76]) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [120]) + [8])) = *($15)
	*($10 + [120]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	$13 = *($0 + [288])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [120]), ( *(($0 + [296])) ? ($0 + [289]) : $15 ), ( *(($0 + [292])) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [136]) + [8])) = *($15)
	*($10 + [136]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	CALL $84(($10 + [56]), $0, $5, [8])
	$13 = *($10 + [56])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [136]), ( *($10 + [64]) ? (($10 + [56]) | [1]) : $15 ), ( *($10 + [60]) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [152]) + [8])) = *($15)
	*($10 + [152]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	$13 = *($0 + [300])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [152]), ( *(($0 + [308])) ? ($0 + [301]) : $15 ), ( *(($0 + [304])) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [168]) + [8])) = *($15)
	*($10 + [168]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	CALL $84(($10 + [40]), $0, $5, [8])
	$13 = *($10 + [40])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [168]), ( *($10 + [48]) ? (($10 + [40]) | [1]) : $15 ), ( *($10 + [44]) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [184]) + [8])) = *($15)
	*($10 + [184]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	$13 = *($0 + [324])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [184]), ( *(($0 + [332])) ? ($0 + [325]) : $15 ), ( *(($0 + [328])) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [200]) + [8])) = *($15)
	*($10 + [200]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	$13 = *($6)
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [200]), ( *($6 + [8]) ? ($6 + [1]) : $15 ), ( *($6 + [4]) ? uint_32($13 >> [1]) : $15 ))
	$15 = ($13 + [8])
	*((($10 + [216]) + [8])) = *($15)
	*($10 + [216]) = *($13)
	*($13) = (int_64)0
	*($15) = [0]
	$13 = *($0 + [312])
	$15 = ($13 & [1])
	$13 = CALL $37(($10 + [216]), ( *(($0 + [320])) ? ($0 + [313]) : $15 ), ( *(($0 + [316])) ? uint_32($13 >> [1]) : $15 ))
	$12 = *($13)
	*($13) = (int_64)0
	$15 = *($13 + [8])
	*($13 + [8]) = [0]
	*(($10 + [256])) = $21
	*(($10 + [272])) = $15
	*($10 + [240]) = $2
	*($10 + [232]) = $9
	*($10 + [264]) = $12
	*($10 + [248]) = $11
	$13 = CALL $85(($10 + [312]), ($10 + [296]), $14, (int_64)-3617168760277827584, ($10 + [232]))
	CALL $86($13)
	$15 = *($13 + [28])
	if ( ($15 == 0) ){ goto $label$135 }
	*(($13 + [32])) = $15
	CALL $11($15)
	
.LABEL $label$135
	$15 = *($13 + [16])
	if ( ($15 == 0) ){ goto $label$136 }
	*(($13 + [20])) = $15
	CALL $11($15)
	
.LABEL $label$136
	if ( (*($10 + [264]) & [1]) ){ goto $label$160 }
	if ( (*($10 + [216]) & [1]) ){ goto $label$159 }
	goto $label$158 
	
.LABEL $label$160
	CALL $11(*(($10 + [272])))
	if ( ((*($10 + [216]) & [1]) == 0) ){ goto $label$158 }
	
.LABEL $label$159
	CALL $11(*($10 + [224]))
	$13 = [1]
	if ( ((*($10 + [200]) & [1]) == 0) ){ goto $label$157 }
	goto $label$156 
	
.LABEL $label$158
	$13 = [1]
	if ( (*($10 + [200]) & [1]) ){ goto $label$156 }
	
.LABEL $label$157
	if ( (*($10 + [184]) & $13) ){ goto $label$155 }
	goto $label$154 
	
.LABEL $label$156
	CALL $11(*($10 + [208]))
	if ( ((*($10 + [184]) & $13) == 0) ){ goto $label$154 }
	
.LABEL $label$155
	CALL $11(*($10 + [192]))
	$13 = [1]
	if ( ((*($10 + [40]) & [1]) == 0) ){ goto $label$153 }
	goto $label$152 
	
.LABEL $label$154
	$13 = [1]
	if ( (*($10 + [40]) & [1]) ){ goto $label$152 }
	
.LABEL $label$153
	if ( (*($10 + [168]) & $13) ){ goto $label$151 }
	goto $label$150 
	
.LABEL $label$152
	CALL $11(*(($10 + [48])))
	if ( ((*($10 + [168]) & $13) == 0) ){ goto $label$150 }
	
.LABEL $label$151
	CALL $11(*($10 + [176]))
	$13 = [1]
	if ( ((*($10 + [152]) & [1]) == 0) ){ goto $label$149 }
	goto $label$148 
	
.LABEL $label$150
	$13 = [1]
	if ( (*($10 + [152]) & [1]) ){ goto $label$148 }
	
.LABEL $label$149
	if ( (*($10 + [56]) & $13) ){ goto $label$147 }
	goto $label$146 
	
.LABEL $label$148
	CALL $11(*($10 + [160]))
	if ( ((*($10 + [56]) & $13) == 0) ){ goto $label$146 }
	
.LABEL $label$147
	CALL $11(*(($10 + [64])))
	$13 = [1]
	if ( ((*($10 + [136]) & [1]) == 0) ){ goto $label$145 }
	goto $label$144 
	
.LABEL $label$146
	$13 = [1]
	if ( (*($10 + [136]) & [1]) ){ goto $label$144 }
	
.LABEL $label$145
	if ( (*($10 + [120]) & $13) ){ goto $label$143 }
	goto $label$142 
	
.LABEL $label$144
	CALL $11(*($10 + [144]))
	if ( ((*($10 + [120]) & $13) == 0) ){ goto $label$142 }
	
.LABEL $label$143
	CALL $11(*($10 + [128]))
	$13 = [1]
	if ( ((*($10 + [72]) & [1]) == 0) ){ goto $label$141 }
	goto $label$140 
	
.LABEL $label$142
	$13 = [1]
	if ( (*($10 + [72]) & [1]) ){ goto $label$140 }
	
.LABEL $label$141
	if ( (*($10 + [104]) & $13) ){ goto $label$139 }
	goto $label$138 
	
.LABEL $label$140
	CALL $11(*(($10 + [80])))
	if ( ((*($10 + [104]) & $13) == 0) ){ goto $label$138 }
	
.LABEL $label$139
	CALL $11(*($10 + [112]))
	if ( (*($10 + [88]) & [1]) ){ goto $label$137 }
	goto $label$22 
	
.LABEL $label$138
	if ( ((*($10 + [88]) & [1]) == 0) ){ goto $label$22 }
	
.LABEL $label$137
	CALL $11(*($10 + [96]))
	goto $label$22 
	
.LABEL $label$79
	$13 = [1]
	if ( (*($10 + [200]) & [1]) ){ goto $label$77 }
	
.LABEL $label$78
	if ( (*($10 + [184]) & $13) ){ goto $label$76 }
	goto $label$75 
	
.LABEL $label$77
	CALL $11(*($10 + [208]))
	if ( ((*($10 + [184]) & $13) == 0) ){ goto $label$75 }
	
.LABEL $label$76
	CALL $11(*($10 + [192]))
	$13 = [1]
	if ( ((*($10 + [88]) & [1]) == 0) ){ goto $label$74 }
	goto $label$73 
	
.LABEL $label$75
	$13 = [1]
	if ( (*($10 + [88]) & [1]) ){ goto $label$73 }
	
.LABEL $label$74
	if ( (*($10 + [168]) & $13) ){ goto $label$72 }
	goto $label$71 
	
.LABEL $label$73
	CALL $11(*(($10 + [96])))
	if ( ((*($10 + [168]) & $13) == 0) ){ goto $label$71 }
	
.LABEL $label$72
	CALL $11(*($10 + [176]))
	$13 = [1]
	if ( ((*($10 + [152]) & [1]) == 0) ){ goto $label$70 }
	goto $label$69 
	
.LABEL $label$71
	$13 = [1]
	if ( (*($10 + [152]) & [1]) ){ goto $label$69 }
	
.LABEL $label$70
	if ( (*($10 + [104]) & $13) ){ goto $label$68 }
	goto $label$67 
	
.LABEL $label$69
	CALL $11(*($10 + [160]))
	if ( ((*($10 + [104]) & $13) == 0) ){ goto $label$67 }
	
.LABEL $label$68
	CALL $11(*(($10 + [112])))
	$13 = [1]
	if ( ((*($10 + [136]) & [1]) == 0) ){ goto $label$66 }
	goto $label$65 
	
.LABEL $label$67
	$13 = [1]
	if ( (*($10 + [136]) & [1]) ){ goto $label$65 }
	
.LABEL $label$66
	if ( (*($10 + [120]) & $13) ){ goto $label$64 }
	goto $label$22 
	
.LABEL $label$65
	CALL $11(*($10 + [144]))
	if ( ((*($10 + [120]) & $13) == 0) ){ goto $label$22 }
	
.LABEL $label$64
	CALL $11(*($10 + [128]))
	$global$0 = ($10 + [352])
	return 
	
.LABEL $label$22
	$global$0 = ($10 + [352])
}

void .FUNC $152 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $47($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [48]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [56])))
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $11($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $153 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-4154952186784120832, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [80]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [9275])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $97($7, CALL $fimport$7(*($7), *($7 + [8]), (int_64)-4154952186784120832, $6))
	if ( ((int_32)*($4 + [80]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$2
	*(($4 + [88])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $150 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *($0)
	$5 = *($4)
	*($3 + [8]) = *(*($4 + [4]) + [8])
	if ( (CALL $17(*($4 + [8]), ($3 + [8]), [8]) == 0) ){ goto $label$1 }
	$6 = *(*($4 + [12]) + [84])
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$2 }
	$6 = CALL db_idx64_find_primary(*($5), *($5 + [8]), (int_64)-4156459970285535232, $3, *(*($4 + [16])))
	*(*(($4 + [12])) + [84]) = $6
	
.LABEL $label$2
	CALL db_idx64_update($6, *(*($4 + [20])), ($3 + [8]))
	
.LABEL $label$1
	$4 = *($0)
	$6 = *($4)
	*($3 + [8]) = (uint_64)*(*($4 + [4]) + [32]) >> (uint_64)(int_64)8)
	if ( (CALL $17((*($4 + [8]) + [8]), ($3 + [8]), [8]) == 0) ){ goto $label$3 }
	$0 = *((*($4 + [12]) + [88]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)-4156459970285535231, $3, *(*($4 + [16])))
	*((*(($4 + [12])) + [88])) = $0
	
.LABEL $label$4
	CALL db_idx64_update($0, *(*($4 + [20])), ($3 + [8]))
	
.LABEL $label$3
	$global$0 = ($3 + [16])
}

void .FUNC $151 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	*($1) = (int_64)0
	$4 = *($0)
	CALL $34(($1 + [48]), *(*($0 + [4])))
	*($1 + [72]) = (int_64)-1
	$5 = *($1 + [48])
	$6 = ( *(($1 + [52])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($6 + [64])
	$7 = (CASTING uint_64)(uint_32 $6)
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $5)
	CALL $157(($3 + [8]), $1)
	$7 = *($1)
	*($1 + [84]) = CALL db_store_i64(*($4 + [8]), (int_64)-4154952186784120832, *(*($0 + [8])), $7, $2, $5)
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $3($2)
	
.LABEL $label$4
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$7 = *(($4 + [8]))
	$8 = *(*(($0 + [8])))
	$9 = *($1)
	*($3 + [24]) = *(($1 + [72]))
	*($1 + [88]) = CALL db_idx64_store($7, (int_64)-4154952186784120832, $8, $9, ($3 + [24]))
	$global$0 = ($3 + [32])
}

int_32 .FUNC $156 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9349])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9349])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9349])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [16])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9349])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9349])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [32])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [40])
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9349])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($5, $4, [8])
	*($3) = (*($3) + [8])
	$4 = ($1 + [64])
	$3 = *($0 + [4])
	$0 = CALL $120($0, ($1 + [48]))
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9349])
	$3 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$1 = ($1 + [72])
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9349])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($1, $4, [8])
	*($3) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $157 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9596])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [16]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9596])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9596])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [32]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9596])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [40])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9596])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, $5, [8])
	*($3) = (*($3) + [8])
	$4 = ($1 + [64])
	$3 = *($0 + [4])
	$0 = CALL $143($0, ($1 + [48]))
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9596])
	$3 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$1 = ($1 + [72])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9596])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($4, $1, [8])
	*($3) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $154 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = [-1]
	$4 = *($2 + [88])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [9354])
	$3 = [-1]
	$2 = *(($0 + [4]))
	$4 = *($2 + [88])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = *(*($0))
	$4 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)-4154952186784120832, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [88]) = $4
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$5 = CALL db_idx64_next($4, ($1 + [8]))
	if ( ((int_32)$5 <= (int_32)$3) ){ goto $label$7 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$8:
	$4 = ($2 + [-24])
	$3 = *($4)
	if ( ((int_64)*($3) == (int_64)$6) ){ goto $label$6 }
	$2 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$7
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	if ( ((int_32)*($3 + [80]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [9275])
	goto $label$4 
	
.LABEL $label$5
	$3 = CALL $97($7, CALL $fimport$7(*($7), *($7 + [8]), (int_64)-4154952186784120832, $6))
	if ( ((int_32)*($3 + [80]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$4
	*(($0 + [4])) = $3
	*(($3 + [88])) = $5
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $155 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	CALL $158(*($0 + [4]), $1)
	$5 = *($1 + [48])
	$6 = ( *(($1 + [52])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($6 + [64])
	$7 = (CASTING uint_64)(uint_32 $6)
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $5)
	CALL $157(($3 + [8]), $1)
	$7 = *($1)
	*($1 + [84]) = CALL db_store_i64(*($4 + [8]), (int_64)-4154952186784120832, *(*($0 + [8])), $7, $2, $5)
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $3($2)
	
.LABEL $label$4
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$7 = *(($4 + [8]))
	$8 = *(*(($0 + [8])))
	$9 = *($1)
	*($3 + [24]) = *($1 + [72])
	*($1 + [88]) = CALL db_idx64_store($7, (int_64)-4154952186784120832, $8, $9, ($3 + [24]))
	$global$0 = ($3 + [32])
}

void .FUNC $158 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *(($3 + [128]))
	if ( ((int_64)$4 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$4 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$4 = (int_64)0
	$5 = ($3 + [112])
	$6 = CALL db_lowerbound_i64(*($5), *(($3 + [120])), (int_64)-4154952186784120832, (int_64)0)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $97($5, $6)
	*($2 + [12]) = [0]
	*($2 + [8]) = $5
	$4 = *(*(CALL $159(($2 + [8])) + [4]))
	$4 = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	*(($3 + [128])) = $4
	if ( (uint_64)($4 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [9899])
	$4 = *(($3 + [128]))
	goto $label$1 
	
.LABEL $label$2
	*(($3 + [128])) = (int_64)0
	
.LABEL $label$1
	*($1) = $4
	$3 = CALL $1([9134])
	if ( ($3 <= [8]) ){ goto $label$8 }
	CALL eosio_assert([0], [9177])
	goto $label$7 
	
.LABEL $label$8
	if ( ($3 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$4 = (int_64)0
	
.LOOP $label$9:
	$5 = *(($3 + [9133]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$10 }
	CALL eosio_assert([0], [9222])
	
.LABEL $label$10
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$9 }
	$7 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)4)
	goto $label$5 
	
.LABEL $label$6
	$7 = (int_64)4
	
.LABEL $label$5
	$4 = (uint_64)$7 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$8 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$4 = $8
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$14
	$4 = $8
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$6 = ($3 + [1])
	$3 = $6
	if ( $5 ){ goto $label$15 }
	$3 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	CALL eosio_assert([0], [10102])
	
.LABEL $label$11
	*($1 + [8]) = (int_64)0
	*(($1 + [16])) = $7
	$7 = *(*(*($0 + [4]) + [4]) + [32])
	$4 = (uint_64)$7 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$8 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$19 }
	$4 = $8
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$19
	$4 = $8
	
.LOOP $label$20:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$17 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$6 = ($3 + [1])
	$3 = $6
	if ( $5 ){ goto $label$20 }
	$3 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	CALL eosio_assert([0], [10102])
	
.LABEL $label$16
	*($1 + [24]) = (int_64)0
	*(($1 + [32])) = $7
	*($1 + [40]) = *(*($0 + [8]))
	CALL $34(($1 + [48]), *($0 + [12]))
	*($1 + [64]) = *(*($0 + [16]))
	*($1 + [72]) = *(*($0 + [20]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $159 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [84]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10005])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-4154952186784120832)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [9951])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [9951])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $97(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $179 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8701])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9486])
	
.LABEL $label$2
	*($5 + [24]) = *($1 + [72])
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10630])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [10673])
	if ( ((int_64)*(($1 + [8])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [10692])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [9537])
	
.LABEL $label$4
	$3 = *($1 + [48])
	$8 = ( *(($1 + [52])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($8 + [64])
	$7 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$9:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$9 }
	if ( ($3 <= [513]) ){ goto $label$11 }
	$4 = CALL $2($3)
	goto $label$10 
	
.LABEL $label$11
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$10
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	CALL $157(($5 + [8]), $1)
	CALL db_update_i64(*($1 + [84]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$12 }
	CALL $3($4)
	
.LABEL $label$12
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	*($5 + [40]) = *(($1 + [72]))
	if ( (CALL $17(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$14 }
	$1 = ($1 + [88])
	$3 = *($1)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$15 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4154952186784120832, ($5 + [32]), $6)
	*($1) = $3
	
.LABEL $label$15
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$14
	$global$0 = ($5 + [48])
}

void .FUNC $183 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8701])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9486])
	
.LABEL $label$2
	*($5 + [24]) = *($1 + [72])
	$6 = *($1)
	$7 = *($3)
	$8 = *($7)
	$9 = *($7 + [8])
	$3 = *($3 + [4])
	if ( ((int_64)*($3 + [8]) == (int_64)$9) ){ goto $label$3 }
	CALL eosio_assert([0], [10799])
	
.LABEL $label$3
	$8 = (int_64)
	if ( ((int_64)$8($8 - *($3))) <= (int_64)-4611686018427387904) ){ goto $label$5 }
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [10869])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [10847])
	
.LABEL $label$4
	if ( ((int_64)$9 == (int_64)*(($1 + [32]))) ){ goto $label$6 }
	CALL eosio_assert([0], [10630])
	
.LABEL $label$6
	$8 = ((int_64)*($1 + [24]) + (int_64)$8)
	*($1 + [24]) = $8
	if ( ((int_64)$8 <= (int_64)-4611686018427387904) ){ goto $label$11 }
	if ( ((int_64)$8 >= (int_64)4611686018427387904) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL eosio_assert([0], [10673])
	if ( ((int_64)*(($1 + [24])) < (int_64)4611686018427387904) ){ goto $label$9 }
	
.LABEL $label$10
	CALL eosio_assert([0], [10692])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [9537])
	
.LABEL $label$7
	$3 = *($1 + [48])
	$7 = ( *(($1 + [52])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($7 + [64])
	$8 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$12:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ($3 <= [513]) ){ goto $label$14 }
	$4 = CALL $2($3)
	goto $label$13 
	
.LABEL $label$14
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$13
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	CALL $157(($5 + [8]), $1)
	CALL db_update_i64(*($1 + [84]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$15 }
	CALL $3($4)
	
.LABEL $label$15
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$16 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	*($5 + [40]) = *(($1 + [72]))
	if ( (CALL $17(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$17 }
	$1 = ($1 + [88])
	$3 = *($1)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$18 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4154952186784120832, ($5 + [32]), $6)
	*($1) = $3
	
.LABEL $label$18
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$17
	$global$0 = ($5 + [48])
}

void .FUNC $69 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	$4 = ($global$0 - [144])
	$global$0 = $4
	CALL require_auth($1)
	if ( CALL is_account($1) ){ goto $label$1 }
	CALL eosio_assert([0], [9832])
	
.LABEL $label$1
	$5 = ($0 + [112])
	$7 = *(($0 + [140]))
	$6 = *(($0 + [136]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	
.LOOP $label$7:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$2) ){ goto $label$6 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	if ( ((int_32)*($9 + [80]) == (int_32)$5) ){ goto $label$4 }
	CALL eosio_assert([0], [9275])
	if ( ((int_64)*($9 + [64]) != (int_64)$1) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$9 = [0]
	$8 = CALL db_find_i64(*($5), *(($0 + [120])), (int_64)-4154952186784120832, $2)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$4 }
	$9 = CALL $97($5, $8)
	if ( ((int_32)*($9 + [80]) == (int_32)$5) ){ goto $label$4 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$4
	if ( ((int_64)*($9 + [64]) == (int_64)$1) ){ goto $label$2 }
	
.LABEL $label$3
	CALL eosio_assert([0], [9814])
	
.LABEL $label$2
	$2 = CALL $75($0, $3)
	$10 = ($0 + [152])
	$7 = *(($0 + [180]))
	$3 = *(($0 + [176]))
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$9 }
	
.LOOP $label$11:
	$8 = ($7 + [-24])
	$6 = *($8)
	if ( ((int_64)*($6) == (int_64)$2) ){ goto $label$10 }
	$7 = $8
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$9 }
	if ( ((int_32)*(($6 + [76])) == (int_32)$10) ){ goto $label$8 }
	CALL eosio_assert([0], [9275])
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	$8 = CALL db_find_i64(*($10), *(($0 + [160])), (int_64)-4156459970285535232, $2)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$12 }
	$6 = CALL $76($10, $8)
	if ( ((int_32)*($6 + [76]) == (int_32)$10) ){ goto $label$8 }
	CALL eosio_assert([0], [9275])
	goto $label$8 
	
.LABEL $label$12
	CALL eosio_assert([0], [10122])
	
.LABEL $label$8
	*($4 + [96]) = (int_64)3617214756542218240
	*($4 + [88]) = *($0)
	*($4 + [72]) = [9138]
	*($4 + [76]) = CALL $1([9138])
	*($4) = *($4 + [72])
	$10 = CALL $50(($4 + [80]), $4)
	$2 = *($0)
	*((($4 + [8]) + [8])) = [0]
	*($4 + [8]) = (int_64)0
	$8 = CALL $1([10135])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$16 }
	$3 = ($9 + [8])
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$19 }
	*($4 + [8]) = ($8 << [1])
	$7 = (($4 + [8]) | [1])
	if ( $8 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$11 = (($8 + [16]) & [-16])
	$7 = CALL $9($11)
	*($4 + [8]) = ($11 | [1])
	*($4 + [16]) = $7
	*($4 + [12]) = $8
	
.LABEL $label$18
	CALL memcpy($7, [10135], $8)
	
.LABEL $label$17
	*(($7 + $8)) = [0]
	*($4 + [32]) = *(($9 + [64]))
	$1 = *(($3 + [8]))
	$12 = *($3)
	$8 = (($4 + [8]) + [8])
	*(($4 + [64])) = *($8)
	*($8) = [0]
	*(($4 + [48])) = $1
	*($4 + [24]) = $2
	$2 = *($4 + [8])
	*($4 + [8]) = (int_64)0
	*($4 + [56]) = $2
	*($4 + [40]) = $12
	$8 = CALL $85(($4 + [104]), ($4 + [88]), *($10), (int_64)-3617168760277827584, ($4 + [24]))
	CALL $86($8)
	$7 = *($8 + [28])
	if ( ($7 == 0) ){ goto $label$20 }
	*(($8 + [32])) = $7
	CALL $11($7)
	
.LABEL $label$20
	$7 = *($8 + [16])
	if ( ($7 == 0) ){ goto $label$21 }
	*(($8 + [20])) = $7
	CALL $11($7)
	
.LABEL $label$21
	if ( (*(($4 + [56])) & [1]) ){ goto $label$23 }
	if ( (*($4 + [8]) & [1]) ){ goto $label$22 }
	goto $label$15 
	
.LABEL $label$23
	CALL $11(*(($4 + [64])))
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$15 }
	
.LABEL $label$22
	CALL $11(*(($4 + [16])))
	$2 = *($0)
	if ( $9 ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$16
	CALL $31(($4 + [8]))
	
.LABEL $label$15
	$2 = *($0)
	if ( $9 ){ goto $label$13 }
	
.LABEL $label$14
	CALL eosio_assert([0], [8651])
	
.LABEL $label$13
	CALL $103($5, $9, $2, ($4 + [24]))
	*($4 + [96]) = (int_64)3617214756542218240
	$2 = *($0)
	*($4 + [88]) = $2
	$1 = *($6 + [8])
	*(($4 + [16])) = [0]
	*($4 + [8]) = (int_64)0
	$8 = CALL $1([10135])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$27 }
	$6 = ($9 + [24])
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$30 }
	*($4 + [8]) = ($8 << [1])
	$7 = (($4 + [8]) | [1])
	if ( $8 ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	$3 = (($8 + [16]) & [-16])
	$7 = CALL $9($3)
	*($4 + [8]) = ($3 | [1])
	*($4 + [16]) = $7
	*($4 + [12]) = $8
	
.LABEL $label$29
	CALL memcpy($7, [10135], $8)
	
.LABEL $label$28
	*(($7 + $8)) = [0]
	$12 = *(($9 + [64]))
	$13 = *(($6 + [8]))
	$14 = *($6)
	$8 = (($4 + [8]) + [8])
	*(($4 + [64])) = *($8)
	*(($4 + [48])) = $13
	*($8) = [0]
	*($4 + [24]) = $2
	$2 = *($4 + [8])
	*($4 + [8]) = (int_64)0
	*($4 + [32]) = $12
	*($4 + [56]) = $2
	*($4 + [40]) = $14
	$8 = CALL $85(($4 + [104]), ($4 + [88]), $1, (int_64)-3617168760277827584, ($4 + [24]))
	CALL $86($8)
	$7 = *($8 + [28])
	if ( ($7 == 0) ){ goto $label$31 }
	*(($8 + [32])) = $7
	CALL $11($7)
	
.LABEL $label$31
	$7 = *($8 + [16])
	if ( ($7 == 0) ){ goto $label$32 }
	*(($8 + [20])) = $7
	CALL $11($7)
	
.LABEL $label$32
	if ( (*(($4 + [56])) & [1]) ){ goto $label$34 }
	if ( (*($4 + [8]) & [1]) ){ goto $label$33 }
	goto $label$26 
	
.LABEL $label$34
	CALL $11(*(($4 + [64])))
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$26 }
	
.LABEL $label$33
	CALL $11(*(($4 + [16])))
	$2 = *($0)
	if ( $9 ){ goto $label$24 }
	goto $label$25 
	
.LABEL $label$27
	CALL $31(($4 + [8]))
	
.LABEL $label$26
	$2 = *($0)
	if ( $9 ){ goto $label$24 }
	
.LABEL $label$25
	CALL eosio_assert([0], [8651])
	
.LABEL $label$24
	CALL $104($5, $9, $2, ($4 + [24]))
	$global$0 = ($4 + [144])
	(unreachable)
	(unreachable)
}

void .FUNC $68 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [32])
	$global$0 = $3
	CALL require_auth($1)
	*($3 + [16]) = [9801]
	*($3 + [20]) = CALL $1([9801])
	*($3 + [8]) = *($3 + [16])
	if ( ((int_64)*(CALL $50(($3 + [24]), ($3 + [8]))) == (int_64)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [9814])
	
.LABEL $label$1
	if ( CALL is_account($1) ){ goto $label$2 }
	CALL eosio_assert([0], [9832])
	
.LABEL $label$2
	$4 = ($0 + [72])
	$6 = *(($0 + [100]))
	$5 = *(($0 + [96]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	
.LOOP $label$7:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$2) ){ goto $label$6 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	if ( ((int_32)*($8 + [24]) == (int_32)$4) ){ goto $label$8 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$8
	if ( $8 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$8 = [0]
	$7 = CALL db_find_i64(*($4), *(($0 + [80])), (int_64)-4148261996757778432, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$8 = CALL $78($4, $7)
	if ( ((int_32)*($8 + [24]) == (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [9275])
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [9619])
	CALL eosio_assert([0], [9354])
	
.LABEL $label$3
	$7 = CALL db_next_i64(*($8 + [28]), ($3 + [24]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	CALL $78($4, $7)
	
.LABEL $label$9
	CALL $110($4, $8)
	$global$0 = ($3 + [32])
}

void .FUNC $65 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_64 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$6 = ($global$0 - [80])
	$global$0 = $6
	*($6 + [64]) = $2
	*($6 + [72]) = $4
	CALL require_auth($1)
	*($6 + [56]) = [9801]
	*($6 + [60]) = CALL $1([9801])
	*($6) = *($6 + [56])
	if ( ((int_64)*(CALL $50(($6 + [16]), $6)) != (int_64)$1) ){ goto $label$13 }
	if ( (CALL is_account($1) == 0) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [9814])
	if ( CALL is_account($1) ){ goto $label$11 }
	
.LABEL $label$12
	CALL eosio_assert([0], [9832])
	if ( ((int_64)*($6 + [64]) != (int_64)0) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	if ( ((int_64)*($6 + [64]) == (int_64)0) ){ goto $label$9 }
	
.LABEL $label$10
	$1 = CALL $75($0, $5)
	*($6 + [48]) = $1
	if ( ((int_64)$1 != (int_64)-1) ){ goto $label$14 }
	CALL eosio_assert([0], [9072])
	$1 = *($6 + [48])
	
.LABEL $label$14
	$7 = ($0 + [152])
	$9 = *(($0 + [180]))
	$8 = *(($0 + [176]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$7 }
	
.LOOP $label$15:
	$5 = ($9 + [-24])
	$10 = *($5)
	if ( ((int_64)*($10) == (int_64)$1) ){ goto $label$8 }
	$9 = $5
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$15 }
	goto $label$7 
	
.LABEL $label$9
	$7 = ($0 + [112])
	$9 = *(($0 + [140]))
	$8 = *(($0 + [136]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$4 }
	
.LOOP $label$16:
	$5 = ($9 + [-24])
	$10 = *($5)
	if ( (int_64)(*($10) == 0) ){ goto $label$5 }
	$9 = $5
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$16 }
	goto $label$4 
	
.LABEL $label$8
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$7 }
	if ( ((int_32)*(($10 + [76])) == (int_32)$7) ){ goto $label$17 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$17
	*($6 + [44]) = $10
	goto $label$6 
	
.LABEL $label$7
	$5 = CALL db_find_i64(*($7), *(($0 + [160])), (int_64)-4156459970285535232, $1)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$18 }
	$5 = CALL $76($7, $5)
	if ( ((int_32)*($5 + [76]) == (int_32)$7) ){ goto $label$19 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$19
	*($6 + [44]) = $5
	goto $label$6 
	
.LABEL $label$18
	*($6 + [44]) = [0]
	
.LABEL $label$6
	*($6 + [40]) = $7
	$1 = CALL $96($0, $3, *($6 + [48]))
	$7 = ($0 + [112])
	$9 = *(($0 + [140]))
	$10 = *(($0 + [136]))
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$23 }
	
.LOOP $label$25:
	$5 = ($9 + [-24])
	$8 = *($5)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$24 }
	$9 = $5
	if ( ((int_32)$10 != (int_32)$5) ){ goto $label$25 }
	goto $label$23 
	
.LABEL $label$24
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$23 }
	if ( ((int_32)*($8 + [80]) == (int_32)$7) ){ goto $label$22 }
	CALL eosio_assert([0], [9275])
	if ( ((int_64)*($6 + [64]) == (int_64)10000) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$8 = [0]
	$5 = CALL db_find_i64(*($7), *(($0 + [120])), (int_64)-4154952186784120832, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$22 }
	$8 = CALL $97($7, $5)
	if ( ((int_32)*($8 + [80]) == (int_32)$7) ){ goto $label$22 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$22
	if ( ((int_64)*($6 + [64]) != (int_64)10000) ){ goto $label$20 }
	
.LABEL $label$21
	if ( $8 ){ goto $label$26 }
	CALL eosio_assert([0], [9619])
	CALL eosio_assert([0], [9354])
	
.LABEL $label$26
	$5 = CALL db_next_i64(*($8 + [84]), ($6 + [16]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$27 }
	CALL $97($7, $5)
	
.LABEL $label$27
	CALL $98($7, $8)
	$global$0 = ($6 + [80])
	return 
	
.LABEL $label$20
	$1 = *($0)
	if ( ($8 == 0) ){ goto $label$2 }
	*($6 + [20]) = $3
	*($6 + [16]) = ($6 + [64])
	*($6 + [24]) = ($6 + [72])
	*($6 + [28]) = ($6 + [48])
	CALL $99($7, $8, $1, ($6 + [16]))
	$global$0 = ($6 + [80])
	return 
	
.LABEL $label$5
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$4 }
	if ( ((int_32)*($10 + [80]) == (int_32)$7) ){ goto $label$3 }
	CALL eosio_assert([0], [9275])
	$global$0 = ($6 + [80])
	return 
	
.LABEL $label$4
	$5 = CALL db_find_i64(*($7), *(($0 + [120])), (int_64)-4154952186784120832, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	if ( ((int_32)*(CALL $97($7, $5) + [80]) == (int_32)$7) ){ goto $label$3 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$3
	$global$0 = ($6 + [80])
	return 
	
.LABEL $label$2
	*($6 + [16]) = $0
	*($6 + [28]) = $3
	*($6 + [20]) = ($6 + [40])
	*($6 + [24]) = ($6 + [64])
	*($6 + [32]) = ($6 + [72])
	*($6 + [36]) = ($6 + [48])
	CALL $100(($6 + [8]), $7, $1, ($6 + [16]))
	$global$0 = ($6 + [80])
	return 
	
.LABEL $label$1
	$1 = *($0)
	*($6 + [48]) = $3
	CALL $101(($6 + [16]), $7, $1, ($6 + [48]))
	$global$0 = ($6 + [80])
}

int_32 .FUNC $64 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [496])
	$global$0 = $3
	*(($4 = $3) + [488]) = *($2)
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$3 = CALL $2($2)
	goto $label$2 
	
.LABEL $label$4
	$3 = [0]
	goto $label$1 
	
.LABEL $label$3
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$2
	CALL read_action_data($3, $2)
	
.LABEL $label$1
	*(($4 + [424])) = (int_64)0
	*(($4 + [432])) = (int_64)0
	*($4 + [400]) = (int_64)0
	*($4 + [392]) = (int_64)0
	*($4 + [408]) = (int_64)0
	*($4 + [416]) = (int_64)0
	*($4 + [440]) = (int_64)0
	*($4 + [448]) = (int_64)0
	*($4 + [456]) = (int_64)0
	*($4 + [464]) = (int_64)0
	*($4 + [472]) = (int_64)0
	*($4 + [480]) = (int_64)0
	*($4 + [380]) = $3
	*($4 + [376]) = $3
	*($4 + [384]) = ($3 + $2)
	*($4 + [16]) = ($4 + [376])
	*($4 + [40]) = ($4 + [392])
	CALL $89(($4 + [40]), ($4 + [16]))
	$5 = *($4 + [384])
	*((($4 + [24]) + [8])) = $5
	*(($4 + [8])) = $5
	$6 = *($4 + [376])
	*($4) = $6
	*($4 + [24]) = $6
	$5 = CALL $72(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $5
	*($4 + [20]) = ($4 + [488])
	CALL $90(($4 + [16]), ($4 + [392]))
	if ( ($2 <= [513]) ){ goto $label$5 }
	CALL $3($3)
	
.LABEL $label$5
	CALL $74($5)
	if ( ((*($4 + [428]) & [1]) == 0) ){ goto $label$6 }
	CALL $11(*(($4 + [436])))
	
.LABEL $label$6
	if ( ((*($4 + [416]) & [1]) == 0) ){ goto $label$7 }
	CALL $11(*(($4 + [424])))
	
.LABEL $label$7
	$global$0 = ($4 + [496])
	return [1]
}

void .FUNC $67 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [32])
	$global$0 = $3
	CALL require_auth($1)
	*($3 + [16]) = [9801]
	*($3 + [20]) = CALL $1([9801])
	*($3 + [8]) = *($3 + [16])
	if ( ((int_64)*(CALL $50(($3 + [24]), ($3 + [8]))) == (int_64)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [9814])
	
.LABEL $label$1
	if ( CALL is_account($1) ){ goto $label$2 }
	CALL eosio_assert([0], [9832])
	
.LABEL $label$2
	$4 = ($0 + [112])
	$6 = *(($0 + [140]))
	$5 = *(($0 + [136]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	
.LOOP $label$7:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$2) ){ goto $label$6 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	if ( ((int_32)*($8 + [80]) == (int_32)$4) ){ goto $label$8 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$8
	if ( $8 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$8 = [0]
	$7 = CALL db_find_i64(*($4), *(($0 + [120])), (int_64)-4154952186784120832, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$8 = CALL $97($4, $7)
	if ( ((int_32)*($8 + [80]) == (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [9275])
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [9619])
	CALL eosio_assert([0], [9354])
	
.LABEL $label$3
	$7 = CALL db_next_i64(*($8 + [84]), ($3 + [24]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	CALL $97($4, $7)
	
.LABEL $label$9
	CALL $98($4, $8)
	$global$0 = ($3 + [32])
}

int_32 .FUNC $66 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [464])
	$global$0 = $3
	*(($4 = $3) + [456]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [424])) = [0]
	*(($4 + [448])) = [0]
	*($4 + [408]) = (int_64)0
	*($4 + [400]) = (int_64)0
	*($4 + [416]) = (int_64)0
	*($4 + [432]) = (int_64)0
	*($4 + [440]) = (int_64)0
	*($4 + [388]) = $2
	*($4 + [384]) = $2
	*($4 + [392]) = ($2 + $5)
	*($4 + [24]) = ($4 + [384])
	*($4 + [48]) = ($4 + [400])
	CALL $94(($4 + [48]), ($4 + [24]))
	$3 = *($4 + [392])
	*((($4 + [32]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$6 = *($4 + [384])
	*($4 + [8]) = $6
	*($4 + [32]) = $6
	$3 = CALL $72(($4 + [48]), $0, $1, ($4 + [8]))
	*($4 + [24]) = $3
	*($4 + [28]) = ($4 + [456])
	CALL $95(($4 + [24]), ($4 + [400]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $3($2)
	
.LABEL $label$4
	CALL $74($3)
	if ( ((*($4 + [440]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($4 + [448])))
	
.LABEL $label$5
	if ( ((*($4 + [416]) & [1]) == 0) ){ goto $label$6 }
	CALL $11(*(($4 + [424])))
	
.LABEL $label$6
	$global$0 = ($4 + [464])
	return [1]
}

void .FUNC $61 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [32])
	$global$0 = $3
	CALL require_auth($1)
	*($3 + [16]) = [9801]
	*($3 + [20]) = CALL $1([9801])
	*($3 + [8]) = *($3 + [16])
	if ( ((int_64)*(CALL $50(($3 + [24]), ($3 + [8]))) == (int_64)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [9814])
	
.LABEL $label$1
	if ( CALL is_account($1) ){ goto $label$2 }
	CALL eosio_assert([0], [9832])
	
.LABEL $label$2
	$4 = ($0 + [32])
	$6 = *(($0 + [60]))
	$5 = *(($0 + [56]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	
.LOOP $label$7:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$2) ){ goto $label$6 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	if ( ((int_32)*($8 + [8]) == (int_32)$4) ){ goto $label$8 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$8
	if ( $8 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$8 = [0]
	$7 = CALL db_find_i64(*($4), *(($0 + [40])), (int_64)-4157082893996903936, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$8 = CALL $106($4, $7)
	if ( ((int_32)*($8 + [8]) == (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [9275])
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [9619])
	CALL eosio_assert([0], [9354])
	
.LABEL $label$3
	$7 = CALL db_next_i64(*($8 + [12]), ($3 + [24]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	CALL $106($4, $7)
	
.LABEL $label$9
	CALL $107($4, $8)
	$global$0 = ($3 + [32])
}

int_32 .FUNC $60 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [432])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [408])) = [0]
	*($4 + [392]) = (int_64)0
	*($4 + [384]) = (int_64)0
	*($4 + [400]) = (int_64)0
	*($4 + [372]) = $2
	*($4 + [368]) = $2
	*($4 + [376]) = ($2 + $7)
	*($4 + [416]) = ($4 + [368])
	*($4 + [32]) = ($4 + [384])
	CALL $102(($4 + [32]), ($4 + [416]))
	$3 = *($4 + [376])
	*((($4 + [16]) + [8])) = $3
	*(($4 + [8])) = $3
	$8 = *($4 + [368])
	*($4) = $8
	*($4 + [16]) = $8
	$9 = CALL $72(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$0 = *($4 + [392])
	$1 = *($4 + [384])
	$10 = CALL $32(($4 + [416]), ($4 + [400]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $10), (int_32 $6))
	if ( ((*($4 + [416]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*($10 + [8]))
	
.LABEL $label$5
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $3($2)
	
.LABEL $label$6
	CALL $74($9)
	if ( ((*($4 + [400]) & [1]) == 0) ){ goto $label$7 }
	CALL $11(*(($4 + [408])))
	
.LABEL $label$7
	$global$0 = ($4 + [432])
	return [1]
}

void .FUNC $63 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5, int_64 $6, int_64 $7, int_64 $8, int_64 $9, int_64 $10, int_64 $11)
{
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$12 = ($global$0 - [128])
	$global$0 = $12
	*($12 + [112]) = $1
	*($12 + [120]) = $3
	*($12 + [104]) = $6
	*($12 + [96]) = $7
	*($12 + [88]) = $8
	*($12 + [80]) = $9
	*($12 + [72]) = $10
	*($12 + [64]) = $11
	CALL require_auth($2)
	*($12 + [56]) = [9801]
	*($12 + [60]) = CALL $1([9801])
	*($12) = *($12 + [56])
	if ( ((int_64)*(CALL $50(($12 + [16]), $12)) == (int_64)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [9814])
	
.LABEL $label$1
	if ( CALL is_account($2) ){ goto $label$2 }
	CALL eosio_assert([0], [9832])
	
.LABEL $label$2
	$13 = ($0 + [152])
	$2 = *($12 + [112])
	$15 = *(($0 + [180]))
	$14 = *(($0 + [176]))
	if ( ((int_32)$14 == (int_32)$15) ){ goto $label$5 }
	
.LOOP $label$7:
	$16 = ($15 + [-24])
	$17 = *($16)
	if ( ((int_64)*($17) == (int_64)$2) ){ goto $label$6 }
	$15 = $16
	if ( ((int_32)$14 != (int_32)$16) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$14 == (int_32)$15) ){ goto $label$5 }
	if ( ((int_32)*(($17 + [76])) == (int_32)$13) ){ goto $label$8 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$8
	if ( $17 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$16 = CALL db_find_i64(*($13), *(($0 + [160])), (int_64)-4156459970285535232, $2)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$3 }
	$17 = CALL $76($13, $16)
	if ( ((int_32)*($17 + [76]) == (int_32)$13) ){ goto $label$4 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$4
	$2 = *($0)
	*($12 + [20]) = $4
	*($12 + [24]) = $5
	*($12 + [16]) = ($12 + [120])
	*($12 + [28]) = ($12 + [104])
	*($12 + [32]) = ($12 + [96])
	*($12 + [36]) = ($12 + [88])
	*($12 + [40]) = ($12 + [80])
	*($12 + [44]) = ($12 + [72])
	*($12 + [48]) = ($12 + [64])
	CALL $91($13, $17, $2, ($12 + [16]))
	$global$0 = ($12 + [128])
	return 
	
.LABEL $label$3
	$2 = *($0)
	*($12 + [24]) = $4
	*($12 + [28]) = $5
	*($12 + [20]) = ($12 + [120])
	*($12 + [16]) = ($12 + [112])
	*($12 + [32]) = ($12 + [104])
	*($12 + [36]) = ($12 + [96])
	*($12 + [40]) = ($12 + [88])
	*($12 + [44]) = ($12 + [80])
	*($12 + [48]) = ($12 + [72])
	*($12 + [52]) = ($12 + [64])
	CALL $92(($12 + [8]), $13, $2, ($12 + [16]))
	$2 = *($0)
	*($12 + [8]) = ($12 + [112])
	CALL $93(($12 + [16]), ($0 + [72]), $2, ($12 + [8]))
	$global$0 = ($12 + [128])
}

int_32 .FUNC $62 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [384])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [376]) = (int_64)0
	*($4 + [368]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9349])
	
.LABEL $label$5
	$3 = ($2 + $7)
	CALL memcpy(($4 + [368]), $2, [8])
	$8 = ($2 + [8])
	$9 = (($4 + [368]) + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9349])
	
.LABEL $label$6
	CALL memcpy($9, $8, [8])
	*(($4 + [8])) = $3
	*($4 + [16]) = $2
	*($4 + [20]) = ($2 + [16])
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$8 = CALL $72(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$0 = *($9)
	$1 = *($4 + [368])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $3($2)
	
.LABEL $label$8
	CALL $74($8)
	$global$0 = ($4 + [384])
	return [1]
}

int_32 .FUNC $1 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

void .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9349])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9349])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9349])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	CALL $120(*($1), ($4 + [24]))
	*($2 + [8]) = $4
	CALL $190(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [68]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9653])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9698])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [9748])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	if ( ((*($6 + [56]) & [1]) == 0) ){ goto $label$13 }
	CALL $11(*(($6 + [64])))
	
.LABEL $label$13
	CALL $11($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$15 }
	if ( ((*($9 + [56]) & [1]) == 0) ){ goto $label$16 }
	CALL $11(*(($9 + [64])))
	
.LABEL $label$16
	CALL $11($9)
	
.LABEL $label$15
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [72]))
	$9 = *($1 + [76])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4149657304265580544, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($9)
	
.LABEL $label$17
	$global$0 = ($2 + [16])
}

void .FUNC $87 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8701])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9486])
	
.LABEL $label$2
	*($1 + [16]) = *(*($3))
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $142($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $4, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [16])
}

void .FUNC $86 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $133($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $135(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL $11($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

int_32 .FUNC $85 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($6 = ($0 + [24]))) = [0]
	$7 = CALL $9([16])
	*($0 + [16]) = $7
	*(($8 = ($0 + [20]))) = $7
	$9 = ($7 + [16])
	*($6) = $9
	$2 = *(($1 + [8]))
	$3 = *($1)
	*($8) = $9
	*(($7 + [8])) = $2
	*($7) = $3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$7 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $133($1, $7)
	$1 = *(($0 + [32]))
	$7 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$7 = [0]
	
.LABEL $label$2
	*($5 + [4]) = $7
	*($5) = $7
	*($5 + [8]) = $1
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	CALL $134(($5 + [24]), ($5 + [16]))
	$global$0 = ($5 + [32])
	return $0
}

void .FUNC $84 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	float_64 $4
	float_64 $5
	float_64 $6
	float_64 $7
	int_64 $8
	float_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	float_64 $17
	$4 = CALL $46((float_64)10, (float_64)8)
	$5 = CALL $46((float_64)10, (float_64)8)
	$6 = (CASTING float_64)(uint_64 $2)
	$4 = ((float_64)$6 / (float_64)$4)
	$7 = (Rounds 0)($4)
	if ( (((float_64)$4 < (float_64)(float_64)18446744073709551615) & ((float_64)$4 >= (float_64)(float_64)0)) ){ goto $label$2 }
	$8 = (int_64)0
	goto $label$1 
	
.LABEL $label$2
	$8 = (Rounds 0)($4)
	
.LABEL $label$1
	$9 = ((float_64)$5 * (float_64)$7)
	$10 = [-2]
	$2 = $8
	
.LOOP $label$3:
	$10 = ($10 + [1])
	$11 = ((uint_64)$2 > (uint_64)(int_64)9)
	$2 = ((uint_64)$2 / (uint_64)(int_64)10)
	if ( $11 ){ goto $label$3 }
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$12 = ($3 + $10)
	$11 = ($12 + [3])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$7 }
	*($0) = ($11 << [1])
	$13 = ($0 + [1])
	if ( ((int_32)$12 != (int_32)[-3]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$12 = (($12 + [19]) & [-16])
	$13 = CALL $9($12)
	*($0) = ($12 | [1])
	*($0 + [8]) = $13
	*($0 + [4]) = $11
	
.LABEL $label$6
	CALL memset($13, [46], $11)
	
.LABEL $label$5
	*(((($13 + $3) + $10) + [3])) = [0]
	if ( (int_64)($8 == 0) ){ goto $label$9 }
	$12 = ($0 + [1])
	if ( ((int_32)$10 == (int_32)[-2]) ){ goto $label$8 }
	$11 = ($10 + [1])
	$14 = ($0 + [8])
	$15 = $10
	$13 = [0]
	
.LOOP $label$10:
	$4 = (CASTING float_64)(uint_32 $11)
	$5 = CALL $46((float_64)10, $4)
	$7 = CALL $46((float_64)10, $4)
	$16 = (( *($14) ? $12 : (*($0) & [1]) ) + $13)
	$17 = (CASTING float_64)(uint_64 $8)
	$4 = ((float_64)$17 / (float_64)$5)
	if ( (((float_64)$4 < (float_64)(float_64)18446744073709551615) & ((float_64)$4 >= (float_64)(float_64)0)) ){ goto $label$12 }
	$2 = (int_64)0
	goto $label$11 
	
.LABEL $label$12
	$2 = (Rounds 0)($4)
	
.LABEL $label$11
	*($16) = *((*([0] + [9604]) + ((CASTING uint_32)(uint_64 $2) & [31])))
	$4 = (float_64)
	if ( (((float_64)$4($17 - ((float_64)$7 * (float_64)(Rounds 0)($4)))) < (float_64)(float_64)18446744073709551615) & ((float_64)$4 >= (float_64)(float_64)0)) ){ goto $label$14 }
	$8 = (int_64)0
	goto $label$13 
	
.LABEL $label$14
	$8 = (Rounds 0)($4)
	
.LABEL $label$13
	$11 = ($11 + [-1])
	$13 = ($13 + [1])
	$15 = ($15 + [-1])
	if ( ((int_32)$15 != (int_32)[-2]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	*(( *($0 + [8]) ? ($12 = ($0 + [1])) : (*($0) & [1]) )) = [48]
	
.LABEL $label$8
	*(((( *(($15 = ($0 + [8]))) ? $12 : (*($0) & [1]) ) + $10) + [2])) = [46]
	if ( ($3 == 0) ){ goto $label$15 }
	$10 = ($10 + [3])
	$4 = (float_64))($6 - $9)
	$11 = ($3 + [-1])
	
.LOOP $label$16:
	$5 = (CASTING float_64)(uint_32 $11)
	$7 = CALL $46((float_64)10, $5)
	$5 = CALL $46((float_64)10, $5)
	$13 = (( *($15) ? $12 : (*($0) & [1]) ) + $10)
	$17 = (Rounds 0)($4)
	$4 = ((float_64)$17 / (float_64)$7)
	if ( (((float_64)$4 < (float_64)(float_64)18446744073709551615) & ((float_64)$4 >= (float_64)(float_64)0)) ){ goto $label$18 }
	$2 = (int_64)0
	goto $label$17 
	
.LABEL $label$18
	$2 = (Rounds 0)($4)
	
.LABEL $label$17
	*($13) = *((*([0] + [9604]) + ((CASTING uint_32)(uint_64 $2) & [31])))
	$4 = (float_64))($17 - ((float_64)$5 * (float_64)(Rounds 0)($4)))
	$10 = ($10 + [1])
	$11 = ($11 + [-1])
	if ( ((int_32)$11 != (int_32)[-1]) ){ goto $label$16 }
	
.LABEL $label$15
	return (unreachable)
	
.LABEL $label$4
	CALL $31($0)
}

void .FUNC $83 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = CALL $1($2)
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($3 + $4)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1)
	$7 = *($1 + [8])
	if ( ((uint_32)$5 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = (($5 + [16]) & [-16])
	$5 = CALL $9($8)
	*($0) = ($8 | [1])
	*(($0 + [8])) = $5
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($5, ( $7 ? ($1 + [1]) : ($6 & [1]) ), $3)
	
.LABEL $label$2
	*(($5 + $3)) = [0]
	CALL $37($0, $2, $4)
	return (unreachable)
	
.LABEL $label$1
	CALL $31($0)
}

void .FUNC $82 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8701])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9486])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $142($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $4, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [16])
}

int_32 .FUNC $81 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = *($2 + [76])
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [9354])
	$2 = *(($0 + [4]))
	$3 = *($2 + [76])
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)-4149657304265580544, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [76]) = $3
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$4 = [0]
	$5 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$8:
	$3 = ($2 + [-24])
	$4 = *($3)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$7 }
	$2 = $3
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)*($4 + [68]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [9275])
	goto $label$5 
	
.LABEL $label$6
	$4 = CALL $77($7, CALL $fimport$7(*($7), *($7 + [8]), (int_64)-4149657304265580544, $6))
	if ( ((int_32)*($4 + [68]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$5
	*($4 + [76]) = $5
	
.LABEL $label$4
	*(($0 + [4])) = $4
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $80 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	*($1 + [8]) = (int_64)0
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$3 = *($2 + [76])
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$3 }
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)-4149657304265580544, $1, *($2))
	*(*(($0 + [4])) + [76]) = $3
	
.LABEL $label$3
	$4 = CALL db_idx64_previous($3, ($1 + [8]))
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [9438])
	goto $label$1 
	
.LABEL $label$2
	$2 = *(*($0))
	$2 = CALL db_idx64_end(*($2), *($2 + [8]), (int_64)-4149657304265580544)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$4 }
	CALL eosio_assert([0], [9384])
	
.LABEL $label$4
	$4 = CALL db_idx64_previous($2, ($1 + [8]))
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [9384])
	
.LABEL $label$1
	$5 = *($1 + [8])
	$3 = *(($6 + [28]))
	$6 = *(*($0))
	$7 = *($6 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$6 }
	
.LOOP $label$8:
	$2 = ($3 + [-24])
	$8 = *($2)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$7 }
	$3 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$6 }
	if ( ((int_32)*($8 + [68]) == (int_32)$6) ){ goto $label$5 }
	CALL eosio_assert([0], [9275])
	goto $label$5 
	
.LABEL $label$6
	$8 = CALL $77($6, CALL $fimport$7(*($6), *($6 + [8]), (int_64)-4149657304265580544, $5))
	if ( ((int_32)*($8 + [68]) == (int_32)$6) ){ goto $label$5 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$5
	*($8 + [76]) = $4
	*(($0 + [4])) = $8
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $182 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8701])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9486])
	
.LABEL $label$2
	*($5 + [24]) = *($1 + [72])
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [32]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10630])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [24]) + (int_64)*($3))
	*($1 + [24]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [10673])
	if ( ((int_64)*(($1 + [24])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [10692])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [9537])
	
.LABEL $label$4
	$3 = *($1 + [48])
	$8 = ( *(($1 + [52])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($8 + [64])
	$7 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$9:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$9 }
	if ( ($3 <= [513]) ){ goto $label$11 }
	$4 = CALL $2($3)
	goto $label$10 
	
.LABEL $label$11
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$10
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	CALL $157(($5 + [8]), $1)
	CALL db_update_i64(*($1 + [84]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$12 }
	CALL $3($4)
	
.LABEL $label$12
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	*($5 + [40]) = *(($1 + [72]))
	if ( (CALL $17(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$14 }
	$1 = ($1 + [88])
	$3 = *($1)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$15 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4154952186784120832, ($5 + [32]), $6)
	*($1) = $3
	
.LABEL $label$15
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$14
	$global$0 = ($5 + [48])
}

void .FUNC $149 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	*($1 + [8]) = *(*($0))
	CALL $34(($1 + [16]), *($0 + [4]))
	$2 = *($0 + [8])
	$3 = *($2)
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = uint_32($3 >> [1])
	$4 = ($2 + [1])
	goto $label$1 
	
.LABEL $label$2
	$3 = *($2 + [4])
	$4 = *($2 + [8])
	
.LABEL $label$1
	$5 = *(*($0 + [12]))
	if ( ($3 <= [8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9177])
	goto $label$5 
	
.LABEL $label$6
	if ( ($3 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$6 = (int_64)0
	
.LOOP $label$7:
	$7 = (($4 + $3) + [-1])
	$2 = *($7)
	if ( ((($2 + [-65]) & [255]) <= [26]) ){ goto $label$8 }
	CALL eosio_assert([0], [9222])
	$2 = *($7)
	
.LABEL $label$8
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$7 }
	$6 = ((int_64)$6 << (int_64)8)
	goto $label$3 
	
.LABEL $label$4
	$6 = (int_64)0
	
.LABEL $label$3
	*($1 + [32]) = ((int_64)$6 | (int_64)$5)
	*($1 + [40]) = *(*($0 + [16]))
	*($1 + [48]) = *(*($0 + [20]))
	*($1 + [56]) = *(*($0 + [24]))
	*($1 + [64]) = *(*($0 + [28]))
	*($1 + [72]) = *(*($0 + [32]))
}

int_32 .FUNC $148 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9596])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	*($3) = (*($3) + [8])
	$0 = CALL $143($0, ($1 + [16]))
	*($2 + [8]) = *($1 + [32])
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9596])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, ($2 + [8]), [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$5 = ($1 + [40])
	$4 = *($3)
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9596])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [48])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9596])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [56])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9596])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [64])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9596])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$1 = ($1 + [72])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [9596])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($4, $1, [1])
	*($3) = (*($3) + [1])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $145 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9596])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9596])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $144 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9596])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9596])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9596])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $147 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	*($1) = *(*($0))
	*($1 + [8]) = *(*($0 + [4]))
	CALL $34(($1 + [16]), *($0 + [8]))
	$2 = *($0 + [12])
	$3 = *($2)
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = uint_32($3 >> [1])
	$4 = ($2 + [1])
	goto $label$1 
	
.LABEL $label$2
	$3 = *($2 + [4])
	$4 = *($2 + [8])
	
.LABEL $label$1
	$5 = *(*($0 + [16]))
	if ( ($3 <= [8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9177])
	goto $label$5 
	
.LABEL $label$6
	if ( ($3 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$6 = (int_64)0
	
.LOOP $label$7:
	$7 = (($4 + $3) + [-1])
	$2 = *($7)
	if ( ((($2 + [-65]) & [255]) <= [26]) ){ goto $label$8 }
	CALL eosio_assert([0], [9222])
	$2 = *($7)
	
.LABEL $label$8
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$7 }
	$6 = ((int_64)$6 << (int_64)8)
	goto $label$3 
	
.LABEL $label$4
	$6 = (int_64)0
	
.LABEL $label$3
	*($1 + [32]) = ((int_64)$6 | (int_64)$5)
	*($1 + [40]) = *(*($0 + [20]))
	*($1 + [48]) = *(*($0 + [24]))
	*($1 + [56]) = *(*($0 + [28]))
	*($1 + [64]) = *(*($0 + [32]))
	*($1 + [72]) = *(*($0 + [36]))
}

void .FUNC $146 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	CALL $147(*($0 + [4]), $1)
	$5 = *($1 + [16])
	$6 = ( *(($1 + [20])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($6 + [57])
	$7 = (CASTING uint_64)(uint_32 $6)
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $5)
	CALL $148(($3 + [8]), $1)
	$7 = *($1)
	*($1 + [80]) = CALL db_store_i64(*($4 + [8]), (int_64)-4156459970285535232, *(*($0 + [8])), $7, $2, $5)
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $3($2)
	
.LABEL $label$4
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$5 = ($4 + [8])
	$7 = *($5)
	$2 = *(($0 + [8]))
	$8 = *($2)
	$9 = *($1)
	*($3 + [24]) = *($1 + [8])
	*($1 + [84]) = CALL db_idx64_store($7, (int_64)-4156459970285535232, $8, $9, ($3 + [24]))
	$7 = *($2)
	$8 = *($5)
	$9 = *($1)
	*($3 + [24]) = (uint_64)*($1 + [32]) >> (uint_64)(int_64)8)
	*(($1 + [88])) = CALL db_idx64_store($8, (int_64)-4156459970285535231, $7, $9, ($3 + [24]))
	$global$0 = ($3 + [32])
}

void .FUNC $141 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $47($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $140 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9349])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9349])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [16])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9349])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $3, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	return $0
}

int_32 .FUNC $143 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9596])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [9596])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $142 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9596])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [16])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9596])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $2, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	return $0
}

int_32 .FUNC $72 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [32])
	$global$0 = $4
	*(($5 = ($4 + [8]))) = *(($3 + [8]))
	*($4) = *($3)
	*($0) = $1
	*($0 + [8]) = $2
	$3 = *($5)
	*((($4 + [16]) + [8])) = $3
	$2 = *($4)
	*($0 + [16]) = $2
	*(($0 + [24])) = $3
	*($4 + [16]) = $2
	*(($0 + [40])) = $1
	*($0 + [32]) = $1
	*(($0 + [48])) = (int_64)-1
	*(($0 + [56])) = (int_64)0
	*(($0 + [64])) = [0]
	*($0 + [72]) = $1
	*(($0 + [80])) = $1
	*(($0 + [88])) = (int_64)-1
	*(($0 + [96])) = (int_64)0
	*(($0 + [104])) = [0]
	*($0 + [112]) = $1
	*(($0 + [120])) = $1
	*(($0 + [128])) = (int_64)-1
	*(($0 + [136])) = (int_64)0
	*(($0 + [144])) = [0]
	*(($0 + [148])) = [0]
	*($0 + [152]) = $1
	*(($0 + [160])) = $1
	*(($0 + [168])) = (int_64)-1
	*(($0 + [176])) = (int_64)0
	*(($0 + [184])) = [0]
	*(($0 + [188])) = [0]
	*($0 + [192]) = (int_64)0
	*(($0 + [200])) = (int_64)0
	*($0 + [208]) = (int_64)0
	*(($0 + [216])) = (int_64)0
	*($0 + [224]) = (int_64)0
	*(($0 + [232])) = (int_64)0
	*($0 + [240]) = (int_64)0
	*(($0 + [248])) = (int_64)0
	*($0 + [256]) = (int_64)0
	*(($0 + [272])) = [0]
	*($0 + [264 align=4]) = (int_64)0
	$5 = ($0 + [264])
	$3 = CALL $1([10976])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$9 }
	*($5) = ($3 << [1])
	$5 = ($5 + [1])
	if ( $3 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$6 = (($3 + [16]) & [-16])
	$5 = CALL $9($6)
	*($0 + [264]) = ($6 | [1])
	*(($0 + [272])) = $5
	*(($0 + [268])) = $3
	
.LABEL $label$8
	CALL memcpy($5, [10976], $3)
	
.LABEL $label$7
	*(($5 + $3)) = [0]
	*(($0 + [284])) = [0]
	*($0 + [276 align=4]) = (int_64)0
	$5 = ($0 + [276])
	$3 = CALL $1([10988])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$12 }
	*($5) = ($3 << [1])
	$5 = ($5 + [1])
	if ( $3 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$6 = (($3 + [16]) & [-16])
	$5 = CALL $9($6)
	*($0 + [276]) = ($6 | [1])
	*(($0 + [284])) = $5
	*(($0 + [280])) = $3
	
.LABEL $label$11
	CALL memcpy($5, [10988], $3)
	
.LABEL $label$10
	*(($5 + $3)) = [0]
	*(($0 + [296])) = [0]
	*($0 + [288 align=4]) = (int_64)0
	$5 = ($0 + [288])
	$3 = CALL $1([11001])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$15 }
	*($5) = ($3 << [1])
	$5 = ($5 + [1])
	if ( $3 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$6 = (($3 + [16]) & [-16])
	$5 = CALL $9($6)
	*($0 + [288]) = ($6 | [1])
	*(($0 + [296])) = $5
	*(($0 + [292])) = $3
	
.LABEL $label$14
	CALL memcpy($5, [11001], $3)
	
.LABEL $label$13
	*(($5 + $3)) = [0]
	*(($0 + [308])) = [0]
	*($0 + [300 align=4]) = (int_64)0
	$5 = ($0 + [300])
	$3 = CALL $1([11015])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$18 }
	*($5) = ($3 << [1])
	$5 = ($5 + [1])
	if ( $3 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$6 = (($3 + [16]) & [-16])
	$5 = CALL $9($6)
	*($0 + [300]) = ($6 | [1])
	*(($0 + [308])) = $5
	*(($0 + [304])) = $3
	
.LABEL $label$17
	CALL memcpy($5, [11015], $3)
	
.LABEL $label$16
	*(($5 + $3)) = [0]
	*(($0 + [320])) = [0]
	*($0 + [312 align=4]) = (int_64)0
	$5 = ($0 + [312])
	$3 = CALL $1([11033])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$21 }
	*($5) = ($3 << [1])
	$5 = ($5 + [1])
	if ( $3 ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	$6 = (($3 + [16]) & [-16])
	$5 = CALL $9($6)
	*($0 + [312]) = ($6 | [1])
	*(($0 + [320])) = $5
	*(($0 + [316])) = $3
	
.LABEL $label$20
	CALL memcpy($5, [11033], $3)
	
.LABEL $label$19
	*(($5 + $3)) = [0]
	*(($0 + [332])) = [0]
	*($0 + [324 align=4]) = (int_64)0
	$5 = ($0 + [324])
	$3 = CALL $1([11037])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$24 }
	*($5) = ($3 << [1])
	$5 = ($5 + [1])
	if ( $3 ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	$6 = (($3 + [16]) & [-16])
	$5 = CALL $9($6)
	*($0 + [324]) = ($6 | [1])
	*(($0 + [332])) = $5
	*(($0 + [328])) = $3
	
.LABEL $label$23
	CALL memcpy($5, [11037], $3)
	
.LABEL $label$22
	*(($5 + $3)) = [0]
	$global$0 = ($4 + [32])
	return $0
	
.LABEL $label$6
	CALL $31($5)
	
.LABEL $label$5
	CALL $31($5)
	
.LABEL $label$4
	CALL $31($5)
	
.LABEL $label$3
	CALL $31($5)
	
.LABEL $label$2
	CALL $31($5)
	
.LABEL $label$1
	CALL $31($5)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1)
	$4 = CALL $32(($2 + [16]), ($1 + [8]))
	$5 = *($1 + [24])
	$1 = CALL $32($2, ($1 + [32]))
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$7 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($7) + $0))
	
.LABEL $label$1
	CALL void $7((int_32 $3), (int_64 $4), (int_32 $5), (int_64 $1), (int_32 $0))
	if ( (*($1) & [1]) ){ goto $label$4 }
	if ( (*($4) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($1 + [8]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($4 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

void .FUNC $70 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [48])
	$global$0 = $3
	*($3 + [40]) = $2
	CALL require_auth($1)
	*($3 + [24]) = [9801]
	*($3 + [28]) = CALL $1([9801])
	*($3 + [8]) = *($3 + [24])
	if ( ((int_64)*(CALL $50(($3 + [32]), ($3 + [8]))) == (int_64)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [9814])
	
.LABEL $label$1
	if ( CALL is_account($1) ){ goto $label$2 }
	CALL eosio_assert([0], [9832])
	
.LABEL $label$2
	$1 = *($0)
	*($3 + [16]) = ($3 + [40])
	CALL $105(($3 + [32]), ($0 + [32]), $1, ($3 + [16]))
	$global$0 = ($3 + [48])
}

void .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9349])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	CALL $120(*($1), ($0 + [8]))
	$2 = ($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9349])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $120(*($1), ($0 + [32]))
}

int_32 .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9326])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $9([96])) + [8]) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($5 + [24]) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [76]) = $0
	CALL $136(($3 + [32]), $5)
	*($5 + [80]) = $1
	*($5 + [84 align=4]) = (int_64)-1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $137(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [16]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [24])))
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9326])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $9([80])) + [32]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [56 align=4]) = (int_64)0
	*($5 + [64]) = [0]
	*($5 + [68]) = $0
	CALL $138(($3 + [32]), $5)
	*($5 + [76]) = [-1]
	*($5 + [72]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $139(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [56]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [64])))
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $74 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	if ( (*($0 + [324]) & [1]) ){ goto $label$19 }
	if ( (*($0 + [312]) & [1]) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL $11(*(($0 + [332])))
	if ( ((*($0 + [312]) & [1]) == 0) ){ goto $label$17 }
	
.LABEL $label$18
	CALL $11(*(($0 + [320])))
	$1 = [1]
	if ( ((*($0 + [300]) & [1]) == 0) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$1 = [1]
	if ( (*($0 + [300]) & [1]) ){ goto $label$15 }
	
.LABEL $label$16
	if ( (*($0 + [288]) & $1) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $11(*(($0 + [308])))
	if ( ((*($0 + [288]) & $1) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $11(*(($0 + [296])))
	$1 = [1]
	if ( ((*($0 + [276]) & [1]) == 0) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$1 = [1]
	if ( (*($0 + [276]) & [1]) ){ goto $label$11 }
	
.LABEL $label$12
	if ( (*($0 + [264]) & $1) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $11(*(($0 + [284])))
	if ( ((*($0 + [264]) & $1) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $11(*(($0 + [272])))
	$2 = *(($0 + [176]))
	if ( ($2 == 0) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$2 = *(($0 + [176]))
	if ( $2 ){ goto $label$7 }
	
.LABEL $label$8
	$2 = *(($0 + [136]))
	if ( $2 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$3 = ($0 + [180])
	$1 = *($3)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$21 }
	
.LOOP $label$22:
	$1 = ($1 + [-24])
	$4 = *($1)
	*($1) = [0]
	if ( ($4 == 0) ){ goto $label$23 }
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$24 }
	CALL $11(*(($4 + [24])))
	
.LABEL $label$24
	CALL $11($4)
	
.LABEL $label$23
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$22 }
	$1 = *(($0 + [176]))
	goto $label$20 
	
.LABEL $label$21
	$1 = $2
	
.LABEL $label$20
	*($3) = $2
	CALL $11($1)
	$2 = *(($0 + [136]))
	if ( ($2 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$3 = ($0 + [140])
	$1 = *($3)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$26 }
	
.LOOP $label$27:
	$1 = ($1 + [-24])
	$4 = *($1)
	*($1) = [0]
	if ( ($4 == 0) ){ goto $label$28 }
	if ( ((*($4 + [48]) & [1]) == 0) ){ goto $label$29 }
	CALL $11(*(($4 + [56])))
	
.LABEL $label$29
	CALL $11($4)
	
.LABEL $label$28
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$27 }
	$1 = *(($0 + [136]))
	goto $label$25 
	
.LABEL $label$26
	$1 = $2
	
.LABEL $label$25
	*($3) = $2
	CALL $11($1)
	$2 = *(($0 + [96]))
	if ( ($2 == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$2 = *(($0 + [96]))
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$4
	$2 = *(($0 + [56]))
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$3 = ($0 + [100])
	$1 = *($3)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$31 }
	
.LOOP $label$32:
	$1 = ($1 + [-24])
	$4 = *($1)
	*($1) = [0]
	if ( ($4 == 0) ){ goto $label$33 }
	CALL $11($4)
	
.LABEL $label$33
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$32 }
	$1 = *(($0 + [96]))
	goto $label$30 
	
.LABEL $label$31
	$1 = $2
	
.LABEL $label$30
	*($3) = $2
	CALL $11($1)
	$2 = *(($0 + [56]))
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = ($0 + [60])
	$1 = *($3)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$34 }
	
.LOOP $label$35:
	$1 = ($1 + [-24])
	$4 = *($1)
	*($1) = [0]
	if ( ($4 == 0) ){ goto $label$36 }
	CALL $11($4)
	
.LABEL $label$36
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$35 }
	$1 = *(($0 + [56]))
	*($3) = $2
	CALL $11($1)
	return $0
	
.LABEL $label$34
	*($3) = $2
	CALL $11($2)
	return $0
	
.LABEL $label$1
	return $0
}

int_64 .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [32])
	$global$0 = $2
	CALL prints([9157])
	*($2 + [16]) = ($0 + [152])
	$3 = *($1 + [8])
	$4 = ($0 & [1])
	$0 = *($1)
	$0 = ( *($1 + [4]) ? uint_32($0 >> [1]) : $4 )
	if ( ($0 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [9177])
	goto $label$3 
	
.LABEL $label$4
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ( $3 ? ($1 + [1]) : $4 )
	$5 = (int_64)0
	
.LOOP $label$5:
	$3 = (($4 + $0) + [-1])
	$1 = *($3)
	if ( ((($1 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [9222])
	$1 = *($3)
	
.LABEL $label$6
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $1) << (int_64)56) >> (int_64)56))
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$2
	$5 = (int_64)0
	
.LABEL $label$1
	*($2 + [8]) = $5
	CALL $132(($2 + [24]), ($2 + [16]), ($2 + [8]))
	$0 = *($2 + [28])
	if ( ($0 == 0) ){ goto $label$7 }
	if ( ((int_64)*($2 + [8]) != (int_64)(uint_64)*($0 + [32]) >> (uint_64)(int_64)8)) ){ goto $label$7 }
	$5 = *($0)
	$global$0 = ($2 + [32])
	return $5
	
.LABEL $label$7
	$global$0 = ($2 + [32])
	return (int_64)-1
}

int_32 .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9326])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $9([40])) + [24]) = $0
	CALL $140(($3 + [32]), $5)
	*($5 + [28]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $141(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $79 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-4149657304265580544, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [68]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [9275])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $77($7, CALL $fimport$7(*($7), *($7 + [8]), (int_64)-4149657304265580544, $6))
	if ( ((int_32)*($4 + [68]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$2
	*($4 + [76]) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $98 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9653])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9698])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [9748])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	if ( ((*($6 + [48]) & [1]) == 0) ){ goto $label$13 }
	CALL $11(*(($6 + [56])))
	
.LABEL $label$13
	CALL $11($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$15 }
	if ( ((*($9 + [48]) & [1]) == 0) ){ goto $label$16 }
	CALL $11(*(($9 + [56])))
	
.LABEL $label$16
	CALL $11($9)
	
.LABEL $label$15
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [84]))
	$9 = *(($1 + [88]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4154952186784120832, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($9)
	
.LABEL $label$17
	$global$0 = ($2 + [16])
}

void .FUNC $99 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8701])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9486])
	
.LABEL $label$2
	*($5 + [24]) = *($1 + [72])
	*($1 + [40]) = *(*($3))
	$6 = *($1)
	$7 = ($1 + [48])
	CALL $34($7, *($3 + [4]))
	*($1 + [64]) = *(*($3 + [8]))
	*($1 + [72]) = *(*($3 + [12]))
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9537])
	
.LABEL $label$3
	$3 = *($7)
	$7 = ( *(($1 + [52])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($7 + [64])
	$8 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$6 }
	$4 = CALL $2($3)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	CALL $157(($5 + [8]), $1)
	CALL db_update_i64(*($1 + [84]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$7 }
	CALL $3($4)
	
.LABEL $label$7
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($5 + [40]) = *(($1 + [72]))
	if ( (CALL $17(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$9 }
	$1 = ($1 + [88])
	$3 = *($1)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$10 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4154952186784120832, ($5 + [32]), $6)
	*($1) = $3
	
.LABEL $label$10
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$9
	$global$0 = ($5 + [48])
}

void .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9349])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	$2 = ($3 + [8])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9349])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	CALL $120(*($1), ($3 + [16]))
	$2 = ($3 + [32])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9349])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	CALL $120(*($1), ($3 + [40]))
}

void .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1 + [8])
	$4 = *($1)
	$5 = CALL $32(($2 + [16]), ($1 + [16]))
	$6 = *($1 + [32])
	$1 = CALL $32($2, ($1 + [40]))
	$0 = *($0 + [4])
	$7 = *($0 + [4])
	$8 = (*($0) + int_32($7 >> [1]))
	$0 = *($0)
	if ( (($7 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($8) + $0))
	
.LABEL $label$1
	CALL void $8((int_32 $4), (int_64 $3), (int_64 $5), (int_32 $6), (int_64 $1), (int_32 $0))
	if ( (*($1) & [1]) ){ goto $label$4 }
	if ( (*($5) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($1 + [8]))
	if ( ((*($5) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($5 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

int_64 .FUNC $96 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$3 = ($global$0 - [32])
	$global$0 = $3
	*($3 + [16]) = $2
	*($3 + [8]) = ($0 + [112])
	CALL $153(($3 + [24]), ($3 + [8]), ($3 + [16]))
	$0 = *($3 + [28])
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ((int_64)*($3 + [16]) != (int_64)*($0 + [72])) ){ goto $label$1 }
	$2 = *($3 + [24])
	*($3) = $2
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	if ( ($0) == 0) ){ goto $label$3 }
	if ( ((int_64)*($0 + [72]) != (int_64)*($3 + [16])) ){ goto $label$3 }
	$4 = ($1 + [1])
	$5 = ($1 + [4])
	$6 = ($1 + [8])
	
.LOOP $label$4:
	$8 = ($7 & [1])
	$7 = *($1)
	$7 = ( *($5) ? uint_32($7 >> [1]) : $8 )
	$9 = *($6)
	$10 = *($0 + [48])
	if ( ($10 & [1]) ){ goto $label$8 }
	$11 = (($0 + [48]) + [1])
	$0 = uint_32($10 >> [1])
	$10 = ( $7 ? $0 : ($7 <= $0) )
	if ( ($10 == 0) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	$11 = *(($0 + [56]))
	$0 = *(($0 + [52]))
	$10 = ( $7 ? $0 : ($7 <= $0) )
	if ( ($10 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	if ( CALL $17($11, ( $9 ? $4 : $8 ), $10) ){ goto $label$5 }
	
.LABEL $label$6
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$2 }
	
.LABEL $label$5
	CALL $154($3)
	$0 = *($3 + [4])
	if ( ((int_64)*($0 + [72]) == (int_64)*($3 + [16])) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($3 + [32])
	return (int_64)-1
	
.LABEL $label$2
	$2 = *(*($3 + [4]))
	$global$0 = ($3 + [32])
	return $2
	
.LABEL $label$1
	*($3 + [4]) = [0]
	*($3) = ($3 + [8])
	$global$0 = ($3 + [32])
	return (int_64)-1
}

int_32 .FUNC $97 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9326])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $9([96])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [48 align=4]) = (int_64)0
	*($5 + [56]) = [0]
	*($5 + [64]) = (int_64)0
	*($5 + [80]) = $0
	CALL $156(($3 + [32]), $5)
	*($5 + [88]) = [-1]
	*($5 + [84]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $152(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [48]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [56])))
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$6 = CALL $32(($2 + [16]), ($1 + [24]))
	$7 = CALL $32($2, ($1 + [36]))
	$8 = *($0 + [4])
	$9 = *($8 + [4])
	$0 = (*($0) + int_32($9 >> [1]))
	$10 = *($1 + [88])
	$11 = *($1 + [80])
	$12 = *($1 + [72])
	$13 = *($1 + [64])
	$14 = *($1 + [56])
	$15 = *($1 + [48])
	$1 = *($8)
	if ( (($9 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	CALL void $0((int_32 $5), (int_64 $4), (int_64 $3), (int_64 $6), (int_32 $7), (int_32 $15), (int_64 $14), (int_64 $13), (int_64 $12), (int_64 $11), (int_64 $10), (int_64 $1))
	if ( (*($7) & [1]) ){ goto $label$4 }
	if ( (*($6) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($7 + [8]))
	if ( ((*($6) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($6 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

void .FUNC $91 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [80])
	$global$0 = $4
	*(($5 = $4) + [64]) = $2
	if ( ((int_32)*(($1 + [76])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8701])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9486])
	
.LABEL $label$2
	*($5 + [48]) = *($1 + [8])
	*($5 + [56]) = (uint_64)*($1 + [32]) >> (uint_64)(int_64)8)
	$6 = *($1)
	*($5 + [40]) = $6
	CALL $149($3, $1)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [9537])
	
.LABEL $label$3
	$7 = ($0 + [36])
	$3 = *($1 + [16])
	$8 = ( *(($1 + [20])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($8 + [57])
	$9 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$6 }
	$4 = CALL $2($3)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($5 + [28]) = $4
	*($5 + [24]) = $4
	*($5 + [32]) = ($4 + $3)
	CALL $148(($5 + [24]), $1)
	CALL db_update_i64(*($1 + [80]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$7 }
	CALL $3($4)
	$6 = *($5 + [40])
	
.LABEL $label$7
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($5 + [4]) = $1
	*($5) = $0
	*($5 + [12]) = $1
	*($5 + [8]) = ($5 + [48])
	*($5 + [16]) = ($5 + [40])
	*($5 + [20]) = ($5 + [64])
	*($5 + [72]) = $5
	CALL $150(($5 + [72]), $7, ($7 + [1]))
	$global$0 = ($5 + [80])
}

void .FUNC $92 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9848])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $9([96])) + [8]) = (int_64)0
	*($3 + [16 align=4]) = (int_64)0
	*($3 + [24]) = [0]
	*($3 + [32]) = (int_64)0
	*($3 + [76]) = $1
	CALL $146(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [80])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $137(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($3 + [24])))
	
.LABEL $label$5
	CALL $11($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $93 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [64])
	$global$0 = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9848])
	
.LABEL $label$1
	*(($5 = CALL $9([40])) + [24]) = $1
	*($5) = *(*($3))
	*($5 + [8]) = (int_64)0
	*($5 + [16]) = (int_64)-1
	*($4 + [56]) = (($4 + [16]) + [24])
	*($4 + [52]) = ($4 + [16])
	*($4 + [48]) = ($4 + [16])
	CALL $142(($4 + [48]), $5)
	$6 = *($5)
	$7 = CALL db_store_i64(*($1 + [8]), (int_64)-4148261996757778432, $2, $6, ($4 + [16]), [24])
	*($5 + [28]) = $7
	if ( (uint_64)($6 <= *($1 + [16])) ){ goto $label$2 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($4 + [48]) = $5
	$6 = *($5)
	*($4 + [16]) = $6
	*($4 + [12]) = $7
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = $6
	*($3 + [16]) = $7
	*($4 + [48]) = [0]
	*($3) = $5
	*($8) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $141(($1 + [24]), ($4 + [48]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [48])
	*($4 + [48]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $11($5)
	
.LABEL $label$5
	$global$0 = ($4 + [64])
}

int_32 .FUNC $138 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9349])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($0 + [8])
	if ( ((int_32)*($5) != (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [9349])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy(($2 + [7]), $4, [1])
	$4 = (*($3) + [1])
	*($3) = $4
	*(($1 + [8])) = ((int_32)*($2 + [7]) != (int_32)[0])
	$3 = ($1 + [16])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9349])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9349])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [32])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9349])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9349])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [40])) = *($2 + [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [48])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9349])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $4, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$0 = CALL $120($0, ($1 + [56]))
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $139 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $47($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [56]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [64])))
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $11($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $130 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [384])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [376]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9349])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [376]), $2, [8])
	*($3 + [368]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9349])
	
.LABEL $label$6
	CALL memcpy(($3 + [368]), $6, [8])
	*(($3 + [8])) = $5
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [16])
	*($3 + [24]) = $5
	*($3) = *($3 + [16])
	$2 = CALL $72(($3 + [32]), $0, $1, $3)
	CALL $70($2, *($3 + [376]), *($3 + [368]))
	CALL $74($2)
	$global$0 = ($3 + [384])
}

void .FUNC $131 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [384])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [376]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9349])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [376]), $2, [8])
	*($3 + [368]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9349])
	
.LABEL $label$6
	CALL memcpy(($3 + [368]), $6, [8])
	*(($3 + [8])) = $5
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [16])
	*($3 + [24]) = $5
	*($3) = *($3 + [16])
	$2 = CALL $72(($3 + [32]), $0, $1, $3)
	CALL $61($2, *($3 + [376]), *($3 + [368]))
	CALL $74($2)
	$global$0 = ($3 + [384])
}

void .FUNC $132 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-4156459970285535231, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*(($4 + [76])) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [9275])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $76($7, CALL $fimport$7(*($7), *($7 + [8]), (int_64)-4156459970285535232, $6))
	if ( ((int_32)*($4 + [76]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$2
	*(($4 + [88])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $133 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $9($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $47($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $11($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $134 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9596])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9596])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9596])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $143(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $135 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $145(CALL $144($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9596])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

int_32 .FUNC $136 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9349])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9349])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	*($3) = (*($3) + [8])
	$0 = CALL $120($0, ($1 + [16]))
	*($2 + [8]) = (int_64)0
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9349])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $3, [8])
	*($1 + [32]) = *($2 + [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$5 = ($1 + [40])
	$4 = *($3)
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9349])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [48])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9349])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [56])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9349])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [64])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9349])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$1 = ($1 + [72])
	if ( ((int_32)*(($0 + [8])) != (int_32)$4) ){ goto $label$8 }
	CALL eosio_assert([0], [9349])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($1, $4, [1])
	*($3) = (*($3) + [1])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $137 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $47($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [16]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [24])))
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $11($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $181 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [16]) = *(*($4 + [4]))
	*($1 + [8]) = [0]
	*($1 + [24]) = *(*($4 + [8]))
	$5 = *($0)
	$6 = *($4 + [12])
	*(($1 + [40])) = *(($6 + [8]))
	*($1 + [32]) = *($6)
	*($1 + [48]) = CALL publication_time()
	CALL $34(($1 + [56]), *($4 + [16]))
	$4 = *($1 + [56])
	$6 = ( *(($1 + [60])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($6 + [49])
	$7 = (CASTING uint_64)(uint_32 $6)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ($4 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $4)
	CALL $184(($3 + [8]), $1)
	$7 = *($1)
	*($1 + [72]) = CALL db_store_i64(*($5 + [8]), (int_64)-4149657304265580544, *(*($0 + [8])), $7, $2, $4)
	if ( ($4 <= [513]) ){ goto $label$4 }
	CALL $3($2)
	
.LABEL $label$4
	if ( (uint_64)($7 <= *($5 + [16])) ){ goto $label$5 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$7 = *(($5 + [8]))
	$8 = *(*(($0 + [8])))
	$9 = *($1)
	*($3 + [24]) = *(($1 + [24]))
	*($1 + [76]) = CALL db_idx64_store($7, (int_64)-4149657304265580544, $8, $9, ($3 + [24]))
	$global$0 = ($3 + [32])
}

void .FUNC $129 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [400])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [392]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9349])
	
.LABEL $label$5
	CALL memcpy(($3 + [392]), $2, [8])
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9349])
	
.LABEL $label$6
	CALL memcpy(($3 + [384]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [9349])
	
.LABEL $label$7
	$4 = ($2 + $4)
	CALL memcpy(($3 + [376]), $5, [8])
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [9349])
	
.LABEL $label$8
	CALL memcpy(($3 + [368]), $5, [8])
	*(($3 + [8])) = $4
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [32])
	*($3 + [24]) = $4
	*($3) = *($3 + [16])
	$2 = CALL $72(($3 + [32]), $0, $1, $3)
	CALL $55($2, *($3 + [392]), *($3 + [384]), *($3 + [376]), *($3 + [368]))
	CALL $74($2)
	$global$0 = ($3 + [400])
}

void .FUNC $128 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [416])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [404]) = $2
	*($3 + [400]) = $2
	$5 = ($2 + $4)
	*($3 + [408]) = $5
	*($3 + [392]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9349])
	$5 = *(($3 + [408]))
	$2 = *($3 + [404])
	
.LABEL $label$5
	CALL memcpy(($3 + [392]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [404]) = $2
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9349])
	$2 = *($3 + [404])
	
.LABEL $label$6
	CALL memcpy(($3 + [384]), $2, [8])
	*($3 + [404]) = ($2 + [8])
	*($3 + [376]) = [0]
	*($3 + [368]) = (int_64)0
	CALL $120(($3 + [400]), ($3 + [368]))
	$2 = *((($3 + [400]) + [8]))
	*((($3 + [16]) + [8])) = $2
	*(($3 + [8])) = $2
	$6 = *($3 + [400])
	*($3) = $6
	*($3 + [16]) = $6
	$2 = CALL $72(($3 + [32]), $0, $1, $3)
	CALL $59($2, *($3 + [392]), *($3 + [384]), ($3 + [368]))
	CALL $74($2)
	if ( ((*($3 + [368]) & [1]) == 0) ){ goto $label$7 }
	CALL $11(*(($3 + [376])))
	
.LABEL $label$7
	$global$0 = ($3 + [416])
}

int_32 .FUNC $8 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $6())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $7($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $9 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $2($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $2($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC $123 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [384])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [376]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9349])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [376]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9349])
	
.LABEL $label$6
	CALL memcpy(($3 + [368]), $6, [8])
	*(($3 + [8])) = $5
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [16])
	*($3 + [24]) = $5
	*($3) = *($3 + [16])
	$2 = CALL $72(($3 + [32]), $0, $1, $3)
	CALL $67($2, *($3 + [376]), *($3 + [368]))
	CALL $74($2)
	$global$0 = ($3 + [384])
}

void .FUNC $122 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [384])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [376]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9349])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [376]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9349])
	
.LABEL $label$6
	CALL memcpy(($3 + [368]), $6, [8])
	*(($3 + [8])) = $5
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [16])
	*($3 + [24]) = $5
	*($3) = *($3 + [16])
	$2 = CALL $72(($3 + [32]), $0, $1, $3)
	CALL $68($2, *($3 + [376]), *($3 + [368]))
	CALL $74($2)
	$global$0 = ($3 + [384])
}

int_32 .FUNC $121 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [11049])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $133($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [9349])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

int_32 .FUNC $120 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $121($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $9($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $36($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $36($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $31($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $11($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

int_32 .FUNC $2 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8220])
	return $3
	
.LABEL $label$1
	return $3
}

void .FUNC $126 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [496])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [484]) = $2
	*($3 + [480]) = $2
	*($3 + [488]) = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9349])
	$2 = *($3 + [484])
	
.LABEL $label$5
	CALL memcpy(($3 + [472]), $2, [8])
	$2 = (*($3 + [484]) + [8])
	*($3 + [484]) = $2
	*($3 + [464]) = (int_64)0
	$4 = (($3 + [480]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9349])
	$2 = *($3 + [484])
	
.LABEL $label$6
	CALL memcpy(($3 + [464]), $2, [8])
	$2 = (*($3 + [484]) + [8])
	*($3 + [484]) = $2
	*($3 + [456]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9349])
	$2 = *($3 + [484])
	
.LABEL $label$7
	CALL memcpy(($3 + [456]), $2, [8])
	*($3 + [484]) = (*($3 + [484]) + [8])
	*($3 + [448]) = [0]
	*($3 + [440]) = (int_64)0
	CALL $120(($3 + [480]), ($3 + [440]))
	*($3 + [432]) = [0]
	*($3 + [424]) = (int_64)0
	CALL $120(($3 + [480]), ($3 + [424]))
	$2 = *($3 + [484])
	$4 = (($3 + [480]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9349])
	$2 = *($3 + [484])
	
.LABEL $label$8
	CALL memcpy(($3 + [416]), $2, [8])
	$2 = (*($3 + [484]) + [8])
	*($3 + [484]) = $2
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [9349])
	$2 = *($3 + [484])
	
.LABEL $label$9
	CALL memcpy(($3 + [408]), $2, [8])
	$2 = (*($3 + [484]) + [8])
	*($3 + [484]) = $2
	$4 = (($3 + [480]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [9349])
	$2 = *($3 + [484])
	
.LABEL $label$10
	CALL memcpy(($3 + [400]), $2, [8])
	$2 = (*($3 + [484]) + [8])
	*($3 + [484]) = $2
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [9349])
	$2 = *($3 + [484])
	
.LABEL $label$11
	CALL memcpy(($3 + [392]), $2, [8])
	$2 = (*($3 + [484]) + [8])
	*($3 + [484]) = $2
	$4 = (($3 + [480]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [9349])
	$2 = *($3 + [484])
	
.LABEL $label$12
	CALL memcpy(($3 + [384]), $2, [8])
	$2 = (*($3 + [484]) + [8])
	*($3 + [484]) = $2
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [9349])
	$2 = *($3 + [484])
	
.LABEL $label$13
	CALL memcpy(($3 + [376]), $2, [8])
	*($3 + [484]) = (*($3 + [484]) + [8])
	$2 = *((($3 + [480]) + [8]))
	*((($3 + [24]) + [8])) = $2
	*((($3 + [8]) + [8])) = $2
	$5 = *($3 + [480])
	*($3 + [8]) = $5
	*($3 + [24]) = $5
	$2 = CALL $72(($3 + [40]), $0, $1, ($3 + [8]))
	CALL $63($2, *($3 + [472]), *($3 + [464]), *($3 + [456]), ($3 + [440]), ($3 + [424]), *($3 + [416]), *($3 + [408]), *($3 + [400]), *($3 + [392]), *($3 + [384]), *($3 + [376]))
	CALL $74($2)
	if ( (*($3 + [424]) & [1]) ){ goto $label$16 }
	if ( (*($3 + [440]) & [1]) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL $11(*((($3 + [424]) + [8])))
	if ( ((*($3 + [440]) & [1]) == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL $11(*(($3 + [448])))
	$global$0 = ($3 + [496])
	return 
	
.LABEL $label$14
	$global$0 = ($3 + [496])
}

void .FUNC $125 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [448])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [436]) = $2
	*($3 + [432]) = $2
	$5 = ($2 + $4)
	*($3 + [440]) = $5
	*($3 + [424]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9349])
	$5 = *(($3 + [440]))
	$2 = *($3 + [436])
	
.LABEL $label$5
	CALL memcpy(($3 + [424]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [436]) = $2
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9349])
	$2 = *($3 + [436])
	
.LABEL $label$6
	CALL memcpy(($3 + [416]), $2, [8])
	*($3 + [436]) = ($2 + [8])
	*($3 + [408]) = [0]
	*($3 + [400]) = (int_64)0
	CALL $120(($3 + [432]), ($3 + [400]))
	*($3 + [392]) = (int_64)0
	$2 = *($3 + [436])
	if ( ((uint_32)(*((($3 + [432]) + [8])) - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9349])
	$2 = *($3 + [436])
	
.LABEL $label$7
	CALL memcpy(($3 + [392]), $2, [8])
	*($3 + [436]) = (*($3 + [436]) + [8])
	*($3 + [384]) = [0]
	*($3 + [376]) = (int_64)0
	CALL $120(($3 + [432]), ($3 + [376]))
	$2 = *((($3 + [432]) + [8]))
	*((($3 + [24]) + [8])) = $2
	*((($3 + [8]) + [8])) = $2
	$6 = *($3 + [432])
	*($3 + [8]) = $6
	*($3 + [24]) = $6
	$2 = CALL $72(($3 + [40]), $0, $1, ($3 + [8]))
	CALL $65($2, *($3 + [424]), *($3 + [416]), ($3 + [400]), *($3 + [392]), ($3 + [376]))
	CALL $74($2)
	if ( (*($3 + [376]) & [1]) ){ goto $label$10 }
	if ( (*($3 + [400]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $11(*((($3 + [376]) + [8])))
	if ( ((*($3 + [400]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $11(*(($3 + [408])))
	$global$0 = ($3 + [448])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [448])
}

void .FUNC $124 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [384])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [376]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9349])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [376]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9349])
	
.LABEL $label$6
	CALL memcpy(($3 + [368]), $6, [8])
	*(($3 + [8])) = $5
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [16])
	*($3 + [24]) = $5
	*($3) = *($3 + [16])
	$2 = CALL $72(($3 + [32]), $0, $1, $3)
	CALL $51($2, *($3 + [376]), *($3 + [368]))
	CALL $74($2)
	$global$0 = ($3 + [384])
}

int_32 .FUNC $14 (int_32 $0, int_32 $1)
{
	return CALL $13($0, $1)
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $3($0)
	
.LABEL $label$1
}

void .FUNC $16 (int_32 $0, int_32 $1)
{
	CALL $15($0, $1)
}

int_32 .FUNC $17 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

int_32 .FUNC $10 (int_32 $0)
{
	return CALL $9($0)
}

void .FUNC $11 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $3($0)
	
.LABEL $label$1
}

void .FUNC $12 (int_32 $0)
{
	CALL $11($0)
}

int_32 .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $8(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $8(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $185 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8701])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9486])
	
.LABEL $label$2
	*($5 + [24]) = *($1 + [72])
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [32]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10630])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [24]) + (int_64)*($3))
	*($1 + [24]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [10673])
	if ( ((int_64)*(($1 + [24])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [10692])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [9537])
	
.LABEL $label$4
	$3 = *($1 + [48])
	$8 = ( *(($1 + [52])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($8 + [64])
	$7 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$9:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$9 }
	if ( ($3 <= [513]) ){ goto $label$11 }
	$4 = CALL $2($3)
	goto $label$10 
	
.LABEL $label$11
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$10
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	CALL $157(($5 + [8]), $1)
	CALL db_update_i64(*($1 + [84]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$12 }
	CALL $3($4)
	
.LABEL $label$12
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	*($5 + [40]) = *(($1 + [72]))
	if ( (CALL $17(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$14 }
	$1 = ($1 + [88])
	$3 = *($1)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$15 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4154952186784120832, ($5 + [32]), $6)
	*($1) = $3
	
.LABEL $label$15
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$14
	$global$0 = ($5 + [48])
}

int_32 .FUNC $18 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [-1]) | $1)
	if ( ((uint_32)*($0 + [20]) <= (uint_32)*($0 + [28])) ){ goto $label$1 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	
.LABEL $label$1
	*($0 + [16]) = (int_64)0
	*(($0 + [28])) = [0]
	$1 = *($0)
	if ( ($1 & [4]) ){ goto $label$2 }
	$2 = (*($0 + [44]) + *($0 + [48]))
	*($0 + [8]) = $2
	*($0 + [4]) = $2
	return int_32(($1 << [27]) >> [31])
	
.LABEL $label$2
	*($0) = ($1 | [32])
	return [-1]
}

int_32 .FUNC $19 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = [-1]
	if ( CALL $18($0) ){ goto $label$1 }
	if ( ((int_32)CALL int_32 $0((int_32 ($1 + [15])), (int_32 [1]), (int_32 *($0 + [32]))) != (int_32)[1]) ){ goto $label$1 }
	$2 = *($1 + [15])
	
.LABEL $label$1
	$global$0 = ($1 + [16])
	return $2
}

int_32 .FUNC $184 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9596])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [7]) = *($1 + [8])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9596])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [7]), [1])
	$4 = (*($3) + [1])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9596])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9596])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [32])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9596])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *(($1 + [40]))
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9596])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [48])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9596])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $3, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$0 = CALL $143($0, ($1 + [56]))
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $187 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [16]) = *(*($4 + [4]))
	*($1 + [8]) = [1]
	*($1 + [24]) = *(*($4 + [8]))
	$5 = *($0)
	$6 = *($4 + [12])
	*(($1 + [40])) = *(($6 + [8]))
	*($1 + [32]) = *($6)
	*($1 + [48]) = CALL publication_time()
	CALL $34(($1 + [56]), *($4 + [16]))
	$4 = *($1 + [56])
	$6 = ( *(($1 + [60])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($6 + [49])
	$7 = (CASTING uint_64)(uint_32 $6)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ($4 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $4)
	CALL $184(($3 + [8]), $1)
	$7 = *($1)
	*($1 + [72]) = CALL db_store_i64(*($5 + [8]), (int_64)-4149657304265580544, *(*($0 + [8])), $7, $2, $4)
	if ( ($4 <= [513]) ){ goto $label$4 }
	CALL $3($2)
	
.LABEL $label$4
	if ( (uint_64)($7 <= *($5 + [16])) ){ goto $label$5 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$7 = *(($5 + [8]))
	$8 = *(*(($0 + [8])))
	$9 = *($1)
	*($3 + [24]) = *(($1 + [24]))
	*($1 + [76]) = CALL db_idx64_store($7, (int_64)-4149657304265580544, $8, $9, ($3 + [24]))
	$global$0 = ($3 + [32])
}

void .FUNC $186 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8701])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9486])
	
.LABEL $label$2
	*($5 + [24]) = *($1 + [72])
	$6 = *($1)
	$7 = *($3)
	$8 = *($7)
	$9 = *($7 + [8])
	$3 = *($3 + [4])
	if ( ((int_64)*($3 + [8]) == (int_64)$9) ){ goto $label$3 }
	CALL eosio_assert([0], [10799])
	
.LABEL $label$3
	$8 = (int_64)
	if ( ((int_64)$8($8 - *($3))) <= (int_64)-4611686018427387904) ){ goto $label$5 }
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [10869])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [10847])
	
.LABEL $label$4
	if ( ((int_64)$9 == (int_64)*(($1 + [32]))) ){ goto $label$6 }
	CALL eosio_assert([0], [10630])
	
.LABEL $label$6
	$8 = ((int_64)*($1 + [24]) + (int_64)$8)
	*($1 + [24]) = $8
	if ( ((int_64)$8 <= (int_64)-4611686018427387904) ){ goto $label$11 }
	if ( ((int_64)$8 >= (int_64)4611686018427387904) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL eosio_assert([0], [10673])
	if ( ((int_64)*(($1 + [24])) < (int_64)4611686018427387904) ){ goto $label$9 }
	
.LABEL $label$10
	CALL eosio_assert([0], [10692])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [9537])
	
.LABEL $label$7
	$3 = *($1 + [48])
	$7 = ( *(($1 + [52])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($7 + [64])
	$8 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$12:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ($3 <= [513]) ){ goto $label$14 }
	$4 = CALL $2($3)
	goto $label$13 
	
.LABEL $label$14
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$13
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	CALL $157(($5 + [8]), $1)
	CALL db_update_i64(*($1 + [84]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$15 }
	CALL $3($4)
	
.LABEL $label$15
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$16 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	*($5 + [40]) = *(($1 + [72]))
	if ( (CALL $17(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$17 }
	$1 = ($1 + [88])
	$3 = *($1)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$18 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4154952186784120832, ($5 + [32]), $6)
	*($1) = $3
	
.LABEL $label$18
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$17
	$global$0 = ($5 + [48])
}

void .FUNC $180 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8701])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9486])
	
.LABEL $label$2
	*($5 + [24]) = *($1 + [72])
	$6 = *($1)
	$7 = *($3)
	$8 = *($7)
	$9 = *($7 + [8])
	$3 = *($3 + [4])
	if ( ((int_64)*($3 + [8]) == (int_64)$9) ){ goto $label$3 }
	CALL eosio_assert([0], [10799])
	
.LABEL $label$3
	$8 = (int_64)
	if ( ((int_64)$8($8 - *($3))) <= (int_64)-4611686018427387904) ){ goto $label$5 }
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [10869])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [10847])
	
.LABEL $label$4
	if ( ((int_64)$9 == (int_64)*(($1 + [16]))) ){ goto $label$6 }
	CALL eosio_assert([0], [10630])
	
.LABEL $label$6
	$8 = ((int_64)*($1 + [8]) + (int_64)$8)
	*($1 + [8]) = $8
	if ( ((int_64)$8 <= (int_64)-4611686018427387904) ){ goto $label$11 }
	if ( ((int_64)$8 >= (int_64)4611686018427387904) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL eosio_assert([0], [10673])
	if ( ((int_64)*(($1 + [8])) < (int_64)4611686018427387904) ){ goto $label$9 }
	
.LABEL $label$10
	CALL eosio_assert([0], [10692])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [9537])
	
.LABEL $label$7
	$3 = *($1 + [48])
	$7 = ( *(($1 + [52])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($7 + [64])
	$8 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$12:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ($3 <= [513]) ){ goto $label$14 }
	$4 = CALL $2($3)
	goto $label$13 
	
.LABEL $label$14
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$13
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	CALL $157(($5 + [8]), $1)
	CALL db_update_i64(*($1 + [84]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$15 }
	CALL $3($4)
	
.LABEL $label$15
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$16 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	*($5 + [40]) = *(($1 + [72]))
	if ( (CALL $17(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$17 }
	$1 = ($1 + [88])
	$3 = *($1)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$18 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4154952186784120832, ($5 + [32]), $6)
	*($1) = $3
	
.LABEL $label$18
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$17
	$global$0 = ($5 + [48])
}

int_32 .FUNC $116 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$4 = ($global$0 - [16])
	$global$0 = $4
	*(($6 = CALL $10((($5 = ((int_32)$3 * (int_32)[12])) + [4])))) = $3
	$7 = ($6 + [4])
	if ( ($3 == 0) ){ goto $label$1 }
	$6 = ($7 + $5)
	$3 = $7
	
.LOOP $label$2:
	*($3) = (int_64)0
	*(($3 + [8])) = [0]
	$3 = ($3 + [12])
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$2 }
	
.LABEL $label$1
	$8 = ($2 + [1])
	$9 = ($1 + [1])
	$10 = ($2 + [4])
	$11 = ($2 + [8])
	$12 = [0]
	$13 = *($1)
	$14 = ($13 & [1])
	if ( $14 ){ goto $label$4 }
	$15 = [21]
	goto $label$3 
	
.LABEL $label$4
	$15 = [0]
	
.LABEL $label$3
	
.LOOP $label$5:
	goto $label$52 
	
.LABEL $label$54
	CALL $36($1, [0])
	*(($1 + [8])) = *(($4 + [8]))
	*($1) = *($4)
	$13 = *($1)
	$14 = ($13 & [1])
	if ( $14 ){ goto $label$27 }
	$15 = [21]
	goto $label$5 
	
.LABEL $label$53
	$16 = $9
	$3 = uint_32($13 >> [1])
	if ( $3 ){ goto $label$24 }
	goto $label$25 
	
.LABEL $label$52
	$16 = *(($1 + [8]))
	$3 = *(($1 + [4]))
	if ( ($3 == 0) ){ goto $label$26 }
	$15 = [1]
	goto $label$5 
	
.LABEL $label$51
	$6 = ($6 & [1])
	$6 = *($2)
	$17 = ( *($10) ? uint_32($6 >> [1]) : $6 )
	if ( ($17 == 0) ){ goto $label$23 }
	$15 = [2]
	goto $label$5 
	
.LABEL $label$50
	$18 = ( *($11) ? $8 : $6 )
	$19 = ($16 + $3)
	$20 = $16
	$15 = [3]
	goto $label$5 
	
.LABEL $label$49
	$5 = *($20)
	$6 = $17
	$3 = $18
	$15 = [4]
	goto $label$5 
	
.LABEL $label$48
	if ( ((int_32)($5 & [255]) == (int_32)*($3)) ){ goto $label$19 }
	$15 = [5]
	goto $label$5 
	
.LABEL $label$47
	$3 = ($3 + [1])
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$20 }
	$15 = [6]
	goto $label$5 
	
.LABEL $label$46
	$20 = ($20 + [1])
	if ( ((int_32)$20 != (int_32)$19) ){ goto $label$21 }
	goto $label$22 
	
.LABEL $label$45
	if ( ((int_32)$20 == (int_32)$19) ){ goto $label$18 }
	$15 = [16]
	goto $label$5 
	
.LABEL $label$44
	$3 = ($20 - $16)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$17 }
	$15 = [17]
	goto $label$5 
	
.LABEL $label$43
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$11 }
	$15 = [23]
	goto $label$5 
	
.LABEL $label$42
	CALL $33($4, $1, [0], $3, $1)
	$6 = ($7 + ((int_32)$12 * (int_32)[12]))
	if ( (*($6) & [1]) ){ goto $label$7 }
	$15 = [26]
	goto $label$5 
	
.LABEL $label$41
	*($6) = [0]
	goto $label$6 
	
.LABEL $label$40
	*(*($6 + [8])) = [0]
	*($6 + [4]) = [0]
	$15 = [25]
	goto $label$5 
	
.LABEL $label$39
	$12 = ($12 + [1])
	CALL $36($6, [0])
	*(($6 + [8])) = *(($4 + [8]))
	*($6) = *($4)
	$15 = [18]
	goto $label$5 
	
.LABEL $label$38
	CALL $33($4, $1, ($3 + [1]), [-1], $1)
	if ( (*($1) & [1]) ){ goto $label$10 }
	$15 = [22]
	goto $label$5 
	
.LABEL $label$37
	*($1) = [0]
	goto $label$8 
	
.LABEL $label$36
	*(*(($1 + [8]))) = [0]
	*(($1 + [4])) = [0]
	goto $label$9 
	
.LABEL $label$35
	if ( $14 ){ goto $label$16 }
	$15 = [14]
	goto $label$5 
	
.LABEL $label$34
	if ( uint_32($13 >> [1]) ){ goto $label$14 }
	$15 = [13]
	goto $label$5 
	
.LABEL $label$33
	$global$0 = ($4 + [16])
	return $7
	
.LABEL $label$32
	if ( (*(($1 + [4])) == 0) ){ goto $label$15 }
	$15 = [9]
	goto $label$5 
	
.LABEL $label$31
	CALL $33($4, $1, [0], [-1], $1)
	$3 = ($7 + ((int_32)$12 * (int_32)[12]))
	if ( (*($3) & [1]) ){ goto $label$13 }
	$15 = [12]
	goto $label$5 
	
.LABEL $label$30
	*($3) = [0]
	goto $label$12 
	
.LABEL $label$29
	*(*($3 + [8])) = [0]
	*($3 + [4]) = [0]
	$15 = [11]
	goto $label$5 
	
.LABEL $label$28
	CALL $36($3, [0])
	*(($3 + [8])) = *(($4 + [8]))
	*($3) = *($4)
	$global$0 = ($4 + [16])
	return $7
	
.LABEL $label$27
	$15 = [0]
	goto $label$5 
	
.LABEL $label$26
	$15 = [7]
	goto $label$5 
	
.LABEL $label$25
	$15 = [7]
	goto $label$5 
	
.LABEL $label$24
	$15 = [1]
	goto $label$5 
	
.LABEL $label$23
	$15 = [7]
	goto $label$5 
	
.LABEL $label$22
	$15 = [7]
	goto $label$5 
	
.LABEL $label$21
	$15 = [3]
	goto $label$5 
	
.LABEL $label$20
	$15 = [4]
	goto $label$5 
	
.LABEL $label$19
	$15 = [15]
	goto $label$5 
	
.LABEL $label$18
	$15 = [7]
	goto $label$5 
	
.LABEL $label$17
	$15 = [7]
	goto $label$5 
	
.LABEL $label$16
	$15 = [8]
	goto $label$5 
	
.LABEL $label$15
	$15 = [13]
	goto $label$5 
	
.LABEL $label$14
	$15 = [9]
	goto $label$5 
	
.LABEL $label$13
	$15 = [10]
	goto $label$5 
	
.LABEL $label$12
	$15 = [11]
	goto $label$5 
	
.LABEL $label$11
	$15 = [18]
	goto $label$5 
	
.LABEL $label$10
	$15 = [19]
	goto $label$5 
	
.LABEL $label$9
	$15 = [20]
	goto $label$5 
	
.LABEL $label$8
	$15 = [20]
	goto $label$5 
	
.LABEL $label$7
	$15 = [24]
	goto $label$5 
	
.LABEL $label$6
	$15 = [25]
	goto $label$5 
	return $15
}

void .FUNC $117 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_64 $4, int_32 $5, int_32 $6, int_64 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	$8 = ($global$0 - [64])
	$global$0 = $8
	if ( CALL is_account($1) ){ goto $label$1 }
	CALL eosio_assert([0], [9832])
	
.LABEL $label$1
	$9 = ($0 + [152])
	$11 = *(($0 + [180]))
	$10 = *(($0 + [176]))
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$3 }
	
.LOOP $label$5:
	$12 = ($11 + [-24])
	$13 = *($12)
	if ( ((int_64)*($13) == (int_64)$7) ){ goto $label$4 }
	$11 = $12
	if ( ((int_32)$10 != (int_32)$12) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$3 }
	if ( ((int_32)*(($13 + [76])) == (int_32)$9) ){ goto $label$2 }
	CALL eosio_assert([0], [9275])
	goto $label$2 
	
.LABEL $label$3
	$13 = [0]
	$12 = CALL db_find_i64(*($9), *(($0 + [160])), (int_64)-4156459970285535232, $7)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$2 }
	$13 = CALL $76($9, $12)
	if ( ((int_32)*($13 + [76]) == (int_32)$9) ){ goto $label$2 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$2
	CALL $162($0, $7)
	$14 = ($0 + [32])
	$11 = *(($0 + [60]))
	$10 = *(($0 + [56]))
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$8 }
	
.LOOP $label$10:
	$12 = ($11 + [-24])
	$9 = *($12)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$9 }
	$11 = $12
	if ( ((int_32)$10 != (int_32)$12) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$8 }
	if ( ((int_32)*($9 + [8]) == (int_32)$14) ){ goto $label$7 }
	CALL eosio_assert([0], [9275])
	goto $label$7 
	
.LABEL $label$8
	$12 = CALL db_find_i64(*($14), *(($0 + [40])), (int_64)-4157082893996903936, $1)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$6 }
	if ( ((int_32)*(CALL $106($14, $12) + [8]) == (int_32)$14) ){ goto $label$7 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$7
	CALL eosio_assert([0], [10499])
	
.LABEL $label$6
	$12 = CALL $1([9134])
	if ( ($12 <= [8]) ){ goto $label$15 }
	CALL eosio_assert([0], [9177])
	goto $label$14 
	
.LABEL $label$15
	if ( ($12 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$15 = (int_64)0
	
.LOOP $label$16:
	$11 = *(($12 + [9133]))
	if ( ((($11 + [-65]) & [255]) <= [26]) ){ goto $label$17 }
	CALL eosio_assert([0], [9222])
	
.LABEL $label$17
	$15 = ((int_64)((int_64)$15 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)56) >> (int_64)56))
	$12 = ($12 + [-1])
	if ( $12 ){ goto $label$16 }
	$16 = *($3 + [8])
	if ( ((int_64)$16 != (int_64)((int_64)((int_64)$15 << (int_64)8) | (int_64)4)) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$16 = *($3 + [8])
	if ( ((int_64)$16 == (int_64)4) ){ goto $label$11 }
	
.LABEL $label$12
	if ( ((int_64)$16 != (int_64)*($13 + [32])) ){ goto $label$18 }
	$16 = *(($3 + [8]))
	*((($8 + [32]) + [8])) = $16
	$15 = *($3)
	*((($8 + [16]) + [8])) = $16
	*($8 + [32]) = $15
	*($8 + [16]) = $15
	CALL $163($0, $1, $4, ($8 + [16]), $5, $6, $7)
	
.LABEL $label$18
	$global$0 = ($8 + [64])
	return 
	
.LABEL $label$11
	$16 = *(($3 + [8]))
	*((($8 + [48]) + [8])) = $16
	$15 = *($3)
	*(($8 + [8])) = $16
	*($8 + [48]) = $15
	*($8) = $15
	CALL $164($0, $1, $4, $8, $5, $6, $7)
	$global$0 = ($8 + [64])
}

void .FUNC $114 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = ($global$0 - [48])
	$2 = $1
	$global$0 = $1
	$3 = CALL action_data_size()
	if ( ($3 <= [513]) ){ goto $label$2 }
	$1 = CALL $2($3)
	goto $label$1 
	
.LABEL $label$2
	$1 = ($1 - (($3 + [15]) & [-16]))
	$global$0 = $1
	
.LABEL $label$1
	CALL read_action_data($1, $3)
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = (int_64)0
	*($0 + [32 align=4]) = (int_64)0
	*(($0 + [40])) = [0]
	*($2 + [12]) = $1
	*($2 + [8]) = $1
	*($2 + [16]) = ($1 + $3)
	*($2 + [24]) = ($2 + [8])
	*($2 + [36]) = ($0 + [8])
	*($2 + [32]) = $0
	*($2 + [40]) = ($0 + [16])
	*($2 + [44]) = ($0 + [32])
	CALL $161(($2 + [32]), ($2 + [24]))
	$global$0 = ($2 + [48])
}

void .FUNC $115 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-4156459970285535232, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*(($4 + [76])) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [9275])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $76($7, CALL $fimport$7(*($7), *($7 + [8]), (int_64)-4156459970285535232, $6))
	if ( ((int_32)*($4 + [76]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [9275])
	
.LABEL $label$2
	*($4 + [84]) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $112 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9349])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9349])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9349])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($0 + [24])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9349])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $113 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8701])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9486])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	*($1 + [16]) = *(*($3 + [4]))
	$6 = *($1)
	$4 = $4
	$3 = ($4 + [-32])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-8])
	CALL $142($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $3, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [16])
}

void .FUNC $110 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9653])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9698])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [9748])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $11($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $11($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [28]))
}

void .FUNC $111 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*(($1 + [76])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9653])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9698])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [9748])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$13 }
	CALL $11(*(($6 + [24])))
	
.LABEL $label$13
	CALL $11($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$15 }
	if ( ((*($9 + [16]) & [1]) == 0) ){ goto $label$16 }
	CALL $11(*(($9 + [24])))
	
.LABEL $label$16
	CALL $11($9)
	
.LABEL $label$15
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [80]))
	$9 = *($1 + [84])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4156459970285535232, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($9)
	
.LABEL $label$17
	$9 = *(($1 + [88]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$20 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4156459970285535231, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$19 }
	
.LABEL $label$20
	CALL db_idx64_remove($9)
	
.LABEL $label$19
	$global$0 = ($2 + [16])
}

void .FUNC $118 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [384])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [376])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [376])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9349])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9349])
	
.LABEL $label$6
	CALL memcpy(($3 + [368]), $5, [8])
	*(($3 + [8])) = $6
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [16])
	*($3 + [24]) = $6
	*($3) = *($3 + [16])
	$2 = CALL $72(($3 + [32]), $0, $1, $3)
	CALL $53($2, *($3 + [376]), *($3 + [368]))
	CALL $74($2)
	$global$0 = ($3 + [384])
}

void .FUNC $119 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [432])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [420]) = $2
	*($3 + [416]) = $2
	*($3 + [424]) = ($2 + $4)
	*($3 + [408]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9349])
	$2 = *($3 + [420])
	
.LABEL $label$5
	CALL memcpy(($3 + [408]), $2, [8])
	*($3 + [420]) = ($2 + [8])
	*($3 + [400]) = [0]
	*($3 + [392]) = (int_64)0
	CALL $120(($3 + [416]), ($3 + [392]))
	$2 = *($3 + [420])
	$4 = (($3 + [416]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9349])
	$2 = *($3 + [420])
	
.LABEL $label$6
	CALL memcpy(($3 + [384]), $2, [8])
	*($3 + [420]) = (*($3 + [420]) + [8])
	*($3 + [376]) = [0]
	*($3 + [368]) = (int_64)0
	CALL $120(($3 + [416]), ($3 + [368]))
	$2 = *($4)
	*((($3 + [16]) + [8])) = $2
	*(($3 + [8])) = $2
	$5 = *($3 + [416])
	*($3) = $5
	*($3 + [16]) = $5
	$2 = CALL $72(($3 + [32]), $0, $1, $3)
	CALL $57($2, *($3 + [408]), ($3 + [392]), *($3 + [384]), ($3 + [368]))
	CALL $74($2)
	if ( (*($3 + [368]) & [1]) ){ goto $label$9 }
	if ( (*($3 + [392]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $11(*(($3 + [376])))
	if ( ((*($3 + [392]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $11(*(($3 + [400])))
	$global$0 = ($3 + [432])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [432])
}

void .FUNC $29 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$1 }
	*(($1 + $2)) = $0
	
.LABEL $label$1
}

int_32 .FUNC $28 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10)
{
	int_32 $11
	$11 = ($10 & [2])
	if ( $11 ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$1 }
	
.LOOP $label$2:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ($5 <= [32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)($10 & [3]) != (int_32)[1]) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$3 }
	
.LOOP $label$4:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ($5 <= [32]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( (($10 & [16]) == 0) ){ goto $label$5 }
	if ( ($10 & [1024]) ){ goto $label$11 }
	if ( ($5 == 0) ){ goto $label$11 }
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$10 }
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_32)$7 != (int_32)[16]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$5 = ($5 + [-1])
	$5 = ( ( ($5 + [-2]) ? $5 : $5 ) ? $5 : ((int_32)$7 == (int_32)[16]) )
	if ( ((int_32)$7 == (int_32)[16]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((int_32)$7 != (int_32)[2]) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [98]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$8 = ($10 & [32])
	if ( $8 ){ goto $label$12 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$12 }
	*(($4 + $5)) = [120]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$12
	if ( ($8 == 0) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [88]
	$5 = ($5 + [1])
	
.LABEL $label$7
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$5 }
	
.LABEL $label$6
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	
.LABEL $label$5
	if ( ($5 == 0) ){ goto $label$13 }
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$13 }
	$5 = ($9 - (((int_32)($10 & [12]) != (int_32)[0]) | $6))
	
.LABEL $label$13
	$8 = ($10 & [1])
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$16 }
	if ( ($6 == 0) ){ goto $label$17 }
	*(($4 + $5)) = [45]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	if ( ($10 & [4]) ){ goto $label$18 }
	if ( (($10 & [8]) == 0) ){ goto $label$16 }
	*(($4 + $5)) = [32]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$18
	*(($4 + $5)) = [43]
	$5 = ($5 + [1])
	
.LABEL $label$16
	$6 = $2
	if ( $8 ){ goto $label$14 }
	
.LABEL $label$15
	$6 = $2
	if ( $11 ){ goto $label$14 }
	$6 = $2
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$14 }
	$10 = ($9 - $5)
	$6 = ($9 + $2)
	$8 = $2
	
.LOOP $label$19:
	CALL void [32]((int_32 $1), (int_32 $8), (int_32 $3), (int_32 $0))
	$8 = ($8 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$19 }
	$6 = ($6 - $5)
	
.LABEL $label$14
	if ( ($5 == 0) ){ goto $label$20 }
	$8 = ($5 + [-1])
	$10 = $6
	
.LOOP $label$21:
	CALL void *(($4 + $8))((int_32 $1), (int_32 $10), (int_32 $3), (int_32 $0))
	$10 = ($10 + [1])
	$8 = ($8 + [-1])
	if ( ((int_32)$8 != (int_32)[-1]) ){ goto $label$21 }
	$6 = ($5 + $6)
	
.LABEL $label$20
	if ( ($11 == 0) ){ goto $label$22 }
	if ( ((uint_32)($6 - $2) >= (uint_32)$9) ){ goto $label$22 }
	$5 = ([0] - $2)
	
.LOOP $label$23:
	CALL void [32]((int_32 $1), (int_32 $6), (int_32 $3), (int_32 $0))
	$6 = ($6 + [1])
	if ( (($5 + $6) <= $9) ){ goto $label$23 }
	$6 = ($9 + $2)
	
.LABEL $label$22
	return $6
}

int_32 .FUNC $21 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [112])
	if ( (int_64)($1 == 0) ){ goto $label$6 }
	if ( ((int_64)*($0 + [120]) >= (int_64)$1) ){ goto $label$5 }
	
.LABEL $label$6
	$2 = CALL $19($0)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($0 + [8])
	$1 = *(($0 + [112]))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$7 }
	$4 = *($0 + [4])
	$1 = (int_64)
	if ( ((int_64)$1($1 - *($0 + [120]))) <= (int_64)(CASTING int_64)(int_32 ($3 - $4))) ){ goto $label$4 }
	
.LABEL $label$7
	*($0 + [104]) = $3
	if ( ($3 == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	*($0 + [104]) = [0]
	return [-1]
	
.LABEL $label$4
	*($0 + [104]) = (($4 + (CASTING uint_32)(uint_64 $1)) + [-1])
	if ( $3 ){ goto $label$2 }
	
.LABEL $label$3
	$3 = *(($0 + [4]))
	goto $label$1 
	
.LABEL $label$2
	$3 = *(($0 + [4]))
	*($0 + [120]) = ((int_64)*($0 + [120]) + (int_64)(CASTING int_64)(int_32 (($3 + [1]) - $3)))
	
.LABEL $label$1
	$0 = ($3 + [-1])
	if ( ((int_32)$2 == (int_32)*($0)) ){ goto $label$8 }
	*($0) = $2
	
.LABEL $label$8
	return $2
}

void .FUNC $20 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	*($0 + [112]) = $1
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	$4 = (CASTING int_64)(int_32 ($2 - $3))
	*($0 + [120]) = $4
	if ( (int_64)($1 == 0) ){ goto $label$1 }
	if ( ((int_64)$4 <= (int_64)$1) ){ goto $label$1 }
	*($0 + [104]) = ($3 + (CASTING uint_32)(uint_64 $1))
	return 
	
.LABEL $label$1
	*($0 + [104]) = $2
}

int_32 .FUNC $23 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [144])
	$global$0 = $3
	*($3 + [4]) = $0
	*($3 + [44]) = $0
	*($3) = [0]
	*($3 + [76]) = [-1]
	*($3 + [8]) = ( [-1] ? ($0 + [2147483647]) : ((int_32)$0 < (int_32)[0]) )
	CALL $20($3, (int_64)0)
	$4 = CALL $22($3, $2, [1], (int_64)2147483648)
	if ( ($1 == 0) ){ goto $label$1 }
	*($1) = ($0 + ((*($3 + [4]) + *($3 + [120])) - *(($3 + [8]))))
	
.LABEL $label$1
	$global$0 = ($3 + [144])
	return (CASTING uint_32)(uint_64 $4)
}

int_64 .FUNC $22 (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	if ( ((uint_32)$1 > (uint_32)[36]) ){ goto $label$17 }
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$17 }
	$4 = ($0 + [104])
	$5 = ($0 + [4])
	
.LOOP $label$18:
	$6 = *($5)
	if ( ($6 <= *($4)) ){ goto $label$20 }
	$6 = CALL $21($0)
	if ( ((uint_32)($6 + [-9]) >= (uint_32)[5]) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	*($5) = ($6 + [1])
	$6 = *($6)
	if ( (($6 + [-9]) <= [5]) ){ goto $label$18 }
	
.LABEL $label$19
	if ( ((int_32)$6 == (int_32)[32]) ){ goto $label$18 }
	$5 = ((int_32)$6 == (int_32)[45])
	if ( $5 ){ goto $label$21 }
	if ( ((int_32)$6 != (int_32)[43]) ){ goto $label$16 }
	
.LABEL $label$21
	$7 = ( [-1] ? [0] : $5 )
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$15 }
	*($5) = ($6 + [1])
	$6 = *($6)
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$17
	*(CALL $6()) = [22]
	return (int_64)0
	
.LABEL $label$16
	$7 = [0]
	if ( ((int_32)($1 | [16]) == (int_32)[16]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$6 = CALL $21($0)
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$13 }
	
.LABEL $label$14
	if ( ((int_32)$6 != (int_32)[48]) ){ goto $label$13 }
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$12 }
	*($5) = ($6 + [1])
	$6 = *($6)
	goto $label$11 
	
.LABEL $label$13
	$1 = ( $1 ? [10] : $1 )
	if ( ((uint_32)$1 > (uint_32)*(($6 + [8273]))) ){ goto $label$10 }
	if ( (*(($0 + [104])) == 0) ){ goto $label$22 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	
.LABEL $label$22
	CALL $20($0, (int_64)0)
	*(CALL $6()) = [22]
	return (int_64)0
	
.LABEL $label$12
	$6 = CALL $21($0)
	
.LABEL $label$11
	if ( ((int_32)($6 | [32]) != (int_32)[120]) ){ goto $label$23 }
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$9 }
	*($5) = ($6 + [1])
	$6 = *($6)
	goto $label$8 
	
.LABEL $label$23
	if ( ($1 == 0) ){ goto $label$7 }
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)[10]) ){ goto $label$6 }
	$8 = (int_64)0
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$2 }
	$5 = [0]
	$9 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$25:
	$6 = ((int_32)$5 * (int_32)[10])
	$1 = *($2)
	if ( ((uint_32)$1 >= (uint_32)*($9)) ){ goto $label$27 }
	*($2) = ($1 + [1])
	$5 = ($6 + $4)
	$6 = *($1)
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 <= (uint_32)[9]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$27
	$5 = ($6 + $4)
	$6 = CALL $21($0)
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$24 }
	
.LABEL $label$26
	if ( ($5 <= [429496729]) ){ goto $label$25 }
	
.LABEL $label$24
	$8 = (CASTING uint_64)(uint_32 $5)
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$2 }
	$1 = [10]
	$11 = (CASTING int_64)(int_32 $4)
	$10 = ((int_64)$8 * (int_64)10)
	if ( ((uint_64)$10 > (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$28:
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$30 }
	*($4) = ($6 + [1])
	$8 = ((int_64)$10 + (int_64)$11)
	$6 = *($6)
	$5 = ($6 + [-48])
	if ( ((uint_32)$5 <= (uint_32)[9]) ){ goto $label$29 }
	goto $label$4 
	
.LABEL $label$30
	$8 = ((int_64)$10 + (int_64)$11)
	$6 = CALL $21($0)
	$5 = ($6 + [-48])
	if ( ((uint_32)$5 > (uint_32)[9]) ){ goto $label$4 }
	
.LABEL $label$29
	if ( ((uint_64)$8 >= (uint_64)(int_64)1844674407370955162) ){ goto $label$4 }
	$11 = (CASTING int_64)(int_32 $5)
	$10 = ((int_64)$8 * (int_64)10)
	if ( ((uint_64)$10 <= (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$28 }
	goto $label$3 
	
.LABEL $label$9
	$6 = CALL $21($0)
	
.LABEL $label$8
	$1 = [16]
	if ( (*(($6 + [8273])) <= [16]) ){ goto $label$6 }
	$6 = *(($0 + [104]))
	if ( ($6 == 0) ){ goto $label$31 }
	*(($5 = ($0 + [4]))) = (*($5) + [-1])
	
.LABEL $label$31
	if ( ($2 == 0) ){ goto $label$5 }
	$8 = (int_64)0
	if ( ($6 == 0) ){ goto $label$1 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	return (int_64)0
	
.LABEL $label$7
	$1 = [8]
	
.LABEL $label$6
	if ( ((($1 + [-1]) & $1) == 0) ){ goto $label$32 }
	$8 = (int_64)0
	$5 = *(($6 + [8273]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$33 }
	$4 = [0]
	$9 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$35:
	$4 = ($5 + ((int_32)$4 * (int_32)$1))
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*($9)) ){ goto $label$37 }
	*($2) = ($6 + [1])
	$6 = *($6)
	$5 = *(($6 + [8273]))
	if ( ((uint_32)$4 <= (uint_32)[119304646]) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$37
	$6 = CALL $21($0)
	$5 = *(($6 + [8273]))
	if ( ((uint_32)$4 > (uint_32)[119304646]) ){ goto $label$34 }
	
.LABEL $label$36
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$35 }
	
.LABEL $label$34
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LABEL $label$33
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	$12 = (CASTING uint_64)(uint_32 $1)
	$13 = ((uint_64)(int_64)-1 / (uint_64)$12)
	if ( ((uint_64)$8 > (uint_64)$13) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$38:
	$11 = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	$10 = ((int_64)$8 * (int_64)$12)
	if ( ((uint_64)$10 > (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$3 }
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$40 }
	*($4) = ($6 + [1])
	$6 = *($6)
	goto $label$39 
	
.LABEL $label$40
	$6 = CALL $21($0)
	
.LABEL $label$39
	$8 = ((int_64)$10 + (int_64)$11)
	$5 = *(($6 + [8273]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	if ( ((uint_64)$8 <= (uint_64)$13) ){ goto $label$38 }
	goto $label$3 
	
.LABEL $label$32
	$9 = *(((uint_32(((int_32)$1 * (int_32)[23]) >> [5]) & [7]) + [8245]))
	$8 = (int_64)0
	$5 = *(($6 + [8273]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$41 }
	$4 = [0]
	$14 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$43:
	$4 = ($5 | ($4 << $9))
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*($14)) ){ goto $label$45 }
	*($2) = ($6 + [1])
	$6 = *($6)
	$5 = *(($6 + [8273]))
	if ( ((uint_32)$4 <= (uint_32)[134217727]) ){ goto $label$44 }
	goto $label$42 
	
.LABEL $label$45
	$6 = CALL $21($0)
	$5 = *(($6 + [8273]))
	if ( ((uint_32)$4 > (uint_32)[134217727]) ){ goto $label$42 }
	
.LABEL $label$44
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$43 }
	
.LABEL $label$42
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LABEL $label$41
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	$11 = (CASTING uint_64)(uint_32 $9)
	$12 = (uint_64)(int_64)-1 >> (uint_64)$11
	if ( (uint_64)($12) <= $8) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$46:
	$8 = ((int_64)$8 << (int_64)$11)
	$10 = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$48 }
	*($4) = ($6 + [1])
	$6 = *($6)
	goto $label$47 
	
.LABEL $label$48
	$6 = CALL $21($0)
	
.LABEL $label$47
	$8 = ((int_64)$8 | (int_64)$10)
	$5 = *(($6 + [8273]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	if ( ((uint_64)$8 <= (uint_64)$12) ){ goto $label$46 }
	goto $label$3 
	
.LABEL $label$5
	CALL $20($0, (int_64)0)
	return (int_64)0
	
.LABEL $label$4
	if ( ((uint_32)$5 > (uint_32)[9]) ){ goto $label$2 }
	
.LABEL $label$3
	if ( ((uint_32)$1 <= (uint_32)*(($6 + [8273]))) ){ goto $label$2 }
	$4 = ($0 + [104])
	$5 = ($0 + [4])
	
.LOOP $label$50:
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*($4)) ){ goto $label$51 }
	*($5) = ($6 + [1])
	if ( ((uint_32)$1 > (uint_32)*((*($6) + [8273]))) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$51
	if ( ((uint_32)$1 > (uint_32)*((CALL $21($0) + [8273]))) ){ goto $label$50 }
	
.LABEL $label$49
	*(CALL $6()) = [34]
	$7 = ( $7 ? [0] : (int_64)(((int_64)$3 & (int_64)1) == 0) )
	$8 = $3
	
.LABEL $label$2
	if ( (*(($0 + [104])) == 0) ){ goto $label$52 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	
.LABEL $label$52
	if ( (uint_64)($8 <= $3) ){ goto $label$53 }
	if ( (CASTING uint_32)(uint_64 ((int_64)$3 & (int_64)1)) ){ goto $label$54 }
	if ( $7 ){ goto $label$54 }
	*(CALL $6()) = [34]
	return ((int_64)$3 + (int_64)-1)
	
.LABEL $label$54
	if ( ((uint_64)$8 <= (uint_64)$3) ){ goto $label$53 }
	*(CALL $6()) = [34]
	return $3
	
.LABEL $label$53
	$10 = (CASTING int_64)(int_32 $7)
	$8 = (int_64))(((int_64)$8 ^ (int_64)$10) - $10)
	
.LABEL $label$1
	return $8
}

int_64 .FUNC $25 (float_64 $0)
{
	return (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $0) & (int_64)9223372036854775807))
}

int_64 .FUNC $24 (float_64 $0, int_32 $1)
{
	if ( ((int_32)$1 < (int_32)[1024]) ){ goto $label$4 }
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	if ( ((int_32)$1 < (int_32)[2047]) ){ goto $label$3 }
	$1 = ($1 + [-2046])
	$1 = ( $1 ? [1023] : ((int_32)$1 < (int_32)[1023]) )
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$1 > (int_32)[-1023]) ){ goto $label$1 }
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	if ( ((int_32)$1 > (int_32)[-1992]) ){ goto $label$2 }
	$1 = ($1 + [1938])
	$1 = ( $1 ? [-1022] : ((int_32)$1 > (int_32)[-1022]) )
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	goto $label$1 
	
.LABEL $label$3
	$1 = ($1 + [-1023])
	goto $label$1 
	
.LABEL $label$2
	$1 = ($1 + [969])
	
.LABEL $label$1
	return ((float_64)$0 * (float_64)(CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($1 + [1023])) << (int_64)52)))
}

void .FUNC $27 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
}

int_32 .FUNC $26 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	float_64 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	float_64 $24
	float_64 $25
	float_64 $26
	int_32 $27
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = ( $0 ? [1] : $1 )
	$7 = [0]
	
.LOOP $label$1:
	$9 = $7
	$10 = ([0] - $9)
	$0 = ($3 + [2])
	$11 = [0]
	$7 = *(($3 + [0]))
	if ( ($7 == 0) ){ goto $label$5 }
	
.LOOP $label$7:
	$12 = ($9 + $11)
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$6 }
	CALL void int_32(($7 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$10 = ($10 + [-1])
	$0 = ($0 + [1])
	$11 = ($11 + [1])
	$7 = *(($3 + $11))
	if ( $7 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$13 = [0]
	
.LOOP $label$9:
	$8 = ($0 + [-1])
	$7 = *($8)
	$14 = ($7 + [-32])
	if ( ((uint_32)$14 > (uint_32)[16]) ){ goto $label$8 }
	$3 = [1]
	goto $label$14 
	
.LABEL $label$14
	$3 = [8]
	goto $label$10 
	
.LABEL $label$13
	$3 = [16]
	goto $label$10 
	
.LABEL $label$12
	$3 = [4]
	goto $label$10 
	
.LABEL $label$11
	$3 = [2]
	
.LABEL $label$10
	$0 = ($0 + [1])
	$13 = ($13 | $3)
	goto $label$9 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$15 }
	$3 = [0]
	
.LOOP $label$16:
	$3 = ((((int_32)$3 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$16 }
	$14 = [0]
	if ( ((int_32)($7 & [255]) != (int_32)[46]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$15
	$3 = [0]
	if ( ((int_32)$7 != (int_32)[42]) ){ goto $label$17 }
	$7 = *($4)
	$13 = ( ($13 | [2]) ? $13 : ((int_32)$7 < (int_32)[0]) )
	$3 = int_32($7 >> [31])
	$3 = ((int_32)($7 + $3) ^ (int_32)$3)
	$4 = ($4 + [4])
	$14 = [0]
	$7 = *($0)
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$17
	$0 = $8
	$14 = [0]
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$0 = ($9 + $11)
	CALL void [0]((int_32 $1), (int_32 ( $0 ? ($2 + [-1]) : ($0 <= $2) )), (int_32 $2), (int_32 $6))
	$global$0 = ($5 + [32])
	return $0
	
.LABEL $label$4
	$8 = $0
	goto $label$2 
	
.LABEL $label$3
	$8 = ($0 + [1])
	$13 = ($13 | [1024])
	$7 = *($0 + [1])
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$18 }
	$14 = [0]
	
.LOOP $label$19:
	$14 = ((((int_32)$14 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$19 }
	$8 = $0
	goto $label$2 
	
.LABEL $label$18
	if ( ((int_32)($7 & [255]) != (int_32)[42]) ){ goto $label$2 }
	$7 = *($4)
	$14 = ( $7 ? [0] : ((int_32)$7 > (int_32)[0]) )
	$8 = ($0 + [2])
	$4 = ($4 + [4])
	$7 = *($0 + [2])
	
.LABEL $label$2
	$0 = (rotl((int_32) (int_32(($7 << [24]) >> [24]) + [-104])))
	if ( ((uint_32)$0 > (uint_32)[31]) ){ goto $label$23 }
	goto $label$26 
	
.LABEL $label$27
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	goto $label$23 
	
.LABEL $label$26
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[104]) ){ goto $label$22 }
	$8 = ($8 + [2])
	$13 = ($13 | [192])
	goto $label$23 
	
.LABEL $label$25
	$8 = ($8 + [1])
	$13 = ($13 | [512])
	goto $label$23 
	
.LABEL $label$24
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[108]) ){ goto $label$21 }
	$8 = ($8 + [2])
	$13 = ($13 | [768])
	
.LABEL $label$23
	$0 = *($8)
	goto $label$20 
	
.LABEL $label$22
	$8 = ($8 + [1])
	$13 = ($13 | [128])
	goto $label$20 
	
.LABEL $label$21
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	
.LABEL $label$20
	$15 = int_32(($0 << [24]) >> [24])
	$7 = ($15 + [-37])
	if ( ((uint_32)$7 > (uint_32)[83]) ){ goto $label$51 }
	goto $label$55 
	
.LABEL $label$62
	$11 = ($0 & [255])
	$7 = ($11 + [-88])
	if ( ((uint_32)$7 > (uint_32)[32]) ){ goto $label$60 }
	$0 = [8]
	$10 = [16]
	goto $label$59 
	
.LABEL $label$63
	$0 = [2]
	goto $label$58 
	
.LABEL $label$61
	$18 = ((float_64)$17 < (float_64)(float_64)0)
	$16 = (($4 + [7]) & [-8])
	$17 = *($16)
	$17 = ( (float_64))((float_64)0 - $17) ? $17 : $18 )
	$0 = ( $14 ? [6] : ($13 & [1024]) )
	if ( ($0 <= [10]) ){ goto $label$48 }
	$14 = [1]
	
.LOOP $label$65:
	*((($5 + ($7 = $14)) + [-1])) = [48]
	$14 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$64 }
	if ( ((uint_32)$0 > (uint_32)[9]) ){ goto $label$65 }
	
.LABEL $label$64
	$19 = ($7 <= [32])
	$14 = ($14 + [-1])
	goto $label$47 
	
.LABEL $label$60
	$13 = ($13 & [-17])
	$10 = [10]
	
.LABEL $label$59
	$13 = ( ($13 | [32]) ? $13 : ((int_32)$11 == (int_32)[88]) )
	if ( ((int_32)$11 == (int_32)[100]) ){ goto $label$57 }
	$0 = $10
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$56 }
	
.LABEL $label$58
	$13 = ($13 & [-13])
	goto $label$56 
	
.LABEL $label$57
	$0 = $10
	
.LABEL $label$56
	$7 = ( ($13 & [-2]) ? $13 : ($13 & [1024]) )
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$70 }
	if ( ((int_32)$11 != (int_32)[100]) ){ goto $label$69 }
	
.LABEL $label$70
	if ( ($7 & [512]) ){ goto $label$68 }
	if ( ($7 & [256]) ){ goto $label$67 }
	if ( ($7 & [64]) ){ goto $label$46 }
	$11 = *($4)
	$15 = ( int_32(($11 << [16]) >> [16]) ? $11 : ($7 & [128]) )
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$69
	if ( ($7 & [512]) ){ goto $label$66 }
	if ( ($7 & [256]) ){ goto $label$45 }
	if ( ($7 & [64]) ){ goto $label$44 }
	$11 = *($4)
	$11 = ( ($11 & [65535]) ? $11 : ($7 & [128]) )
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( ($11 == 0) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$68
	$9 = (($4 + [7]) & [-8])
	$20 = *($9)
	$11 = ((int_64)$20 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$72 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$71 }
	
.LABEL $label$72
	$21 = (CASTING uint_64)(uint_32 $0)
	$22 = (int_64)$20 >> (int_64)63
	$22 = ((int_64)((int_64)$20 + (int_64)$22)) ^ (int_64)$22)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$73:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$71 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$73 }
	
.LABEL $label$71
	$4 = ($9 + [8])
	$7 = CALL $28($6, $1, $12, $2, $5, $11, (CASTING uint_32)(uint_64 (uint_64)$20 >> (uint_64)(int_64)63)), $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$67
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$75 }
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$74 }
	
.LABEL $label$75
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$76:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$74 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$76 }
	
.LABEL $label$74
	$4 = ($4 + [4])
	$7 = CALL $28($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$66
	$9 = (($4 + [7]) & [-8])
	$22 = *($9)
	$11 = ((int_64)$22 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$78 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$77 }
	
.LABEL $label$78
	$21 = (CASTING uint_64)(uint_32 $0)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$79:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$77 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$79 }
	
.LABEL $label$77
	$4 = ($9 + [8])
	$7 = CALL $28($6, $1, $12, $2, $5, $11, [0], $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$55
	CALL void [37]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	goto $label$50 
	
.LABEL $label$54
	$10 = [1]
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$80 }
	$10 = [2]
	if ( ($3 <= [2]) ){ goto $label$80 }
	$0 = ($3 + [-1])
	$10 = ($3 + [1])
	
.LOOP $label$81:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$81 }
	$12 = ((($3 + $9) + $11) + [-1])
	
.LABEL $label$80
	CALL void *($4)((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$7 = ($12 + [1])
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$49 }
	if ( ((uint_32)$10 >= (uint_32)$3) ){ goto $label$49 }
	$0 = ($3 - $10)
	$11 = ($7 + $3)
	
.LOOP $label$82:
	CALL void [32]((int_32 $1), (int_32 $7), (int_32 $2), (int_32 $6))
	$7 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$82 }
	$7 = ($11 - $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$53
	$0 = *($4)
	$0 = ($13 | [33])
	$10 = ( $0 ? ($0 & [-17]) : $0 )
	if ( $0 ){ goto $label$84 }
	$11 = [0]
	if ( ($10 & [1024]) ){ goto $label$83 }
	
.LABEL $label$84
	$11 = [0]
	
.LOOP $label$85:
	$7 = ($0 & [15])
	*(($5 + $11)) = (( [48] ? [55] : ($7 <= [10]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$83 }
	$7 = ((uint_32)$0 > (uint_32)[15])
	$0 = uint_32($0 >> [4])
	if ( $7 ){ goto $label$85 }
	
.LABEL $label$83
	$4 = ($4 + [4])
	$7 = CALL $28($6, $1, $12, $2, $5, $11, [0], [16], $14, [8], $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$52
	$10 = *($4)
	$0 = ($10 + [-1])
	
.LOOP $label$86:
	$0 = ($0 + [1])
	if ( *($0) ){ goto $label$86 }
	$15 = ($13 & [1024])
	$0 = ($0 - $10)
	$7 = ( ( $0 ? $14 : ($0 <= $14) ) ? $0 : uint_32($15 >> [10]) )
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$39 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$40 }
	$0 = (($9 + ($3 - $7)) + $11)
	
.LOOP $label$87:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$7 = ($7 + [1])
	if ( ($7 <= $3) ){ goto $label$87 }
	$7 = ($3 + [1])
	$12 = $0
	$0 = *($10)
	if ( $0 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$51
	CALL void $15((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	
.LABEL $label$50
	$7 = ($12 + [1])
	
.LABEL $label$49
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$48
	$19 = [1]
	$14 = [0]
	
.LABEL $label$47
	$24 = *((($0 << [3]) + [8544]))
	$25 = ((float_64)(float_64))($17 - (Rounds 0)($17)) * (float_64)$24
	$26 = (float_64)
	$7 = ((float_64)$26($25) - (Rounds 0)($25))) > (float_64)(float_64)0.5)
	if ( (((float_64)$25 < (float_64)(float_64)4294967296) & ((float_64)$25 >= (float_64)(float_64)0)) ){ goto $label$89 }
	$4 = [0]
	goto $label$88 
	
.LABEL $label$89
	$4 = (CASTING uint_32)(float_64 $25)
	
.LABEL $label$88
	$7 = ((int_32)$7 ^ (int_32)[1])
	if ( ((float_64)(float_64)|$17| < (float_64)(float_64)2147483648) ){ goto $label$91 }
	$15 = [-2147483648]
	if ( ($7 == 0) ){ goto $label$90 }
	goto $label$36 
	
.LABEL $label$91
	$15 = (CASTING int_32)(float_64 $17)
	if ( $7 ){ goto $label$36 }
	
.LABEL $label$90
	$4 = ($4 + [1])
	if ( ((int_32)((float_64)$24 <= (float_64)(CASTING float_64)(uint_32 $4)) ^ (int_32)[1]) ){ goto $label$35 }
	$15 = ($15 + [1])
	$4 = [0]
	goto $label$35 
	
.LABEL $label$46
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( ($15 == 0) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$45
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$93 }
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$92 }
	
.LABEL $label$93
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$94:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$92 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$94 }
	
.LABEL $label$92
	$4 = ($4 + [4])
	$7 = CALL $28($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$44
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$42 }
	
.LABEL $label$43
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$41 }
	
.LABEL $label$42
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$95:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$41 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$95 }
	
.LABEL $label$41
	$4 = ($4 + [4])
	$7 = CALL $28($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$40
	$7 = ($7 + [1])
	
.LABEL $label$39
	$0 = *($10)
	if ( ($0 == 0) ){ goto $label$37 }
	
.LABEL $label$38
	if ( ($15 == 0) ){ goto $label$96 }
	$11 = ($10 + [1])
	
.LOOP $label$97:
	if ( ($14 == 0) ){ goto $label$37 }
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$14 = ($14 + [-1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$97 }
	goto $label$37 
	
.LABEL $label$96
	$11 = ($10 + [1])
	
.LOOP $label$98:
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$98 }
	
.LABEL $label$37
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$100 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$99 }
	$0 = ($3 - $7)
	$11 = ($12 + $3)
	
.LOOP $label$101:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$101 }
	$7 = ($11 - $7)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$100
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$99
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$36
	if ( ((float_64)$26 != (float_64)(float_64)0.5) ){ goto $label$35 }
	$4 = ((($4 & [1]) | ($4 == 0)) + $4)
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$35
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	
.LABEL $label$34
	if ( ($0 == 0) ){ goto $label$105 }
	$7 = [32]
	if ( ($19 == 0) ){ goto $label$102 }
	
.LOOP $label$107:
	$7 = ((uint_32)$4 / (uint_32)[10])
	*(($5 + $14)) = (($4 - ((int_32)$7 * (int_32)[10])) | [48])
	$0 = ($0 + [-1])
	$14 = ($14 + [1])
	if ( ($4 <= [10]) ){ goto $label$106 }
	$4 = $7
	if ( ($14 <= [32]) ){ goto $label$107 }
	
.LABEL $label$106
	$4 = ($14 <= [32])
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$108 }
	if ( ($0 == 0) ){ goto $label$108 }
	$19 = ($0 + [-1])
	$27 = ($5 + $14)
	$0 = [0]
	
.LOOP $label$110:
	*(($27 + $0)) = [48]
	$7 = ($0 + [1])
	$4 = (($14 + $0) + [1])
	if ( ((int_32)$19 == (int_32)$0) ){ goto $label$109 }
	$0 = $7
	if ( ($4 <= [32]) ){ goto $label$110 }
	
.LABEL $label$109
	$4 = ($4 <= [32])
	$14 = ($14 + $7)
	
.LABEL $label$108
	if ( ($4 == 0) ){ goto $label$103 }
	*(($5 + $14)) = [46]
	$7 = [32]
	$14 = ($14 + [1])
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$105
	$17 = (float_64)
	if ( ((int_32)((float_64)$17($17 - (CASTING float_64)(int_32 $15))) > (float_64)(float_64)0.5) ^ (int_32)[1]) ){ goto $label$111 }
	$15 = ($15 + [1])
	$7 = [32]
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$111
	$15 = ($15 + ($15 & ((float_64)$17 == (float_64)(float_64)0.5)))
	$7 = [32]
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$102 }
	
.LABEL $label$104
	$7 = $14
	
.LOOP $label$112:
	$0 = ((int_32)$15 / (int_32)[10])
	*(($5 + $7)) = (($15 - ((int_32)$0 * (int_32)[10])) + [48])
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$102 }
	$14 = ($15 + [9])
	$15 = $0
	if ( ((uint_32)$14 > (uint_32)[18]) ){ goto $label$112 }
	goto $label$102 
	
.LABEL $label$103
	$7 = $14
	
.LABEL $label$102
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ((int_32)($13 & [3]) != (int_32)[1]) ){ goto $label$113 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$113 }
	
.LOOP $label$114:
	*(($5 + $7)) = [48]
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ($7 <= $3) ){ goto $label$114 }
	
.LABEL $label$113
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$115 }
	$7 = ($3 - (((int_32)($13 & [12]) != (int_32)[0]) | $18))
	
.LABEL $label$115
	$0 = ($13 & [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$116 }
	if ( ((int_32)$18 ^ (int_32)[1]) ){ goto $label$118 }
	*(($5 + $7)) = [45]
	goto $label$117 
	
.LABEL $label$118
	if ( ($13 & [4]) ){ goto $label$119 }
	if ( (($13 & [8]) == 0) ){ goto $label$116 }
	*(($5 + $7)) = [32]
	goto $label$117 
	
.LABEL $label$119
	*(($5 + $7)) = [43]
	
.LABEL $label$117
	$7 = ($7 + [1])
	
.LABEL $label$116
	$14 = ($13 & [2])
	if ( $0 ){ goto $label$120 }
	if ( $14 ){ goto $label$120 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$120 }
	$0 = ($3 - $7)
	
.LOOP $label$121:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$121 }
	$12 = (($9 + ($3 - $7)) + $11)
	
.LABEL $label$120
	if ( ($7 == 0) ){ goto $label$122 }
	$0 = ($7 + [-1])
	$13 = $12
	
.LOOP $label$123:
	CALL void *(($5 + $0))((int_32 $1), (int_32 $13), (int_32 $2), (int_32 $6))
	$13 = ($13 + [1])
	$0 = ($0 + [-1])
	if ( ((int_32)$0 != (int_32)[-1]) ){ goto $label$123 }
	$12 = ($12 + $7)
	
.LABEL $label$122
	if ( ($14 == 0) ){ goto $label$31 }
	if ( ((uint_32)(($12 - $9) - $11) >= (uint_32)$3) ){ goto $label$32 }
	$0 = ($12 + $10)
	
.LOOP $label$124:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [1])
	if ( ($0 <= $3) ){ goto $label$124 }
	$7 = (($3 + $9) + $11)
	
.LABEL $label$33
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$32
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$31
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$30
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$28 }
	
.LABEL $label$29
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$125:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$28 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$125 }
	
.LABEL $label$28
	$4 = ($4 + [4])
	$7 = CALL $28($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	$14
	[9]
	$0
	$7
	return $7
}

void .FUNC $101 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9848])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $9([96])) + [16]) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [48 align=4]) = (int_64)0
	*($3 + [56]) = [0]
	*($3 + [64]) = (int_64)0
	*($3 + [80]) = $1
	CALL $151(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [84])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $152(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($3 + [56])))
	
.LABEL $label$5
	CALL $11($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $100 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9848])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $9([96])) + [16]) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [48 align=4]) = (int_64)0
	*($3 + [56]) = [0]
	*($3 + [64]) = (int_64)0
	*($3 + [80]) = $1
	CALL $155(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [84])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $152(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($3 + [56])))
	
.LABEL $label$5
	CALL $11($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $103 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8701])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9486])
	
.LABEL $label$2
	*($1 + [8]) = (int_64)0
	*($5 + [24]) = *($1 + [72])
	$6 = *($1 + [48])
	$7 = ( *(($1 + [52])) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$6 = ($7 + [64])
	$8 = (CASTING uint_64)(uint_32 $7)
	$9 = *($1)
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	if ( ($6 <= [513]) ){ goto $label$5 }
	$4 = CALL $2($6)
	goto $label$4 
	
.LABEL $label$5
	$4 = ($4 - (($6 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $6)
	CALL $157(($5 + [8]), $1)
	CALL db_update_i64(*($1 + [84]), $2, $4, $6)
	if ( ($6 <= [513]) ){ goto $label$6 }
	CALL $3($4)
	
.LABEL $label$6
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($5 + [40]) = *(($1 + [72]))
	if ( (CALL $17(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$8 }
	$1 = ($1 + [88])
	$6 = *($1)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$9 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4154952186784120832, ($5 + [32]), $9)
	*($1) = $6
	
.LABEL $label$9
	CALL db_idx64_update($6, $2, ($5 + [40]))
	
.LABEL $label$8
	$global$0 = ($5 + [48])
}

void .FUNC $102 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9349])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9349])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $120(*($1), ($4 + [16]))
}

void .FUNC $105 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [32])
	$global$0 = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9848])
	
.LABEL $label$1
	*(($5 = CALL $9([24])) + [8]) = $1
	*($5) = *(*($3))
	CALL memcpy(($4 + [16]), $5, [8])
	$6 = *($5)
	$7 = CALL db_store_i64(*($1 + [8]), (int_64)-4157082893996903936, $2, $6, ($4 + [16]), [8])
	*($5 + [12]) = $7
	if ( (uint_64)($6 <= *($1 + [16])) ){ goto $label$2 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($4 + [8]) = $5
	$6 = *($5)
	*($4 + [16]) = $6
	*($4 + [4]) = $7
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = $6
	*($3 + [16]) = $7
	*($4 + [8]) = [0]
	*($3) = $5
	*($8) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $160(($1 + [24]), ($4 + [8]), ($4 + [16]), ($4 + [4]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$1 = *($4 + [8])
	*($4 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $11($1)
	
.LABEL $label$5
	$global$0 = ($4 + [32])
}

void .FUNC $104 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8701])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9486])
	
.LABEL $label$2
	*($1 + [24]) = (int_64)0
	*($5 + [24]) = *($1 + [72])
	$6 = *($1 + [48])
	$7 = ( *(($1 + [52])) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$6 = ($7 + [64])
	$8 = (CASTING uint_64)(uint_32 $7)
	$9 = *($1)
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	if ( ($6 <= [513]) ){ goto $label$5 }
	$4 = CALL $2($6)
	goto $label$4 
	
.LABEL $label$5
	$4 = ($4 - (($6 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $6)
	CALL $157(($5 + [8]), $1)
	CALL db_update_i64(*($1 + [84]), $2, $4, $6)
	if ( ($6 <= [513]) ){ goto $label$6 }
	CALL $3($4)
	
.LABEL $label$6
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($5 + [40]) = *(($1 + [72]))
	if ( (CALL $17(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$8 }
	$1 = ($1 + [88])
	$6 = *($1)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$9 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4154952186784120832, ($5 + [32]), $9)
	*($1) = $6
	
.LABEL $label$9
	CALL db_idx64_update($6, $2, ($5 + [40]))
	
.LABEL $label$8
	$global$0 = ($5 + [48])
}

void .FUNC $107 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [8]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9653])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9698])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [9748])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $11($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $11($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [12]))
}

int_32 .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9326])
	
.LABEL $label$5
	$2 = CALL $2($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $9([24])) + [8]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9349])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($5 + [12]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$4 = *($8)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($4 + [8]) = $7
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($8) = ($4 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $160(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $3($2)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL $11($1)
	
.LABEL $label$11
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $109 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8701])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9486])
	
.LABEL $label$2
	*($1 + [16]) = *(*($3))
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $142($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $4, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [16])
}

void .FUNC $108 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8701])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [9486])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $142($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $4, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [16])
}

int_32 .FUNC $38 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$3 }
	$5 = uint_32($3 >> [1])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = *($0 + [4])
	if ( ($5 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ($2 == 0) ){ goto $label$4 }
	if ( $4 ){ goto $label$6 }
	$6 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$6
	$6 = *($0 + [8])
	
.LABEL $label$5
	$2 = ( $4 ? $2 : ($4 <= $2) )
	$4 = ($5 - $1)
	$4 = ($4 - $2)
	if ( ($4 == 0) ){ goto $label$7 }
	$1 = ($6 + $1)
	CALL memmove($1, ($1 + $2), $4)
	$3 = *($0)
	
.LABEL $label$7
	$2 = ($5 - $2)
	if ( ($3 & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($6 + $2)) = [0]
	
.LABEL $label$4
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $1($1)
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$5 }
	$3 = uint_32($3 >> [1])
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$3 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( $4 ){ goto $label$6 }
	$0 = ($0 + [1])
	$5 = ((uint_32)$3 > (uint_32)$2)
	$4 = ( $2 ? $3 : $5 )
	if ( ($4 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$6
	$0 = *($0 + [8])
	$5 = ((uint_32)$3 > (uint_32)$2)
	$4 = ( $2 ? $3 : $5 )
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$0 = CALL $17($0, $1, $4)
	if ( ($0 == 0) ){ goto $label$1 }
	return $0
	
.LABEL $label$1
	(unreachable)
	return ( [-1] ? $5 : ($3 <= $2) )
}

void .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $9(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $11($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

int_32 .FUNC $37 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $35($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

int_32 .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $35($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC $35 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $9($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $11($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $9($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $33 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$6 = ($5 & [1])
	$5 = *($1)
	$5 = ( *($1 + [4]) ? uint_32($5 >> [1]) : $6 )
	if ( ($5 <= $2) ){ goto $label$1 }
	$5 = ($5 - $2)
	$3 = ( $5 ? $3 : ($5 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$3 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$2 }
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$3
	$8 = (($3 + [16]) & [-16])
	$5 = CALL $9($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $3
	
.LABEL $label$2
	CALL memcpy($5, (( $7 ? ($1 + [1]) : $6 ) + $2), $3)
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $30 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [12]) = $3
	$3 = CALL $26([2], $0, $1, $2, $3)
	$global$0 = ($4 + [16])
	return $3
}

void .FUNC $31 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $190 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $120(*($1), (*($0) + [36]))
	$0 = *($0)
	$3 = ($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9349])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [56])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9349])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [64])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9349])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	*($2 + [8]) = $0
	CALL $191(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $191 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = (*($0) + [72])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9349])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [80])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9349])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($4 + [88])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9349])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}