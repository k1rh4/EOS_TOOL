(data (i32.const 8220) "failed to allocate pages\00")
(data (i32.const 8245) "no frozen scenery\00")
(data (i32.const 8263) "no frozen merchant\00")
(data (i32.const 8282) "no this merchant!!!\00")
(data (i32.const 8302) "no frozen user\00")
(data (i32.const 8317) "cannot create objects in table of another contract\00")
(data (i32.const 8368) "next primary key in table is at autoincrement limit\00")
(data (i32.const 8420) "error reading iterator\00")
(data (i32.const 8443) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 8497) "cannot decrement iterator at beginning of table\00")
(data (i32.const 8545) "write\00")
(data (i32.const 8551) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 8602) "cannot pass end iterator to erase\00")
(data (i32.const 8636) "cannot increment end iterator\00")
(data (i32.const 8666) "object passed to erase is not in multi_index\00")
(data (i32.const 8711) "cannot erase objects in table of another contract\00")
(data (i32.const 8761) "attempt to remove object that was not in multi_index\00")
(data (i32.const 8814) "cannot pass end iterator to modify\00")
(data (i32.const 8849) "object passed to modify is not in multi_index\00")
(data (i32.const 8895) "cannot modify objects in table of another contract\00")
(data (i32.const 8946) "updater cannot change primary key when modifying an object\00")
(data (i32.const 9005) "attempt to add asset with different symbol\00")
(data (i32.const 9048) "addition underflow\00")
(data (i32.const 9067) "addition overflow\00")
(data (i32.const 9085) "attempt to subtract asset with different symbol\00")
(data (i32.const 9133) "subtraction underflow\00")
(data (i32.const 9155) "subtraction overflow\00")
(data (i32.const 9176) "read\00")
(data (i32.const 9181) "get\00")
(data (i32.const 0) "\e8#\00\00")
(import "env" "abort" (func $fimport$0))
(import "env" "eosio_assert" (func $fimport$1 (param i32 i32)))
(import "env" "memset" (func $fimport$2 (param i32 i32 i32) (result i32)))
(import "env" "memcpy" (func $fimport$3 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$4 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$5 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$6 (param i32 i32)))
(import "env" "__multf3" (func $fimport$7 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$8 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$9 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$10 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$11 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$12 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$13 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$14 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$15 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$16 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$17 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$18 (param i64 i64) (result f32)))
(import "env" "prints_l" (func $fimport$19 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$20 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$21 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$22 (param i64 i64) (result i32)))
(import "env" "action_data_size" (func $fimport$23 (result i32)))
(import "env" "read_action_data" (func $fimport$24 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$25 (param i64)))
(import "env" "current_receiver" (func $fimport$26 (result i64)))
(import "env" "db_find_i64" (func $fimport$27 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$28 (param i32 i32) (result i32)))
(import "env" "eosio_exit" (func $fimport$29 (param i32)))
(import "env" "eosio_assert_code" (func $fimport$30 (param i32 i64)))
(import "env" "db_lowerbound_i64" (func $fimport$31 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_store_i64" (func $fimport$32 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$33 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$34 (param i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$35 (param i32 i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$36 (param i32)))
(import "env" "db_update_i64" (func $fimport$37 (param i32 i64 i32 i32)))
(export "apply" (func $66))
(table $0 11 11 anyfunc)
(elem (i32.const 1) $24 $26 $28 $30 $31 $33 $35 $36 $37 $39)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 9185))
(global $global$2 i32 (i32.const 9185))


void .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $7($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $21($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $9($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8420])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $7([56])) + [32]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [40]) = $0
	CALL $93(($3 + [32]), $5)
	*($5 + [44]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $58(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $91 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [44]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [8497])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-6497942746098040832)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [8443])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [8443])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $90(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8545])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8545])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8545])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8545])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [32]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8545])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, ($2 + [8]), [8])
	*(($1 = ($0 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9176])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9176])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9176])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9176])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9176])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [32])) = *($2 + [8])
	*(($1 = ($0 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $38 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [192])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [20])) = $2
	*(($4 + [24])) = ($2 + $7)
	*(($4 + [40])) = $0
	*(($4 + [48])) = (int_64)-1
	*(($4 + [56])) = (int_64)0
	*(($4 + [64])) = [0]
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $2
	*($4 + [32]) = $0
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*(($4 + [160])) = $0
	*(($4 + [168])) = (int_64)-1
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*($4 + [152]) = $0
	$3 = ($4 + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	CALL $42($4)
	$global$0 = ($4 + [192])
	return [1]
}

void .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *(($6 + [88]))
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = ($6 + [72])
	$9 = CALL db_lowerbound_i64(*($8), *(($6 + [80])), (int_64)-7877210700211290112, (int_64)0)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $51($8, $9)
	*($3 + [4]) = [0]
	*($3) = $8
	$7 = *(*(CALL $86($3) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [88])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [8368])
	$7 = *(($6 + [88]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [88])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	CALL $17(($1 + [8]), *($5 + [4]))
	$6 = *($5 + [8])
	*($1 + [24]) = *($6)
	*(($1 + [32])) = *(($6 + [8]))
	$5 = *($5 + [12])
	*($1 + [40]) = *($5)
	*(($1 + [48])) = *(($5 + [8]))
	$5 = *($1 + [8])
	$6 = ( *(($1 + [12])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($6 + [40])
	$7 = (CASTING uint_64)(uint_32 $6)
	
.LOOP $label$5:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$5 }
	if ( ($5 <= [513]) ){ goto $label$7 }
	$6 = CALL $1($5)
	goto $label$6 
	
.LABEL $label$7
	$6 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$6
	*($3 + [4]) = $6
	*($3) = $6
	*($3 + [8]) = ($6 + $5)
	CALL $87($3, $1)
	$7 = *($1)
	*($1 + [60]) = CALL db_store_i64(*($4 + [8]), (int_64)-7877210700211290112, *(*($0 + [8])), $7, $6, $5)
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$10 }
	if ( ((uint_64)$7 >= (uint_64)*($4 + [16])) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $2($6)
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$8 }
	
.LABEL $label$9
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [16])
}

void .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$2 = ($global$0 - [160])
	$global$0 = $2
	$3 = CALL $16(($2 + [64]), $1)
	*(($4 = (($2 + [48]) + [8]))) = *(($1 + [24]))
	*(($5 = (($2 + [32]) + [8]))) = *(($1 + [40]))
	*($2 + [48]) = *($1 + [16])
	*($2 + [32]) = *($1 + [32])
	*((($2 + [96]) + [8])) = *($5)
	*((($2 + [80]) + [8])) = *($4)
	*($2 + [96]) = *($2 + [32])
	*($2 + [80]) = *($2 + [48])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*($0) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	$4 = CALL $16(($2 + [144]), $3)
	$6 = *((($2 + [80]) + [8]))
	*((($2 + [128]) + [8])) = $6
	$7 = *((($2 + [96]) + [8]))
	*((($2 + [112]) + [8])) = $7
	*((($2 + [16]) + [8])) = $6
	*(($2 + [8])) = $7
	$6 = *($2 + [80])
	*($2 + [128]) = $6
	$7 = *($2 + [96])
	*($2 + [112]) = $7
	*($2 + [16]) = $6
	*($2) = $7
	CALL void $0((int_32 $4), (int_32 ($2 + [16])), (int_32 $2), (int_32 $1))
	if ( (*($2 + [144]) & [1]) ){ goto $label$4 }
	if ( (*($3) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($4 + [8]))
	if ( ((*($3) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($3 + [8]))
	$global$0 = ($2 + [160])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [160])
}

void .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *(($6 + [48]))
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = ($6 + [32])
	$9 = CALL db_lowerbound_i64(*($8), *(($6 + [40])), (int_64)-3020384829779738624, (int_64)0)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $45($8, $9)
	*($3 + [12]) = [0]
	*($3 + [8]) = $8
	$7 = *(*(CALL $89(($3 + [8])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [48])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [8368])
	$7 = *(($6 + [48]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [48])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	$6 = $2
	$2 = ($6 + [-16])
	$global$0 = $2
	CALL memcpy($2, $1, [8])
	CALL memcpy(($6 + [-8]), ($1 + [8]), [8])
	$7 = *($1)
	*($1 + [20]) = CALL db_store_i64(*($4 + [8]), (int_64)-3020384829779738624, *(*($0 + [8])), $7, $2, [16])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = ($3 + [16])
}

int_32 .FUNC $42 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $65(($0 + [176]))
	$1 = *(($0 + [136]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [140])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL $9($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [136]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$1
	$1 = *(($0 + [96]))
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [100])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($4 + [16])))
	
.LABEL $label$11
	CALL $9($4)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$9 }
	$3 = *(($0 + [96]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$6
	$1 = *(($0 + [56]))
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [60])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$16 }
	CALL $9($4)
	
.LABEL $label$16
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$15 }
	$3 = *(($0 + [56]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$12
	return $0
}

int_32 .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9176])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9176])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9176])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9176])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [24])) = *($2 + [8])
	*($3) = (*($3) + [8])
	$0 = CALL $71($0, ($1 + [32]))
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $40 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [208])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [200]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9176])
	
.LABEL $label$5
	CALL memcpy(($4 + [200]), $2, [8])
	*(($4 + [28])) = ($2 + [8])
	*(($4 + [32])) = $3
	*(($4 + [48])) = $0
	*(($4 + [56])) = (int_64)-1
	*(($4 + [64])) = (int_64)0
	*(($4 + [72])) = [0]
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [24]) = $2
	*($4 + [40]) = $0
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*(($4 + [168])) = $0
	*(($4 + [176])) = (int_64)-1
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*($4 + [160]) = $0
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *($4 + [200])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $2($2)
	
.LABEL $label$7
	CALL $42(($4 + [8]))
	$global$0 = ($4 + [208])
	return [1]
}

void .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $71(*($1), *($0))
	$3 = *($0)
	$4 = ($3 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9176])
	$5 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $5, [8])
	$4 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9176])
	$4 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $4, [8])
	*(($3 + [24])) = *($2 + [8])
	*($5) = (*($5) + [8])
	$4 = ($3 + [32])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9176])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $5, [8])
	$1 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $1
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $1) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9176])
	$1 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $1, [8])
	*(($3 + [40])) = *($2 + [8])
	*($5) = (*($5) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8666])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [8711])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [8761])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [20]))
}

int_32 .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8420])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([32])) + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9176])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	$7 = ($5 + [8])
	$8 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [9176])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $44(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $2($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $9($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $44 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $21($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $8 (int_32 $0)
{
	return CALL $7($0)
}

void .FUNC $9 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $2($0)
	
.LABEL $label$1
}

int_32 .FUNC $6 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $4())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $5($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $7 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $1($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $1($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $4 ()
{
	return [8208]
}

int_32 .FUNC $5 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $1($1)
	
.LABEL $label$2
	*(CALL $4()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $1(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $2($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC $2 (int_32 $0)
{
}

void .FUNC $3 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

void .FUNC $0 ()
{
	CALL $3()
}

int_32 .FUNC $1 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8220])
	return $3
	
.LABEL $label$1
	return $3
}

void .FUNC $14 (int_32 $0, int_32 $1)
{
	CALL $13($0, $1)
}

void .FUNC $15 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $16 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $7($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $17 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $18($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC $10 (int_32 $0)
{
	CALL $9($0)
}

int_32 .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $6(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $6(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	return CALL $11($0, $1)
}

void .FUNC $13 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $2($0)
	
.LABEL $label$1
}

void .FUNC $75 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [256])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [248])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [248])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9176])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*($3 + [240]) = (int_64)0
	*($3 + [232]) = (int_64)0
	$5 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9176])
	
.LABEL $label$6
	CALL memcpy(($3 + [232]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [9176])
	
.LABEL $label$7
	CALL memcpy(($3 + [40]), $5, [8])
	*(($4 = (($3 + [232]) + [8]))) = *($3 + [40])
	*((($3 + [40]) + [24])) = $6
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [160])) = $0
	*($3 + [56]) = $2
	*(($3 + [60])) = ($2 + [24])
	*($3 + [48]) = $1
	*($3 + [40]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*($3 + [152]) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	$1 = *($4)
	*((($3 + [24]) + [8])) = $1
	*((($3 + [8]) + [8])) = $1
	*($3 + [192]) = $0
	$0 = *($3 + [232])
	*($3 + [24]) = $0
	*($3 + [8]) = $0
	CALL $36(($3 + [40]), *($3 + [248]), ($3 + [8]))
	CALL $42(($3 + [40]))
	$global$0 = ($3 + [256])
}

void .FUNC $18 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $7($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $9($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $7(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $9($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $58 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $21($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $71(*($1), $0)
	$3 = ($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9176])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9176])
	$3 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $3, [8])
	*(($0 + [24])) = *($2 + [8])
	*($5) = (*($5) + [8])
	CALL $71(*($1), ($0 + [32]))
	CALL $71(*($1), ($0 + [44]))
	$global$0 = ($2 + [16])
}

void .FUNC $50 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $21($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [16])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $9($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$global$0 = $2
	*(($3 = $2) + [44]) = $1
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$2 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8420])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$2 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*($3 + [8]) = $0
	*($3 + [12]) = ($3 + [32])
	*($3 + [16]) = ($3 + [44])
	*(($5 = CALL $7([72])) + [16]) = [0]
	*($5 + [8 align=4]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = $0
	CALL $88(($3 + [8]), $5)
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [8]) = $6
	$7 = *($5 + [60])
	*($3 + [4]) = $7
	$8 = ($0 + [28])
	$1 = *($8)
	if ( ((uint_32)$1 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($1 + [8]) = $6
	*($1 + [16]) = $7
	*($3 + [24]) = [0]
	*($1) = $5
	*($8) = ($1 + [24])
	if ( $2 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $50(($0 + [24]), ($3 + [24]), ($3 + [8]), ($3 + [4]))
	if ( ($2 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [16])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8666])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [8711])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [8761])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [8]) & [1]) == 0) ){ goto $label$13 }
	CALL $9(*(($5 + [16])))
	
.LABEL $label$13
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	if ( ((*($8 + [8]) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*(($8 + [16])))
	
.LABEL $label$16
	CALL $9($8)
	
.LABEL $label$15
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [60]))
}

void .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9176])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9176])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9176])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [16])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $54 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8849])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [8895])
	
.LABEL $label$2
	$6 = *($1)
	$7 = *(*($3) + [4])
	$8 = *($7 + [40])
	$9 = *(($7 + [48]))
	$3 = *(($3 + [4]))
	if ( ((int_64)*($3 + [8]) == (int_64)$9) ){ goto $label$3 }
	CALL eosio_assert([0], [9005])
	
.LABEL $label$3
	$8 = ((int_64)*($3) + (int_64)$8)
	if ( ((int_64)$8 <= (int_64)-4611686018427387904) ){ goto $label$5 }
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9067])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [9048])
	
.LABEL $label$4
	*($1 + [40]) = $8
	*(($1 + [48])) = $9
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [8946])
	
.LABEL $label$6
	$3 = *($1 + [8])
	$7 = ( *(($1 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($7 + [40])
	$8 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$7:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$7 }
	if ( ($3 <= [513]) ){ goto $label$9 }
	$4 = CALL $1($3)
	goto $label$8 
	
.LABEL $label$9
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$8
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	CALL $87($5, $1)
	CALL db_update_i64(*($1 + [60]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$12 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $2($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$10 }
	
.LABEL $label$11
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$10
	$global$0 = ($5 + [16])
}

int_32 .FUNC $34 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [336])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = (($4 + [248]) + [24]))) = (int_64)0
	*($4 + [256]) = (int_64)0
	*($4 + [248]) = (int_64)0
	*($4 + [264]) = (int_64)0
	*($4 + [236]) = $2
	*($4 + [232]) = $2
	*($4 + [240]) = ($2 + $7)
	*($4 + [312]) = ($4 + [232])
	*($4 + [40]) = ($4 + [248])
	CALL $56(($4 + [40]), ($4 + [312]))
	*(($9 = (($4 + [24]) + [8]))) = *($4 + [240])
	*($4 + [24]) = *($4 + [232])
	$10 = *($9)
	*(($3 = (($4 + [280]) + [8]))) = $10
	*(($9 = (($4 + [296]) + [8]))) = $10
	$11 = *($4 + [24])
	*($4 + [296]) = $11
	*($4 + [280]) = $11
	$10 = *($9)
	*((($4 + [312]) + [8])) = $10
	*((($4 + [40]) + [24])) = $10
	*($4 + [40]) = $0
	*($4 + [48]) = $1
	$1 = *($4 + [296])
	*($4 + [56]) = $1
	*($4 + [312]) = $1
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*(($4 + [160])) = $0
	*(($4 + [168])) = (int_64)-1
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*(($4 + [200])) = $0
	*(($4 + [208])) = (int_64)-1
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*($4 + [152]) = $0
	*($4 + [192]) = $0
	*(($4 + [224])) = [0]
	*(($4 + [216])) = (int_64)0
	*($3) = *($8)
	*($4 + [280]) = *($4 + [264])
	$0 = *($4 + [256])
	$1 = *($4 + [248])
	*($9) = *($3)
	*($4 + [328]) = $1
	*($4 + [296]) = *($4 + [280])
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$1 = *((($4 + [296]) + [8]))
	*((($4 + [312]) + [8])) = $1
	*((($4 + [8]) + [8])) = $1
	$1 = *($4 + [296])
	*($4 + [8]) = $1
	*($4 + [312]) = $1
	CALL void $3((int_32 ($4 + [328])), (int_32 $0), (int_64 ($4 + [8])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	CALL $42(($4 + [40]))
	$global$0 = ($4 + [336])
	return [1]
}

void .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9176])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9176])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($5 + [16])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9176])
	$4 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $4, [8])
	$0 = (*($4) + [8])
	*(($4 = ($1 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($1 + [8])) - $0) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9176])
	$0 = *($4)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [24])) = *($2 + [8])
	*($4) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *(($6 + [128]))
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = ($6 + [112])
	$9 = CALL db_lowerbound_i64(*($8), *(($6 + [120])), (int_64)-6497942746098040832, (int_64)0)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $90($8, $9)
	*($3 + [4]) = [0]
	*($3) = $8
	$7 = *(*(CALL $91($3) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [128])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [8368])
	$7 = *(($6 + [128]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [128])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	*($1 + [16]) = *(*($5 + [8]))
	$5 = *($5 + [12])
	*(($1 + [32])) = *(($5 + [8]))
	*($1 + [24]) = *($5)
	$2 = $2
	$5 = ($2 + [-48])
	$global$0 = $5
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($2 + [-8])
	CALL $92($3, $1)
	$7 = *($1)
	*($1 + [44]) = CALL db_store_i64(*($4 + [8]), (int_64)-6497942746098040832, *(*($0 + [8])), $7, $5, [40])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = ($3 + [16])
}

void .FUNC $35 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$global$0 = $2
	CALL require_auth(*($0))
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [24]) = (int_64)0
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	$0 = [0]
	$4 = CALL db_find_i64($3, $3, (int_64)-7877210700211290112, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $51($2, $4)
	if ( ((int_32)*($0 + [56]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [8551])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [8263])
	if ( $0 ){ goto $label$2 }
	CALL eosio_assert([0], [8602])
	CALL eosio_assert([0], [8636])
	
.LABEL $label$2
	$4 = CALL db_next_i64(*($0 + [60]), ($2 + [40]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	CALL $51($2, $4)
	
.LABEL $label$3
	CALL $52($2, $0)
	$5 = *($2 + [24])
	if ( ($5 == 0) ){ goto $label$4 }
	$6 = ($2 + [28])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$9 }
	CALL $9(*(($4 + [16])))
	
.LABEL $label$9
	CALL $9($4)
	
.LABEL $label$8
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($2 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $5
	
.LABEL $label$5
	*($6) = $5
	CALL $9($0)
	
.LABEL $label$4
	$global$0 = ($2 + [48])
}

int_32 .FUNC $29 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [336])
	$global$0 = $3
	*(($4 = $3) + [280]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [232]) + [24])) = (int_64)0
	*((($4 + [232]) + [40])) = (int_64)0
	*($4 + [240]) = [0]
	*($4 + [232]) = (int_64)0
	*($4 + [248]) = (int_64)0
	*($4 + [264]) = (int_64)0
	*($4 + [220]) = $2
	*($4 + [216]) = $2
	*($4 + [224]) = ($2 + $5)
	*($4 + [320]) = ($4 + [216])
	*($4 + [24]) = ($4 + [232])
	CALL $47(($4 + [24]), ($4 + [320]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [224])
	*($4 + [8]) = *($4 + [216])
	$3 = *($3)
	*((($4 + [288]) + [8])) = $3
	*(($6 = (($4 + [304]) + [8]))) = $3
	$7 = *($4 + [8])
	*($4 + [304]) = $7
	*($4 + [288]) = $7
	$3 = *($6)
	*((($4 + [320]) + [8])) = $3
	*((($4 + [24]) + [24])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [304])
	*($4 + [40]) = $1
	*($4 + [320]) = $1
	*((($4 + [24]) + [40])) = $0
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $0
	*(($4 + [112])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [144])) = $0
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*(($4 + [184])) = $0
	*(($4 + [192])) = (int_64)-1
	*($4 + [56]) = $0
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	*($4 + [176]) = $0
	*(($4 + [208])) = [0]
	*(($4 + [200])) = (int_64)0
	*($4 + [324]) = ($4 + [280])
	*($4 + [320]) = ($4 + [24])
	CALL $48(($4 + [320]), ($4 + [232]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $2($2)
	
.LABEL $label$4
	CALL $42(($4 + [24]))
	if ( ((*($4 + [232]) & [1]) == 0) ){ goto $label$5 }
	CALL $9(*(($4 + [240])))
	
.LABEL $label$5
	$global$0 = ($4 + [336])
	return [1]
}

void .FUNC $28 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	$4 = ($global$0 - [64])
	$global$0 = $4
	CALL require_auth(*($0))
	$5 = *($0)
	*($4 + [12]) = $1
	*($4 + [8]) = $0
	*($4 + [16]) = $2
	*($4 + [20]) = $3
	*($4 + [56]) = $5
	$2 = ($0 + [72])
	if ( ((int_64)*($0 + [72]) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [8317])
	
.LABEL $label$1
	*($4 + [32]) = $2
	*($4 + [36]) = ($4 + [8])
	*($4 + [40]) = ($4 + [56])
	*(($3 = CALL $7([72])) + [16]) = [0]
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [40]) = (int_64)0
	*($3 + [48]) = (int_64)0
	*($3 + [56]) = $2
	CALL $49(($4 + [32]), $3)
	*($4 + [48]) = $3
	$5 = *($3)
	*($4 + [32]) = $5
	$1 = *($3 + [60])
	*($4 + [28]) = $1
	$6 = ($0 + [100])
	$2 = *($6)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [104]))) ){ goto $label$4 }
	*($2 + [8]) = $5
	*($2 + [16]) = $1
	*($4 + [48]) = [0]
	*($2) = $3
	*($6) = ($2 + [24])
	$3 = *($4 + [48])
	*($4 + [48]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $50(($0 + [96]), ($4 + [48]), ($4 + [32]), ($4 + [28]))
	$3 = *($4 + [48])
	*($4 + [48]) = [0]
	if ( $3 ){ goto $label$2 }
	
.LABEL $label$3
	$global$0 = ($4 + [64])
	return 
	
.LABEL $label$2
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$5 }
	CALL $9(*(($3 + [16])))
	
.LABEL $label$5
	CALL $9($3)
	$global$0 = ($4 + [64])
}

void .FUNC $55 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8849])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [8895])
	
.LABEL $label$2
	$6 = *($1)
	$7 = *(*($3) + [4])
	$8 = *($7 + [40])
	$9 = *(($7 + [48]))
	$3 = *(($3 + [4]))
	if ( ((int_64)*($3 + [8]) == (int_64)$9) ){ goto $label$3 }
	CALL eosio_assert([0], [9085])
	
.LABEL $label$3
	$8 = (int_64)
	if ( ((int_64)$8($8 - *($3))) <= (int_64)-4611686018427387904) ){ goto $label$5 }
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9155])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [9133])
	
.LABEL $label$4
	*($1 + [40]) = $8
	*(($1 + [48])) = $9
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [8946])
	
.LABEL $label$6
	$3 = *($1 + [8])
	$7 = ( *(($1 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($7 + [40])
	$8 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$7:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$7 }
	if ( ($3 <= [513]) ){ goto $label$9 }
	$4 = CALL $1($3)
	goto $label$8 
	
.LABEL $label$9
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$8
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	CALL $87($5, $1)
	CALL db_update_i64(*($1 + [60]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$12 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $2($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$10 }
	
.LABEL $label$11
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$10
	$global$0 = ($5 + [16])
}

void .FUNC $21 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $20 (int_32 $0)
{
}

void .FUNC $23 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = ($global$0 - [16])
	$2 = $1
	$global$0 = $1
	$3 = CALL action_data_size()
	if ( ($3 <= [513]) ){ goto $label$2 }
	$1 = CALL $1($3)
	goto $label$1 
	
.LABEL $label$2
	$1 = ($1 - (($3 + [15]) & [-16]))
	$global$0 = $1
	
.LABEL $label$1
	CALL read_action_data($1, $3)
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = (int_64)0
	*($0 + [32 align=4]) = (int_64)0
	*(($0 + [40])) = [0]
	*($2 + [4]) = $1
	*($2) = $1
	*($2 + [8]) = ($1 + $3)
	CALL $41($2, $0)
	$global$0 = ($2 + [16])
}

void .FUNC $22 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [224])
	$global$0 = $4
	if ( ((int_64)$2 != (int_64)6138663591592764928) ){ goto $label$8 }
	if ( ((int_64)$3 != (int_64)-3617168760277827584) ){ goto $label$8 }
	CALL $23(($4 + [176]))
	$0 = ($4 + [208])
	$5 = CALL $16(($4 + [160]), $0)
	if ( ((*($5) & [1]) == 0) ){ goto $label$9 }
	CALL $9(*($5 + [8]))
	
.LABEL $label$9
	if ( ((*($0) & [1]) == 0) ){ goto $label$7 }
	CALL $9(*(($4 + [216])))
	$global$0 = ($4 + [224])
	return 
	
.LABEL $label$8
	if ( ((int_64)*($0) != (int_64)$2) ){ goto $label$7 }
	if ( ((int_64)$3 > (int_64)3626431425110081535) ){ goto $label$12 }
	if ( ((int_64)$3 <= (int_64)3626288636741287935) ){ goto $label$11 }
	if ( ((int_64)$3 == (int_64)3626288636741287936) ){ goto $label$6 }
	if ( ((int_64)$3 == (int_64)3626325298464686080) ){ goto $label$5 }
	if ( ((int_64)$3 != (int_64)3626387442677809152) ){ goto $label$7 }
	*($4 + [92]) = [0]
	*($4 + [88]) = [1]
	*($4 + [64]) = *($4 + [88])
	CALL $25($1, $2, ($4 + [64]))
	$global$0 = ($4 + [224])
	return 
	
.LABEL $label$12
	if ( ((int_64)$3 <= (int_64)5378183461594264063) ){ goto $label$10 }
	if ( ((int_64)$3 == (int_64)5378183461594264064) ){ goto $label$4 }
	if ( ((int_64)$3 == (int_64)5378188891788410880) ){ goto $label$3 }
	if ( ((int_64)$3 != (int_64)5378287697724932096) ){ goto $label$7 }
	*($4 + [84]) = [0]
	*($4 + [80]) = [2]
	*($4 + [72]) = *($4 + [80])
	CALL $27($1, $2, ($4 + [72]))
	$global$0 = ($4 + [224])
	return 
	
.LABEL $label$11
	if ( ((int_64)$3 == (int_64)-3841130677495922688) ){ goto $label$2 }
	if ( ((int_64)$3 != (int_64)3626283206547141120) ){ goto $label$7 }
	*($4 + [132]) = [0]
	*($4 + [128]) = [3]
	*($4 + [24]) = *($4 + [128])
	CALL $29($1, $2, ($4 + [24]))
	$global$0 = ($4 + [224])
	return 
	
.LABEL $label$10
	if ( ((int_64)$3 == (int_64)3626431425110081536) ){ goto $label$1 }
	if ( ((int_64)$3 != (int_64)5378050756955193344) ){ goto $label$7 }
	*($4 + [140]) = [0]
	*($4 + [136]) = [4]
	*($4 + [16]) = *($4 + [136])
	CALL $27($1, $2, ($4 + [16]))
	
.LABEL $label$7
	$global$0 = ($4 + [224])
	return 
	
.LABEL $label$6
	*($4 + [116]) = [0]
	*($4 + [112]) = [5]
	*($4 + [40]) = *($4 + [112])
	CALL $32($1, $2, ($4 + [40]))
	$global$0 = ($4 + [224])
	return 
	
.LABEL $label$5
	*($4 + [100]) = [0]
	*($4 + [96]) = [6]
	*($4 + [56]) = *($4 + [96])
	CALL $34($1, $2, ($4 + [56]))
	$global$0 = ($4 + [224])
	return 
	
.LABEL $label$4
	*($4 + [124]) = [0]
	*($4 + [120]) = [7]
	*($4 + [32]) = *($4 + [120])
	CALL $27($1, $2, ($4 + [32]))
	$global$0 = ($4 + [224])
	return 
	
.LABEL $label$3
	*($4 + [108]) = [0]
	*($4 + [104]) = [8]
	*($4 + [48]) = *($4 + [104])
	CALL $32($1, $2, ($4 + [48]))
	$global$0 = ($4 + [224])
	return 
	
.LABEL $label$2
	*($4 + [156]) = [0]
	*($4 + [152]) = [9]
	*($4) = *($4 + [152])
	CALL $38($1, $2, $4)
	$global$0 = ($4 + [224])
	return 
	
.LABEL $label$1
	*($4 + [148]) = [0]
	*($4 + [144]) = [10]
	*($4 + [8]) = *($4 + [144])
	CALL $40($1, $2, ($4 + [8]))
	$global$0 = ($4 + [224])
}

int_32 .FUNC $25 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [336])
	$global$0 = $3
	*(($4 = $3) + [280]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [224]) + [24])) = (int_64)0
	*((($4 + [224]) + [40])) = (int_64)0
	*((($4 + [224]) + [48])) = (int_64)0
	*($4 + [232]) = [0]
	*($4 + [224]) = (int_64)0
	*($4 + [240]) = (int_64)0
	*($4 + [256]) = (int_64)0
	*($4 + [212]) = $2
	*($4 + [208]) = $2
	*($4 + [216]) = ($2 + $5)
	*($4 + [16]) = ($4 + [208])
	CALL $59(($4 + [224]), ($4 + [16]))
	*(($3 = ($4 + [8]))) = *($4 + [216])
	*($4) = *($4 + [208])
	$3 = *($3)
	*((($4 + [288]) + [8])) = $3
	*(($6 = (($4 + [304]) + [8]))) = $3
	$7 = *($4)
	*($4 + [304]) = $7
	*($4 + [288]) = $7
	$3 = *($6)
	*((($4 + [320]) + [8])) = $3
	*((($4 + [16]) + [24])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [304])
	*($4 + [32]) = $1
	*($4 + [320]) = $1
	*((($4 + [16]) + [40])) = $0
	*((($4 + [16]) + [48])) = (int_64)-1
	*(($4 + [72])) = (int_64)0
	*(($4 + [80])) = [0]
	*(($4 + [96])) = $0
	*(($4 + [104])) = (int_64)-1
	*(($4 + [112])) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [136])) = $0
	*(($4 + [144])) = (int_64)-1
	*(($4 + [152])) = (int_64)0
	*(($4 + [160])) = [0]
	*(($4 + [176])) = $0
	*(($4 + [184])) = (int_64)-1
	*($4 + [48]) = $0
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	*($4 + [168]) = $0
	*(($4 + [200])) = [0]
	*(($4 + [192])) = (int_64)0
	*($4 + [324]) = ($4 + [280])
	*($4 + [320]) = ($4 + [16])
	CALL $60(($4 + [320]), ($4 + [224]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $2($2)
	
.LABEL $label$4
	CALL $42(($4 + [16]))
	if ( (*($4 + [268]) & [1]) ){ goto $label$9 }
	if ( (*($4 + [256]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $9(*(($4 + [276])))
	if ( ((*($4 + [256]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9(*(($4 + [264])))
	$2 = [1]
	if ( ((*($4 + [224]) & [1]) == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$2 = [1]
	if ( (*($4 + [224]) & [1]) ){ goto $label$5 }
	
.LABEL $label$6
	$global$0 = ($4 + [336])
	return $2
	
.LABEL $label$5
	CALL $9(*(($4 + [232])))
	$global$0 = ($4 + [336])
	return $2
}

void .FUNC $24 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	$5 = ($global$0 - [64])
	$global$0 = $5
	CALL require_auth(*($0))
	$6 = *($0)
	*($5 + [12]) = $1
	*($5 + [8]) = $0
	*($5 + [16]) = $2
	*($5 + [20]) = $3
	*($5 + [24]) = $4
	*($5 + [56]) = $6
	$3 = ($0 + [152])
	if ( ((int_64)*($0 + [152]) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [8317])
	
.LABEL $label$1
	*($5 + [32]) = $3
	*($5 + [36]) = ($5 + [8])
	*($5 + [40]) = ($5 + [56])
	*(($4 = CALL $7([80])) + [16]) = [0]
	*($4 + [8 align=4]) = (int_64)0
	*($4 + [24]) = (int_64)0
	*($4 + [32]) = (int_64)0
	*($4 + [40 align=4]) = (int_64)0
	*($4 + [48 align=4]) = (int_64)0
	*($4 + [56 align=4]) = (int_64)0
	*($4 + [64]) = $3
	CALL $61(($5 + [32]), $4)
	*($5 + [48]) = $4
	$6 = *($4)
	*($5 + [32]) = $6
	$2 = *($4 + [68])
	*($5 + [28]) = $2
	$1 = ($0 + [180])
	$3 = *($1)
	if ( ((uint_32)$3 >= (uint_32)*(($0 + [184]))) ){ goto $label$4 }
	*($3 + [8]) = $6
	*($3 + [16]) = $2
	*($5 + [48]) = [0]
	*($3) = $4
	*($1) = ($3 + [24])
	$4 = *($5 + [48])
	*($5 + [48]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $62(($0 + [176]), ($5 + [48]), ($5 + [32]), ($5 + [28]))
	$4 = *($5 + [48])
	*($5 + [48]) = [0]
	if ( $4 ){ goto $label$2 }
	
.LABEL $label$3
	$global$0 = ($5 + [64])
	return 
	
.LABEL $label$2
	if ( (*($4 + [52]) & [1]) ){ goto $label$9 }
	if ( (*($4 + [40]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $9(*(($4 + [60])))
	if ( ((*($4 + [40]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9(*(($4 + [48])))
	if ( (*($4 + [8]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9(*(($4 + [16])))
	
.LABEL $label$5
	CALL $9($4)
	$global$0 = ($5 + [64])
}

int_32 .FUNC $27 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [208])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [200]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9176])
	
.LABEL $label$5
	CALL memcpy(($4 + [200]), $2, [8])
	*(($4 + [28])) = ($2 + [8])
	*(($4 + [32])) = $3
	*(($4 + [48])) = $0
	*(($4 + [56])) = (int_64)-1
	*(($4 + [64])) = (int_64)0
	*(($4 + [72])) = [0]
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [24]) = $2
	*($4 + [40]) = $0
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*(($4 + [168])) = $0
	*(($4 + [176])) = (int_64)-1
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*($4 + [160]) = $0
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *($4 + [200])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $2($2)
	
.LABEL $label$7
	CALL $42(($4 + [8]))
	$global$0 = ($4 + [208])
	return [1]
}

void .FUNC $26 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	$2 = ($global$0 - [48])
	$global$0 = $2
	CALL require_auth(*($0))
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [24]) = (int_64)0
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	$0 = [0]
	$4 = CALL db_find_i64($3, $3, (int_64)-4461601170481217536, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $63($2, $4)
	if ( ((int_32)*($0 + [64]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [8551])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [8245])
	if ( $0 ){ goto $label$2 }
	CALL eosio_assert([0], [8602])
	CALL eosio_assert([0], [8636])
	
.LABEL $label$2
	$4 = CALL db_next_i64(*($0 + [68]), ($2 + [40]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	CALL $63($2, $4)
	
.LABEL $label$3
	CALL $64($2, $0)
	CALL $65(($2 + [24]))
	$global$0 = ($2 + [48])
}

void .FUNC $69 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [208])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [200])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [200])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9176])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*(($3 + [28])) = ($2 + [8])
	*(($3 + [32])) = $6
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*($3 + [160]) = $0
	CALL $30(($3 + [8]), *($3 + [200]))
	CALL $42(($3 + [8]))
	$global$0 = ($3 + [208])
}

void .FUNC $68 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [208])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [200]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9176])
	
.LABEL $label$5
	CALL memcpy(($3 + [200]), $2, [8])
	*(($3 + [28])) = ($2 + [8])
	*(($3 + [32])) = $5
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*($3 + [160]) = $0
	CALL $39(($3 + [8]), *($3 + [200]))
	CALL $42(($3 + [8]))
	$global$0 = ($3 + [208])
}

int_32 .FUNC $65 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((*($3 + [52]) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*(($3 + [60])))
	if ( ((*($3 + [40]) & [1]) == 0) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((*($3 + [40]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($3 + [48])))
	if ( (*($3 + [8]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($3 + [16])))
	
.LABEL $label$6
	CALL $9($3)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$4 }
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*(($0 + [4])) = $1
	CALL $9($3)
	
.LABEL $label$1
	return $0
}

void .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8666])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [8711])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [8761])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [52]) & [1]) == 0) ){ goto $label$17 }
	CALL $9(*(($5 + [60])))
	if ( ((*($5 + [40]) & [1]) == 0) ){ goto $label$15 }
	goto $label$16 
	
.LABEL $label$17
	if ( ((*($5 + [40]) & [1]) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL $9(*(($5 + [48])))
	if ( (*($5 + [8]) & [1]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	if ( ((*($5 + [8]) & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $9(*(($5 + [16])))
	
.LABEL $label$13
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$18:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$19 }
	if ( ((*($8 + [52]) & [1]) == 0) ){ goto $label$24 }
	CALL $9(*(($8 + [60])))
	if ( ((*($8 + [40]) & [1]) == 0) ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$24
	if ( ((*($8 + [40]) & [1]) == 0) ){ goto $label$22 }
	
.LABEL $label$23
	CALL $9(*(($8 + [48])))
	if ( (*($8 + [8]) & [1]) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	if ( ((*($8 + [8]) & [1]) == 0) ){ goto $label$20 }
	
.LABEL $label$21
	CALL $9(*(($8 + [16])))
	
.LABEL $label$20
	CALL $9($8)
	
.LABEL $label$19
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$18 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [68]))
}

void .FUNC $67 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [192])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*(($3 + [20])) = $4
	*(($3 + [24])) = ($4 + $5)
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $4
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*($3 + [152]) = $0
	CALL $42($3)
	$global$0 = ($3 + [192])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [192])
	$global$0 = $3
	CALL $0()
	*(($3 + [24])) = [0]
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = [0]
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = (int_64)0
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [140])) = (int_64)0
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*($3 + [152]) = $0
	CALL $22($3, $0, $1, $2)
	CALL eosio_exit([0])
	(unreachable)
}

void .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *(($6 + [168]))
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = ($6 + [152])
	$9 = CALL db_lowerbound_i64(*($8), *(($6 + [160])), (int_64)-4461601170481217536, (int_64)0)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $63($8, $9)
	*($3 + [4]) = [0]
	*($3) = $8
	$7 = *(*(CALL $80($3) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [168])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [8368])
	$7 = *(($6 + [168]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [168])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	CALL $17(($1 + [8]), *($5 + [4]))
	$6 = *($5 + [8])
	*($1 + [24]) = *($6)
	*(($1 + [32])) = *(($6 + [8]))
	CALL $17(($1 + [40]), *($5 + [12]))
	CALL $17(($1 + [52]), *($5 + [16]))
	*($3) = [0]
	CALL $81($3, $1)
	$6 = *($3)
	if ( ($6 <= [513]) ){ goto $label$6 }
	$5 = CALL $1($6)
	goto $label$5 
	
.LABEL $label$6
	$5 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$5
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($5 + $6)
	CALL $82($3, $1)
	$7 = *($1)
	*($1 + [68]) = CALL db_store_i64(*($4 + [8]), (int_64)-4461601170481217536, *(*($0 + [8])), $7, $5, $6)
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$9 }
	if ( ((uint_64)$7 >= (uint_64)*($4 + [16])) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $2($5)
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$7 }
	
.LABEL $label$8
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [16])
}

void .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [80])
	$global$0 = $2
	$3 = CALL $16(($2 + [64]), $1)
	*(($4 = (($2 + [48]) + [8]))) = *(($1 + [24]))
	*($2 + [48]) = *($1 + [16])
	$5 = CALL $16(($2 + [32]), ($1 + [32]))
	$1 = CALL $16(($2 + [16]), ($1 + [44]))
	*(($2 + [8])) = *($4)
	*($2) = *($2 + [48])
	CALL $79($0, $3, $2, $5, $1)
	if ( (*($1) & [1]) ){ goto $label$5 }
	if ( (*($5) & [1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL $9(*($1 + [8]))
	if ( ((*($5) & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $9(*($5 + [8]))
	if ( ((*($3) & [1]) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( (*($3) & [1]) ){ goto $label$1 }
	
.LABEL $label$2
	$global$0 = ($2 + [80])
	return 
	
.LABEL $label$1
	CALL $9(*($3 + [8]))
	$global$0 = ($2 + [80])
}

int_32 .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8420])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $7([80])) + [16]) = [0]
	*($5 + [8 align=4]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40 align=4]) = (int_64)0
	*($5 + [48 align=4]) = (int_64)0
	*($5 + [56 align=4]) = (int_64)0
	*($5 + [64]) = $0
	CALL $84(($3 + [32]), $5)
	*($5 + [68]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $62(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( (*($1 + [52]) & [1]) ){ goto $label$15 }
	if ( (*($1 + [40]) & [1]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $9(*(($1 + [60])))
	if ( ((*($1 + [40]) & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $9(*(($1 + [48])))
	if ( (*($1 + [8]) & [1]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL $9(*(($1 + [16])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $62 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[24])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[178956971]) ){ goto $label$2 }
	$8 = ($0 + [8])
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[24])
	if ( ((uint_32)$5 >= (uint_32)[89478485]) ){ goto $label$5 }
	*(($4 + [24])) = $8
	$8 = [0]
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$5 = ($5 << [1])
	$5 = ( $7 ? $5 : ($5 <= $7) )
	if ( ($5 == 0) ){ goto $label$3 }
	$8 = $5
	goto $label$4 
	
.LABEL $label$5
	*(($4 + [24])) = $8
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$8 = [178956970]
	
.LABEL $label$4
	$5 = CALL $7(((int_32)$8 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $21($0)
	
.LABEL $label$1
	$7 = *($1)
	*($1) = [0]
	*($4 + [8]) = $5
	*(($4 + [20])) = ($5 + ((int_32)$8 * (int_32)[24]))
	*(($5 = ($5 + ((int_32)$6 * (int_32)[24])))) = $7
	*($5 + [8]) = *($2)
	*($5 + [16]) = *($3)
	*($4 + [12]) = $5
	$1 = ($5 + [24])
	*($4 + [16]) = $1
	$3 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$7 }
	$8 = *($4 + [12])
	
.LOOP $label$8:
	$1 = ($5 + [-24])
	$2 = *($1)
	*($1) = [0]
	*(($8 + [-24])) = $2
	*(($8 + [-8])) = *(($5 + [-8]))
	*(($8 + [-16])) = *(($5 + [-16]))
	$8 = (*($4 + [12]) + [-24])
	*($4 + [12]) = $8
	$5 = $1
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$8 }
	$5 = *(($0 + [4]))
	$3 = *($0)
	$1 = *(($4 + [16]))
	goto $label$6 
	
.LABEL $label$7
	$8 = *($4 + [12])
	
.LABEL $label$6
	*($0) = $8
	*(($0 + [4])) = $1
	*((($4 + [8]) + [8])) = $5
	*($4 + [12]) = $3
	$5 = ($0 + [8])
	$8 = *($5)
	*($5) = *($9)
	*($9) = $8
	*($4 + [8]) = $3
	CALL $85(($4 + [8]))
	$global$0 = ($4 + [32])
	(unreachable)
}

int_32 .FUNC $89 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [20]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [8497])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-3020384829779738624)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [8443])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [8443])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $45(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$4 = *($3 + [4])
	$3 = *($0 + [4])
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9176])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $4, [8])
	*(($4 = ($3 + [4]))) = (*($4) + [8])
	$5 = ($1 + [24])
	$4 = *($3 + [4])
	$3 = CALL $71($3, ($1 + [8]))
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9176])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($4) + [8])
	*(($4 = ($3 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($3 + [8])) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9176])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [32])) = *($2 + [8])
	*(($4 = ($3 + [4]))) = (*($4) + [8])
	$6 = ($1 + [40])
	$5 = *($4)
	$7 = ($3 + [8])
	if ( ((uint_32)(*($7) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9176])
	$5 = *($4)
	
.LABEL $label$4
	CALL memcpy($6, $5, [8])
	$5 = (*($4) + [8])
	*($4) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($7) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9176])
	$5 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*(($1 + [48])) = *($2 + [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	*($1 + [60]) = *(*($0 + [8]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8545])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$4 = ($1 + [24])
	$3 = *($0 + [4])
	$0 = CALL $83($0, ($1 + [8]))
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8545])
	$3 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	$3 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($1 + [32]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8545])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, ($2 + [8]), [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$5 = ($1 + [40])
	$4 = *($3)
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8545])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [48]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8545])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, ($2 + [8]), [8])
	*(($1 = ($0 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $86 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [60]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [8497])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-7877210700211290112)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [8443])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [8443])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $51(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $85 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0 + [4])
	$1 = *($0 + [8])
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	$3 = ($0 + [8])
	
.LOOP $label$2:
	$4 = ($1 + [-24])
	*($3) = $4
	$1 = *($4)
	*($4) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	if ( ((*($1 + [52]) & [1]) == 0) ){ goto $label$8 }
	CALL $9(*(($1 + [60])))
	if ( ((*($1 + [40]) & [1]) == 0) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((*($1 + [40]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($1 + [48])))
	if ( (*($1 + [8]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*(($1 + [16])))
	
.LABEL $label$4
	CALL $9($1)
	
.LABEL $label$3
	$1 = *($3)
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$9 }
	CALL $9($1)
	
.LABEL $label$9
	return $0
}

int_32 .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9176])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$4 = ($1 + [24])
	$3 = *($0 + [4])
	$0 = CALL $71($0, ($1 + [8]))
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9176])
	$3 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $3, [8])
	$3 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9176])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $3, [8])
	*(($1 + [32])) = *($2 + [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$1 = CALL $71(CALL $71($0, ($1 + [40])), ($1 + [52]))
	$global$0 = ($2 + [16])
	return $1
}

int_32 .FUNC $83 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [8545])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [8545])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8545])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$4 = ($1 + [24])
	$3 = *($0 + [4])
	$0 = CALL $83($0, ($1 + [8]))
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8545])
	$3 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	$3 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($1 + [32]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8545])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, ($2 + [8]), [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$1 = CALL $83(CALL $83($0, ($1 + [40])), ($1 + [52]))
	$global$0 = ($2 + [16])
	return $1
}

int_32 .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	$2 = (*($0) + [8])
	*($0) = $2
	$3 = *($1 + [8])
	$4 = (CASTING uint_64)(uint_32 ( *(($1 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	*($0) = $2
	$3 = *(($1 + [8]))
	$3 = ( *(($1 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$2 }
	$2 = ($3 + $2)
	*($0) = $2
	
.LABEL $label$2
	$2 = ($2 + [16])
	*($0) = $2
	$3 = *($1 + [40])
	$4 = (CASTING uint_64)(uint_32 ( *(($1 + [44])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$3 }
	*($0) = $2
	$3 = *(($1 + [40]))
	$3 = ( *(($1 + [44])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$4 }
	$2 = ($3 + $2)
	*($0) = $2
	
.LABEL $label$4
	$3 = *($1 + [52])
	$4 = (CASTING uint_64)(uint_32 ( *(($1 + [56])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$5:
	$2 = ($2 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$5 }
	*($0) = $2
	$1 = *(($1 + [52]))
	$1 = ( *(($1 + [56])) ? uint_32($1 >> [1]) : ($1 & [1]) )
	if ( ($1 == 0) ){ goto $label$6 }
	*($0) = ($1 + $2)
	
.LABEL $label$6
	return $0
}

int_32 .FUNC $80 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [68]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [8497])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-4461601170481217536)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [8443])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [8443])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $63(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [9181])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $94($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [9176])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $73 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [208])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [200])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [200])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9176])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*(($3 + [28])) = ($2 + [8])
	*(($3 + [32])) = $6
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*($3 + [160]) = $0
	CALL $35(($3 + [8]), *($3 + [200]))
	CALL $42(($3 + [8]))
	$global$0 = ($3 + [208])
}

void .FUNC $70 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [400])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [340]) = $4
	*($3 + [336]) = $4
	*($3 + [344]) = ($4 + $5)
	*($3 + [328]) = [0]
	*($3 + [320]) = (int_64)0
	CALL $71(($3 + [336]), ($3 + [320]))
	*($3 + [312]) = (int_64)0
	*($3 + [304]) = (int_64)0
	$4 = *($3 + [340])
	if ( ((uint_32)(*($3 + [344]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9176])
	$4 = *($3 + [340])
	
.LABEL $label$4
	CALL memcpy(($3 + [304]), $4, [8])
	$4 = (*($3 + [340]) + [8])
	*($3 + [340]) = $4
	*($3 + [96]) = (int_64)0
	$5 = (($3 + [336]) + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9176])
	$4 = *($3 + [340])
	
.LABEL $label$5
	CALL memcpy(($3 + [96]), $4, [8])
	*((($3 + [304]) + [8])) = *($3 + [96])
	$4 = (*($3 + [340]) + [8])
	*($3 + [340]) = $4
	*($3 + [296]) = (int_64)0
	*($3 + [288]) = (int_64)0
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9176])
	$4 = *($3 + [340])
	
.LABEL $label$6
	CALL memcpy(($3 + [288]), $4, [8])
	$4 = (*($3 + [340]) + [8])
	*($3 + [340]) = $4
	*($3 + [96]) = (int_64)0
	$5 = (($3 + [336]) + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [9176])
	$4 = *($3 + [340])
	
.LABEL $label$7
	CALL memcpy(($3 + [96]), $4, [8])
	*(($2 = (($3 + [288]) + [8]))) = *($3 + [96])
	*($3 + [340]) = (*($3 + [340]) + [8])
	*(($4 = (($3 + [80]) + [8]))) = *($5)
	*($3 + [80]) = *($3 + [336])
	$4 = *($4)
	*((($3 + [352]) + [8])) = $4
	*(($5 = (($3 + [368]) + [8]))) = $4
	$6 = *($3 + [80])
	*($3 + [368]) = $6
	*($3 + [352]) = $6
	$4 = *($5)
	*((($3 + [384]) + [8])) = $4
	*(($3 + [120])) = $4
	*($3 + [96]) = $0
	*($3 + [104]) = $1
	$1 = *($3 + [368])
	*($3 + [112]) = $1
	*($3 + [384]) = $1
	*(($3 + [136])) = $0
	*(($3 + [144])) = (int_64)-1
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [216])) = $0
	*(($3 + [224])) = (int_64)-1
	*(($3 + [232])) = (int_64)0
	*(($3 + [240])) = [0]
	*(($3 + [256])) = $0
	*(($3 + [264])) = (int_64)-1
	*($3 + [128]) = $0
	*($3 + [168]) = $0
	*($3 + [208]) = $0
	*($3 + [248]) = $0
	*(($3 + [280])) = [0]
	*(($3 + [272])) = (int_64)0
	$4 = CALL $16(($3 + [64]), ($3 + [320]))
	$0 = *((($3 + [304]) + [8]))
	*((($3 + [48]) + [8])) = $0
	$1 = *($2)
	*((($3 + [32]) + [8])) = $1
	*((($3 + [16]) + [8])) = $0
	*(($3 + [8])) = $1
	$0 = *($3 + [304])
	*($3 + [48]) = $0
	$1 = *($3 + [288])
	*($3 + [32]) = $1
	*($3 + [16]) = $0
	*($3) = $1
	CALL $28(($3 + [96]), $4, ($3 + [16]), $3)
	if ( ((*($4) & [1]) == 0) ){ goto $label$8 }
	CALL $9(*($4 + [8]))
	
.LABEL $label$8
	CALL $42(($3 + [96]))
	if ( ((*($3 + [320]) & [1]) == 0) ){ goto $label$9 }
	CALL $9(*(($3 + [328])))
	
.LABEL $label$9
	$global$0 = ($3 + [400])
}

int_32 .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $72($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $7($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $19($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $19($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $15($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $9($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $76 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [256])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [248]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9176])
	
.LABEL $label$5
	CALL memcpy(($3 + [248]), $2, [8])
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9176])
	
.LABEL $label$6
	CALL memcpy(($3 + [240]), $5, [8])
	*($3 + [232]) = (int_64)0
	*($3 + [224]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [9176])
	
.LABEL $label$7
	$4 = ($2 + $4)
	CALL memcpy(($3 + [224]), $5, [8])
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [9176])
	
.LABEL $label$8
	CALL memcpy(($3 + [32]), $5, [8])
	*(($6 = (($3 + [224]) + [8]))) = *($3 + [32])
	*((($3 + [32]) + [24])) = $4
	*(($3 + [72])) = $0
	*(($3 + [80])) = (int_64)-1
	*(($3 + [88])) = (int_64)0
	*(($3 + [96])) = [0]
	*(($3 + [112])) = $0
	*(($3 + [120])) = (int_64)-1
	*(($3 + [128])) = (int_64)0
	*(($3 + [136])) = [0]
	*(($3 + [152])) = $0
	*($3 + [48]) = $2
	*(($3 + [52])) = ($2 + [32])
	*($3 + [40]) = $1
	*($3 + [32]) = $0
	*($3 + [64]) = $0
	*($3 + [104]) = $0
	*($3 + [144]) = $0
	*(($3 + [160])) = (int_64)-1
	*(($3 + [168])) = (int_64)0
	*(($3 + [176])) = [0]
	*(($3 + [192])) = $0
	*(($3 + [200])) = (int_64)-1
	*(($3 + [208])) = (int_64)0
	*(($3 + [216])) = [0]
	$1 = *($6)
	*((($3 + [16]) + [8])) = $1
	*(($3 + [8])) = $1
	*($3 + [184]) = $0
	$0 = *($3 + [224])
	*($3 + [16]) = $0
	*($3) = $0
	CALL $33(($3 + [32]), ($3 + [248]), *($3 + [240]), $3)
	CALL $42(($3 + [32]))
	$global$0 = ($3 + [256])
}

void .FUNC $77 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [416])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [356]) = $4
	*($3 + [352]) = $4
	*($3 + [360]) = ($4 + $5)
	*($3 + [344]) = [0]
	*($3 + [336]) = (int_64)0
	CALL $71(($3 + [352]), ($3 + [336]))
	*($3 + [328]) = (int_64)0
	*($3 + [320]) = (int_64)0
	$4 = *($3 + [356])
	if ( ((uint_32)(*($3 + [360]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9176])
	$4 = *($3 + [356])
	
.LABEL $label$4
	CALL memcpy(($3 + [320]), $4, [8])
	$4 = (*($3 + [356]) + [8])
	*($3 + [356]) = $4
	*($3 + [96]) = (int_64)0
	$5 = (($3 + [352]) + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9176])
	$4 = *($3 + [356])
	
.LABEL $label$5
	CALL memcpy(($3 + [96]), $4, [8])
	*(($4 = (($3 + [320]) + [8]))) = *($3 + [96])
	*($3 + [356]) = (*($3 + [356]) + [8])
	*($3 + [312]) = [0]
	*($3 + [304]) = (int_64)0
	CALL $71(($3 + [352]), ($3 + [304]))
	*($3 + [296]) = [0]
	*($3 + [288]) = (int_64)0
	CALL $71(($3 + [352]), ($3 + [288]))
	*(($2 = (($3 + [80]) + [8]))) = *($5)
	*($3 + [80]) = *($3 + [352])
	$5 = *($2)
	*((($3 + [368]) + [8])) = $5
	*(($2 = (($3 + [384]) + [8]))) = $5
	$6 = *($3 + [80])
	*($3 + [384]) = $6
	*($3 + [368]) = $6
	$5 = *($2)
	*((($3 + [400]) + [8])) = $5
	*(($3 + [120])) = $5
	*($3 + [96]) = $0
	*($3 + [104]) = $1
	$1 = *($3 + [384])
	*($3 + [112]) = $1
	*($3 + [400]) = $1
	*(($3 + [136])) = $0
	*(($3 + [144])) = (int_64)-1
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [216])) = $0
	*(($3 + [224])) = (int_64)-1
	*(($3 + [232])) = (int_64)0
	*(($3 + [240])) = [0]
	*(($3 + [256])) = $0
	*(($3 + [264])) = (int_64)-1
	*($3 + [128]) = $0
	*($3 + [168]) = $0
	*($3 + [208]) = $0
	*($3 + [248]) = $0
	*(($3 + [280])) = [0]
	*(($3 + [272])) = (int_64)0
	$5 = CALL $16(($3 + [64]), ($3 + [336]))
	*(($7 = (($3 + [48]) + [8]))) = *($4)
	*($3 + [48]) = *($3 + [320])
	$2 = CALL $16(($3 + [32]), ($3 + [304]))
	$4 = CALL $16(($3 + [16]), ($3 + [288]))
	*(($3 + [8])) = *($7)
	*($3) = *($3 + [48])
	CALL $24(($3 + [96]), $5, $3, $2, $4)
	if ( (*($4) & [1]) ){ goto $label$10 }
	if ( (*($2) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $9(*($4 + [8]))
	if ( ((*($2) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*($2 + [8]))
	$4 = [1]
	if ( (*($5) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$4 = [1]
	if ( ((*($5) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*($5 + [8]))
	
.LABEL $label$6
	CALL $42(($3 + [96]))
	if ( (*($3 + [288]) & $4) ){ goto $label$15 }
	$4 = [1]
	if ( (*($3 + [304]) & [1]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $9(*(($3 + [296])))
	$4 = [1]
	if ( ((*($3 + [304]) & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $9(*(($3 + [312])))
	if ( ((*($3 + [336]) & $4) == 0) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	if ( (*($3 + [336]) & $4) ){ goto $label$11 }
	
.LABEL $label$12
	$global$0 = ($3 + [416])
	return 
	
.LABEL $label$11
	CALL $9(*(($3 + [344])))
	$global$0 = ($3 + [416])
}

void .FUNC $74 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [256])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [248])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [248])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9176])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*($3 + [240]) = (int_64)0
	*($3 + [232]) = (int_64)0
	$5 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9176])
	
.LABEL $label$6
	CALL memcpy(($3 + [232]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [9176])
	
.LABEL $label$7
	CALL memcpy(($3 + [40]), $5, [8])
	*(($4 = (($3 + [232]) + [8]))) = *($3 + [40])
	*((($3 + [40]) + [24])) = $6
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [160])) = $0
	*($3 + [56]) = $2
	*(($3 + [60])) = ($2 + [24])
	*($3 + [48]) = $1
	*($3 + [40]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*($3 + [152]) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	$1 = *($4)
	*((($3 + [24]) + [8])) = $1
	*((($3 + [8]) + [8])) = $1
	*($3 + [192]) = $0
	$0 = *($3 + [232])
	*($3 + [24]) = $0
	*($3 + [8]) = $0
	CALL $31(($3 + [40]), *($3 + [248]), ($3 + [8]))
	CALL $42(($3 + [40]))
	$global$0 = ($3 + [256])
}

void .FUNC $39 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [64])
	$global$0 = $2
	*($2 + [16]) = $1
	CALL require_auth(*($0))
	$1 = *($0)
	*($2 + [8]) = $0
	*($2 + [12]) = ($2 + [16])
	*($2 + [56]) = $1
	$3 = ($0 + [32])
	if ( ((int_64)*($0 + [32]) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [8317])
	
.LABEL $label$1
	*($2 + [32]) = $3
	*($2 + [36]) = ($2 + [8])
	*($2 + [40]) = ($2 + [56])
	*(($4 = CALL $7([32])) + [16]) = $3
	CALL $43(($2 + [32]), $4)
	*($2 + [48]) = $4
	$1 = *($4)
	*($2 + [32]) = $1
	$5 = *($4 + [20])
	*($2 + [28]) = $5
	$6 = ($0 + [60])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($0 + [64]))) ){ goto $label$4 }
	*($3 + [8]) = $1
	*($3 + [16]) = $5
	*($2 + [48]) = [0]
	*($3) = $4
	*($6) = ($3 + [24])
	$0 = *($2 + [48])
	*($2 + [48]) = [0]
	if ( $0 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $44(($0 + [56]), ($2 + [48]), ($2 + [32]), ($2 + [28]))
	$0 = *($2 + [48])
	*($2 + [48]) = [0]
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9($0)
	
.LABEL $label$2
	$global$0 = ($2 + [64])
}

void .FUNC $36 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [64])
	$global$0 = $3
	CALL require_auth(*($0))
	$4 = [0]
	*(($3 + [56])) = [0]
	*($3 + [40]) = (int_64)-1
	*($3 + [48]) = (int_64)0
	$5 = *($0)
	*($3 + [24]) = $5
	*($3 + [32]) = $5
	$6 = CALL db_find_i64($5, $5, (int_64)-7877210700211290112, $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	$4 = CALL $51(($3 + [24]), $6)
	if ( ((int_32)*($4 + [56]) == (int_32)($3 + [24])) ){ goto $label$3 }
	CALL eosio_assert([0], [8551])
	
.LABEL $label$3
	*($3 + [20]) = $4
	*($3 + [16]) = ($3 + [24])
	$6 = [1]
	goto $label$1 
	
.LABEL $label$2
	*($3 + [20]) = [0]
	*($3 + [16]) = ($3 + [24])
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [8282])
	$5 = *($0)
	*($3 + [12]) = $2
	*($3 + [8]) = ($3 + [16])
	if ( $4 ){ goto $label$4 }
	CALL eosio_assert([0], [8814])
	
.LABEL $label$4
	CALL $55(($3 + [24]), $4, $5, ($3 + [8]))
	$2 = *($3 + [48])
	if ( ($2 == 0) ){ goto $label$5 }
	$6 = ($3 + [52])
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$7 }
	
.LOOP $label$8:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$9 }
	if ( ((*($0 + [8]) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*(($0 + [16])))
	
.LABEL $label$10
	CALL $9($0)
	
.LABEL $label$9
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$8 }
	$4 = *(($3 + [48]))
	goto $label$6 
	
.LABEL $label$7
	$4 = $2
	
.LABEL $label$6
	*($6) = $2
	CALL $9($4)
	
.LABEL $label$5
	$global$0 = ($3 + [64])
}

void .FUNC $37 (int_32 $0)
{
}

void .FUNC $78 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [208])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [200])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [200])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9176])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*(($3 + [28])) = ($2 + [8])
	*(($3 + [32])) = $6
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*($3 + [160]) = $0
	CALL $26(($3 + [8]), *($3 + [200]))
	CALL $42(($3 + [8]))
	$global$0 = ($3 + [208])
}

void .FUNC $79 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = ($global$0 - [80])
	$global$0 = $5
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$7 = (*($0) + int_32($6 >> [1]))
	$8 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$8 = *((*($7) + $8))
	
.LABEL $label$1
	$0 = CALL $16(($5 + [64]), $1)
	*(($6 = (($5 + [48]) + [8]))) = *(($2 + [8]))
	*($5 + [48]) = *($2)
	$2 = CALL $16(($5 + [32]), $3)
	$1 = CALL $16(($5 + [16]), $4)
	*(($5 + [8])) = *($6)
	*($5) = *($5 + [48])
	CALL void $7((int_32 $0), (int_32 $5), (int_32 $2), (int_32 $1), (int_32 $8))
	if ( (*($1) & [1]) ){ goto $label$6 }
	if ( (*($2) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $9(*($1 + [8]))
	if ( ((*($2) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*($2 + [8]))
	if ( ((*($0) & [1]) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( (*($0) & [1]) ){ goto $label$2 }
	
.LABEL $label$3
	$global$0 = ($5 + [80])
	return 
	
.LABEL $label$2
	CALL $9(*($0 + [8]))
	$global$0 = ($5 + [80])
}

int_32 .FUNC $32 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [320])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = ($4 + [264]))) = (int_64)0
	*($4 + [256]) = (int_64)0
	*($4 + [248]) = (int_64)0
	*($4 + [236]) = $2
	*($4 + [232]) = $2
	*($4 + [240]) = ($2 + $7)
	*($4 + [304]) = ($4 + [232])
	*($4 + [40]) = ($4 + [248])
	CALL $53(($4 + [40]), ($4 + [304]))
	*(($9 = (($4 + [24]) + [8]))) = *($4 + [240])
	*($4 + [24]) = *($4 + [232])
	$10 = *($9)
	*(($3 = (($4 + [272]) + [8]))) = $10
	*(($9 = (($4 + [288]) + [8]))) = $10
	$11 = *($4 + [24])
	*($4 + [288]) = $11
	*($4 + [272]) = $11
	$10 = *($9)
	*((($4 + [304]) + [8])) = $10
	*(($4 + [64])) = $10
	*($4 + [40]) = $0
	*($4 + [48]) = $1
	$1 = *($4 + [288])
	*($4 + [56]) = $1
	*($4 + [304]) = $1
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*(($4 + [160])) = $0
	*(($4 + [168])) = (int_64)-1
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*(($4 + [200])) = $0
	*(($4 + [208])) = (int_64)-1
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*($4 + [152]) = $0
	*($4 + [192]) = $0
	*(($4 + [224])) = [0]
	*(($4 + [216])) = (int_64)0
	*($3) = *($8)
	*($4 + [272]) = *($4 + [256])
	$0 = *($4 + [248])
	*($9) = *($3)
	*($4 + [288]) = *($4 + [272])
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$1 = *((($4 + [288]) + [8]))
	*((($4 + [304]) + [8])) = $1
	*((($4 + [8]) + [8])) = $1
	$1 = *($4 + [288])
	*($4 + [8]) = $1
	*($4 + [304]) = $1
	CALL void $3((int_32 $0), (int_64 ($4 + [8])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	CALL $42(($4 + [40]))
	$global$0 = ($4 + [320])
	return [1]
}

void .FUNC $33 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [96])
	$global$0 = $4
	*($4 + [48]) = $2
	CALL require_auth(*($0))
	$2 = *($0)
	*($4 + [36]) = $1
	*($4 + [32]) = $0
	*($4 + [44]) = $3
	*($4 + [40]) = ($4 + [48])
	*($4 + [88]) = $2
	$5 = ($0 + [112])
	if ( ((int_64)*($0 + [112]) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [8317])
	
.LABEL $label$1
	*($4 + [64]) = $5
	*($4 + [68]) = ($4 + [32])
	*($4 + [72]) = ($4 + [88])
	*(($1 = CALL $7([56])) + [32]) = (int_64)0
	*($1 + [24]) = (int_64)0
	*($1 + [40]) = $5
	CALL $57(($4 + [64]), $1)
	*($4 + [80]) = $1
	$2 = *($1)
	*($4 + [64]) = $2
	$6 = *($1 + [44])
	*($4 + [60]) = $6
	$7 = ($0 + [140])
	$5 = *($7)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [144]))) ){ goto $label$4 }
	*($5 + [8]) = $2
	*($5 + [16]) = $6
	*($4 + [80]) = [0]
	*($5) = $1
	*($7) = ($5 + [24])
	$1 = *($4 + [80])
	*($4 + [80]) = [0]
	if ( $1 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $58(($0 + [136]), ($4 + [80]), ($4 + [64]), ($4 + [60]))
	$1 = *($4 + [80])
	*($4 + [80]) = [0]
	if ( ($1 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9($1)
	
.LABEL $label$2
	$2 = *($3)
	$8 = *(($3 + [8]))
	*(($4 + [8])) = $8
	*((($4 + [16]) + [8])) = $8
	*($4) = $2
	*($4 + [16]) = $2
	CALL $31($0, *($4 + [48]), $4)
	$global$0 = ($4 + [96])
}

void .FUNC $30 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$global$0 = $2
	CALL require_auth(*($0))
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [24]) = (int_64)0
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	$0 = [0]
	$4 = CALL db_find_i64($3, $3, (int_64)-3020384829779738624, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $45($2, $4)
	if ( ((int_32)*($0 + [16]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [8551])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [8302])
	if ( $0 ){ goto $label$2 }
	CALL eosio_assert([0], [8602])
	CALL eosio_assert([0], [8636])
	
.LABEL $label$2
	$4 = CALL db_next_i64(*($0 + [20]), ($2 + [40]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	CALL $45($2, $4)
	
.LABEL $label$3
	CALL $46($2, $0)
	$5 = *($2 + [24])
	if ( ($5 == 0) ){ goto $label$4 }
	$6 = ($2 + [28])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $9($4)
	
.LABEL $label$8
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($2 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $5
	
.LABEL $label$5
	*($6) = $5
	CALL $9($0)
	
.LABEL $label$4
	$global$0 = ($2 + [48])
}

void .FUNC $31 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [64])
	$global$0 = $3
	CALL require_auth(*($0))
	$4 = [0]
	*(($3 + [56])) = [0]
	*($3 + [40]) = (int_64)-1
	*($3 + [48]) = (int_64)0
	$5 = *($0)
	*($3 + [24]) = $5
	*($3 + [32]) = $5
	$6 = CALL db_find_i64($5, $5, (int_64)-7877210700211290112, $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	$4 = CALL $51(($3 + [24]), $6)
	if ( ((int_32)*($4 + [56]) == (int_32)($3 + [24])) ){ goto $label$3 }
	CALL eosio_assert([0], [8551])
	
.LABEL $label$3
	*($3 + [20]) = $4
	*($3 + [16]) = ($3 + [24])
	$6 = [1]
	goto $label$1 
	
.LABEL $label$2
	*($3 + [20]) = [0]
	*($3 + [16]) = ($3 + [24])
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [8282])
	$5 = *($0)
	*($3 + [12]) = $2
	*($3 + [8]) = ($3 + [16])
	if ( $4 ){ goto $label$4 }
	CALL eosio_assert([0], [8814])
	
.LABEL $label$4
	CALL $54(($3 + [24]), $4, $5, ($3 + [8]))
	$2 = *($3 + [48])
	if ( ($2 == 0) ){ goto $label$5 }
	$6 = ($3 + [52])
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$7 }
	
.LOOP $label$8:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$9 }
	if ( ((*($0 + [8]) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*(($0 + [16])))
	
.LABEL $label$10
	CALL $9($0)
	
.LABEL $label$9
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$8 }
	$4 = *(($3 + [48]))
	goto $label$6 
	
.LABEL $label$7
	$4 = $2
	
.LABEL $label$6
	*($6) = $2
	CALL $9($4)
	
.LABEL $label$5
	$global$0 = ($3 + [64])
}