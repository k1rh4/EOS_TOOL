(data (i32.const 4) "\a0\87\00\00")
(data (i32.const 16) "%llu\00")
(data (i32.const 32) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 96) "cannot create objects in table of another contract\00")
(data (i32.const 160) "pray\00")
(data (i32.const 176) "write\00")
(data (i32.const 192) "upgrade\00")
(data (i32.const 208) "transform\00")
(data (i32.const 224) "\a0\12ES/\93\a6\a9\00\00\00\00\00\00\00\00")
(data (i32.const 240) "The user has registered.\n\00")
(data (i32.const 272) "cannot pass end iterator to modify\00")
(data (i32.const 320) "object passed to modify is not in multi_index\00")
(data (i32.const 368) "cannot modify objects in table of another contract\00")
(data (i32.const 432) "updater cannot change primary key when modifying an object\00")
(data (i32.const 496) "error reading iterator\00")
(data (i32.const 528) "read\00")
(data (i32.const 544) "NO key 0 row found in table configs.\n\00")
(data (i32.const 592) "The contract has been paused, please wait a moment.\n\00")
(data (i32.const 656) "Invalid token transfer\n\00")
(data (i32.const 688) "Quantity must be positive.\n\00")
(data (i32.const 720) "No | for type start found in memo, malformed memo.\n\00")
(data (i32.const 784) "No | for count start found in memo, malformed memo.\n\00")
(data (i32.const 848) "action\'s type\'s length is illegal, ignored.\00")
(data (i32.const 896) "No | for count end found in memo, malformed memo.\n\00")
(data (i32.const 960) "count\'s length is illegal, ignored.\00")
(data (i32.const 1008) "Non-number char in count, ignored.\00")
(data (i32.const 1056) "quantity in transfer is less than the needed: \00")
(data (i32.const 1104) "pandafun.io: buy panda\00")
(data (i32.const 1136) "active\00")
(data (i32.const 1152) "transfers\00")
(data (i32.const 1168) "buycandles\00")
(data (i32.const 1184) "buybooks\00")
(data (i32.const 1200) "buytea\00")
(data (i32.const 1216) "eosio.token\00")
(data (i32.const 1232) "transfer\00")
(data (i32.const 1248) "pandafunhot1\00")
(data (i32.const 1264) "pandafun.io: buy props\00")
(data (i32.const 1296) "No enough | found in memo, malformed memo.\n\00")
(data (i32.const 1344) "seller\'s name length is illegal, ignored.\00")
(data (i32.const 1392) "seller\'s name contains illegal char, ignored.\00")
(data (i32.const 1440) "Illegal panda id, ignored.\00")
(data (i32.const 1472) "pandafun.io: buy panda from player\00")
(data (i32.const 1520) "buy\00")
(data (i32.const 1536) "multiplication overflow\00")
(data (i32.const 1568) "multiplication underflow\00")
(data (i32.const 1600) "divide by zero\00")
(data (i32.const 1616) "signed division overflow\00")
(data (i32.const 1648) "attempt to subtract asset with different symbol\00")
(data (i32.const 1696) "subtraction underflow\00")
(data (i32.const 1728) "subtraction overflow\00")
(data (i32.const 1760) "pandafun.io: selling panda income\00")
(data (i32.const 1808) "pandafun.io: fee from panda deal\00")
(data (i32.const 1856) "Illegal/Unknown method type, ignored.\n\00")
(data (i32.const 1904) "Only EOS token allowed.\n\00")
(data (i32.const 1936) "memo has more than 256 bytes\00")
(data (i32.const 1968) "Transfer from account pandafun, quantity must larger than 0!\00")
(data (i32.const 2032) "Transfer from account pandafun, quantity must less than 1001!\00")
(data (i32.const 2096) "Didn\'t find the user in signup table.\n\00")
(data (i32.const 2144) "The user has been blocked.\n\00")
(data (i32.const 2176) "Invalid sell_msg.price\n\00")
(data (i32.const 2208) "The sell_msg.price must be positive.\n\00")
(data (i32.const 2256) "sell(): The panda has been in sale.\n\00")
(data (i32.const 2304) "sell(): The panda does not exist.\n\00")
(data (i32.const 2352) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 2416) "invalid symbol name\00")
(data (i32.const 2448) "cannot pass end iterator to erase\00")
(data (i32.const 2496) "cannot increment end iterator\00")
(data (i32.const 2528) "object passed to erase is not in multi_index\00")
(data (i32.const 2576) "cannot erase objects in table of another contract\00")
(data (i32.const 2640) "attempt to remove object that was not in multi_index\00")
(data (i32.const 2704) "get\00")
(data (i32.const 2720) "T[] size and unpacked size don\'t match\00")
(data (i32.const 2768) "cancelsell(): The panda isn\'t in sale.\n\00")
(data (i32.const 2816) "buy(): The panda isn\'t in sale.\n\00")
(data (i32.const 2864) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 2928) "buy(): The buyer\'s price is lower than the seller\'s.\n\00")
(data (i32.const 2992) "next primary key in table is at autoincrement limit\00")
(data (i32.const 3056) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 3120) "cannot decrement iterator at beginning of table\00")
(data (i32.const 3168) "No hash found under player.\n\00")
(data (i32.const 3200) "dice(): txnid doesn\'t match.\n\00")
(data (i32.const 3232) "dice(): server\'s random number\'s sha256 sum doesn\'t match the submitted one.\n\00")
(data (i32.const 3312) "pray(): The panda does not exist.\n\00")
(data (i32.const 3360) "pray(): The diamond panda cannot pray.\n\00")
(data (i32.const 3408) "pray(): No asset found in table assets.\n\00")
(data (i32.const 3456) "pray(): No candles left..\n\00")
(data (i32.const 3488) "pray(): txnid doesn\'t match.\n\00")
(data (i32.const 3520) "pray(): player\'s random number\'s sha256 sum doesn\'t match the submitted one.\n\00")
(data (i32.const 3600) "pray(): server\'s random number\'s sha256 sum doesn\'t match the submitted one.\n\00")
(data (i32.const 3680) "pray(): NO key 0 row found in table configs.\n\00")
(data (i32.const 3728) "sorry, silver panda has reached the limit.\n\00")
(data (i32.const 3776) "sorry, gold panda has reached the limit.\n\00")
(data (i32.const 3824) "sorry, diamond panda has reached the limit.\n\00")
(data (i32.const 3872) "pray(): Don\'t support this type to pray.\n\00")
(data (i32.const 3920) "prays(): The panda does not exist.\n\00")
(data (i32.const 3968) "prays(): The diamond panda cannot pray.\n\00")
(data (i32.const 4016) "prays(): No asset found in table assets.\n\00")
(data (i32.const 4064) "prays(): the candles left are less than 10 ..\n\00")
(data (i32.const 4112) "The hashsmore table is empty.\n \00")
(data (i32.const 4144) "prays(): txnid doesn\'t match.\n\00")
(data (i32.const 4176) "moreitr reaches the end of the table hashsmore.\n\00")
(data (i32.const 4240) "The panda no longer exists.\n\00")
(data (i32.const 4272) "upgrade(): No asset found in table assets.\n\00")
(data (i32.const 4320) "upgrade(): No books left..\n\00")
(data (i32.const 4352) "upgrade(): The panda does not exist.\n\00")
(data (i32.const 4400) "upgrade(): This panda doesn\'t have this skill.\n\00")
(data (i32.const 4448) "\01\00\00\00\01\00\00\00\01\00\00\00\01\00\00\00\01\00\00\00\01\00\00\00\01\00\00\00\01\00\00\00\01\00\00\00\01\00\00\00\03\00\00\00\03\00\00\00\03\00\00\00\03\00\00\00\03\00\00\00\03\00\00\00\03\00\00\00\03\00\00\00\03\00\00\00\03\00\00\00\03\00\00\00\03\00\00\00\03\00\00\00")
(data (i32.const 4544) "upgrade(): This skill has been the top level.\n\00")
(data (i32.const 4592) "upgrade(): txnid doesn\'t match.\n\00")
(data (i32.const 4640) "upgrade(): player\'s random number\'s sha256 sum doesn\'t match the submitted one.\n\00")
(data (i32.const 4736) "upgrade(): server\'s random number\'s sha256 sum doesn\'t match the submitted one.\n\00")
(data (i32.const 4832) "upgrade(): NO key 0 row found in table configs.\n\00")
(data (i32.const 4896) "upgrades(): No asset found in table assets.\n\00")
(data (i32.const 4944) "upgrades(): the books left are less than 10 ..\n\00")
(data (i32.const 4992) "upgrades(): The panda does not exist.\n\00")
(data (i32.const 5040) "upgrades(): This panda doesn\'t have this skill.\n\00")
(data (i32.const 5104) "upgrades(): This skill has been the top level.\n\00")
(data (i32.const 5152) "upgrades(): txnid doesn\'t match.\n\00")
(data (i32.const 5200) " upgrades(): This skill has been the top level.\n\00")
(data (i32.const 5264) "transform(): No asset found in table assets.\n\00")
(data (i32.const 5312) "transform(): No peace_tea left..\n\00")
(data (i32.const 5360) "transform(): The panda does not exist.\n\00")
(data (i32.const 5408) "transform(): This panda doesn\'t have this skill.\n\00")
(data (i32.const 5472) "transform(): txnid doesn\'t match.\n\00")
(data (i32.const 5520) "transform(): player\'s random number\'s sha256 sum doesn\'t match the submitted one.\n\00")
(data (i32.const 5616) "transform(): server\'s random number\'s sha256 sum doesn\'t match the submitted one.\n\00")
(data (i32.const 5712) "transform(): NO key 0 row found in table configs.\n\00")
(data (i32.const 5776) "transforms(): No asset found in table assets.\n\00")
(data (i32.const 5824) "transforms(): the peace_tea left are less than 10..\n\00")
(data (i32.const 5888) "transforms(): The panda does not exist.\n\00")
(data (i32.const 5936) "transforms(): This panda doesn\'t have this skill.\n\00")
(data (i32.const 6000) "transforms(): txnid doesn\'t match.\n\00")
(data (i32.const 6048) "transform(): no transform record found.\n\00")
(data (i32.const 6096) "transform(): times don\'t match.\n\00")
(data (i32.const 6144) "transform(): skill is the same.\n\00")
(data (i32.const 6192) "Invalid saveresult_msg.in\n\00")
(data (i32.const 6224) "The saveresult_msg.in must be positive.\n\00")
(data (i32.const 6272) "pandafun.io: prize from pandafun.\00")
(data (i32.const 6320) "pandafun.io: fee from pandafun.\00")
(data (i32.const 6352) "Invalid refund_msg.quantity\n\00")
(data (i32.const 6384) "The refund_msg.quantity must be positive.\n\00")
(data (i32.const 6432) "pandafun.io: refund from pandafun.\00")
(data (i32.const 6480) "buycandles(), count must be larger than 0.\n\00")
(data (i32.const 6528) "Candles: \00")
(data (i32.const 6544) " buy: \00")
(data (i32.const 6560) " total: \00")
(data (i32.const 6576) "Candles: buy: \00")
(data (i32.const 6592) "buybooks(), count must be larger than 0.\n\00")
(data (i32.const 6640) "Books: \00")
(data (i32.const 6656) "Books: buy: \00")
(data (i32.const 6672) "buytea(), count must be larger than 0.\n\00")
(data (i32.const 6720) "Tea: \00")
(data (i32.const 6736) "Tea: buy: \00")
(data (i32.const 6752) "The contract has been paused.\n\00")
(data (i32.const 6784) "NO index 0 found in table configs.\n\00")
(data (i32.const 6832) "The contract has been resumed.\n\00")
(data (i32.const 6864) "Didn\'t find the user: \00")
(data (i32.const 6896) ".\n\00")
(data (i32.const 6912) "account invalid\00")
(data (i32.const 6928) "account not exist\00")
(data (i32.const 6960) "sell\00")
(data (i32.const 6976) "cancelsell\00")
(data (i32.const 6992) "recvhash\00")
(data (i32.const 7008) "recvhashs\00")
(data (i32.const 7024) "prays\00")
(data (i32.const 7040) "dice\00")
(data (i32.const 7056) "upgrades\00")
(data (i32.const 7072) "transforms\00")
(data (i32.const 7088) "confirmtrans\00")
(data (i32.const 7104) "saveresult\00")
(data (i32.const 7120) "refund\00")
(data (i32.const 7136) "signup\00")
(data (i32.const 7152) "pause\00")
(data (i32.const 7168) "resume\00")
(data (i32.const 7184) "setblack\00")
(data (i32.const 7200) "removeblack\00")
(data (i32.const 7216) "login\00")
(data (i32.const 7232) "signin\00")
(data (i32.const 7248) "No match action found, please check it.\n\00")
(data (i32.const 15696) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 15792) "\19\00\n\00\19\19\19\00\00\00\00\05\00\00\00\00\00\00\t\00\00\00\00\0b\00\00\00\00\00\00\00\00\19\00\11\n\19\19\19\03\n\07\00\01\1b\t\0b\18\00\00\t\06\0b\00\00\0b\00\06\19\00\00\00\19\19\19\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\00\00\00\00\00\19\00\n\0d\19\19\19\00\0d\00\00\02\00\t\0e\00\00\00\t\00\0e\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\00\13\00\00\00\00\t\0c\00\00\00\00\00\0c\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\04\0f\00\00\00\00\t\10\00\00\00\00\00\10\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\11\00\00\00\00\t\12\00\00\00\00\00\12\00\00\12\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\00\17\00\00\00\00\t\14\00\00\00\00\00\14\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\00\15\00\00\00\00\t\16\00\00\00\00\00\16\00\00\16\00\00")
(data (i32.const 16256) "0123456789ABCDEF")
(data (i32.const 16272) "-+   0X0x\00")
(data (i32.const 16288) "(null)\00")
(data (i32.const 16304) "-0X+0X 0X-0x+0x 0x\00")
(data (i32.const 16336) "inf\00")
(data (i32.const 16352) "INF\00")
(data (i32.const 16368) "nan\00")
(data (i32.const 16384) "NAN\00")
(data (i32.const 16400) ".\00")
(data (i32.const 16416) "T!\"\19\0d\01\02\03\11K\1c\0c\10\04\0b\1d\12\1e\'hnopqb \05\06\0f\13\14\15\1a\08\16\07($\17\18\t\n\0e\1b\1f%#\83\82}&*+<=>?CGJMXYZ[\\]^_`acdefgijklrstyz{|\00")
(data (i32.const 16512) "Illegal byte sequence\00Domain error\00Result not representable\00Not a tty\00Permission denied\00Operation not permitted\00No such file or directory\00No such process\00File exists\00Value too large for data type\00No space left on device\00Out of memory\00Resource busy\00Interrupted system call\00Resource temporarily unavailable\00Invalid seek\00Cross-device link\00Read-only file system\00Directory not empty\00Connection reset by peer\00Operation timed out\00Connection refused\00Host is down\00Host is unreachable\00Address in use\00Broken pipe\00I/O error\00No such device or address\00Block device required\00No such device\00Not a directory\00Is a directory\00Text file busy\00Exec format error\00Invalid argument\00Argument list too long\00Symbolic link loop\00Filename too long\00Too many open files in system\00No file descriptors available\00Bad file descriptor\00No child process\00Bad address\00File too large\00Too many links\00No locks available\00Resource deadlock would occur\00State not recoverable\00Previous owner died\00Operation canceled\00Function not implemented\00No message of desired type\00Identifier removed\00Device not a stream\00No data available\00Device timeout\00Out of streams resources\00Link has been severed\00Protocol error\00Bad message\00File descriptor in bad state\00Not a socket\00Destination address required\00Message too large\00Protocol wrong type for socket\00Protocol not available\00Protocol not supported\00Socket type not supported\00Not supported\00Protocol family not supported\00Address family not supported by protocol\00Address not available\00Network is down\00Network unreachable\00Connection reset by network\00Connection aborted\00No buffer space available\00Socket is connected\00Socket not connected\00Cannot send after socket shutdown\00Operation already in progress\00Operation in progress\00Stale file handle\00Remote I/O error\00Quota exceeded\00No medium found\00Wrong medium type\00No error information\00\00")
(import "env" "__addtf3" (func $fimport$0 (param i32 i64 i64 i64 i64)))
(import "env" "__eqtf2" (func $fimport$1 (param i64 i64 i64 i64) (result i32)))
(import "env" "__extenddftf2" (func $fimport$2 (param i32 f64)))
(import "env" "__fixtfsi" (func $fimport$3 (param i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$4 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$5 (param i32 i32)))
(import "env" "__floatunsitf" (func $fimport$6 (param i32 i32)))
(import "env" "__multf3" (func $fimport$7 (param i32 i64 i64 i64 i64)))
(import "env" "__multi3" (func $fimport$8 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$9 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$10 (param i32 i64 i64 i64 i64)))
(import "env" "__unordtf2" (func $fimport$11 (param i64 i64 i64 i64) (result i32)))
(import "env" "abort" (func $fimport$12))
(import "env" "action_data_size" (func $fimport$13 (result i32)))
(import "env" "current_receiver" (func $fimport$14 (result i64)))
(import "env" "current_time" (func $fimport$15 (result i64)))
(import "env" "db_end_i64" (func $fimport$16 (param i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$17 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$18 (param i32 i32 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$19 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$20 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$21 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$22 (param i32)))
(import "env" "db_store_i64" (func $fimport$23 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$24 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$25 (param i32 i32)))
(import "env" "is_account" (func $fimport$26 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$27 (param i32 i32 i32) (result i32)))
(import "env" "memset" (func $fimport$28 (param i32 i32 i32) (result i32)))
(import "env" "printi" (func $fimport$29 (param i64)))
(import "env" "printn" (func $fimport$30 (param i64)))
(import "env" "prints" (func $fimport$31 (param i32)))
(import "env" "read_action_data" (func $fimport$32 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$33 (param i64)))
(import "env" "require_auth2" (func $fimport$34 (param i64 i64)))
(import "env" "send_inline" (func $fimport$35 (param i32 i32)))
(import "env" "sha256" (func $fimport$36 (param i32 i32 i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_ZN8pandafun9hashcheckE11checksum256y" (func $5))
(export "_ZN8pandafun10apply_initEv" (func $6))
(export "_ZN8pandafun12apply_signupERKNS_6signupE" (func $12))
(export "_ZN8pandafun10pausecheckEv" (func $13))
(export "_ZN8pandafun14apply_transferERKNS_8transferE" (func $17))
(export "_ZN8pandafun15apply_transfersERKNS_9transfersE" (func $27))
(export "_ZN8pandafun10blackcheckEy" (func $28))
(export "_ZN8pandafun10apply_sellERKNS_4sellE" (func $30))
(export "_ZN8pandafun16apply_cancelsellERKNS_10cancelsellE" (func $38))
(export "_ZN8pandafun9apply_buyERKNS_3buyE" (func $40))
(export "_ZN8pandafun15apply_recvhashsERKNS_9recvhashsE" (func $41))
(export "_ZN8pandafun14apply_recvhashERKNS_8recvhashE" (func $48))
(export "_ZN8pandafun10apply_diceERKNS_4diceE" (func $53))
(export "_ZN8pandafun13generate_randEmPcmi" (func $56))
(export "_ZN8pandafun10apply_prayERKNS_4prayE" (func $57))
(export "_ZN8pandafun11apply_praysERKNS_5praysE" (func $70))
(export "_ZN8pandafun13apply_upgradeERKNS_7upgradeE" (func $72))
(export "_ZN8pandafun14apply_upgradesERKNS_8upgradesE" (func $80))
(export "_ZN8pandafun15apply_transformERKNS_9transformE" (func $81))
(export "_ZN8pandafun16apply_transformsERKNS_10transformsE" (func $87))
(export "_ZN8pandafun18apply_confirmtransERKNS_12confirmtransE" (func $89))
(export "_ZN8pandafun16apply_saveresultERKNS_10saveresultE" (func $90))
(export "_ZN8pandafun12apply_refundERKNS_6refundE" (func $98))
(export "_ZN8pandafun16apply_buycandlesERKNS_10buycandlesE" (func $99))
(export "_ZN8pandafun14apply_buybooksERKNS_8buybooksE" (func $100))
(export "_ZN8pandafun12apply_buyteaERKNS_6buyteaE" (func $101))
(export "_ZN8pandafun11apply_pauseEv" (func $102))
(export "_ZN8pandafun12apply_resumeEv" (func $103))
(export "_ZN8pandafun14apply_setblackERKNS_8setblackE" (func $104))
(export "_ZN8pandafun17apply_removeblackERKNS_11removeblackE" (func $105))
(export "_ZN8pandafun11apply_loginERKNS_5loginE" (func $106))
(export "_ZN8pandafun12apply_signinERKNS_6signinE" (func $107))
(export "apply" (func $108))
(export "malloc" (func $150))
(export "free" (func $153))
(export "snprintf" (func $161))
(export "vsnprintf" (func $162))
(export "__errno_location" (func $164))
(export "vfprintf" (func $165))
(export "__lockfile" (func $167))
(export "__unlockfile" (func $168))
(export "__fwritex" (func $169))
(export "strerror" (func $171))
(export "strnlen" (func $172))
(export "wctomb" (func $173))
(export "__signbitl" (func $174))
(export "__fpclassifyl" (func $175))
(export "frexpl" (func $176))
(export "wcrtomb" (func $177))
(export "memchr" (func $178))
(export "__lctrans" (func $179))
(export "__lctrans_impl" (func $180))
(export "__mo_lookup" (func $181))
(export "strcmp" (func $182))
(export "__towrite" (func $183))
(export "memcmp" (func $184))
(export "strlen" (func $185))
(export "strncmp" (func $186))
(table $0 2 2 anyfunc)
(elem (i32.const 0) $187 $163)



int_32 .FUNC __signbitl (int_64 $0, int_64 $1)
{
	return (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)63))
}

void .FUNC _ZN8pandafun10apply_initEv ()
{
	int_64 $0
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [256])
	*([0] + [4]) = $9
	CALL require_auth((int_64)-6222124003696921904)
	*(($9 + [136])) = [0]
	*($9 + [112]) = (int_64)-6222124003695979872
	*($9 + [104]) = (int_64)-6222124003695979872
	*($9 + [120]) = (int_64)-1
	*($9 + [128]) = (int_64)0
	$8 = CALL db_find_i64((int_64)-6222124003695979872, (int_64)-6222124003695979872, (int_64)4982871467403247616, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*(CALL $7(($9 + [104]), $8) + [96]) == (int_32)($9 + [104])), [32])
	$1 = *($9 + [128])
	if ( $1 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert(((int_64)CALL $fimport$14() == (int_64)-6222124003695979872), [96])
	*(($8 = CALL $154([108])) + [96]) = ($9 + [104])
	*($8 + [8 align=1]) = (int_64)0
	*($8) = (int_64)0
	*($8 + [16 align=1]) = (int_64)0
	*($8 + [24 align=1]) = (int_64)0
	*($8 + [32 align=1]) = (int_64)0
	*($8 + [40 align=1]) = (int_64)0
	*($8 + [48 align=1]) = (int_64)28000
	*($8 + [80 align=1]) = (int_64)10000
	*($8 + [88 align=1]) = [1]
	*($8 + [56 align=1]) = (int_64)0
	*($8 + [64 align=1]) = (int_64)0
	*($8 + [72 align=1]) = (int_64)0
	*($8 + [92]) = [0]
	*($9 + [72]) = (($9 + [144]) + [93])
	*($9 + [68]) = ($9 + [144])
	*($9 + [64]) = ($9 + [144])
	CALL $8(($9 + [64]), $8)
	$5 = *($8)
	$1 = CALL db_store_i64(*(($9 + [112])), (int_64)4982871467403247616, (int_64)-6222124003695979872, $5, ($9 + [144]), [93])
	*($8 + [100]) = $1
	$2 = ($9 + [120])
	if ( (uint_64)($5 <= *($2)) ){ goto $label$4 }
	*($2) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($9 + [64]) = $8
	$5 = *($8)
	*($9 + [144]) = $5
	*($9 + [24]) = $1
	$3 = ($9 + [132])
	$2 = *($3)
	if ( ((uint_32)$2 >= (uint_32)*(($9 + [136]))) ){ goto $label$6 }
	*($2 + [8]) = $5
	*($2 + [16]) = $1
	*($9 + [64]) = [0]
	*($2) = $8
	*($3) = ($2 + [24])
	goto $label$5 
	
.LABEL $label$6
	CALL $9(($9 + [128]), ($9 + [64]), ($9 + [144]), ($9 + [24]))
	
.LABEL $label$5
	$8 = *($9 + [64])
	*($9 + [64]) = [0]
	if ( ($8 == 0) ){ goto $label$7 }
	CALL $155($8)
	
.LABEL $label$7
	$1 = (((uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) / (uint_32)[86400]) + [-1])
	$5 = (int_64)0
	$4 = (int_64)59
	$8 = [160]
	$6 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$5 > (uint_64)(int_64)3) ){ goto $label$13 }
	$2 = *($8)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$2 = ($2 + [165])
	goto $label$11 
	
.LABEL $label$13
	$7 = (int_64)0
	if ( ((uint_64)$5 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$9
	$8 = ($8 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$8 }
	*(($9 + [176])) = [0]
	*($9 + [160]) = (int_64)-1
	*($9 + [168]) = (int_64)0
	*($9 + [152]) = $6
	*($9 + [144]) = (int_64)-6222124003695979872
	$0 = (CASTING uint_64)(uint_32 $1)
	$8 = CALL db_find_i64((int_64)-6222124003695979872, $6, (int_64)-4157500428759203840, $0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$15 }
	CALL eosio_assert(((int_32)*(CALL $10(($9 + [144]), $8) + [12]) == (int_32)($9 + [144])), [32])
	goto $label$14 
	
.LABEL $label$15
	CALL eosio_assert(((int_64)*($9 + [144]) == (int_64)CALL $fimport$14()), [96])
	*(($8 = CALL $154([24])) + [12]) = ($9 + [144])
	*($8 + [8 align=1]) = [15000]
	*($8) = $0
	CALL eosio_assert([1], [176])
	CALL memcpy($9, $8, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy(($9 | [8]), ($8 + [8]), [4])
	$5 = *($8)
	$1 = CALL db_store_i64(*((($9 + [144]) + [8])), (int_64)-4157500428759203840, (int_64)-6222124003695979872, $5, $9, [12])
	*($8 + [16]) = $1
	$2 = ($9 + [160])
	if ( (uint_64)($5 <= *($2)) ){ goto $label$16 }
	*($2) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	*($9 + [24]) = $8
	$5 = *($8)
	*($9 + [64]) = $5
	*($9) = $1
	$3 = ($9 + [172])
	$2 = *($3)
	if ( ((uint_32)$2 >= (uint_32)*(($9 + [176]))) ){ goto $label$18 }
	*($2 + [8]) = $5
	*($2 + [16]) = $1
	*($9 + [24]) = [0]
	*($2) = $8
	*($3) = ($2 + [24])
	goto $label$17 
	
.LABEL $label$18
	CALL $11(($9 + [168]), ($9 + [24]), ($9 + [64]), $9)
	
.LABEL $label$17
	$8 = *($9 + [24])
	*($9 + [24]) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $155($8)
	
.LABEL $label$14
	$5 = (int_64)0
	$4 = (int_64)59
	$8 = [192]
	$6 = (int_64)0
	
.LOOP $label$19:
	if ( ((uint_64)$5 > (uint_64)(int_64)6) ){ goto $label$24 }
	$2 = *($8)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$2 = ($2 + [165])
	goto $label$22 
	
.LABEL $label$24
	$7 = (int_64)0
	if ( ((uint_64)$5 <= (uint_64)(int_64)11) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$21
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$20
	$8 = ($8 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$19 }
	*(($9 + [96])) = [0]
	*($9 + [80]) = (int_64)-1
	*($9 + [88]) = (int_64)0
	*($9 + [72]) = $6
	*($9 + [64]) = (int_64)-6222124003695979872
	$8 = CALL db_find_i64((int_64)-6222124003695979872, $6, (int_64)-4157500428759203840, $0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$26 }
	CALL eosio_assert(((int_32)*(CALL $10(($9 + [64]), $8) + [12]) == (int_32)($9 + [64])), [32])
	goto $label$25 
	
.LABEL $label$26
	CALL eosio_assert(((int_64)*($9 + [64]) == (int_64)CALL $fimport$14()), [96])
	*(($8 = CALL $154([24])) + [12]) = ($9 + [64])
	*($8 + [8 align=1]) = [15000]
	*($8) = $0
	CALL eosio_assert([1], [176])
	CALL memcpy($9, $8, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy(($9 | [8]), ($8 + [8]), [4])
	$5 = *($8)
	$1 = CALL db_store_i64(*((($9 + [64]) + [8])), (int_64)-4157500428759203840, (int_64)-6222124003695979872, $5, $9, [12])
	*($8 + [16]) = $1
	$2 = ($9 + [80])
	if ( (uint_64)($5 <= *($2)) ){ goto $label$27 }
	*($2) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$27
	*($9) = $8
	$5 = *($8)
	*($9 + [24]) = $5
	*($9 + [248]) = $1
	$3 = ($9 + [92])
	$2 = *($3)
	if ( ((uint_32)$2 >= (uint_32)*(($9 + [96]))) ){ goto $label$29 }
	*($2 + [8]) = $5
	*($2 + [16]) = $1
	*($9) = [0]
	*($2) = $8
	*($3) = ($2 + [24])
	goto $label$28 
	
.LABEL $label$29
	CALL $11(($9 + [88]), $9, ($9 + [24]), ($9 + [248]))
	
.LABEL $label$28
	$8 = *($9)
	*($9) = [0]
	if ( ($8 == 0) ){ goto $label$25 }
	CALL $155($8)
	
.LABEL $label$25
	$5 = (int_64)0
	$4 = (int_64)59
	$8 = [208]
	$6 = (int_64)0
	
.LOOP $label$30:
	if ( ((uint_64)$5 > (uint_64)(int_64)8) ){ goto $label$35 }
	$2 = *($8)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$2 = ($2 + [165])
	goto $label$33 
	
.LABEL $label$35
	$7 = (int_64)0
	if ( ((uint_64)$5 <= (uint_64)(int_64)11) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$34
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$32
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$31
	$8 = ($8 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$30 }
	*(($9 + [56])) = [0]
	*($9 + [40]) = (int_64)-1
	*($9 + [48]) = (int_64)0
	*($9 + [32]) = $6
	*($9 + [24]) = (int_64)-6222124003695979872
	$8 = CALL db_find_i64((int_64)-6222124003695979872, $6, (int_64)-4157500428759203840, $0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$37 }
	CALL eosio_assert(((int_32)*(CALL $10(($9 + [24]), $8) + [12]) == (int_32)($9 + [24])), [32])
	goto $label$36 
	
.LABEL $label$37
	CALL eosio_assert(((int_64)*($9 + [24]) == (int_64)CALL $fimport$14()), [96])
	*(($8 = CALL $154([24])) + [12]) = ($9 + [24])
	*($8 + [8 align=1]) = [15000]
	*($8) = $0
	CALL eosio_assert([1], [176])
	CALL memcpy($9, $8, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy(($9 | [8]), ($8 + [8]), [4])
	$5 = *($8)
	$1 = CALL db_store_i64(*((($9 + [24]) + [8])), (int_64)-4157500428759203840, (int_64)-6222124003695979872, $5, $9, [12])
	*($8 + [16]) = $1
	$2 = ($9 + [40])
	if ( (uint_64)($5 <= *($2)) ){ goto $label$38 }
	*($2) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$38
	*($9 + [248]) = $8
	$5 = *($8)
	*($9) = $5
	*($9 + [244]) = $1
	$3 = ($9 + [52])
	$2 = *($3)
	if ( ((uint_32)$2 >= (uint_32)*(($9 + [56]))) ){ goto $label$40 }
	*($2 + [8]) = $5
	*($2 + [16]) = $1
	*($9 + [248]) = [0]
	*($2) = $8
	*($3) = ($2 + [24])
	goto $label$39 
	
.LABEL $label$40
	CALL $11(($9 + [48]), ($9 + [248]), $9, ($9 + [244]))
	
.LABEL $label$39
	$8 = *($9 + [248])
	*($9 + [248]) = [0]
	if ( ($8 == 0) ){ goto $label$36 }
	CALL $155($8)
	
.LABEL $label$36
	*(($9 + [8])) = *([0] + [232])
	*($9) = *([0] + [224])
	CALL _ZN8pandafun12apply_signupERKNS_6signupE($9)
	*($9) = (int_64)-6222124003696921904
	CALL _ZN8pandafun12apply_signupERKNS_6signupE($9)
	$1 = *($9 + [48])
	if ( ($1 == 0) ){ goto $label$41 }
	$3 = ($9 + [52])
	$8 = *($3)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$43 }
	
.LOOP $label$44:
	$8 = ($8 + [-24])
	$2 = *($8)
	*($8) = [0]
	if ( ($2 == 0) ){ goto $label$45 }
	CALL $155($2)
	
.LABEL $label$45
	if ( ((int_32)$1 != (int_32)$8) ){ goto $label$44 }
	$8 = *(($9 + [48]))
	goto $label$42 
	
.LABEL $label$43
	$8 = $1
	
.LABEL $label$42
	*($3) = $1
	CALL $155($8)
	
.LABEL $label$41
	$1 = *($9 + [88])
	if ( ($1 == 0) ){ goto $label$46 }
	$3 = ($9 + [92])
	$8 = *($3)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$48 }
	
.LOOP $label$49:
	$8 = ($8 + [-24])
	$2 = *($8)
	*($8) = [0]
	if ( ($2 == 0) ){ goto $label$50 }
	CALL $155($2)
	
.LABEL $label$50
	if ( ((int_32)$1 != (int_32)$8) ){ goto $label$49 }
	$8 = *(($9 + [88]))
	goto $label$47 
	
.LABEL $label$48
	$8 = $1
	
.LABEL $label$47
	*($3) = $1
	CALL $155($8)
	
.LABEL $label$46
	$1 = *($9 + [168])
	if ( ($1 == 0) ){ goto $label$51 }
	$3 = ($9 + [172])
	$8 = *($3)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$53 }
	
.LOOP $label$54:
	$8 = ($8 + [-24])
	$2 = *($8)
	*($8) = [0]
	if ( ($2 == 0) ){ goto $label$55 }
	CALL $155($2)
	
.LABEL $label$55
	if ( ((int_32)$1 != (int_32)$8) ){ goto $label$54 }
	$8 = *(($9 + [168]))
	goto $label$52 
	
.LABEL $label$53
	$8 = $1
	
.LABEL $label$52
	*($3) = $1
	CALL $155($8)
	
.LABEL $label$51
	$1 = *($9 + [128])
	if ( ($1 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = ($9 + [132])
	$8 = *($3)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$57 }
	
.LOOP $label$58:
	$8 = ($8 + [-24])
	$2 = *($8)
	*($8) = [0]
	if ( ($2 == 0) ){ goto $label$59 }
	CALL $155($2)
	
.LABEL $label$59
	if ( ((int_32)$1 != (int_32)$8) ){ goto $label$58 }
	$8 = *(($9 + [128]))
	goto $label$56 
	
.LABEL $label$57
	$8 = $1
	
.LABEL $label$56
	*($3) = $1
	CALL $155($8)
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [256])
}

void .FUNC frexpl (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$4 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	$5 = ($4) & [32767]
	if ( ((int_32)$5) == (int_32)[32767]) ){ goto $label$1 }
	if ( $5 ){ goto $label$4 }
	if ( (CALL __eqtf2($1, $2, (int_64)0, (int_64)0) == 0) ){ goto $label$3 }
	CALL __multf3($6, $1, $2, (int_64)0, (int_64)4645181540655955968)
	CALL frexpl(($6 + [16]), *($6), *(($6 + [8])), $3)
	$4 = (*($3) + [-120])
	$2 = *($6 + [24])
	$1 = *($6 + [16])
	goto $label$2 
	
.LABEL $label$4
	*($3) = (($4 & [32767]) + [-16382])
	$2 = ((int_64)((int_64)(CASTING uint_64)(uint_32 (($4 & [32768]) | [16382])) << (int_64)48) | (int_64)((int_64)$2 & (int_64)281474976710655))
	goto $label$1 
	
.LABEL $label$3
	$4 = [0]
	
.LABEL $label$2
	*($3) = $4
	
.LABEL $label$1
	*($0) = $1
	*(($0 + [8])) = $2
	*([0] + [4]) = ($6 + [32])
}

int_32 .FUNC wcrtomb (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = [1]
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ((uint_32)$1 > (uint_32)[127]) ){ goto $label$2 }
	*($0) = $1
	return [1]
	
.LABEL $label$2
	if ( (*([0]) == 0) ){ goto $label$8 }
	if ( ((uint_32)$1 > (uint_32)[2047]) ){ goto $label$7 }
	*($0 + [1]) = (($1 & [63]) | [128])
	*($0) = (uint_32($1 >> [6]) | [192])
	return [2]
	
.LABEL $label$8
	if ( ((int_32)($1 & [-128]) != (int_32)[57216]) ){ goto $label$6 }
	*($0) = $1
	return [1]
	
.LABEL $label$7
	if ( ($1 <= [55296]) ){ goto $label$5 }
	if ( ((int_32)($1 & [-8192]) == (int_32)[57344]) ){ goto $label$5 }
	if ( ((uint_32)($1 + [-65536]) > (uint_32)[1048575]) ){ goto $label$4 }
	*($0) = (uint_32($1 >> [18]) | [240])
	*($0 + [3]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [12]) & [63]) | [128])
	*($0 + [2]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [4]
	
.LABEL $label$6
	*(CALL __errno_location()) = [84]
	goto $label$3 
	
.LABEL $label$5
	*($0) = (uint_32($1 >> [12]) | [224])
	*($0 + [2]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [3]
	
.LABEL $label$4
	*(CALL __errno_location()) = [84]
	
.LABEL $label$3
	$3 = [-1]
	
.LABEL $label$1
	return $3
}

void .FUNC $170 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$1 = ($1 + [-9])
	if ( ((uint_32)$1 > (uint_32)[17]) ){ goto $label$1 }
	goto $label$19 
	
.LABEL $label$19
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$18
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$17
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$16
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$15
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$14
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$13
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$12
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$11
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$10
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$9
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$8
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$7
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$6
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$5
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$4
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$3
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	CALL __extenddftf2($4, *($1))
	*(($0 + [8])) = *(($4 + [8]))
	*($0) = *($4)
	goto $label$1 
	
.LABEL $label$2
	$1 = ((*($2) + [15]) & [-16])
	*($2) = ($1 + [16])
	$3 = *($1)
	*(($0 + [8])) = *($1 + [8])
	*($0) = $3
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
	$1
}

int_32 .FUNC strerror (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	CALL __lctrans($3, *([0] + [20]))
	$2 = [0]
	
.LOOP $label$5:
	if ( ((int_32)*(($2 + [16416])) == (int_32)$0) ){ goto $label$4 }
	$1 = [87]
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[87]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$1 = $2
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = [16512]
	
.LOOP $label$6:
	$0 = *($2)
	$3 = ($2 + [1])
	$2 = $3
	if ( $0 ){ goto $label$6 }
	$2 = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$6 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [16512]
	return .LABEL $label$1
}

int_32 .FUNC strnlen (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = CALL memchr($0, [0], $1)
	return ( ($2 - $0) ? $1 : $2 )
}

int_32 .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [496])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $154([108])) + [96]) = $0
	CALL $16(($8 + [32]), $6)
	*($6 + [100]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [100])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $9(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $155($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC memchr (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = [0]
	$4 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$7:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$3 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$4 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	$5 = $2
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = $2
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)($1 & [255])) ){ goto $label$8 }
	if ( ($5 <= [4]) ){ goto $label$10 }
	$4 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$4)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$8 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$8
	$6 = $5
	
.LABEL $label$1
	return ( $0 ? [0] : $6 )
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

int_32 .FUNC _ZN8pandafun9hashcheckE11checksum256y (int_32 $0, int_64 $1)
{
	int_32 $2
	$2 = (*([0] + [4]) - [80])
	*([0] + [4]) = $2
	CALL memset(($2 + [16]), [0], [24])
	*($2) = $1
	CALL snprintf(($2 + [16]), [24], [16], $2)
	CALL sha256(($2 + [16]), CALL $185(($2 + [16])), ($2 + [48]))
	$0 = CALL strncmp($0, ($2 + [48]), [32])
	*([0] + [4]) = ($2 + [80])
	return ((int_32)$0 != (int_32)[0])
}

void .FUNC $127 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = *([0] + [4])
	$3 = $2
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [528])
	CALL memcpy($0, $2, [8])
	$1 = ($1 & [-8])
	CALL eosio_assert(((int_32)$1 != (int_32)[8]), [528])
	CALL memcpy(($0 + [8]), ($2 + [8]), [8])
	CALL eosio_assert(((int_32)$1 != (int_32)[16]), [528])
	CALL memcpy(($0 + [16]), ($2 + [16]), [8])
	*([0] + [4]) = $3
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [496])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $154([92])) + [80]) = $0
	CALL $47(($8 + [32]), $6)
	*($6 + [84]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [84])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $52(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $155($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC _ZN8pandafun14apply_recvhashERKNS_8recvhashE (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [144])
	*([0] + [4]) = $5
	CALL require_auth(*($0))
	if ( ((int_64)*($0) == (int_64)-6222124003696921904) ){ goto $label$1 }
	CALL _ZN8pandafun10pausecheckEv()
	CALL _ZN8pandafun10blackcheckEy(*($0))
	
.LABEL $label$1
	*(($5 + [40])) = [0]
	*($5 + [24]) = (int_64)-1
	$3 = *($0 + [8])
	*($5 + [16]) = $3
	*($5 + [8]) = (int_64)-6222124003695979872
	*($5 + [32]) = (int_64)0
	$2 = CALL db_find_i64((int_64)-6222124003695979872, $3, (int_64)7615828862441619456, (int_64)0)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$11 }
	$2 = CALL $49(($5 + [8]), $2)
	CALL eosio_assert(((int_32)*($2 + [80]) == (int_32)($5 + [8])), [32])
	if ( ((int_64)*($0) != (int_64)-6222124003696921904) ){ goto $label$10 }
	*($5 + [48]) = $0
	CALL eosio_assert([1], [272])
	CALL $50(($5 + [8]), $2, ($5 + [48]))
	$1 = *($5 + [32])
	if ( $1 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$11
	$3 = *($0)
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)CALL $fimport$14()), [96])
	if ( ((int_64)$3 != (int_64)-6222124003696921904) ){ goto $label$9 }
	*(($2 = CALL $154([92])) + [80]) = ($5 + [8])
	*($2) = (int_64)0
	*(($2 + [68])) = *(($0 + [44]))
	*(($2 + [64])) = *(($0 + [40]))
	*(($2 + [60])) = *(($0 + [36]))
	*(($2 + [56])) = *(($0 + [32]))
	*(($2 + [52])) = *(($0 + [28]))
	*(($2 + [48])) = *(($0 + [24]))
	*(($2 + [44])) = *(($0 + [20]))
	*($2 + [40 align=1]) = *($0 + [16 align=1])
	*($2 + [72 align=1]) = *($0 + [48])
	CALL eosio_assert([1], [176])
	CALL memcpy(($5 + [48]), $2, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy((($5 + [48]) | [8]), ($2 + [8]), [32])
	CALL eosio_assert([1], [176])
	CALL memcpy((($5 + [48]) + [40]), ($2 + [40]), [32])
	CALL eosio_assert([1], [176])
	CALL memcpy((($5 + [48]) + [72]), ($2 + [72]), [8])
	$3 = *($2)
	$1 = CALL db_store_i64(*((($5 + [8]) + [8])), (int_64)7615828862441619456, (int_64)-6222124003695979872, $3, ($5 + [48]), [80])
	*($2 + [84]) = $1
	$0 = ($5 + [24])
	if ( (uint_64)($3 <= *($0)) ){ goto $label$12 }
	*($0) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	*($5 + [136]) = $2
	$3 = *($2)
	*($5 + [48]) = $3
	*($5 + [132]) = $1
	$0 = *((($5 + [8]) + [28]))
	if ( ((uint_32)$0 >= (uint_32)*((($5 + [8]) + [32]))) ){ goto $label$8 }
	*($0 + [8]) = $3
	*($0 + [16]) = $1
	*($5 + [136]) = [0]
	*($0) = $2
	*(($5 + [36])) = ($0 + [24])
	goto $label$7 
	
.LABEL $label$10
	*($5 + [48]) = $0
	CALL eosio_assert([1], [272])
	CALL $51(($5 + [8]), $2, ($5 + [48]))
	$1 = *($5 + [32])
	if ( $1 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$9
	*(($2 = CALL $154([92])) + [80]) = ($5 + [8])
	*($2) = (int_64)0
	*(($2 + [36])) = *(($0 + [44]))
	*(($2 + [32])) = *(($0 + [40]))
	*(($2 + [28])) = *(($0 + [36]))
	*(($2 + [24])) = *(($0 + [32]))
	*(($2 + [20])) = *(($0 + [28]))
	*(($2 + [16])) = *(($0 + [24]))
	*(($2 + [12])) = *(($0 + [20]))
	*($2 + [8 align=1]) = *($0 + [16 align=1])
	*($2 + [72 align=1]) = *($0 + [48])
	CALL eosio_assert([1], [176])
	CALL memcpy(($5 + [48]), $2, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy((($5 + [48]) | [8]), ($2 + [8]), [32])
	CALL eosio_assert([1], [176])
	CALL memcpy((($5 + [48]) + [40]), ($2 + [40]), [32])
	CALL eosio_assert([1], [176])
	CALL memcpy((($5 + [48]) + [72]), ($2 + [72]), [8])
	$3 = *($2)
	$1 = CALL db_store_i64(*((($5 + [8]) + [8])), (int_64)7615828862441619456, (int_64)-6222124003695979872, $3, ($5 + [48]), [80])
	*($2 + [84]) = $1
	$0 = (($5 + [8]) + [16])
	if ( (uint_64)($3 <= *($0)) ){ goto $label$13 }
	*($0) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	*($5 + [136]) = $2
	$3 = *($2)
	*($5 + [48]) = $3
	*($5 + [132]) = $1
	$0 = *((($5 + [8]) + [28]))
	if ( ((uint_32)$0 >= (uint_32)*((($5 + [8]) + [32]))) ){ goto $label$6 }
	*($0 + [8]) = $3
	*($0 + [16]) = $1
	*($5 + [136]) = [0]
	*($0) = $2
	*(($5 + [36])) = ($0 + [24])
	goto $label$5 
	
.LABEL $label$8
	CALL $52(($5 + [32]), ($5 + [136]), ($5 + [48]), ($5 + [132]))
	
.LABEL $label$7
	$0 = *($5 + [136])
	*($5 + [136]) = [0]
	if ( ($0 == 0) ){ goto $label$4 }
	CALL $155($0)
	$1 = *($5 + [32])
	if ( $1 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	CALL $52(($5 + [32]), ($5 + [136]), ($5 + [48]), ($5 + [132]))
	
.LABEL $label$5
	$0 = *($5 + [136])
	*($5 + [136]) = [0]
	if ( ($0 == 0) ){ goto $label$4 }
	CALL $155($0)
	
.LABEL $label$4
	$1 = *($5 + [32])
	if ( ($1 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($5 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$15 }
	
.LOOP $label$16:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$17 }
	CALL $155($2)
	
.LABEL $label$17
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$16 }
	$0 = *(($5 + [32]))
	goto $label$14 
	
.LABEL $label$15
	$0 = $1
	
.LABEL $label$14
	*($4) = $1
	CALL $155($0)
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [144])
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0)
	$3 = *($0 + [4])
	$6 = *($3)
	$5 = *($6 + [16])
	if ( ((int_64)$5 != (int_64)-1) ){ goto $label$1 }
	$5 = (int_64)0
	$4 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)7615829182807801856, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	CALL $42($6, $4)
	*($7 + [12]) = [0]
	*($7 + [8]) = $6
	$5 = *(*(CALL $46(($7 + [8])) + [4]))
	$5 = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($6 + [16])) = $5
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($5 <= (int_64)-2), [2992])
	*($1) = *(($6 + [16]))
	$6 = (*($3 + [4]) + (*(*($3 + [8])) << [5]))
	*(($1 + [64])) = *(($6 + [40]))
	*(($1 + [56])) = *(($6 + [32]))
	*(($1 + [48])) = *(($6 + [24]))
	*($1 + [40 align=1]) = *(($6 + [16]))
	*($1 + [72 align=1]) = *(*($3 + [4]) + [336])
	$3 = $8
	$6 = ($3 + [-80])
	*([0] + [4]) = $6
	CALL eosio_assert([1], [176])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy(($3 + [-72]), ($1 + [8]), [32])
	CALL eosio_assert([1], [176])
	CALL memcpy(($3 + [-40]), ($1 + [40]), [32])
	CALL eosio_assert([1], [176])
	CALL memcpy(($3 + [-8]), ($1 + [72]), [8])
	$5 = *($1)
	*($1 + [84]) = CALL db_store_i64(*($2 + [8]), (int_64)7615829182807801856, *(*($0 + [8])), $5, $6, [80])
	if ( (uint_64)($5 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [16])
}

int_32 .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [496])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $154([92])) + [80]) = $0
	CALL $47(($8 + [32]), $6)
	*($6 + [84]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [84])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $44(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $155($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC _ZN8pandafun15apply_recvhashsERKNS_9recvhashsE (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [176])
	*([0] + [4]) = $11
	CALL require_auth(*($0))
	if ( ((int_64)*($0) == (int_64)-6222124003696921904) ){ goto $label$1 }
	CALL _ZN8pandafun10pausecheckEv()
	CALL _ZN8pandafun10blackcheckEy(*($0))
	
.LABEL $label$1
	*(($11 + [56])) = [0]
	*($11 + [40]) = (int_64)-1
	$6 = *($0 + [8])
	*($11 + [32]) = $6
	*($11 + [24]) = (int_64)-6222124003695979872
	*($11 + [48]) = (int_64)0
	$10 = CALL db_lowerbound_i64((int_64)-6222124003695979872, $6, (int_64)7615829182807801856, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$7 }
	$10 = CALL $42(($11 + [24]), $10)
	$4 = ($11 + [136])
	$3 = ($11 + [104])
	$2 = (($11 + [64]) | [8])
	$6 = *($0 + [336])
	$1 = *($10 + [72 align=1])
	if ( ((int_64)*($0) != (int_64)-6222124003696921904) ){ goto $label$6 }
	if ( ((int_64)$1 != (int_64)$6) ){ goto $label$4 }
	$9 = [16]
	
.LOOP $label$8:
	$5 = ((int_32)$10 != (int_32)[0])
	CALL eosio_assert($5, [272])
	CALL eosio_assert(((int_32)*($10 + [80]) == (int_32)($11 + [24])), [320])
	CALL eosio_assert(((int_64)*($11 + [24]) == (int_64)CALL $fimport$14()), [368])
	$8 = ($0 + $9)
	*(($10 + [68])) = *(($8 + [28]))
	*(($10 + [64])) = *(($8 + [24]))
	*(($10 + [60])) = *(($8 + [20]))
	*(($10 + [56])) = *(($8 + [16]))
	*(($10 + [52])) = *(($8 + [12]))
	*(($10 + [48])) = *(($8 + [8]))
	*(($10 + [44])) = *(($8 + [4]))
	*($10 + [40 align=1]) = *($8)
	$6 = *($10)
	CALL eosio_assert([1], [432])
	CALL eosio_assert([1], [176])
	CALL memcpy(($11 + [64]), $10, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy($2, ($10 + [8]), [32])
	CALL eosio_assert([1], [176])
	CALL memcpy($3, ($10 + [40]), [32])
	CALL eosio_assert([1], [176])
	CALL memcpy($4, ($10 + [72]), [8])
	CALL db_update_i64(*($10 + [84]), (int_64)-6222124003695979872, ($11 + [64]), [80])
	$8 = (($11 + [24]) + [16])
	if ( (uint_64)($6 <= *($8)) ){ goto $label$9 }
	*($8) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	CALL eosio_assert($5, [2496])
	$8 = ($10 + [84])
	$10 = [0]
	$8 = CALL db_next_i64(*($8), ($11 + [64]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$10 }
	$10 = CALL $42(($11 + [24]), $8)
	
.LABEL $label$10
	$9 = ($9 + [32])
	if ( ((int_32)$9 != (int_32)[336]) ){ goto $label$8 }
	goto $label$2 
	
.LABEL $label$7
	if ( ((int_64)*($0) != (int_64)-6222124003696921904) ){ goto $label$5 }
	*($11 + [23]) = [0]
	$9 = (($11 + [24]) + [24])
	$2 = ($11 + [56])
	$4 = ($11 + [52])
	$6 = (int_64)-6222124003695979872
	
.LOOP $label$11:
	*($11 + [12]) = $0
	*((($11 + [8]) + [8])) = ($11 + [23])
	*($11 + [8]) = ($11 + [24])
	*($11 + [168]) = (int_64)-6222124003695979872
	CALL eosio_assert(((int_64)$6 == (int_64)CALL $fimport$14()), [96])
	*((($11 + [64]) + [8])) = ($11 + [168])
	*($11 + [68]) = ($11 + [8])
	*($11 + [64]) = ($11 + [24])
	*(($10 = CALL $154([92])) + [80]) = ($11 + [24])
	CALL $43(($11 + [64]), $10)
	*($11 + [160]) = $10
	$6 = *($10)
	*($11 + [64]) = $6
	$3 = *($10 + [84])
	*($11 + [156]) = $3
	$8 = *($4)
	if ( ((uint_32)$8 >= (uint_32)*($2)) ){ goto $label$13 }
	*($8 + [8]) = $6
	*($8 + [16]) = $3
	*($11 + [160]) = [0]
	*($8) = $10
	*($4) = ($8 + [24])
	goto $label$12 
	
.LABEL $label$13
	CALL $44($9, ($11 + [160]), ($11 + [64]), ($11 + [156]))
	
.LABEL $label$12
	$10 = *($11 + [160])
	*($11 + [160]) = [0]
	if ( ($10 == 0) ){ goto $label$14 }
	CALL $155($10)
	
.LABEL $label$14
	$10 = (*($11 + [23]) + [1])
	*($11 + [23]) = $10
	if ( ((uint_32)($10 & [255]) > (uint_32)[9]) ){ goto $label$2 }
	$6 = *($11 + [24])
	goto $label$11 
	
.LABEL $label$6
	if ( ((int_64)$1 != (int_64)$6) ){ goto $label$3 }
	$9 = [16]
	
.LOOP $label$15:
	$5 = ((int_32)$10 != (int_32)[0])
	CALL eosio_assert($5, [272])
	CALL eosio_assert(((int_32)*($10 + [80]) == (int_32)($11 + [24])), [320])
	CALL eosio_assert(((int_64)*($11 + [24]) == (int_64)CALL $fimport$14()), [368])
	$8 = ($0 + $9)
	*(($10 + [36])) = *(($8 + [28]))
	*(($10 + [32])) = *(($8 + [24]))
	*(($10 + [28])) = *(($8 + [20]))
	*(($10 + [24])) = *(($8 + [16]))
	*(($10 + [20])) = *(($8 + [12]))
	*(($10 + [16])) = *(($8 + [8]))
	*(($10 + [12])) = *(($8 + [4]))
	*($10 + [8 align=1]) = *($8)
	$6 = *($10)
	CALL eosio_assert([1], [432])
	CALL eosio_assert([1], [176])
	CALL memcpy(($11 + [64]), $10, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy($2, ($10 + [8]), [32])
	CALL eosio_assert([1], [176])
	CALL memcpy($3, ($10 + [40]), [32])
	CALL eosio_assert([1], [176])
	CALL memcpy($4, ($10 + [72]), [8])
	CALL db_update_i64(*($10 + [84]), (int_64)-6222124003695979872, ($11 + [64]), [80])
	$8 = (($11 + [24]) + [16])
	if ( (uint_64)($6 <= *($8)) ){ goto $label$16 }
	*($8) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	CALL eosio_assert($5, [2496])
	$8 = ($10 + [84])
	$10 = [0]
	$8 = CALL db_next_i64(*($8), ($11 + [64]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$17 }
	$10 = CALL $42(($11 + [24]), $8)
	
.LABEL $label$17
	$9 = ($9 + [32])
	if ( ((int_32)$9 != (int_32)[336]) ){ goto $label$15 }
	goto $label$2 
	
.LABEL $label$5
	*($11 + [23]) = [0]
	$9 = (($11 + [24]) + [24])
	$2 = ($11 + [56])
	$4 = ($11 + [52])
	$6 = (int_64)-6222124003695979872
	
.LOOP $label$18:
	*($11 + [12]) = $0
	*((($11 + [8]) + [8])) = ($11 + [23])
	*($11 + [8]) = ($11 + [24])
	*($11 + [168]) = (int_64)-6222124003695979872
	CALL eosio_assert(((int_64)$6 == (int_64)CALL $fimport$14()), [96])
	*((($11 + [64]) + [8])) = ($11 + [168])
	*($11 + [68]) = ($11 + [8])
	*($11 + [64]) = ($11 + [24])
	*(($10 = CALL $154([92])) + [80]) = ($11 + [24])
	CALL $45(($11 + [64]), $10)
	*($11 + [160]) = $10
	$6 = *($10)
	*($11 + [64]) = $6
	$3 = *($10 + [84])
	*($11 + [156]) = $3
	$8 = *($4)
	if ( ((uint_32)$8 >= (uint_32)*($2)) ){ goto $label$20 }
	*($8 + [8]) = $6
	*($8 + [16]) = $3
	*($11 + [160]) = [0]
	*($8) = $10
	*($4) = ($8 + [24])
	goto $label$19 
	
.LABEL $label$20
	CALL $44($9, ($11 + [160]), ($11 + [64]), ($11 + [156]))
	
.LABEL $label$19
	$10 = *($11 + [160])
	*($11 + [160]) = [0]
	if ( ($10 == 0) ){ goto $label$21 }
	CALL $155($10)
	
.LABEL $label$21
	$10 = (*($11 + [23]) + [1])
	*($11 + [23]) = $10
	if ( ((uint_32)($10 & [255]) > (uint_32)[9]) ){ goto $label$2 }
	$6 = *($11 + [24])
	goto $label$18 
	
.LABEL $label$4
	$7 = ($0 + [336])
	$9 = [16]
	
.LOOP $label$22:
	$5 = ((int_32)$10 != (int_32)[0])
	CALL eosio_assert($5, [272])
	CALL eosio_assert(((int_32)*($10 + [80]) == (int_32)($11 + [24])), [320])
	CALL eosio_assert(((int_64)*($11 + [24]) == (int_64)CALL $fimport$14()), [368])
	$8 = ($0 + $9)
	*(($10 + [68])) = *(($8 + [28]))
	*(($10 + [64])) = *(($8 + [24]))
	*(($10 + [60])) = *(($8 + [20]))
	*(($10 + [56])) = *(($8 + [16]))
	*(($10 + [52])) = *(($8 + [12]))
	*(($10 + [48])) = *(($8 + [8]))
	*(($10 + [44])) = *(($8 + [4]))
	*($10 + [40 align=1]) = *($8)
	$6 = *($10)
	$8 = ($10 + [8])
	CALL memset($8, [0], [32])
	*($10 + [72 align=1]) = *($7)
	CALL eosio_assert(((int_64)$6 == (int_64)*($10)), [432])
	CALL eosio_assert([1], [176])
	CALL memcpy(($11 + [64]), $10, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy($2, $8, [32])
	CALL eosio_assert([1], [176])
	CALL memcpy($3, ($10 + [40]), [32])
	CALL eosio_assert([1], [176])
	CALL memcpy($4, ($10 + [72]), [8])
	CALL db_update_i64(*($10 + [84]), (int_64)-6222124003695979872, ($11 + [64]), [80])
	$8 = (($11 + [24]) + [16])
	if ( (uint_64)($6 <= *($8)) ){ goto $label$23 }
	*($8) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$23
	CALL eosio_assert($5, [2496])
	$8 = ($10 + [84])
	$10 = [0]
	$8 = CALL db_next_i64(*($8), ($11 + [64]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$24 }
	$10 = CALL $42(($11 + [24]), $8)
	
.LABEL $label$24
	$9 = ($9 + [32])
	if ( ((int_32)$9 != (int_32)[336]) ){ goto $label$22 }
	goto $label$2 
	
.LABEL $label$3
	$7 = ($0 + [336])
	$9 = [16]
	
.LOOP $label$25:
	$5 = ((int_32)$10 != (int_32)[0])
	CALL eosio_assert($5, [272])
	CALL eosio_assert(((int_32)*($10 + [80]) == (int_32)($11 + [24])), [320])
	CALL eosio_assert(((int_64)*($11 + [24]) == (int_64)CALL $fimport$14()), [368])
	$8 = ($0 + $9)
	*(($10 + [36])) = *(($8 + [28]))
	*(($10 + [32])) = *(($8 + [24]))
	*(($10 + [28])) = *(($8 + [20]))
	*(($10 + [24])) = *(($8 + [16]))
	*(($10 + [20])) = *(($8 + [12]))
	*(($10 + [16])) = *(($8 + [8]))
	*(($10 + [12])) = *(($8 + [4]))
	*($10 + [8 align=1]) = *($8)
	$6 = *($10)
	$8 = ($10 + [40])
	CALL memset($8, [0], [32])
	*($10 + [72 align=1]) = *($7)
	CALL eosio_assert(((int_64)$6 == (int_64)*($10)), [432])
	CALL eosio_assert([1], [176])
	CALL memcpy(($11 + [64]), $10, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy($2, ($10 + [8]), [32])
	CALL eosio_assert([1], [176])
	CALL memcpy($3, $8, [32])
	CALL eosio_assert([1], [176])
	CALL memcpy($4, ($10 + [72]), [8])
	CALL db_update_i64(*($10 + [84]), (int_64)-6222124003695979872, ($11 + [64]), [80])
	$8 = (($11 + [24]) + [16])
	if ( (uint_64)($6 <= *($8)) ){ goto $label$26 }
	*($8) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$26
	CALL eosio_assert($5, [2496])
	$8 = ($10 + [84])
	$10 = [0]
	$8 = CALL db_next_i64(*($8), ($11 + [64]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$27 }
	$10 = CALL $42(($11 + [24]), $8)
	
.LABEL $label$27
	$9 = ($9 + [32])
	if ( ((int_32)$9 != (int_32)[336]) ){ goto $label$25 }
	
.LABEL $label$2
	$0 = *($11 + [48])
	if ( ($0 == 0) ){ goto $label$28 }
	$4 = ($11 + [52])
	$10 = *($4)
	if ( ((int_32)$10 == (int_32)$0) ){ goto $label$30 }
	
.LOOP $label$31:
	$10 = ($10 + [-24])
	$8 = *($10)
	*($10) = [0]
	if ( ($8 == 0) ){ goto $label$32 }
	CALL $155($8)
	
.LABEL $label$32
	if ( ((int_32)$0 != (int_32)$10) ){ goto $label$31 }
	$10 = *(($11 + [48]))
	goto $label$29 
	
.LABEL $label$30
	$10 = $0
	
.LABEL $label$29
	*($4) = $0
	CALL $155($10)
	
.LABEL $label$28
	*([0] + [4]) = ($11 + [176])
}

void .FUNC _ZN8pandafun9apply_buyERKNS_3buyE (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [144])
	*([0] + [4]) = $8
	$5 = *($0 + [40])
	if ( ($5 & [1]) ){ goto $label$2 }
	$5 = uint_32($5 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$5 = *(($0 + [44]))
	
.LABEL $label$1
	CALL eosio_assert(($5 <= [257]), [1936])
	CALL require_auth((int_64)-6222124003696921904)
	CALL _ZN8pandafun10pausecheckEv()
	CALL _ZN8pandafun10blackcheckEy(*($0 + [8]))
	*((($8 + [40]) + [32])) = [0]
	*($8 + [40]) = (int_64)-6222124003695979872
	*($8 + [56]) = (int_64)-1
	*($8 + [64]) = (int_64)0
	*($8 + [48]) = *($0 + [8])
	*(($8 + [32])) = [0]
	*($8) = (int_64)-6222124003695979872
	*($8 + [16]) = (int_64)-1
	*($8 + [24]) = (int_64)0
	$6 = *($0)
	*($8 + [8]) = $6
	$1 = (int_64)-6222124003695979872
	$5 = [0]
	$4 = CALL db_find_i64((int_64)-6222124003695979872, $6, (int_64)-4421664787520290816, *($0 + [16]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $31($8, $4)
	CALL eosio_assert(((int_32)*($5 + [56]) == (int_32)$8), [32])
	$1 = *($8 + [40])
	
.LABEL $label$3
	$4 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($4, [2816])
	CALL eosio_assert(((int_64)*(($0 + [32])) == (int_64)*(($5 + [48]))), [2864])
	CALL eosio_assert(((int_64)*($0 + [24]) >= (int_64)*($5 + [40])), [2928])
	CALL eosio_assert(((int_64)$1 == (int_64)CALL $fimport$14()), [96])
	*(($0 = CALL $154([52])) + [40]) = ($8 + [40])
	*($0) = *($5)
	*($0 + [8 align=1]) = *($5 + [8 align=1])
	$3 = ($0 + [16])
	CALL memcpy($3, ($5 + [16]), [24])
	CALL eosio_assert([1], [176])
	CALL memcpy(($8 + [96]), $0, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy((($8 + [96]) | [8]), ($0 + [8]), [8])
	*($8 + [88]) = [24]
	CALL eosio_assert([1], [176])
	CALL memcpy((($8 + [96]) + [16]), ($8 + [88]), [1])
	CALL eosio_assert([1], [176])
	CALL memcpy(($8 + [113]), $3, [24])
	$1 = *($0)
	$2 = CALL db_store_i64(*((($8 + [40]) + [8])), (int_64)-6222123794639618048, (int_64)-6222124003695979872, $1, ($8 + [96]), [41])
	*($0 + [44]) = $2
	$3 = (($8 + [40]) + [16])
	if ( (uint_64)($1 <= *($3)) ){ goto $label$4 }
	*($3) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($8 + [88]) = $0
	$1 = *($0)
	*($8 + [96]) = $1
	*($8 + [84]) = $2
	$7 = ($8 + [68])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($8 + [72]))) ){ goto $label$6 }
	*($3 + [8]) = $1
	*($3 + [16]) = $2
	*($8 + [88]) = [0]
	*($3) = $0
	*($7) = ($3 + [24])
	goto $label$5 
	
.LABEL $label$6
	CALL $29(($8 + [64]), ($8 + [88]), ($8 + [96]), ($8 + [84]))
	
.LABEL $label$5
	$0 = *($8 + [88])
	*($8 + [88]) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	CALL $155($0)
	
.LABEL $label$7
	CALL eosio_assert($4, [2448])
	CALL eosio_assert($4, [2496])
	$0 = CALL db_next_i64(*($5 + [60]), ($8 + [96]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$8 }
	CALL $31($8, $0)
	
.LABEL $label$8
	CALL $39($8, $5)
	$4 = *($8 + [24])
	if ( ($4 == 0) ){ goto $label$9 }
	$3 = ($8 + [28])
	$0 = *($3)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$13 }
	CALL $155($5)
	
.LABEL $label$13
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($8 + [24]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $4
	
.LABEL $label$10
	*($3) = $4
	CALL $155($0)
	
.LABEL $label$9
	$4 = *($8 + [64])
	if ( ($4 == 0) ){ goto $label$14 }
	$3 = ($8 + [68])
	$0 = *($3)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$16 }
	
.LOOP $label$17:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$18 }
	CALL $155($5)
	
.LABEL $label$18
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$17 }
	$0 = *(($8 + [64]))
	goto $label$15 
	
.LABEL $label$16
	$0 = $4
	
.LABEL $label$15
	*($3) = $4
	CALL $155($0)
	
.LABEL $label$14
	*([0] + [4]) = ($8 + [144])
}

int_32 .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [528])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[31]), [528])
	CALL memcpy(($1 + [8]), *($0 + [4]), [32])
	$2 = (*($0 + [4]) + [32])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[31]), [528])
	CALL memcpy(($1 + [40]), *($0 + [4]), [32])
	$2 = (*($0 + [4]) + [32])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $46 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [84]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [3120])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)7615829182807801856)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [3056])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [3056])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $42(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0)
	$3 = *($0 + [4])
	$6 = *($3)
	$5 = *($6 + [16])
	if ( ((int_64)$5 != (int_64)-1) ){ goto $label$1 }
	$5 = (int_64)0
	$4 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)7615829182807801856, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	CALL $42($6, $4)
	*($7 + [12]) = [0]
	*($7 + [8]) = $6
	$5 = *(*(CALL $46(($7 + [8])) + [4]))
	$5 = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($6 + [16])) = $5
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($5 <= (int_64)-2), [2992])
	*($1) = *(($6 + [16]))
	$6 = (*($3 + [4]) + (*(*($3 + [8])) << [5]))
	*(($1 + [32])) = *(($6 + [40]))
	*(($1 + [24])) = *(($6 + [32]))
	*(($1 + [16])) = *(($6 + [24]))
	*($1 + [8 align=1]) = *(($6 + [16]))
	*($1 + [72 align=1]) = *(*($3 + [4]) + [336])
	$3 = $8
	$6 = ($3 + [-80])
	*([0] + [4]) = $6
	CALL eosio_assert([1], [176])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy(($3 + [-72]), ($1 + [8]), [32])
	CALL eosio_assert([1], [176])
	CALL memcpy(($3 + [-40]), ($1 + [40]), [32])
	CALL eosio_assert([1], [176])
	CALL memcpy(($3 + [-8]), ($1 + [72]), [8])
	$5 = *($1)
	*($1 + [84]) = CALL db_store_i64(*($2 + [8]), (int_64)7615829182807801856, *(*($0 + [8])), $5, $6, [80])
	if ( (uint_64)($5 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $44 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $154(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $159($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $155($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $155($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC __lockfile (int_32 $0)
{
	int_32 $1
	return $1
}

int_32 .FUNC $166 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_64 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_64 $33
	int_64 $34
	int_64 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	$39 = (*([0] + [4]) - [8128])
	*([0] + [4]) = $39
	$12 = (($39 + [692]) + [11])
	$11 = (($39 + [704]) | [8])
	$10 = (($39 + [704]) | [9])
	$9 = ($39 + [7664])
	$8 = ([-2] - ($39 + [704]))
	$7 = (($39 + [692]) + [12])
	$6 = (($39 + [352]) + [54])
	$5 = (($39 + [352]) + [55])
	$30 = [0]
	$38 = [0]
	$32 = [0]
	
.LOOP $label$17:
	$38 = ($30 + $38)
	$37 = $1
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$16 }
	$1 = $37
	$30 = ($30 & [255])
	if ( ($30 == 0) ){ goto $label$20 }
	
.LOOP $label$21:
	if ( ((int_32)$30 == (int_32)[37]) ){ goto $label$19 }
	$1 = ($1 + [1])
	$30 = (*($1) & [255])
	if ( $30 ){ goto $label$21 }
	
.LABEL $label$20
	$30 = $1
	goto $label$18 
	
.LABEL $label$19
	$30 = $1
	
.LOOP $label$22:
	if ( ((int_32)*(($1 + [1])) != (int_32)[37]) ){ goto $label$18 }
	$30 = ($30 + [1])
	$1 = ($1 + [2])
	if ( ((int_32)*($1) == (int_32)[37]) ){ goto $label$22 }
	
.LABEL $label$18
	$13 = ([2147483647] - $38)
	$30 = ($30 - $37)
	if ( ((int_32)$30 > (int_32)$13) ){ goto $label$15 }
	if ( ($0 == 0) ){ goto $label$23 }
	if ( (*($0) & [32]) ){ goto $label$23 }
	CALL __fwritex($37, $30, $0)
	
.LABEL $label$23
	if ( $30 ){ goto $label$24 }
	$36 = ($1 + [1])
	$27 = [-1]
	$30 = *($1 + [1])
	$17 = ($30 + [-48])
	if ( ((uint_32)$17 > (uint_32)[9]) ){ goto $label$25 }
	$1 = ((int_32)*($1 + [2]) == (int_32)[36])
	$36 = ( ($1 + [3]) ? $36 : $1 )
	$30 = *($36)
	$27 = ( $17 ? [-1] : $1 )
	$32 = ( [1] ? $32 : $1 )
	
.LABEL $label$25
	$14 = [0]
	$1 = (int_32(($30 << [24]) >> [24]) + [-32])
	if ( ((uint_32)$1 > (uint_32)[31]) ){ goto $label$26 }
	$14 = [0]
	
.LOOP $label$27:
	if ( ((([1] << $1) & [75913]) == 0) ){ goto $label$26 }
	$14 = (([1] << (int_32(($30 << [24]) >> [24]) + [-32])) | $14)
	$36 = ($36 + [1])
	$30 = *($36)
	$1 = ($30 + [-32])
	if ( ($1 <= [32]) ){ goto $label$27 }
	
.LABEL $label$26
	if ( ((int_32)($30 & [255]) != (int_32)[42]) ){ goto $label$33 }
	$1 = (*($36 + [1]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$32 }
	if ( ((int_32)*($36 + [2]) != (int_32)[36]) ){ goto $label$32 }
	*(($4 + ($1 << [2]))) = [10]
	$17 = ($36 + [3])
	$32 = [1]
	$15 = *((($3 + (*(($36 + [1])) << [4])) + [-768]))
	if ( ((int_32)$15 > (int_32)[-1]) ){ goto $label$28 }
	goto $label$31 
	
.LABEL $label$33
	$15 = [0]
	$30 = (int_32(($30 << [24]) >> [24]) + [-48])
	if ( ((uint_32)$30 > (uint_32)[9]) ){ goto $label$30 }
	$1 = [0]
	$17 = $36
	
.LOOP $label$34:
	$15 = [-1]
	if ( ((uint_32)$1 > (uint_32)[214748364]) ){ goto $label$35 }
	$1 = ((int_32)$1 * (int_32)[10])
	$15 = ( [-1] ? ($1 + $30) : ((int_32)$30 > (int_32)([2147483647] - $1)) )
	
.LABEL $label$35
	$1 = $15
	$17 = ($17 + [1])
	$30 = (*($17) + [-48])
	if ( ($30 <= [10]) ){ goto $label$34 }
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$28 }
	goto $label$15 
	
.LABEL $label$32
	if ( $32 ){ goto $label$3 }
	$17 = ($36 + [1])
	if ( ($0 == 0) ){ goto $label$29 }
	$1 = *($2)
	*($2) = ($1 + [4])
	$32 = [0]
	$15 = *($1)
	if ( ((int_32)$15 > (int_32)[-1]) ){ goto $label$28 }
	
.LABEL $label$31
	$15 = ([0] - $15)
	$14 = ($14 | [8192])
	goto $label$28 
	
.LABEL $label$30
	$17 = $36
	goto $label$28 
	
.LABEL $label$29
	$32 = [0]
	$15 = [0]
	
.LABEL $label$28
	$30 = [0]
	$36 = [-1]
	if ( ((int_32)*($17) != (int_32)[46]) ){ goto $label$42 }
	$36 = *($17 + [1])
	if ( ((int_32)$36 != (int_32)[42]) ){ goto $label$41 }
	$1 = (*($17 + [2]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$40 }
	if ( ((int_32)*($17 + [3]) != (int_32)[36]) ){ goto $label$40 }
	*(($4 + ($1 << [2]))) = [10]
	$1 = ($17 + [4])
	$36 = *((($3 + (*(($17 + [2])) << [4])) + [-768]))
	goto $label$37 
	
.LABEL $label$42
	$1 = $17
	$16 = [0]
	goto $label$36 
	
.LABEL $label$41
	$1 = ($17 + [1])
	$31 = ($36 + [-48])
	if ( ((uint_32)$31 > (uint_32)[9]) ){ goto $label$39 }
	$17 = [0]
	
.LOOP $label$43:
	$36 = [-1]
	if ( ((uint_32)$17 > (uint_32)[214748364]) ){ goto $label$44 }
	$17 = ((int_32)$17 * (int_32)[10])
	$36 = ( [-1] ? ($17 + $31) : ((int_32)$31 > (int_32)([2147483647] - $17)) )
	
.LABEL $label$44
	$16 = [1]
	$17 = $36
	$1 = ($1 + [1])
	$31 = (*($1) + [-48])
	if ( ($31 <= [10]) ){ goto $label$43 }
	goto $label$36 
	
.LABEL $label$40
	if ( $32 ){ goto $label$3 }
	$1 = ($17 + [2])
	if ( ($0 == 0) ){ goto $label$38 }
	$17 = *($2)
	*($2) = ($17 + [4])
	$36 = *($17)
	goto $label$37 
	
.LABEL $label$39
	$16 = [1]
	$36 = [0]
	goto $label$36 
	
.LABEL $label$38
	$36 = [0]
	
.LABEL $label$37
	$16 = ((int_32)uint_32($36 >> [31]) ^ (int_32)[1])
	
.LABEL $label$36
	
.LOOP $label$45:
	$17 = $30
	$30 = (*($1) + [-65])
	if ( ((uint_32)$30 > (uint_32)[57]) ){ goto $label$3 }
	$1 = ($1 + [1])
	$30 = *(((((int_32)$17 * (int_32)[58]) + $30) + [15792]))
	if ( (($30 + [-1]) <= [8]) ){ goto $label$45 }
	if ( ($30 == 0) ){ goto $label$3 }
	if ( ((int_32)$30 != (int_32)[27]) ){ goto $label$49 }
	if ( ((int_32)$27 <= (int_32)[-1]) ){ goto $label$48 }
	goto $label$3 
	
.LABEL $label$49
	if ( ((int_32)$27 < (int_32)[0]) ){ goto $label$47 }
	*(($4 + ($27 << [2]))) = $30
	$30 = ($3 + ($27 << [4]))
	*($39 + [428]) = *(($30 + [12]))
	*($39 + [424]) = *(($30 + [8]))
	*($39 + [420]) = *(($30 + [4]))
	*($39 + [416]) = *($30)
	
.LABEL $label$48
	if ( $0 ){ goto $label$46 }
	$30 = [0]
	goto $label$24 
	
.LABEL $label$47
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $170(($39 + [416]), $30, $2)
	
.LABEL $label$46
	$31 = ($14 & [-65537])
	$18 = ( $31 ? $14 : ($14 & [8192]) )
	$26 = [0]
	$24 = [16272]
	$30 = *(($1 + [-1]))
	$29 = ( ( ($30 & [-33]) ? $30 : ((int_32)($30 & [15]) == (int_32)[3]) ) ? $30 : $17 )
	$30 = ($29 + [-65])
	if ( ((uint_32)$30 > (uint_32)[55]) ){ goto $label$80 }
	$14 = $5
	goto $label$111 
	
.LABEL $label$111
	if ( ((int_32)$36 > (int_32)[-1]) ){ goto $label$112 }
	if ( $16 ){ goto $label$15 }
	
.LABEL $label$112
	$35 = *($39 + [424])
	$23 = *($39 + [416])
	*($39 + [748]) = [0]
	if ( (CALL __signbitl($23, $35) == 0) ){ goto $label$113 }
	$35 = ((int_64)$35 ^ (int_64)-9223372036854775808)
	$20 = [1]
	$19 = [16304]
	goto $label$108 
	
.LABEL $label$113
	if ( ($18 & [2048]) ){ goto $label$109 }
	$20 = ($18 & [1])
	$19 = ( [16310] ? [16305] : $20 )
	goto $label$108 
	
.LABEL $label$110
	$35 = *($39 + [416])
	if ( ((int_64)$35 <= (int_64)-1) ){ goto $label$92 }
	if ( ($18 & [2048]) ){ goto $label$88 }
	$26 = ($18 & [1])
	$24 = ( [16274] ? [16272] : $26 )
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$109
	$20 = [1]
	$19 = [16307]
	
.LABEL $label$108
	if ( ((int_32)CALL __fpclassifyl($23, $35) <= (int_32)[1]) ){ goto $label$115 }
	CALL frexpl(($39 + [320]), $23, $35, ($39 + [748]))
	$23 = *($39 + [328])
	$35 = *($39 + [320])
	CALL __addtf3(($39 + [304]), $35, $23, $35, $23)
	$23 = *((($39 + [304]) + [8]))
	$35 = *($39 + [304])
	if ( (CALL __eqtf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$116 }
	*($39 + [748]) = (*($39 + [748]) + [-1])
	
.LABEL $label$116
	$21 = ($29 | [32])
	if ( ((int_32)$21 != (int_32)[97]) ){ goto $label$114 }
	$37 = ($29 & [32])
	$24 = ( ($19 + [9]) ? $19 : $37 )
	if ( ((uint_32)$36 > (uint_32)[26]) ){ goto $label$77 }
	if ( (([27] - $36) == 0) ){ goto $label$77 }
	$30 = ($36 + [-27])
	$34 = (int_64)4612248968380809216
	$33 = (int_64)0
	
.LOOP $label$117:
	CALL __multf3(($39 + [208]), $33, $34, (int_64)0, (int_64)4612530443357519872)
	$34 = *((($39 + [208]) + [8]))
	$33 = *($39 + [208])
	$30 = ($30 + [1])
	if ( $30 ){ goto $label$117 }
	if ( ((int_32)*($24) != (int_32)[45]) ){ goto $label$78 }
	CALL __subtf3(($39 + [160]), $35, ((int_64)$23 ^ (int_64)-9223372036854775808), $33, $34)
	CALL __addtf3(($39 + [144]), $33, $34, *($39 + [160]), *((($39 + [160]) + [8])))
	$23 = ((int_64)*((($39 + [144]) + [8])) ^ (int_64)-9223372036854775808)
	$35 = *($39 + [144])
	goto $label$77 
	
.LABEL $label$115
	$16 = CALL __unordtf2($23, $35, $23, $35)
	$37 = ($20 + [3])
	if ( ($18 & [8192]) ){ goto $label$93 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$93 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$95 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$118:
	if ( (($30 & [1]) == 0) ){ goto $label$119 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$119
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$118 }
	if ( $14 ){ goto $label$93 }
	$31 = ($31 & [255])
	goto $label$94 
	
.LABEL $label$114
	$30 = ((int_32)$36 < (int_32)[0])
	if ( (CALL __netf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$90 }
	CALL __multf3(($39 + [288]), $35, $23, (int_64)0, (int_64)4619285842798575616)
	$31 = (*($39 + [748]) + [-28])
	*($39 + [748]) = $31
	$23 = *((($39 + [288]) + [8]))
	$35 = *($39 + [288])
	goto $label$89 
	
.LABEL $label$107
	$35 = *($39 + [416])
	*((($39 + [344]) + [4])) = [0]
	*($39 + [344]) = $35
	*($39 + [416]) = ($39 + [344])
	$36 = [-1]
	$37 = ($39 + [344])
	goto $label$105 
	
.LABEL $label$106
	$37 = *($39 + [416])
	if ( ($36 == 0) ){ goto $label$74 }
	
.LABEL $label$105
	$30 = [0]
	$14 = $37
	$17 = [0]
	
.LOOP $label$121:
	$31 = *($14)
	if ( ($31 == 0) ){ goto $label$120 }
	$17 = CALL wctomb(($39 + [340]), $31)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$120 }
	if ( ((uint_32)$17 > (uint_32)($36 - $30)) ){ goto $label$120 }
	$14 = ($14 + [4])
	$30 = ($17 + $30)
	if ( ((uint_32)$36 > (uint_32)$30) ){ goto $label$121 }
	
.LABEL $label$120
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$2 }
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$15 }
	$16 = ($18 & [73728])
	if ( $16 ){ goto $label$72 }
	goto $label$73 
	
.LABEL $label$104
	*((($39 + [352]) + [54])) = *($39 + [416])
	$36 = [1]
	$37 = $6
	$14 = $5
	$18 = $31
	goto $label$79 
	
.LABEL $label$103
	$37 = CALL strerror(*(CALL $164()))
	goto $label$97 
	
.LABEL $label$102
	$30 = ($17 & [255])
	if ( ((uint_32)$30 > (uint_32)[7]) ){ goto $label$56 }
	goto $label$122 
	
.LABEL $label$122
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$101
	$37 = $5
	$35 = *($39 + [416])
	if ( (int_64)($35 == 0) ){ goto $label$123 }
	$37 = $5
	
.LOOP $label$124:
	*(($37 = ($37 + [-1]))) = ((int_64)((int_64)$35 & (int_64)7) | (int_64)48)
	$35 = (uint_64)$35 >> (uint_64)(int_64)3
	if ( ((int_64)$35) != (int_64)0) ){ goto $label$124 }
	
.LABEL $label$123
	if ( ($18 & [8]) ){ goto $label$84 }
	$26 = [0]
	$24 = [16272]
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$100
	$36 = ( $36 ? [8] : ((uint_32)$36 > (uint_32)[8]) )
	$18 = ($18 | [8])
	$29 = [120]
	
.LABEL $label$99
	$26 = [0]
	$24 = [16272]
	$35 = *($39 + [416])
	if ( (int_64)($35 == 0) ){ goto $label$125 }
	$30 = ($29 & [32])
	$37 = $5
	
.LOOP $label$126:
	*(($37 = ($37 + [-1]))) = (*((((CASTING uint_32)(uint_64 $35) & [15]) + [16256])) | $30)
	$35 = (uint_64)$35 >> (uint_64)(int_64)4
	if ( ((int_64)$35) != (int_64)0) ){ goto $label$126 }
	if ( (($18 & [8]) == 0) ){ goto $label$83 }
	if ( (int_64)(*($39 + [416]) == 0) ){ goto $label$83 }
	$24 = (int_32($29 >> [4]) + [16272])
	$26 = [2]
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$125
	$37 = $5
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$98
	$30 = *($39 + [416])
	$37 = ( $30 ? [16288] : $30 )
	
.LABEL $label$97
	$26 = [0]
	$30 = CALL strnlen($37, ( [2147483647] ? $36 : ((int_32)$36 < (int_32)[0]) ))
	$14 = ($37 + $30)
	if ( ((int_32)$36 <= (int_32)[-1]) ){ goto $label$91 }
	$18 = $31
	$36 = $30
	goto $label$79 
	
.LABEL $label$96
	$26 = [0]
	$24 = [16272]
	$35 = *($39 + [416])
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$95
	if ( $17 ){ goto $label$93 }
	
.LABEL $label$94
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$93
	$30 = *($0)
	if ( ($30 & [32]) ){ goto $label$127 }
	CALL __fwritex($19, $20, $0)
	$30 = *($0)
	
.LABEL $label$127
	if ( ($30 & [32]) ){ goto $label$128 }
	$30 = uint_32(($29 & [32]) >> [5])
	CALL __fwritex(( ( [16368] ? [16384] : $30 ) ? ( [16336] ? [16352] : $30 ) : $16 ), [3], $0)
	
.LABEL $label$128
	if ( ((int_32)($18 & [73728]) != (int_32)[8192]) ){ goto $label$129 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$129 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$131 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$132:
	if ( (($30 & [1]) == 0) ){ goto $label$133 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$133
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$132 }
	if ( $14 ){ goto $label$129 }
	$31 = ($31 & [255])
	goto $label$130 
	
.LABEL $label$131
	if ( $17 ){ goto $label$129 }
	
.LABEL $label$130
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$129
	$30 = ( $15 ? $37 : ((int_32)$15 > (int_32)$37) )
	goto $label$50 
	
.LABEL $label$92
	$35 = (int_64)
	*($39 + [416]) = $35((int_64)0 - $35))
	$26 = [1]
	$24 = [16272]
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$91
	$18 = $31
	$36 = $30
	if ( (*($14) == 0) ){ goto $label$79 }
	goto $label$15 
	
.LABEL $label$90
	$31 = *($39 + [748])
	
.LABEL $label$89
	$28 = ( [6] ? $36 : $30 )
	$22 = ( ($39 + [752]) ? $9 : ((int_32)$31 < (int_32)[0]) )
	$36 = $22
	
.LOOP $label$134:
	$30 = CALL __fixunstfsi($35, $23)
	CALL __floatunsitf(($39 + [272]), $30)
	CALL __subtf3(($39 + [256]), $35, $23, *($39 + [272]), *((($39 + [272]) + [8])))
	CALL __multf3(($39 + [240]), *($39 + [256]), *((($39 + [256]) + [8])), (int_64)0, (int_64)4619810130798575616)
	*($36) = $30
	$36 = ($36 + [4])
	$23 = *((($39 + [240]) + [8]))
	$35 = *($39 + [240])
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$134 }
	if ( ((int_32)$31 < (int_32)[1]) ){ goto $label$137 }
	$17 = $22
	
.LOOP $label$138:
	$14 = ( $31 ? [29] : ((int_32)$31 < (int_32)[29]) )
	$30 = ($36 + [-4])
	if ( ($30 <= $17) ){ goto $label$139 }
	$23 = (CASTING uint_64)(uint_32 $14)
	$35 = (int_64)0
	
.LOOP $label$140:
	$35 = ((int_64)((int_64)*($30) << (int_64)$23) + (int_64)((int_64)$35 & (int_64)4294967295))
	*($30) = ((uint_64)$35 % (uint_64)(int_64)1000000000)
	$35 = ((uint_64)$35 / (uint_64)(int_64)1000000000)
	$30 = ($30 + [-4])
	if ( ((uint_32)$30 >= (uint_32)$17) ){ goto $label$140 }
	$30 = (CASTING uint_32)(uint_64 $35)
	if ( ($30 == 0) ){ goto $label$139 }
	*(($17 = ($17 + [-4]))) = $30
	
.LABEL $label$139
	
.LOOP $label$142:
	$30 = $36
	if ( ((uint_32)$30 <= (uint_32)$17) ){ goto $label$141 }
	$36 = ($30 + [-4])
	if ( (*($36) == 0) ){ goto $label$142 }
	
.LABEL $label$141
	$36 = $30
	$31 = ($31 - $14)
	if ( ((int_32)$31 > (int_32)[0]) ){ goto $label$138 }
	*($39 + [748]) = $31
	if ( ((int_32)$31 > (int_32)[-1]) ){ goto $label$135 }
	goto $label$136 
	
.LABEL $label$137
	$30 = $36
	$17 = $22
	if ( ((int_32)$31 > (int_32)[-1]) ){ goto $label$135 }
	
.LABEL $label$136
	$24 = (((uint_32)($28 + [45]) / (uint_32)[9]) + [1])
	if ( ((int_32)$21 != (int_32)[102]) ){ goto $label$144 }
	$25 = ($22 + ($24 << [2]))
	
.LOOP $label$145:
	$36 = ([0] - $31)
	$16 = ( $36 ? [9] : ((int_32)$36 < (int_32)[9]) )
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$147 }
	$27 = uint_32([1000000000] >> $16)
	$26 = (([1] << $16) + [-1])
	$14 = [0]
	$36 = $17
	
.LOOP $label$148:
	$37 = *($36)
	*($36) = (uint_32($37 >> $16) + $14)
	$14 = ((int_32)($37 & $26) * (int_32)$27)
	$36 = ($36 + [4])
	if ( ($36 <= $30) ){ goto $label$148 }
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	if ( ($14 == 0) ){ goto $label$146 }
	*($30) = $14
	$30 = ($30 + [4])
	goto $label$146 
	
.LABEL $label$147
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	
.LABEL $label$146
	$30 = ( $25 ? $30 : ((int_32)int_32(($30 - $22) >> [2]) > (int_32)$24) )
	$31 = ($16 + $31)
	if ( ((int_32)$31 < (int_32)[0]) ){ goto $label$145 }
	goto $label$143 
	
.LABEL $label$144
	
.LOOP $label$149:
	$36 = ([0] - $31)
	$16 = ( $36 ? [9] : ((int_32)$36 < (int_32)[9]) )
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$151 }
	$27 = uint_32([1000000000] >> $16)
	$26 = (([1] << $16) + [-1])
	$14 = [0]
	$36 = $17
	
.LOOP $label$152:
	$37 = *($36)
	*($36) = (uint_32($37 >> $16) + $14)
	$14 = ((int_32)($37 & $26) * (int_32)$27)
	$36 = ($36 + [4])
	if ( ($36 <= $30) ){ goto $label$152 }
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	if ( ($14 == 0) ){ goto $label$150 }
	*($30) = $14
	$30 = ($30 + [4])
	goto $label$150 
	
.LABEL $label$151
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	
.LABEL $label$150
	$30 = ( ($17 + ($24 << [2])) ? $30 : ((int_32)int_32(($30 - $17) >> [2]) > (int_32)$24) )
	$31 = ($16 + $31)
	if ( ((int_32)$31 < (int_32)[0]) ){ goto $label$149 }
	
.LABEL $label$143
	*($39 + [748]) = $31
	
.LABEL $label$135
	$36 = [0]
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$153 }
	$36 = ((int_32)int_32(($22 - $17) >> [2]) * (int_32)[9])
	$37 = *($17)
	if ( ($37 <= [10]) ){ goto $label$153 }
	$14 = [10]
	
.LOOP $label$154:
	$36 = ($36 + [1])
	$14 = ((int_32)$14 * (int_32)[10])
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$154 }
	
.LABEL $label$153
	$16 = ((int_32)$21 == (int_32)[103])
	$14 = (($28 - ( $36 ? [0] : ((int_32)$21 != (int_32)[102]) )) - (((int_32)$28 != (int_32)[0]) & $16))
	if ( ((int_32)$14 >= (int_32)(((int_32)int_32(($30 - $22) >> [2]) * (int_32)[9]) + [-9])) ){ goto $label$155 }
	$37 = ($14 + [147456])
	$24 = ($22 + (((int_32)$37 / (int_32)[9]) << [2]))
	$31 = ($24 + [-65532])
	$14 = [10]
	$37 = ((int_32)$37 % (int_32)[9])
	if ( ((int_32)($37 + [1]) > (int_32)[8]) ){ goto $label$156 }
	$37 = ([8] - $37)
	$14 = [10]
	
.LOOP $label$157:
	$14 = ((int_32)$14 * (int_32)[10])
	$37 = ($37 + [-1])
	if ( $37 ){ goto $label$157 }
	
.LABEL $label$156
	$27 = *($31)
	$37 = ((uint_32)$27 % (uint_32)$14)
	$26 = ($31 + [4])
	if ( ((int_32)$26 != (int_32)$30) ){ goto $label$159 }
	if ( ($37 == 0) ){ goto $label$158 }
	
.LABEL $label$159
	if ( (((uint_32)$27 / (uint_32)$14) & [1]) ){ goto $label$161 }
	$35 = (int_64)4643211215818981376
	$23 = (int_64)0
	if ( ((uint_32)$31 <= (uint_32)$17) ){ goto $label$160 }
	if ( ((int_32)$14 != (int_32)[1000000000]) ){ goto $label$160 }
	if ( ((*(($31 + [-4])) & [1]) == 0) ){ goto $label$160 }
	
.LABEL $label$161
	$35 = (int_64)4643211215818981376
	$23 = (int_64)1
	
.LABEL $label$160
	$34 = (int_64)4611123068473966592
	$25 = ((int_32)$14 / (int_32)[2])
	if ( ($37 <= $25) ){ goto $label$162 }
	$34 = ( ( (int_64)4611404543450677248 ? (int_64)4611545280939032576 : ((int_32)$37 == (int_32)$25) ) ? (int_64)4611545280939032576 : ((int_32)$26 == (int_32)$30) )
	
.LABEL $label$162
	if ( ($20 == 0) ){ goto $label$163 }
	if ( ((int_32)*($19) != (int_32)[45]) ){ goto $label$163 }
	$34 = ((int_64)$34 ^ (int_64)-9223372036854775808)
	$35 = ((int_64)$35 ^ (int_64)-9223372036854775808)
	
.LABEL $label$163
	CALL __addtf3(($39 + [224]), $23, $35, (int_64)0, $34)
	$37 = ($27 - $37)
	*($31) = $37
	if ( (CALL __eqtf2(*($39 + [224]), *((($39 + [224]) + [8])), $23, $35) == 0) ){ goto $label$158 }
	$36 = ($37 + $14)
	*($31) = $36
	if ( ($36 <= [1000000000]) ){ goto $label$164 }
	$36 = ($24 + [-65536])
	
.LOOP $label$165:
	*(($36 + [4])) = [0]
	if ( ((uint_32)$36 >= (uint_32)$17) ){ goto $label$166 }
	*(($17 = ($17 + [-4]))) = [0]
	
.LABEL $label$166
	$14 = (*($36) + [1])
	*($36) = $14
	$36 = ($36 + [-4])
	if ( ((uint_32)$14 > (uint_32)[999999999]) ){ goto $label$165 }
	$31 = ($36 + [4])
	
.LABEL $label$164
	$36 = ((int_32)int_32(($22 - $17) >> [2]) * (int_32)[9])
	$37 = *($17)
	if ( ($37 <= [10]) ){ goto $label$158 }
	$14 = [10]
	
.LOOP $label$167:
	$36 = ($36 + [1])
	$14 = ((int_32)$14 * (int_32)[10])
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$167 }
	
.LABEL $label$158
	$14 = ($31 + [4])
	$30 = ( $14 ? $30 : ((uint_32)$30 > (uint_32)$14) )
	
.LABEL $label$155
	$31 = ([0] - $36)
	
.LOOP $label$171:
	$14 = $30
	if ( ((uint_32)$14 <= (uint_32)$17) ){ goto $label$170 }
	$30 = ($14 + [-4])
	if ( (*($30) == 0) ){ goto $label$171 }
	$27 = [1]
	if ( $16 ){ goto $label$169 }
	goto $label$168 
	
.LABEL $label$170
	$27 = [0]
	if ( ($16 == 0) ){ goto $label$168 }
	
.LABEL $label$169
	$30 = (($28 == 0) + $28)
	if ( ((int_32)$30 <= (int_32)$36) ){ goto $label$76 }
	if ( ((int_32)$36 < (int_32)[-4]) ){ goto $label$76 }
	$29 = ($29 + [-1])
	$28 = (($30 + [-1]) - $36)
	$16 = ($18 & [8])
	if ( ($16 == 0) ){ goto $label$75 }
	goto $label$68 
	
.LABEL $label$168
	$16 = ($18 & [8])
	goto $label$68 
	
.LABEL $label$88
	$26 = [1]
	$24 = [16273]
	if ( (uint_64)($35 <= (int_64)4294967296) ){ goto $label$86 }
	
.LABEL $label$87
	$37 = $5
	
.LOOP $label$172:
	*(($37 = ($37 + [-1]))) = ((int_64)((uint_64)$35 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ((uint_64)$35 > (uint_64)(int_64)42949672959)
	$23 = ((uint_64)$35 / (uint_64)(int_64)10)
	$35 = $23
	if ( $30 ){ goto $label$172 }
	goto $label$85 
	
.LABEL $label$86
	$23 = $35
	$37 = $5
	
.LABEL $label$85
	$30 = (CASTING uint_32)(uint_64 $23)
	if ( ($30 == 0) ){ goto $label$83 }
	
.LOOP $label$173:
	*(($37 = ($37 + [-1]))) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$17 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $17 ){ goto $label$173 }
	goto $label$83 
	
.LABEL $label$84
	$30 = ($5 - $37)
	$24 = ( [16272] ? [16277] : ((int_32)$36 > (int_32)$30) )
	$26 = ((int_32)$36 <= (int_32)$30)
	
.LABEL $label$83
	if ( ($16 == 0) ){ goto $label$81 }
	
.LABEL $label$82
	if ( ((int_32)$36 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$81
	$18 = ( ($18 & [-65537]) ? $18 : ((int_32)$36 > (int_32)[-1]) )
	$35 = *($39 + [416])
	if ( $36 ){ goto $label$174 }
	if ( ((int_64)($35 == 0) == 0) ){ goto $label$174 }
	$37 = $5
	$14 = $5
	$36 = [0]
	goto $label$79 
	
.LABEL $label$174
	$30 = ((int_64)($35 == 0) + ($5 - $37))
	$36 = ( $36 ? $30 : ((int_32)$36 > (int_32)$30) )
	
.LABEL $label$80
	$14 = $5
	
.LABEL $label$79
	$29 = ($14 - $37)
	$28 = ( $29 ? $36 : ((int_32)$36 < (int_32)$29) )
	if ( ((int_32)$28 > (int_32)([2147483647] - $26)) ){ goto $label$15 }
	$27 = ($26 + $28)
	$30 = ( $27 ? $15 : ((int_32)$15 < (int_32)$27) )
	if ( ((int_32)$30 > (int_32)$13) ){ goto $label$15 }
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$175 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$175 }
	$17 = ($22 <= [256])
	$22 = ($30 - $27)
	CALL memset(($39 + [432]), [32], ( $22 ? [256] : $17 ))
	$31 = *($0)
	$14 = ($31 & [32])
	if ( $17 ){ goto $label$177 }
	$17 = ($14 == 0)
	$14 = $22
	
.LOOP $label$178:
	if ( (($17 & [1]) == 0) ){ goto $label$179 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$31 = *($0)
	
.LABEL $label$179
	$16 = ($31 & [32])
	$17 = ($16 == 0)
	$14 = ($14 + [-256])
	if ( ((uint_32)$14 > (uint_32)[255]) ){ goto $label$178 }
	if ( $16 ){ goto $label$175 }
	$22 = ($22 & [255])
	goto $label$176 
	
.LABEL $label$177
	if ( $14 ){ goto $label$175 }
	
.LABEL $label$176
	CALL __fwritex(($39 + [432]), $22, $0)
	
.LABEL $label$175
	if ( (*($0) & [32]) ){ goto $label$180 }
	CALL __fwritex($24, $26, $0)
	
.LABEL $label$180
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$181 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$181 }
	$17 = ($26 <= [256])
	$26 = ($30 - $27)
	CALL memset(($39 + [432]), [48], ( $26 ? [256] : $17 ))
	$31 = *($0)
	$14 = ($31 & [32])
	if ( $17 ){ goto $label$183 }
	$17 = ($14 == 0)
	$14 = $26
	
.LOOP $label$184:
	if ( (($17 & [1]) == 0) ){ goto $label$185 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$31 = *($0)
	
.LABEL $label$185
	$16 = ($31 & [32])
	$17 = ($16 == 0)
	$14 = ($14 + [-256])
	if ( ((uint_32)$14 > (uint_32)[255]) ){ goto $label$184 }
	if ( $16 ){ goto $label$181 }
	$26 = ($26 & [255])
	goto $label$182 
	
.LABEL $label$183
	if ( $14 ){ goto $label$181 }
	
.LABEL $label$182
	CALL __fwritex(($39 + [432]), $26, $0)
	
.LABEL $label$181
	if ( ((int_32)$29 >= (int_32)$36) ){ goto $label$186 }
	$17 = ($16 <= [256])
	$16 = ($28 - $29)
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$188 }
	$17 = ($36 == 0)
	$36 = $16
	
.LOOP $label$189:
	if ( (($17 & [1]) == 0) ){ goto $label$190 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$190
	$31 = ($14 & [32])
	$17 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$189 }
	if ( $31 ){ goto $label$186 }
	$16 = ($16 & [255])
	goto $label$187 
	
.LABEL $label$188
	if ( $36 ){ goto $label$186 }
	
.LABEL $label$187
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$186
	if ( (*($0) & [32]) ){ goto $label$191 }
	CALL __fwritex($37, $29, $0)
	
.LABEL $label$191
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$24 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$24 }
	$17 = ($37 <= [256])
	$37 = ($30 - $27)
	CALL memset(($39 + [432]), [32], ( $37 ? [256] : $17 ))
	$36 = *($0)
	$15 = ($36 & [32])
	if ( $17 ){ goto $label$193 }
	$17 = ($15 == 0)
	$15 = $37
	
.LOOP $label$194:
	if ( (($17 & [1]) == 0) ){ goto $label$195 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$195
	$14 = ($36 & [32])
	$17 = ($14 == 0)
	$15 = ($15 + [-256])
	if ( ((uint_32)$15 > (uint_32)[255]) ){ goto $label$194 }
	if ( $14 ){ goto $label$24 }
	$37 = ($37 & [255])
	goto $label$192 
	
.LABEL $label$193
	if ( $15 ){ goto $label$24 }
	
.LABEL $label$192
	CALL __fwritex(($39 + [432]), $37, $0)
	goto $label$24 
	
.LABEL $label$78
	CALL __addtf3(($39 + [192]), $35, $23, $33, $34)
	CALL __subtf3(($39 + [176]), *($39 + [192]), *((($39 + [192]) + [8])), $33, $34)
	$23 = *((($39 + [176]) + [8]))
	$35 = *($39 + [176])
	
.LABEL $label$77
	$30 = int_32($31 >> [31])
	$31 = *($39 + [748])
	$17 = ((int_32)($31 + $30) ^ (int_32)$30)
	$34 = (CASTING int_64)(int_32 $17)
	$30 = [0]
	if ( ((int_32)$17 <= (int_32)[-1]) ){ goto $label$198 }
	$17 = (CASTING uint_32)(uint_64 $34)
	if ( $17 ){ goto $label$197 }
	goto $label$196 
	
.LABEL $label$198
	$30 = [0]
	
.LOOP $label$199:
	*(($12 + $30)) = ((int_64)((uint_64)$34 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ($30 + [-1])
	$17 = ((uint_64)$34 > (uint_64)(int_64)42949672959)
	$33 = ((uint_64)$34 / (uint_64)(int_64)10)
	$34 = $33
	if ( $17 ){ goto $label$199 }
	$17 = (CASTING uint_32)(uint_64 $33)
	if ( ($17 == 0) ){ goto $label$196 }
	
.LABEL $label$197
	
.LOOP $label$200:
	*(((($39 + [692]) + $30) + [11])) = (((uint_32)$17 % (uint_32)[10]) | [48])
	$30 = ($30 + [-1])
	$14 = ((uint_32)$17 > (uint_32)[9])
	$17 = ((uint_32)$17 / (uint_32)[10])
	if ( $14 ){ goto $label$200 }
	
.LABEL $label$196
	$17 = ($7 + $30)
	if ( $30 ){ goto $label$201 }
	*(($17 = ($17 + [-1]))) = [48]
	
.LABEL $label$201
	$16 = ($20 | [2])
	*(($27 = ($17 + [-2]))) = ($29 + [15])
	*(($17 + [-1])) = ((uint_32($31 >> [30]) & [2]) + [43])
	if ( ($18 & [8]) ){ goto $label$202 }
	if ( ((int_32)$36 < (int_32)[1]) ){ goto $label$71 }
	$30 = ($39 + [704])
	
.LOOP $label$203:
	$17 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [80]), $17)
	CALL __subtf3(($39 + [64]), $35, $23, *($39 + [80]), *((($39 + [80]) + [8])))
	CALL __multf3(($39 + [48]), *($39 + [64]), *((($39 + [64]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($30) = (*(($17 + [16256])) | $37)
	$23 = *((($39 + [48]) + [8]))
	$35 = *($39 + [48])
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$204 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$204
	$30 = $17
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$203 }
	goto $label$70 
	
.LABEL $label$202
	$30 = ($39 + [704])
	
.LOOP $label$205:
	$17 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [128]), $17)
	CALL __subtf3(($39 + [112]), $35, $23, *($39 + [128]), *((($39 + [128]) + [8])))
	CALL __multf3(($39 + [96]), *($39 + [112]), *((($39 + [112]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($30) = (*(($17 + [16256])) | $37)
	$23 = *((($39 + [96]) + [8]))
	$35 = *($39 + [96])
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$206 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$206
	$30 = $17
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$205 }
	goto $label$70 
	
.LABEL $label$76
	$28 = ($30 + [-1])
	$29 = ($29 + [-2])
	$16 = ($18 & [8])
	if ( $16 ){ goto $label$68 }
	
.LABEL $label$75
	$30 = [9]
	if ( ($27 == 0) ){ goto $label$207 }
	$16 = *(($14 + [-4]))
	if ( ($16 == 0) ){ goto $label$207 }
	$30 = [0]
	if ( ((uint_32)$16 % (uint_32)[10]) ){ goto $label$207 }
	$37 = [10]
	$30 = [0]
	
.LOOP $label$208:
	$30 = ($30 + [1])
	$37 = ((int_32)$37 * (int_32)[10])
	if ( (((uint_32)$16 % (uint_32)$37) == 0) ){ goto $label$208 }
	
.LABEL $label$207
	$37 = (((int_32)int_32(($14 - $22) >> [2]) * (int_32)[9]) + [-9])
	if ( ((int_32)($29 | [32]) != (int_32)[102]) ){ goto $label$69 }
	$16 = [0]
	$30 = ($37 - $30)
	$30 = ( $30 ? [0] : ((int_32)$30 > (int_32)[0]) )
	$28 = ( $28 ? $30 : ((int_32)$28 < (int_32)$30) )
	goto $label$68 
	
.LABEL $label$74
	$30 = [0]
	$16 = ($18 & [73728])
	if ( $16 ){ goto $label$72 }
	
.LABEL $label$73
	if ( ((int_32)$15 <= (int_32)$30) ){ goto $label$72 }
	$17 = ($27 <= [256])
	$27 = ($15 - $30)
	CALL memset(($39 + [432]), [32], ( $27 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$210 }
	$17 = ($36 == 0)
	$36 = $27
	
.LOOP $label$211:
	if ( (($17 & [1]) == 0) ){ goto $label$212 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$212
	$31 = ($14 & [32])
	$17 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$211 }
	if ( $31 ){ goto $label$72 }
	$27 = ($27 & [255])
	goto $label$209 
	
.LABEL $label$210
	if ( $36 ){ goto $label$72 }
	
.LABEL $label$209
	CALL __fwritex(($39 + [432]), $27, $0)
	
.LABEL $label$72
	if ( ($30 == 0) ){ goto $label$213 }
	$17 = [0]
	
.LOOP $label$214:
	$36 = *($37)
	if ( ($36 == 0) ){ goto $label$213 }
	$36 = CALL wctomb(($39 + [340]), $36)
	$17 = ($36 + $17)
	if ( ((uint_32)$17 > (uint_32)$30) ){ goto $label$213 }
	if ( (*($0) & [32]) ){ goto $label$215 }
	CALL __fwritex(($39 + [340]), $36, $0)
	
.LABEL $label$215
	$37 = ($37 + [4])
	if ( ($17 <= $30) ){ goto $label$214 }
	
.LABEL $label$213
	if ( ((int_32)$16 != (int_32)[8192]) ){ goto $label$216 }
	if ( ((int_32)$15 <= (int_32)$30) ){ goto $label$216 }
	$17 = ($31 <= [256])
	$31 = ($15 - $30)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$218 }
	$17 = ($36 == 0)
	$36 = $31
	
.LOOP $label$219:
	if ( (($17 & [1]) == 0) ){ goto $label$220 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$220
	$37 = ($14 & [32])
	$17 = ($37 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$219 }
	if ( $37 ){ goto $label$216 }
	$31 = ($31 & [255])
	goto $label$217 
	
.LABEL $label$218
	if ( $36 ){ goto $label$216 }
	
.LABEL $label$217
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$216
	$30 = ( $15 ? $30 : ((int_32)$15 > (int_32)$30) )
	goto $label$24 
	
.LABEL $label$71
	$17 = ($39 + [704])
	
.LOOP $label$221:
	$14 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [32]), $14)
	CALL __subtf3(($39 + [16]), $35, $23, *($39 + [32]), *((($39 + [32]) + [8])))
	CALL __multf3($39, *($39 + [16]), *((($39 + [16]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*(($30 = $17)) = (*(($14 + [16256])) | $37)
	$23 = *(($39 + [8]))
	$35 = *($39)
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$222 }
	if ( (CALL __eqtf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$222 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$222
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$221 }
	
.LABEL $label$70
	$30 = [-1]
	$31 = ($7 - $27)
	if ( ((int_32)(([2147483645] - $16) - $31) < (int_32)$36) ){ goto $label$50 }
	$26 = ($17 - ($39 + [704]))
	$29 = ( ( ($36 + [2]) ? $26 : ((int_32)($8 + $17) < (int_32)$36) ) ? $26 : $36 )
	$37 = (($31 + $16) + $29)
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$65 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$65 }
	$30 = ($28 <= [256])
	$28 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $28 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$67 }
	$30 = ($17 == 0)
	$17 = $28
	
.LOOP $label$223:
	if ( (($30 & [1]) == 0) ){ goto $label$224 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$224
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$223 }
	if ( $14 ){ goto $label$65 }
	$28 = ($28 & [255])
	goto $label$66 
	
.LABEL $label$69
	$16 = [0]
	$30 = (($37 + $36) - $30)
	$30 = ( $30 ? [0] : ((int_32)$30 > (int_32)[0]) )
	$28 = ( $28 ? $30 : ((int_32)$28 < (int_32)$30) )
	
.LABEL $label$68
	$30 = [-1]
	$24 = ($28 | $16)
	$37 = ((int_32)$24 != (int_32)[0])
	if ( ((int_32)$28 > (int_32)([2147483646] - $37)) ){ goto $label$50 }
	$26 = (($28 + $37) + [1])
	$21 = ((int_32)($29 | [32]) != (int_32)[102])
	if ( $21 ){ goto $label$225 }
	if ( ((int_32)$36 > (int_32)([2147483647] - $26)) ){ goto $label$50 }
	$36 = ( $36 ? [0] : ((int_32)$36 > (int_32)[0]) )
	goto $label$61 
	
.LABEL $label$225
	$30 = ( $31 ? $36 : ((int_32)$36 < (int_32)[0]) )
	$35 = (CASTING int_64)(int_32 $30)
	if ( ((int_32)$30 <= (int_32)[-1]) ){ goto $label$64 }
	$37 = $7
	$30 = (CASTING uint_32)(uint_64 $35)
	if ( $30 ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$67
	if ( $17 ){ goto $label$65 }
	
.LABEL $label$66
	CALL __fwritex(($39 + [432]), $28, $0)
	
.LABEL $label$65
	if ( (*($0) & [32]) ){ goto $label$226 }
	CALL __fwritex($24, $16, $0)
	
.LABEL $label$226
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$227 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$227 }
	$30 = ($16 <= [256])
	$16 = ($15 - $37)
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$229 }
	$30 = ($17 == 0)
	$17 = $16
	
.LOOP $label$230:
	if ( (($30 & [1]) == 0) ){ goto $label$231 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$231
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$230 }
	if ( $14 ){ goto $label$227 }
	$16 = ($16 & [255])
	goto $label$228 
	
.LABEL $label$229
	if ( $17 ){ goto $label$227 }
	
.LABEL $label$228
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$227
	if ( (*($0) & [32]) ){ goto $label$232 }
	CALL __fwritex(($39 + [704]), $26, $0)
	
.LABEL $label$232
	$16 = ($29 - $26)
	if ( ((int_32)$16 < (int_32)[1]) ){ goto $label$233 }
	$30 = ($16 <= [256])
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$235 }
	$30 = ($17 == 0)
	$17 = $16
	
.LOOP $label$236:
	if ( (($30 & [1]) == 0) ){ goto $label$237 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$237
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$236 }
	if ( $14 ){ goto $label$233 }
	$16 = ($16 & [255])
	goto $label$234 
	
.LABEL $label$235
	if ( $17 ){ goto $label$233 }
	
.LABEL $label$234
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$233
	if ( (*($0) & [32]) ){ goto $label$238 }
	CALL __fwritex($27, $31, $0)
	
.LABEL $label$238
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$239 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$239 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$241 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$242:
	if ( (($30 & [1]) == 0) ){ goto $label$243 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$243
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$242 }
	if ( $14 ){ goto $label$239 }
	$31 = ($31 & [255])
	goto $label$240 
	
.LABEL $label$241
	if ( $17 ){ goto $label$239 }
	
.LABEL $label$240
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$239
	$30 = ( $15 ? $37 : ((int_32)$15 > (int_32)$37) )
	goto $label$50 
	
.LABEL $label$64
	$37 = $7
	
.LOOP $label$244:
	*(($37 = ($37 + [-1]))) = ((int_64)((uint_64)$35 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ((uint_64)$35 > (uint_64)(int_64)42949672959)
	$23 = ((uint_64)$35 / (uint_64)(int_64)10)
	$35 = $23
	if ( $30 ){ goto $label$244 }
	$30 = (CASTING uint_32)(uint_64 $23)
	if ( ($30 == 0) ){ goto $label$62 }
	
.LABEL $label$63
	
.LOOP $label$245:
	*(($37 = ($37 + [-1]))) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$31 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $31 ){ goto $label$245 }
	
.LABEL $label$62
	if ( ((int_32)($7 - $37) > (int_32)[1]) ){ goto $label$246 }
	$30 = ($37 + [-1])
	
.LOOP $label$247:
	*($30) = [48]
	$37 = ($7 - $30)
	$31 = ($30 + [-1])
	$30 = $31
	if ( ((int_32)$37 < (int_32)[2]) ){ goto $label$247 }
	$37 = ($31 + [1])
	
.LABEL $label$246
	*(($25 = ($37 + [-2]))) = $29
	$30 = [-1]
	*(($37 + [-1])) = ((uint_32($36 >> [30]) & [2]) + [43])
	$36 = ($7 - $25)
	if ( ((int_32)$36 > (int_32)([2147483647] - $26)) ){ goto $label$50 }
	
.LABEL $label$61
	$30 = [-1]
	$36 = ($36 + $26)
	if ( ((int_32)$36 > (int_32)((int_32)$20 ^ (int_32)[2147483647])) ){ goto $label$50 }
	$26 = ($36 + $20)
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$51 }
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$51 }
	$30 = ($29 <= [256])
	$29 = ($15 - $26)
	CALL memset(($39 + [432]), [32], ( $29 ? [256] : $30 ))
	$37 = *($0)
	$36 = ($37 & [32])
	if ( $30 ){ goto $label$53 }
	$30 = ($36 == 0)
	$36 = $29
	
.LOOP $label$248:
	if ( (($30 & [1]) == 0) ){ goto $label$249 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$37 = *($0)
	
.LABEL $label$249
	$31 = ($37 & [32])
	$30 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$248 }
	if ( $31 ){ goto $label$51 }
	$29 = ($29 & [255])
	goto $label$52 
	
.LABEL $label$60
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$59
	*(*($39 + [416])) = (CASTING int_64)(int_32 $38)
	$30 = [0]
	goto $label$24 
	
.LABEL $label$58
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$57
	*(*($39 + [416])) = $38
	
.LABEL $label$56
	$30 = [0]
	goto $label$24 
	
.LABEL $label$55
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$54
	*(*($39 + [416])) = (CASTING int_64)(int_32 $38)
	$30 = [0]
	goto $label$24 
	
.LABEL $label$53
	if ( $36 ){ goto $label$51 }
	
.LABEL $label$52
	CALL __fwritex(($39 + [432]), $29, $0)
	
.LABEL $label$51
	if ( (*($0) & [32]) ){ goto $label$250 }
	CALL __fwritex($19, $20, $0)
	
.LABEL $label$250
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$251 }
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$251 }
	$30 = ($29 <= [256])
	$29 = ($15 - $26)
	CALL memset(($39 + [432]), [48], ( $29 ? [256] : $30 ))
	$37 = *($0)
	$36 = ($37 & [32])
	if ( $30 ){ goto $label$253 }
	$30 = ($36 == 0)
	$36 = $29
	
.LOOP $label$254:
	if ( (($30 & [1]) == 0) ){ goto $label$255 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$37 = *($0)
	
.LABEL $label$255
	$31 = ($37 & [32])
	$30 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$254 }
	if ( $31 ){ goto $label$251 }
	$29 = ($29 & [255])
	goto $label$252 
	
.LABEL $label$253
	if ( $36 ){ goto $label$251 }
	
.LABEL $label$252
	CALL __fwritex(($39 + [432]), $29, $0)
	
.LABEL $label$251
	if ( $21 ){ goto $label$266 }
	$31 = ( $22 ? $17 : ((uint_32)$17 > (uint_32)$22) )
	$37 = $31
	
.LOOP $label$267:
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$269 }
	$17 = [0]
	
.LOOP $label$270:
	*(($11 + $17)) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$17 = ($17 + [-1])
	$36 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $36 ){ goto $label$270 }
	goto $label$268 
	
.LABEL $label$269
	$17 = [0]
	
.LABEL $label$268
	$30 = ($10 + $17)
	if ( ((int_32)$37 == (int_32)$31) ){ goto $label$272 }
	if ( ((uint_32)$30 <= (uint_32)($39 + [704])) ){ goto $label$271 }
	
.LOOP $label$273:
	*(($30 = ($30 + [-1]))) = [48]
	if ( ((uint_32)$30 > (uint_32)($39 + [704])) ){ goto $label$273 }
	$30 = ($39 + [704])
	goto $label$271 
	
.LABEL $label$272
	if ( $17 ){ goto $label$271 }
	*(($30 = ($30 + [-1]))) = [48]
	
.LABEL $label$271
	if ( (*($0) & [32]) ){ goto $label$274 }
	CALL __fwritex($30, ($10 - $30), $0)
	
.LABEL $label$274
	$37 = ($37 + [4])
	if ( ((uint_32)$37 <= (uint_32)$22) ){ goto $label$267 }
	if ( ($24 == 0) ){ goto $label$275 }
	if ( (*($0) & [32]) ){ goto $label$275 }
	CALL __fwritex([16400], [1], $0)
	
.LABEL $label$275
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$265 }
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$264 }
	
.LOOP $label$276:
	$30 = $10
	$17 = *($37)
	if ( ($17 == 0) ){ goto $label$278 }
	$30 = $10
	
.LOOP $label$279:
	*(($30 = ($30 + [-1]))) = (((uint_32)$17 % (uint_32)[10]) | [48])
	$36 = ((uint_32)$17 > (uint_32)[9])
	$17 = ((uint_32)$17 / (uint_32)[10])
	if ( $36 ){ goto $label$279 }
	if ( ((uint_32)$30 <= (uint_32)($39 + [704])) ){ goto $label$277 }
	
.LABEL $label$278
	
.LOOP $label$280:
	*(($30 = ($30 + [-1]))) = [48]
	if ( ((uint_32)$30 > (uint_32)($39 + [704])) ){ goto $label$280 }
	
.LABEL $label$277
	if ( (*($0) & [32]) ){ goto $label$281 }
	CALL __fwritex($30, ( $28 ? [9] : ((int_32)$28 < (int_32)[9]) ), $0)
	
.LABEL $label$281
	$30 = ($28 + [-9])
	if ( ((int_32)$28 < (int_32)[10]) ){ goto $label$263 }
	$28 = $30
	$37 = ($37 + [4])
	if ( ($37 <= $14) ){ goto $label$276 }
	goto $label$263 
	
.LABEL $label$266
	if ( ((int_32)$28 <= (int_32)[-1]) ){ goto $label$259 }
	$31 = ( $14 ? ($17 + [4]) : $27 )
	if ( ($16 == 0) ){ goto $label$261 }
	$37 = $17
	
.LOOP $label$282:
	$14 = $10
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$284 }
	$36 = [0]
	
.LOOP $label$285:
	*(((($39 + [704]) + $36) + [8])) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$36 = ($36 + [-1])
	$14 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $14 ){ goto $label$285 }
	$14 = ((($39 + [704]) + $36) + [9])
	if ( $36 ){ goto $label$283 }
	
.LABEL $label$284
	*(($14 = ($14 + [-1]))) = [48]
	
.LABEL $label$283
	if ( ((int_32)$37 == (int_32)$17) ){ goto $label$287 }
	if ( ((uint_32)$14 <= (uint_32)($39 + [704])) ){ goto $label$286 }
	
.LOOP $label$288:
	*(($14 = ($14 + [-1]))) = [48]
	if ( ((uint_32)$14 > (uint_32)($39 + [704])) ){ goto $label$288 }
	goto $label$286 
	
.LABEL $label$287
	$30 = *($0)
	if ( ($30 & [32]) ){ goto $label$289 }
	CALL __fwritex($14, [1], $0)
	$30 = *($0)
	
.LABEL $label$289
	$14 = ($14 + [1])
	if ( ($30 & [32]) ){ goto $label$286 }
	CALL __fwritex([16400], [1], $0)
	
.LABEL $label$286
	$30 = ($10 - $14)
	if ( (*($0) & [32]) ){ goto $label$290 }
	CALL __fwritex($14, ( $30 ? $28 : ((int_32)$28 > (int_32)$30) ), $0)
	
.LABEL $label$290
	$28 = ($28 - $30)
	$37 = ($37 + [4])
	if ( ((uint_32)$37 >= (uint_32)$31) ){ goto $label$260 }
	if ( ((int_32)$28 > (int_32)[-1]) ){ goto $label$282 }
	goto $label$260 
	
.LABEL $label$265
	$30 = $28
	if ( ((int_32)$30 >= (int_32)[1]) ){ goto $label$262 }
	goto $label$258 
	
.LABEL $label$264
	$30 = $28
	
.LABEL $label$263
	if ( ((int_32)$30 < (int_32)[1]) ){ goto $label$258 }
	
.LABEL $label$262
	$17 = ($30 <= [256])
	CALL memset(($39 + [432]), [48], ( $30 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$292 }
	$17 = ($36 == 0)
	$36 = $30
	
.LOOP $label$293:
	if ( (($17 & [1]) == 0) ){ goto $label$294 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$294
	$37 = ($14 & [32])
	$17 = ($37 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$293 }
	if ( $37 ){ goto $label$258 }
	$30 = ($30 & [255])
	goto $label$291 
	
.LABEL $label$292
	if ( $36 ){ goto $label$258 }
	
.LABEL $label$291
	CALL __fwritex(($39 + [432]), $30, $0)
	if ( ((int_32)$18 == (int_32)[8192]) ){ goto $label$257 }
	goto $label$256 
	
.LABEL $label$261
	$37 = $17
	
.LOOP $label$295:
	$14 = $10
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$297 }
	$36 = [0]
	
.LOOP $label$298:
	*(((($39 + [704]) + $36) + [8])) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$36 = ($36 + [-1])
	$14 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $14 ){ goto $label$298 }
	$14 = ((($39 + [704]) + $36) + [9])
	if ( $36 ){ goto $label$296 }
	
.LABEL $label$297
	*(($14 = ($14 + [-1]))) = [48]
	
.LABEL $label$296
	if ( ((int_32)$37 == (int_32)$17) ){ goto $label$300 }
	if ( ((uint_32)$14 <= (uint_32)($39 + [704])) ){ goto $label$299 }
	
.LOOP $label$301:
	*(($14 = ($14 + [-1]))) = [48]
	if ( ((uint_32)$14 > (uint_32)($39 + [704])) ){ goto $label$301 }
	goto $label$299 
	
.LABEL $label$300
	if ( (*($0) & [32]) ){ goto $label$302 }
	CALL __fwritex($14, [1], $0)
	
.LABEL $label$302
	$14 = ($14 + [1])
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$299 }
	if ( (*($0) & [32]) ){ goto $label$299 }
	CALL __fwritex([16400], [1], $0)
	
.LABEL $label$299
	$30 = ($10 - $14)
	if ( (*($0) & [32]) ){ goto $label$303 }
	CALL __fwritex($14, ( $30 ? $28 : ((int_32)$28 > (int_32)$30) ), $0)
	
.LABEL $label$303
	$28 = ($28 - $30)
	$37 = ($37 + [4])
	if ( ((uint_32)$37 >= (uint_32)$31) ){ goto $label$260 }
	if ( ((int_32)$28 > (int_32)[-1]) ){ goto $label$295 }
	
.LABEL $label$260
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$259 }
	$30 = ($28 <= [256])
	CALL memset(($39 + [432]), [48], ( $28 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$305 }
	$30 = ($17 == 0)
	$17 = $28
	
.LOOP $label$306:
	if ( (($30 & [1]) == 0) ){ goto $label$307 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$307
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$306 }
	if ( $14 ){ goto $label$259 }
	$28 = ($28 & [255])
	goto $label$304 
	
.LABEL $label$305
	if ( $17 ){ goto $label$259 }
	
.LABEL $label$304
	CALL __fwritex(($39 + [432]), $28, $0)
	
.LABEL $label$259
	if ( (*($0) & [32]) ){ goto $label$258 }
	CALL __fwritex($25, ($7 - $25), $0)
	
.LABEL $label$258
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$256 }
	
.LABEL $label$257
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$256 }
	$30 = ($37 <= [256])
	$37 = ($15 - $26)
	CALL memset(($39 + [432]), [32], ( $37 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$309 }
	$30 = ($17 == 0)
	$17 = $37
	
.LOOP $label$310:
	if ( (($30 & [1]) == 0) ){ goto $label$311 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$311
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$310 }
	if ( $14 ){ goto $label$256 }
	$37 = ($37 & [255])
	goto $label$308 
	
.LABEL $label$309
	if ( $17 ){ goto $label$256 }
	
.LABEL $label$308
	CALL __fwritex(($39 + [432]), $37, $0)
	
.LABEL $label$256
	$30 = ( $15 ? $26 : ((int_32)$15 > (int_32)$26) )
	
.LABEL $label$50
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$24
	if ( ((int_32)$30 <= (int_32)$13) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( $0 ){ goto $label$1 }
	if ( ($32 == 0) ){ goto $label$14 }
	$30 = [1]
	$1 = *($4 + [4])
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $170(($3 + [16]), $1, $2)
	$1 = *($4 + [8])
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $170(($3 + [32]), $1, $2)
	$1 = *($4 + [12])
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $170(($3 + [48]), $1, $2)
	$1 = *($4 + [16])
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $170(($3 + [64]), $1, $2)
	$1 = *($4 + [20])
	if ( ($1 == 0) ){ goto $label$9 }
	CALL $170(($3 + [80]), $1, $2)
	$1 = *($4 + [24])
	if ( ($1 == 0) ){ goto $label$8 }
	CALL $170(($3 + [96]), $1, $2)
	$1 = *($4 + [28])
	if ( ($1 == 0) ){ goto $label$7 }
	CALL $170(($3 + [112]), $1, $2)
	$1 = *($4 + [32])
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $170(($3 + [128]), $1, $2)
	$1 = *($4 + [36])
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $170(($3 + [144]), $1, $2)
	$38 = [1]
	goto $label$1 
	
.LABEL $label$15
	*(CALL __errno_location()) = [75]
	goto $label$2 
	
.LABEL $label$14
	$38 = [0]
	goto $label$1 
	
.LABEL $label$13
	$30 = [2]
	goto $label$4 
	
.LABEL $label$12
	$30 = [3]
	goto $label$4 
	
.LABEL $label$11
	$38 = [0]
	goto $label$1 
	
.LABEL $label$10
	$30 = [4]
	goto $label$4 
	
.LABEL $label$9
	$30 = [5]
	goto $label$4 
	
.LABEL $label$8
	$30 = [6]
	goto $label$4 
	
.LABEL $label$7
	$30 = [7]
	goto $label$4 
	
.LABEL $label$6
	$30 = [8]
	goto $label$4 
	
.LABEL $label$5
	$30 = [9]
	
.LABEL $label$4
	$1 = ($4 + ($30 << [2]))
	
.LOOP $label$312:
	if ( *($1) ){ goto $label$3 }
	$1 = ($1 + [4])
	$38 = [1]
	$30 = ($30 + [1])
	if ( ((uint_32)$30 <= (uint_32)[9]) ){ goto $label$312 }
	goto $label$1 
	
.LABEL $label$3
	*(CALL __errno_location()) = [22]
	
.LABEL $label$2
	$38 = [-1]
	
.LABEL $label$1
	*([0] + [4]) = ($39 + [8128])
	$30
	$30
	return $38
}

int_32 .FUNC vfprintf (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [288])
	*([0] + [4]) = $7
	*($7 + [284]) = $2
	$6 = [0]
	CALL memset(($7 + [240]), [0], [40])
	*($7 + [280]) = *($7 + [284])
	$2 = [-1]
	if ( ((int_32)CALL $166([0], $1, ($7 + [280]), ($7 + [80]), ($7 + [240])) <= (int_32)[-1]) ){ goto $label$1 }
	if ( ((int_32)*($0 + [76]) < (int_32)[0]) ){ goto $label$2 }
	$6 = CALL __lockfile($0)
	
.LABEL $label$2
	$2 = *($0)
	if ( ((int_32)*($0 + [74]) > (int_32)[0]) ){ goto $label$3 }
	*($0) = ($2 & [-33])
	
.LABEL $label$3
	$3 = ($2 & [32])
	if ( (*($0 + [48]) == 0) ){ goto $label$5 }
	$2 = CALL $166($0, $1, ($7 + [280]), ($7 + [80]), ($7 + [240]))
	goto $label$4 
	
.LABEL $label$5
	*(($5 = ($0 + [48]))) = [80]
	*($0 + [16]) = ($7 + [80])
	*($0 + [28]) = $7
	*($0 + [20]) = $7
	$4 = *($0 + [44])
	*($0 + [44]) = $7
	$2 = CALL $166($0, $1, ($7 + [280]), ($7 + [80]), ($7 + [240]))
	if ( ($4 == 0) ){ goto $label$4 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	*(($0 + [44])) = $4
	*($5) = [0]
	*(($0 + [16])) = [0]
	*(($0 + [28])) = [0]
	$1 = ($0 + [20])
	$4 = *($1)
	*($1) = [0]
	$2 = ( $2 ? [-1] : $4 )
	
.LABEL $label$4
	$1 = *($0)
	*($0) = ($1 | $3)
	$1 = ($1 & [32])
	if ( ($6 == 0) ){ goto $label$6 }
	CALL __unlockfile($0)
	
.LABEL $label$6
	$2 = ( [-1] ? $2 : $1 )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [288])
	return $2
}

int_32 .FUNC __errno_location ()
{
	return [18316]
}

int_32 .FUNC $163 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *($0 + [28])
	$6 = (*($0 + [20]) - $4)
	$3 = *($0 + [84])
	$5 = *($3 + [4])
	$6 = ( $5 ? $6 : ($5 <= $6) )
	if ( ($6 == 0) ){ goto $label$1 }
	CALL memcpy(*($3), $4, $6)
	*($3) = (*($3) + $6)
	$5 = (*($5) - $6)
	*(($5 = ($3 + [4]))) = $5
	
.LABEL $label$1
	$6 = *($3)
	$5 = ( $5 ? $2 : ($5 <= $2) )
	if ( ($5 == 0) ){ goto $label$2 }
	CALL memcpy($6, $1, $5)
	$6 = (*($3) + $5)
	*($3) = $6
	*(($3 = ($3 + [4]))) = (*($3) - $5)
	
.LABEL $label$2
	*($6) = [0]
	$3 = *($0 + [44])
	*(($0 + [28])) = $3
	*(($0 + [20])) = $3
	return $2
}

int_32 .FUNC vsnprintf (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [160])
	*([0] + [4]) = $4
	$5 = [-1]
	*($4 + [148]) = ( ($1 + [-1]) ? [0] : $1 )
	$0 = ( $0 ? ($4 + [158]) : $1 )
	*($4 + [144]) = $0
	*(($4 = CALL memset($4, [0], [144])) + [36]) = [1]
	*($4 + [75]) = [255]
	*($4 + [76]) = [-1]
	*($4 + [44]) = ($4 + [159])
	*($4 + [84]) = ($4 + [144])
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$2 }
	*($0) = [0]
	$5 = CALL vfprintf($4, $2, $3)
	goto $label$1 
	
.LABEL $label$2
	*(CALL __errno_location()) = [75]
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [160])
	return $5
}

int_32 .FUNC snprintf (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	*($4 + [12]) = $3
	$3 = CALL vsnprintf($0, $1, $2, $3)
	*([0] + [4]) = ($4 + [16])
	return $3
}

int_32 .FUNC $160 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = ($8 & [1])
	$8 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($8 >> [1]) : $5 )
	if ( ($8 <= $2) ){ goto $label$1 }
	$8 = ($8 - $2)
	$3 = ( $8 ? $3 : ($8 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($3 + [16]) & [-16])
	$8 = CALL $154($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($8, (( $6 ? ($1 + [1]) : $5 ) + $2), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC __fwritex (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = *($2 + [16])
	if ( $6 ){ goto $label$2 }
	$6 = [0]
	if ( CALL __towrite($2) ){ goto $label$1 }
	$6 = *(($2 + [16]))
	
.LABEL $label$2
	$7 = *($2 + [20])
	if ( ((uint_32)($6 - $7) >= (uint_32)$1) ){ goto $label$3 }
	return CALL int_32 $2((int_32 $0), (int_32 $1), (int_32 *($2 + [36])))
	
.LABEL $label$3
	$8 = [0]
	if ( ((int_32)*($2 + [75]) < (int_32)[0]) ){ goto $label$4 }
	$3 = ($0 + $1)
	$8 = [0]
	$6 = [0]
	
.LOOP $label$5:
	if ( (($1 + $6) == 0) ){ goto $label$4 }
	$5 = ($3 + $6)
	$4 = ($6 + [-1])
	$6 = $4
	if ( ((int_32)*(($5 + [-1])) != (int_32)[10]) ){ goto $label$5 }
	$8 = (($1 + $4) + [1])
	$6 = CALL int_32 $2((int_32 $0), (int_32 $8), (int_32 *($2 + [36])))
	if ( ($6 <= $8) ){ goto $label$1 }
	$1 = ((int_32)$4 ^ (int_32)[-1])
	$0 = (($3 + $4) + [1])
	$7 = *(($2 + [20]))
	
.LABEL $label$4
	CALL memcpy($7, $0, $1)
	*(($6 = ($2 + [20]))) = (*($6) + $1)
	return ($8 + $1)
	
.LABEL $label$1
	return $6
}

void .FUNC __unlockfile (int_32 $0)
{
}

int_32 .FUNC __fpclassifyl (int_64 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$2 = ((int_64)$1 & (int_64)281474976710655)
	$3 = ((CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)48)) & [32767]
	if ( ((int_32)$3) == (int_32)[32767]) ){ goto $label$2 }
	$4 = [4]
	if ( $3 ){ goto $label$1 }
	return ( [3] ? [2] : ((int_64)((int_64)$2 | (int_64)$0) != (int_64)0) )
	
.LABEL $label$2
	$4 = (int_64)(((int_64)$2 | (int_64)$0) == 0)
	
.LABEL $label$1
	return $4
}

int_32 .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [496])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $154([40])) + [28]) = $0
	CALL $68(($8 + [32]), $6)
	*($6 + [32]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [32])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $69(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $155($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [20]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC $50 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = *([0] + [4])
	$9 = $10
	CALL eosio_assert(((int_32)*($1 + [80]) == (int_32)$0), [320])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [368])
	$6 = *($2)
	*($1 + [40 align=1]) = *($6 + [16 align=1])
	*(($1 + [68])) = *(($6 + [44]))
	*(($1 + [64])) = *(($6 + [40]))
	*(($1 + [60])) = *(($6 + [36]))
	*(($1 + [56])) = *(($6 + [32]))
	*(($1 + [52])) = *(($6 + [28]))
	*(($1 + [48])) = *(($6 + [24]))
	*(($1 + [44])) = *(($6 + [20]))
	$5 = ($1 + [72])
	$4 = ($1 + [40])
	$3 = *($1)
	$8 = *(*($2) + [48])
	if ( ((int_64)*($1 + [72 align=1]) != (int_64)$8) ){ goto $label$2 }
	$7 = ($1 + [8])
	$8 = $3
	goto $label$1 
	
.LABEL $label$2
	*($5) = $8
	$7 = ($1 + [8])
	CALL memset($7, [0], [32])
	$8 = *($1)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$3 == (int_64)$8), [432])
	$6 = $10
	$2 = ($6 + [-80])
	*([0] + [4]) = $2
	CALL eosio_assert([1], [176])
	CALL memcpy($2, $1, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy(($6 + [-72]), $7, [32])
	CALL eosio_assert([1], [176])
	CALL memcpy(($6 + [-40]), $4, [32])
	CALL eosio_assert([1], [176])
	CALL memcpy(($6 + [-8]), $5, [8])
	CALL db_update_i64(*($1 + [84]), (int_64)-6222124003695979872, $2, [80])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = $9
}

void .FUNC $51 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = *([0] + [4])
	$9 = $10
	CALL eosio_assert(((int_32)*($1 + [80]) == (int_32)$0), [320])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [368])
	$6 = *($2)
	*($1 + [8 align=1]) = *($6 + [16 align=1])
	*(($1 + [36])) = *(($6 + [44]))
	*(($1 + [32])) = *(($6 + [40]))
	*(($1 + [28])) = *(($6 + [36]))
	*(($1 + [24])) = *(($6 + [32]))
	*(($1 + [20])) = *(($6 + [28]))
	*(($1 + [16])) = *(($6 + [24]))
	*(($1 + [12])) = *(($6 + [20]))
	$5 = ($1 + [72])
	$4 = ($1 + [8])
	$3 = *($1)
	$8 = *(*($2) + [48])
	if ( ((int_64)*($1 + [72 align=1]) != (int_64)$8) ){ goto $label$2 }
	$7 = ($1 + [40])
	$8 = $3
	goto $label$1 
	
.LABEL $label$2
	*($5) = $8
	$7 = ($1 + [40])
	CALL memset($7, [0], [32])
	$8 = *($1)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$3 == (int_64)$8), [432])
	$6 = $10
	$2 = ($6 + [-80])
	*([0] + [4]) = $2
	CALL eosio_assert([1], [176])
	CALL memcpy($2, $1, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy(($6 + [-72]), $4, [32])
	CALL eosio_assert([1], [176])
	CALL memcpy(($6 + [-40]), $7, [32])
	CALL eosio_assert([1], [176])
	CALL memcpy(($6 + [-8]), $5, [8])
	CALL db_update_i64(*($1 + [84]), (int_64)-6222124003695979872, $2, [80])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = $9
}

void .FUNC $52 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $154(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $159($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $155($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $155($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN8pandafun10apply_diceERKNS_4diceE (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [336])
	*([0] + [4]) = $10
	CALL require_auth((int_64)-6222124003696921904)
	CALL _ZN8pandafun10pausecheckEv()
	CALL _ZN8pandafun10blackcheckEy(*($0))
	*((($10 + [216]) + [32])) = [0]
	*($10 + [232]) = (int_64)-1
	$2 = *($0)
	*($10 + [224]) = $2
	*($10 + [216]) = (int_64)-6222124003695979872
	*($10 + [240]) = (int_64)0
	$9 = [0]
	$1 = CALL db_find_i64((int_64)-6222124003695979872, $2, (int_64)7615828862441619456, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $49(($10 + [216]), $1)
	CALL eosio_assert(((int_32)*($9 + [80]) == (int_32)($10 + [216])), [32])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [3168])
	CALL eosio_assert(((int_64)*($9 + [72 align=1]) == (int_64)*($0 + [24])), [3200])
	*(($1 = (($10 + [176]) + [24]))) = *(($9 + [32]))
	*(($3 = (($10 + [176]) + [16]))) = *(($9 + [24]))
	*($10 + [184]) = *(($9 + [16]))
	*($10 + [176]) = *($9 + [8 align=1])
	*(($4 = (($10 + [144]) + [24]))) = *(($9 + [64]))
	*(($5 = (($10 + [144]) + [16]))) = *(($9 + [56]))
	*($10 + [152]) = *(($9 + [48]))
	*($10 + [144]) = *($9 + [40 align=1])
	*(($9 = (($10 + [112]) + [24]))) = *($1)
	*(($6 = (($10 + [112]) + [16]))) = *($3)
	*($10 + [120]) = *($10 + [184])
	*($10 + [112]) = *($10 + [176])
	$2 = *($0 + [8])
	*(($3 = (($10 + [288]) + [24]))) = *($9)
	*(($1 = (($10 + [288]) + [16]))) = *($6)
	*($10 + [296]) = *($10 + [120])
	*($10 + [288]) = *($10 + [112])
	CALL memset(($10 + [256]), [0], [24])
	*($10 + [16]) = $2
	CALL snprintf(($10 + [256]), [24], [16], ($10 + [16]))
	CALL sha256(($10 + [256]), CALL $185(($10 + [256])), ($10 + [32]))
	$9 = CALL strncmp(($10 + [288]), ($10 + [32]), [32])
	*((($10 + [80]) + [28])) = *((($10 + [144]) + [28]))
	*(($6 = (($10 + [80]) + [24]))) = *($4)
	*((($10 + [80]) + [20])) = *((($10 + [144]) + [20]))
	*(($4 = (($10 + [80]) + [16]))) = *($5)
	*($10 + [92]) = *($10 + [156])
	*($10 + [88]) = *($10 + [152])
	*($10 + [84]) = *($10 + [148])
	*($10 + [80]) = *($10 + [144])
	$2 = *($0 + [8])
	$7 = *($0 + [16])
	*($3) = *($6)
	*($1) = *($4)
	*($10 + [296]) = *($10 + [88])
	*($10 + [288]) = *($10 + [80])
	CALL memset(($10 + [256]), [0], [24])
	*($10) = $7
	CALL snprintf(($10 + [256]), [24], [16], $10)
	CALL sha256(($10 + [256]), CALL $185(($10 + [256])), ($10 + [32]))
	CALL eosio_assert((CALL $186(($10 + [288]), ($10 + [32]), [32]) == 0), [3232])
	$7 = *($0 + [16])
	*((($10 + [32]) + [32])) = [0]
	*($10 + [48]) = (int_64)-1
	$8 = *($0)
	*($10 + [40]) = $8
	*($10 + [32]) = (int_64)-6222124003695979872
	*($10 + [56]) = (int_64)0
	$2 = ((int_64)((uint_64)((int_64)$7 ^ (int_64)( (int_64)0 ? $2 : $9 )) % (uint_64)(int_64)11) + (int_64)2)
	$9 = CALL db_find_i64((int_64)-6222124003695979872, $8, (int_64)5445027871351373824, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$5 }
	$9 = CALL $54(($10 + [32]), $9)
	CALL eosio_assert(((int_32)*($9 + [20]) == (int_32)($10 + [32])), [32])
	CALL eosio_assert([1], [272])
	CALL eosio_assert(((int_32)*($9 + [20]) == (int_32)($10 + [32])), [320])
	CALL eosio_assert(((int_64)*($10 + [32]) == (int_64)CALL $fimport$14()), [368])
	*($9 + [16 align=1]) = $2
	*($9 + [8 align=1]) = *(($0 + [24]))
	$2 = *($9)
	CALL eosio_assert([1], [432])
	CALL eosio_assert([1], [176])
	CALL memcpy(($10 + [288]), $9, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy((($10 + [288]) | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [176])
	CALL memcpy($1, ($9 + [16]), [4])
	CALL db_update_i64(*($9 + [24]), (int_64)-6222124003695979872, ($10 + [288]), [20])
	if ( (uint_64)($2 <= *((($10 + [32]) + [16]))) ){ goto $label$4 }
	*(($10 + [48])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	$1 = *($10 + [56])
	if ( $1 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	CALL eosio_assert(((int_64)*($10 + [32]) == (int_64)CALL $fimport$14()), [96])
	*(($9 = CALL $154([32])) + [20]) = ($10 + [32])
	*($9) = (int_64)0
	*($9 + [16 align=1]) = $2
	*($9 + [8 align=1]) = *(($0 + [24]))
	CALL eosio_assert([1], [176])
	CALL memcpy(($10 + [288]), $9, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy((($10 + [288]) | [8]), ($9 + [8]), [8])
	CALL eosio_assert([1], [176])
	CALL memcpy($1, ($9 + [16]), [4])
	$2 = *($9)
	$1 = CALL db_store_i64(*((($10 + [32]) + [8])), (int_64)5445027871351373824, (int_64)-6222124003695979872, $2, ($10 + [288]), [20])
	*($9 + [24]) = $1
	if ( (uint_64)($2 <= *((($10 + [32]) + [16]))) ){ goto $label$6 }
	*(($10 + [48])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($10 + [256]) = $9
	$2 = *($9)
	*($10 + [288]) = $2
	*($10 + [332]) = $1
	$3 = ($10 + [60])
	$0 = *($3)
	if ( ((uint_32)$0 >= (uint_32)*((($10 + [32]) + [32]))) ){ goto $label$8 }
	*($0 + [8]) = $2
	*($0 + [16]) = $1
	*($10 + [256]) = [0]
	*($0) = $9
	*($3) = ($0 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $55(($10 + [56]), ($10 + [256]), ($10 + [288]), ($10 + [332]))
	
.LABEL $label$7
	$9 = *($10 + [256])
	*($10 + [256]) = [0]
	if ( ($9 == 0) ){ goto $label$4 }
	CALL $155($9)
	
.LABEL $label$4
	$1 = *($10 + [56])
	if ( ($1 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = ($10 + [60])
	$9 = *($3)
	if ( ((int_32)$9 == (int_32)$1) ){ goto $label$10 }
	
.LOOP $label$11:
	$9 = ($9 + [-24])
	$0 = *($9)
	*($9) = [0]
	if ( ($0 == 0) ){ goto $label$12 }
	CALL $155($0)
	
.LABEL $label$12
	if ( ((int_32)$1 != (int_32)$9) ){ goto $label$11 }
	$9 = *(($10 + [56]))
	goto $label$9 
	
.LABEL $label$10
	$9 = $1
	
.LABEL $label$9
	*($3) = $1
	CALL $155($9)
	
.LABEL $label$2
	$1 = *($10 + [240])
	if ( ($1 == 0) ){ goto $label$13 }
	$3 = ($10 + [244])
	$9 = *($3)
	if ( ((int_32)$9 == (int_32)$1) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($9 + [-24])
	$0 = *($9)
	*($9) = [0]
	if ( ($0 == 0) ){ goto $label$17 }
	CALL $155($0)
	
.LABEL $label$17
	if ( ((int_32)$1 != (int_32)$9) ){ goto $label$16 }
	$9 = *(($10 + [240]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $1
	
.LABEL $label$14
	*($3) = $1
	CALL $155($9)
	
.LABEL $label$13
	*([0] + [4]) = ($10 + [336])
}

int_32 .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [496])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $154([32])) + [20]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [528])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [528])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[16]), [528])
	CALL memcpy(($6 + [16]), ($7 + [16]), [4])
	*($6 + [24]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [24])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $55(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $155($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $55 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $154(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $159($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $155($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $155($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN8pandafun13generate_randEmPcmi (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$12 = ($0 + [1])
	$13 = [0]
	$10 = ($1 + [2])
	
.LOOP $label$2:
	if ( ((int_32)$13 >= (int_32)$3) ){ goto $label$1 }
	$4 = ($13 + [1])
	$7 = *($10)
	$6 = *(($1 + [1]))
	$5 = *($1)
	$0 = $12
	
.LOOP $label$3:
	$11 = ((int_32)((int_32)$0 * (int_32)$0) * (int_32)$0)
	$9 = ($0 + [1])
	$0 = $9
	$8 = ((uint_32)$11 % (uint_32)$2)
	$11 = int_32(($8 << [24]) >> [24])
	if ( ((int_32)$11 == (int_32)$5) ){ goto $label$3 }
	$0 = $9
	if ( ((int_32)$11 == (int_32)$6) ){ goto $label$3 }
	$0 = $9
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$3 }
	*(($1 + $13)) = $8
	$12 = ($12 + [1])
	$13 = $4
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$1
}

void .FUNC _ZN8pandafun10apply_prayERKNS_4prayE (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_32 $18
	$18 = (*([0] + [4]) - [592])
	*([0] + [4]) = $18
	CALL require_auth((int_64)-6222124003696921904)
	CALL _ZN8pandafun10pausecheckEv()
	CALL _ZN8pandafun10blackcheckEy(*($0))
	$3 = [0]
	*((($18 + [424]) + [32])) = [0]
	*($18 + [440]) = (int_64)-1
	*($18 + [448]) = (int_64)0
	$15 = *($0)
	*($18 + [432]) = $15
	*($18 + [424]) = (int_64)-6222124003695979872
	$6 = [0]
	$13 = CALL db_find_i64((int_64)-6222124003695979872, $15, (int_64)-6222123794639618048, *($0 + [8]))
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $32(($18 + [424]), $13)
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)($18 + [424])), [32])
	
.LABEL $label$1
	$9 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($9, [3312])
	CALL eosio_assert(((int_64)*($6 + [8 align=1]) != (int_64)5444054035298516992), [3360])
	*((($18 + [384]) + [32])) = [0]
	*($18 + [400]) = (int_64)-1
	$15 = *($0)
	*($18 + [392]) = $15
	*($18 + [384]) = (int_64)-6222124003695979872
	*($18 + [408]) = (int_64)0
	$13 = CALL db_find_i64((int_64)-6222124003695979872, $15, (int_64)3904810955002871808, (int_64)0)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $58(($18 + [384]), $13)
	CALL eosio_assert(((int_32)*($3 + [28]) == (int_32)($18 + [384])), [32])
	
.LABEL $label$2
	$13 = [0]
	$2 = ((int_32)$3 != (int_32)[0])
	CALL eosio_assert($2, [3408])
	CALL eosio_assert(((int_32)*($3 + [16 align=1]) > (int_32)[0]), [3456])
	CALL eosio_assert($2, [272])
	CALL eosio_assert(((int_32)*($3 + [28]) == (int_32)($18 + [384])), [320])
	CALL eosio_assert(((int_64)*($18 + [384]) == (int_64)CALL $fimport$14()), [368])
	*($3 + [16 align=1]) = (*($3 + [16 align=1]) + [-1])
	$15 = *($3)
	CALL eosio_assert([1], [432])
	*($18 + [352]) = (($18 + [464]) + [28])
	*($18 + [348]) = ($18 + [464])
	*($18 + [344]) = ($18 + [464])
	CALL $59(($18 + [344]), $3)
	CALL db_update_i64(*($3 + [32]), (int_64)-6222124003695979872, ($18 + [464]), [28])
	$3 = ($18 + [400])
	if ( (uint_64)($15 <= *($3)) ){ goto $label$3 }
	*($3) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*((($18 + [344]) + [32])) = [0]
	*($18 + [360]) = (int_64)-1
	$15 = *($0)
	*($18 + [352]) = $15
	*($18 + [344]) = (int_64)-6222124003695979872
	*($18 + [368]) = (int_64)0
	$3 = CALL db_find_i64((int_64)-6222124003695979872, $15, (int_64)7615828862441619456, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	$13 = CALL $49(($18 + [344]), $3)
	CALL eosio_assert(((int_32)*($13 + [80]) == (int_32)($18 + [344])), [32])
	
.LABEL $label$4
	$3 = ((int_32)$13 != (int_32)[0])
	CALL eosio_assert($3, [3168])
	CALL eosio_assert(((int_64)*($13 + [72 align=1]) == (int_64)*($0 + [32])), [3488])
	*(($2 = (($18 + [304]) + [24]))) = *(($13 + [32]))
	*(($7 = (($18 + [304]) + [16]))) = *(($13 + [24]))
	*($18 + [312]) = *(($13 + [16]))
	*($18 + [304]) = *($13 + [8 align=1])
	*(($5 = (($18 + [272]) + [24]))) = *(($13 + [64]))
	*(($12 = (($18 + [272]) + [16]))) = *(($13 + [56]))
	*($18 + [280]) = *(($13 + [48]))
	*($18 + [272]) = *($13 + [40 align=1])
	*(($4 = (($18 + [240]) + [24]))) = *($2)
	*(($2 = (($18 + [240]) + [16]))) = *($7)
	*($18 + [248]) = *($18 + [312])
	*($18 + [240]) = *($18 + [304])
	$15 = *($0 + [16])
	*(($7 = (($18 + [160]) + [24]))) = *($4)
	*(($4 = (($18 + [160]) + [16]))) = *($2)
	*($18 + [168]) = *($18 + [248])
	*($18 + [160]) = *($18 + [240])
	CALL memset(($18 + [112]), [0], [24])
	*($18 + [16]) = $15
	CALL snprintf(($18 + [112]), [24], [16], ($18 + [16]))
	CALL sha256(($18 + [112]), CALL $185(($18 + [112])), ($18 + [464]))
	CALL eosio_assert((CALL $186(($18 + [160]), ($18 + [464]), [32]) == 0), [3520])
	*(($2 = (($18 + [208]) + [24]))) = *($5)
	*(($5 = (($18 + [208]) + [16]))) = *($12)
	*($18 + [216]) = *($18 + [280])
	*($18 + [208]) = *($18 + [272])
	$15 = *($0 + [24])
	*($7) = *($2)
	*($4) = *($5)
	*($18 + [168]) = *($18 + [216])
	*($18 + [160]) = *($18 + [208])
	CALL memset(($18 + [112]), [0], [24])
	*($18) = $15
	CALL snprintf(($18 + [112]), [24], [16], $18)
	CALL sha256(($18 + [112]), CALL $185(($18 + [112])), ($18 + [464]))
	CALL eosio_assert((CALL $186(($18 + [160]), ($18 + [464]), [32]) == 0), [3600])
	$15 = *($0 + [24])
	$17 = *($0 + [16])
	*((($18 + [160]) + [32])) = [0]
	*($18 + [168]) = (int_64)-6222124003695979872
	*($18 + [160]) = (int_64)-6222124003695979872
	*($18 + [176]) = (int_64)-1
	*($18 + [184]) = (int_64)0
	$1 = ((uint_64)((int_64)$15 ^ (int_64)$17) % (uint_64)(int_64)45000)
	$2 = [0]
	$7 = CALL db_find_i64((int_64)-6222124003695979872, (int_64)-6222124003695979872, (int_64)4982871467403247616, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = CALL $7(($18 + [160]), $7)
	CALL eosio_assert(((int_32)*($2 + [96]) == (int_32)($18 + [160])), [32])
	
.LABEL $label$5
	$7 = ((int_32)$2 != (int_32)[0])
	CALL eosio_assert($7, [3680])
	CALL eosio_assert($3, [2448])
	CALL eosio_assert($3, [2496])
	$3 = CALL db_next_i64(*($13 + [84]), ($18 + [464]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	CALL $49(($18 + [344]), $3)
	
.LABEL $label$6
	CALL $60(($18 + [344]), $13)
	$13 = ($6 + [39])
	$3 = (*($13) + [-1])
	if ( ($3 == 0) ){ goto $label$8 }
	CALL eosio_assert($9, [272])
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)($18 + [424])), [320])
	CALL eosio_assert(((int_64)*($18 + [424]) == (int_64)CALL $fimport$14()), [368])
	*($13) = $3
	$15 = *($6)
	CALL eosio_assert([1], [432])
	CALL eosio_assert([1], [176])
	CALL memcpy(($18 + [464]), $6, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy((($18 + [464]) | [8]), ($6 + [8]), [8])
	*($18 + [112]) = [24]
	CALL eosio_assert([1], [176])
	CALL memcpy((($18 + [464]) + [16]), ($18 + [112]), [1])
	CALL eosio_assert([1], [176])
	CALL memcpy(($18 + [481]), ($6 + [16]), [24])
	CALL db_update_i64(*($6 + [44]), (int_64)-6222124003695979872, ($18 + [464]), [41])
	$13 = (($18 + [424]) + [16])
	if ( (uint_64)($15 <= *($13)) ){ goto $label$7 }
	*($13) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	goto $label$7 
	
.LABEL $label$8
	$15 = *(($6 + [8]))
	if ( ((int_64)$15 > (int_64)4461166896674242559) ){ goto $label$12 }
	if ( ((int_64)$15 == (int_64)-7120433710884716544) ){ goto $label$11 }
	if ( ((int_64)$15 != (int_64)-4349433408368148480) ){ goto $label$9 }
	CALL eosio_assert($7, [272])
	CALL eosio_assert(((int_32)*($2 + [96]) == (int_32)($18 + [160])), [320])
	CALL eosio_assert(((int_64)*($18 + [160]) == (int_64)CALL $fimport$14()), [368])
	*($2 + [24 align=1]) = ((int_64)*($2 + [24 align=1]) + (int_64)-1)
	$15 = *($2)
	CALL eosio_assert([1], [432])
	*($18 + [120]) = (($18 + [464]) + [93])
	*($18 + [116]) = ($18 + [464])
	*($18 + [112]) = ($18 + [464])
	CALL $8(($18 + [112]), $2)
	CALL db_update_i64(*($2 + [100]), (int_64)-6222124003695979872, ($18 + [464]), [93])
	$13 = ($18 + [176])
	if ( (uint_64)($15 <= *($13)) ){ goto $label$9 }
	*($13) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	goto $label$9 
	
.LABEL $label$12
	if ( ((int_64)$15 == (int_64)4461166896674242560) ){ goto $label$10 }
	if ( ((int_64)$15 != (int_64)7287551300688936960) ){ goto $label$9 }
	CALL eosio_assert($7, [272])
	CALL eosio_assert(((int_32)*($2 + [96]) == (int_32)($18 + [160])), [320])
	CALL eosio_assert(((int_64)*($18 + [160]) == (int_64)CALL $fimport$14()), [368])
	*($2 + [32 align=1]) = ((int_64)*($2 + [32 align=1]) + (int_64)-1)
	$15 = *($2)
	CALL eosio_assert([1], [432])
	*($18 + [120]) = (($18 + [464]) + [93])
	*($18 + [116]) = ($18 + [464])
	*($18 + [112]) = ($18 + [464])
	CALL $8(($18 + [112]), $2)
	CALL db_update_i64(*($2 + [100]), (int_64)-6222124003695979872, ($18 + [464]), [93])
	$13 = ($18 + [176])
	if ( (uint_64)($15 <= *($13)) ){ goto $label$9 }
	*($13) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	goto $label$9 
	
.LABEL $label$11
	CALL eosio_assert($7, [272])
	CALL eosio_assert(((int_32)*($2 + [96]) == (int_32)($18 + [160])), [320])
	CALL eosio_assert(((int_64)*($18 + [160]) == (int_64)CALL $fimport$14()), [368])
	*($2 + [8 align=1]) = ((int_64)*($2 + [8 align=1]) + (int_64)-1)
	$15 = *($2)
	CALL eosio_assert([1], [432])
	*($18 + [120]) = (($18 + [464]) + [93])
	*($18 + [116]) = ($18 + [464])
	*($18 + [112]) = ($18 + [464])
	CALL $8(($18 + [112]), $2)
	CALL db_update_i64(*($2 + [100]), (int_64)-6222124003695979872, ($18 + [464]), [93])
	$13 = ($18 + [176])
	if ( (uint_64)($15 <= *($13)) ){ goto $label$9 }
	*($13) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	goto $label$9 
	
.LABEL $label$10
	CALL eosio_assert($7, [272])
	CALL eosio_assert(((int_32)*($2 + [96]) == (int_32)($18 + [160])), [320])
	CALL eosio_assert(((int_64)*($18 + [160]) == (int_64)CALL $fimport$14()), [368])
	*($2 + [16 align=1]) = ((int_64)*($2 + [16 align=1]) + (int_64)-1)
	$15 = *($2)
	CALL eosio_assert([1], [432])
	*($18 + [120]) = (($18 + [464]) + [93])
	*($18 + [116]) = ($18 + [464])
	*($18 + [112]) = ($18 + [464])
	CALL $8(($18 + [112]), $2)
	CALL db_update_i64(*($2 + [100]), (int_64)-6222124003695979872, ($18 + [464]), [93])
	$13 = ($18 + [176])
	if ( (uint_64)($15 <= *($13)) ){ goto $label$9 }
	*($13) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	CALL eosio_assert($9, [2448])
	CALL eosio_assert($9, [2496])
	$13 = CALL db_next_i64(*($6 + [44]), ($18 + [464]))
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$13 }
	CALL $32(($18 + [424]), $13)
	
.LABEL $label$13
	CALL $35(($18 + [424]), $6)
	
.LABEL $label$7
	$9 = ((uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) / (uint_32)[86400])
	$15 = (int_64)0
	$14 = (int_64)59
	$13 = [160]
	$16 = (int_64)0
	
.LOOP $label$14:
	if ( ((uint_64)$15 > (uint_64)(int_64)3) ){ goto $label$19 }
	$3 = *($13)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$18 }
	$3 = ($3 + [165])
	goto $label$17 
	
.LABEL $label$19
	$17 = (int_64)0
	if ( ((uint_64)$15 <= (uint_64)(int_64)11) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$17
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$16
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$15
	$13 = ($13 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$16 = ((int_64)$17 | (int_64)$16)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$14 }
	*(($18 + [144])) = [0]
	*($18 + [128]) = (int_64)-1
	*($18 + [136]) = (int_64)0
	*($18 + [120]) = $16
	*($18 + [112]) = (int_64)-6222124003695979872
	$15 = (CASTING uint_64)(uint_32 $9)
	$13 = CALL db_find_i64((int_64)-6222124003695979872, $16, (int_64)-4157500428759203840, $15)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$21 }
	$13 = CALL $10(($18 + [112]), $13)
	CALL eosio_assert(((int_32)*($13 + [12]) == (int_32)($18 + [112])), [32])
	CALL eosio_assert([1], [272])
	CALL eosio_assert(((int_32)*($13 + [12]) == (int_32)($18 + [112])), [320])
	CALL eosio_assert(((int_64)*($18 + [112]) == (int_64)CALL $fimport$14()), [368])
	*($13 + [8 align=1]) = (*($13 + [8 align=1]) + [1])
	$15 = *($13)
	CALL eosio_assert([1], [432])
	CALL eosio_assert([1], [176])
	CALL memcpy(($18 + [464]), $13, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy((($18 + [464]) | [8]), ($13 + [8]), [4])
	CALL db_update_i64(*($13 + [16]), (int_64)-6222124003695979872, ($18 + [464]), [12])
	$13 = ($18 + [128])
	if ( (uint_64)($15 <= *($13)) ){ goto $label$20 }
	*($13) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	goto $label$20 
	
.LABEL $label$21
	CALL eosio_assert(((int_64)*($18 + [112]) == (int_64)CALL $fimport$14()), [96])
	*(($13 = CALL $154([24])) + [12]) = ($18 + [112])
	*($13 + [8 align=1]) = [1]
	*($13) = $15
	CALL eosio_assert([1], [176])
	CALL memcpy(($18 + [464]), $13, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy((($18 + [464]) | [8]), ($13 + [8]), [4])
	$15 = *($13)
	$9 = CALL db_store_i64(*((($18 + [112]) + [8])), (int_64)-4157500428759203840, (int_64)-6222124003695979872, $15, ($18 + [464]), [12])
	*($13 + [16]) = $9
	$3 = ($18 + [128])
	if ( (uint_64)($15 <= *($3)) ){ goto $label$22 }
	*($3) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	
.LABEL $label$22
	*($18 + [72]) = $13
	$15 = *($13)
	*($18 + [464]) = $15
	*($18 + [32]) = $9
	$5 = ($18 + [140])
	$3 = *($5)
	if ( ((uint_32)$3 >= (uint_32)*(($18 + [144]))) ){ goto $label$24 }
	*($3 + [8]) = $15
	*($3 + [16]) = $9
	*($18 + [72]) = [0]
	*($3) = $13
	*($5) = ($3 + [24])
	goto $label$23 
	
.LABEL $label$24
	CALL $11(($18 + [136]), ($18 + [72]), ($18 + [464]), ($18 + [32]))
	
.LABEL $label$23
	$13 = *($18 + [72])
	$3 = [0]
	*($18 + [72]) = [0]
	if ( ($13 == 0) ){ goto $label$25 }
	CALL $155($13)
	
.LABEL $label$25
	*((($18 + [72]) + [8])) = [0]
	*(($9 = ($18 + [88]))) = [0]
	*($18 + [84]) = ($18 + [112])
	*($18 + [76]) = ($18 + [112])
	$13 = CALL db_lowerbound_i64(*($18 + [112]), *((($18 + [112]) + [8])), (int_64)-4157500428759203840, (int_64)0)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$26 }
	$3 = CALL $10(($18 + [112]), $13)
	
.LABEL $label$26
	$13 = ($18 + [84])
	if ( ((int_32)*($9) == (int_32)$3) ){ goto $label$27 }
	CALL $61($13)
	
.LABEL $label$27
	$3 = [0]
	$9 = CALL db_lowerbound_i64(*($18 + [112]), *(($18 + [120])), (int_64)-4157500428759203840, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$28 }
	$3 = CALL $10(($18 + [112]), $9)
	
.LABEL $label$28
	$9 = (($18 + [72]) + [16])
	if ( ((int_32)*($9) == (int_32)$3) ){ goto $label$29 }
	CALL eosio_assert($7, [272])
	CALL eosio_assert(((int_32)*($2 + [96]) == (int_32)($18 + [160])), [320])
	CALL eosio_assert(((int_64)*($18 + [160]) == (int_64)CALL $fimport$14()), [368])
	$15 = *($2)
	$17 = *($2 + [72 align=1])
	*($18 + [32]) = *(($18 + [84]))
	*($2 + [72 align=1]) = ((int_64)$17 + (int_64)*(*(CALL $61(($18 + [32])) + [4]) + [8 align=1]))
	CALL eosio_assert(((int_64)$15 == (int_64)*($2)), [432])
	*($18 + [40]) = (($18 + [464]) + [93])
	*($18 + [36]) = ($18 + [464])
	*($18 + [32]) = ($18 + [464])
	CALL $8(($18 + [32]), $2)
	CALL db_update_i64(*($2 + [100]), (int_64)-6222124003695979872, ($18 + [464]), [93])
	if ( (uint_64)($15 <= *((($18 + [160]) + [16]))) ){ goto $label$29 }
	*(($18 + [176])) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	
.LABEL $label$29
	$3 = [0]
	*((($18 + [72]) + [8])) = [0]
	*($9) = [0]
	*(($18 + [84])) = ($18 + [112])
	*($18 + [76]) = ($18 + [112])
	$9 = CALL db_lowerbound_i64(*($18 + [112]), *((($18 + [112]) + [8])), (int_64)-4157500428759203840, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$30 }
	$3 = CALL $10(($18 + [112]), $9)
	
.LABEL $label$30
	if ( ((int_32)*(($18 + [88])) == (int_32)$3) ){ goto $label$31 }
	CALL $61($13)
	$3 = [0]
	$9 = CALL db_lowerbound_i64(*($18 + [112]), *(($18 + [120])), (int_64)-4157500428759203840, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$32 }
	$3 = CALL $10(($18 + [112]), $9)
	
.LABEL $label$32
	if ( ((int_32)*(($18 + [88])) == (int_32)$3) ){ goto $label$31 }
	CALL $61($13)
	$3 = [0]
	$9 = CALL db_lowerbound_i64(*($18 + [112]), *(($18 + [120])), (int_64)-4157500428759203840, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$33 }
	$3 = CALL $10(($18 + [112]), $9)
	
.LABEL $label$33
	if ( ((int_32)*(($18 + [88])) == (int_32)$3) ){ goto $label$31 }
	CALL $61($13)
	$3 = [0]
	$9 = CALL db_lowerbound_i64(*($18 + [112]), *(($18 + [120])), (int_64)-4157500428759203840, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$34 }
	$3 = CALL $10(($18 + [112]), $9)
	
.LABEL $label$34
	if ( ((int_32)*(($18 + [88])) == (int_32)$3) ){ goto $label$31 }
	CALL $61($13)
	
.LABEL $label$31
	$13 = [0]
	$3 = CALL db_lowerbound_i64(*($18 + [112]), *(($18 + [120])), (int_64)-4157500428759203840, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$35 }
	$13 = CALL $10(($18 + [112]), $3)
	
.LABEL $label$35
	if ( ((int_32)*(($18 + [88])) == (int_32)$13) ){ goto $label$20 }
	*($18 + [464]) = *(($18 + [84]))
	$17 = *(*(CALL $61(($18 + [464])) + [4]))
	$13 = CALL db_lowerbound_i64(*($18 + [112]), *((($18 + [112]) + [8])), (int_64)-4157500428759203840, (int_64)0)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$20 }
	$4 = (($18 + [464]) + [93])
	$13 = CALL $10(($18 + [112]), $13)
	$8 = ($2 + [96])
	$9 = ($2 + [72])
	$10 = (($18 + [32]) + [8])
	$11 = ($2 + [100])
	$12 = ($18 + [176])
	
.LOOP $label$36:
	if ( ((uint_64)*($13) > (uint_64)$17) ){ goto $label$20 }
	CALL eosio_assert($7, [272])
	CALL eosio_assert(((int_32)*($8) == (int_32)($18 + [160])), [320])
	CALL eosio_assert(((int_64)*($18 + [160]) == (int_64)CALL $fimport$14()), [368])
	*($9) = (int_64))(*($9) - *($13 + [8 align=1]))
	$15 = *($2)
	CALL eosio_assert([1], [432])
	*($10) = $4
	*($18 + [36]) = ($18 + [464])
	*($18 + [32]) = ($18 + [464])
	CALL $8(($18 + [32]), $2)
	CALL db_update_i64(*($11), (int_64)-6222124003695979872, ($18 + [464]), [93])
	if ( (uint_64)($15 <= *($12)) ){ goto $label$37 }
	*($12) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	
.LABEL $label$37
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$3 = [0]
	$5 = CALL db_next_i64(*($13 + [16]), ($18 + [464]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$38 }
	$3 = CALL $10(($18 + [112]), $5)
	
.LABEL $label$38
	CALL $62(($18 + [112]), $13)
	$13 = $3
	if ( $3 ){ goto $label$36 }
	
.LABEL $label$20
	$15 = *(($6 + [8]))
	if ( ((int_64)$15 > (int_64)4461166896674242559) ){ goto $label$51 }
	if ( ((int_64)$15 == (int_64)-7120433710884716544) ){ goto $label$49 }
	if ( ((int_64)$15 != (int_64)-4349433408368148480) ){ goto $label$50 }
	$9 = [0]
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)1412) ){ goto $label$39 }
	if ( ((uint_64)$1 > (uint_64)(int_64)332) ){ goto $label$45 }
	if ( ((int_64)*($2 + [32 align=1]) < (int_64)4000) ){ goto $label$43 }
	CALL prints([3776])
	goto $label$39 
	
.LABEL $label$51
	if ( ((int_64)$15 == (int_64)4461166896674242560) ){ goto $label$47 }
	if ( ((int_64)$15 != (int_64)7287551300688936960) ){ goto $label$50 }
	$9 = [0]
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)778) ){ goto $label$39 }
	if ( ((uint_64)$1 > (uint_64)(int_64)148) ){ goto $label$44 }
	if ( ((int_64)*($2 + [40 align=1]) >= (int_64)400) ){ goto $label$42 }
	$9 = [1]
	$15 = (int_64)5444054035298516992
	goto $label$39 
	
.LABEL $label$50
	CALL prints([3872])
	$9 = [1]
	goto $label$48 
	
.LABEL $label$49
	if ( ((uint_64)$1 <= (uint_64)(int_64)3149) ){ goto $label$46 }
	$9 = [0]
	
.LABEL $label$48
	$15 = (int_64)0
	goto $label$39 
	
.LABEL $label$47
	$9 = [0]
	$15 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)2924) ){ goto $label$39 }
	$9 = [1]
	$15 = (int_64)4461166896674242560
	if ( ((uint_64)$1 > (uint_64)(int_64)1124) ){ goto $label$39 }
	$15 = (int_64)-4349433408368148480
	if ( ((int_64)*($2 + [24 align=1]) < (int_64)20000) ){ goto $label$39 }
	CALL prints([3728])
	$15 = (int_64)0
	$9 = [0]
	goto $label$39 
	
.LABEL $label$46
	$15 = ( (int_64)4461166896674242560 ? (int_64)-7120433710884716544 : (uint_64)($1 <= (int_64)1350) )
	$9 = [1]
	goto $label$39 
	
.LABEL $label$45
	if ( ((int_64)*($2 + [24 align=1]) >= (int_64)20000) ){ goto $label$41 }
	$9 = [1]
	$15 = (int_64)-4349433408368148480
	goto $label$39 
	
.LABEL $label$44
	if ( ((int_64)*($2 + [32 align=1]) >= (int_64)4000) ){ goto $label$40 }
	
.LABEL $label$43
	$9 = [1]
	$15 = (int_64)7287551300688936960
	goto $label$39 
	
.LABEL $label$42
	CALL prints([3824])
	goto $label$39 
	
.LABEL $label$41
	CALL prints([3728])
	goto $label$39 
	
.LABEL $label$40
	CALL prints([3776])
	
.LABEL $label$39
	*((($18 + [72]) + [32])) = [0]
	*($18 + [88]) = (int_64)-1
	$17 = *($0)
	*($18 + [80]) = $17
	*($18 + [72]) = (int_64)-6222124003695979872
	*($18 + [96]) = (int_64)0
	$13 = CALL db_lowerbound_i64((int_64)-6222124003695979872, $17, (int_64)-5922831644317712384, (int_64)0)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$53 }
	$5 = ($18 + [72])
	$3 = CALL $63(($18 + [72]), $13)
	if ( ((int_64)*($3 + [40 align=1]) == (int_64)*(($0 + [32]))) ){ goto $label$52 }
	
.LOOP $label$54:
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$13 = [0]
	$6 = CALL db_next_i64(*($3 + [56]), ($18 + [464]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$55 }
	$13 = CALL $63(($18 + [72]), $6)
	
.LABEL $label$55
	CALL $64(($18 + [72]), $3)
	$3 = $13
	if ( $13 ){ goto $label$54 }
	goto $label$52 
	
.LABEL $label$53
	$5 = ($18 + [72])
	
.LABEL $label$52
	if ( ($9 == 0) ){ goto $label$66 }
	*(($18 + [70])) = [0]
	*($18 + [68]) = [0]
	*((($18 + [32]) + [16])) = (int_64)0
	*($18 + [40]) = (int_64)0
	*($18 + [32]) = (int_64)0
	if ( ((int_64)$15 != (int_64)5444054035298516992) ){ goto $label$65 }
	*($18 + [55]) = [0]
	$17 = *($2 + [88 align=1])
	CALL eosio_assert($7, [272])
	CALL eosio_assert(((int_32)*($2 + [96]) == (int_32)($18 + [160])), [320])
	CALL eosio_assert(((int_64)*($18 + [160]) == (int_64)CALL $fimport$14()), [368])
	*($2 + [88 align=1]) = (*($2 + [88 align=1]) + [1])
	*($2 + [40 align=1]) = ((int_64)*($2 + [40 align=1]) + (int_64)1)
	$14 = *($2)
	CALL eosio_assert([1], [432])
	*($18 + [584]) = (($18 + [464]) + [93])
	*($18 + [580]) = ($18 + [464])
	*($18 + [576]) = ($18 + [464])
	CALL $8(($18 + [576]), $2)
	CALL db_update_i64(*($2 + [100]), (int_64)-6222124003695979872, ($18 + [464]), [93])
	if ( (uint_64)($14 <= *((($18 + [160]) + [16]))) ){ goto $label$67 }
	*(($18 + [176])) = ( (int_64)-2 ? ((int_64)$14 + (int_64)1) : ((uint_64)$14 > (uint_64)(int_64)-3) )
	
.LABEL $label$67
	$9 = (CASTING uint_32)(uint_64 $1)
	$13 = ($9 + [1])
	
.LOOP $label$68:
	$3 = ((int_32)((int_32)$13 * (int_32)$13) * (int_32)$13)
	$13 = ($13 + [1])
	$3 = ((uint_32)$3 % (uint_32)[23])
	if ( ($3 == 0) ){ goto $label$68 }
	*($18 + [68]) = $3
	$13 = ($9 + [2])
	
.LOOP $label$69:
	$2 = ((int_32)((int_32)$13 * (int_32)$13) * (int_32)$13)
	$7 = ($13 + [1])
	$13 = $7
	$6 = ((uint_32)$2 % (uint_32)[23])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$69 }
	$13 = $7
	if ( ($6 == 0) ){ goto $label$69 }
	*($18 + [69]) = $6
	$13 = ($9 + [3])
	
.LOOP $label$70:
	$2 = ((int_32)((int_32)$13 * (int_32)$13) * (int_32)$13)
	$7 = ($13 + [1])
	$13 = $7
	$2 = ((uint_32)$2 % (uint_32)[23])
	if ( ($2 == 0) ){ goto $label$70 }
	$13 = $7
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$70 }
	$13 = $7
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$70 }
	*(($13 = (($18 + [32]) + $3))) = ((*($13) & [241]) | [6])
	*(($13 = (($18 + [32]) + $6))) = ((*($13) & [242]) | [5])
	*(($18 + [70])) = $2
	*(($13 = (($18 + [32]) + $2))) = ((*($13) & [242]) | [5])
	goto $label$59 
	
.LABEL $label$66
	CALL eosio_assert(((int_64)*($18 + [72]) == (int_64)CALL $fimport$14()), [96])
	*(($13 = CALL $154([64])) + [52]) = $5
	CALL memset($13, [0], [49])
	*($13 + [40 align=1]) = *(($0 + [32]))
	*($13) = *($2 + [80 align=1])
	*($18 + [40]) = (($18 + [464]) + [50])
	*($18 + [36]) = ($18 + [464])
	*($18 + [32]) = ($18 + [464])
	CALL $65(($18 + [32]), $13)
	$15 = *($13)
	$6 = CALL db_store_i64(*(($18 + [80])), (int_64)-5922831644317712384, (int_64)-6222124003695979872, $15, ($18 + [464]), [50])
	*($13 + [56]) = $6
	$3 = ($18 + [88])
	if ( (uint_64)($15 <= *($3)) ){ goto $label$71 }
	*($3) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	
.LABEL $label$71
	*($18 + [32]) = $13
	$15 = *($13)
	*($18 + [464]) = $15
	*($18 + [576]) = $6
	$0 = ($18 + [100])
	$3 = *($0)
	if ( ((uint_32)$3 >= (uint_32)*((($18 + [72]) + [32]))) ){ goto $label$64 }
	*($3 + [8]) = $15
	*($3 + [16]) = $6
	*($18 + [32]) = [0]
	*($3) = $13
	*($0) = ($3 + [24])
	goto $label$63 
	
.LABEL $label$65
	$17 = *($2 + [80 align=1])
	CALL eosio_assert($7, [272])
	CALL eosio_assert(((int_32)*($2 + [96]) == (int_32)($18 + [160])), [320])
	CALL eosio_assert(((int_64)*($18 + [160]) == (int_64)CALL $fimport$14()), [368])
	*($2 + [80 align=1]) = ((int_64)*($2 + [80 align=1]) + (int_64)1)
	$14 = *($2)
	CALL eosio_assert([1], [432])
	$13 = (($18 + [464]) + [93])
	*($18 + [584]) = $13
	*($18 + [580]) = ($18 + [464])
	*($18 + [576]) = ($18 + [464])
	CALL $8(($18 + [576]), $2)
	CALL db_update_i64(*($2 + [100]), (int_64)-6222124003695979872, ($18 + [464]), [93])
	if ( (uint_64)($14 <= *((($18 + [160]) + [16]))) ){ goto $label$72 }
	*(($18 + [176])) = ( (int_64)-2 ? ((int_64)$14 + (int_64)1) : ((uint_64)$14 > (uint_64)(int_64)-3) )
	
.LABEL $label$72
	if ( ((int_64)$15 > (int_64)4461166896674242559) ){ goto $label$62 }
	if ( ((int_64)$15 == (int_64)-7120433710884716544) ){ goto $label$61 }
	if ( ((int_64)$15 != (int_64)-4349433408368148480) ){ goto $label$59 }
	*($18 + [55]) = [15]
	CALL eosio_assert($7, [272])
	CALL eosio_assert(((int_32)*(($2 + [96])) == (int_32)($18 + [160])), [320])
	CALL eosio_assert(((int_64)*($18 + [160]) == (int_64)CALL $fimport$14()), [368])
	*($2 + [24 align=1]) = ((int_64)*($2 + [24 align=1]) + (int_64)1)
	$14 = *($2)
	CALL eosio_assert([1], [432])
	*($18 + [584]) = $13
	*($18 + [580]) = ($18 + [464])
	*($18 + [576]) = ($18 + [464])
	CALL $8(($18 + [576]), $2)
	CALL db_update_i64(*(($2 + [100])), (int_64)-6222124003695979872, ($18 + [464]), [93])
	$13 = ($18 + [176])
	if ( (uint_64)($14 <= *($13)) ){ goto $label$73 }
	*($13) = ( (int_64)-2 ? ((int_64)$14 + (int_64)1) : ((uint_64)$14 > (uint_64)(int_64)-3) )
	
.LABEL $label$73
	$2 = (CASTING uint_32)(uint_64 $1)
	$13 = ($2 + [1])
	
.LOOP $label$74:
	$3 = ((int_32)((int_32)$13 * (int_32)$13) * (int_32)$13)
	$13 = ($13 + [1])
	$3 = ((uint_32)$3 % (uint_32)[23])
	if ( ($3 == 0) ){ goto $label$74 }
	*($18 + [68]) = $3
	$13 = ($2 + [2])
	
.LOOP $label$75:
	$2 = ((int_32)((int_32)$13 * (int_32)$13) * (int_32)$13)
	$6 = ($13 + [1])
	$13 = $6
	$2 = ((uint_32)$2 % (uint_32)[23])
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$75 }
	$13 = $6
	if ( ($2 == 0) ){ goto $label$75 }
	*(($13 = (($18 + [32]) + $3))) = ((*($13) & [242]) | [5])
	*($18 + [69]) = $2
	*(($13 = (($18 + [32]) + $2))) = ((*($13) & [242]) | [5])
	goto $label$59 
	
.LABEL $label$64
	CALL $66(($18 + [96]), ($18 + [32]), ($18 + [464]), ($18 + [576]))
	
.LABEL $label$63
	$13 = *($18 + [32])
	*($18 + [32]) = [0]
	if ( ($13 == 0) ){ goto $label$76 }
	CALL $155($13)
	
.LABEL $label$76
	CALL eosio_assert($7, [272])
	CALL eosio_assert(((int_32)*($2 + [96]) == (int_32)($18 + [160])), [320])
	CALL eosio_assert(((int_64)*($18 + [160]) == (int_64)CALL $fimport$14()), [368])
	*(($13 = ($2 + [80]))) = ((int_64)*($13) + (int_64)1)
	$15 = *($2)
	CALL eosio_assert([1], [432])
	*($18 + [40]) = (($18 + [464]) + [93])
	*($18 + [36]) = ($18 + [464])
	*($18 + [32]) = ($18 + [464])
	CALL $8(($18 + [32]), $2)
	CALL db_update_i64(*($2 + [100]), (int_64)-6222124003695979872, ($18 + [464]), [93])
	$13 = ($18 + [176])
	if ( (uint_64)($15 <= *($13)) ){ goto $label$58 }
	*($13) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	goto $label$58 
	
.LABEL $label$62
	if ( ((int_64)$15 == (int_64)4461166896674242560) ){ goto $label$60 }
	if ( ((int_64)$15 != (int_64)7287551300688936960) ){ goto $label$59 }
	*($18 + [55]) = [25]
	CALL eosio_assert($7, [272])
	CALL eosio_assert(((int_32)*(($2 + [96])) == (int_32)($18 + [160])), [320])
	CALL eosio_assert(((int_64)*($18 + [160]) == (int_64)CALL $fimport$14()), [368])
	*($2 + [32 align=1]) = ((int_64)*($2 + [32 align=1]) + (int_64)1)
	$14 = *($2)
	CALL eosio_assert([1], [432])
	*($18 + [584]) = $13
	*($18 + [580]) = ($18 + [464])
	*($18 + [576]) = ($18 + [464])
	CALL $8(($18 + [576]), $2)
	CALL db_update_i64(*(($2 + [100])), (int_64)-6222124003695979872, ($18 + [464]), [93])
	$13 = ($18 + [176])
	if ( (uint_64)($14 <= *($13)) ){ goto $label$77 }
	*($13) = ( (int_64)-2 ? ((int_64)$14 + (int_64)1) : ((uint_64)$14 > (uint_64)(int_64)-3) )
	
.LABEL $label$77
	$7 = (CASTING uint_32)(uint_64 $1)
	$13 = ($7 + [1])
	$2 = *($18 + [70])
	
.LOOP $label$78:
	$3 = ((int_32)((int_32)$13 * (int_32)$13) * (int_32)$13)
	$6 = ($13 + [1])
	$13 = $6
	$3 = ((uint_32)$3 % (uint_32)[23])
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$78 }
	$13 = $6
	if ( ($3 == 0) ){ goto $label$78 }
	*($18 + [68]) = $3
	$13 = ($7 + [2])
	
.LOOP $label$79:
	$6 = ((int_32)((int_32)$13 * (int_32)$13) * (int_32)$13)
	$7 = ($13 + [1])
	$13 = $7
	$6 = ((uint_32)$6 % (uint_32)[23])
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$79 }
	$13 = $7
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$79 }
	$13 = $7
	if ( ($6 == 0) ){ goto $label$79 }
	*(($13 = (($18 + [32]) + $3))) = ((*($13) & [241]) | [6])
	*($18 + [69]) = $6
	*(($13 = (($18 + [32]) + $6))) = ((*($13) & [242]) | [5])
	goto $label$59 
	
.LABEL $label$61
	*($18 + [55]) = [10]
	CALL eosio_assert($7, [272])
	CALL eosio_assert(((int_32)*(($2 + [96])) == (int_32)($18 + [160])), [320])
	CALL eosio_assert(((int_64)*($18 + [160]) == (int_64)CALL $fimport$14()), [368])
	*($2 + [8 align=1]) = ((int_64)*($2 + [8 align=1]) + (int_64)1)
	$14 = *($2)
	CALL eosio_assert([1], [432])
	*($18 + [584]) = $13
	*($18 + [580]) = ($18 + [464])
	*($18 + [576]) = ($18 + [464])
	CALL $8(($18 + [576]), $2)
	CALL db_update_i64(*(($2 + [100])), (int_64)-6222124003695979872, ($18 + [464]), [93])
	$13 = ($18 + [176])
	if ( (uint_64)($14 <= *($13)) ){ goto $label$59 }
	*($13) = ( (int_64)-2 ? ((int_64)$14 + (int_64)1) : ((uint_64)$14 > (uint_64)(int_64)-3) )
	goto $label$59 
	
.LABEL $label$60
	*($18 + [55]) = [10]
	CALL eosio_assert($7, [272])
	CALL eosio_assert(((int_32)*(($2 + [96])) == (int_32)($18 + [160])), [320])
	CALL eosio_assert(((int_64)*($18 + [160]) == (int_64)CALL $fimport$14()), [368])
	*($2 + [16 align=1]) = ((int_64)*($2 + [16 align=1]) + (int_64)1)
	$14 = *($2)
	CALL eosio_assert([1], [432])
	*($18 + [584]) = $13
	*($18 + [580]) = ($18 + [464])
	*($18 + [576]) = ($18 + [464])
	CALL $8(($18 + [576]), $2)
	CALL db_update_i64(*(($2 + [100])), (int_64)-6222124003695979872, ($18 + [464]), [93])
	$13 = ($18 + [176])
	if ( (uint_64)($14 <= *($13)) ){ goto $label$80 }
	*($13) = ( (int_64)-2 ? ((int_64)$14 + (int_64)1) : ((uint_64)$14 > (uint_64)(int_64)-3) )
	
.LABEL $label$80
	$13 = ((CASTING uint_32)(uint_64 $1) + [1])
	
.LOOP $label$81:
	$3 = ((int_32)((int_32)$13 * (int_32)$13) * (int_32)$13)
	$13 = ($13 + [1])
	$3 = ((uint_32)$3 % (uint_32)[23])
	if ( ($3 == 0) ){ goto $label$81 }
	*($18 + [68]) = $3
	*(($13 = (($18 + [32]) + $3))) = ((*($13) & [242]) | [5])
	
.LABEL $label$59
	CALL eosio_assert(((int_64)*($18 + [424]) == (int_64)CALL $fimport$14()), [96])
	*(($13 = CALL $154([52])) + [40]) = ($18 + [424])
	*($13 + [8 align=1]) = $15
	*($13) = $17
	$3 = ($13 + [16])
	CALL memcpy($3, ($18 + [32]), [24])
	CALL eosio_assert([1], [176])
	CALL memcpy(($18 + [464]), $13, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy((($18 + [464]) | [8]), ($13 + [8]), [8])
	*($18 + [576]) = [24]
	CALL eosio_assert([1], [176])
	CALL memcpy((($18 + [464]) + [16]), ($18 + [576]), [1])
	CALL eosio_assert([1], [176])
	CALL memcpy(($18 + [481]), $3, [24])
	$14 = *($13)
	$2 = CALL db_store_i64(*((($18 + [424]) + [8])), (int_64)-6222123794639618048, (int_64)-6222124003695979872, $14, ($18 + [464]), [41])
	*($13 + [44]) = $2
	$3 = (($18 + [424]) + [16])
	if ( (uint_64)($14 <= *($3)) ){ goto $label$82 }
	*($3) = ( (int_64)-2 ? ((int_64)$14 + (int_64)1) : ((uint_64)$14 > (uint_64)(int_64)-3) )
	
.LABEL $label$82
	*($18 + [576]) = $13
	$14 = *($13)
	*($18 + [464]) = $14
	*($18 + [572]) = $2
	$6 = ($18 + [452])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($18 + [456]))) ){ goto $label$84 }
	*($3 + [8]) = $14
	*($3 + [16]) = $2
	*($18 + [576]) = [0]
	*($3) = $13
	*($6) = ($3 + [24])
	goto $label$83 
	
.LABEL $label$84
	CALL $29(($18 + [448]), ($18 + [576]), ($18 + [464]), ($18 + [572]))
	
.LABEL $label$83
	$13 = *($18 + [576])
	*($18 + [576]) = [0]
	if ( ($13 == 0) ){ goto $label$85 }
	CALL $155($13)
	
.LABEL $label$85
	CALL eosio_assert(((int_64)*($18 + [72]) == (int_64)CALL $fimport$14()), [96])
	*(($13 = CALL $154([64])) + [52]) = $5
	*($13 + [8 align=1]) = $15
	*($13) = $17
	CALL memcpy(($13 + [16]), ($18 + [32]), [24])
	*($13 + [48]) = [1]
	*($13 + [40 align=1]) = *(($0 + [32]))
	*($18 + [584]) = (($18 + [464]) + [50])
	*($18 + [580]) = ($18 + [464])
	*($18 + [576]) = ($18 + [464])
	CALL $65(($18 + [576]), $13)
	$15 = *($13)
	$2 = CALL db_store_i64(*(($18 + [80])), (int_64)-5922831644317712384, (int_64)-6222124003695979872, $15, ($18 + [464]), [50])
	*($13 + [56]) = $2
	$3 = (($18 + [72]) + [16])
	if ( (uint_64)($15 <= *($3)) ){ goto $label$86 }
	*($3) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	
.LABEL $label$86
	*($18 + [576]) = $13
	$15 = *($13)
	*($18 + [464]) = $15
	*($18 + [572]) = $2
	$6 = ($18 + [100])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*((($18 + [72]) + [32]))) ){ goto $label$88 }
	*($3 + [8]) = $15
	*($3 + [16]) = $2
	*($18 + [576]) = [0]
	*($3) = $13
	*($6) = ($3 + [24])
	goto $label$87 
	
.LABEL $label$88
	CALL $66(($18 + [96]), ($18 + [576]), ($18 + [464]), ($18 + [572]))
	
.LABEL $label$87
	$13 = *($18 + [576])
	*($18 + [576]) = [0]
	if ( ($13 == 0) ){ goto $label$58 }
	CALL $155($13)
	$2 = *($18 + [96])
	if ( $2 ){ goto $label$57 }
	goto $label$56 
	
.LABEL $label$58
	$2 = *($18 + [96])
	if ( ($2 == 0) ){ goto $label$56 }
	
.LABEL $label$57
	$6 = ($18 + [100])
	$13 = *($6)
	if ( ((int_32)$13 == (int_32)$2) ){ goto $label$90 }
	
.LOOP $label$91:
	$13 = ($13 + [-24])
	$3 = *($13)
	*($13) = [0]
	if ( ($3 == 0) ){ goto $label$92 }
	CALL $155($3)
	
.LABEL $label$92
	if ( ((int_32)$2 != (int_32)$13) ){ goto $label$91 }
	$13 = *(($18 + [96]))
	goto $label$89 
	
.LABEL $label$90
	$13 = $2
	
.LABEL $label$89
	*($6) = $2
	CALL $155($13)
	
.LABEL $label$56
	$2 = *($18 + [136])
	if ( ($2 == 0) ){ goto $label$93 }
	$6 = ($18 + [140])
	$13 = *($6)
	if ( ((int_32)$13 == (int_32)$2) ){ goto $label$95 }
	
.LOOP $label$96:
	$13 = ($13 + [-24])
	$3 = *($13)
	*($13) = [0]
	if ( ($3 == 0) ){ goto $label$97 }
	CALL $155($3)
	
.LABEL $label$97
	if ( ((int_32)$2 != (int_32)$13) ){ goto $label$96 }
	$13 = *(($18 + [136]))
	goto $label$94 
	
.LABEL $label$95
	$13 = $2
	
.LABEL $label$94
	*($6) = $2
	CALL $155($13)
	
.LABEL $label$93
	$2 = *($18 + [184])
	if ( ($2 == 0) ){ goto $label$98 }
	$6 = ($18 + [188])
	$13 = *($6)
	if ( ((int_32)$13 == (int_32)$2) ){ goto $label$100 }
	
.LOOP $label$101:
	$13 = ($13 + [-24])
	$3 = *($13)
	*($13) = [0]
	if ( ($3 == 0) ){ goto $label$102 }
	CALL $155($3)
	
.LABEL $label$102
	if ( ((int_32)$2 != (int_32)$13) ){ goto $label$101 }
	$13 = *(($18 + [184]))
	goto $label$99 
	
.LABEL $label$100
	$13 = $2
	
.LABEL $label$99
	*($6) = $2
	CALL $155($13)
	
.LABEL $label$98
	$2 = *($18 + [368])
	if ( ($2 == 0) ){ goto $label$103 }
	$6 = ($18 + [372])
	$13 = *($6)
	if ( ((int_32)$13 == (int_32)$2) ){ goto $label$105 }
	
.LOOP $label$106:
	$13 = ($13 + [-24])
	$3 = *($13)
	*($13) = [0]
	if ( ($3 == 0) ){ goto $label$107 }
	CALL $155($3)
	
.LABEL $label$107
	if ( ((int_32)$2 != (int_32)$13) ){ goto $label$106 }
	$13 = *(($18 + [368]))
	goto $label$104 
	
.LABEL $label$105
	$13 = $2
	
.LABEL $label$104
	*($6) = $2
	CALL $155($13)
	
.LABEL $label$103
	$2 = *($18 + [408])
	if ( ($2 == 0) ){ goto $label$108 }
	$6 = ($18 + [412])
	$13 = *($6)
	if ( ((int_32)$13 == (int_32)$2) ){ goto $label$110 }
	
.LOOP $label$111:
	$13 = ($13 + [-24])
	$3 = *($13)
	*($13) = [0]
	if ( ($3 == 0) ){ goto $label$112 }
	CALL $155($3)
	
.LABEL $label$112
	if ( ((int_32)$2 != (int_32)$13) ){ goto $label$111 }
	$13 = *(($18 + [408]))
	goto $label$109 
	
.LABEL $label$110
	$13 = $2
	
.LABEL $label$109
	*($6) = $2
	CALL $155($13)
	
.LABEL $label$108
	$2 = *($18 + [448])
	if ( ($2 == 0) ){ goto $label$113 }
	$6 = ($18 + [452])
	$13 = *($6)
	if ( ((int_32)$13 == (int_32)$2) ){ goto $label$115 }
	
.LOOP $label$116:
	$13 = ($13 + [-24])
	$3 = *($13)
	*($13) = [0]
	if ( ($3 == 0) ){ goto $label$117 }
	CALL $155($3)
	
.LABEL $label$117
	if ( ((int_32)$2 != (int_32)$13) ){ goto $label$116 }
	$13 = *(($18 + [448]))
	goto $label$114 
	
.LABEL $label$115
	$13 = $2
	
.LABEL $label$114
	*($6) = $2
	CALL $155($13)
	
.LABEL $label$113
	*([0] + [4]) = ($18 + [592])
}

int_32 .FUNC wctomb (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	return CALL wcrtomb($0, $1, [0])
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $152 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [15782]) == 0) ){ goto $label$2 }
	$7 = *([0] + [15784])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [15782]) = [1]
	$7 = ($7 << [16])
	*([0] + [15784]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [15784])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [15784]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [15782]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [15782]) = [1]
	$3 = ($3 << [16])
	*([0] + [15784]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [15784])
	
.LABEL $label$8
	*([0] + [15784]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [15676])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [15484]
	$1 = (((int_32)$2 * (int_32)[12]) + [15484])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $151([7292], $0)
}

int_32 .FUNC $151 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $152($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [15696])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

void .FUNC $156 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $157 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $154(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $155($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $154 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [15788])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC $155 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

int_32 .FUNC $158 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$4 = *($0)
	if ( ($4 & [1]) ){ goto $label$2 }
	$4 = uint_32($4 >> [1])
	$3 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$2
	$4 = *($0 + [4])
	$3 = *($0 + [8])
	
.LABEL $label$1
	$0 = [-1]
	if ( ((uint_32)$4 <= (uint_32)$2) ){ goto $label$3 }
	$0 = ($4 - $2)
	if ( ($0 == 0) ){ goto $label$5 }
	$0 = CALL memchr(($3 + $2), ($1 & [255]), $0)
	goto $label$4 
	
.LABEL $label$5
	$0 = [0]
	
.LABEL $label$4
	$0 = ( ($0 - $3) ? [-1] : $0 )
	
.LABEL $label$3
	return $0
}

void .FUNC $159 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC __lctrans (int_32 $0, int_32 $1)
{
	return CALL __lctrans_impl($0, $1)
}

int_32 .FUNC __towrite (int_32 $0)
{
	int_32 $1
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [255]) | $1)
	$1 = *($0)
	if ( ($1 & [8]) ){ goto $label$1 }
	*($0 + [4 align=4]) = (int_64)0
	$1 = *($0 + [44])
	*($0 + [28]) = $1
	*($0 + [20]) = $1
	*($0 + [16]) = ($1 + *($0 + [48]))
	return [0]
	
.LABEL $label$1
	*($0) = ($1 | [32])
	return [-1]
}

void .FUNC $69 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $154(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $159($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $155($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $155($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [528])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [528])
	CALL memcpy(($1 + [16]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [528])
	CALL memcpy(($1 + [20]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [528])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC $65 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	*($3 + [15]) = [24]
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [176])
	CALL memcpy(*($0 + [4]), ($3 + [15]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[23]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [24])
	$2 = (*($0 + [4]) + [24])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	*([0] + [4]) = ($3 + [16])
	return $0
}

void .FUNC $64 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [52]) == (int_32)$0), [2528])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [2576])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2640])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $155($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $155($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [56]))
}

int_32 .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [528])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $36($0, ($1 + [16]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [528])
	CALL memcpy(($1 + [48]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

void .FUNC $66 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $154(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $159($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $155($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $155($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $61 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [16]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [3120])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-4157500428759203840)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [3056])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [3056])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $10(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $60 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [80]) == (int_32)$0), [2528])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [2576])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2640])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $155($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $155($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [84]))
}

int_32 .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [496])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $154([64])) + [52]) = $0
	CALL $67(($8 + [32]), $6)
	*($6 + [56]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [56])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $66(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $155($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $62 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [12]) == (int_32)$0), [2528])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [2576])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2640])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $155($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $155($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [16]))
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC _ZN8pandafun18apply_confirmtransERKNS_12confirmtransE (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [128])
	*([0] + [4]) = $10
	CALL require_auth(*($0))
	CALL _ZN8pandafun10pausecheckEv()
	CALL _ZN8pandafun10blackcheckEy(*($0))
	$6 = [0]
	*((($10 + [40]) + [32])) = [0]
	*($10 + [40]) = (int_64)-6222124003695979872
	*($10 + [56]) = (int_64)-1
	*($10 + [64]) = (int_64)0
	$1 = *($0)
	*($10 + [48]) = $1
	if ( (*($0 + [24]) == 0) ){ goto $label$4 }
	*(($10 + [32])) = [0]
	*($10 + [16]) = (int_64)-1
	*($10 + [24]) = (int_64)0
	*($10 + [8]) = $1
	*($10) = (int_64)-6222124003695979872
	$9 = CALL db_find_i64((int_64)-6222124003695979872, $1, (int_64)-6222123794639618048, *($0 + [8]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $32($10, $9)
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$10), [32])
	
.LABEL $label$5
	$2 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($2, [5360])
	$5 = *((($6 + *($0 + [28])) + [16]))
	CALL eosio_assert(((int_32)($5 & [12]) != (int_32)[0]), [5408])
	$3 = *(($10 + [64]))
	$7 = *(($10 + [68]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$6 }
	$9 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$7:
	if ( (int_64)(*(*($9)) == 0) ){ goto $label$6 }
	$7 = $9
	$8 = ($9 + [-24])
	$9 = $8
	if ( ((int_32)($8 + $4) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$8 = ($5 & [3])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$3 }
	$9 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [44]) == (int_32)($10 + [40])), [32])
	goto $label$2 
	
.LABEL $label$4
	$9 = CALL db_lowerbound_i64((int_64)-6222124003695979872, $1, (int_64)-3617168754899681280, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $82(($10 + [40]), $9)
	
.LOOP $label$8:
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$9 = [0]
	$0 = CALL db_next_i64(*($8 + [48]), ($10 + [80]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$9 }
	$9 = CALL $82(($10 + [40]), $0)
	
.LABEL $label$9
	CALL $88(($10 + [40]), $8)
	$8 = $9
	if ( $9 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$3
	$9 = [0]
	$7 = CALL db_find_i64(*($10 + [40]), *(($10 + [48])), (int_64)-3617168754899681280, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$9 = CALL $82(($10 + [40]), $7)
	CALL eosio_assert(((int_32)*($9 + [44]) == (int_32)($10 + [40])), [32])
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [6048])
	CALL eosio_assert(((int_32)$8 == (int_32)(*((($9 + *($0 + [29])) + [16])) & [3])), [6096])
	$7 = ($0 + [28])
	CALL eosio_assert(((int_32)*($0 + [29]) != (int_32)*($7)), [6144])
	CALL eosio_assert($2, [272])
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$10), [320])
	CALL eosio_assert(((int_64)*($10) == (int_64)CALL $fimport$14()), [368])
	$1 = *($6)
	*((($9 = ($6 + [16])) + *($7))) = [0]
	*(($9 + *($0 + [29]))) = ($8 | [4])
	CALL eosio_assert(((int_64)$1 == (int_64)*($6)), [432])
	CALL eosio_assert([1], [176])
	CALL memcpy(($10 + [80]), $6, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy((($10 + [80]) | [8]), ($6 + [8]), [8])
	*($10 + [127]) = [24]
	CALL eosio_assert([1], [176])
	CALL memcpy((($10 + [80]) + [16]), ($10 + [127]), [1])
	CALL eosio_assert([1], [176])
	CALL memcpy(($10 + [97]), $9, [24])
	CALL db_update_i64(*($6 + [44]), (int_64)-6222124003695979872, ($10 + [80]), [41])
	$9 = ($10 + [16])
	if ( (uint_64)($1 <= *($9)) ){ goto $label$10 }
	*($9) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	$9 = CALL db_lowerbound_i64(*($10 + [40]), *((($10 + [40]) + [8])), (int_64)-3617168754899681280, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	$8 = CALL $82(($10 + [40]), $9)
	
.LOOP $label$12:
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$9 = [0]
	$0 = CALL db_next_i64(*($8 + [48]), ($10 + [80]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$13 }
	$9 = CALL $82(($10 + [40]), $0)
	
.LABEL $label$13
	CALL $88(($10 + [40]), $8)
	$8 = $9
	if ( $9 ){ goto $label$12 }
	
.LABEL $label$11
	$0 = *($10 + [24])
	if ( ($0 == 0) ){ goto $label$1 }
	$7 = ($10 + [28])
	$9 = *($7)
	if ( ((int_32)$9 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$9 = ($9 + [-24])
	$8 = *($9)
	*($9) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $155($8)
	
.LABEL $label$17
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$16 }
	$9 = *(($10 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$9 = $0
	
.LABEL $label$14
	*($7) = $0
	CALL $155($9)
	
.LABEL $label$1
	$0 = *($10 + [64])
	if ( ($0 == 0) ){ goto $label$18 }
	$7 = ($10 + [68])
	$9 = *($7)
	if ( ((int_32)$9 == (int_32)$0) ){ goto $label$20 }
	
.LOOP $label$21:
	$9 = ($9 + [-24])
	$8 = *($9)
	*($9) = [0]
	if ( ($8 == 0) ){ goto $label$22 }
	CALL $155($8)
	
.LABEL $label$22
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$21 }
	$9 = *(($10 + [64]))
	goto $label$19 
	
.LABEL $label$20
	$9 = $0
	
.LABEL $label$19
	*($7) = $0
	CALL $155($9)
	
.LABEL $label$18
	*([0] + [4]) = ($10 + [128])
}

void .FUNC $88 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [44]) == (int_32)$0), [2528])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [2576])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2640])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $155($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $155($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [48]))
}

void .FUNC _ZN8pandafun16apply_transformsERKNS_10transformsE (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$17 = (*([0] + [4]) - [304])
	*([0] + [4]) = $17
	CALL require_auth((int_64)-6222124003696921904)
	CALL _ZN8pandafun10pausecheckEv()
	CALL _ZN8pandafun10blackcheckEy(*($0))
	$16 = [0]
	*((($17 + [168]) + [32])) = [0]
	*($17 + [184]) = (int_64)-1
	$6 = *($0)
	*($17 + [176]) = $6
	*($17 + [168]) = (int_64)-6222124003695979872
	*($17 + [192]) = (int_64)0
	$8 = [0]
	$7 = CALL db_find_i64((int_64)-6222124003695979872, $6, (int_64)3904810955002871808, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $58(($17 + [168]), $7)
	CALL eosio_assert(((int_32)*($8 + [28]) == (int_32)($17 + [168])), [32])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [5776])
	CALL eosio_assert(((int_32)*($8 + [20 align=1]) > (int_32)[9]), [5824])
	*((($17 + [128]) + [32])) = [0]
	*($17 + [144]) = (int_64)-1
	*($17 + [152]) = (int_64)0
	$6 = *($0)
	*($17 + [136]) = $6
	*($17 + [128]) = (int_64)-6222124003695979872
	$8 = CALL db_find_i64((int_64)-6222124003695979872, $6, (int_64)-6222123794639618048, *($0 + [8]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$2 }
	$16 = CALL $32(($17 + [128]), $8)
	CALL eosio_assert(((int_32)*($16 + [40]) == (int_32)($17 + [128])), [32])
	
.LABEL $label$2
	$15 = [0]
	CALL eosio_assert(((int_32)$16 != (int_32)[0]), [5888])
	CALL eosio_assert(((int_32)(*((($16 + *($0 + [184])) + [16])) & [12]) != (int_32)[0]), [5936])
	*((($17 + [88]) + [32])) = [0]
	*($17 + [104]) = (int_64)-1
	$6 = *($0)
	*($17 + [96]) = $6
	*($17 + [88]) = (int_64)-6222124003695979872
	*($17 + [112]) = (int_64)0
	$16 = CALL db_find_i64((int_64)-6222124003695979872, $6, (int_64)-3617168754899681280, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$3 }
	$16 = CALL $82(($17 + [88]), $16)
	CALL eosio_assert(((int_32)*($16 + [44]) == (int_32)($17 + [88])), [32])
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$8 = CALL db_next_i64(*($16 + [48]), ($17 + [224]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$4 }
	CALL $82(($17 + [88]), $8)
	
.LABEL $label$4
	CALL $88(($17 + [88]), $16)
	
.LABEL $label$3
	*((($17 + [48]) + [32])) = [0]
	*($17 + [64]) = (int_64)-1
	$6 = *($0)
	*($17 + [56]) = $6
	*($17 + [48]) = (int_64)-6222124003695979872
	*($17 + [72]) = (int_64)0
	$16 = CALL db_lowerbound_i64((int_64)-6222124003695979872, $6, (int_64)7615829182807801856, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$5 }
	$15 = CALL $42(($17 + [48]), $16)
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$15 != (int_32)[0]), [4112])
	CALL eosio_assert(((int_64)*($15 + [72 align=1]) == (int_64)*($0 + [176])), [6000])
	$4 = (($17 + [8]) + [24])
	$3 = (($17 + [224]) + [72])
	$2 = (($17 + [224]) + [40])
	$1 = (($17 + [224]) | [8])
	$9 = (($17 + [8]) + [16])
	$10 = (($17 + [8]) + [32])
	$11 = ($17 + [36])
	$12 = ($0 + [176])
	$13 = ($0 + [184])
	$14 = [0]
	
.LOOP $label$6:
	$5 = ((int_32)$15 != (int_32)[0])
	CALL eosio_assert($5, [4176])
	*($9) = (int_64)-1
	*($4) = (int_64)0
	*($10) = [0]
	$6 = *($0)
	*(($8 = (($17 + [8]) + [8]))) = $6
	*($17 + [8]) = (int_64)-6222124003695979872
	$16 = CALL db_find_i64((int_64)-6222124003695979872, $6, (int_64)7615828862441619456, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$7 }
	$16 = CALL $49(($17 + [8]), $16)
	CALL eosio_assert(((int_32)*($16 + [80]) == (int_32)($17 + [8])), [32])
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$7 = CALL db_next_i64(*($16 + [84]), ($17 + [224]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$8 }
	CALL $49(($17 + [8]), $7)
	
.LABEL $label$8
	CALL $60(($17 + [8]), $16)
	
.LABEL $label$7
	CALL eosio_assert(((int_64)*($17 + [8]) == (int_64)CALL $fimport$14()), [96])
	*(($16 = CALL $154([92])) + [80]) = ($17 + [8])
	*($16) = (int_64)0
	*(($16 + [32])) = *(($15 + [32]))
	*(($16 + [24])) = *(($15 + [24]))
	*(($16 + [16])) = *(($15 + [16]))
	*($16 + [8 align=1]) = *($15 + [8 align=1])
	*(($16 + [64])) = *(($15 + [64]))
	*(($16 + [56])) = *(($15 + [56]))
	*(($16 + [48])) = *(($15 + [48]))
	*($16 + [40 align=1]) = *($15 + [40 align=1])
	*($16 + [72 align=1]) = *($15 + [72 align=1])
	CALL eosio_assert([1], [176])
	CALL memcpy(($17 + [224]), $16, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy($1, ($16 + [8]), [32])
	CALL eosio_assert([1], [176])
	CALL memcpy($2, ($16 + [40]), [32])
	CALL eosio_assert([1], [176])
	CALL memcpy($3, ($16 + [72]), [8])
	$6 = *($16)
	$7 = CALL db_store_i64(*($8), (int_64)7615828862441619456, (int_64)-6222124003695979872, $6, ($17 + [224]), [80])
	*($16 + [84]) = $7
	if ( (uint_64)($6 <= *($9)) ){ goto $label$9 }
	*($9) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*($17 + [216]) = $16
	$6 = *($16)
	*($17 + [224]) = $6
	*($17 + [212]) = $7
	$8 = *($11)
	if ( ((uint_32)$8 >= (uint_32)*($10)) ){ goto $label$11 }
	*($8 + [8]) = $6
	*($8 + [16]) = $7
	*($17 + [216]) = [0]
	*($8) = $16
	*($11) = ($8 + [24])
	goto $label$10 
	
.LABEL $label$11
	CALL $52($4, ($17 + [216]), ($17 + [224]), ($17 + [212]))
	
.LABEL $label$10
	$16 = *($17 + [216])
	*($17 + [216]) = [0]
	if ( ($16 == 0) ){ goto $label$12 }
	CALL $155($16)
	
.LABEL $label$12
	CALL eosio_assert($5, [2496])
	$16 = *($15 + [84])
	$15 = [0]
	$16 = CALL db_next_i64($16, ($17 + [224]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$13 }
	$15 = CALL $42(($17 + [48]), $16)
	
.LABEL $label$13
	*((($17 + [224]) + [8])) = *(($0 + [8]))
	$16 = ($0 + ($14 << [3]))
	*((($17 + [224]) + [16])) = *(($16 + [16]))
	*($17 + [224]) = *($0)
	*((($17 + [224]) + [24])) = *(($16 + [96]))
	*((($17 + [224]) + [32])) = *($12)
	*($2) = *($13)
	CALL _ZN8pandafun15apply_transformERKNS_9transformE(($17 + [224]))
	$7 = *($4)
	if ( ($7 == 0) ){ goto $label$14 }
	$16 = *($11)
	if ( ((int_32)$16 == (int_32)$7) ){ goto $label$16 }
	
.LOOP $label$17:
	$16 = ($16 + [-24])
	$8 = *($16)
	*($16) = [0]
	if ( ($8 == 0) ){ goto $label$18 }
	CALL $155($8)
	
.LABEL $label$18
	if ( ((int_32)$7 != (int_32)$16) ){ goto $label$17 }
	$16 = *($4)
	goto $label$15 
	
.LABEL $label$16
	$16 = $7
	
.LABEL $label$15
	*($11) = $7
	CALL $155($16)
	
.LABEL $label$14
	$14 = ($14 + [1])
	if ( ((int_32)$14 != (int_32)[10]) ){ goto $label$6 }
	*(($17 + [256])) = [0]
	*($17 + [240]) = (int_64)-1
	$6 = *($0)
	*($17 + [232]) = $6
	*($17 + [224]) = (int_64)-6222124003695979872
	*($17 + [248]) = (int_64)0
	$16 = CALL db_lowerbound_i64((int_64)-6222124003695979872, $6, (int_64)7615829182807801856, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$19 }
	$8 = CALL $42(($17 + [224]), $16)
	
.LOOP $label$20:
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$16 = [0]
	$7 = CALL db_next_i64(*($8 + [84]), ($17 + [8]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$21 }
	$16 = CALL $42(($17 + [224]), $7)
	
.LABEL $label$21
	CALL $71(($17 + [224]), $8)
	$8 = $16
	if ( $16 ){ goto $label$20 }
	
.LABEL $label$19
	$7 = *($17 + [248])
	if ( ($7 == 0) ){ goto $label$22 }
	$15 = ($17 + [252])
	$16 = *($15)
	if ( ((int_32)$16 == (int_32)$7) ){ goto $label$24 }
	
.LOOP $label$25:
	$16 = ($16 + [-24])
	$8 = *($16)
	*($16) = [0]
	if ( ($8 == 0) ){ goto $label$26 }
	CALL $155($8)
	
.LABEL $label$26
	if ( ((int_32)$7 != (int_32)$16) ){ goto $label$25 }
	$16 = *(($17 + [248]))
	goto $label$23 
	
.LABEL $label$24
	$16 = $7
	
.LABEL $label$23
	*($15) = $7
	CALL $155($16)
	
.LABEL $label$22
	$7 = *($17 + [72])
	if ( ($7 == 0) ){ goto $label$27 }
	$15 = ($17 + [76])
	$16 = *($15)
	if ( ((int_32)$16 == (int_32)$7) ){ goto $label$29 }
	
.LOOP $label$30:
	$16 = ($16 + [-24])
	$8 = *($16)
	*($16) = [0]
	if ( ($8 == 0) ){ goto $label$31 }
	CALL $155($8)
	
.LABEL $label$31
	if ( ((int_32)$7 != (int_32)$16) ){ goto $label$30 }
	$16 = *(($17 + [72]))
	goto $label$28 
	
.LABEL $label$29
	$16 = $7
	
.LABEL $label$28
	*($15) = $7
	CALL $155($16)
	
.LABEL $label$27
	$7 = *($17 + [112])
	if ( ($7 == 0) ){ goto $label$32 }
	$15 = ($17 + [116])
	$16 = *($15)
	if ( ((int_32)$16 == (int_32)$7) ){ goto $label$34 }
	
.LOOP $label$35:
	$16 = ($16 + [-24])
	$8 = *($16)
	*($16) = [0]
	if ( ($8 == 0) ){ goto $label$36 }
	CALL $155($8)
	
.LABEL $label$36
	if ( ((int_32)$7 != (int_32)$16) ){ goto $label$35 }
	$16 = *(($17 + [112]))
	goto $label$33 
	
.LABEL $label$34
	$16 = $7
	
.LABEL $label$33
	*($15) = $7
	CALL $155($16)
	
.LABEL $label$32
	$7 = *($17 + [152])
	if ( ($7 == 0) ){ goto $label$37 }
	$15 = ($17 + [156])
	$16 = *($15)
	if ( ((int_32)$16 == (int_32)$7) ){ goto $label$39 }
	
.LOOP $label$40:
	$16 = ($16 + [-24])
	$8 = *($16)
	*($16) = [0]
	if ( ($8 == 0) ){ goto $label$41 }
	CALL $155($8)
	
.LABEL $label$41
	if ( ((int_32)$7 != (int_32)$16) ){ goto $label$40 }
	$16 = *(($17 + [152]))
	goto $label$38 
	
.LABEL $label$39
	$16 = $7
	
.LABEL $label$38
	*($15) = $7
	CALL $155($16)
	
.LABEL $label$37
	$7 = *($17 + [192])
	if ( ($7 == 0) ){ goto $label$42 }
	$15 = ($17 + [196])
	$16 = *($15)
	if ( ((int_32)$16 == (int_32)$7) ){ goto $label$44 }
	
.LOOP $label$45:
	$16 = ($16 + [-24])
	$8 = *($16)
	*($16) = [0]
	if ( ($8 == 0) ){ goto $label$46 }
	CALL $155($8)
	
.LABEL $label$46
	if ( ((int_32)$7 != (int_32)$16) ){ goto $label$45 }
	$16 = *(($17 + [192]))
	goto $label$43 
	
.LABEL $label$44
	$16 = $7
	
.LABEL $label$43
	*($15) = $7
	CALL $155($16)
	
.LABEL $label$42
	*([0] + [4]) = ($17 + [304])
}

void .FUNC $86 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	$4 = $5
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [44]) == (int_32)$0), [320])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [368])
	$3 = *($1)
	if ( ((int_64)*(*(*($2) + [4]) + [8 align=1]) == (int_64)*(*($2 + [4]) + [32])) ){ goto $label$1 }
	CALL memset(($1 + [16]), [0], [24])
	*($1 + [8 align=1]) = *(*(($2 + [4])) + [32])
	
.LABEL $label$1
	*($1 + [40]) = [1]
	*((($1 + *(*($2 + [8]))) + [16])) = *(*($2 + [12]))
	CALL eosio_assert(((int_64)$3 == (int_64)*($1)), [432])
	$5 = $5
	$2 = ($5 + [-48])
	*([0] + [4]) = $2
	*($4 + [4]) = $2
	*($4) = $2
	*($4 + [8]) = ($5 + [-6])
	CALL $83($4, $1)
	CALL db_update_i64(*($1 + [48]), (int_64)-6222124003695979872, $2, [42])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$2 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $85 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	$5 = $6
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [44]) == (int_32)$0), [320])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [368])
	$3 = *($1)
	$4 = $3
	if ( ((int_64)*(*(*($2) + [4]) + [8 align=1]) == (int_64)*(*($2 + [4]) + [32])) ){ goto $label$1 }
	CALL memset($1, [0], [41])
	*($1 + [8 align=1]) = *(*(($2 + [4])) + [32])
	$4 = *($1)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$3 == (int_64)$4), [432])
	$6 = $6
	$2 = ($6 + [-48])
	*([0] + [4]) = $2
	*($5 + [4]) = $2
	*($5) = $2
	*($5 + [8]) = ($6 + [-6])
	CALL $83($5, $1)
	CALL db_update_i64(*($1 + [48]), (int_64)-6222124003695979872, $2, [42])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$2 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $84 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $154(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $159($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $155($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $155($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $83 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	*($3 + [15]) = [24]
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [176])
	CALL memcpy(*($0 + [4]), ($3 + [15]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[23]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [24])
	$2 = (*($0 + [4]) + [24])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	*([0] + [4]) = ($3 + [16])
	return $0
}

int_32 .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [496])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	$7 = ($4 + $6)
	*($8 + [40]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [40]))
	$4 = *($8 + [36])
	
.LABEL $label$7
	*(($6 = CALL $154([56])) + [44]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [528])
	CALL memcpy($6, $4, [8])
	$3 = ($4 + [8])
	CALL eosio_assert(((uint_32)($7 - $3) > (uint_32)[7]), [528])
	CALL memcpy(($6 + [8]), $3, [8])
	*($8 + [36]) = ($4 + [16])
	$4 = CALL $36(($8 + [32]), ($6 + [16]))
	CALL eosio_assert(((int_32)*($4 + [8]) != (int_32)*($4 + [4])), [528])
	CALL memcpy(($6 + [40]), *($4 + [4]), [1])
	*($6 + [48]) = $1
	*($4 + [4]) = (*($4 + [4]) + [1])
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [48])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $84(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $155($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC _ZN8pandafun15apply_transformERKNS_9transformE (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_32 $18
	$18 = (*([0] + [4]) - [560])
	*([0] + [4]) = $18
	CALL require_auth((int_64)-6222124003696921904)
	CALL _ZN8pandafun10pausecheckEv()
	CALL _ZN8pandafun10blackcheckEy(*($0))
	$1 = [0]
	*((($18 + [392]) + [32])) = [0]
	*($18 + [408]) = (int_64)-1
	$15 = *($0)
	*($18 + [400]) = $15
	*($18 + [392]) = (int_64)-6222124003695979872
	*($18 + [416]) = (int_64)0
	$5 = [0]
	$13 = CALL db_find_i64((int_64)-6222124003695979872, $15, (int_64)3904810955002871808, (int_64)0)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $58(($18 + [392]), $13)
	CALL eosio_assert(((int_32)*($5 + [28]) == (int_32)($18 + [392])), [32])
	
.LABEL $label$1
	$9 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($9, [5264])
	CALL eosio_assert(((int_32)*($5 + [20 align=1]) > (int_32)[0]), [5312])
	*((($18 + [352]) + [32])) = [0]
	*($18 + [368]) = (int_64)-1
	*($18 + [376]) = (int_64)0
	$15 = *($0)
	*($18 + [360]) = $15
	*($18 + [352]) = (int_64)-6222124003695979872
	$13 = CALL db_find_i64((int_64)-6222124003695979872, $15, (int_64)-6222123794639618048, *($0 + [8]))
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$2 }
	$1 = CALL $32(($18 + [352]), $13)
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)($18 + [352])), [32])
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [5360])
	CALL eosio_assert(((int_32)(*((($1 + *($0 + [40])) + [16])) & [12]) != (int_32)[0]), [5408])
	*((($18 + [312]) + [32])) = [0]
	*($18 + [328]) = (int_64)-1
	$15 = *($0)
	*($18 + [320]) = $15
	*($18 + [312]) = (int_64)-6222124003695979872
	*($18 + [336]) = (int_64)0
	$13 = [0]
	$3 = CALL db_find_i64((int_64)-6222124003695979872, $15, (int_64)7615828862441619456, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$13 = CALL $49(($18 + [312]), $3)
	CALL eosio_assert(((int_32)*($13 + [80]) == (int_32)($18 + [312])), [32])
	
.LABEL $label$3
	$3 = ((int_32)$13 != (int_32)[0])
	CALL eosio_assert($3, [3168])
	CALL eosio_assert(((int_64)*($13 + [72 align=1]) == (int_64)*($0 + [32])), [5472])
	*(($7 = (($18 + [272]) + [24]))) = *(($13 + [32]))
	*(($12 = (($18 + [272]) + [16]))) = *(($13 + [24]))
	*($18 + [280]) = *(($13 + [16]))
	*($18 + [272]) = *($13 + [8 align=1])
	*(($4 = (($18 + [240]) + [24]))) = *(($13 + [64]))
	*(($6 = (($18 + [240]) + [16]))) = *(($13 + [56]))
	*($18 + [248]) = *(($13 + [48]))
	*($18 + [240]) = *($13 + [40 align=1])
	*(($8 = (($18 + [208]) + [24]))) = *($7)
	*(($7 = (($18 + [208]) + [16]))) = *($12)
	*($18 + [216]) = *($18 + [280])
	*($18 + [208]) = *($18 + [272])
	$15 = *($0 + [16])
	*(($12 = (($18 + [128]) + [24]))) = *($8)
	*(($8 = (($18 + [128]) + [16]))) = *($7)
	*($18 + [136]) = *($18 + [216])
	*($18 + [128]) = *($18 + [208])
	CALL memset(($18 + [80]), [0], [24])
	*($18 + [16]) = $15
	CALL snprintf(($18 + [80]), [24], [16], ($18 + [16]))
	CALL sha256(($18 + [80]), CALL $185(($18 + [80])), ($18 + [432]))
	CALL eosio_assert((CALL $186(($18 + [128]), ($18 + [432]), [32]) == 0), [5520])
	*(($7 = (($18 + [176]) + [24]))) = *($4)
	*(($4 = (($18 + [176]) + [16]))) = *($6)
	*($18 + [184]) = *($18 + [248])
	*($18 + [176]) = *($18 + [240])
	$15 = *($0 + [24])
	*($12) = *($7)
	*($8) = *($4)
	*($18 + [136]) = *($18 + [184])
	*($18 + [128]) = *($18 + [176])
	CALL memset(($18 + [80]), [0], [24])
	*($18) = $15
	CALL snprintf(($18 + [80]), [24], [16], $18)
	CALL sha256(($18 + [80]), CALL $185(($18 + [80])), ($18 + [432]))
	CALL eosio_assert((CALL $186(($18 + [128]), ($18 + [432]), [32]) == 0), [5616])
	$15 = *($0 + [24])
	$17 = *($0 + [16])
	CALL eosio_assert($3, [2448])
	CALL eosio_assert($3, [2496])
	$2 = ((uint_64)((int_64)$15 ^ (int_64)$17) % (uint_64)(int_64)13800)
	$3 = CALL db_next_i64(*($13 + [84]), ($18 + [432]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	CALL $49(($18 + [312]), $3)
	
.LABEL $label$4
	CALL $60(($18 + [312]), $13)
	CALL eosio_assert($9, [272])
	CALL eosio_assert(((int_32)*($5 + [28]) == (int_32)($18 + [392])), [320])
	CALL eosio_assert(((int_64)*($18 + [392]) == (int_64)CALL $fimport$14()), [368])
	*(($13 = ($5 + [20]))) = (*($13) + [-1])
	$15 = *($5)
	CALL eosio_assert([1], [432])
	*($18 + [136]) = (($18 + [432]) + [28])
	*($18 + [132]) = ($18 + [432])
	*($18 + [128]) = ($18 + [432])
	CALL $59(($18 + [128]), $5)
	CALL db_update_i64(*($5 + [32]), (int_64)-6222124003695979872, ($18 + [432]), [28])
	$13 = ($18 + [408])
	if ( (uint_64)($15 <= *($13)) ){ goto $label$5 }
	*($13) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$17 = CALL current_time()
	*(($18 + [160])) = [0]
	*($18 + [136]) = (int_64)-6222124003695979872
	*($18 + [128]) = (int_64)-6222124003695979872
	*($18 + [144]) = (int_64)-1
	$15 = (int_64)0
	*($18 + [152]) = (int_64)0
	$9 = ((uint_32)(CASTING uint_32)(uint_64 ((uint_64)$17 / (uint_64)(int_64)1000000)) / (uint_32)[86400])
	$3 = [0]
	$13 = CALL db_find_i64((int_64)-6222124003695979872, (int_64)-6222124003695979872, (int_64)4982871467403247616, (int_64)0)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$6 }
	$3 = CALL $7(($18 + [128]), $13)
	CALL eosio_assert(((int_32)*($3 + [96]) == (int_32)($18 + [128])), [32])
	
.LABEL $label$6
	$4 = ((int_32)$3 != (int_32)[0])
	CALL eosio_assert($4, [5712])
	$14 = (int_64)59
	$13 = [208]
	$16 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$15 > (uint_64)(int_64)8) ){ goto $label$12 }
	$5 = *($13)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$5 = ($5 + [165])
	goto $label$10 
	
.LABEL $label$12
	$17 = (int_64)0
	if ( ((uint_64)$15 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$8
	$13 = ($13 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$16 = ((int_64)$17 | (int_64)$16)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$7 }
	*(($18 + [112])) = [0]
	*($18 + [96]) = (int_64)-1
	*($18 + [104]) = (int_64)0
	*($18 + [88]) = $16
	*($18 + [80]) = (int_64)-6222124003695979872
	$15 = (CASTING uint_64)(uint_32 $9)
	$13 = CALL db_find_i64((int_64)-6222124003695979872, $16, (int_64)-4157500428759203840, $15)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$14 }
	$13 = CALL $10(($18 + [80]), $13)
	CALL eosio_assert(((int_32)*($13 + [12]) == (int_32)($18 + [80])), [32])
	CALL eosio_assert([1], [272])
	CALL eosio_assert(((int_32)*($13 + [12]) == (int_32)($18 + [80])), [320])
	CALL eosio_assert(((int_64)*($18 + [80]) == (int_64)CALL $fimport$14()), [368])
	*($13 + [8 align=1]) = (*($13 + [8 align=1]) + [1])
	$15 = *($13)
	CALL eosio_assert([1], [432])
	CALL eosio_assert([1], [176])
	CALL memcpy(($18 + [432]), $13, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy((($18 + [432]) | [8]), ($13 + [8]), [4])
	CALL db_update_i64(*($13 + [16]), (int_64)-6222124003695979872, ($18 + [432]), [12])
	$13 = ($18 + [96])
	if ( (uint_64)($15 <= *($13)) ){ goto $label$13 }
	*($13) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	goto $label$13 
	
.LABEL $label$14
	CALL eosio_assert(((int_64)*($18 + [80]) == (int_64)CALL $fimport$14()), [96])
	*(($13 = CALL $154([24])) + [12]) = ($18 + [80])
	*($13 + [8 align=1]) = [1]
	*($13) = $15
	CALL eosio_assert([1], [176])
	CALL memcpy(($18 + [432]), $13, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy((($18 + [432]) | [8]), ($13 + [8]), [4])
	$15 = *($13)
	$9 = CALL db_store_i64(*((($18 + [80]) + [8])), (int_64)-4157500428759203840, (int_64)-6222124003695979872, $15, ($18 + [432]), [12])
	*($13 + [16]) = $9
	$5 = ($18 + [96])
	if ( (uint_64)($15 <= *($5)) ){ goto $label$15 }
	*($5) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	*($18 + [32]) = $13
	$15 = *($13)
	*($18 + [432]) = $15
	*($18 + [544]) = $9
	$7 = ($18 + [108])
	$5 = *($7)
	if ( ((uint_32)$5 >= (uint_32)*(($18 + [112]))) ){ goto $label$17 }
	*($5 + [8]) = $15
	*($5 + [16]) = $9
	*($18 + [32]) = [0]
	*($5) = $13
	*($7) = ($5 + [24])
	goto $label$16 
	
.LABEL $label$17
	CALL $11(($18 + [104]), ($18 + [32]), ($18 + [432]), ($18 + [544]))
	
.LABEL $label$16
	$13 = *($18 + [32])
	$5 = [0]
	*($18 + [32]) = [0]
	if ( ($13 == 0) ){ goto $label$18 }
	CALL $155($13)
	
.LABEL $label$18
	*((($18 + [32]) + [8])) = [0]
	*(($9 = ($18 + [48]))) = [0]
	*($18 + [44]) = ($18 + [80])
	*($18 + [36]) = ($18 + [80])
	$13 = CALL db_lowerbound_i64(*($18 + [80]), *((($18 + [80]) + [8])), (int_64)-4157500428759203840, (int_64)0)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$19 }
	$5 = CALL $10(($18 + [80]), $13)
	
.LABEL $label$19
	$13 = ($18 + [44])
	if ( ((int_32)*($9) == (int_32)$5) ){ goto $label$20 }
	CALL $61($13)
	
.LABEL $label$20
	$5 = [0]
	$9 = CALL db_lowerbound_i64(*($18 + [80]), *(($18 + [88])), (int_64)-4157500428759203840, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$21 }
	$5 = CALL $10(($18 + [80]), $9)
	
.LABEL $label$21
	$9 = (($18 + [32]) + [16])
	if ( ((int_32)*($9) == (int_32)$5) ){ goto $label$22 }
	CALL eosio_assert($4, [272])
	CALL eosio_assert(((int_32)*($3 + [96]) == (int_32)($18 + [128])), [320])
	CALL eosio_assert(((int_64)*($18 + [128]) == (int_64)CALL $fimport$14()), [368])
	$15 = *($3)
	$17 = *($3 + [64 align=1])
	*($18 + [544]) = *(($18 + [44]))
	*($3 + [64 align=1]) = ((int_64)$17 + (int_64)*(*(CALL $61(($18 + [544])) + [4]) + [8 align=1]))
	CALL eosio_assert(((int_64)$15 == (int_64)*($3)), [432])
	*($18 + [552]) = (($18 + [432]) + [93])
	*($18 + [548]) = ($18 + [432])
	*($18 + [544]) = ($18 + [432])
	CALL $8(($18 + [544]), $3)
	CALL db_update_i64(*($3 + [100]), (int_64)-6222124003695979872, ($18 + [432]), [93])
	if ( (uint_64)($15 <= *((($18 + [128]) + [16]))) ){ goto $label$22 }
	*(($18 + [144])) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	
.LABEL $label$22
	$5 = [0]
	*((($18 + [32]) + [8])) = [0]
	*($9) = [0]
	*(($18 + [44])) = ($18 + [80])
	*($18 + [36]) = ($18 + [80])
	$9 = CALL db_lowerbound_i64(*($18 + [80]), *((($18 + [80]) + [8])), (int_64)-4157500428759203840, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$23 }
	$5 = CALL $10(($18 + [80]), $9)
	
.LABEL $label$23
	if ( ((int_32)*(($18 + [48])) == (int_32)$5) ){ goto $label$24 }
	CALL $61($13)
	$5 = [0]
	$9 = CALL db_lowerbound_i64(*($18 + [80]), *(($18 + [88])), (int_64)-4157500428759203840, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$25 }
	$5 = CALL $10(($18 + [80]), $9)
	
.LABEL $label$25
	if ( ((int_32)*(($18 + [48])) == (int_32)$5) ){ goto $label$24 }
	CALL $61($13)
	$5 = [0]
	$9 = CALL db_lowerbound_i64(*($18 + [80]), *(($18 + [88])), (int_64)-4157500428759203840, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$26 }
	$5 = CALL $10(($18 + [80]), $9)
	
.LABEL $label$26
	if ( ((int_32)*(($18 + [48])) == (int_32)$5) ){ goto $label$24 }
	CALL $61($13)
	$5 = [0]
	$9 = CALL db_lowerbound_i64(*($18 + [80]), *(($18 + [88])), (int_64)-4157500428759203840, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$27 }
	$5 = CALL $10(($18 + [80]), $9)
	
.LABEL $label$27
	if ( ((int_32)*(($18 + [48])) == (int_32)$5) ){ goto $label$24 }
	CALL $61($13)
	
.LABEL $label$24
	$13 = [0]
	$5 = CALL db_lowerbound_i64(*($18 + [80]), *(($18 + [88])), (int_64)-4157500428759203840, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$28 }
	$13 = CALL $10(($18 + [80]), $5)
	
.LABEL $label$28
	if ( ((int_32)*(($18 + [48])) == (int_32)$13) ){ goto $label$13 }
	*($18 + [432]) = *(($18 + [44]))
	$17 = *(*(CALL $61(($18 + [432])) + [4]))
	$13 = CALL db_lowerbound_i64(*($18 + [80]), *((($18 + [80]) + [8])), (int_64)-4157500428759203840, (int_64)0)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$13 }
	$6 = (($18 + [432]) + [93])
	$13 = CALL $10(($18 + [80]), $13)
	$8 = ($3 + [96])
	$9 = ($3 + [64])
	$10 = (($18 + [544]) + [8])
	$11 = ($3 + [100])
	$12 = ($18 + [144])
	
.LOOP $label$29:
	if ( ((uint_64)*($13) > (uint_64)$17) ){ goto $label$13 }
	CALL eosio_assert($4, [272])
	CALL eosio_assert(((int_32)*($8) == (int_32)($18 + [128])), [320])
	CALL eosio_assert(((int_64)*($18 + [128]) == (int_64)CALL $fimport$14()), [368])
	*($9) = (int_64))(*($9) - *($13 + [8 align=1]))
	$15 = *($3)
	CALL eosio_assert([1], [432])
	*($10) = $6
	*($18 + [548]) = ($18 + [432])
	*($18 + [544]) = ($18 + [432])
	CALL $8(($18 + [544]), $3)
	CALL db_update_i64(*($11), (int_64)-6222124003695979872, ($18 + [432]), [93])
	if ( (uint_64)($15 <= *($12)) ){ goto $label$30 }
	*($12) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	
.LABEL $label$30
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$5 = [0]
	$7 = CALL db_next_i64(*($13 + [16]), ($18 + [432]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$31 }
	$5 = CALL $10(($18 + [80]), $7)
	
.LABEL $label$31
	CALL $62(($18 + [80]), $13)
	$13 = $5
	if ( $5 ){ goto $label$29 }
	
.LABEL $label$13
	*($18 + [76]) = [-1]
	$5 = [1]
	if ( ((uint_64)$2 > (uint_64)(int_64)4599) ){ goto $label$32 }
	$13 = (CASTING uint_32)(uint_64 ((uint_64)$2 / (uint_64)(int_64)200))
	*($18 + [76]) = $13
	if ( ((int_32)$13 == (int_32)*(($0 + [40]))) ){ goto $label$32 }
	if ( *((($1 + $13) + [16])) ){ goto $label$32 }
	$5 = [0]
	
.LABEL $label$32
	$13 = [0]
	*($18 + [75]) = [0]
	*(($18 + [64])) = [0]
	*($18 + [48]) = (int_64)-1
	$15 = *($0)
	*($18 + [40]) = $15
	*($18 + [32]) = (int_64)-6222124003695979872
	*($18 + [56]) = (int_64)0
	$3 = CALL db_find_i64((int_64)-6222124003695979872, $15, (int_64)-3617168754899681280, (int_64)0)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$44 }
	$13 = CALL $82(($18 + [32]), $3)
	CALL eosio_assert(((int_32)*($13 + [44]) == (int_32)($18 + [32])), [32])
	*($18 + [28]) = $13
	*($18 + [24]) = ($18 + [32])
	if ( $5 ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$44
	*($18 + [28]) = [0]
	*($18 + [24]) = ($18 + [32])
	if ( ($5 == 0) ){ goto $label$42 }
	
.LABEL $label$43
	if ( ($13 == 0) ){ goto $label$41 }
	*($18 + [436]) = $0
	*($18 + [432]) = ($18 + [24])
	CALL eosio_assert(((int_32)$13 != (int_32)[0]), [272])
	CALL $85(($18 + [32]), $13, ($18 + [432]))
	$0 = *($18 + [56])
	if ( $0 ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$42
	*($18 + [75]) = (((*((($1 + *(($0 + [40]))) + [16])) & [3]) | (*($18 + [75]) & [243])) | [4])
	if ( ($13 == 0) ){ goto $label$40 }
	*($18 + [436]) = $0
	*($18 + [432]) = ($18 + [24])
	*($18 + [440]) = ($18 + [76])
	*($18 + [444]) = ($18 + [75])
	CALL eosio_assert(((int_32)$13 != (int_32)[0]), [272])
	CALL $86(($18 + [32]), $13, ($18 + [432]))
	$0 = *($18 + [56])
	if ( $0 ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$41
	CALL eosio_assert(((int_64)*($18 + [32]) == (int_64)CALL $fimport$14()), [96])
	*(($13 = CALL $154([56])) + [44]) = ($18 + [32])
	CALL memset($13, [0], [41])
	*($13 + [8 align=1]) = *(($0 + [32]))
	*($18 + [552]) = (($18 + [432]) + [42])
	*($18 + [548]) = ($18 + [432])
	*($18 + [544]) = ($18 + [432])
	CALL $83(($18 + [544]), $13)
	$15 = *($13)
	$0 = CALL db_store_i64(*(($18 + [40])), (int_64)-3617168754899681280, (int_64)-6222124003695979872, $15, ($18 + [432]), [42])
	*($13 + [48]) = $0
	$5 = ($18 + [48])
	if ( (uint_64)($15 <= *($5)) ){ goto $label$45 }
	*($5) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	
.LABEL $label$45
	*($18 + [544]) = $13
	$15 = *($13)
	*($18 + [432]) = $15
	*($18 + [540]) = $0
	$3 = ($18 + [60])
	$5 = *($3)
	if ( ((uint_32)$5 >= (uint_32)*((($18 + [32]) + [32]))) ){ goto $label$39 }
	*($5 + [8]) = $15
	*($5 + [16]) = $0
	*($18 + [544]) = [0]
	*($5) = $13
	*($3) = ($5 + [24])
	goto $label$38 
	
.LABEL $label$40
	CALL eosio_assert(((int_64)*($18 + [32]) == (int_64)CALL $fimport$14()), [96])
	*(($13 = CALL $154([56])) + [44]) = ($18 + [32])
	CALL memset($13, [0], [41])
	*((($13 + *($18 + [76])) + [16])) = *($18 + [75])
	*($13 + [40]) = [1]
	*($13 + [8 align=1]) = *(($0 + [32]))
	*($18 + [552]) = (($18 + [432]) + [42])
	*($18 + [548]) = ($18 + [432])
	*($18 + [544]) = ($18 + [432])
	CALL $83(($18 + [544]), $13)
	$15 = *($13)
	$0 = CALL db_store_i64(*(($18 + [40])), (int_64)-3617168754899681280, (int_64)-6222124003695979872, $15, ($18 + [432]), [42])
	*($13 + [48]) = $0
	if ( (uint_64)($15 <= *((($18 + [32]) + [16]))) ){ goto $label$46 }
	*(($18 + [48])) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	
.LABEL $label$46
	*($18 + [544]) = $13
	$15 = *($13)
	*($18 + [432]) = $15
	*($18 + [540]) = $0
	$3 = ($18 + [60])
	$5 = *($3)
	if ( ((uint_32)$5 >= (uint_32)*((($18 + [32]) + [32]))) ){ goto $label$37 }
	*($5 + [8]) = $15
	*($5 + [16]) = $0
	*($18 + [544]) = [0]
	*($5) = $13
	*($3) = ($5 + [24])
	goto $label$36 
	
.LABEL $label$39
	CALL $84(($18 + [56]), ($18 + [544]), ($18 + [432]), ($18 + [540]))
	
.LABEL $label$38
	$13 = *($18 + [544])
	*($18 + [544]) = [0]
	if ( ($13 == 0) ){ goto $label$35 }
	CALL $155($13)
	$0 = *($18 + [56])
	if ( $0 ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$37
	CALL $84(($18 + [56]), ($18 + [544]), ($18 + [432]), ($18 + [540]))
	
.LABEL $label$36
	$13 = *($18 + [544])
	*($18 + [544]) = [0]
	if ( ($13 == 0) ){ goto $label$35 }
	CALL $155($13)
	
.LABEL $label$35
	$0 = *($18 + [56])
	if ( ($0 == 0) ){ goto $label$33 }
	
.LABEL $label$34
	$3 = ($18 + [60])
	$13 = *($3)
	if ( ((int_32)$13 == (int_32)$0) ){ goto $label$48 }
	
.LOOP $label$49:
	$13 = ($13 + [-24])
	$5 = *($13)
	*($13) = [0]
	if ( ($5 == 0) ){ goto $label$50 }
	CALL $155($5)
	
.LABEL $label$50
	if ( ((int_32)$0 != (int_32)$13) ){ goto $label$49 }
	$13 = *(($18 + [56]))
	goto $label$47 
	
.LABEL $label$48
	$13 = $0
	
.LABEL $label$47
	*($3) = $0
	CALL $155($13)
	
.LABEL $label$33
	$0 = *($18 + [104])
	if ( ($0 == 0) ){ goto $label$51 }
	$3 = ($18 + [108])
	$13 = *($3)
	if ( ((int_32)$13 == (int_32)$0) ){ goto $label$53 }
	
.LOOP $label$54:
	$13 = ($13 + [-24])
	$5 = *($13)
	*($13) = [0]
	if ( ($5 == 0) ){ goto $label$55 }
	CALL $155($5)
	
.LABEL $label$55
	if ( ((int_32)$0 != (int_32)$13) ){ goto $label$54 }
	$13 = *(($18 + [104]))
	goto $label$52 
	
.LABEL $label$53
	$13 = $0
	
.LABEL $label$52
	*($3) = $0
	CALL $155($13)
	
.LABEL $label$51
	$0 = *($18 + [152])
	if ( ($0 == 0) ){ goto $label$56 }
	$3 = ($18 + [156])
	$13 = *($3)
	if ( ((int_32)$13 == (int_32)$0) ){ goto $label$58 }
	
.LOOP $label$59:
	$13 = ($13 + [-24])
	$5 = *($13)
	*($13) = [0]
	if ( ($5 == 0) ){ goto $label$60 }
	CALL $155($5)
	
.LABEL $label$60
	if ( ((int_32)$0 != (int_32)$13) ){ goto $label$59 }
	$13 = *(($18 + [152]))
	goto $label$57 
	
.LABEL $label$58
	$13 = $0
	
.LABEL $label$57
	*($3) = $0
	CALL $155($13)
	
.LABEL $label$56
	$0 = *($18 + [336])
	if ( ($0 == 0) ){ goto $label$61 }
	$3 = ($18 + [340])
	$13 = *($3)
	if ( ((int_32)$13 == (int_32)$0) ){ goto $label$63 }
	
.LOOP $label$64:
	$13 = ($13 + [-24])
	$5 = *($13)
	*($13) = [0]
	if ( ($5 == 0) ){ goto $label$65 }
	CALL $155($5)
	
.LABEL $label$65
	if ( ((int_32)$0 != (int_32)$13) ){ goto $label$64 }
	$13 = *(($18 + [336]))
	goto $label$62 
	
.LABEL $label$63
	$13 = $0
	
.LABEL $label$62
	*($3) = $0
	CALL $155($13)
	
.LABEL $label$61
	$0 = *($18 + [376])
	if ( ($0 == 0) ){ goto $label$66 }
	$3 = ($18 + [380])
	$13 = *($3)
	if ( ((int_32)$13 == (int_32)$0) ){ goto $label$68 }
	
.LOOP $label$69:
	$13 = ($13 + [-24])
	$5 = *($13)
	*($13) = [0]
	if ( ($5 == 0) ){ goto $label$70 }
	CALL $155($5)
	
.LABEL $label$70
	if ( ((int_32)$0 != (int_32)$13) ){ goto $label$69 }
	$13 = *(($18 + [376]))
	goto $label$67 
	
.LABEL $label$68
	$13 = $0
	
.LABEL $label$67
	*($3) = $0
	CALL $155($13)
	
.LABEL $label$66
	$0 = *($18 + [416])
	if ( ($0 == 0) ){ goto $label$71 }
	$3 = ($18 + [420])
	$13 = *($3)
	if ( ((int_32)$13 == (int_32)$0) ){ goto $label$73 }
	
.LOOP $label$74:
	$13 = ($13 + [-24])
	$5 = *($13)
	*($13) = [0]
	if ( ($5 == 0) ){ goto $label$75 }
	CALL $155($5)
	
.LABEL $label$75
	if ( ((int_32)$0 != (int_32)$13) ){ goto $label$74 }
	$13 = *(($18 + [416]))
	goto $label$72 
	
.LABEL $label$73
	$13 = $0
	
.LABEL $label$72
	*($3) = $0
	CALL $155($13)
	
.LABEL $label$71
	*([0] + [4]) = ($18 + [560])
}

void .FUNC _ZN8pandafun14apply_upgradesERKNS_8upgradesE (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$20 = (*([0] + [4]) - [336])
	*([0] + [4]) = $20
	CALL require_auth((int_64)-6222124003696921904)
	CALL _ZN8pandafun10pausecheckEv()
	CALL _ZN8pandafun10blackcheckEy(*($0))
	$19 = [0]
	*((($20 + [200]) + [32])) = [0]
	*($20 + [216]) = (int_64)-1
	$7 = *($0)
	*($20 + [208]) = $7
	*($20 + [200]) = (int_64)-6222124003695979872
	*($20 + [224]) = (int_64)0
	$9 = [0]
	$8 = CALL db_find_i64((int_64)-6222124003695979872, $7, (int_64)3904810955002871808, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $58(($20 + [200]), $8)
	CALL eosio_assert(((int_32)*($9 + [28]) == (int_32)($20 + [200])), [32])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [4896])
	CALL eosio_assert(((int_32)*($9 + [24 align=1]) > (int_32)[9]), [4944])
	*((($20 + [160]) + [32])) = [0]
	*($20 + [176]) = (int_64)-1
	*($20 + [184]) = (int_64)0
	$7 = *($0)
	*($20 + [168]) = $7
	*($20 + [160]) = (int_64)-6222124003695979872
	$9 = CALL db_find_i64((int_64)-6222124003695979872, $7, (int_64)-6222123794639618048, *($0 + [8]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$2 }
	$19 = CALL $32(($20 + [160]), $9)
	CALL eosio_assert(((int_32)*($19 + [40]) == (int_32)($20 + [160])), [32])
	
.LABEL $label$2
	$18 = [0]
	CALL eosio_assert(((int_32)$19 != (int_32)[0]), [4992])
	$19 = (uint_32(*((($19 + *($0 + [184])) + [16])) >> [2]) & [3])
	CALL eosio_assert(((int_32)$19 != (int_32)[0]), [5040])
	CALL eosio_assert(((int_32)$19 < (int_32)*(((*($0 + [184]) << [2]) + [4448]))), [5104])
	*((($20 + [120]) + [32])) = [0]
	*($20 + [136]) = (int_64)-1
	$7 = *($0)
	*($20 + [128]) = $7
	*($20 + [120]) = (int_64)-6222124003695979872
	*($20 + [144]) = (int_64)0
	$19 = CALL db_lowerbound_i64((int_64)-6222124003695979872, $7, (int_64)-3073298666878926848, (int_64)0)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $73(($20 + [120]), $19)
	
.LOOP $label$4:
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$19 = [0]
	$8 = CALL db_next_i64(*($9 + [24]), ($20 + [256]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$5 }
	$19 = CALL $73(($20 + [120]), $8)
	
.LABEL $label$5
	CALL $74(($20 + [120]), $9)
	$9 = $19
	if ( $19 ){ goto $label$4 }
	
.LABEL $label$3
	*((($20 + [80]) + [32])) = [0]
	*($20 + [96]) = (int_64)-1
	$7 = *($0)
	*($20 + [88]) = $7
	*($20 + [80]) = (int_64)-6222124003695979872
	*($20 + [104]) = (int_64)0
	$19 = CALL db_lowerbound_i64((int_64)-6222124003695979872, $7, (int_64)7615829182807801856, (int_64)0)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$6 }
	$18 = CALL $42(($20 + [80]), $19)
	
.LABEL $label$6
	CALL eosio_assert(((int_32)$18 != (int_32)[0]), [4112])
	CALL eosio_assert(((int_64)*($18 + [72 align=1]) == (int_64)*($0 + [176])), [5152])
	$4 = ($20 + [24])
	$3 = (($20 + [256]) + [72])
	$2 = (($20 + [256]) + [40])
	$1 = (($20 + [256]) | [8])
	$11 = (($20 + [40]) + [32])
	$13 = ($0 + [184])
	$15 = ($20 + [28])
	$16 = ($0 + [176])
	$17 = [0]
	
.LOOP $label$9:
	$7 = *($0)
	*((($20 + [40]) + [8])) = $7
	*((($20 + [40]) + [16])) = (int_64)-1
	*(($10 = (($20 + [40]) + [24]))) = (int_64)0
	*($11) = [0]
	*($20 + [40]) = (int_64)-6222124003695979872
	$12 = ($0 + [8])
	$19 = CALL $32(($20 + [40]), CALL $fimport$17((int_64)-6222124003695979872, $7, (int_64)-6222123794639618048, *($12)))
	CALL eosio_assert(((int_32)*($19 + [40]) == (int_32)($20 + [40])), [32])
	$9 = *($13)
	if ( ((int_32)(uint_32(*((($19 + $9) + [16])) >> [2]) & [3]) >= (int_32)*((($9 << [2]) + [4448]))) ){ goto $label$8 }
	$5 = ((int_32)$18 != (int_32)[0])
	CALL eosio_assert($5, [4176])
	*(($9 = ($20 + [16]))) = (int_64)-1
	*($4) = (int_64)0
	*(($14 = ($20 + [32]))) = [0]
	$7 = *($0)
	*(($8 = ($20 + [8]))) = $7
	*($20) = (int_64)-6222124003695979872
	$19 = CALL db_find_i64((int_64)-6222124003695979872, $7, (int_64)7615828862441619456, (int_64)0)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$10 }
	$19 = CALL $49($20, $19)
	CALL eosio_assert(((int_32)*($19 + [80]) == (int_32)$20), [32])
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$6 = CALL db_next_i64(*($19 + [84]), ($20 + [256]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$11 }
	CALL $49($20, $6)
	
.LABEL $label$11
	CALL $60($20, $19)
	
.LABEL $label$10
	CALL eosio_assert(((int_64)*($20) == (int_64)CALL $fimport$14()), [96])
	*(($19 = CALL $154([92])) + [80]) = $20
	*($19) = (int_64)0
	*(($19 + [32])) = *(($18 + [32]))
	*(($19 + [24])) = *(($18 + [24]))
	*(($19 + [16])) = *(($18 + [16]))
	*($19 + [8 align=1]) = *($18 + [8 align=1])
	*(($19 + [64])) = *(($18 + [64]))
	*(($19 + [56])) = *(($18 + [56]))
	*(($19 + [48])) = *(($18 + [48]))
	*($19 + [40 align=1]) = *($18 + [40 align=1])
	*($19 + [72 align=1]) = *($18 + [72 align=1])
	CALL eosio_assert([1], [176])
	CALL memcpy(($20 + [256]), $19, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy($1, ($19 + [8]), [32])
	CALL eosio_assert([1], [176])
	CALL memcpy($2, ($19 + [40]), [32])
	CALL eosio_assert([1], [176])
	CALL memcpy($3, ($19 + [72]), [8])
	$7 = *($19)
	$8 = CALL db_store_i64(*($8), (int_64)7615828862441619456, (int_64)-6222124003695979872, $7, ($20 + [256]), [80])
	*($19 + [84]) = $8
	if ( (uint_64)($7 <= *($9)) ){ goto $label$12 }
	*($9) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	*($20 + [248]) = $19
	$7 = *($19)
	*($20 + [256]) = $7
	*($20 + [244]) = $8
	$9 = *($15)
	if ( ((uint_32)$9 >= (uint_32)*($14)) ){ goto $label$14 }
	*($9 + [8]) = $7
	*($9 + [16]) = $8
	*($20 + [248]) = [0]
	*($9) = $19
	*($15) = ($9 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $52($4, ($20 + [248]), ($20 + [256]), ($20 + [244]))
	
.LABEL $label$13
	$19 = *($20 + [248])
	*($20 + [248]) = [0]
	if ( ($19 == 0) ){ goto $label$15 }
	CALL $155($19)
	
.LABEL $label$15
	CALL eosio_assert($5, [2496])
	$19 = *($18 + [84])
	$18 = [0]
	$19 = CALL db_next_i64($19, ($20 + [256]))
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$16 }
	$18 = CALL $42(($20 + [80]), $19)
	
.LABEL $label$16
	*((($20 + [256]) + [8])) = *($12)
	$19 = ($0 + ($17 << [3]))
	*((($20 + [256]) + [16])) = *(($19 + [16]))
	*($20 + [256]) = *($0)
	*((($20 + [256]) + [24])) = *(($19 + [96]))
	*((($20 + [256]) + [32])) = *($16)
	*($2) = *($13)
	CALL _ZN8pandafun13apply_upgradeERKNS_7upgradeE(($20 + [256]))
	$8 = *($4)
	if ( ($8 == 0) ){ goto $label$17 }
	$19 = *($15)
	if ( ((int_32)$19 == (int_32)$8) ){ goto $label$19 }
	
.LOOP $label$20:
	$19 = ($19 + [-24])
	$9 = *($19)
	*($19) = [0]
	if ( ($9 == 0) ){ goto $label$21 }
	CALL $155($9)
	
.LABEL $label$21
	if ( ((int_32)$8 != (int_32)$19) ){ goto $label$20 }
	$19 = *($4)
	goto $label$18 
	
.LABEL $label$19
	$19 = $8
	
.LABEL $label$18
	*($15) = $8
	CALL $155($19)
	
.LABEL $label$17
	$8 = *($10)
	if ( ($8 == 0) ){ goto $label$22 }
	$12 = (($20 + [40]) + [28])
	$19 = *($12)
	if ( ((int_32)$19 == (int_32)$8) ){ goto $label$24 }
	
.LOOP $label$25:
	$19 = ($19 + [-24])
	$9 = *($19)
	*($19) = [0]
	if ( ($9 == 0) ){ goto $label$26 }
	CALL $155($9)
	
.LABEL $label$26
	if ( ((int_32)$8 != (int_32)$19) ){ goto $label$25 }
	$19 = *($10)
	goto $label$23 
	
.LABEL $label$24
	$19 = $8
	
.LABEL $label$23
	*($12) = $8
	CALL $155($19)
	
.LABEL $label$22
	$17 = ($17 + [1])
	if ( ($17 <= [10]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL prints([5200])
	$8 = *(($20 + [64]))
	if ( ($8 == 0) ){ goto $label$7 }
	$18 = ($20 + [68])
	$19 = *($18)
	if ( ((int_32)$19 == (int_32)$8) ){ goto $label$28 }
	
.LOOP $label$29:
	$19 = ($19 + [-24])
	$9 = *($19)
	*($19) = [0]
	if ( ($9 == 0) ){ goto $label$30 }
	CALL $155($9)
	
.LABEL $label$30
	if ( ((int_32)$8 != (int_32)$19) ){ goto $label$29 }
	$19 = *(($20 + [64]))
	goto $label$27 
	
.LABEL $label$28
	$19 = $8
	
.LABEL $label$27
	*($18) = $8
	CALL $155($19)
	
.LABEL $label$7
	*(($20 + [288])) = [0]
	*($20 + [272]) = (int_64)-1
	$7 = *($0)
	*($20 + [264]) = $7
	*($20 + [256]) = (int_64)-6222124003695979872
	*($20 + [280]) = (int_64)0
	$19 = CALL db_lowerbound_i64((int_64)-6222124003695979872, $7, (int_64)7615829182807801856, (int_64)0)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$31 }
	$9 = CALL $42(($20 + [256]), $19)
	
.LOOP $label$32:
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$19 = [0]
	$8 = CALL db_next_i64(*($9 + [84]), ($20 + [40]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$33 }
	$19 = CALL $42(($20 + [256]), $8)
	
.LABEL $label$33
	CALL $71(($20 + [256]), $9)
	$9 = $19
	if ( $19 ){ goto $label$32 }
	
.LABEL $label$31
	$8 = *($20 + [280])
	if ( ($8 == 0) ){ goto $label$34 }
	$18 = ($20 + [284])
	$19 = *($18)
	if ( ((int_32)$19 == (int_32)$8) ){ goto $label$36 }
	
.LOOP $label$37:
	$19 = ($19 + [-24])
	$9 = *($19)
	*($19) = [0]
	if ( ($9 == 0) ){ goto $label$38 }
	CALL $155($9)
	
.LABEL $label$38
	if ( ((int_32)$8 != (int_32)$19) ){ goto $label$37 }
	$19 = *(($20 + [280]))
	goto $label$35 
	
.LABEL $label$36
	$19 = $8
	
.LABEL $label$35
	*($18) = $8
	CALL $155($19)
	
.LABEL $label$34
	$8 = *($20 + [104])
	if ( ($8 == 0) ){ goto $label$39 }
	$18 = ($20 + [108])
	$19 = *($18)
	if ( ((int_32)$19 == (int_32)$8) ){ goto $label$41 }
	
.LOOP $label$42:
	$19 = ($19 + [-24])
	$9 = *($19)
	*($19) = [0]
	if ( ($9 == 0) ){ goto $label$43 }
	CALL $155($9)
	
.LABEL $label$43
	if ( ((int_32)$8 != (int_32)$19) ){ goto $label$42 }
	$19 = *(($20 + [104]))
	goto $label$40 
	
.LABEL $label$41
	$19 = $8
	
.LABEL $label$40
	*($18) = $8
	CALL $155($19)
	
.LABEL $label$39
	$8 = *($20 + [144])
	if ( ($8 == 0) ){ goto $label$44 }
	$18 = ($20 + [148])
	$19 = *($18)
	if ( ((int_32)$19 == (int_32)$8) ){ goto $label$46 }
	
.LOOP $label$47:
	$19 = ($19 + [-24])
	$9 = *($19)
	*($19) = [0]
	if ( ($9 == 0) ){ goto $label$48 }
	CALL $155($9)
	
.LABEL $label$48
	if ( ((int_32)$8 != (int_32)$19) ){ goto $label$47 }
	$19 = *(($20 + [144]))
	goto $label$45 
	
.LABEL $label$46
	$19 = $8
	
.LABEL $label$45
	*($18) = $8
	CALL $155($19)
	
.LABEL $label$44
	$8 = *($20 + [184])
	if ( ($8 == 0) ){ goto $label$49 }
	$18 = ($20 + [188])
	$19 = *($18)
	if ( ((int_32)$19 == (int_32)$8) ){ goto $label$51 }
	
.LOOP $label$52:
	$19 = ($19 + [-24])
	$9 = *($19)
	*($19) = [0]
	if ( ($9 == 0) ){ goto $label$53 }
	CALL $155($9)
	
.LABEL $label$53
	if ( ((int_32)$8 != (int_32)$19) ){ goto $label$52 }
	$19 = *(($20 + [184]))
	goto $label$50 
	
.LABEL $label$51
	$19 = $8
	
.LABEL $label$50
	*($18) = $8
	CALL $155($19)
	
.LABEL $label$49
	$8 = *($20 + [224])
	if ( ($8 == 0) ){ goto $label$54 }
	$18 = ($20 + [228])
	$19 = *($18)
	if ( ((int_32)$19 == (int_32)$8) ){ goto $label$56 }
	
.LOOP $label$57:
	$19 = ($19 + [-24])
	$9 = *($19)
	*($19) = [0]
	if ( ($9 == 0) ){ goto $label$58 }
	CALL $155($9)
	
.LABEL $label$58
	if ( ((int_32)$8 != (int_32)$19) ){ goto $label$57 }
	$19 = *(($20 + [224]))
	goto $label$55 
	
.LABEL $label$56
	$19 = $8
	
.LABEL $label$55
	*($18) = $8
	CALL $155($19)
	
.LABEL $label$54
	*([0] + [4]) = ($20 + [336])
}

int_32 .FUNC strcmp (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($1)
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ((int_32)$2 != (int_32)($3 & [255])) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	
.LOOP $label$2:
	$3 = *($1)
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	if ( ((int_32)$2 == (int_32)($3 & [255])) ){ goto $label$2 }
	
.LABEL $label$1
	return ($2 - ($3 & [255]))
}

int_32 .FUNC $149 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $135($0, ($1 + [32]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [528])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $148 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $135($0, ($1 + [32]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [528])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $145 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [528])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $144 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [528])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $140(CALL $140($0, ($1 + [16])), ($1 + [96]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [176]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $147 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $135($0, ($1 + [40]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [528])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $146 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	CALL eosio_assert(((uint_32)$2 > (uint_32)[7]), [528])
	CALL memcpy($0, $1, [8])
	$2 = ($1 + [8])
	$3 = ($1 + $2)
	CALL eosio_assert(((uint_32)($3 - $2) > (uint_32)[7]), [528])
	CALL memcpy(($0 + [8]), $2, [8])
	$1 = ($1 + [16])
	$6 = [0]
	$5 = (int_64)0
	
.LOOP $label$1:
	CALL eosio_assert(($1 <= $3), [2704])
	$6 = ($6 & [255])
	$2 = $1
	$4 = *($2)
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$1 = ($2 + [1])
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 $5) == (int_32)[10]), [2720])
	CALL eosio_assert(((uint_32)($3 - $1) > (uint_32)[31]), [528])
	CALL memcpy(($0 + [16]), $1, [32])
	$1 = ($2 + [33])
	CALL eosio_assert(((uint_32)($3 - $1) > (uint_32)[31]), [528])
	CALL memcpy(($0 + [48]), $1, [32])
	$1 = ($2 + [65])
	CALL eosio_assert(((uint_32)($3 - $1) > (uint_32)[31]), [528])
	CALL memcpy(($0 + [80]), $1, [32])
	$1 = ($2 + [97])
	CALL eosio_assert(((uint_32)($3 - $1) > (uint_32)[31]), [528])
	CALL memcpy(($0 + [112]), $1, [32])
	$1 = ($2 + [129])
	CALL eosio_assert(((uint_32)($3 - $1) > (uint_32)[31]), [528])
	CALL memcpy(($0 + [144]), $1, [32])
	$1 = ($2 + [161])
	CALL eosio_assert(((uint_32)($3 - $1) > (uint_32)[31]), [528])
	CALL memcpy(($0 + [176]), $1, [32])
	$1 = ($2 + [193])
	CALL eosio_assert(((uint_32)($3 - $1) > (uint_32)[31]), [528])
	CALL memcpy(($0 + [208]), $1, [32])
	$1 = ($2 + [225])
	CALL eosio_assert(((uint_32)($3 - $1) > (uint_32)[31]), [528])
	CALL memcpy(($0 + [240]), $1, [32])
	$1 = ($2 + [257])
	CALL eosio_assert(((uint_32)($3 - $1) > (uint_32)[31]), [528])
	CALL memcpy(($0 + [272]), $1, [32])
	$1 = ($2 + [289])
	CALL eosio_assert(((uint_32)($3 - $1) > (uint_32)[31]), [528])
	CALL memcpy(($0 + [304]), $1, [32])
	$1 = ($2 + [321])
	CALL eosio_assert(((uint_32)($3 - $1) > (uint_32)[7]), [528])
	CALL memcpy(($0 + [336]), $1, [8])
}

int_32 .FUNC $141 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [528])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [528])
	CALL memcpy(($1 + [40]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

int_32 .FUNC $140 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [2704])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 $6) == (int_32)[10]), [2720])
	$4 = ($0 + [4])
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - *($4)) > (uint_32)[79]), [528])
	CALL memcpy($1, *($4), [80])
	*($4) = (*($4) + [80])
	return $0
}

int_32 .FUNC $143 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [528])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [528])
	CALL memcpy(($1 + [40]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

int_32 .FUNC $142 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [528])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $140(CALL $140($0, ($1 + [16])), ($1 + [96]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [176]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [528])
	CALL memcpy(($1 + [184]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

void .FUNC _ZN8pandafun13apply_upgradeERKNS_7upgradeE (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_64 $20
	int_32 $21
	$21 = (*([0] + [4]) - [560])
	*([0] + [4]) = $21
	CALL require_auth((int_64)-6222124003696921904)
	CALL _ZN8pandafun10pausecheckEv()
	CALL _ZN8pandafun10blackcheckEy(*($0))
	$1 = [0]
	*((($21 + [392]) + [32])) = [0]
	*($21 + [408]) = (int_64)-1
	$18 = *($0)
	*($21 + [400]) = $18
	*($21 + [392]) = (int_64)-6222124003695979872
	*($21 + [416]) = (int_64)0
	$7 = [0]
	$16 = CALL db_find_i64((int_64)-6222124003695979872, $18, (int_64)3904810955002871808, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $58(($21 + [392]), $16)
	CALL eosio_assert(((int_32)*($7 + [28]) == (int_32)($21 + [392])), [32])
	
.LABEL $label$1
	$12 = ((int_32)$7 != (int_32)[0])
	CALL eosio_assert($12, [4272])
	CALL eosio_assert(((int_32)*($7 + [24 align=1]) > (int_32)[0]), [4320])
	*((($21 + [352]) + [32])) = [0]
	*($21 + [368]) = (int_64)-1
	*($21 + [376]) = (int_64)0
	$18 = *($0)
	*($21 + [360]) = $18
	*($21 + [352]) = (int_64)-6222124003695979872
	$16 = CALL db_find_i64((int_64)-6222124003695979872, $18, (int_64)-6222123794639618048, *($0 + [8]))
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$2 }
	$1 = CALL $32(($21 + [352]), $16)
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)($21 + [352])), [32])
	
.LABEL $label$2
	$2 = ((int_32)$1 != (int_32)[0])
	CALL eosio_assert($2, [4352])
	$16 = ($0 + [40])
	$3 = uint_32(*((($1 + *($16)) + [16])) >> [2])
	$4 = ($3 & [3])
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [4400])
	CALL eosio_assert(((int_32)$4 < (int_32)*(((*($16) << [2]) + [4448]))), [4544])
	*((($21 + [312]) + [32])) = [0]
	*($21 + [328]) = (int_64)-1
	$18 = *($0)
	*($21 + [320]) = $18
	*($21 + [312]) = (int_64)-6222124003695979872
	*($21 + [336]) = (int_64)0
	$16 = [0]
	$10 = CALL db_find_i64((int_64)-6222124003695979872, $18, (int_64)7615828862441619456, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$3 }
	$16 = CALL $49(($21 + [312]), $10)
	CALL eosio_assert(((int_32)*($16 + [80]) == (int_32)($21 + [312])), [32])
	
.LABEL $label$3
	$10 = ((int_32)$16 != (int_32)[0])
	CALL eosio_assert($10, [3168])
	CALL eosio_assert(((int_64)*($16 + [72 align=1]) == (int_64)*($0 + [32])), [4592])
	*(($9 = (($21 + [272]) + [24]))) = *(($16 + [32]))
	*(($15 = (($21 + [272]) + [16]))) = *(($16 + [24]))
	*($21 + [280]) = *(($16 + [16]))
	*($21 + [272]) = *($16 + [8 align=1])
	*(($6 = (($21 + [240]) + [24]))) = *(($16 + [64]))
	*(($8 = (($21 + [240]) + [16]))) = *(($16 + [56]))
	*($21 + [248]) = *(($16 + [48]))
	*($21 + [240]) = *($16 + [40 align=1])
	*(($11 = (($21 + [208]) + [24]))) = *($9)
	*(($9 = (($21 + [208]) + [16]))) = *($15)
	*($21 + [216]) = *($21 + [280])
	*($21 + [208]) = *($21 + [272])
	$18 = *($0 + [16])
	*(($15 = (($21 + [128]) + [24]))) = *($11)
	*(($11 = (($21 + [128]) + [16]))) = *($9)
	*($21 + [136]) = *($21 + [216])
	*($21 + [128]) = *($21 + [208])
	CALL memset(($21 + [80]), [0], [24])
	*($21 + [16]) = $18
	CALL snprintf(($21 + [80]), [24], [16], ($21 + [16]))
	CALL sha256(($21 + [80]), CALL $185(($21 + [80])), ($21 + [432]))
	CALL eosio_assert((CALL $186(($21 + [128]), ($21 + [432]), [32]) == 0), [4640])
	*(($9 = (($21 + [176]) + [24]))) = *($6)
	*(($6 = (($21 + [176]) + [16]))) = *($8)
	*($21 + [184]) = *($21 + [248])
	*($21 + [176]) = *($21 + [240])
	$18 = *($0 + [24])
	*($15) = *($9)
	*($11) = *($6)
	*($21 + [136]) = *($21 + [184])
	*($21 + [128]) = *($21 + [176])
	CALL memset(($21 + [80]), [0], [24])
	*($21) = $18
	CALL snprintf(($21 + [80]), [24], [16], $21)
	CALL sha256(($21 + [80]), CALL $185(($21 + [80])), ($21 + [432]))
	CALL eosio_assert((CALL $186(($21 + [128]), ($21 + [432]), [32]) == 0), [4736])
	$18 = *($0 + [24])
	$20 = *($0 + [16])
	CALL eosio_assert($10, [2448])
	CALL eosio_assert($10, [2496])
	$5 = ((uint_64)((int_64)$18 ^ (int_64)$20) % (uint_64)(int_64)35000)
	$10 = CALL db_next_i64(*($16 + [84]), ($21 + [432]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$4 }
	CALL $49(($21 + [312]), $10)
	
.LABEL $label$4
	CALL $60(($21 + [312]), $16)
	CALL eosio_assert($12, [272])
	CALL eosio_assert(((int_32)*($7 + [28]) == (int_32)($21 + [392])), [320])
	CALL eosio_assert(((int_64)*($21 + [392]) == (int_64)CALL $fimport$14()), [368])
	*(($16 = ($7 + [24]))) = (*($16) + [-1])
	$18 = *($7)
	CALL eosio_assert([1], [432])
	*($21 + [136]) = (($21 + [432]) + [28])
	*($21 + [132]) = ($21 + [432])
	*($21 + [128]) = ($21 + [432])
	CALL $59(($21 + [128]), $7)
	CALL db_update_i64(*($7 + [32]), (int_64)-6222124003695979872, ($21 + [432]), [28])
	$16 = ($21 + [408])
	if ( (uint_64)($18 <= *($16)) ){ goto $label$5 }
	*($16) = ( (int_64)-2 ? ((int_64)$18 + (int_64)1) : ((uint_64)$18 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$20 = CALL current_time()
	*(($21 + [160])) = [0]
	*($21 + [136]) = (int_64)-6222124003695979872
	*($21 + [128]) = (int_64)-6222124003695979872
	*($21 + [144]) = (int_64)-1
	$18 = (int_64)0
	*($21 + [152]) = (int_64)0
	$12 = ((uint_32)(CASTING uint_32)(uint_64 ((uint_64)$20 / (uint_64)(int_64)1000000)) / (uint_32)[86400])
	$10 = [0]
	$16 = CALL db_find_i64((int_64)-6222124003695979872, (int_64)-6222124003695979872, (int_64)4982871467403247616, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$6 }
	$10 = CALL $7(($21 + [128]), $16)
	CALL eosio_assert(((int_32)*($10 + [96]) == (int_32)($21 + [128])), [32])
	
.LABEL $label$6
	$6 = ((int_32)$10 != (int_32)[0])
	CALL eosio_assert($6, [4832])
	$17 = (int_64)59
	$16 = [192]
	$19 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$18 > (uint_64)(int_64)6) ){ goto $label$12 }
	$7 = *($16)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$7 = ($7 + [165])
	goto $label$10 
	
.LABEL $label$12
	$20 = (int_64)0
	if ( ((uint_64)$18 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$20 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$20 = ((int_64)((int_64)$20 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$8
	$16 = ($16 + [1])
	$18 = ((int_64)$18 + (int_64)1)
	$19 = ((int_64)$20 | (int_64)$19)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$7 }
	*(($21 + [112])) = [0]
	*($21 + [96]) = (int_64)-1
	*($21 + [104]) = (int_64)0
	*($21 + [88]) = $19
	*($21 + [80]) = (int_64)-6222124003695979872
	$18 = (CASTING uint_64)(uint_32 $12)
	$16 = CALL db_find_i64((int_64)-6222124003695979872, $19, (int_64)-4157500428759203840, $18)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$14 }
	$16 = CALL $10(($21 + [80]), $16)
	CALL eosio_assert(((int_32)*($16 + [12]) == (int_32)($21 + [80])), [32])
	CALL eosio_assert([1], [272])
	CALL eosio_assert(((int_32)*($16 + [12]) == (int_32)($21 + [80])), [320])
	CALL eosio_assert(((int_64)*($21 + [80]) == (int_64)CALL $fimport$14()), [368])
	*($16 + [8 align=1]) = (*($16 + [8 align=1]) + [1])
	$18 = *($16)
	CALL eosio_assert([1], [432])
	CALL eosio_assert([1], [176])
	CALL memcpy(($21 + [432]), $16, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy((($21 + [432]) | [8]), ($16 + [8]), [4])
	CALL db_update_i64(*($16 + [16]), (int_64)-6222124003695979872, ($21 + [432]), [12])
	$16 = ($21 + [96])
	if ( (uint_64)($18 <= *($16)) ){ goto $label$13 }
	*($16) = ( (int_64)-2 ? ((int_64)$18 + (int_64)1) : ((uint_64)$18 > (uint_64)(int_64)-3) )
	goto $label$13 
	
.LABEL $label$14
	CALL eosio_assert(((int_64)*($21 + [80]) == (int_64)CALL $fimport$14()), [96])
	*(($16 = CALL $154([24])) + [12]) = ($21 + [80])
	*($16 + [8 align=1]) = [1]
	*($16) = $18
	CALL eosio_assert([1], [176])
	CALL memcpy(($21 + [432]), $16, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy((($21 + [432]) | [8]), ($16 + [8]), [4])
	$18 = *($16)
	$12 = CALL db_store_i64(*((($21 + [80]) + [8])), (int_64)-4157500428759203840, (int_64)-6222124003695979872, $18, ($21 + [432]), [12])
	*($16 + [16]) = $12
	$7 = ($21 + [96])
	if ( (uint_64)($18 <= *($7)) ){ goto $label$15 }
	*($7) = ( (int_64)-2 ? ((int_64)$18 + (int_64)1) : ((uint_64)$18 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	*($21 + [32]) = $16
	$18 = *($16)
	*($21 + [432]) = $18
	*($21 + [528]) = $12
	$9 = ($21 + [108])
	$7 = *($9)
	if ( ((uint_32)$7 >= (uint_32)*(($21 + [112]))) ){ goto $label$17 }
	*($7 + [8]) = $18
	*($7 + [16]) = $12
	*($21 + [32]) = [0]
	*($7) = $16
	*($9) = ($7 + [24])
	goto $label$16 
	
.LABEL $label$17
	CALL $11(($21 + [104]), ($21 + [32]), ($21 + [432]), ($21 + [528]))
	
.LABEL $label$16
	$16 = *($21 + [32])
	$7 = [0]
	*($21 + [32]) = [0]
	if ( ($16 == 0) ){ goto $label$18 }
	CALL $155($16)
	
.LABEL $label$18
	*((($21 + [32]) + [8])) = [0]
	*(($12 = ($21 + [48]))) = [0]
	*($21 + [44]) = ($21 + [80])
	*($21 + [36]) = ($21 + [80])
	$16 = CALL db_lowerbound_i64(*($21 + [80]), *((($21 + [80]) + [8])), (int_64)-4157500428759203840, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$19 }
	$7 = CALL $10(($21 + [80]), $16)
	
.LABEL $label$19
	$16 = ($21 + [44])
	if ( ((int_32)*($12) == (int_32)$7) ){ goto $label$20 }
	CALL $61($16)
	
.LABEL $label$20
	$7 = [0]
	$12 = CALL db_lowerbound_i64(*($21 + [80]), *(($21 + [88])), (int_64)-4157500428759203840, (int_64)0)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$21 }
	$7 = CALL $10(($21 + [80]), $12)
	
.LABEL $label$21
	$12 = (($21 + [32]) + [16])
	if ( ((int_32)*($12) == (int_32)$7) ){ goto $label$22 }
	CALL eosio_assert($6, [272])
	CALL eosio_assert(((int_32)*($10 + [96]) == (int_32)($21 + [128])), [320])
	CALL eosio_assert(((int_64)*($21 + [128]) == (int_64)CALL $fimport$14()), [368])
	$18 = *($10)
	$20 = *($10 + [56 align=1])
	*($21 + [528]) = *(($21 + [44]))
	*($10 + [56 align=1]) = ((int_64)$20 + (int_64)*(*(CALL $61(($21 + [528])) + [4]) + [8 align=1]))
	CALL eosio_assert(((int_64)$18 == (int_64)*($10)), [432])
	*($21 + [536]) = (($21 + [432]) + [93])
	*($21 + [532]) = ($21 + [432])
	*($21 + [528]) = ($21 + [432])
	CALL $8(($21 + [528]), $10)
	CALL db_update_i64(*($10 + [100]), (int_64)-6222124003695979872, ($21 + [432]), [93])
	if ( (uint_64)($18 <= *((($21 + [128]) + [16]))) ){ goto $label$22 }
	*(($21 + [144])) = ( (int_64)-2 ? ((int_64)$18 + (int_64)1) : ((uint_64)$18 > (uint_64)(int_64)-3) )
	
.LABEL $label$22
	$7 = [0]
	*((($21 + [32]) + [8])) = [0]
	*($12) = [0]
	*(($21 + [44])) = ($21 + [80])
	*($21 + [36]) = ($21 + [80])
	$12 = CALL db_lowerbound_i64(*($21 + [80]), *((($21 + [80]) + [8])), (int_64)-4157500428759203840, (int_64)0)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$23 }
	$7 = CALL $10(($21 + [80]), $12)
	
.LABEL $label$23
	if ( ((int_32)*(($21 + [48])) == (int_32)$7) ){ goto $label$24 }
	CALL $61($16)
	$7 = [0]
	$12 = CALL db_lowerbound_i64(*($21 + [80]), *(($21 + [88])), (int_64)-4157500428759203840, (int_64)0)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$25 }
	$7 = CALL $10(($21 + [80]), $12)
	
.LABEL $label$25
	if ( ((int_32)*(($21 + [48])) == (int_32)$7) ){ goto $label$24 }
	CALL $61($16)
	$7 = [0]
	$12 = CALL db_lowerbound_i64(*($21 + [80]), *(($21 + [88])), (int_64)-4157500428759203840, (int_64)0)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$26 }
	$7 = CALL $10(($21 + [80]), $12)
	
.LABEL $label$26
	if ( ((int_32)*(($21 + [48])) == (int_32)$7) ){ goto $label$24 }
	CALL $61($16)
	$7 = [0]
	$12 = CALL db_lowerbound_i64(*($21 + [80]), *(($21 + [88])), (int_64)-4157500428759203840, (int_64)0)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$27 }
	$7 = CALL $10(($21 + [80]), $12)
	
.LABEL $label$27
	if ( ((int_32)*(($21 + [48])) == (int_32)$7) ){ goto $label$24 }
	CALL $61($16)
	
.LABEL $label$24
	$16 = [0]
	$7 = CALL db_lowerbound_i64(*($21 + [80]), *(($21 + [88])), (int_64)-4157500428759203840, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$28 }
	$16 = CALL $10(($21 + [80]), $7)
	
.LABEL $label$28
	if ( ((int_32)*(($21 + [48])) == (int_32)$16) ){ goto $label$13 }
	*($21 + [432]) = *(($21 + [44]))
	$20 = *(*(CALL $61(($21 + [432])) + [4]))
	$16 = CALL db_lowerbound_i64(*($21 + [80]), *((($21 + [80]) + [8])), (int_64)-4157500428759203840, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$13 }
	$8 = (($21 + [432]) + [93])
	$16 = CALL $10(($21 + [80]), $16)
	$11 = ($10 + [96])
	$12 = ($10 + [56])
	$13 = (($21 + [528]) + [8])
	$14 = ($10 + [100])
	$15 = ($21 + [144])
	
.LOOP $label$29:
	if ( ((uint_64)*($16) > (uint_64)$20) ){ goto $label$13 }
	CALL eosio_assert($6, [272])
	CALL eosio_assert(((int_32)*($11) == (int_32)($21 + [128])), [320])
	CALL eosio_assert(((int_64)*($21 + [128]) == (int_64)CALL $fimport$14()), [368])
	*($12) = (int_64))(*($12) - *($16 + [8 align=1]))
	$18 = *($10)
	CALL eosio_assert([1], [432])
	*($13) = $8
	*($21 + [532]) = ($21 + [432])
	*($21 + [528]) = ($21 + [432])
	CALL $8(($21 + [528]), $10)
	CALL db_update_i64(*($14), (int_64)-6222124003695979872, ($21 + [432]), [93])
	if ( (uint_64)($18 <= *($15)) ){ goto $label$30 }
	*($15) = ( (int_64)-2 ? ((int_64)$18 + (int_64)1) : ((uint_64)$18 > (uint_64)(int_64)-3) )
	
.LABEL $label$30
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$7 = [0]
	$9 = CALL db_next_i64(*($16 + [16]), ($21 + [432]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$31 }
	$7 = CALL $10(($21 + [80]), $9)
	
.LABEL $label$31
	CALL $62(($21 + [80]), $16)
	$16 = $7
	if ( $7 ){ goto $label$29 }
	
.LABEL $label$13
	*($21 + [76]) = $4
	$18 = *($10 + [56 align=1])
	$20 = *($10 + [48 align=1])
	$16 = ($3 & [3])
	if ( ((int_32)$16 == (int_32)[2]) ){ goto $label$33 }
	$12 = [1]
	if ( ((int_32)$16 != (int_32)[1]) ){ goto $label$32 }
	$12 = [0]
	if ( ((uint_64)$5 >= (uint_64)(CASTING int_64)(int_32 ((CASTING int_32)(float_64 ((float_64)((float_64)((float_64)(CASTING float_64)(int_64 (int_64))($20 - $18)) * (float_64)(float_64)700) / (float_64)(CASTING float_64)(int_64 ((int_64)$18 + (int_64)$20))) + (float_64)(float_64)0.5)) + [1400]))) ){ goto $label$32 }
	$12 = [1]
	*($21 + [76]) = ($4 + [1])
	goto $label$32 
	
.LABEL $label$33
	$12 = [0]
	if ( ((uint_64)$5 >= (uint_64)(CASTING int_64)(int_32 ((CASTING int_32)(float_64 ((float_64)((float_64)((float_64)(CASTING float_64)(int_64 (int_64))($20 - $18)) * (float_64)(float_64)200) / (float_64)(CASTING float_64)(int_64 ((int_64)$18 + (int_64)$20))) + (float_64)(float_64)0.5)) + [350]))) ){ goto $label$32 }
	$12 = [1]
	*($21 + [76]) = ($4 + [1])
	
.LABEL $label$32
	*((($21 + [32]) + [32])) = [0]
	*($21 + [48]) = (int_64)-1
	$18 = *($0)
	*($21 + [40]) = $18
	*($21 + [32]) = (int_64)-6222124003695979872
	*($21 + [56]) = (int_64)0
	$16 = CALL db_lowerbound_i64((int_64)-6222124003695979872, $18, (int_64)-3073298666878926848, (int_64)0)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$35 }
	$9 = ($21 + [32])
	$7 = CALL $73(($21 + [32]), $16)
	if ( ((int_64)*($7 + [8 align=1]) == (int_64)*(($0 + [32]))) ){ goto $label$34 }
	
.LOOP $label$36:
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$16 = [0]
	$10 = CALL db_next_i64(*($7 + [24]), ($21 + [432]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$37 }
	$16 = CALL $73(($21 + [32]), $10)
	
.LABEL $label$37
	CALL $74(($21 + [32]), $7)
	$7 = $16
	if ( $16 ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$35
	$9 = ($21 + [32])
	
.LABEL $label$34
	if ( ($12 == 0) ){ goto $label$45 }
	*($21 + [536]) = $0
	*($21 + [532]) = ($21 + [76])
	*($21 + [528]) = ($21 + [32])
	*($21 + [552]) = (int_64)-6222124003695979872
	CALL eosio_assert(((int_64)*($21 + [32]) == (int_64)CALL $fimport$14()), [96])
	*($21 + [436]) = ($21 + [528])
	*($21 + [432]) = ($21 + [32])
	*($21 + [440]) = ($21 + [552])
	*(($16 = CALL $154([32])) + [20]) = $9
	CALL $77(($21 + [432]), $16)
	*($21 + [544]) = $16
	$18 = *($16)
	*($21 + [432]) = $18
	$10 = *($16 + [24])
	*($21 + [540]) = $10
	$12 = ($21 + [60])
	$7 = *($12)
	if ( ((uint_32)$7 >= (uint_32)*((($21 + [32]) + [32]))) ){ goto $label$44 }
	*($7 + [8]) = $18
	*($7 + [16]) = $10
	*($21 + [544]) = [0]
	*($7) = $16
	*($12) = ($7 + [24])
	goto $label$43 
	
.LABEL $label$45
	*($21 + [556]) = $0
	*($21 + [552]) = ($21 + [32])
	*($21 + [528]) = (int_64)-6222124003695979872
	CALL eosio_assert(((int_64)*($21 + [32]) == (int_64)CALL $fimport$14()), [96])
	*($21 + [436]) = ($21 + [552])
	*($21 + [432]) = ($21 + [32])
	*($21 + [440]) = ($21 + [528])
	*(($16 = CALL $154([32])) + [20]) = $9
	CALL $75(($21 + [432]), $16)
	*($21 + [544]) = $16
	$18 = *($16)
	*($21 + [432]) = $18
	$10 = *($16 + [24])
	*($21 + [540]) = $10
	$0 = ($21 + [60])
	$7 = *($0)
	if ( ((uint_32)$7 >= (uint_32)*((($21 + [32]) + [32]))) ){ goto $label$42 }
	*($7 + [8]) = $18
	*($7 + [16]) = $10
	*($21 + [544]) = [0]
	*($7) = $16
	*($0) = ($7 + [24])
	goto $label$41 
	
.LABEL $label$44
	CALL $76(($21 + [56]), ($21 + [544]), ($21 + [432]), ($21 + [540]))
	
.LABEL $label$43
	$16 = *($21 + [544])
	*($21 + [544]) = [0]
	if ( ($16 == 0) ){ goto $label$46 }
	CALL $155($16)
	
.LABEL $label$46
	$7 = ($0 + [40])
	$16 = ($1 + [16])
	$10 = *(($16 + *($7)))
	$0 = *($21 + [76])
	CALL eosio_assert($2, [272])
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)($21 + [352])), [320])
	CALL eosio_assert(((int_64)*($21 + [352]) == (int_64)CALL $fimport$14()), [368])
	$18 = *($1)
	*(($16 + *($7))) = (($10 & [243]) | ($0 << [2]))
	CALL eosio_assert(((int_64)$18 == (int_64)*($1)), [432])
	CALL eosio_assert([1], [176])
	CALL memcpy(($21 + [432]), $1, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy((($21 + [432]) | [8]), ($1 + [8]), [8])
	*($21 + [528]) = [24]
	CALL eosio_assert([1], [176])
	CALL memcpy((($21 + [432]) + [16]), ($21 + [528]), [1])
	CALL eosio_assert([1], [176])
	CALL memcpy(($21 + [449]), $16, [24])
	CALL db_update_i64(*($1 + [44]), (int_64)-6222124003695979872, ($21 + [432]), [41])
	$16 = (($21 + [352]) + [16])
	if ( (uint_64)($18 <= *($16)) ){ goto $label$40 }
	*($16) = ( (int_64)-2 ? ((int_64)$18 + (int_64)1) : ((uint_64)$18 > (uint_64)(int_64)-3) )
	$10 = *($21 + [56])
	if ( $10 ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$42
	CALL $76(($21 + [56]), ($21 + [544]), ($21 + [432]), ($21 + [540]))
	
.LABEL $label$41
	$16 = *($21 + [544])
	*($21 + [544]) = [0]
	if ( ($16 == 0) ){ goto $label$40 }
	CALL $155($16)
	
.LABEL $label$40
	$10 = *($21 + [56])
	if ( ($10 == 0) ){ goto $label$38 }
	
.LABEL $label$39
	$0 = ($21 + [60])
	$16 = *($0)
	if ( ((int_32)$16 == (int_32)$10) ){ goto $label$48 }
	
.LOOP $label$49:
	$16 = ($16 + [-24])
	$7 = *($16)
	*($16) = [0]
	if ( ($7 == 0) ){ goto $label$50 }
	CALL $155($7)
	
.LABEL $label$50
	if ( ((int_32)$10 != (int_32)$16) ){ goto $label$49 }
	$16 = *(($21 + [56]))
	goto $label$47 
	
.LABEL $label$48
	$16 = $10
	
.LABEL $label$47
	*($0) = $10
	CALL $155($16)
	
.LABEL $label$38
	$10 = *($21 + [104])
	if ( ($10 == 0) ){ goto $label$51 }
	$0 = ($21 + [108])
	$16 = *($0)
	if ( ((int_32)$16 == (int_32)$10) ){ goto $label$53 }
	
.LOOP $label$54:
	$16 = ($16 + [-24])
	$7 = *($16)
	*($16) = [0]
	if ( ($7 == 0) ){ goto $label$55 }
	CALL $155($7)
	
.LABEL $label$55
	if ( ((int_32)$10 != (int_32)$16) ){ goto $label$54 }
	$16 = *(($21 + [104]))
	goto $label$52 
	
.LABEL $label$53
	$16 = $10
	
.LABEL $label$52
	*($0) = $10
	CALL $155($16)
	
.LABEL $label$51
	$10 = *($21 + [152])
	if ( ($10 == 0) ){ goto $label$56 }
	$0 = ($21 + [156])
	$16 = *($0)
	if ( ((int_32)$16 == (int_32)$10) ){ goto $label$58 }
	
.LOOP $label$59:
	$16 = ($16 + [-24])
	$7 = *($16)
	*($16) = [0]
	if ( ($7 == 0) ){ goto $label$60 }
	CALL $155($7)
	
.LABEL $label$60
	if ( ((int_32)$10 != (int_32)$16) ){ goto $label$59 }
	$16 = *(($21 + [152]))
	goto $label$57 
	
.LABEL $label$58
	$16 = $10
	
.LABEL $label$57
	*($0) = $10
	CALL $155($16)
	
.LABEL $label$56
	$10 = *($21 + [336])
	if ( ($10 == 0) ){ goto $label$61 }
	$0 = ($21 + [340])
	$16 = *($0)
	if ( ((int_32)$16 == (int_32)$10) ){ goto $label$63 }
	
.LOOP $label$64:
	$16 = ($16 + [-24])
	$7 = *($16)
	*($16) = [0]
	if ( ($7 == 0) ){ goto $label$65 }
	CALL $155($7)
	
.LABEL $label$65
	if ( ((int_32)$10 != (int_32)$16) ){ goto $label$64 }
	$16 = *(($21 + [336]))
	goto $label$62 
	
.LABEL $label$63
	$16 = $10
	
.LABEL $label$62
	*($0) = $10
	CALL $155($16)
	
.LABEL $label$61
	$10 = *($21 + [376])
	if ( ($10 == 0) ){ goto $label$66 }
	$0 = ($21 + [380])
	$16 = *($0)
	if ( ((int_32)$16 == (int_32)$10) ){ goto $label$68 }
	
.LOOP $label$69:
	$16 = ($16 + [-24])
	$7 = *($16)
	*($16) = [0]
	if ( ($7 == 0) ){ goto $label$70 }
	CALL $155($7)
	
.LABEL $label$70
	if ( ((int_32)$10 != (int_32)$16) ){ goto $label$69 }
	$16 = *(($21 + [376]))
	goto $label$67 
	
.LABEL $label$68
	$16 = $10
	
.LABEL $label$67
	*($0) = $10
	CALL $155($16)
	
.LABEL $label$66
	$10 = *($21 + [416])
	if ( ($10 == 0) ){ goto $label$71 }
	$0 = ($21 + [420])
	$16 = *($0)
	if ( ((int_32)$16 == (int_32)$10) ){ goto $label$73 }
	
.LOOP $label$74:
	$16 = ($16 + [-24])
	$7 = *($16)
	*($16) = [0]
	if ( ($7 == 0) ){ goto $label$75 }
	CALL $155($7)
	
.LABEL $label$75
	if ( ((int_32)$10 != (int_32)$16) ){ goto $label$74 }
	$16 = *(($21 + [416]))
	goto $label$72 
	
.LABEL $label$73
	$16 = $10
	
.LABEL $label$72
	*($0) = $10
	CALL $155($16)
	
.LABEL $label$71
	*([0] + [4]) = ($21 + [560])
}

int_32 .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [496])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $154([32])) + [20]) = $0
	CALL $79(($8 + [32]), $6)
	*($6 + [24]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [24])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $76(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $155($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC _ZN8pandafun11apply_praysERKNS_5praysE (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$20 = (*([0] + [4]) - [336])
	*([0] + [4]) = $20
	CALL require_auth((int_64)-6222124003696921904)
	CALL _ZN8pandafun10pausecheckEv()
	CALL _ZN8pandafun10blackcheckEy(*($0))
	$19 = [0]
	*((($20 + [200]) + [32])) = [0]
	*($20 + [216]) = (int_64)-1
	*($20 + [224]) = (int_64)0
	$7 = *($0)
	*($20 + [208]) = $7
	*($20 + [200]) = (int_64)-6222124003695979872
	$9 = [0]
	$8 = CALL db_find_i64((int_64)-6222124003695979872, $7, (int_64)-6222123794639618048, *($0 + [8]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $32(($20 + [200]), $8)
	CALL eosio_assert(((int_32)*($9 + [40]) == (int_32)($20 + [200])), [32])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [3920])
	CALL eosio_assert(((int_64)*($9 + [8 align=1]) != (int_64)5444054035298516992), [3968])
	*((($20 + [160]) + [32])) = [0]
	*($20 + [176]) = (int_64)-1
	$7 = *($0)
	*($20 + [168]) = $7
	*($20 + [160]) = (int_64)-6222124003695979872
	*($20 + [184]) = (int_64)0
	$9 = CALL db_find_i64((int_64)-6222124003695979872, $7, (int_64)3904810955002871808, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$2 }
	$19 = CALL $58(($20 + [160]), $9)
	CALL eosio_assert(((int_32)*($19 + [28]) == (int_32)($20 + [160])), [32])
	
.LABEL $label$2
	$18 = [0]
	CALL eosio_assert(((int_32)$19 != (int_32)[0]), [4016])
	CALL eosio_assert(((int_32)*($19 + [16 align=1]) > (int_32)[9]), [4064])
	*((($20 + [120]) + [32])) = [0]
	*($20 + [136]) = (int_64)-1
	$7 = *($0)
	*($20 + [128]) = $7
	*($20 + [120]) = (int_64)-6222124003695979872
	*($20 + [144]) = (int_64)0
	$19 = CALL db_lowerbound_i64((int_64)-6222124003695979872, $7, (int_64)-5922831644317712384, (int_64)0)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $63(($20 + [120]), $19)
	
.LOOP $label$4:
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$19 = [0]
	$8 = CALL db_next_i64(*($9 + [56]), ($20 + [256]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$5 }
	$19 = CALL $63(($20 + [120]), $8)
	
.LABEL $label$5
	CALL $64(($20 + [120]), $9)
	$9 = $19
	if ( $19 ){ goto $label$4 }
	
.LABEL $label$3
	*((($20 + [80]) + [32])) = [0]
	*($20 + [96]) = (int_64)-1
	$7 = *($0)
	*($20 + [88]) = $7
	*($20 + [80]) = (int_64)-6222124003695979872
	*($20 + [104]) = (int_64)0
	$19 = CALL db_lowerbound_i64((int_64)-6222124003695979872, $7, (int_64)7615829182807801856, (int_64)0)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$6 }
	$18 = CALL $42(($20 + [80]), $19)
	
.LABEL $label$6
	CALL eosio_assert(((int_32)$18 != (int_32)[0]), [4112])
	CALL eosio_assert(((int_64)*($18 + [72 align=1]) == (int_64)*($0 + [176])), [4144])
	$4 = ($20 + [24])
	$3 = (($20 + [256]) + [72])
	$2 = (($20 + [256]) + [40])
	$1 = (($20 + [256]) | [8])
	$10 = (($20 + [40]) + [16])
	$12 = (($20 + [40]) + [32])
	$15 = ($20 + [28])
	$16 = ($0 + [176])
	$17 = [0]
	
.LOOP $label$9:
	$7 = *($0)
	*((($20 + [40]) + [8])) = $7
	*($10) = (int_64)-1
	*(($11 = (($20 + [40]) + [24]))) = (int_64)0
	*($12) = [0]
	*($20 + [40]) = (int_64)-6222124003695979872
	$13 = ($0 + [8])
	$19 = CALL db_find_i64((int_64)-6222124003695979872, $7, (int_64)-6222123794639618048, *($13))
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert(((int_32)*(CALL $32(($20 + [40]), $19) + [40]) == (int_32)($20 + [40])), [32])
	$5 = ((int_32)$18 != (int_32)[0])
	CALL eosio_assert($5, [4176])
	*(($9 = ($20 + [16]))) = (int_64)-1
	*($4) = (int_64)0
	*(($14 = ($20 + [32]))) = [0]
	$7 = *($0)
	*(($8 = ($20 + [8]))) = $7
	*($20) = (int_64)-6222124003695979872
	$19 = CALL db_find_i64((int_64)-6222124003695979872, $7, (int_64)7615828862441619456, (int_64)0)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$10 }
	$19 = CALL $49($20, $19)
	CALL eosio_assert(((int_32)*($19 + [80]) == (int_32)$20), [32])
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$6 = CALL db_next_i64(*($19 + [84]), ($20 + [256]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$11 }
	CALL $49($20, $6)
	
.LABEL $label$11
	CALL $60($20, $19)
	
.LABEL $label$10
	CALL eosio_assert(((int_64)*($20) == (int_64)CALL $fimport$14()), [96])
	*(($19 = CALL $154([92])) + [80]) = $20
	*($19) = (int_64)0
	*(($19 + [32])) = *(($18 + [32]))
	*(($19 + [24])) = *(($18 + [24]))
	*(($19 + [16])) = *(($18 + [16]))
	*($19 + [8 align=1]) = *($18 + [8 align=1])
	*(($19 + [64])) = *(($18 + [64]))
	*(($19 + [56])) = *(($18 + [56]))
	*(($19 + [48])) = *(($18 + [48]))
	*($19 + [40 align=1]) = *($18 + [40 align=1])
	*($19 + [72 align=1]) = *($18 + [72 align=1])
	CALL eosio_assert([1], [176])
	CALL memcpy(($20 + [256]), $19, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy($1, ($19 + [8]), [32])
	CALL eosio_assert([1], [176])
	CALL memcpy($2, ($19 + [40]), [32])
	CALL eosio_assert([1], [176])
	CALL memcpy($3, ($19 + [72]), [8])
	$7 = *($19)
	$8 = CALL db_store_i64(*($8), (int_64)7615828862441619456, (int_64)-6222124003695979872, $7, ($20 + [256]), [80])
	*($19 + [84]) = $8
	if ( (uint_64)($7 <= *($9)) ){ goto $label$12 }
	*($9) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	*($20 + [248]) = $19
	$7 = *($19)
	*($20 + [256]) = $7
	*($20 + [244]) = $8
	$9 = *($15)
	if ( ((uint_32)$9 >= (uint_32)*($14)) ){ goto $label$14 }
	*($9 + [8]) = $7
	*($9 + [16]) = $8
	*($20 + [248]) = [0]
	*($9) = $19
	*($15) = ($9 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $52($4, ($20 + [248]), ($20 + [256]), ($20 + [244]))
	
.LABEL $label$13
	$19 = *($20 + [248])
	*($20 + [248]) = [0]
	if ( ($19 == 0) ){ goto $label$15 }
	CALL $155($19)
	
.LABEL $label$15
	CALL eosio_assert($5, [2496])
	$19 = *($18 + [84])
	$18 = [0]
	$19 = CALL db_next_i64($19, ($20 + [256]))
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$16 }
	$18 = CALL $42(($20 + [80]), $19)
	
.LABEL $label$16
	*((($20 + [256]) + [8])) = *($13)
	$19 = ($0 + ($17 << [3]))
	*((($20 + [256]) + [16])) = *(($19 + [16]))
	*($20 + [256]) = *($0)
	*((($20 + [256]) + [24])) = *(($19 + [96]))
	*((($20 + [256]) + [32])) = *($16)
	CALL _ZN8pandafun10apply_prayERKNS_4prayE(($20 + [256]))
	$8 = *($4)
	if ( ($8 == 0) ){ goto $label$17 }
	$19 = *($15)
	if ( ((int_32)$19 == (int_32)$8) ){ goto $label$19 }
	
.LOOP $label$20:
	$19 = ($19 + [-24])
	$9 = *($19)
	*($19) = [0]
	if ( ($9 == 0) ){ goto $label$21 }
	CALL $155($9)
	
.LABEL $label$21
	if ( ((int_32)$8 != (int_32)$19) ){ goto $label$20 }
	$19 = *($4)
	goto $label$18 
	
.LABEL $label$19
	$19 = $8
	
.LABEL $label$18
	*($15) = $8
	CALL $155($19)
	
.LABEL $label$17
	$8 = *($11)
	if ( ($8 == 0) ){ goto $label$22 }
	$13 = (($20 + [40]) + [28])
	$19 = *($13)
	if ( ((int_32)$19 == (int_32)$8) ){ goto $label$24 }
	
.LOOP $label$25:
	$19 = ($19 + [-24])
	$9 = *($19)
	*($19) = [0]
	if ( ($9 == 0) ){ goto $label$26 }
	CALL $155($9)
	
.LABEL $label$26
	if ( ((int_32)$8 != (int_32)$19) ){ goto $label$25 }
	$19 = *($11)
	goto $label$23 
	
.LABEL $label$24
	$19 = $8
	
.LABEL $label$23
	*($13) = $8
	CALL $155($19)
	
.LABEL $label$22
	$17 = ($17 + [1])
	if ( ($17 <= [10]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL prints([4240])
	$8 = *(($20 + [64]))
	if ( ($8 == 0) ){ goto $label$7 }
	$18 = ($20 + [68])
	$19 = *($18)
	if ( ((int_32)$19 == (int_32)$8) ){ goto $label$28 }
	
.LOOP $label$29:
	$19 = ($19 + [-24])
	$9 = *($19)
	*($19) = [0]
	if ( ($9 == 0) ){ goto $label$30 }
	CALL $155($9)
	
.LABEL $label$30
	if ( ((int_32)$8 != (int_32)$19) ){ goto $label$29 }
	$19 = *(($20 + [64]))
	goto $label$27 
	
.LABEL $label$28
	$19 = $8
	
.LABEL $label$27
	*($18) = $8
	CALL $155($19)
	
.LABEL $label$7
	*(($20 + [288])) = [0]
	*($20 + [272]) = (int_64)-1
	$7 = *($0)
	*($20 + [264]) = $7
	*($20 + [256]) = (int_64)-6222124003695979872
	*($20 + [280]) = (int_64)0
	$19 = CALL db_lowerbound_i64((int_64)-6222124003695979872, $7, (int_64)7615829182807801856, (int_64)0)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$31 }
	$9 = CALL $42(($20 + [256]), $19)
	
.LOOP $label$32:
	CALL eosio_assert([1], [2448])
	CALL eosio_assert([1], [2496])
	$19 = [0]
	$8 = CALL db_next_i64(*($9 + [84]), ($20 + [40]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$33 }
	$19 = CALL $42(($20 + [256]), $8)
	
.LABEL $label$33
	CALL $71(($20 + [256]), $9)
	$9 = $19
	if ( $19 ){ goto $label$32 }
	
.LABEL $label$31
	$8 = *($20 + [280])
	if ( ($8 == 0) ){ goto $label$34 }
	$18 = ($20 + [284])
	$19 = *($18)
	if ( ((int_32)$19 == (int_32)$8) ){ goto $label$36 }
	
.LOOP $label$37:
	$19 = ($19 + [-24])
	$9 = *($19)
	*($19) = [0]
	if ( ($9 == 0) ){ goto $label$38 }
	CALL $155($9)
	
.LABEL $label$38
	if ( ((int_32)$8 != (int_32)$19) ){ goto $label$37 }
	$19 = *(($20 + [280]))
	goto $label$35 
	
.LABEL $label$36
	$19 = $8
	
.LABEL $label$35
	*($18) = $8
	CALL $155($19)
	
.LABEL $label$34
	$8 = *($20 + [104])
	if ( ($8 == 0) ){ goto $label$39 }
	$18 = ($20 + [108])
	$19 = *($18)
	if ( ((int_32)$19 == (int_32)$8) ){ goto $label$41 }
	
.LOOP $label$42:
	$19 = ($19 + [-24])
	$9 = *($19)
	*($19) = [0]
	if ( ($9 == 0) ){ goto $label$43 }
	CALL $155($9)
	
.LABEL $label$43
	if ( ((int_32)$8 != (int_32)$19) ){ goto $label$42 }
	$19 = *(($20 + [104]))
	goto $label$40 
	
.LABEL $label$41
	$19 = $8
	
.LABEL $label$40
	*($18) = $8
	CALL $155($19)
	
.LABEL $label$39
	$8 = *($20 + [144])
	if ( ($8 == 0) ){ goto $label$44 }
	$18 = ($20 + [148])
	$19 = *($18)
	if ( ((int_32)$19 == (int_32)$8) ){ goto $label$46 }
	
.LOOP $label$47:
	$19 = ($19 + [-24])
	$9 = *($19)
	*($19) = [0]
	if ( ($9 == 0) ){ goto $label$48 }
	CALL $155($9)
	
.LABEL $label$48
	if ( ((int_32)$8 != (int_32)$19) ){ goto $label$47 }
	$19 = *(($20 + [144]))
	goto $label$45 
	
.LABEL $label$46
	$19 = $8
	
.LABEL $label$45
	*($18) = $8
	CALL $155($19)
	
.LABEL $label$44
	$8 = *($20 + [184])
	if ( ($8 == 0) ){ goto $label$49 }
	$18 = ($20 + [188])
	$19 = *($18)
	if ( ((int_32)$19 == (int_32)$8) ){ goto $label$51 }
	
.LOOP $label$52:
	$19 = ($19 + [-24])
	$9 = *($19)
	*($19) = [0]
	if ( ($9 == 0) ){ goto $label$53 }
	CALL $155($9)
	
.LABEL $label$53
	if ( ((int_32)$8 != (int_32)$19) ){ goto $label$52 }
	$19 = *(($20 + [184]))
	goto $label$50 
	
.LABEL $label$51
	$19 = $8
	
.LABEL $label$50
	*($18) = $8
	CALL $155($19)
	
.LABEL $label$49
	$8 = *($20 + [224])
	if ( ($8 == 0) ){ goto $label$54 }
	$18 = ($20 + [228])
	$19 = *($18)
	if ( ((int_32)$19 == (int_32)$8) ){ goto $label$56 }
	
.LOOP $label$57:
	$19 = ($19 + [-24])
	$9 = *($19)
	*($19) = [0]
	if ( ($9 == 0) ){ goto $label$58 }
	CALL $155($9)
	
.LABEL $label$58
	if ( ((int_32)$8 != (int_32)$19) ){ goto $label$57 }
	$19 = *(($20 + [224]))
	goto $label$55 
	
.LABEL $label$56
	$19 = $8
	
.LABEL $label$55
	*($18) = $8
	CALL $155($19)
	
.LABEL $label$54
	*([0] + [4]) = ($20 + [336])
}

void .FUNC $71 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [80]) == (int_32)$0), [2528])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [2576])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2640])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $155($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $155($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [84]))
}

void .FUNC $76 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $154(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $159($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $155($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $155($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0)
	$3 = *($0 + [4])
	$6 = *($3)
	$5 = *($6 + [16])
	if ( ((int_64)$5 != (int_64)-1) ){ goto $label$1 }
	$5 = (int_64)0
	$4 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-3073298666878926848, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	CALL $73($6, $4)
	*($7 + [12]) = [0]
	*($7 + [8]) = $6
	$5 = *(*(CALL $78(($7 + [8])) + [4]))
	$5 = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($6 + [16])) = $5
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($5 <= (int_64)-2), [2992])
	*($1) = *(($6 + [16]))
	*($1 + [16]) = *(*($3 + [4]))
	*($1 + [8 align=1]) = *(*($3 + [8]) + [32])
	*($1 + [17]) = [1]
	$6 = $8
	$8 = ($6 + [-32])
	*([0] + [4]) = $8
	CALL eosio_assert([1], [176])
	CALL memcpy($8, $1, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy(($6 + [-24]), ($1 + [8]), [8])
	CALL eosio_assert([1], [176])
	CALL memcpy(($6 + [-16]), ($1 + [16]), [1])
	CALL eosio_assert([1], [176])
	CALL memcpy(($6 + [-15]), ($1 + [17]), [1])
	$5 = *($1)
	*($1 + [24]) = CALL db_store_i64(*($2 + [8]), (int_64)-3073298666878926848, *(*($0 + [8])), $5, $8, [18])
	if ( (uint_64)($5 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $74 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [2528])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [2576])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2640])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $155($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $155($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [24]))
}

void .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0)
	$3 = *($0 + [4])
	$6 = *($3)
	$5 = *($6 + [16])
	if ( ((int_64)$5 != (int_64)-1) ){ goto $label$1 }
	$5 = (int_64)0
	$4 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-3073298666878926848, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	CALL $73($6, $4)
	*($7 + [12]) = [0]
	*($7 + [8]) = $6
	$5 = *(*(CALL $78(($7 + [8])) + [4]))
	$5 = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($6 + [16])) = $5
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($5 <= (int_64)-2), [2992])
	$5 = *(($6 + [16]))
	*($1 + [16]) = [0]
	*($1) = $5
	$6 = *($3 + [4])
	*($1 + [17]) = [0]
	*($1 + [8 align=1]) = *($6 + [32])
	$6 = $8
	$8 = ($6 + [-32])
	*([0] + [4]) = $8
	CALL eosio_assert([1], [176])
	CALL memcpy($8, $1, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy(($6 + [-24]), ($1 + [8]), [8])
	CALL eosio_assert([1], [176])
	CALL memcpy(($6 + [-16]), ($1 + [16]), [1])
	CALL eosio_assert([1], [176])
	CALL memcpy(($6 + [-15]), ($1 + [17]), [1])
	$5 = *($1)
	*($1 + [24]) = CALL db_store_i64(*($2 + [8]), (int_64)-3073298666878926848, *(*($0 + [8])), $5, $8, [18])
	if ( (uint_64)($5 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [16])
}

int_32 .FUNC $78 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [24]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [3120])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-3073298666878926848)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [3056])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [3056])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $73(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [528])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [528])
	CALL memcpy(($1 + [16]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [528])
	CALL memcpy(($1 + [17]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

void .FUNC _ZN8pandafun12apply_refundERKNS_6refundE (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [144])
	*([0] + [4]) = $10
	CALL require_auth((int_64)-6222124003696921904)
	CALL _ZN8pandafun10pausecheckEv()
	$4 = ($0 + [24])
	CALL eosio_assert(((int_64)*($4) == (int_64)1397703940), [1904])
	$1 = ($0 + [16])
	$2 = [0]
	if ( ((uint_64)((int_64)*($0 + [16]) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$6 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$2 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	
.LABEL $label$1
	CALL eosio_assert($2, [6352])
	$6 = (int_64)0
	CALL eosio_assert(((int_64)*($1) > (int_64)0), [6384])
	$9 = *($0)
	$5 = (int_64)59
	$4 = [1136]
	$7 = (int_64)0
	
.LOOP $label$6:
	if ( ((uint_64)$6 > (uint_64)(int_64)5) ){ goto $label$11 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$2 = ($2 + [165])
	goto $label$9 
	
.LABEL $label$11
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$10
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$8
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$7
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$6 }
	*($10 + [80]) = $7
	*($10 + [72]) = $9
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1216]
	$7 = (int_64)0
	
.LOOP $label$12:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$17 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$16 }
	$2 = ($2 + [165])
	goto $label$15 
	
.LABEL $label$17
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$15
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$14
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$13
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$12 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1232]
	$9 = (int_64)0
	
.LOOP $label$18:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$23 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$22 }
	$2 = ($2 + [165])
	goto $label$21 
	
.LABEL $label$23
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$22
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$21
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$20
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$19
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$9 = ((int_64)$8 | (int_64)$9)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$18 }
	*(($10 + [16])) = [0]
	*($10 + [8]) = (int_64)0
	$4 = CALL strlen([6432])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$24 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$27 }
	*($10 + [8]) = ($4 << [1])
	$2 = (($10 + [8]) | [1])
	if ( $4 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$3 = (($4 + [16]) & [-16])
	$2 = CALL $154($3)
	*($10 + [8]) = ($3 | [1])
	*($10 + [16]) = $2
	*($10 + [12]) = $4
	
.LABEL $label$26
	CALL memcpy($2, [6432], $4)
	
.LABEL $label$25
	*(($2 + $4)) = [0]
	*(($10 + [52])) = *(($1 + [12]))
	*(($10 + [48])) = *(($1 + [8]))
	*(($10 + [44])) = *(($1 + [4]))
	*($10 + [24]) = *($0)
	*($10 + [32]) = *(($0 + [8]))
	*($10 + [40]) = *($1)
	$4 = (($10 + [8]) + [8])
	*(($10 + [64])) = *($4)
	*($10 + [56]) = *($10 + [8])
	*($10 + [8]) = [0]
	*($10 + [12]) = [0]
	*($4) = [0]
	$4 = CALL $21(($10 + [88]), ($10 + [72]), $7, $9, ($10 + [24]))
	CALL $19(($10 + [128]), $4)
	$2 = *($10 + [128])
	CALL send_inline($2, (*($10 + [132]) - $2))
	$2 = *($10 + [128])
	if ( ($2 == 0) ){ goto $label$28 }
	*($10 + [132]) = $2
	CALL $155($2)
	
.LABEL $label$28
	$2 = *($4 + [28])
	if ( ($2 == 0) ){ goto $label$29 }
	*(($4 + [32])) = $2
	CALL $155($2)
	
.LABEL $label$29
	$2 = *($4 + [16])
	if ( ($2 == 0) ){ goto $label$30 }
	*(($4 + [20])) = $2
	CALL $155($2)
	
.LABEL $label$30
	if ( ((*(($10 + [56])) & [1]) == 0) ){ goto $label$31 }
	CALL $155(*(($10 + [64])))
	
.LABEL $label$31
	if ( ((*($10 + [8]) & [1]) == 0) ){ goto $label$32 }
	CALL $155(*(($10 + [16])))
	
.LABEL $label$32
	*([0] + [4]) = ($10 + [144])
	return (unreachable)
	
.LABEL $label$24
	CALL $156(($10 + [8]))
}

void .FUNC _ZN8pandafun16apply_buycandlesERKNS_10buycandlesE (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	CALL require_auth((int_64)-6222124003696921904)
	CALL _ZN8pandafun10pausecheckEv()
	CALL _ZN8pandafun10blackcheckEy(*($0))
	CALL eosio_assert(((int_64)*($0 + [8]) > (int_64)0), [6480])
	*(($5 + [40])) = [0]
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$1 = *($0)
	*($5 + [16]) = $1
	*($5 + [8]) = (int_64)-6222124003695979872
	$4 = CALL db_find_i64((int_64)-6222124003695979872, $1, (int_64)3904810955002871808, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	$4 = CALL $58(($5 + [8]), $4)
	CALL eosio_assert(((int_32)*($4 + [28]) == (int_32)($5 + [8])), [32])
	CALL eosio_assert([1], [272])
	CALL eosio_assert(((int_32)*($4 + [28]) == (int_32)($5 + [8])), [320])
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)CALL $fimport$14()), [368])
	$1 = *($4)
	CALL prints([6528])
	CALL printi(*($4 + [16]))
	CALL prints([6544])
	$2 = ($0 + [8])
	CALL printi(*($2))
	*($4 + [8 align=1]) = *($0 + [16])
	*($4 + [16 align=1]) = ((int_64)*($2) + (int_64)*($4 + [16 align=1]))
	CALL prints([6560])
	CALL printi(*($4 + [16]))
	CALL eosio_assert(((int_64)$1 == (int_64)*($4)), [432])
	*($5 + [88]) = (($5 + [48]) + [28])
	*($5 + [84]) = ($5 + [48])
	*($5 + [80]) = ($5 + [48])
	CALL $59(($5 + [80]), $4)
	CALL db_update_i64(*($4 + [32]), (int_64)-6222124003695979872, ($5 + [48]), [28])
	$4 = ($5 + [24])
	if ( (uint_64)($1 <= *($4)) ){ goto $label$3 }
	*($4) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	$2 = *($5 + [32])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)CALL $fimport$14()), [96])
	*(($4 = CALL $154([40])) + [28]) = ($5 + [8])
	*($4) = (int_64)0
	*($4 + [20 align=1]) = [0]
	*($4 + [24 align=1]) = [0]
	*($4 + [8 align=1]) = *($0 + [16])
	$0 = ($0 + [8])
	$1 = *($0)
	*($4 + [16 align=1]) = $1
	CALL prints([6576])
	CALL printi(*($0))
	CALL prints([6560])
	CALL printi((int_64)((int_64)$1 << (int_64)32) >> (int_64)32))
	*($5 + [88]) = (($5 + [48]) + [28])
	*($5 + [84]) = ($5 + [48])
	*($5 + [80]) = ($5 + [48])
	CALL $59(($5 + [80]), $4)
	$1 = *($4)
	$2 = CALL db_store_i64(*((($5 + [8]) + [8])), (int_64)3904810955002871808, (int_64)-6222124003695979872, $1, ($5 + [48]), [28])
	*($4 + [32]) = $2
	$0 = ($5 + [24])
	if ( (uint_64)($1 <= *($0)) ){ goto $label$5 }
	*($0) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($5 + [80]) = $4
	$1 = *($4)
	*($5 + [48]) = $1
	*($5 + [76]) = $2
	$0 = *((($5 + [8]) + [28]))
	if ( ((uint_32)$0 >= (uint_32)*(($5 + [40]))) ){ goto $label$7 }
	*($0 + [8]) = $1
	*($0 + [16]) = $2
	*($5 + [80]) = [0]
	*($0) = $4
	*(($5 + [36])) = ($0 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $69(($5 + [32]), ($5 + [80]), ($5 + [48]), ($5 + [76]))
	
.LABEL $label$6
	$4 = *($5 + [80])
	*($5 + [80]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $155($4)
	
.LABEL $label$3
	$2 = *($5 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = ($5 + [36])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$9 }
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $155($0)
	
.LABEL $label$11
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$10 }
	$4 = *(($5 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$4 = $2
	
.LABEL $label$8
	*($3) = $2
	CALL $155($4)
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [96])
}

void .FUNC $94 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [96]) == (int_32)$0), [2528])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [2576])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2640])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $155($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $155($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [100]))
}

int_32 .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [528])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [528])
	CALL memcpy(($1 + [88]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [528])
	CALL memcpy(($1 + [92]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC $96 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [100]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [3120])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-4994024801686257664)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [3056])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [3056])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $93(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC $97 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [88]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [92]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

void .FUNC _ZN8pandafun16apply_saveresultERKNS_10saveresultE (int_32 $0)
{
	int_64 $1
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [240])
	*([0] + [4]) = $14
	CALL require_auth((int_64)-6222124003696921904)
	CALL _ZN8pandafun10pausecheckEv()
	$4 = ($0 + [80])
	CALL eosio_assert(((int_64)*($4) == (int_64)1397703940), [1904])
	$7 = [0]
	$5 = [0]
	if ( ((uint_64)((int_64)*($0 + [72]) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$9 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [6192])
	CALL eosio_assert(((int_64)*(($0 + [72])) > (int_64)0), [6224])
	*(($14 + [216])) = [0]
	*($14 + [192]) = (int_64)-6222124003695979872
	*($14 + [184]) = (int_64)-6222124003695979872
	*($14 + [200]) = (int_64)-1
	*($14 + [208]) = (int_64)0
	*($14 + [132]) = $0
	*($14 + [128]) = ($14 + [184])
	*($14 + [144]) = (int_64)-6222124003695979872
	CALL eosio_assert(((int_64)CALL $fimport$14() == (int_64)-6222124003695979872), [96])
	*($14 + [84]) = ($14 + [128])
	*($14 + [80]) = ($14 + [184])
	*($14 + [88]) = ($14 + [144])
	*(($5 = CALL $154([108])) + [80]) = (int_64)1398362884
	*($5 + [72]) = (int_64)0
	CALL eosio_assert([1], [2352])
	$9 = (int_64)5462355
	
.LOOP $label$7:
	$4 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$6 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	
.LOOP $label$9:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$9 }
	
.LABEL $label$8
	$4 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	CALL eosio_assert($4, [2416])
	*($5 + [96]) = ($14 + [184])
	CALL $91(($14 + [80]), $5)
	*($14 + [224]) = $5
	$9 = *($5)
	*($14 + [80]) = $9
	$4 = *($5 + [100])
	*($14 + [64]) = $4
	$6 = ($14 + [212])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($14 + [216]))) ){ goto $label$11 }
	*($7 + [8]) = $9
	*($7 + [16]) = $4
	*($14 + [224]) = [0]
	*($7) = $5
	*($6) = ($7 + [24])
	goto $label$10 
	
.LABEL $label$11
	CALL $92(($14 + [208]), ($14 + [224]), ($14 + [80]), ($14 + [64]))
	
.LABEL $label$10
	$7 = *($14 + [224])
	*($14 + [224]) = [0]
	if ( ($7 == 0) ){ goto $label$12 }
	CALL $155($7)
	
.LABEL $label$12
	$9 = (int_64)0
	$8 = (int_64)$11 >> (int_64)63
	$7 = ($0 + [72])
	$11 = *($7)
	CALL __multi3(($14 + [48]), $11, $8), (int_64)0, (int_64)3)
	CALL __multi3(($14 + [16]), $11, $8, (int_64)3, (int_64)0)
	$11 = *((($14 + [48]) + [8]))
	CALL __multi3(($14 + [32]), $11, (int_64)$11 >> (int_64)63), (int_64)965, (int_64)0)
	$4 = ($0 + [80])
	$13 = *($4)
	$11 = *((($14 + [16]) + [8]))
	$8 = *($14 + [16])
	CALL eosio_assert(( (uint_64)($8 <= (int_64)4611686018427387904) ? ((int_64)$11 < (int_64)0) : (int_64)($11 == 0) ), [1536])
	CALL eosio_assert(( ((uint_64)$8 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$11 > (int_64)-1) : ((int_64)$11 == (int_64)-1) ), [1568])
	$11 = *((($14 + [32]) + [8]))
	$8 = *($14 + [32])
	CALL eosio_assert(( (uint_64)($8 <= (int_64)4611686018427387904) ? ((int_64)$11 < (int_64)0) : (int_64)($11 == 0) ), [1536])
	CALL eosio_assert(( ((uint_64)$8 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$11 > (int_64)-1) : ((int_64)$11 == (int_64)-1) ), [1568])
	CALL eosio_assert([1], [1600])
	CALL eosio_assert([1], [1616])
	$11 = *($7)
	CALL __multi3($14, $11, (int_64)$11 >> (int_64)63), (int_64)3, (int_64)0)
	$2 = *($4)
	$11 = *(($14 + [8]))
	$10 = *($14)
	CALL eosio_assert(( (uint_64)($10 <= (int_64)4611686018427387904) ? ((int_64)$11 < (int_64)0) : (int_64)($11 == 0) ), [1536])
	CALL eosio_assert(( ((uint_64)$10 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$11 > (int_64)-1) : ((int_64)$11 == (int_64)-1) ), [1568])
	CALL eosio_assert(((int_64)$13 == (int_64)$2), [1648])
	$1 = ((int_64)$8 / (int_64)1000)
	$3 = (int_64)
	CALL eosio_assert(((int_64)$3($10 - $1)) > (int_64)-4611686018427387904), [1696])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [1728])
	$12 = *($0 + [56])
	$8 = (int_64)59
	$7 = [1136]
	$10 = (int_64)0
	
.LOOP $label$13:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$18 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$4 = ($4 + [165])
	goto $label$16 
	
.LABEL $label$18
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$14
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$13 }
	*($14 + [136]) = $10
	*($14 + [128]) = $12
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [1216]
	$10 = (int_64)0
	
.LOOP $label$19:
	if ( ((uint_64)$9 > (uint_64)(int_64)10) ){ goto $label$24 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$4 = ($4 + [165])
	goto $label$22 
	
.LABEL $label$24
	$11 = (int_64)0
	if ( ((int_64)$9 == (int_64)11) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$21
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$20
	$7 = ($7 + [1])
	$8 = ((int_64)$8 + (int_64)-5)
	$10 = ((int_64)$11 | (int_64)$10)
	$9 = ((int_64)$9 + (int_64)1)
	if ( ((int_64)$9 != (int_64)13) ){ goto $label$19 }
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [1232]
	$12 = (int_64)0
	
.LOOP $label$25:
	if ( ((uint_64)$9 > (uint_64)(int_64)7) ){ goto $label$30 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$29 }
	$4 = ($4 + [165])
	goto $label$28 
	
.LABEL $label$30
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$29
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$28
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$27
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$26
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$12 = ((int_64)$11 | (int_64)$12)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$25 }
	*(($14 + [72])) = [0]
	*($14 + [64]) = (int_64)0
	$7 = CALL strlen([6272])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$32 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$35 }
	*($14 + [64]) = ($7 << [1])
	$4 = (($14 + [64]) | [1])
	if ( $7 ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$35
	$5 = (($7 + [16]) & [-16])
	$4 = CALL $154($5)
	*($14 + [64]) = ($5 | [1])
	*($14 + [72]) = $4
	*($14 + [68]) = $7
	
.LABEL $label$34
	CALL memcpy($4, [6272], $7)
	
.LABEL $label$33
	*(($4 + $7)) = [0]
	*(($14 + [104])) = $13
	*($14 + [88]) = *(($0 + [48]))
	$7 = ($14 + [72])
	*(($14 + [120])) = *($7)
	*($14 + [80]) = *(($0 + [56]))
	*($14 + [96]) = $1
	*($14 + [112]) = *($14 + [64])
	*($14 + [64]) = [0]
	*($14 + [68]) = [0]
	*($7) = [0]
	$7 = CALL $21(($14 + [144]), ($14 + [128]), $10, $12, ($14 + [80]))
	CALL $19(($14 + [224]), $7)
	$4 = *($14 + [224])
	CALL send_inline($4, (*($14 + [228]) - $4))
	$4 = *($14 + [224])
	if ( ($4 == 0) ){ goto $label$36 }
	*($14 + [228]) = $4
	CALL $155($4)
	
.LABEL $label$36
	$4 = *($7 + [28])
	if ( ($4 == 0) ){ goto $label$37 }
	*(($7 + [32])) = $4
	CALL $155($4)
	
.LABEL $label$37
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$38 }
	*(($7 + [20])) = $4
	CALL $155($4)
	
.LABEL $label$38
	if ( ((*(($14 + [112])) & [1]) == 0) ){ goto $label$39 }
	CALL $155(*(($14 + [120])))
	
.LABEL $label$39
	if ( ((*($14 + [64]) & [1]) == 0) ){ goto $label$40 }
	CALL $155(*(($14 + [72])))
	
.LABEL $label$40
	$12 = *(($0 + [56]))
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [1136]
	$10 = (int_64)0
	
.LOOP $label$41:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$46 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$45 }
	$4 = ($4 + [165])
	goto $label$44 
	
.LABEL $label$46
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$45
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$44
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$43
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$42
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$41 }
	*($14 + [136]) = $10
	*($14 + [128]) = $12
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [1216]
	$10 = (int_64)0
	
.LOOP $label$47:
	if ( ((uint_64)$9 > (uint_64)(int_64)10) ){ goto $label$52 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$51 }
	$4 = ($4 + [165])
	goto $label$50 
	
.LABEL $label$52
	$11 = (int_64)0
	if ( ((int_64)$9 == (int_64)11) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$51
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$50
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$49
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$48
	$7 = ($7 + [1])
	$8 = ((int_64)$8 + (int_64)-5)
	$10 = ((int_64)$11 | (int_64)$10)
	$9 = ((int_64)$9 + (int_64)1)
	if ( ((int_64)$9 != (int_64)13) ){ goto $label$47 }
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [1232]
	$12 = (int_64)0
	
.LOOP $label$53:
	if ( ((uint_64)$9 > (uint_64)(int_64)7) ){ goto $label$58 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$57 }
	$4 = ($4 + [165])
	goto $label$56 
	
.LABEL $label$58
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$57
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$56
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$55
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$54
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$12 = ((int_64)$11 | (int_64)$12)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$53 }
	$9 = (int_64)0
	$11 = (int_64)59
	$7 = [1248]
	$13 = (int_64)0
	
.LOOP $label$59:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$60 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$62 }
	$4 = ($4 + [165])
	goto $label$61 
	
.LABEL $label$62
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$61
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$60
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$13 = ((int_64)$8 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$59 }
	*(($14 + [72])) = [0]
	*($14 + [64]) = (int_64)0
	$7 = CALL strlen([6320])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$31 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$65 }
	*($14 + [64]) = ($7 << [1])
	$4 = (($14 + [64]) | [1])
	if ( $7 ){ goto $label$64 }
	goto $label$63 
	
.LABEL $label$65
	$5 = (($7 + [16]) & [-16])
	$4 = CALL $154($5)
	*($14 + [64]) = ($5 | [1])
	*($14 + [72]) = $4
	*($14 + [68]) = $7
	
.LABEL $label$64
	CALL memcpy($4, [6320], $7)
	
.LABEL $label$63
	*(($4 + $7)) = [0]
	*(($14 + [104])) = $2
	*(($14 + [116])) = *($14 + [68])
	*($14 + [88]) = $13
	$7 = ($14 + [72])
	*(($14 + [120])) = *($7)
	*($14 + [80]) = *(($0 + [56]))
	*($14 + [96]) = $3
	*($14 + [112]) = *($14 + [64])
	*($14 + [64]) = [0]
	*($14 + [68]) = [0]
	*($7) = [0]
	$7 = CALL $21(($14 + [144]), ($14 + [128]), $10, $12, ($14 + [80]))
	CALL $19(($14 + [224]), $7)
	$4 = *($14 + [224])
	CALL send_inline($4, (*($14 + [228]) - $4))
	$4 = *($14 + [224])
	if ( ($4 == 0) ){ goto $label$66 }
	*($14 + [228]) = $4
	CALL $155($4)
	
.LABEL $label$66
	$4 = *($7 + [28])
	if ( ($4 == 0) ){ goto $label$67 }
	*(($7 + [32])) = $4
	CALL $155($4)
	
.LABEL $label$67
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$68 }
	*(($7 + [20])) = $4
	CALL $155($4)
	
.LABEL $label$68
	if ( ((*(($14 + [112])) & [1]) == 0) ){ goto $label$69 }
	CALL $155(*(($14 + [120])))
	
.LABEL $label$69
	if ( ((*($14 + [64]) & [1]) == 0) ){ goto $label$70 }
	CALL $155(*(($14 + [72])))
	
.LABEL $label$70
	$9 = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$7 = CALL db_lowerbound_i64(*($14 + [184]), *(($14 + [192])), (int_64)-4994024801686257664, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$71 }
	$5 = ((CASTING uint_32)(uint_64 $9) + [-604800])
	$7 = CALL $93(($14 + [184]), $7)
	
.LOOP $label$72:
	if ( ((uint_32)*($7 + [92 align=1]) >= (uint_32)$5) ){ goto $label$71 }
	$4 = [0]
	$0 = ((int_32)$7 != (int_32)[0])
	CALL eosio_assert($0, [2448])
	CALL eosio_assert($0, [2496])
	$0 = CALL db_next_i64(*($7 + [100]), ($14 + [80]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$73 }
	$4 = CALL $93(($14 + [184]), $0)
	
.LABEL $label$73
	CALL $94(($14 + [184]), $7)
	$7 = $4
	if ( $4 ){ goto $label$72 }
	
.LABEL $label$71
	$0 = *($14 + [208])
	if ( ($0 == 0) ){ goto $label$74 }
	$5 = ($14 + [212])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$0) ){ goto $label$76 }
	
.LOOP $label$77:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$78 }
	CALL $155($4)
	
.LABEL $label$78
	if ( ((int_32)$0 != (int_32)$7) ){ goto $label$77 }
	$7 = *(($14 + [208]))
	goto $label$75 
	
.LABEL $label$76
	$7 = $0
	
.LABEL $label$75
	*($5) = $0
	CALL $155($7)
	
.LABEL $label$74
	*([0] + [4]) = ($14 + [240])
	return (unreachable)
	
.LABEL $label$32
	CALL $156(($14 + [64]))
	
.LABEL $label$31
	CALL $156(($14 + [64]))
	(unreachable)
}

void .FUNC $91 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$6 = *($4 + [16])
	if ( ((int_64)$6 != (int_64)-1) ){ goto $label$1 }
	$6 = (int_64)0
	$5 = CALL db_lowerbound_i64(*($4), *($4 + [8]), (int_64)-4994024801686257664, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	CALL $93($4, $5)
	*($7 + [4]) = [0]
	*($7) = $4
	$6 = *(*(CALL $96($7) + [4]))
	$6 = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [16])) = $6
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($6 <= (int_64)-2), [2992])
	*($1) = *(($4 + [16]))
	*($1 + [8 align=1]) = *(*($3 + [4]))
	*($1 + [16 align=1]) = *(*($3 + [4]) + [8])
	*($1 + [24 align=1]) = *(*($3 + [4]) + [16])
	*($1 + [32 align=1]) = *(*($3 + [4]) + [24])
	*($1 + [40 align=1]) = *(*($3 + [4]) + [32])
	*($1 + [48 align=1]) = *(*($3 + [4]) + [40])
	*($1 + [56 align=1]) = *(*($3 + [4]) + [48])
	*($1 + [64 align=1]) = *(*($3 + [4]) + [64])
	$4 = *($3 + [4])
	*($1 + [72 align=1]) = *($4 + [72 align=1])
	*(($1 + [80])) = *(($4 + [80]))
	*($1 + [88 align=1]) = *(*($3 + [4]) + [88])
	*($1 + [92 align=1]) = *(*($3 + [4]) + [92])
	$4 = $8
	$3 = ($4 + [-96])
	*([0] + [4]) = $3
	*($7 + [4]) = $3
	*($7) = $3
	*($7 + [8]) = $4
	CALL $97($7, $1)
	$6 = *($1)
	*($1 + [100]) = CALL db_store_i64(*($2 + [8]), (int_64)-4994024801686257664, *(*($0 + [8])), $6, $3, [96])
	if ( (uint_64)($6 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $92 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $154(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $159($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $155($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $155($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [496])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $154([108])) + [80]) = (int_64)1398362884
	*($4 + [72]) = (int_64)0
	CALL eosio_assert([1], [2352])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [2416])
	*($4 + [96]) = $0
	CALL $95(($8 + [32]), $4)
	*($4 + [100]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [100])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $92($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $155($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

int_32 .FUNC $138 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [528])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [528])
	CALL memcpy(($1 + [24]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [528])
	CALL memcpy(($1 + [28]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [528])
	CALL memcpy(($1 + [29]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

int_32 .FUNC $139 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [528])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $140(CALL $140($0, ($1 + [16])), ($1 + [96]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [176]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [528])
	CALL memcpy(($1 + [184]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

int_64 .FUNC $130 ()
{
	int_32 $0
	int_64 $1
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [16])
	$3 = $2
	*([0] + [4]) = $2
	$0 = CALL action_data_size()
	if ( ($0 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($0)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $0)
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [528])
	CALL memcpy(($3 + [8]), $2, [8])
	$1 = *($3 + [8])
	*([0] + [4]) = ($3 + [16])
	return $1
}

int_64 .FUNC $131 ()
{
	int_32 $0
	int_64 $1
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [16])
	$3 = $2
	*([0] + [4]) = $2
	$0 = CALL action_data_size()
	if ( ($0 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($0)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $0)
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [528])
	CALL memcpy(($3 + [8]), $2, [8])
	$1 = *($3 + [8])
	*([0] + [4]) = ($3 + [16])
	return $1
}

int_64 .FUNC $132 ()
{
	int_32 $0
	int_64 $1
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [16])
	$3 = $2
	*([0] + [4]) = $2
	$0 = CALL action_data_size()
	if ( ($0 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($0)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $0)
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [528])
	CALL memcpy(($3 + [8]), $2, [8])
	$1 = *($3 + [8])
	*([0] + [4]) = ($3 + [16])
	return $1
}

int_64 .FUNC $133 ()
{
	int_32 $0
	int_64 $1
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [16])
	$3 = $2
	*([0] + [4]) = $2
	$0 = CALL action_data_size()
	if ( ($0 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($0)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $0)
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [528])
	CALL memcpy(($3 + [8]), $2, [8])
	$1 = *($3 + [8])
	*([0] + [4]) = ($3 + [16])
	return $1
}

int_32 .FUNC $134 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $135($0, ($1 + [32]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [528])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $135 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $136($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $157($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $154($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $157($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $155($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $156($7)
	return (unreachable)
}

int_32 .FUNC $136 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [2704])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $20($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [528])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

int_32 .FUNC $137 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [528])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [528])
	CALL memcpy(($1 + [88]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [528])
	CALL memcpy(($1 + [92]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC __mo_lookup (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = *($0)
	$10 = ((int_32)$3 == (int_32)[-1794895138])
	$9 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	$4 = *($0 + [8])
	$5 = ( $4 ? $9 : $10 )
	if ( ((uint_32)$5 >= (uint_32)uint_32($1 >> [2])) ){ goto $label$4 }
	$12 = ($1 - ($5 << [2]))
	$11 = *($0 + [12])
	$6 = ( $11 ? ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24]))) : $10 )
	if ( ((uint_32)$6 >= (uint_32)$12) ){ goto $label$3 }
	$11 = *($0 + [16])
	$10 = ( $11 ? ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24]))) : $10 )
	if ( ((uint_32)$10 >= (uint_32)$12) ){ goto $label$2 }
	if ( ((($10 | $6) & [3]) == 0) ){ goto $label$1 }
	return [0]
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	return [0]
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	$12 = uint_32($6 >> [2])
	if ( ((int_32)$3 != (int_32)[-1794895138]) ){ goto $label$16 }
	$5 = uint_32($5 >> [1])
	$6 = ($5 << [1])
	$9 = ($0 + (($6 + $12) << [2]))
	$11 = *(($9 + [4]))
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$15 }
	$8 = *($9)
	if ( ((uint_32)$8 >= (uint_32)($1 - $11)) ){ goto $label$14 }
	$9 = $5
	$7 = [0]
	
.LOOP $label$17:
	if ( *(($0 + ($11 + $8))) ){ goto $label$9 }
	$11 = CALL strcmp($2, ($0 + $11))
	if ( ($11 == 0) ){ goto $label$11 }
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$7 }
	$13 = [0]
	$4 = ( $9 ? ($4 - $9) : $11 )
	$9 = uint_32($4 >> [1])
	$11 = ((int_32)$11 < (int_32)[0])
	$7 = ( $7 ? $5 : $11 )
	$5 = ($7 + $9)
	$6 = ($5 << [1])
	$8 = ($0 + (($6 + $12) << [2]))
	$11 = *(($8 + [4]))
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$10 }
	$8 = *($8)
	if ( ($8 <= ($1 - $11)) ){ goto $label$17 }
	goto $label$10 
	
.LABEL $label$16
	$8 = uint_32($9 >> [1])
	$6 = ($8 << [1])
	$11 = ($0 + (($6 + $12) << [2]))
	$4 = *(($11 + [4]))
	$4 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$13 }
	$11 = *($11)
	$11 = ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24])))
	if ( ((uint_32)$11 >= (uint_32)($1 - $4)) ){ goto $label$12 }
	$5 = $8
	$7 = [0]
	
.LOOP $label$18:
	if ( *(($0 + ($4 + $11))) ){ goto $label$8 }
	$4 = CALL strcmp($2, ($0 + $4))
	if ( ($4 == 0) ){ goto $label$11 }
	if ( ((int_32)$9 == (int_32)[1]) ){ goto $label$6 }
	$13 = [0]
	$9 = ( $5 ? ($9 - $5) : $4 )
	$5 = uint_32($9 >> [1])
	$4 = ((int_32)$4 < (int_32)[0])
	$7 = ( $7 ? $8 : $4 )
	$8 = ($7 + $5)
	$6 = ($8 << [1])
	$11 = ($0 + (($6 + $12) << [2]))
	$4 = *(($11 + [4]))
	$4 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$10 }
	$11 = *($11)
	$11 = ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24])))
	if ( ($11 <= ($1 - $4)) ){ goto $label$18 }
	goto $label$10 
	
.LABEL $label$15
	return [0]
	
.LABEL $label$14
	return [0]
	
.LABEL $label$13
	return [0]
	
.LABEL $label$12
	return [0]
	
.LABEL $label$11
	$9 = ((int_32)$3 == (int_32)[-1794895138])
	$10 = ($0 + (($6 + uint_32($10 >> [2])) << [2]))
	$4 = *(($10 + [4]))
	$11 = ( $4 ? ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24]))) : $9 )
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$5 }
	$13 = [0]
	$4 = *($10)
	$4 = ( $4 ? ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24]))) : $9 )
	if ( ((uint_32)$4 >= (uint_32)($1 - $11)) ){ goto $label$10 }
	return ( [0] ? ($0 + $11) : *(($0 + ($11 + $4))) )
	
.LABEL $label$10
	return $13
	
.LABEL $label$9
	return [0]
	
.LABEL $label$8
	return [0]
	
.LABEL $label$7
	return [0]
	
.LABEL $label$6
	return [0]
	
.LABEL $label$5
	return [0]
}

void .FUNC $129 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = *([0] + [4])
	$3 = $2
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [528])
	CALL memcpy($0, $2, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [528])
	CALL memcpy(($0 + [8]), ($2 + [8]), [8])
	*([0] + [4]) = $3
}

void .FUNC $128 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = *([0] + [4])
	$3 = $2
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [528])
	CALL memcpy($0, $2, [8])
	$1 = ($1 & [-8])
	CALL eosio_assert(((int_32)$1 != (int_32)[8]), [528])
	CALL memcpy(($0 + [8]), ($2 + [8]), [8])
	CALL eosio_assert(((int_32)$1 != (int_32)[16]), [528])
	CALL memcpy(($0 + [16]), ($2 + [16]), [8])
	*([0] + [4]) = $3
}

int_32 .FUNC $8 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [88]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [92]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

void .FUNC $9 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $154(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $159($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $155($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $155($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $123 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [16])
	$3 = $2
	*([0] + [4]) = $2
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $1)
	CALL $138($3, $0)
	*([0] + [4]) = ($3 + [16])
}

void .FUNC $122 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [16])
	$3 = $2
	*([0] + [4]) = $2
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $1)
	CALL $139($3, $0)
	*([0] + [4]) = ($3 + [16])
}

void .FUNC $121 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [16])
	$3 = $2
	*([0] + [4]) = $2
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $1)
	CALL $141($3, $0)
	*([0] + [4]) = ($3 + [16])
}

void .FUNC $120 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [16])
	$3 = $2
	*([0] + [4]) = $2
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $1)
	CALL $142($3, $0)
	*([0] + [4]) = ($3 + [16])
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

void .FUNC $126 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = *([0] + [4])
	$3 = $2
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [528])
	CALL memcpy($0, $2, [8])
	$1 = ($1 & [-8])
	CALL eosio_assert(((int_32)$1 != (int_32)[8]), [528])
	CALL memcpy(($0 + [8]), ($2 + [8]), [8])
	CALL eosio_assert(((int_32)$1 != (int_32)[16]), [528])
	CALL memcpy(($0 + [16]), ($2 + [16]), [8])
	*([0] + [4]) = $3
}

void .FUNC $125 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	*(($0 + [24])) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [2352])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	
.LABEL $label$3
	CALL eosio_assert($5, [2416])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	*($6 + [4]) = $2
	*($6) = $2
	*($6 + [8]) = ($2 + $1)
	CALL $134($6, $0)
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $124 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	*(($0 + [80])) = (int_64)1398362884
	*($0 + [72]) = (int_64)0
	CALL eosio_assert([1], [2352])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	
.LABEL $label$3
	CALL eosio_assert($5, [2416])
	*($6 + [4]) = $2
	*($6) = $2
	*($6 + [8]) = ($2 + $1)
	CALL $137($6, $0)
	*([0] + [4]) = ($6 + [16])
}

int_32 .FUNC $14 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [496])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $154([24])) + [12]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [528])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)$4 != (int_32)[8]), [528])
	CALL memcpy(($6 + [8]), ($7 + [8]), [1])
	*($6 + [16]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [16])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $15(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $155($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $15 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $154(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $159($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $155($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $155($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $16 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [528])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [528])
	CALL memcpy(($1 + [88]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [528])
	CALL memcpy(($1 + [92]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

void .FUNC _ZN8pandafun14apply_transferERKNS_8transferE (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_32 $20
	$20 = (*([0] + [4]) - [240])
	*([0] + [4]) = $20
	if ( ((int_64)*($0) == (int_64)-6222124003695979872) ){ goto $label$1 }
	if ( ((int_64)*($0 + [8]) != (int_64)-6222124003695979872) ){ goto $label$1 }
	$13 = ($0 + [24])
	CALL eosio_assert(((int_64)*($13) == (int_64)1397703940), [1904])
	$11 = ($0 + [16])
	$14 = [0]
	if ( ((uint_64)((int_64)*($0 + [16]) + (int_64)4611686018427387903) >= (uint_64)(int_64)9223372036854775807) ){ goto $label$2 }
	$12 = (uint_64)*($13) >> (uint_64)(int_64)8)
	$13 = [0]
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	
.LOOP $label$6:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$3 }
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	$14 = [1]
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$14 = [0]
	
.LABEL $label$2
	CALL eosio_assert($14, [656])
	CALL eosio_assert(((int_64)*($11) > (int_64)0), [688])
	$13 = ($0 + [32])
	$14 = CALL $158($13, [124], [0])
	if ( ((int_32)$14 == (int_32)[-1]) ){ goto $label$11 }
	$1 = ($14 + [1])
	$2 = CALL $158($13, [124], $1)
	if ( ((int_32)$2 == (int_32)[-1]) ){ goto $label$10 }
	if ( ((int_32)($2 - $14) != (int_32)[2]) ){ goto $label$9 }
	if ( (*($13) & [1]) ){ goto $label$8 }
	$14 = ($13 + [1])
	goto $label$7 
	
.LABEL $label$11
	CALL prints([720])
	goto $label$1 
	
.LABEL $label$10
	CALL prints([784])
	goto $label$1 
	
.LABEL $label$9
	CALL prints([848])
	goto $label$1 
	
.LABEL $label$8
	$14 = *(($0 + [40]))
	
.LABEL $label$7
	$3 = *(($14 + $1))
	$14 = ($3 + [-66])
	if ( ((uint_32)$14 > (uint_32)[18]) ){ goto $label$35 }
	if ( ((([1] << $14) & [279042]) == 0) ){ goto $label$38 }
	$14 = ($2 + [1])
	$1 = CALL $158($13, [124], $14)
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$37 }
	CALL $160(($20 + [224]), $13, $14, ($1 + ((int_32)$2 ^ (int_32)[-1])), $13)
	$13 = ($13 & [1])
	$13 = *($20 + [224])
	$2 = ( *($20 + [228]) ? uint_32($13 >> [1]) : $13 )
	if ( ((uint_32)($2 + [-1]) <= (uint_32)[8]) ){ goto $label$36 }
	CALL prints([960])
	goto $label$12 
	
.LABEL $label$38
	if ( $14 ){ goto $label$35 }
	$14 = ($2 + [1])
	$4 = CALL $158($13, [124], $14)
	$5 = ($4 + [1])
	$6 = CALL $158($13, [124], $5)
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$33 }
	if ( ((int_32)$6 == (int_32)[-1]) ){ goto $label$33 }
	CALL $160(($20 + [208]), $13, $14, ($4 + ((int_32)$2 ^ (int_32)[-1])), $13)
	$14 = ($14 & [1])
	$14 = *($20 + [208])
	$3 = ( *($20 + [212]) ? uint_32($14 >> [1]) : $14 )
	if ( ((uint_32)($3 + [-1]) <= (uint_32)[11]) ){ goto $label$31 }
	CALL prints([1344])
	goto $label$18 
	
.LABEL $label$37
	CALL prints([896])
	goto $label$1 
	
.LABEL $label$36
	$1 = ( *($20 + [232]) ? (($20 + [224]) | [1]) : $13 )
	$13 = [0]
	$12 = (int_64)0
	
.LOOP $label$39:
	$14 = *(($1 + $13))
	if ( ((uint_32)(($14 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$34 }
	$12 = ((int_64)((int_64)((int_64)$12 * (int_64)10) + (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)) + (int_64)-48)
	$13 = ($13 + [1])
	if ( ($13 <= $2) ){ goto $label$39 }
	$17 = (int_64)2000
	$13 = ($3 + [-67])
	if ( ((uint_32)$13 > (uint_32)[17]) ){ goto $label$40 }
	if ( ((([1] << $13) & [131329]) == 0) ){ goto $label$40 }
	$17 = ( (int_64)200 ? (int_64)250 : ((int_64)$12 > (int_64)9) )
	
.LABEL $label$40
	$17 = ((int_64)$17 * (int_64)$12)
	if ( ((int_64)*($11) >= (int_64)$17) ){ goto $label$32 }
	CALL prints([1056])
	CALL printi($17)
	goto $label$12 
	
.LABEL $label$35
	CALL prints([1856])
	goto $label$1 
	
.LABEL $label$34
	CALL prints([1008])
	goto $label$12 
	
.LABEL $label$33
	CALL prints([1296])
	goto $label$1 
	
.LABEL $label$32
	$13 = ($3 + [-67])
	if ( ((uint_32)$13 > (uint_32)[17]) ){ goto $label$23 }
	goto $label$41 
	
.LABEL $label$41
	*($20 + [40]) = $12
	$12 = (int_64)0
	*($20 + [48]) = (int_64)0
	*($20 + [32]) = *($0)
	$14 = ($20 + [48])
	$2 = ($20 + [40])
	$15 = (int_64)59
	$13 = [1136]
	$16 = (int_64)0
	
.LOOP $label$42:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$47 }
	$0 = *($13)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$46 }
	$0 = ($0 + [165])
	goto $label$45 
	
.LABEL $label$47
	$17 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$46
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$45
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$44
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$43
	$13 = ($13 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$16 = ((int_64)$17 | (int_64)$16)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$42 }
	$12 = (int_64)0
	$15 = (int_64)59
	$13 = [1168]
	$18 = (int_64)0
	
.LOOP $label$48:
	if ( ((uint_64)$12 > (uint_64)(int_64)9) ){ goto $label$53 }
	$0 = *($13)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$52 }
	$0 = ($0 + [165])
	goto $label$51 
	
.LABEL $label$53
	$17 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$52
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$51
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$50
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$49
	$13 = ($13 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$18 = ((int_64)$17 | (int_64)$18)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$48 }
	*(($0 = (($20 + [136]) + [24]))) = [0]
	*($20 + [144]) = $18
	*($20 + [136]) = (int_64)-6222124003695979872
	*($20 + [152]) = (int_64)0
	*(($13 = CALL $154([16]))) = (int_64)-6222124003696921904
	*($13 + [8]) = $16
	*(($1 = ($20 + [168]))) = [0]
	$3 = ($13 + [16])
	*($0) = $3
	*(($20 + [156])) = $3
	*($20 + [152]) = $13
	*($20 + [164]) = [0]
	*(($20 + [172])) = [0]
	CALL $20(($20 + [164]), [24])
	$13 = *($20 + [164])
	$0 = (*($1) - $13)
	CALL eosio_assert(((int_32)$0 > (int_32)[7]), [176])
	CALL memcpy($13, ($20 + [32]), [8])
	CALL eosio_assert(((int_32)($0 + [-8]) > (int_32)[7]), [176])
	CALL memcpy(($13 + [8]), $2, [8])
	CALL eosio_assert(((int_32)($0 + [-16]) > (int_32)[7]), [176])
	CALL memcpy(($13 + [16]), $14, [8])
	CALL $19(($20 + [96]), ($20 + [136]))
	$13 = *($20 + [96])
	CALL send_inline($13, (*($20 + [100]) - $13))
	$13 = *($20 + [96])
	if ( ($13 == 0) ){ goto $label$54 }
	*($20 + [100]) = $13
	CALL $155($13)
	
.LABEL $label$54
	$13 = *($20 + [164])
	if ( ($13 == 0) ){ goto $label$55 }
	*(($20 + [168])) = $13
	CALL $155($13)
	
.LABEL $label$55
	$13 = *($20 + [152])
	if ( ($13 == 0) ){ goto $label$23 }
	*(($20 + [156])) = $13
	CALL $155($13)
	goto $label$23 
	
.LABEL $label$31
	$14 = ( *($20 + [216]) ? (($20 + [208]) | [1]) : $14 )
	$2 = [0]
	
.LOOP $label$57:
	$1 = *(($14 + $2))
	if ( ((int_32)$1 < (int_32)[48]) ){ goto $label$59 }
	if ( ((int_32)$1 < (int_32)[54]) ){ goto $label$58 }
	if ( ((($1 + [-97]) & [255]) <= [26]) ){ goto $label$58 }
	goto $label$56 
	
.LABEL $label$59
	if ( ((int_32)$1 != (int_32)[46]) ){ goto $label$56 }
	
.LABEL $label$58
	$2 = ($2 + [1])
	if ( ($2 <= $3) ){ goto $label$57 }
	$2 = [-1]
	
.LOOP $label$60:
	$1 = ($14 + $2)
	$3 = ($2 + [1])
	$2 = $3
	if ( *(($1 + [1])) ){ goto $label$60 }
	$18 = (CASTING uint_64)(uint_32 $3)
	$12 = (int_64)0
	$17 = (int_64)59
	$16 = (int_64)0
	
.LOOP $label$61:
	$15 = (int_64)0
	if ( ((uint_64)$12 >= (uint_64)$18) ){ goto $label$62 }
	$2 = *($14)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$64 }
	$2 = ($2 + [165])
	goto $label$63 
	
.LABEL $label$64
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$63
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$62
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$66 }
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	goto $label$65 
	
.LABEL $label$66
	$15 = ((int_64)$15 & (int_64)15)
	
.LABEL $label$65
	$14 = ($14 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$16 = ((int_64)$15 | (int_64)$16)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$61 }
	CALL $160(($20 + [192]), $13, $5, ($6 + ((int_32)$4 ^ (int_32)[-1])), $13)
	$13 = ($13 & [1])
	$13 = *($20 + [192])
	$2 = ( *($20 + [196]) ? uint_32($13 >> [1]) : $13 )
	if ( ((uint_32)($2 + [-1]) <= (uint_32)[17]) ){ goto $label$27 }
	CALL prints([1440])
	goto $label$19 
	
.LABEL $label$56
	CALL prints([1392])
	goto $label$18 
	
.LABEL $label$30
	*($20 + [40]) = $12
	$12 = (int_64)0
	*($20 + [48]) = (int_64)0
	*($20 + [32]) = *($0)
	$14 = ($20 + [48])
	$2 = ($20 + [40])
	$15 = (int_64)59
	$13 = [1136]
	$16 = (int_64)0
	
.LOOP $label$67:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$72 }
	$0 = *($13)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$71 }
	$0 = ($0 + [165])
	goto $label$70 
	
.LABEL $label$72
	$17 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$69 }
	goto $label$68 
	
.LABEL $label$71
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$70
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$69
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$68
	$13 = ($13 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$16 = ((int_64)$17 | (int_64)$16)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$67 }
	$12 = (int_64)0
	$15 = (int_64)59
	$13 = [1184]
	$18 = (int_64)0
	
.LOOP $label$73:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$78 }
	$0 = *($13)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$77 }
	$0 = ($0 + [165])
	goto $label$76 
	
.LABEL $label$78
	$17 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$75 }
	goto $label$74 
	
.LABEL $label$77
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$76
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$75
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$74
	$13 = ($13 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$18 = ((int_64)$17 | (int_64)$18)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$73 }
	*(($0 = (($20 + [136]) + [24]))) = [0]
	*($20 + [144]) = $18
	*($20 + [136]) = (int_64)-6222124003695979872
	*($20 + [152]) = (int_64)0
	*(($13 = CALL $154([16]))) = (int_64)-6222124003696921904
	*($13 + [8]) = $16
	*(($1 = ($20 + [168]))) = [0]
	$3 = ($13 + [16])
	*($0) = $3
	*(($20 + [156])) = $3
	*($20 + [152]) = $13
	*($20 + [164]) = [0]
	*(($20 + [172])) = [0]
	CALL $20(($20 + [164]), [24])
	$13 = *($20 + [164])
	$0 = (*($1) - $13)
	CALL eosio_assert(((int_32)$0 > (int_32)[7]), [176])
	CALL memcpy($13, ($20 + [32]), [8])
	CALL eosio_assert(((int_32)($0 + [-8]) > (int_32)[7]), [176])
	CALL memcpy(($13 + [8]), $2, [8])
	CALL eosio_assert(((int_32)($0 + [-16]) > (int_32)[7]), [176])
	CALL memcpy(($13 + [16]), $14, [8])
	CALL $19(($20 + [96]), ($20 + [136]))
	$13 = *($20 + [96])
	CALL send_inline($13, (*($20 + [100]) - $13))
	$13 = *($20 + [96])
	if ( ($13 == 0) ){ goto $label$79 }
	*($20 + [100]) = $13
	CALL $155($13)
	
.LABEL $label$79
	$13 = *($20 + [164])
	if ( ($13 == 0) ){ goto $label$80 }
	*(($20 + [168])) = $13
	CALL $155($13)
	
.LABEL $label$80
	$13 = *($20 + [152])
	if ( ($13 == 0) ){ goto $label$23 }
	*(($20 + [156])) = $13
	CALL $155($13)
	goto $label$23 
	
.LABEL $label$29
	*(($20 + [52])) = [0]
	*(($20 + [48])) = [0]
	*($20 + [40]) = $12
	*($20 + [44]) = [0]
	*($20 + [32]) = *($0)
	$0 = ($20 + [44])
	$13 = CALL strlen([1104])
	if ( ((uint_32)$13 >= (uint_32)[-16]) ){ goto $label$16 }
	if ( ((uint_32)$13 >= (uint_32)[11]) ){ goto $label$26 }
	*(($20 + [44])) = ($13 << [1])
	$0 = ($0 + [1])
	if ( $13 ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$28
	*($20 + [40]) = $12
	$12 = (int_64)0
	*($20 + [48]) = (int_64)0
	*($20 + [32]) = *($0)
	$14 = ($20 + [48])
	$2 = ($20 + [40])
	$15 = (int_64)59
	$13 = [1136]
	$16 = (int_64)0
	
.LOOP $label$81:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$86 }
	$0 = *($13)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$85 }
	$0 = ($0 + [165])
	goto $label$84 
	
.LABEL $label$86
	$17 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$83 }
	goto $label$82 
	
.LABEL $label$85
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$84
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$83
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$82
	$13 = ($13 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$16 = ((int_64)$17 | (int_64)$16)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$81 }
	$12 = (int_64)0
	$15 = (int_64)59
	$13 = [1200]
	$18 = (int_64)0
	
.LOOP $label$87:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$92 }
	$0 = *($13)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$91 }
	$0 = ($0 + [165])
	goto $label$90 
	
.LABEL $label$92
	$17 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$89 }
	goto $label$88 
	
.LABEL $label$91
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$90
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$89
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$88
	$13 = ($13 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$18 = ((int_64)$17 | (int_64)$18)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$87 }
	*(($0 = (($20 + [136]) + [24]))) = [0]
	*($20 + [144]) = $18
	*($20 + [136]) = (int_64)-6222124003695979872
	*($20 + [152]) = (int_64)0
	*(($13 = CALL $154([16]))) = (int_64)-6222124003696921904
	*($13 + [8]) = $16
	*(($1 = ($20 + [168]))) = [0]
	$3 = ($13 + [16])
	*($0) = $3
	*(($20 + [156])) = $3
	*($20 + [152]) = $13
	*($20 + [164]) = [0]
	*(($20 + [172])) = [0]
	CALL $20(($20 + [164]), [24])
	$13 = *($20 + [164])
	$0 = (*($1) - $13)
	CALL eosio_assert(((int_32)$0 > (int_32)[7]), [176])
	CALL memcpy($13, ($20 + [32]), [8])
	CALL eosio_assert(((int_32)($0 + [-8]) > (int_32)[7]), [176])
	CALL memcpy(($13 + [8]), $2, [8])
	CALL eosio_assert(((int_32)($0 + [-16]) > (int_32)[7]), [176])
	CALL memcpy(($13 + [16]), $14, [8])
	CALL $19(($20 + [96]), ($20 + [136]))
	$13 = *($20 + [96])
	CALL send_inline($13, (*($20 + [100]) - $13))
	$13 = *($20 + [96])
	if ( ($13 == 0) ){ goto $label$93 }
	*($20 + [100]) = $13
	CALL $155($13)
	
.LABEL $label$93
	$13 = *($20 + [164])
	if ( ($13 == 0) ){ goto $label$94 }
	*(($20 + [168])) = $13
	CALL $155($13)
	
.LABEL $label$94
	$13 = *($20 + [152])
	if ( ($13 == 0) ){ goto $label$23 }
	*(($20 + [156])) = $13
	CALL $155($13)
	goto $label$23 
	
.LABEL $label$27
	$1 = ( *($20 + [200]) ? (($20 + [192]) | [1]) : $13 )
	$12 = (int_64)0
	$13 = [0]
	
.LOOP $label$95:
	$14 = *(($1 + $13))
	if ( ((uint_32)(($14 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$19 }
	$12 = ((int_64)((int_64)((int_64)$12 * (int_64)10) + (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)) + (int_64)-48)
	$13 = ($13 + [1])
	if ( ($13 <= $2) ){ goto $label$95 }
	*(($20 + [172])) = *(($11 + [12]))
	*(($20 + [168])) = *(($11 + [8]))
	*(($20 + [164])) = *(($11 + [4]))
	*($20 + [136]) = $16
	*($20 + [152]) = $12
	*($20 + [144]) = *($0)
	*($20 + [160]) = *($11)
	*(($20 + [184])) = [0]
	*($20 + [176]) = (int_64)0
	$14 = ($20 + [176])
	$13 = CALL strlen([1472])
	if ( ((uint_32)$13 >= (uint_32)[-16]) ){ goto $label$15 }
	if ( ((uint_32)$13 >= (uint_32)[11]) ){ goto $label$22 }
	*(($20 + [176])) = ($13 << [1])
	$14 = ($14 + [1])
	if ( $13 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$26
	$14 = (($13 + [16]) & [-16])
	$0 = CALL $154($14)
	*(($20 + [44])) = ($14 | [1])
	*(($20 + [52])) = $0
	*((($20 + [32]) + [16])) = $13
	
.LABEL $label$25
	CALL memcpy($0, [1104], $13)
	
.LABEL $label$24
	*(($0 + $13)) = [0]
	$12 = (int_64)0
	$15 = (int_64)59
	$13 = [1136]
	$16 = (int_64)0
	
.LOOP $label$96:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$101 }
	$0 = *($13)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$100 }
	$0 = ($0 + [165])
	goto $label$99 
	
.LABEL $label$101
	$17 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$98 }
	goto $label$97 
	
.LABEL $label$100
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$99
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$98
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$97
	$13 = ($13 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$16 = ((int_64)$17 | (int_64)$16)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$96 }
	*($20 + [104]) = $16
	*($20 + [96]) = (int_64)-6222124003696921904
	$12 = (int_64)0
	$15 = (int_64)59
	$13 = [1152]
	$16 = (int_64)0
	
.LOOP $label$102:
	if ( ((uint_64)$12 > (uint_64)(int_64)8) ){ goto $label$107 }
	$0 = *($13)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$106 }
	$0 = ($0 + [165])
	goto $label$105 
	
.LABEL $label$107
	$17 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$104 }
	goto $label$103 
	
.LABEL $label$106
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$105
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$104
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$103
	$13 = ($13 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$16 = ((int_64)$17 | (int_64)$16)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$102 }
	$13 = CALL $18(($20 + [136]), ($20 + [96]), (int_64)-6222124003695979872, $16, ($20 + [32]))
	CALL $19(($20 + [80]), $13)
	$0 = *($20 + [80])
	CALL send_inline($0, (*($20 + [84]) - $0))
	$0 = *($20 + [80])
	if ( ($0 == 0) ){ goto $label$108 }
	*($20 + [84]) = $0
	CALL $155($0)
	
.LABEL $label$108
	$0 = *($13 + [28])
	if ( ($0 == 0) ){ goto $label$109 }
	*(($13 + [32])) = $0
	CALL $155($0)
	
.LABEL $label$109
	$0 = *($13 + [16])
	if ( ($0 == 0) ){ goto $label$110 }
	*(($13 + [20])) = $0
	CALL $155($0)
	
.LABEL $label$110
	if ( ((*(($20 + [44])) & [1]) == 0) ){ goto $label$23 }
	CALL $155(*(($20 + [52])))
	
.LABEL $label$23
	$12 = (int_64)0
	$15 = (int_64)59
	$13 = [1136]
	$16 = (int_64)0
	
.LOOP $label$111:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$116 }
	$0 = *($13)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$115 }
	$0 = ($0 + [165])
	goto $label$114 
	
.LABEL $label$116
	$17 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$113 }
	goto $label$112 
	
.LABEL $label$115
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$114
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$113
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$112
	$13 = ($13 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$16 = ((int_64)$17 | (int_64)$16)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$111 }
	*($20 + [104]) = $16
	*($20 + [96]) = (int_64)-6222124003695979872
	$12 = (int_64)0
	$15 = (int_64)59
	$13 = [1216]
	$16 = (int_64)0
	
.LOOP $label$117:
	if ( ((uint_64)$12 > (uint_64)(int_64)10) ){ goto $label$122 }
	$0 = *($13)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$121 }
	$0 = ($0 + [165])
	goto $label$120 
	
.LABEL $label$122
	$17 = (int_64)0
	if ( ((int_64)$12 == (int_64)11) ){ goto $label$119 }
	goto $label$118 
	
.LABEL $label$121
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$120
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$119
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$118
	$13 = ($13 + [1])
	$15 = ((int_64)$15 + (int_64)-5)
	$16 = ((int_64)$17 | (int_64)$16)
	$12 = ((int_64)$12 + (int_64)1)
	if ( ((int_64)$12 != (int_64)13) ){ goto $label$117 }
	$12 = (int_64)0
	$15 = (int_64)59
	$13 = [1232]
	$18 = (int_64)0
	
.LOOP $label$123:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$128 }
	$0 = *($13)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$127 }
	$0 = ($0 + [165])
	goto $label$126 
	
.LABEL $label$128
	$17 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$125 }
	goto $label$124 
	
.LABEL $label$127
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$126
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$125
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$124
	$13 = ($13 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$18 = ((int_64)$17 | (int_64)$18)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$123 }
	$12 = (int_64)0
	$17 = (int_64)59
	$13 = [1248]
	$19 = (int_64)0
	
.LOOP $label$129:
	$15 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$130 }
	$0 = *($13)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$132 }
	$0 = ($0 + [165])
	goto $label$131 
	
.LABEL $label$132
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$131
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($0 & [31])) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$130
	$13 = ($13 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$19 = ((int_64)$15 | (int_64)$19)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$129 }
	*(($20 + [216])) = [0]
	*($20 + [208]) = (int_64)0
	$13 = CALL strlen([1264])
	if ( ((uint_32)$13 >= (uint_32)[-16]) ){ goto $label$17 }
	if ( ((uint_32)$13 >= (uint_32)[11]) ){ goto $label$135 }
	*($20 + [208]) = ($13 << [1])
	$0 = (($20 + [208]) | [1])
	if ( $13 ){ goto $label$134 }
	goto $label$133 
	
.LABEL $label$135
	$14 = (($13 + [16]) & [-16])
	$0 = CALL $154($14)
	*($20 + [208]) = ($14 | [1])
	*($20 + [216]) = $0
	*($20 + [212]) = $13
	
.LABEL $label$134
	CALL memcpy($0, [1264], $13)
	
.LABEL $label$133
	*(($0 + $13)) = [0]
	*(($20 + [164])) = *(($11 + [12]))
	*(($20 + [160])) = *(($11 + [8]))
	*(($20 + [156])) = *(($11 + [4]))
	*($20 + [144]) = $19
	*($20 + [136]) = (int_64)-6222124003695979872
	*($20 + [152]) = *($11)
	$13 = (($20 + [208]) + [8])
	*(($20 + [176])) = *($13)
	*($20 + [168]) = *($20 + [208])
	*($20 + [208]) = [0]
	*($20 + [212]) = [0]
	*($13) = [0]
	$13 = CALL $21(($20 + [32]), ($20 + [96]), $16, $18, ($20 + [136]))
	CALL $19(($20 + [80]), $13)
	$0 = *($20 + [80])
	CALL send_inline($0, (*($20 + [84]) - $0))
	$0 = *($20 + [80])
	if ( ($0 == 0) ){ goto $label$136 }
	*($20 + [84]) = $0
	CALL $155($0)
	
.LABEL $label$136
	$0 = *($13 + [28])
	if ( ($0 == 0) ){ goto $label$137 }
	*(($13 + [32])) = $0
	CALL $155($0)
	
.LABEL $label$137
	$0 = *($13 + [16])
	if ( ($0 == 0) ){ goto $label$138 }
	*(($13 + [20])) = $0
	CALL $155($0)
	
.LABEL $label$138
	if ( ((*(($20 + [168])) & [1]) == 0) ){ goto $label$139 }
	CALL $155(*(($20 + [176])))
	
.LABEL $label$139
	if ( ((*($20 + [208]) & [1]) == 0) ){ goto $label$12 }
	CALL $155(*(($20 + [216])))
	goto $label$12 
	
.LABEL $label$22
	$11 = (($13 + [16]) & [-16])
	$14 = CALL $154($11)
	*(($20 + [176])) = ($11 | [1])
	*(($20 + [184])) = $14
	*(($20 + [180])) = $13
	
.LABEL $label$21
	CALL memcpy($14, [1472], $13)
	
.LABEL $label$20
	*(($14 + $13)) = [0]
	$12 = (int_64)0
	$15 = (int_64)59
	$13 = [1136]
	$18 = (int_64)0
	
.LOOP $label$140:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$145 }
	$14 = *($13)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$144 }
	$14 = ($14 + [165])
	goto $label$143 
	
.LABEL $label$145
	$17 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$142 }
	goto $label$141 
	
.LABEL $label$144
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$143
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)
	
.LABEL $label$142
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$141
	$13 = ($13 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$18 = ((int_64)$17 | (int_64)$18)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$140 }
	$12 = (int_64)0
	$15 = (int_64)59
	$13 = [1520]
	$19 = (int_64)0
	
.LOOP $label$146:
	if ( ((uint_64)$12 > (uint_64)(int_64)2) ){ goto $label$151 }
	$14 = *($13)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$150 }
	$14 = ($14 + [165])
	goto $label$149 
	
.LABEL $label$151
	$17 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$148 }
	goto $label$147 
	
.LABEL $label$150
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$149
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $14) << (int_64)56) >> (int_64)56)
	
.LABEL $label$148
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$147
	$13 = ($13 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$19 = ((int_64)$17 | (int_64)$19)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$146 }
	*(($14 = ($20 + [56]))) = [0]
	*($20 + [40]) = $19
	*($20 + [32]) = (int_64)-6222124003695979872
	*($20 + [48]) = (int_64)0
	*(($13 = CALL $154([16]))) = (int_64)-6222124003696921904
	*($13 + [8]) = $18
	*(($20 + [64])) = [0]
	$11 = ($13 + [16])
	*($14) = $11
	*(($20 + [52])) = $11
	*($20 + [48]) = $13
	*($20 + [60]) = [0]
	*(($20 + [68])) = [0]
	$13 = *((($20 + [136]) + [40]))
	$14 = ( *(($20 + [180])) ? uint_32($13 >> [1]) : ($13 & [1]) )
	$13 = ($14 + [40])
	$12 = (CASTING uint_64)(uint_32 $14)
	$14 = ($20 + [60])
	
.LOOP $label$152:
	$13 = ($13 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$152 }
	if ( ($13 == 0) ){ goto $label$154 }
	CALL $20($14, $13)
	$14 = *(($20 + [64]))
	$13 = *(($20 + [60]))
	goto $label$153 
	
.LABEL $label$154
	$14 = [0]
	$13 = [0]
	
.LABEL $label$153
	*($20 + [100]) = $13
	*($20 + [96]) = $13
	*($20 + [104]) = $14
	CALL $22(($20 + [96]), ($20 + [136]))
	CALL $19(($20 + [96]), ($20 + [32]))
	$13 = *($20 + [96])
	CALL send_inline($13, (*($20 + [100]) - $13))
	$13 = *($20 + [96])
	if ( ($13 == 0) ){ goto $label$155 }
	*($20 + [100]) = $13
	CALL $155($13)
	
.LABEL $label$155
	$13 = *($20 + [60])
	if ( ($13 == 0) ){ goto $label$156 }
	*(($20 + [64])) = $13
	CALL $155($13)
	
.LABEL $label$156
	$13 = *($20 + [48])
	if ( ($13 == 0) ){ goto $label$157 }
	*(($20 + [52])) = $13
	CALL $155($13)
	
.LABEL $label$157
	$12 = (int_64)0
	$17 = *($0 + [16])
	CALL __multi3($20, $17, (int_64)$17 >> (int_64)63), (int_64)95, (int_64)0)
	$13 = ($0 + [24])
	$7 = *($13)
	$17 = *(($20 + [8]))
	$15 = *($20)
	CALL eosio_assert(( (uint_64)($15 <= (int_64)4611686018427387904) ? ((int_64)$17 < (int_64)0) : (int_64)($17 == 0) ), [1536])
	CALL eosio_assert(( ((uint_64)$15 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$17 > (int_64)-1) : ((int_64)$17 == (int_64)-1) ), [1568])
	CALL eosio_assert([1], [1600])
	CALL eosio_assert([1], [1616])
	$17 = *($0 + [16])
	$9 = *($13)
	CALL eosio_assert(((int_64)$7 == (int_64)$9), [1648])
	$8 = ((int_64)$15 / (int_64)100)
	$10 = (int_64)
	CALL eosio_assert(((int_64)$10($17 - $8)) > (int_64)-4611686018427387904), [1696])
	CALL eosio_assert(((int_64)$10 < (int_64)4611686018427387904), [1728])
	$15 = (int_64)59
	$13 = [1136]
	$18 = (int_64)0
	
.LOOP $label$158:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$163 }
	$0 = *($13)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$162 }
	$0 = ($0 + [165])
	goto $label$161 
	
.LABEL $label$163
	$17 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$160 }
	goto $label$159 
	
.LABEL $label$162
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$161
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$160
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$159
	$13 = ($13 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$18 = ((int_64)$17 | (int_64)$18)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$158 }
	*($20 + [88]) = $18
	*($20 + [80]) = (int_64)-6222124003695979872
	$12 = (int_64)0
	$15 = (int_64)59
	$13 = [1216]
	$18 = (int_64)0
	
.LOOP $label$164:
	if ( ((uint_64)$12 > (uint_64)(int_64)10) ){ goto $label$169 }
	$0 = *($13)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$168 }
	$0 = ($0 + [165])
	goto $label$167 
	
.LABEL $label$169
	$17 = (int_64)0
	if ( ((int_64)$12 == (int_64)11) ){ goto $label$166 }
	goto $label$165 
	
.LABEL $label$168
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$167
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$166
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$165
	$13 = ($13 + [1])
	$15 = ((int_64)$15 + (int_64)-5)
	$18 = ((int_64)$17 | (int_64)$18)
	$12 = ((int_64)$12 + (int_64)1)
	if ( ((int_64)$12 != (int_64)13) ){ goto $label$164 }
	$12 = (int_64)0
	$15 = (int_64)59
	$13 = [1232]
	$19 = (int_64)0
	
.LOOP $label$170:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$175 }
	$0 = *($13)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$174 }
	$0 = ($0 + [165])
	goto $label$173 
	
.LABEL $label$175
	$17 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$172 }
	goto $label$171 
	
.LABEL $label$174
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$173
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$172
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$171
	$13 = ($13 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$19 = ((int_64)$17 | (int_64)$19)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$170 }
	*(($20 + [24])) = [0]
	*($20 + [16]) = (int_64)0
	$13 = CALL strlen([1760])
	if ( ((uint_32)$13 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$13 >= (uint_32)[11]) ){ goto $label$178 }
	*($20 + [16]) = ($13 << [1])
	$0 = (($20 + [16]) | [1])
	if ( $13 ){ goto $label$177 }
	goto $label$176 
	
.LABEL $label$178
	$14 = (($13 + [16]) & [-16])
	$0 = CALL $154($14)
	*($20 + [16]) = ($14 | [1])
	*($20 + [24]) = $0
	*($20 + [20]) = $13
	
.LABEL $label$177
	CALL memcpy($0, [1760], $13)
	
.LABEL $label$176
	*(($0 + $13)) = [0]
	*(($20 + [56])) = $7
	*(($20 + [68])) = *($20 + [20])
	*($20 + [40]) = $16
	$13 = ($20 + [24])
	*(($20 + [72])) = *($13)
	*($20 + [32]) = (int_64)-6222124003695979872
	*($20 + [48]) = $8
	*($20 + [64]) = *($20 + [16])
	*($20 + [16]) = [0]
	*($20 + [20]) = [0]
	*($13) = [0]
	$13 = CALL $21(($20 + [96]), ($20 + [80]), $18, $19, ($20 + [32]))
	CALL $19(($20 + [224]), $13)
	$0 = *($20 + [224])
	CALL send_inline($0, (*($20 + [228]) - $0))
	$0 = *($20 + [224])
	if ( ($0 == 0) ){ goto $label$179 }
	*($20 + [228]) = $0
	CALL $155($0)
	
.LABEL $label$179
	$0 = *($13 + [28])
	if ( ($0 == 0) ){ goto $label$180 }
	*(($13 + [32])) = $0
	CALL $155($0)
	
.LABEL $label$180
	$0 = *($13 + [16])
	if ( ($0 == 0) ){ goto $label$181 }
	*(($13 + [20])) = $0
	CALL $155($0)
	
.LABEL $label$181
	if ( ((*(($20 + [64])) & [1]) == 0) ){ goto $label$182 }
	CALL $155(*(($20 + [72])))
	
.LABEL $label$182
	if ( ((*($20 + [16]) & [1]) == 0) ){ goto $label$183 }
	CALL $155(*(($20 + [24])))
	
.LABEL $label$183
	$12 = (int_64)0
	$15 = (int_64)59
	$13 = [1136]
	$16 = (int_64)0
	
.LOOP $label$184:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$189 }
	$0 = *($13)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$188 }
	$0 = ($0 + [165])
	goto $label$187 
	
.LABEL $label$189
	$17 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$186 }
	goto $label$185 
	
.LABEL $label$188
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$187
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$186
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$185
	$13 = ($13 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$16 = ((int_64)$17 | (int_64)$16)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$184 }
	*($20 + [88]) = $16
	*($20 + [80]) = (int_64)-6222124003695979872
	$12 = (int_64)0
	$15 = (int_64)59
	$13 = [1216]
	$16 = (int_64)0
	
.LOOP $label$190:
	if ( ((uint_64)$12 > (uint_64)(int_64)10) ){ goto $label$195 }
	$0 = *($13)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$194 }
	$0 = ($0 + [165])
	goto $label$193 
	
.LABEL $label$195
	$17 = (int_64)0
	if ( ((int_64)$12 == (int_64)11) ){ goto $label$192 }
	goto $label$191 
	
.LABEL $label$194
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$193
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$192
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$191
	$13 = ($13 + [1])
	$15 = ((int_64)$15 + (int_64)-5)
	$16 = ((int_64)$17 | (int_64)$16)
	$12 = ((int_64)$12 + (int_64)1)
	if ( ((int_64)$12 != (int_64)13) ){ goto $label$190 }
	$12 = (int_64)0
	$15 = (int_64)59
	$13 = [1232]
	$18 = (int_64)0
	
.LOOP $label$196:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$201 }
	$0 = *($13)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$200 }
	$0 = ($0 + [165])
	goto $label$199 
	
.LABEL $label$201
	$17 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$198 }
	goto $label$197 
	
.LABEL $label$200
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$199
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$198
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$197
	$13 = ($13 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$18 = ((int_64)$17 | (int_64)$18)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$196 }
	$12 = (int_64)0
	$17 = (int_64)59
	$13 = [1248]
	$19 = (int_64)0
	
.LOOP $label$202:
	$15 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$203 }
	$0 = *($13)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$205 }
	$0 = ($0 + [165])
	goto $label$204 
	
.LABEL $label$205
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$204
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($0 & [31])) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$203
	$13 = ($13 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$19 = ((int_64)$15 | (int_64)$19)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$202 }
	*(($20 + [24])) = [0]
	*($20 + [16]) = (int_64)0
	$13 = CALL strlen([1808])
	if ( ((uint_32)$13 >= (uint_32)[-16]) ){ goto $label$13 }
	if ( ((uint_32)$13 >= (uint_32)[11]) ){ goto $label$208 }
	*($20 + [16]) = ($13 << [1])
	$0 = (($20 + [16]) | [1])
	if ( $13 ){ goto $label$207 }
	goto $label$206 
	
.LABEL $label$208
	$14 = (($13 + [16]) & [-16])
	$0 = CALL $154($14)
	*($20 + [16]) = ($14 | [1])
	*($20 + [24]) = $0
	*($20 + [20]) = $13
	
.LABEL $label$207
	CALL memcpy($0, [1808], $13)
	
.LABEL $label$206
	*(($0 + $13)) = [0]
	*(($20 + [56])) = $9
	*(($20 + [68])) = *($20 + [20])
	*($20 + [40]) = $19
	$13 = ($20 + [24])
	*(($20 + [72])) = *($13)
	*($20 + [32]) = (int_64)-6222124003695979872
	*($20 + [48]) = $10
	*($20 + [64]) = *($20 + [16])
	*($20 + [16]) = [0]
	*($20 + [20]) = [0]
	*($13) = [0]
	$13 = CALL $21(($20 + [96]), ($20 + [80]), $16, $18, ($20 + [32]))
	CALL $19(($20 + [224]), $13)
	$0 = *($20 + [224])
	CALL send_inline($0, (*($20 + [228]) - $0))
	$0 = *($20 + [224])
	if ( ($0 == 0) ){ goto $label$209 }
	*($20 + [228]) = $0
	CALL $155($0)
	
.LABEL $label$209
	$0 = *($13 + [28])
	if ( ($0 == 0) ){ goto $label$210 }
	*(($13 + [32])) = $0
	CALL $155($0)
	
.LABEL $label$210
	$0 = *($13 + [16])
	if ( ($0 == 0) ){ goto $label$211 }
	*(($13 + [20])) = $0
	CALL $155($0)
	
.LABEL $label$211
	if ( ((*(($20 + [64])) & [1]) == 0) ){ goto $label$212 }
	CALL $155(*(($20 + [72])))
	
.LABEL $label$212
	if ( ((*($20 + [16]) & [1]) == 0) ){ goto $label$213 }
	CALL $155(*(($20 + [24])))
	
.LABEL $label$213
	if ( ((*(($20 + [176])) & [1]) == 0) ){ goto $label$19 }
	CALL $155(*(($20 + [184])))
	
.LABEL $label$19
	if ( ((*($20 + [192]) & [1]) == 0) ){ goto $label$18 }
	CALL $155(*($20 + [200]))
	
.LABEL $label$18
	if ( ((*($20 + [208]) & [1]) == 0) ){ goto $label$1 }
	CALL $155(*($20 + [216]))
	goto $label$1 
	
.LABEL $label$17
	CALL $156(($20 + [208]))
	
.LABEL $label$16
	CALL $156($0)
	
.LABEL $label$15
	CALL $156($14)
	
.LABEL $label$14
	CALL $156(($20 + [16]))
	
.LABEL $label$13
	CALL $156(($20 + [16]))
	
.LABEL $label$12
	if ( ((*($20 + [224]) & [1]) == 0) ){ goto $label$1 }
	CALL $155(*($20 + [232]))
	
.LABEL $label$1
	*([0] + [4]) = ($20 + [240])
	$13
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $10 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [496])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $154([24])) + [12]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [528])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[8]), [528])
	CALL memcpy(($6 + [8]), ($7 + [8]), [4])
	*($6 + [16]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [16])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $11(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $155($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $11 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $154(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $159($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $155($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $155($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN8pandafun12apply_signupERKNS_6signupE (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [192])
	*([0] + [4]) = $5
	CALL require_auth((int_64)-6222124003696921904)
	CALL _ZN8pandafun10apply_initEv()
	CALL _ZN8pandafun10pausecheckEv()
	*(($5 + [72])) = [0]
	*($5 + [48]) = (int_64)-6222124003695979872
	*($5 + [40]) = (int_64)-6222124003695979872
	*($5 + [56]) = (int_64)-1
	*($5 + [64]) = (int_64)0
	$4 = [1]
	$2 = CALL db_find_i64((int_64)-6222124003695979872, (int_64)-6222124003695979872, (int_64)-4352380133890326528, *($0))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*(CALL $14(($5 + [40]), $2) + [12]) == (int_32)($5 + [40])), [32])
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [240])
	CALL eosio_assert(((int_64)*($5 + [40]) == (int_64)CALL $fimport$14()), [96])
	*(($4 = CALL $154([24])) + [12]) = ($5 + [40])
	*($4 + [8]) = [0]
	*($4) = *($0)
	CALL eosio_assert([1], [176])
	CALL memcpy(($5 + [80]), $4, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy((($5 + [80]) | [8]), ($4 + [8]), [1])
	$1 = *($4)
	$2 = CALL db_store_i64(*((($5 + [40]) + [8])), (int_64)-4352380133890326528, (int_64)-6222124003695979872, $1, ($5 + [80]), [9])
	*($4 + [16]) = $2
	$0 = ($5 + [56])
	if ( (uint_64)($1 <= *($0)) ){ goto $label$2 }
	*($0) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($5) = $4
	$1 = *($4)
	*($5 + [80]) = $1
	*($5 + [176]) = $2
	$3 = ($5 + [68])
	$0 = *($3)
	if ( ((uint_32)$0 >= (uint_32)*(($5 + [72]))) ){ goto $label$4 }
	*($0 + [8]) = $1
	*($0 + [16]) = $2
	*($5) = [0]
	*($0) = $4
	*($3) = ($0 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $15(($5 + [64]), $5, ($5 + [80]), ($5 + [176]))
	
.LABEL $label$3
	$4 = *($5)
	*($5) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL $155($4)
	
.LABEL $label$5
	*(($5 + [32])) = [0]
	*($5 + [8]) = (int_64)-6222124003695979872
	*($5) = (int_64)-6222124003695979872
	*($5 + [16]) = (int_64)-1
	*($5 + [24]) = (int_64)0
	$4 = CALL db_find_i64((int_64)-6222124003695979872, (int_64)-6222124003695979872, (int_64)4982871467403247616, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$6 }
	$4 = CALL $7($5, $4)
	CALL eosio_assert(((int_32)*($4 + [96]) == (int_32)$5), [32])
	CALL eosio_assert([1], [272])
	CALL eosio_assert(((int_32)*($4 + [96]) == (int_32)$5), [320])
	CALL eosio_assert(((int_64)*($5) == (int_64)CALL $fimport$14()), [368])
	*($4 + [48 align=1]) = ((int_64)*($4 + [48 align=1]) + (int_64)1)
	$1 = *($4)
	CALL eosio_assert([1], [432])
	*($5 + [184]) = (($5 + [80]) + [93])
	*($5 + [180]) = ($5 + [80])
	*($5 + [176]) = ($5 + [80])
	CALL $8(($5 + [176]), $4)
	CALL db_update_i64(*($4 + [100]), (int_64)-6222124003695979872, ($5 + [80]), [93])
	$4 = ($5 + [16])
	if ( (uint_64)($1 <= *($4)) ){ goto $label$6 }
	*($4) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$2 = *($5 + [24])
	if ( ($2 == 0) ){ goto $label$7 }
	$3 = ($5 + [28])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$9 }
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $155($0)
	
.LABEL $label$11
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$10 }
	$4 = *(($5 + [24]))
	goto $label$8 
	
.LABEL $label$9
	$4 = $2
	
.LABEL $label$8
	*($3) = $2
	CALL $155($4)
	
.LABEL $label$7
	$2 = *($5 + [64])
	if ( ($2 == 0) ){ goto $label$12 }
	$3 = ($5 + [68])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$14 }
	
.LOOP $label$15:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$16 }
	CALL $155($0)
	
.LABEL $label$16
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$15 }
	$4 = *(($5 + [64]))
	goto $label$13 
	
.LABEL $label$14
	$4 = $2
	
.LABEL $label$13
	*($3) = $2
	CALL $155($4)
	
.LABEL $label$12
	*([0] + [4]) = ($5 + [192])
}

void .FUNC _ZN8pandafun10pausecheckEv ()
{
	int_32 $0
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [48])
	*([0] + [4]) = $4
	*(($4 + [40])) = [0]
	*($4 + [16]) = (int_64)-6222124003695979872
	*($4 + [8]) = (int_64)-6222124003695979872
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	$3 = [0]
	$1 = CALL db_find_i64((int_64)-6222124003695979872, (int_64)-6222124003695979872, (int_64)4982871467403247616, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $7(($4 + [8]), $1)
	CALL eosio_assert(((int_32)*($3 + [96]) == (int_32)($4 + [8])), [32])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [544])
	CALL eosio_assert(((int_32)*($3 + [92]) != (int_32)[1]), [592])
	$0 = *($4 + [32])
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = ($4 + [36])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = ($3 + [-24])
	$1 = *($3)
	*($3) = [0]
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $155($1)
	
.LABEL $label$6
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$5 }
	$3 = *(($4 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$3 = $0
	
.LABEL $label$3
	*($2) = $0
	CALL $155($3)
	
.LABEL $label$2
	*([0] + [4]) = ($4 + [48])
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

int_32 .FUNC $18 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $154([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [12])
	$1 = ( *(($4 + [16])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [12])
	$2 = (CASTING uint_64)(uint_32 $1)
	$5 = ($4 + [12])
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $20($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9) = $8
	*($9 + [8]) = $1
	CALL eosio_assert(((int_32)($1 - $8) > (int_32)[7]), [176])
	CALL memcpy($8, $4, [8])
	$6 = ($8 + [8])
	CALL eosio_assert(((int_32)($1 - $6) > (int_32)[3]), [176])
	CALL memcpy($6, ($4 + [8]), [4])
	*($9 + [4]) = ($8 + [12])
	CALL $23($9, $5)
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $20($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [176])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [176])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $26(CALL $25($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

void .FUNC $187 ()
{
	(unreachable)
}

int_32 .FUNC strncmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ($2 == 0) ){ goto $label$3 }
	$5 = [0]
	$3 = *($0)
	if ( ($3 == 0) ){ goto $label$1 }
	$0 = ($0 + [1])
	$2 = ([1] - $2)
	
.LOOP $label$4:
	$4 = *($1)
	if ( ((int_32)($3 & [255]) != (int_32)$4) ){ goto $label$2 }
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ($4 == 0) ){ goto $label$2 }
	$2 = ($2 + [1])
	$1 = ($1 + [1])
	$3 = *($0)
	$0 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	return [0]
	
.LABEL $label$2
	$5 = $3
	
.LABEL $label$1
	return (($5 & [255]) - *($1))
}

int_32 .FUNC __lctrans_impl (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	$1 = CALL __mo_lookup(*($1), *($1 + [4]), $0)
	return ( $1 ? $0 : $1 )
	
.LABEL $label$1
	return ( [0] ? $0 : [0] )
}

void .FUNC $116 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [16])
	$3 = $2
	*([0] + [4]) = $2
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $1)
	CALL $145($3, $0)
	*([0] + [4]) = ($3 + [16])
}

void .FUNC $117 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [16])
	$3 = $2
	*([0] + [4]) = $2
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $1)
	CALL $144($3, $0)
	*([0] + [4]) = ($3 + [16])
}

void .FUNC $114 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *([0] + [4])
	$4 = $3
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$3 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$3 = ($3 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$1
	CALL read_action_data($3, $1)
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [528])
	CALL memcpy($0, $3, [8])
	$2 = ($1 & [-8])
	CALL eosio_assert(((int_32)$2 != (int_32)[8]), [528])
	CALL memcpy(($0 + [8]), ($3 + [8]), [8])
	CALL eosio_assert(((uint_32)($1 + [-16]) > (uint_32)[31]), [528])
	CALL memcpy(($0 + [16]), ($3 + [16]), [32])
	CALL eosio_assert(((int_32)$2 != (int_32)[48]), [528])
	CALL memcpy(($0 + [48]), ($3 + [48]), [8])
	*([0] + [4]) = $4
}

void .FUNC $115 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = *([0] + [4])
	$3 = $2
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	CALL $146($0, $2, $1)
	*([0] + [4]) = $3
}

void .FUNC $112 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = (*([0] + [4]) - [16])
	$4 = $3
	*([0] + [4]) = $3
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$3 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$3 = ($3 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$1
	CALL read_action_data($3, $1)
	*(($0 + [24])) = [0]
	*($0 + [16 align=4]) = (int_64)0
	*($4) = $3
	$2 = ($3 + $1)
	*($4 + [8]) = $2
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [528])
	CALL memcpy($0, $3, [8])
	$1 = ($3 + [8])
	CALL eosio_assert(((uint_32)($2 - $1) > (uint_32)[7]), [528])
	CALL memcpy(($0 + [8]), $1, [8])
	*($4 + [4]) = ($3 + [16])
	CALL $135($4, ($0 + [16]))
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $113 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	*(($0 + [32])) = (int_64)1398362884
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [2352])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	
.LABEL $label$3
	CALL eosio_assert($5, [2416])
	*(($0 + [48])) = [0]
	*($0 + [40 align=4]) = (int_64)0
	*($6 + [4]) = $2
	*($6) = $2
	*($6 + [8]) = ($2 + $1)
	CALL $147($6, $0)
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $110 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = (*([0] + [4]) - [16])
	$4 = $3
	*([0] + [4]) = $3
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$3 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$3 = ($3 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$1
	CALL read_action_data($3, $1)
	*(($0 + [20])) = [0]
	*($0 + [12 align=4]) = (int_64)0
	*($4) = $3
	$2 = ($3 + $1)
	*($4 + [8]) = $2
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [528])
	CALL memcpy($0, $3, [8])
	$1 = ($3 + [8])
	CALL eosio_assert(((uint_32)($2 - $1) > (uint_32)[3]), [528])
	CALL memcpy(($0 + [8]), $1, [4])
	*($4 + [4]) = ($3 + [12])
	CALL $135($4, ($0 + [12]))
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $111 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	*(($0 + [24])) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [2352])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	
.LABEL $label$3
	CALL eosio_assert($5, [2416])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	*($6 + [4]) = $2
	*($6) = $2
	*($6 + [8]) = ($2 + $1)
	CALL $148($6, $0)
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $118 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = *([0] + [4])
	$3 = $2
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [528])
	CALL memcpy($0, $2, [8])
	$1 = ($1 & [-8])
	CALL eosio_assert(((int_32)$1 != (int_32)[8]), [528])
	CALL memcpy(($0 + [8]), ($2 + [8]), [8])
	CALL eosio_assert(((int_32)$1 != (int_32)[16]), [528])
	CALL memcpy(($0 + [16]), ($2 + [16]), [8])
	CALL eosio_assert(((int_32)$1 != (int_32)[24]), [528])
	CALL memcpy(($0 + [24]), ($2 + [24]), [8])
	*([0] + [4]) = $3
}

void .FUNC $119 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [16])
	$3 = $2
	*([0] + [4]) = $2
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $1)
	CALL $143($3, $0)
	*([0] + [4]) = ($3 + [16])
}

void .FUNC $29 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $154(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $159($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $155($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $155($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN8pandafun10blackcheckEy (int_64 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	*(($5 + [40])) = [0]
	*($5 + [16]) = (int_64)-6222124003695979872
	*($5 + [8]) = (int_64)-6222124003695979872
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$4 = [0]
	$2 = CALL db_find_i64((int_64)-6222124003695979872, (int_64)-6222124003695979872, (int_64)-4352380133890326528, $0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $14(($5 + [8]), $2)
	CALL eosio_assert(((int_32)*($4 + [12]) == (int_32)($5 + [8])), [32])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [2096])
	CALL eosio_assert(((int_32)*($4 + [8]) != (int_32)[1]), [2144])
	$1 = *($5 + [32])
	if ( ($1 == 0) ){ goto $label$2 }
	$3 = ($5 + [36])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$4 }
	
.LOOP $label$5:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$6 }
	CALL $155($2)
	
.LABEL $label$6
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$5 }
	$4 = *(($5 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$4 = $1
	
.LABEL $label$3
	*($3) = $1
	CALL $155($4)
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [48])
}

int_32 .FUNC $21 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $154([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $20($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = $1
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	CALL $24(($9 + [24]), ($9 + [16]))
	*([0] + [4]) = ($9 + [32])
	return $0
}

void .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $154($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $159($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $155($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [176])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [176])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $23($0, ($1 + [40]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [176])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [176])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [176])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [176])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [176])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [176])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $23(*($1), ($0 + [32]))
}

void .FUNC _ZN8pandafun15apply_transfersERKNS_9transfersE (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_32 $16
	$16 = (*([0] + [4]) - [208])
	*([0] + [4]) = $16
	$8 = *($0 + [12])
	CALL eosio_assert((( *(($0 + [16])) ? uint_32($8 >> [1]) : ($8 & [1]) ) <= [257]), [1936])
	CALL require_auth((int_64)-6222124003696921904)
	CALL _ZN8pandafun10pausecheckEv()
	CALL _ZN8pandafun10blackcheckEy(*($0))
	*((($16 + [48]) + [32])) = [0]
	*($16 + [48]) = (int_64)-6222124003695979872
	*($16 + [64]) = (int_64)-1
	*($16 + [72]) = (int_64)0
	*($16 + [56]) = *($0)
	CALL _ZN8pandafun10apply_initEv()
	CALL eosio_assert(((int_32)*($0 + [8]) > (int_32)[0]), [1968])
	CALL eosio_assert(((int_32)*($0 + [8]) < (int_32)[1001]), [2032])
	*((($16 + [8]) + [32])) = [0]
	*($16 + [16]) = (int_64)-6222124003695979872
	*($16 + [8]) = (int_64)-6222124003695979872
	*($16 + [24]) = (int_64)-1
	*($16 + [32]) = (int_64)0
	$12 = [0]
	$8 = CALL db_find_i64((int_64)-6222124003695979872, (int_64)-6222124003695979872, (int_64)4982871467403247616, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$12 = CALL $7(($16 + [8]), $8)
	CALL eosio_assert(((int_32)*($12 + [96]) == (int_32)($16 + [8])), [32])
	
.LABEL $label$1
	$1 = ((int_32)$12 != (int_32)[0])
	CALL eosio_assert($1, [544])
	$14 = *($12 + [8 align=1])
	$15 = *($12 + [80 align=1])
	$9 = ($0 + [8])
	if ( ((int_32)*($9) < (int_32)[1]) ){ goto $label$2 }
	$5 = (($16 + [48]) + [24])
	$4 = ($16 + [113])
	$3 = (($16 + [96]) + [16])
	$2 = (($16 + [96]) | [8])
	$10 = ($16 + [80])
	$11 = ($16 + [76])
	$13 = [0]
	
.LOOP $label$3:
	CALL eosio_assert(((int_64)*($16 + [48]) == (int_64)CALL $fimport$14()), [96])
	*(($0 = CALL $154([52])) + [40]) = ($16 + [48])
	*($0 + [8 align=1]) = (int_64)-7120433710884716544
	*($0) = $15
	$8 = ($0 + [16])
	CALL memset($8, [0], [24])
	*($0 + [39]) = [10]
	CALL eosio_assert([1], [176])
	CALL memcpy(($16 + [96]), $0, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy($2, ($0 + [8]), [8])
	*($16 + [192]) = [24]
	CALL eosio_assert([1], [176])
	CALL memcpy($3, ($16 + [192]), [1])
	CALL eosio_assert([1], [176])
	CALL memcpy($4, $8, [24])
	$6 = *($0)
	$7 = CALL db_store_i64(*((($16 + [48]) + [8])), (int_64)-6222123794639618048, (int_64)-6222124003695979872, $6, ($16 + [96]), [41])
	*($0 + [44]) = $7
	$8 = (($16 + [48]) + [16])
	if ( (uint_64)($6 <= *($8)) ){ goto $label$4 }
	*($8) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($16 + [192]) = $0
	$6 = *($0)
	*($16 + [96]) = $6
	*($16 + [92]) = $7
	$8 = *($11)
	if ( ((uint_32)$8 >= (uint_32)*($10)) ){ goto $label$6 }
	*($8 + [8]) = $6
	*($8 + [16]) = $7
	*($16 + [192]) = [0]
	*($8) = $0
	*($11) = ($8 + [24])
	goto $label$5 
	
.LABEL $label$6
	CALL $29($5, ($16 + [192]), ($16 + [96]), ($16 + [92]))
	
.LABEL $label$5
	$0 = *($16 + [192])
	*($16 + [192]) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	CALL $155($0)
	
.LABEL $label$7
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$15 + (int_64)1)
	$13 = ($13 + [1])
	if ( ((int_32)int_32(($13 << [16]) >> [16]) < (int_32)*($9)) ){ goto $label$3 }
	
.LABEL $label$2
	CALL eosio_assert($1, [272])
	CALL eosio_assert(((int_32)*($12 + [96]) == (int_32)($16 + [8])), [320])
	CALL eosio_assert(((int_64)*($16 + [8]) == (int_64)CALL $fimport$14()), [368])
	*($12 + [80 align=1]) = $15
	*($12 + [8 align=1]) = $14
	$15 = *($12)
	CALL eosio_assert([1], [432])
	*($16 + [200]) = (($16 + [96]) + [93])
	*($16 + [196]) = ($16 + [96])
	*($16 + [192]) = ($16 + [96])
	CALL $8(($16 + [192]), $12)
	CALL db_update_i64(*($12 + [100]), (int_64)-6222124003695979872, ($16 + [96]), [93])
	$0 = ($16 + [24])
	if ( (uint_64)($15 <= *($0)) ){ goto $label$8 }
	*($0) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$7 = *($16 + [32])
	if ( ($7 == 0) ){ goto $label$9 }
	$13 = ($16 + [36])
	$0 = *($13)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$8 = *($0)
	*($0) = [0]
	if ( ($8 == 0) ){ goto $label$13 }
	CALL $155($8)
	
.LABEL $label$13
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($16 + [32]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $7
	
.LABEL $label$10
	*($13) = $7
	CALL $155($0)
	
.LABEL $label$9
	$7 = *($16 + [72])
	if ( ($7 == 0) ){ goto $label$14 }
	$13 = ($16 + [76])
	$0 = *($13)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$16 }
	
.LOOP $label$17:
	$0 = ($0 + [-24])
	$8 = *($0)
	*($0) = [0]
	if ( ($8 == 0) ){ goto $label$18 }
	CALL $155($8)
	
.LABEL $label$18
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$17 }
	$0 = *(($16 + [72]))
	goto $label$15 
	
.LABEL $label$16
	$0 = $7
	
.LABEL $label$15
	*($13) = $7
	CALL $155($0)
	
.LABEL $label$14
	*([0] + [4]) = ($16 + [208])
}

int_32 .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [176])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [176])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC _ZN8pandafun12apply_buyteaERKNS_6buyteaE (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	CALL require_auth((int_64)-6222124003696921904)
	CALL _ZN8pandafun10pausecheckEv()
	CALL _ZN8pandafun10blackcheckEy(*($0))
	CALL eosio_assert(((int_64)*($0 + [8]) > (int_64)0), [6672])
	*(($5 + [40])) = [0]
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$1 = *($0)
	*($5 + [16]) = $1
	*($5 + [8]) = (int_64)-6222124003695979872
	$4 = CALL db_find_i64((int_64)-6222124003695979872, $1, (int_64)3904810955002871808, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	$4 = CALL $58(($5 + [8]), $4)
	CALL eosio_assert(((int_32)*($4 + [28]) == (int_32)($5 + [8])), [32])
	CALL eosio_assert([1], [272])
	CALL eosio_assert(((int_32)*($4 + [28]) == (int_32)($5 + [8])), [320])
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)CALL $fimport$14()), [368])
	$1 = *($4)
	CALL prints([6720])
	CALL printi(*($4 + [20]))
	CALL prints([6544])
	$2 = ($0 + [8])
	CALL printi(*($2))
	*($4 + [8 align=1]) = *($0 + [16])
	*($4 + [20 align=1]) = ((int_64)*($2) + (int_64)*($4 + [20 align=1]))
	CALL prints([6560])
	CALL printi(*($4 + [20]))
	CALL eosio_assert(((int_64)$1 == (int_64)*($4)), [432])
	*($5 + [88]) = (($5 + [48]) + [28])
	*($5 + [84]) = ($5 + [48])
	*($5 + [80]) = ($5 + [48])
	CALL $59(($5 + [80]), $4)
	CALL db_update_i64(*($4 + [32]), (int_64)-6222124003695979872, ($5 + [48]), [28])
	$4 = ($5 + [24])
	if ( (uint_64)($1 <= *($4)) ){ goto $label$3 }
	*($4) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	$2 = *($5 + [32])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)CALL $fimport$14()), [96])
	*(($4 = CALL $154([40])) + [28]) = ($5 + [8])
	*($4) = (int_64)0
	*($4 + [16 align=1]) = [0]
	*($4 + [24 align=1]) = [0]
	*($4 + [8 align=1]) = *($0 + [16])
	$0 = ($0 + [8])
	$1 = *($0)
	*($4 + [20 align=1]) = $1
	CALL prints([6736])
	CALL printi(*($0))
	CALL prints([6560])
	CALL printi((int_64)((int_64)$1 << (int_64)32) >> (int_64)32))
	*($5 + [88]) = (($5 + [48]) + [28])
	*($5 + [84]) = ($5 + [48])
	*($5 + [80]) = ($5 + [48])
	CALL $59(($5 + [80]), $4)
	$1 = *($4)
	$2 = CALL db_store_i64(*((($5 + [8]) + [8])), (int_64)3904810955002871808, (int_64)-6222124003695979872, $1, ($5 + [48]), [28])
	*($4 + [32]) = $2
	$0 = ($5 + [24])
	if ( (uint_64)($1 <= *($0)) ){ goto $label$5 }
	*($0) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($5 + [80]) = $4
	$1 = *($4)
	*($5 + [48]) = $1
	*($5 + [76]) = $2
	$0 = *((($5 + [8]) + [28]))
	if ( ((uint_32)$0 >= (uint_32)*(($5 + [40]))) ){ goto $label$7 }
	*($0 + [8]) = $1
	*($0 + [16]) = $2
	*($5 + [80]) = [0]
	*($0) = $4
	*(($5 + [36])) = ($0 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $69(($5 + [32]), ($5 + [80]), ($5 + [48]), ($5 + [76]))
	
.LABEL $label$6
	$4 = *($5 + [80])
	*($5 + [80]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $155($4)
	
.LABEL $label$3
	$2 = *($5 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = ($5 + [36])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$9 }
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $155($0)
	
.LABEL $label$11
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$10 }
	$4 = *(($5 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$4 = $2
	
.LABEL $label$8
	*($3) = $2
	CALL $155($4)
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [96])
}

void .FUNC _ZN8pandafun14apply_buybooksERKNS_8buybooksE (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	CALL require_auth((int_64)-6222124003696921904)
	CALL _ZN8pandafun10pausecheckEv()
	CALL _ZN8pandafun10blackcheckEy(*($0))
	CALL eosio_assert(((int_64)*($0 + [8]) > (int_64)0), [6592])
	*(($5 + [40])) = [0]
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$1 = *($0)
	*($5 + [16]) = $1
	*($5 + [8]) = (int_64)-6222124003695979872
	$4 = CALL db_find_i64((int_64)-6222124003695979872, $1, (int_64)3904810955002871808, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	$4 = CALL $58(($5 + [8]), $4)
	CALL eosio_assert(((int_32)*($4 + [28]) == (int_32)($5 + [8])), [32])
	CALL eosio_assert([1], [272])
	CALL eosio_assert(((int_32)*($4 + [28]) == (int_32)($5 + [8])), [320])
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)CALL $fimport$14()), [368])
	$1 = *($4)
	CALL prints([6640])
	CALL printi(*($4 + [24]))
	CALL prints([6544])
	$2 = ($0 + [8])
	CALL printi(*($2))
	*($4 + [8 align=1]) = *($0 + [16])
	*($4 + [24 align=1]) = ((int_64)*($2) + (int_64)*($4 + [24 align=1]))
	CALL prints([6560])
	CALL printi(*($4 + [24]))
	CALL eosio_assert(((int_64)$1 == (int_64)*($4)), [432])
	*($5 + [88]) = (($5 + [48]) + [28])
	*($5 + [84]) = ($5 + [48])
	*($5 + [80]) = ($5 + [48])
	CALL $59(($5 + [80]), $4)
	CALL db_update_i64(*($4 + [32]), (int_64)-6222124003695979872, ($5 + [48]), [28])
	$4 = ($5 + [24])
	if ( (uint_64)($1 <= *($4)) ){ goto $label$3 }
	*($4) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	$2 = *($5 + [32])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)CALL $fimport$14()), [96])
	*(($4 = CALL $154([40])) + [28]) = ($5 + [8])
	*($4) = (int_64)0
	*($4 + [16 align=1]) = (int_64)0
	*($4 + [8 align=1]) = *($0 + [16])
	$0 = ($0 + [8])
	$1 = *($0)
	*($4 + [24 align=1]) = $1
	CALL prints([6656])
	CALL printi(*($0))
	CALL prints([6560])
	CALL printi((int_64)((int_64)$1 << (int_64)32) >> (int_64)32))
	*($5 + [88]) = (($5 + [48]) + [28])
	*($5 + [84]) = ($5 + [48])
	*($5 + [80]) = ($5 + [48])
	CALL $59(($5 + [80]), $4)
	$1 = *($4)
	$2 = CALL db_store_i64(*((($5 + [8]) + [8])), (int_64)3904810955002871808, (int_64)-6222124003695979872, $1, ($5 + [48]), [28])
	*($4 + [32]) = $2
	$0 = ($5 + [24])
	if ( (uint_64)($1 <= *($0)) ){ goto $label$5 }
	*($0) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($5 + [80]) = $4
	$1 = *($4)
	*($5 + [48]) = $1
	*($5 + [76]) = $2
	$0 = *((($5 + [8]) + [28]))
	if ( ((uint_32)$0 >= (uint_32)*(($5 + [40]))) ){ goto $label$7 }
	*($0 + [8]) = $1
	*($0 + [16]) = $2
	*($5 + [80]) = [0]
	*($0) = $4
	*(($5 + [36])) = ($0 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $69(($5 + [32]), ($5 + [80]), ($5 + [48]), ($5 + [76]))
	
.LABEL $label$6
	$4 = *($5 + [80])
	*($5 + [80]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $155($4)
	
.LABEL $label$3
	$2 = *($5 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = ($5 + [36])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$9 }
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $155($0)
	
.LABEL $label$11
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$10 }
	$4 = *(($5 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$4 = $2
	
.LABEL $label$8
	*($3) = $2
	CALL $155($4)
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [96])
}

void .FUNC _ZN8pandafun12apply_resumeEv ()
{
	int_64 $0
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [160])
	*([0] + [4]) = $5
	CALL require_auth((int_64)-6222124003694107488)
	*(($5 + [40])) = [0]
	*($5 + [16]) = (int_64)-6222124003695979872
	*($5 + [8]) = (int_64)-6222124003695979872
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$4 = CALL db_find_i64((int_64)-6222124003695979872, (int_64)-6222124003695979872, (int_64)4982871467403247616, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$5 }
	$4 = CALL $7(($5 + [8]), $4)
	CALL eosio_assert(((int_32)*($4 + [96]) == (int_32)($5 + [8])), [32])
	if ( (*($4 + [92]) == 0) ){ goto $label$4 }
	CALL eosio_assert([1], [272])
	CALL eosio_assert(((int_32)*($4 + [96]) == (int_32)($5 + [8])), [320])
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)CALL $fimport$14()), [368])
	*($4 + [92]) = [0]
	$0 = *($4)
	CALL eosio_assert([1], [432])
	*($5 + [152]) = (($5 + [48]) + [93])
	*($5 + [148]) = ($5 + [48])
	*($5 + [144]) = ($5 + [48])
	CALL $8(($5 + [144]), $4)
	CALL db_update_i64(*($4 + [100]), (int_64)-6222124003695979872, ($5 + [48]), [93])
	$4 = ($5 + [24])
	if ( (uint_64)($0 <= *($4)) ){ goto $label$3 }
	*($4) = ( (int_64)-2 ? ((int_64)$0 + (int_64)1) : ((uint_64)$0 > (uint_64)(int_64)-3) )
	$1 = *($5 + [32])
	if ( $1 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	CALL prints([6784])
	$1 = *($5 + [32])
	if ( $1 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	CALL prints([6832])
	
.LABEL $label$3
	$1 = *($5 + [32])
	if ( ($1 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = ($5 + [36])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$7 }
	
.LOOP $label$8:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$9 }
	CALL $155($2)
	
.LABEL $label$9
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$8 }
	$4 = *(($5 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$4 = $1
	
.LABEL $label$6
	*($3) = $1
	CALL $155($4)
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [160])
}

void .FUNC _ZN8pandafun11apply_pauseEv ()
{
	int_64 $0
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [160])
	*([0] + [4]) = $5
	CALL require_auth((int_64)-6222124003694107488)
	*(($5 + [40])) = [0]
	*($5 + [16]) = (int_64)-6222124003695979872
	*($5 + [8]) = (int_64)-6222124003695979872
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$4 = CALL db_find_i64((int_64)-6222124003695979872, (int_64)-6222124003695979872, (int_64)4982871467403247616, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	$4 = CALL $7(($5 + [8]), $4)
	CALL eosio_assert(((int_32)*($4 + [96]) == (int_32)($5 + [8])), [32])
	if ( ((int_32)*($4 + [92]) != (int_32)[1]) ){ goto $label$3 }
	CALL prints([6752])
	$1 = *($5 + [32])
	if ( $1 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	CALL prints([6784])
	$1 = *($5 + [32])
	if ( $1 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([1], [272])
	CALL eosio_assert(((int_32)*($4 + [96]) == (int_32)($5 + [8])), [320])
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)CALL $fimport$14()), [368])
	*($4 + [92]) = [1]
	$0 = *($4)
	CALL eosio_assert([1], [432])
	*($5 + [152]) = (($5 + [48]) + [93])
	*($5 + [148]) = ($5 + [48])
	*($5 + [144]) = ($5 + [48])
	CALL $8(($5 + [144]), $4)
	CALL db_update_i64(*($4 + [100]), (int_64)-6222124003695979872, ($5 + [48]), [93])
	$4 = ($5 + [24])
	if ( (uint_64)($0 <= *($4)) ){ goto $label$5 }
	*($4) = ( (int_64)-2 ? ((int_64)$0 + (int_64)1) : ((uint_64)$0 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$1 = *($5 + [32])
	if ( ($1 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = ($5 + [36])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$7 }
	
.LOOP $label$8:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$9 }
	CALL $155($2)
	
.LABEL $label$9
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$8 }
	$4 = *(($5 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$4 = $1
	
.LABEL $label$6
	*($3) = $1
	CALL $155($4)
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [160])
}

void .FUNC _ZN8pandafun17apply_removeblackERKNS_11removeblackE (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [64])
	*([0] + [4]) = $5
	CALL require_auth((int_64)-6222124003696921904)
	CALL _ZN8pandafun10pausecheckEv()
	*(($5 + [40])) = [0]
	*($5 + [16]) = (int_64)-6222124003695979872
	*($5 + [8]) = (int_64)-6222124003695979872
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$3 = CALL db_find_i64((int_64)-6222124003695979872, (int_64)-6222124003695979872, (int_64)-4352380133890326528, *($0))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	$0 = CALL $14(($5 + [8]), $3)
	CALL eosio_assert(((int_32)*($0 + [12]) == (int_32)($5 + [8])), [32])
	CALL eosio_assert([1], [272])
	CALL eosio_assert(((int_32)*($0 + [12]) == (int_32)($5 + [8])), [320])
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)CALL $fimport$14()), [368])
	*($0 + [8]) = [0]
	$1 = *($0)
	CALL eosio_assert([1], [432])
	CALL eosio_assert([1], [176])
	CALL memcpy(($5 + [48]), $0, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy((($5 + [48]) | [8]), ($0 + [8]), [1])
	CALL db_update_i64(*($0 + [16]), (int_64)-6222124003695979872, ($5 + [48]), [9])
	$0 = ($5 + [24])
	if ( (uint_64)($1 <= *($0)) ){ goto $label$3 }
	*($0) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	$2 = *($5 + [32])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$1 = *($0)
	CALL prints([6864])
	CALL printn($1)
	CALL prints([6896])
	
.LABEL $label$3
	$2 = *($5 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = ($5 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL $155($3)
	
.LABEL $label$8
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($5 + [32]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $2
	
.LABEL $label$5
	*($4) = $2
	CALL $155($0)
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [64])
}

void .FUNC _ZN8pandafun14apply_setblackERKNS_8setblackE (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [64])
	*([0] + [4]) = $5
	CALL require_auth((int_64)-6222124003696921904)
	CALL _ZN8pandafun10pausecheckEv()
	*(($5 + [40])) = [0]
	*($5 + [16]) = (int_64)-6222124003695979872
	*($5 + [8]) = (int_64)-6222124003695979872
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$3 = CALL db_find_i64((int_64)-6222124003695979872, (int_64)-6222124003695979872, (int_64)-4352380133890326528, *($0))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	$0 = CALL $14(($5 + [8]), $3)
	CALL eosio_assert(((int_32)*($0 + [12]) == (int_32)($5 + [8])), [32])
	CALL eosio_assert([1], [272])
	CALL eosio_assert(((int_32)*($0 + [12]) == (int_32)($5 + [8])), [320])
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)CALL $fimport$14()), [368])
	*($0 + [8]) = [1]
	$1 = *($0)
	CALL eosio_assert([1], [432])
	CALL eosio_assert([1], [176])
	CALL memcpy(($5 + [48]), $0, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy((($5 + [48]) | [8]), ($0 + [8]), [1])
	CALL db_update_i64(*($0 + [16]), (int_64)-6222124003695979872, ($5 + [48]), [9])
	$0 = ($5 + [24])
	if ( (uint_64)($1 <= *($0)) ){ goto $label$3 }
	*($0) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	$2 = *($5 + [32])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$1 = *($0)
	CALL prints([6864])
	CALL printn($1)
	CALL prints([6896])
	
.LABEL $label$3
	$2 = *($5 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = ($5 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL $155($3)
	
.LABEL $label$8
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($5 + [32]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $2
	
.LABEL $label$5
	*($4) = $2
	CALL $155($0)
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [64])
}

void .FUNC _ZN8pandafun12apply_signinERKNS_6signinE (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	$1 = *($0)
	if ( ((int_64)$1 == (int_64)-6222124003696921904) ){ goto $label$1 }
	if ( ((int_64)$1 == (int_64)-6222124003695979872) ){ goto $label$1 }
	CALL eosio_assert(CALL $fimport$26($1), [6912])
	CALL require_auth(*($0))
	$3 = [0]
	*(($5 + [40])) = [0]
	*($5 + [16]) = (int_64)-6222124003695979872
	*($5 + [8]) = (int_64)-6222124003695979872
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$0 = CALL db_find_i64((int_64)-6222124003695979872, (int_64)-6222124003695979872, (int_64)-4352380133890326528, *($0))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*(CALL $14(($5 + [8]), $0) + [12]) == (int_32)($5 + [8])), [32])
	$3 = [1]
	
.LABEL $label$2
	CALL eosio_assert($3, [6928])
	$2 = *($5 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	$4 = ($5 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$6 }
	CALL $155($3)
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($5 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $2
	
.LABEL $label$3
	*($4) = $2
	CALL $155($0)
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

void .FUNC _ZN8pandafun11apply_loginERKNS_5loginE (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	$1 = *($0)
	if ( ((int_64)$1 == (int_64)-6222124003696921904) ){ goto $label$1 }
	if ( ((int_64)$1 == (int_64)-6222124003695979872) ){ goto $label$1 }
	CALL eosio_assert(CALL $fimport$26($1), [6912])
	CALL require_auth(*($0))
	$3 = [0]
	*(($5 + [40])) = [0]
	*($5 + [16]) = (int_64)-6222124003695979872
	*($5 + [8]) = (int_64)-6222124003695979872
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$0 = CALL db_find_i64((int_64)-6222124003695979872, (int_64)-6222124003695979872, (int_64)-4352380133890326528, *($0))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*(CALL $14(($5 + [8]), $0) + [12]) == (int_32)($5 + [8])), [32])
	$3 = [1]
	
.LABEL $label$2
	CALL eosio_assert($3, [6928])
	$2 = *($5 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	$4 = ($5 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$6 }
	CALL $155($3)
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($5 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $2
	
.LABEL $label$3
	*($4) = $2
	CALL $155($0)
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

void .FUNC $109 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	*(($0 + [24])) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [2352])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	
.LABEL $label$3
	CALL eosio_assert($5, [2416])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	*($6 + [4]) = $2
	*($6) = $2
	*($6 + [8]) = ($2 + $1)
	CALL $149($6, $0)
	*([0] + [4]) = ($6 + [16])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [352])
	*([0] + [4]) = $9
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1216]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$1) ){ goto $label$8 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1232]
	$7 = (int_64)0
	
.LOOP $label$9:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$14 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$3 = ($3 + [165])
	goto $label$12 
	
.LABEL $label$14
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$13
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$11
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$10
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$9 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$8 }
	CALL $109($9)
	CALL _ZN8pandafun14apply_transferERKNS_8transferE($9)
	if ( ((*($9 + [32]) & [1]) == 0) ){ goto $label$7 }
	CALL $155(*(($9 + [40])))
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_64)$1 != (int_64)-6222124003695979872) ){ goto $label$7 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1152]
	$7 = (int_64)0
	
.LOOP $label$15:
	if ( ((uint_64)$6 > (uint_64)(int_64)8) ){ goto $label$20 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$3 = ($3 + [165])
	goto $label$18 
	
.LABEL $label$20
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$19
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$17
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$16
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$15 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$21 }
	CALL $110($9)
	CALL _ZN8pandafun15apply_transfersERKNS_9transfersE($9)
	if ( ((*($9 + [12]) & [1]) == 0) ){ goto $label$7 }
	CALL $155(*(($9 + [20])))
	goto $label$7 
	
.LABEL $label$21
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [6960]
	$7 = (int_64)0
	
.LOOP $label$22:
	if ( ((uint_64)$6 > (uint_64)(int_64)3) ){ goto $label$27 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$3 = ($3 + [165])
	goto $label$25 
	
.LABEL $label$27
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$26
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$24
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$23
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$22 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$28 }
	CALL $111($9)
	CALL _ZN8pandafun10apply_sellERKNS_4sellE($9)
	if ( ((*($9 + [32]) & [1]) == 0) ){ goto $label$7 }
	CALL $155(*(($9 + [40])))
	goto $label$7 
	
.LABEL $label$28
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [6976]
	$7 = (int_64)0
	
.LOOP $label$29:
	if ( ((uint_64)$6 > (uint_64)(int_64)9) ){ goto $label$34 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$3 = ($3 + [165])
	goto $label$32 
	
.LABEL $label$34
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$33
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$32
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$31
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$30
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$29 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$35 }
	CALL $112($9)
	CALL _ZN8pandafun16apply_cancelsellERKNS_10cancelsellE($9)
	if ( ((*($9 + [16]) & [1]) == 0) ){ goto $label$7 }
	CALL $155(*(($9 + [24])))
	goto $label$7 
	
.LABEL $label$35
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1520]
	$7 = (int_64)0
	
.LOOP $label$36:
	if ( ((uint_64)$6 > (uint_64)(int_64)2) ){ goto $label$41 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$40 }
	$3 = ($3 + [165])
	goto $label$39 
	
.LABEL $label$41
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$40
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$39
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$38
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$37
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$36 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$42 }
	CALL $113($9)
	CALL _ZN8pandafun9apply_buyERKNS_3buyE($9)
	if ( ((*($9 + [40]) & [1]) == 0) ){ goto $label$7 }
	CALL $155(*(($9 + [48])))
	goto $label$7 
	
.LABEL $label$42
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [6992]
	$7 = (int_64)0
	
.LOOP $label$43:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$48 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$47 }
	$3 = ($3 + [165])
	goto $label$46 
	
.LABEL $label$48
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$47
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$46
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$45
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$44
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$43 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$49 }
	CALL $114($9)
	CALL _ZN8pandafun14apply_recvhashERKNS_8recvhashE($9)
	goto $label$7 
	
.LABEL $label$49
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [7008]
	$7 = (int_64)0
	
.LOOP $label$50:
	if ( ((uint_64)$6 > (uint_64)(int_64)8) ){ goto $label$55 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$54 }
	$3 = ($3 + [165])
	goto $label$53 
	
.LABEL $label$55
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$54
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$53
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$52
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$51
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$50 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$56 }
	CALL $115($9)
	CALL _ZN8pandafun15apply_recvhashsERKNS_9recvhashsE($9)
	goto $label$7 
	
.LABEL $label$56
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [160]
	$7 = (int_64)0
	
.LOOP $label$57:
	if ( ((uint_64)$6 > (uint_64)(int_64)3) ){ goto $label$62 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$61 }
	$3 = ($3 + [165])
	goto $label$60 
	
.LABEL $label$62
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$59 }
	goto $label$58 
	
.LABEL $label$61
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$60
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$59
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$58
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$57 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$63 }
	CALL $116($9)
	CALL _ZN8pandafun10apply_prayERKNS_4prayE($9)
	goto $label$7 
	
.LABEL $label$63
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [7024]
	$7 = (int_64)0
	
.LOOP $label$64:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$69 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$68 }
	$3 = ($3 + [165])
	goto $label$67 
	
.LABEL $label$69
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$66 }
	goto $label$65 
	
.LABEL $label$68
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$67
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$66
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$65
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$64 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$70 }
	CALL $117($9)
	CALL _ZN8pandafun11apply_praysERKNS_5praysE($9)
	goto $label$7 
	
.LABEL $label$70
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [7040]
	$7 = (int_64)0
	
.LOOP $label$71:
	if ( ((uint_64)$6 > (uint_64)(int_64)3) ){ goto $label$76 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$75 }
	$3 = ($3 + [165])
	goto $label$74 
	
.LABEL $label$76
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$73 }
	goto $label$72 
	
.LABEL $label$75
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$74
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$73
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$72
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$71 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$77 }
	CALL $118($9)
	CALL _ZN8pandafun10apply_diceERKNS_4diceE($9)
	goto $label$7 
	
.LABEL $label$77
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [192]
	$7 = (int_64)0
	
.LOOP $label$78:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$83 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$82 }
	$3 = ($3 + [165])
	goto $label$81 
	
.LABEL $label$83
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$80 }
	goto $label$79 
	
.LABEL $label$82
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$81
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$80
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$79
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$78 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$84 }
	CALL $119($9)
	CALL _ZN8pandafun13apply_upgradeERKNS_7upgradeE($9)
	goto $label$7 
	
.LABEL $label$84
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [7056]
	$7 = (int_64)0
	
.LOOP $label$85:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$90 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$89 }
	$3 = ($3 + [165])
	goto $label$88 
	
.LABEL $label$90
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$89
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$88
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$87
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$86
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$85 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$91 }
	CALL $120($9)
	CALL _ZN8pandafun14apply_upgradesERKNS_8upgradesE($9)
	goto $label$7 
	
.LABEL $label$91
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [208]
	$7 = (int_64)0
	
.LOOP $label$92:
	if ( ((uint_64)$6 > (uint_64)(int_64)8) ){ goto $label$97 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$96 }
	$3 = ($3 + [165])
	goto $label$95 
	
.LABEL $label$97
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$94 }
	goto $label$93 
	
.LABEL $label$96
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$95
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$94
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$93
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$92 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$98 }
	CALL $121($9)
	CALL _ZN8pandafun15apply_transformERKNS_9transformE($9)
	goto $label$7 
	
.LABEL $label$98
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [7072]
	$7 = (int_64)0
	
.LOOP $label$99:
	if ( ((uint_64)$6 > (uint_64)(int_64)9) ){ goto $label$104 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$103 }
	$3 = ($3 + [165])
	goto $label$102 
	
.LABEL $label$104
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$101 }
	goto $label$100 
	
.LABEL $label$103
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$102
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$101
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$100
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$99 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$105 }
	CALL $122($9)
	CALL _ZN8pandafun16apply_transformsERKNS_10transformsE($9)
	goto $label$7 
	
.LABEL $label$105
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [7088]
	$7 = (int_64)0
	
.LOOP $label$106:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$107 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$109 }
	$3 = ($3 + [165])
	goto $label$108 
	
.LABEL $label$109
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$108
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$107
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$106 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$110 }
	CALL $123($9)
	CALL _ZN8pandafun18apply_confirmtransERKNS_12confirmtransE($9)
	goto $label$7 
	
.LABEL $label$110
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [7104]
	$7 = (int_64)0
	
.LOOP $label$111:
	if ( ((uint_64)$6 > (uint_64)(int_64)9) ){ goto $label$116 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$115 }
	$3 = ($3 + [165])
	goto $label$114 
	
.LABEL $label$116
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$113 }
	goto $label$112 
	
.LABEL $label$115
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$114
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$113
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$112
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$111 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$117 }
	CALL $124($9)
	CALL _ZN8pandafun16apply_saveresultERKNS_10saveresultE($9)
	goto $label$7 
	
.LABEL $label$117
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [7120]
	$7 = (int_64)0
	
.LOOP $label$118:
	if ( ((uint_64)$6 > (uint_64)(int_64)5) ){ goto $label$123 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$122 }
	$3 = ($3 + [165])
	goto $label$121 
	
.LABEL $label$123
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$120 }
	goto $label$119 
	
.LABEL $label$122
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$121
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$120
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$119
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$118 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$124 }
	CALL $125($9)
	CALL _ZN8pandafun12apply_refundERKNS_6refundE($9)
	if ( ((*($9 + [32]) & [1]) == 0) ){ goto $label$7 }
	CALL $155(*(($9 + [40])))
	goto $label$7 
	
.LABEL $label$124
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1168]
	$7 = (int_64)0
	
.LOOP $label$125:
	if ( ((uint_64)$6 > (uint_64)(int_64)9) ){ goto $label$130 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$129 }
	$3 = ($3 + [165])
	goto $label$128 
	
.LABEL $label$130
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$127 }
	goto $label$126 
	
.LABEL $label$129
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$128
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$127
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$126
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$125 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$131 }
	CALL $126($9)
	CALL _ZN8pandafun16apply_buycandlesERKNS_10buycandlesE($9)
	goto $label$7 
	
.LABEL $label$131
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1184]
	$7 = (int_64)0
	
.LOOP $label$132:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$137 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$136 }
	$3 = ($3 + [165])
	goto $label$135 
	
.LABEL $label$137
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$134 }
	goto $label$133 
	
.LABEL $label$136
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$135
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$134
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$133
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$132 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$138 }
	CALL $127($9)
	CALL _ZN8pandafun14apply_buybooksERKNS_8buybooksE($9)
	goto $label$7 
	
.LABEL $label$138
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1200]
	$7 = (int_64)0
	
.LOOP $label$139:
	if ( ((uint_64)$6 > (uint_64)(int_64)5) ){ goto $label$144 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$143 }
	$3 = ($3 + [165])
	goto $label$142 
	
.LABEL $label$144
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$141 }
	goto $label$140 
	
.LABEL $label$143
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$142
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$141
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$140
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$139 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$145 }
	CALL $128($9)
	CALL _ZN8pandafun12apply_buyteaERKNS_6buyteaE($9)
	goto $label$7 
	
.LABEL $label$145
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [7136]
	$7 = (int_64)0
	
.LOOP $label$146:
	if ( ((uint_64)$6 > (uint_64)(int_64)5) ){ goto $label$151 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$150 }
	$3 = ($3 + [165])
	goto $label$149 
	
.LABEL $label$151
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$148 }
	goto $label$147 
	
.LABEL $label$150
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$149
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$148
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$147
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$146 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$152 }
	CALL $129($9)
	CALL _ZN8pandafun12apply_signupERKNS_6signupE($9)
	goto $label$7 
	
.LABEL $label$152
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [7152]
	$7 = (int_64)0
	
.LOOP $label$153:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$158 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$157 }
	$3 = ($3 + [165])
	goto $label$156 
	
.LABEL $label$158
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$155 }
	goto $label$154 
	
.LABEL $label$157
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$156
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$155
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$154
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$153 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$159 }
	CALL _ZN8pandafun11apply_pauseEv()
	goto $label$7 
	
.LABEL $label$159
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [7168]
	$7 = (int_64)0
	
.LOOP $label$160:
	if ( ((uint_64)$6 > (uint_64)(int_64)5) ){ goto $label$165 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$164 }
	$3 = ($3 + [165])
	goto $label$163 
	
.LABEL $label$165
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$162 }
	goto $label$161 
	
.LABEL $label$164
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$163
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$162
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$161
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$160 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$166 }
	CALL _ZN8pandafun12apply_resumeEv()
	goto $label$7 
	
.LABEL $label$166
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [7184]
	$7 = (int_64)0
	
.LOOP $label$167:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$172 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$171 }
	$3 = ($3 + [165])
	goto $label$170 
	
.LABEL $label$172
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$169 }
	goto $label$168 
	
.LABEL $label$171
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$170
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$169
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$168
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$167 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$173 }
	*($9) = CALL $130()
	CALL _ZN8pandafun14apply_setblackERKNS_8setblackE($9)
	goto $label$7 
	
.LABEL $label$173
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [7200]
	$7 = (int_64)0
	
.LOOP $label$174:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$179 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$178 }
	$3 = ($3 + [165])
	goto $label$177 
	
.LABEL $label$179
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$176 }
	goto $label$175 
	
.LABEL $label$178
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$177
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$176
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$175
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$174 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$180 }
	*($9) = CALL $131()
	CALL _ZN8pandafun17apply_removeblackERKNS_11removeblackE($9)
	goto $label$7 
	
.LABEL $label$180
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [7216]
	$7 = (int_64)0
	
.LOOP $label$181:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$186 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$185 }
	$3 = ($3 + [165])
	goto $label$184 
	
.LABEL $label$186
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$183 }
	goto $label$182 
	
.LABEL $label$185
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$184
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$183
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$182
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$181 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$187 }
	*($9) = CALL $132()
	CALL _ZN8pandafun11apply_loginERKNS_5loginE($9)
	goto $label$7 
	
.LABEL $label$187
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [7232]
	$7 = (int_64)0
	
.LOOP $label$188:
	if ( ((uint_64)$6 > (uint_64)(int_64)5) ){ goto $label$193 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$192 }
	$3 = ($3 + [165])
	goto $label$191 
	
.LABEL $label$193
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$190 }
	goto $label$189 
	
.LABEL $label$192
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$191
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$190
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$189
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$188 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$194 }
	*($9) = CALL $133()
	CALL _ZN8pandafun12apply_signinERKNS_6signinE($9)
	goto $label$7 
	
.LABEL $label$194
	CALL prints([7248])
	
.LABEL $label$7
	*([0] + [4]) = ($9 + [352])
}

void .FUNC _ZN8pandafun16apply_cancelsellERKNS_10cancelsellE (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [144])
	*([0] + [4]) = $8
	$4 = *($0 + [16])
	if ( ($4 & [1]) ){ goto $label$2 }
	$4 = uint_32($4 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$4 = *(($0 + [20]))
	
.LABEL $label$1
	CALL eosio_assert(($4 <= [257]), [1936])
	CALL require_auth(*($0))
	CALL _ZN8pandafun10pausecheckEv()
	CALL _ZN8pandafun10blackcheckEy(*($0))
	*((($8 + [40]) + [32])) = [0]
	*($8 + [40]) = (int_64)-6222124003695979872
	*($8 + [56]) = (int_64)-1
	*($8 + [64]) = (int_64)0
	$5 = *($0)
	*($8 + [48]) = $5
	*(($8 + [32])) = [0]
	*($8 + [8]) = $5
	*($8) = (int_64)-6222124003695979872
	*($8 + [16]) = (int_64)-1
	*($8 + [24]) = (int_64)0
	$7 = (int_64)-6222124003695979872
	$4 = [0]
	$0 = CALL db_find_i64((int_64)-6222124003695979872, $5, (int_64)-4421664787520290816, *($0 + [8]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $31($8, $0)
	CALL eosio_assert(((int_32)*($4 + [56]) == (int_32)$8), [32])
	$7 = *($8 + [40])
	
.LABEL $label$3
	$3 = ((int_32)$4 != (int_32)[0])
	CALL eosio_assert($3, [2768])
	CALL eosio_assert(((int_64)$7 == (int_64)CALL $fimport$14()), [96])
	*(($0 = CALL $154([52])) + [40]) = ($8 + [40])
	*($0) = *($4)
	*($0 + [8 align=1]) = *($4 + [8 align=1])
	$2 = ($0 + [16])
	CALL memcpy($2, ($4 + [16]), [24])
	CALL eosio_assert([1], [176])
	CALL memcpy(($8 + [96]), $0, [8])
	CALL eosio_assert([1], [176])
	CALL memcpy((($8 + [96]) | [8]), ($0 + [8]), [8])
	*($8 + [88]) = [24]
	CALL eosio_assert([1], [176])
	CALL memcpy((($8 + [96]) + [16]), ($8 + [88]), [1])
	CALL eosio_assert([1], [176])
	CALL memcpy(($8 + [113]), $2, [24])
	$5 = *($0)
	$1 = CALL db_store_i64(*((($8 + [40]) + [8])), (int_64)-6222123794639618048, (int_64)-6222124003695979872, $5, ($8 + [96]), [41])
	*($0 + [44]) = $1
	$2 = (($8 + [40]) + [16])
	if ( (uint_64)($5 <= *($2)) ){ goto $label$4 }
	*($2) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($8 + [88]) = $0
	$5 = *($0)
	*($8 + [96]) = $5
	*($8 + [84]) = $1
	$6 = ($8 + [68])
	$2 = *($6)
	if ( ((uint_32)$2 >= (uint_32)*(($8 + [72]))) ){ goto $label$6 }
	*($2 + [8]) = $5
	*($2 + [16]) = $1
	*($8 + [88]) = [0]
	*($2) = $0
	*($6) = ($2 + [24])
	goto $label$5 
	
.LABEL $label$6
	CALL $29(($8 + [64]), ($8 + [88]), ($8 + [96]), ($8 + [84]))
	
.LABEL $label$5
	$0 = *($8 + [88])
	*($8 + [88]) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	CALL $155($0)
	
.LABEL $label$7
	CALL eosio_assert($3, [2448])
	CALL eosio_assert($3, [2496])
	$0 = CALL db_next_i64(*($4 + [60]), ($8 + [96]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$8 }
	CALL $31($8, $0)
	
.LABEL $label$8
	CALL $39($8, $4)
	$3 = *($8 + [24])
	if ( ($3 == 0) ){ goto $label$9 }
	$2 = ($8 + [28])
	$0 = *($2)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$13 }
	CALL $155($4)
	
.LABEL $label$13
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($8 + [24]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $3
	
.LABEL $label$10
	*($2) = $3
	CALL $155($0)
	
.LABEL $label$9
	$3 = *($8 + [64])
	if ( ($3 == 0) ){ goto $label$14 }
	$2 = ($8 + [68])
	$0 = *($2)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$16 }
	
.LOOP $label$17:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$18 }
	CALL $155($4)
	
.LABEL $label$18
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$17 }
	$0 = *(($8 + [64]))
	goto $label$15 
	
.LABEL $label$16
	$0 = $3
	
.LABEL $label$15
	*($2) = $3
	CALL $155($0)
	
.LABEL $label$14
	*([0] + [4]) = ($8 + [144])
}

void .FUNC $39 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [2528])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [2576])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2640])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $155($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $155($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [60]))
}

int_32 .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [2704])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 $6) == (int_32)[24]), [2720])
	$4 = ($0 + [4])
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - *($4)) > (uint_32)[23]), [528])
	CALL memcpy($1, *($4), [24])
	*($4) = (*($4) + [24])
	return $0
}

int_32 .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [528])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $36($0, ($1 + [16]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [528])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $34 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $154(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $159($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $155($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $155($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $35 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [2528])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [2576])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2640])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $155($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $155($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [44]))
}

int_32 .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [496])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	$7 = ($4 + $6)
	*($8 + [40]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [40]))
	$4 = *($8 + [36])
	
.LABEL $label$7
	*(($6 = CALL $154([52])) + [40]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [528])
	CALL memcpy($6, $4, [8])
	$3 = ($4 + [8])
	CALL eosio_assert(((uint_32)($7 - $3) > (uint_32)[7]), [528])
	CALL memcpy(($6 + [8]), $3, [8])
	*($8 + [36]) = ($4 + [16])
	CALL $36(($8 + [32]), ($6 + [16]))
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [44])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $29(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $155($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	*($3 + [15]) = [24]
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [176])
	CALL memcpy(*($0 + [4]), ($3 + [15]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[23]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [24])
	$2 = (*($0 + [4]) + [24])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [176])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*([0] + [4]) = ($3 + [16])
	return $0
}

void .FUNC _ZN8pandafun10apply_sellERKNS_4sellE (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [176])
	*([0] + [4]) = $9
	$8 = *($0 + [32])
	if ( ($8 & [1]) ){ goto $label$2 }
	$8 = uint_32($8 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$8 = *(($0 + [36]))
	
.LABEL $label$1
	CALL eosio_assert(($8 <= [257]), [1936])
	CALL require_auth(*($0))
	CALL _ZN8pandafun10pausecheckEv()
	CALL _ZN8pandafun10blackcheckEy(*($0))
	$1 = [0]
	*((($9 + [48]) + [32])) = [0]
	*($9 + [48]) = (int_64)-6222124003695979872
	*($9 + [64]) = (int_64)-1
	*($9 + [72]) = (int_64)0
	$5 = *($0)
	*($9 + [56]) = $5
	*((($9 + [8]) + [32])) = [0]
	*($9 + [16]) = $5
	*($9 + [8]) = (int_64)-6222124003695979872
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	$8 = ($0 + [24])
	CALL eosio_assert(((int_64)*($8) == (int_64)1397703940), [1904])
	$6 = ($0 + [16])
	$4 = [0]
	if ( ((uint_64)((int_64)*($0 + [16]) + (int_64)4611686018427387903) >= (uint_64)(int_64)9223372036854775807) ){ goto $label$3 }
	$7 = (uint_64)*($8) >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$4 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$4 = [0]
	
.LABEL $label$3
	CALL eosio_assert($4, [2176])
	CALL eosio_assert(((int_64)*($6) > (int_64)0), [2208])
	$8 = CALL db_find_i64((int_64)-6222124003695979872, $5, (int_64)-4421664787520290816, *($0 + [8]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$8 }
	$1 = CALL $31(($9 + [8]), $8)
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)($9 + [8])), [32])
	
.LABEL $label$8
	CALL eosio_assert(($1 == 0), [2256])
	$7 = *(($0 + [8]))
	$2 = *(($9 + [72]))
	$4 = *(($9 + [76]))
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$9 }
	$8 = ($4 + [-24])
	$1 = ([0] - $2)
	
.LOOP $label$10:
	if ( ((int_64)*(*($8)) == (int_64)$7) ){ goto $label$9 }
	$4 = $8
	$0 = ($8 + [-24])
	$8 = $0
	if ( ((int_32)($0 + $1) != (int_32)[-24]) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$12 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [40]) == (int_32)($9 + [48])), [32])
	goto $label$11 
	
.LABEL $label$12
	$4 = [0]
	$8 = CALL db_find_i64(*($9 + [48]), *(($9 + [56])), (int_64)-6222123794639618048, $7)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$11 }
	$4 = CALL $32(($9 + [48]), $8)
	CALL eosio_assert(((int_32)*($4 + [40]) == (int_32)($9 + [48])), [32])
	
.LABEL $label$11
	$2 = ((int_32)$4 != (int_32)[0])
	CALL eosio_assert($2, [2304])
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$14()), [96])
	*(($0 = CALL $154([68])) + [48]) = (int_64)1398362884
	*($0 + [40]) = (int_64)0
	CALL eosio_assert([1], [2352])
	$3 = ($0 + [40])
	$7 = (int_64)5462355
	$8 = [0]
	
.LOOP $label$15:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	$1 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	$1 = [0]
	
.LABEL $label$13
	CALL eosio_assert($1, [2416])
	*($0 + [56]) = ($9 + [8])
	*($0) = *($4)
	*($0 + [8 align=1]) = *($4 + [8 align=1])
	CALL memcpy(($0 + [16]), ($4 + [16]), [24])
	*(($3 + [8])) = *(($6 + [8]))
	*($3) = *($6)
	*($9 + [168]) = (($9 + [96]) + [57])
	*($9 + [164]) = ($9 + [96])
	*($9 + [160]) = ($9 + [96])
	CALL $33(($9 + [160]), $0)
	$7 = *($0)
	$1 = CALL db_store_i64(*((($9 + [8]) + [8])), (int_64)-4421664787520290816, (int_64)-6222124003695979872, $7, ($9 + [96]), [57])
	*($0 + [60]) = $1
	$8 = (($9 + [8]) + [16])
	if ( (uint_64)($7 <= *($8)) ){ goto $label$18 }
	*($8) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$18
	*($9 + [160]) = $0
	$7 = *($0)
	*($9 + [96]) = $7
	*($9 + [92]) = $1
	$6 = ($9 + [36])
	$8 = *($6)
	if ( ((uint_32)$8 >= (uint_32)*(($9 + [40]))) ){ goto $label$20 }
	*($8 + [8]) = $7
	*($8 + [16]) = $1
	*($9 + [160]) = [0]
	*($8) = $0
	*($6) = ($8 + [24])
	goto $label$19 
	
.LABEL $label$20
	CALL $34(($9 + [32]), ($9 + [160]), ($9 + [96]), ($9 + [92]))
	
.LABEL $label$19
	$8 = *($9 + [160])
	*($9 + [160]) = [0]
	if ( ($8 == 0) ){ goto $label$21 }
	CALL $155($8)
	
.LABEL $label$21
	CALL eosio_assert($2, [2448])
	CALL eosio_assert($2, [2496])
	$8 = CALL db_next_i64(*($4 + [44]), ($9 + [96]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$22 }
	CALL $32(($9 + [48]), $8)
	
.LABEL $label$22
	CALL $35(($9 + [48]), $4)
	$4 = *($9 + [32])
	if ( ($4 == 0) ){ goto $label$23 }
	$1 = ($9 + [36])
	$8 = *($1)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$25 }
	
.LOOP $label$26:
	$8 = ($8 + [-24])
	$0 = *($8)
	*($8) = [0]
	if ( ($0 == 0) ){ goto $label$27 }
	CALL $155($0)
	
.LABEL $label$27
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$26 }
	$8 = *(($9 + [32]))
	goto $label$24 
	
.LABEL $label$25
	$8 = $4
	
.LABEL $label$24
	*($1) = $4
	CALL $155($8)
	
.LABEL $label$23
	$4 = *($9 + [72])
	if ( ($4 == 0) ){ goto $label$28 }
	$1 = ($9 + [76])
	$8 = *($1)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$30 }
	
.LOOP $label$31:
	$8 = ($8 + [-24])
	$0 = *($8)
	*($8) = [0]
	if ( ($0 == 0) ){ goto $label$32 }
	CALL $155($0)
	
.LABEL $label$32
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$31 }
	$8 = *(($9 + [72]))
	goto $label$29 
	
.LABEL $label$30
	$8 = $4
	
.LABEL $label$29
	*($1) = $4
	CALL $155($8)
	
.LABEL $label$28
	*([0] + [4]) = ($9 + [176])
}

int_32 .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [496])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $154([68])) + [48]) = (int_64)1398362884
	*($4 + [40]) = (int_64)0
	CALL eosio_assert([1], [2352])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [2416])
	*($4 + [56]) = $0
	CALL $37(($8 + [32]), $4)
	*($4 + [60]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [60])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $34($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $155($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}