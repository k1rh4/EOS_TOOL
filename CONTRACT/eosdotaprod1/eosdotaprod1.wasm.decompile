(data (i32.const 8192) "Invalid hex character\00\00\01\02\04\07\03\06\05\00")
(data (i32.const 8223) "0123456789abcdef\00malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 8326) "invalid sha256\00")
(data (i32.const 8341) "EOS\00")
(data (i32.const 8345) "{\"code\":\00")
(data (i32.const 8354) ",\"msg\":\"\00")
(data (i32.const 8363) "\"}\00")
(data (i32.const 8366) "game is upgrading\00")
(data (i32.const 8384) "account is freeze\00")
(data (i32.const 8402) "drawchief random hash not existed\00")
(data (i32.const 8436) "drawchief\00")
(data (i32.const 8446) "drawchief client data hash error\00")
(data (i32.const 8479) "make sure you have paid for the card\00")
(data (i32.const 8516) "you have no chief card\00")
(data (i32.const 8539) "random hash is not exist\00")
(data (i32.const 8564) "drawhero|\00")
(data (i32.const 8574) "client data hash is error\00")
(data (i32.const 8600) "account not init\00")
(data (i32.const 8617) "egg_white_count <= 0\00")
(data (i32.const 8638) "egg_red_count <= 0\00")
(data (i32.const 8657) "egg_colorful_count <= 0\00")
(data (i32.const 8681) "wrong type\00")
(data (i32.const 8692) "hero id is not exist\00")
(data (i32.const 8713) "hero grade and level count not > 0\00")
(data (i32.const 8748) "hero grade and level padding count not > 1\00")
(data (i32.const 8791) "invalid param\00")
(data (i32.const 8805) "grade cannot convert purple\00")
(data (i32.const 8833) "not purple card\00")
(data (i32.const 8849) "upgradepurple|\00")
(data (i32.const 8864) "|\00")
(data (i32.const 8866) "client data is error\00")
(data (i32.const 8887) "internal random error\00")
(data (i32.const 8909) "purple id not in range\00")
(data (i32.const 8932) "Special card\00")
(data (i32.const 8945) "grade need > 0\00")
(data (i32.const 8960) "upgradehero|\00")
(data (i32.const 8973) "account is pking\00")
(data (i32.const 8990) "not eos\00")
(data (i32.const 8998) "price is valid\00")
(data (i32.const 9013) "amount must > guide price * 10%\00")
(data (i32.const 9045) "Non-orange card, nor vip account, can only sell duplicate parts\00")
(data (i32.const 9109) "hero grade and level padding count not > count\00")
(data (i32.const 9156) "no find tx hash\00")
(data (i32.const 9172) "no auth\00")
(data (i32.const 9180) "account not in useradded order\00")
(data (i32.const 9211) "order error\00")
(data (i32.const 9223) "level error\00")
(data (i32.const 9235) "other type not support\00")
(data (i32.const 9258) "account not find\00")
(data (i32.const 9275) "opponent account not find\00")
(data (i32.const 9301) "Account camp has been selected\00")
(data (i32.const 9332) "watting\00")
(data (i32.const 9340) "error heros\00")
(data (i32.const 9352) "no steadicam card\00")
(data (i32.const 9370) "wrong grade\00")
(data (i32.const 9382) "wrong medal_id\00")
(data (i32.const 9397) "eosdotaprod3\00")
(data (i32.const 9410) "not qualified\00")
(data (i32.const 9424) "client random number is error\00")
(data (i32.const 9454) "server random number is error\00")
(data (i32.const 9484) "hero not found\00")
(data (i32.const 9499) "Not enough heroes\00")
(data (i32.const 9517) "KEY\00")
(data (i32.const 9521) "unexpected currency symbol\00")
(data (i32.const 9548) "mkstaketoken\00")
(data (i32.const 9561) "eosio.token\00")
(data (i32.const 9573) "amount must > 0\00")
(data (i32.const 9589) "memo error\00")
(data (i32.const 9600) "drawhero\00")
(data (i32.const 9609) "Does not meet the payment selection criteria\00")
(data (i32.const 9654) "Transfer amount is not enough to pay\00")
(data (i32.const 9691) "wrong egg type\00")
(data (i32.const 9706) "account:\00")
(data (i32.const 9715) " drawhero:\00")
(data (i32.const 9726) "active\00")
(data (i32.const 9733) "transfer\00")
(data (i32.const 9742) "eosdotaprod2\00")
(data (i32.const 9755) "buyhero\00")
(data (i32.const 9763) "Purchase quantity checked inventory\00")
(data (i32.const 9799) " sell hero id:\00")
(data (i32.const 9814) " grade:\00")
(data (i32.const 9822) " count:\00")
(data (i32.const 9830) "to:\00")
(data (i32.const 9834) "joinseason\00")
(data (i32.const 9845) "Transfer amount is not enough to pay chief card\00")
(data (i32.const 9893) "sell out\00")
(data (i32.const 9902) " drawchief\00")
(data (i32.const 9913) "wrong level\00")
(data (i32.const 9925) "hero price not find\00")
(data (i32.const 9945) "hero not find\00")
(data (i32.const 9959) "reward is valid\00")
(data (i32.const 9975) "already exists > 0\00")
(data (i32.const 9994) "not exists\00")
(data (i32.const 10005) "mine not exists > 0\00")
(data (i32.const 10025) "unauthorized\00")
(data (i32.const 10038) "mining reward from \00")
(data (i32.const 10058) "DOTA \00")
(data (i32.const 10064) "account exists\00")
(data (i32.const 10079) "activity exists\00")
(data (i32.const 10095) "activity not exists\00")
(data (i32.const 10115) "cannot find system time\00")
(data (i32.const 10139) "it is not my action\00")
(data (i32.const 10159) "string is too long to be a valid symbol_code\00")
(data (i32.const 10204) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 10257) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 18748) "string is too long to be a valid name\00")
(data (i32.const 18786) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 18853) "character is not in allowed character set for names\00")
(data (i32.const 18905) "invalid symbol name\00")
(data (i32.const 18928) "\f4I\00\00")
(data (i32.const 18932) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 18965) "write\00")
(data (i32.const 18971) "multiplication overflow\00")
(data (i32.const 18995) "multiplication underflow\00")
(data (i32.const 19020) "attempt to subtract asset with different symbol\00")
(data (i32.const 19068) "subtraction underflow\00")
(data (i32.const 19090) "subtraction overflow\00")
(data (i32.const 19111) "attempt to add asset with different symbol\00")
(data (i32.const 19154) "addition underflow\00")
(data (i32.const 19173) "addition overflow\00")
(data (i32.const 19191) "error reading iterator\00")
(data (i32.const 19214) "read\00")
(data (i32.const 19219) "get\00")
(data (i32.const 19223) "cannot pass end iterator to erase\00")
(data (i32.const 19257) "cannot increment end iterator\00")
(data (i32.const 19287) "object passed to erase is not in multi_index\00")
(data (i32.const 19332) "cannot erase objects in table of another contract\00")
(data (i32.const 19382) "attempt to remove object that was not in multi_index\00")
(data (i32.const 19435) "cannot create objects in table of another contract\00")
(data (i32.const 19486) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 19537) "cannot pass end iterator to modify\00")
(data (i32.const 19572) "object passed to modify is not in multi_index\00")
(data (i32.const 19618) "cannot modify objects in table of another contract\00")
(data (i32.const 19669) "updater cannot change primary key when modifying an object\00")
(data (i32.const 19728) "next primary key in table is at autoincrement limit\00")
(data (i32.const 19780) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 19834) "cannot decrement iterator at beginning of table\00")
(data (i32.const 19882) "More than 24h trading limit\00")
(data (i32.const 19910) "sacrifice_free_draw_count = 0\00")
(data (i32.const 19940) "free_draw_count >= MAX_FREE_DRAW_COUNT\00")
(data (i32.const 19979) "Free 8 times in 24 hours\00")
(data (i32.const 20016) "\00\00\00\00\00 |@\00\00\00\00\00\c0r@\00\00\00\00\00\c0b@")
(data (i32.const 20048) "F\00\00\00\00\00\00\00A\00\00\00\00\00\00\00<\00\00\00\00\00\00\007\00\00\00\00\00\00\002\00\00\00\00\00\00\00-\00\00\00\00\00\00\00(\00\00\00\00\00\00\00#\00\00\00\00\00\00\00#\00\00\00\00\00\00\00#\00\00\00\00\00\00\00#\00\00\00\00\00\00\00#\00\00\00\00\00\00\00#\00\00\00\00\00\00\00#\00\00\00\00\00\00\00")
(data (i32.const 20160) "d\00\00\00\00\00\00\00_\00\00\00\00\00\00\00Z\00\00\00\00\00\00\00U\00\00\00\00\00\00\00P\00\00\00\00\00\00\00K\00\00\00\00\00\00\00F\00\00\00\00\00\00\00A\00\00\00\00\00\00\00A\00\00\00\00\00\00\00A\00\00\00\00\00\00\00A\00\00\00\00\00\00\00A\00\00\00\00\00\00\00A\00\00\00\00\00\00\00A\00\00\00\00\00\00\00")
(data (i32.const 20272) "%d\00")
(data (i32.const 20275) "%llu\00")
(data (i32.const 20288) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA")
(data (i32.const 20368) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\01\02\03\04\05\06\07\08\t\ff\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
(import "env" "memcpy" (func $fimport$0 (param i32 i32 i32) (result i32)))
(import "env" "eosio_assert" (func $fimport$1 (param i32 i32)))
(import "env" "memset" (func $fimport$2 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$3 (param i32 i32 i32) (result i32)))
(import "env" "ripemd160" (func $fimport$4 (param i32 i32 i32)))
(import "env" "require_auth" (func $fimport$5 (param i64)))
(import "env" "db_lowerbound_i64" (func $fimport$6 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$7 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$8 (param i32 i32) (result i32)))
(import "env" "current_receiver" (func $fimport$9 (result i64)))
(import "env" "sha256" (func $fimport$10 (param i32 i32 i32)))
(import "env" "transaction_size" (func $fimport$11 (result i32)))
(import "env" "read_transaction" (func $fimport$12 (param i32 i32) (result i32)))
(import "env" "current_time" (func $fimport$13 (result i64)))
(import "env" "db_store_i64" (func $fimport$14 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_store" (func $fimport$15 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "__multi3" (func $fimport$16 (param i32 i64 i64 i64 i64)))
(import "env" "send_inline" (func $fimport$17 (param i32 i32)))
(import "env" "db_previous_i64" (func $fimport$18 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$19 (param i64 i64 i64) (result i32)))
(import "env" "eosio_exit" (func $fimport$20 (param i32)))
(import "env" "action_data_size" (func $fimport$21 (result i32)))
(import "env" "read_action_data" (func $fimport$22 (param i32 i32) (result i32)))
(import "env" "db_get_i64" (func $fimport$23 (param i32 i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$24 (param i32)))
(import "env" "db_update_i64" (func $fimport$25 (param i32 i64 i32 i32)))
(import "env" "db_idx64_find_primary" (func $fimport$26 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_update" (func $fimport$27 (param i32 i64 i32)))
(import "env" "abort" (func $fimport$28))
(import "env" "db_idx64_remove" (func $fimport$29 (param i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$30 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_next" (func $fimport$31 (param i32 i32) (result i32)))
(import "env" "prints_l" (func $fimport$32 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$33 (param i64 i64 i64 i64) (result i32)))
(import "env" "__eqtf2" (func $fimport$34 (param i64 i64 i64 i64) (result i32)))
(import "env" "__multf3" (func $fimport$35 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$36 (param i32 i64 i64 i64 i64)))
(import "env" "__subtf3" (func $fimport$37 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$38 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$39 (param i64 i64) (result i32)))
(import "env" "__floatunsitf" (func $fimport$40 (param i32 i32)))
(import "env" "__fixtfsi" (func $fimport$41 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$42 (param i32 i32)))
(import "env" "__extenddftf2" (func $fimport$43 (param i32 f64)))
(import "env" "__extendsftf2" (func $fimport$44 (param i32 f32)))
(import "env" "__divtf3" (func $fimport$45 (param i32 i64 i64 i64 i64)))
(import "env" "__letf2" (func $fimport$46 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfdf2" (func $fimport$47 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$48 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$49 (param i64 i64) (result f32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$50 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$51 (param i32 i32) (result i32)))
(export "memory" (memory $0))
(export "__heap_base" (global $global$1))
(export "__data_end" (global $global$2))
(export "apply" (func $217))
(export "_ZdlPv" (func $353))
(export "_Znwj" (func $351))
(export "_Znaj" (func $352))
(export "_ZdaPv" (func $354))
(export "_ZnwjSt11align_val_t" (func $355))
(export "_ZnajSt11align_val_t" (func $356))
(export "_ZdlPvSt11align_val_t" (func $357))
(export "_ZdaPvSt11align_val_t" (func $358))
(table $0 46 46 anyfunc)
(elem (i32.const 1) $126 $11 $16 $195 $73 $75 $40 $215 $42 $93 $169 $194 $121 $47 $64 $114 $182 $51 $6 $71 $50 $191 $186 $49 $171 $118 $89 $83 $209 $178 $48 $204 $109 $174 $165 $111 $29 $187 $102 $207 $117 $199 $167 $381 $383)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 20625))
(global $global$2 i32 (i32.const 20625))


void .FUNC $121 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [96])
	$global$0 = $2
	*($2 + [48]) = $1
	CALL require_auth(*($0))
	*(($2 + [40])) = [0]
	*($2 + [24]) = (int_64)-1
	$1 = *($0)
	*($2 + [8]) = $1
	*($2 + [16]) = $1
	*($2 + [32]) = (int_64)0
	$3 = CALL db_lowerbound_i64($1, $1, (int_64)-4057297652277051392, (int_64)0)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$3 }
	$3 = CALL $9(($2 + [8]), $3)
	$1 = *($0)
	*($2 + [64]) = ($2 + [48])
	CALL $122(($2 + [8]), $3, $1, ($2 + [64]))
	$4 = *($2 + [32])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = *($0)
	*($2 + [4]) = ($2 + [48])
	*($2) = ($2 + [8])
	*($2 + [88]) = $5
	if ( ((int_64)$1 == (int_64)CALL current_receiver()) ){ goto $label$4 }
	CALL eosio_assert([0], [19435])
	
.LABEL $label$4
	*($2 + [68]) = $2
	*($2 + [64]) = ($2 + [8])
	*($2 + [72]) = ($2 + [88])
	*(($0 = CALL _Znwj([40])) + [16]) = (int_64)0
	*($0 + [24]) = ($2 + [8])
	CALL $123(($2 + [64]), $0)
	*($2 + [80]) = $0
	$1 = *($0)
	*($2 + [64]) = $1
	$4 = *($0 + [28])
	*($2 + [60]) = $4
	$6 = ($2 + [36])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($2 + [40]))) ){ goto $label$7 }
	*($3 + [8]) = $1
	*($3 + [16]) = $4
	*($2 + [80]) = [0]
	*($3) = $0
	*($6) = ($3 + [24])
	$0 = *($2 + [80])
	*($2 + [80]) = [0]
	if ( $0 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $124(($2 + [32]), ($2 + [80]), ($2 + [64]), ($2 + [60]))
	$0 = *($2 + [80])
	*($2 + [80]) = [0]
	if ( ($0 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL _ZdlPv($0)
	
.LABEL $label$5
	$4 = *($2 + [32])
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($2 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$11 }
	CALL _ZdlPv($3)
	
.LABEL $label$11
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($2 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $4
	
.LABEL $label$8
	*($6) = $4
	CALL _ZdlPv($0)
	
.LABEL $label$1
	$global$0 = ($2 + [96])
}

void .FUNC $120 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	$5 = *($1)
	*(($4 + [32])) = [0]
	$6 = (*($1 + [42]) + [1])
	*($1 + [42]) = $6
	*($4 + [24]) = (int_64)0
	$7 = CALL $393([19979])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$3 }
	$8 = (($6 & [255]) <= [7])
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$6 }
	*($4 + [24]) = ($7 << [1])
	$6 = (($4 + [24]) | [1])
	if ( $7 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$9 = (($7 + [16]) & [-16])
	$6 = CALL _Znwj($9)
	*($4 + [24]) = ($9 | [1])
	*($4 + [32]) = $6
	*($4 + [28]) = $7
	
.LABEL $label$5
	CALL memcpy($6, [19979], $7)
	
.LABEL $label$4
	*(($6 + $7)) = [0]
	CALL eosio_assert($8, CALL $5($4, [142], ($4 + [24])))
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$7 }
	CALL _ZdlPv(*($4 + [32]))
	
.LABEL $label$7
	$6 = ($1 + [42])
	*($1 + [41]) = (*($1 + [41]) + [1])
	$8 = ($1 + [41])
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$8 }
	CALL eosio_assert([0], [19669])
	
.LABEL $label$8
	$3 = $3
	$7 = ($3 + [-64])
	$global$0 = $7
	*($4 + [4]) = $7
	*($4) = $7
	*($4 + [8]) = ($3 + [-13])
	*($4 + [16]) = $4
	*($4 + [48]) = $8
	*($4 + [52]) = $6
	*($4 + [24]) = $1
	*($4 + [28]) = ($1 + [8])
	*($4 + [32]) = ($1 + [16])
	*($4 + [36]) = ($1 + [24])
	*($4 + [40]) = ($1 + [32])
	*($4 + [44]) = ($1 + [40])
	*($4 + [56]) = ($1 + [48])
	CALL $203(($4 + [24]), ($4 + [16]))
	CALL db_update_i64(*($1 + [60]), $2, $7, [51])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($4 + [64])
	return (unreachable)
	
.LABEL $label$3
	CALL $359(($4 + [24]))
}

void .FUNC $364 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL _Znwj(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL _ZdlPv($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $126 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_64 $15
	$5 = ($global$0 - [1648])
	$global$0 = $5
	$6 = *($0)
	if ( ((int_64)$6 == (int_64)$1) ){ goto $label$1 }
	if ( ((int_64)$6 != (int_64)$2) ){ goto $label$1 }
	$7 = CALL $7($0)
	*(($5 + [1640])) = [0]
	*($5 + [1632]) = (int_64)0
	$8 = CALL $393([8366])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$5 }
	$9 = ((int_32)$7 ^ (int_32)[1])
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$8 }
	*($5 + [1632]) = ($8 << [1])
	$7 = (($5 + [1632]) | [1])
	if ( $8 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$10 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($10)
	*($5 + [1632]) = ($10 | [1])
	*($5 + [1640]) = $7
	*($5 + [1636]) = $8
	
.LABEL $label$7
	CALL memcpy($7, [8366], $8)
	
.LABEL $label$6
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [159], ($5 + [1632])))
	if ( ((*($5 + [1632]) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*($5 + [1640]))
	
.LABEL $label$9
	$7 = CALL $8($0, $1)
	*(($5 + [1624])) = [0]
	*($5 + [1616]) = (int_64)0
	$8 = CALL $393([8384])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$4 }
	$9 = ((int_32)$7 ^ (int_32)[1])
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$12 }
	*($5 + [1616]) = ($8 << [1])
	$7 = (($5 + [1616]) | [1])
	if ( $8 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$10 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($10)
	*($5 + [1616]) = ($10 | [1])
	*($5 + [1624]) = $7
	*($5 + [1620]) = $8
	
.LABEL $label$11
	CALL memcpy($7, [8384], $8)
	
.LABEL $label$10
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [157], ($5 + [1616])))
	if ( ((*($5 + [1616]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*($5 + [1624]))
	
.LABEL $label$13
	$7 = CALL $8($0, $2)
	*(($5 + [1608])) = [0]
	*($5 + [1600]) = (int_64)0
	$8 = CALL $393([8384])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$3 }
	$9 = ((int_32)$7 ^ (int_32)[1])
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$16 }
	*($5 + [1600]) = ($8 << [1])
	$7 = (($5 + [1600]) | [1])
	if ( $8 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$10 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($10)
	*($5 + [1600]) = ($10 | [1])
	*($5 + [1608]) = $7
	*($5 + [1604]) = $8
	
.LABEL $label$15
	CALL memcpy($7, [8384], $8)
	
.LABEL $label$14
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [157], ($5 + [1600])))
	if ( ((*($5 + [1600]) & [1]) == 0) ){ goto $label$17 }
	CALL _ZdlPv(*($5 + [1608]))
	
.LABEL $label$17
	$8 = CALL $393([8341])
	if ( ($8 <= [8]) ){ goto $label$20 }
	CALL eosio_assert([0], [10159])
	goto $label$19 
	
.LABEL $label$20
	if ( ($8 == 0) ){ goto $label$18 }
	
.LABEL $label$19
	$2 = (int_64)0
	
.LOOP $label$21:
	$7 = *(($8 + [8340]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$22 }
	CALL eosio_assert([0], [10204])
	
.LABEL $label$22
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$21 }
	goto $label$2 
	
.LABEL $label$18
	$2 = (int_64)0
	goto $label$2 
	
.LABEL $label$5
	CALL $359(($5 + [1632]))
	
.LABEL $label$4
	CALL $359(($5 + [1616]))
	
.LABEL $label$3
	CALL $359(($5 + [1600]))
	
.LABEL $label$2
	$6 = *($3 + [8])
	if ( ((int_64)$6 != (int_64)((int_64)((int_64)$2 << (int_64)8) | (int_64)4)) ){ goto $label$32 }
	*(($5 + [1592])) = [0]
	*($5 + [1584]) = (int_64)0
	$8 = CALL $393([9521])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$27 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$31 }
	*($5 + [1584]) = ($8 << [1])
	$7 = (($5 + [1584]) | [1])
	if ( $8 ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$32
	$8 = CALL $393([9517])
	if ( ($8 <= [8]) ){ goto $label$34 }
	CALL eosio_assert([0], [10159])
	goto $label$33 
	
.LABEL $label$34
	if ( ($8 == 0) ){ goto $label$28 }
	
.LABEL $label$33
	$2 = (int_64)0
	
.LOOP $label$35:
	$7 = *(($8 + [9516]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$36 }
	CALL eosio_assert([0], [10204])
	
.LABEL $label$36
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$35 }
	goto $label$26 
	
.LABEL $label$31
	$9 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($9)
	*($5 + [1584]) = ($9 | [1])
	*($5 + [1592]) = $7
	*($5 + [1588]) = $8
	
.LABEL $label$30
	CALL memcpy($7, [9521], $8)
	
.LABEL $label$29
	*(($7 + $8)) = [0]
	CALL eosio_assert([1], CALL $5($5, [115], ($5 + [1584])))
	if ( ((*($5 + [1584]) & [1]) == 0) ){ goto $label$25 }
	CALL _ZdlPv(*($5 + [1592]))
	goto $label$25 
	
.LABEL $label$28
	$2 = (int_64)0
	goto $label$26 
	
.LABEL $label$27
	CALL $359(($5 + [1584]))
	
.LABEL $label$26
	*(($5 + [1592])) = [0]
	*($5 + [1584]) = (int_64)0
	$8 = CALL $393([9521])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$24 }
	$9 = ((int_64)$6 == (int_64)((int_64)((int_64)$2 << (int_64)8) | (int_64)4))
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$39 }
	*($5 + [1584]) = ($8 << [1])
	$7 = (($5 + [1584]) | [1])
	if ( $8 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$39
	$10 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($10)
	*($5 + [1584]) = ($10 | [1])
	*($5 + [1592]) = $7
	*($5 + [1588]) = $8
	
.LABEL $label$38
	CALL memcpy($7, [9521], $8)
	
.LABEL $label$37
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [115], ($5 + [1584])))
	if ( ((*($5 + [1584]) & [1]) == 0) ){ goto $label$25 }
	CALL _ZdlPv(*($5 + [1592]))
	
.LABEL $label$25
	$8 = CALL $393([9517])
	if ( ($8 <= [8]) ){ goto $label$42 }
	CALL eosio_assert([0], [10159])
	goto $label$41 
	
.LABEL $label$42
	if ( ($8 == 0) ){ goto $label$40 }
	
.LABEL $label$41
	$2 = (int_64)0
	
.LOOP $label$43:
	$7 = *(($8 + [9516]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$44 }
	CALL eosio_assert([0], [10204])
	
.LABEL $label$44
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$43 }
	goto $label$23 
	
.LABEL $label$40
	$2 = (int_64)0
	goto $label$23 
	
.LABEL $label$24
	CALL $359(($5 + [1584]))
	
.LABEL $label$23
	$11 = *(($3 + [8]))
	*((($5 + [1568]) + [8])) = [0]
	*($5 + [1568]) = (int_64)0
	$12 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	$9 = ( [9548] ? [9561] : ((int_64)$11 == (int_64)$12) )
	$8 = CALL $393($9)
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$55 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$58 }
	*($5 + [1568]) = ($8 << [1])
	$7 = (($5 + [1568]) | [1])
	if ( $8 ){ goto $label$57 }
	goto $label$56 
	
.LABEL $label$58
	$10 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($10)
	*($5 + [1568]) = ($10 | [1])
	*($5 + [1576]) = $7
	*($5 + [1572]) = $8
	
.LABEL $label$57
	CALL memcpy($7, $9, $8)
	
.LABEL $label$56
	*(($7 + $8)) = [0]
	$7 = [0]
	if ( ((uint_64)((int_64)*($3) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$59 }
	$2 = (uint_64)*(($3 + [8])) >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$61:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$60 }
	$6 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$62 }
	$2 = $6
	$7 = [1]
	$9 = $8
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$61 }
	goto $label$59 
	
.LABEL $label$62
	$2 = $6
	
.LOOP $label$63:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$60 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$9 = ($8 + [1])
	$8 = $9
	if ( $7 ){ goto $label$63 }
	$7 = [1]
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$61 }
	goto $label$59 
	
.LABEL $label$60
	$7 = [0]
	
.LABEL $label$59
	*(($5 + [1560])) = [0]
	*($5 + [1552]) = (int_64)0
	$8 = CALL $393([8998])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$54 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$66 }
	*($5 + [1552]) = ($8 << [1])
	$9 = (($5 + [1552]) | [1])
	if ( $8 ){ goto $label$65 }
	goto $label$64 
	
.LABEL $label$66
	$10 = (($8 + [16]) & [-16])
	$9 = CALL _Znwj($10)
	*($5 + [1552]) = ($10 | [1])
	*($5 + [1560]) = $9
	*($5 + [1556]) = $8
	
.LABEL $label$65
	CALL memcpy($9, [8998], $8)
	
.LABEL $label$64
	*(($9 + $8)) = [0]
	CALL eosio_assert($7, CALL $5($5, [116], ($5 + [1552])))
	if ( ((*($5 + [1552]) & [1]) == 0) ){ goto $label$67 }
	CALL _ZdlPv(*($5 + [1560]))
	
.LABEL $label$67
	*(($5 + [1544])) = [0]
	*($5 + [1536]) = (int_64)0
	$2 = *($3)
	$8 = CALL $393([9573])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$53 }
	$9 = ((int_64)$2 > (int_64)0)
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$70 }
	*($5 + [1536]) = ($8 << [1])
	$7 = (($5 + [1536]) | [1])
	if ( $8 ){ goto $label$69 }
	goto $label$68 
	
.LABEL $label$70
	$10 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($10)
	*($5 + [1536]) = ($10 | [1])
	*($5 + [1544]) = $7
	*($5 + [1540]) = $8
	
.LABEL $label$69
	CALL memcpy($7, [9573], $8)
	
.LABEL $label$68
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [116], ($5 + [1536])))
	if ( ((*($5 + [1536]) & [1]) == 0) ){ goto $label$71 }
	CALL _ZdlPv(*($5 + [1544]))
	
.LABEL $label$71
	*(($5 + [1528])) = [0]
	*(($5 + [1534])) = [0]
	*($5 + [1512]) = (int_64)-1
	*($5 + [1520]) = (int_64)0
	*($5 + [1532]) = [0]
	$2 = *($0)
	*($5 + [1496]) = $2
	*($5 + [1504]) = $2
	$8 = CALL db_find_i64($2, $2, (int_64)-3020371566920728576, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$48 }
	$10 = CALL $10(($5 + [1496]), $8)
	if ( ((int_32)*($10 + [88]) == (int_32)($5 + [1496])) ){ goto $label$72 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$72
	*($5 + [1488]) = *($10 + [8])
	*($5 + [1480]) = *($10 + [16])
	*($5 + [1472]) = *($10 + [24])
	*($5 + [1471]) = *($10 + [80])
	*($5 + [1470]) = *($10 + [81])
	$13 = *($4)
	if ( ($13 & [1]) ){ goto $label$74 }
	$9 = ($4 + [1])
	$7 = uint_32($13 >> [1])
	if ( ($7 == 0) ){ goto $label$73 }
	goto $label$52 
	
.LABEL $label$74
	$9 = *($4 + [8])
	$7 = *($4 + [4])
	if ( $7 ){ goto $label$52 }
	
.LABEL $label$73
	$8 = $9
	$7 = [1]
	if ( (($13 & [1]) == 0) ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$55
	CALL $359(($5 + [1568]))
	
.LABEL $label$54
	CALL $359(($5 + [1552]))
	
.LABEL $label$53
	CALL $359(($5 + [1536]))
	
.LABEL $label$52
	$13 = ($9 + $7)
	$8 = $9
	
.LOOP $label$76:
	if ( (CALL $378(*($8)) == 0) ){ goto $label$75 }
	$8 = ($8 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$76 }
	$8 = $13
	
.LABEL $label$75
	$7 = [1]
	if ( (*($4) & [1]) ){ goto $label$50 }
	
.LABEL $label$51
	$7 = ($4 + $7)
	goto $label$49 
	
.LABEL $label$50
	$7 = *($4 + [8])
	
.LABEL $label$49
	CALL $372($4, ($9 - $7), ($8 - $9))
	$8 = *($4)
	if ( ($8 & [1]) ){ goto $label$83 }
	$14 = ($4 + [1])
	$8 = ($14 + uint_32($8 >> [1]))
	if ( ((int_32)$8 != (int_32)$14) ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$83
	$14 = *($4 + [8])
	$8 = ($14 + *($4 + [4]))
	if ( ((int_32)$8 == (int_32)$14) ){ goto $label$81 }
	
.LABEL $label$82
	if ( (CALL $378(*(($8 + [-1]))) == 0) ){ goto $label$81 }
	$9 = ($14 + [1])
	
.LOOP $label$84:
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$80 }
	$7 = ($8 + [-2])
	$13 = ($8 + [-1])
	$8 = $13
	if ( CALL $378(*($7)) ){ goto $label$84 }
	$8 = $13
	
.LABEL $label$81
	$7 = [1]
	$13 = *($4)
	if ( ($13 & [1]) ){ goto $label$79 }
	goto $label$78 
	
.LABEL $label$80
	$8 = $14
	$7 = [1]
	$13 = *($4)
	if ( (($13 & [1]) == 0) ){ goto $label$78 }
	
.LABEL $label$79
	$9 = *($4 + [8])
	$7 = ($9 + *($4 + [4]))
	goto $label$77 
	
.LABEL $label$78
	$9 = ($4 + $7)
	$7 = ($9 + uint_32($13 >> $7))
	
.LABEL $label$77
	CALL $372($4, ($8 - $9), ($7 - $8))
	*($5 + [1464]) = [0]
	*($5 + [1456]) = (int_64)0
	CALL $1($4, [124], ($5 + [1456]))
	*(($5 + [1448])) = [0]
	*($5 + [1440]) = (int_64)0
	$7 = ((int_32)(*($5 + [1460]) - *($5 + [1456])) / (int_32)[12])
	$8 = CALL $393([9589])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$128 }
	$9 = ((uint_32)$7 > (uint_32)[1])
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$131 }
	*($5 + [1440]) = ($8 << [1])
	$7 = (($5 + [1440]) | [1])
	if ( $8 ){ goto $label$130 }
	goto $label$129 
	
.LABEL $label$131
	$4 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($4)
	*($5 + [1440]) = ($4 | [1])
	*($5 + [1448]) = $7
	*($5 + [1444]) = $8
	
.LABEL $label$130
	CALL memcpy($7, [9589], $8)
	
.LABEL $label$129
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [144], ($5 + [1440])))
	if ( ((*($5 + [1440]) & [1]) == 0) ){ goto $label$132 }
	CALL _ZdlPv(*($5 + [1448]))
	
.LABEL $label$132
	$8 = *($5 + [1456])
	$7 = *($8)
	$9 = CALL $393([9600])
	if ( ((int_32)$9 != (int_32)( *($8 + [4]) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$193 }
	if ( (CALL $374($8, [0], [-1], [9600], $9) == 0) ){ goto $label$192 }
	
.LABEL $label$193
	$8 = *($5 + [1456])
	$7 = *($8)
	$9 = CALL $393([9755])
	if ( ((int_32)$9 != (int_32)( *($8 + [4]) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$194 }
	if ( (CALL $374($8, [0], [-1], [9755], $9) == 0) ){ goto $label$191 }
	
.LABEL $label$194
	$8 = *($5 + [1456])
	$7 = *($8)
	$9 = CALL $393([9834])
	if ( ((int_32)$9 != (int_32)( *($8 + [4]) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$195 }
	if ( (CALL $374($8, [0], [-1], [9834], $9) == 0) ){ goto $label$190 }
	
.LABEL $label$195
	$8 = *($5 + [1456])
	$7 = *($8)
	$9 = CALL $393([8436])
	if ( ((int_32)$9 != (int_32)( *($8 + [4]) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$196 }
	if ( (CALL $374($8, [0], [-1], [8436], $9) == 0) ){ goto $label$189 }
	
.LABEL $label$196
	*(($5 + [288])) = [0]
	*($5 + [280]) = (int_64)0
	$8 = CALL $393([8681])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$127 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$199 }
	*($5 + [280]) = ($8 << [1])
	$7 = (($5 + [280]) | [1])
	if ( $8 ){ goto $label$198 }
	goto $label$197 
	
.LABEL $label$199
	$9 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($9)
	*($5 + [280]) = ($9 | [1])
	*($5 + [288]) = $7
	*($5 + [284]) = $8
	
.LABEL $label$198
	CALL memcpy($7, [8681], $8)
	
.LABEL $label$197
	*(($7 + $8)) = [0]
	CALL eosio_assert([0], CALL $5($5, [129], ($5 + [280])))
	if ( ((*($5 + [280]) & [1]) == 0) ){ goto $label$85 }
	CALL _ZdlPv(*($5 + [288]))
	$9 = *($5 + [1456])
	if ( ($9 == 0) ){ goto $label$48 }
	goto $label$47 
	
.LABEL $label$192
	*(($5 + [1432])) = [0]
	*($5 + [1424]) = (int_64)0
	$9 = *($10 + [32])
	$8 = CALL $393([9609])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$126 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$188 }
	*($5 + [1424]) = ($8 << [1])
	$7 = (($5 + [1424]) | [1])
	if ( $8 ){ goto $label$187 }
	goto $label$186 
	
.LABEL $label$191
	$8 = CALL $393([8341])
	if ( ($8 <= [8]) ){ goto $label$185 }
	CALL eosio_assert([0], [10159])
	goto $label$184 
	
.LABEL $label$190
	*(($5 + [496])) = [0]
	*($5 + [488]) = (int_64)0
	$7 = *($5 + [1456])
	$9 = *($5 + [1460])
	$8 = CALL $393([9589])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$124 }
	$9 = ((int_32)($9 - $7) == (int_32)[24])
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$183 }
	*($5 + [488]) = ($8 << [1])
	$7 = (($5 + [488]) | [1])
	if ( $8 ){ goto $label$182 }
	goto $label$181 
	
.LABEL $label$189
	if ( ((int_64)$11 != (int_64)$12) ){ goto $label$180 }
	*(($5 + [1176])) = [0]
	*($5 + [1160]) = (int_64)-1
	*($5 + [1168]) = (int_64)0
	$2 = *($0)
	*($5 + [1144]) = $2
	*($5 + [1152]) = $2
	$8 = CALL db_find_i64($2, $2, (int_64)4732883325973168128, (int_64)4)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$170 }
	$8 = CALL $127(($5 + [1144]), $8)
	if ( ((int_32)*($8 + [16]) == (int_32)($5 + [1144])) ){ goto $label$200 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$200
	*($5 + [1244]) = $8
	$2 = *($8 + [8])
	*($5 + [1240]) = ($5 + [1144])
	$8 = CALL $393([9517])
	if ( ((uint_64)$2 > (uint_64)(int_64)9) ){ goto $label$169 }
	if ( ($8 <= [8]) ){ goto $label$155 }
	CALL eosio_assert([0], [10159])
	goto $label$154 
	
.LABEL $label$188
	$4 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($4)
	*($5 + [1424]) = ($4 | [1])
	*($5 + [1432]) = $7
	*($5 + [1428]) = $8
	
.LABEL $label$187
	CALL memcpy($7, [9609], $8)
	
.LABEL $label$186
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [145], ($5 + [1424])))
	if ( ((*($5 + [1424]) & [1]) == 0) ){ goto $label$201 }
	CALL _ZdlPv(*($5 + [1432]))
	
.LABEL $label$201
	*(($5 + [1416])) = [0]
	*($5 + [1408]) = (int_64)0
	$7 = *($5 + [1456])
	$9 = *($5 + [1460])
	$8 = CALL $393([9589])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$125 }
	$9 = ((int_32)($9 - $7) == (int_32)[24])
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$204 }
	*($5 + [1408]) = ($8 << [1])
	$7 = (($5 + [1408]) | [1])
	if ( $8 ){ goto $label$203 }
	goto $label$202 
	
.LABEL $label$204
	$4 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($4)
	*($5 + [1408]) = ($4 | [1])
	*($5 + [1416]) = $7
	*($5 + [1412]) = $8
	
.LABEL $label$203
	CALL memcpy($7, [9589], $8)
	
.LABEL $label$202
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [144], ($5 + [1408])))
	if ( ((*($5 + [1408]) & [1]) == 0) ){ goto $label$205 }
	CALL _ZdlPv(*($5 + [1416]))
	
.LABEL $label$205
	$8 = *($5 + [1456])
	if ( (*($8 + [12]) & [1]) ){ goto $label$207 }
	$8 = (($8 + [12]) + [1])
	goto $label$206 
	
.LABEL $label$207
	$8 = *(($8 + [20]))
	
.LABEL $label$206
	$15 = CALL $390($8, [0], [10])
	if ( ((int_64)$15 == (int_64)3) ){ goto $label$178 }
	if ( ((int_64)$15 == (int_64)2) ){ goto $label$179 }
	if ( ((int_64)$15 != (int_64)1) ){ goto $label$177 }
	if ( ((int_64)$11 != (int_64)$12) ){ goto $label$171 }
	$8 = CALL $393([9517])
	if ( ($8 <= [8]) ){ goto $label$164 }
	CALL eosio_assert([0], [10159])
	goto $label$163 
	
.LABEL $label$185
	if ( ($8 == 0) ){ goto $label$176 }
	
.LABEL $label$184
	$2 = (int_64)0
	
.LOOP $label$208:
	$7 = *(($8 + [8340]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$209 }
	CALL eosio_assert([0], [10204])
	
.LABEL $label$209
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$208 }
	goto $label$86 
	
.LABEL $label$183
	$0 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($0)
	*($5 + [488]) = ($0 | [1])
	*($5 + [496]) = $7
	*($5 + [492]) = $8
	
.LABEL $label$182
	CALL memcpy($7, [9589], $8)
	
.LABEL $label$181
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [144], ($5 + [488])))
	if ( ((*($5 + [488]) & [1]) == 0) ){ goto $label$210 }
	CALL _ZdlPv(*($5 + [496]))
	
.LABEL $label$210
	$8 = *($5 + [1456])
	if ( (*($8 + [12]) & [1]) ){ goto $label$212 }
	$8 = (($8 + [12]) + [1])
	goto $label$211 
	
.LABEL $label$212
	$8 = *(($8 + [20]))
	
.LABEL $label$211
	CALL $390($8, [0], [10])
	*(($5 + [480])) = [0]
	*($5 + [472]) = (int_64)0
	$8 = CALL $393([9332])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$123 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$215 }
	*($5 + [472]) = ($8 << [1])
	$7 = (($5 + [472]) | [1])
	if ( $8 ){ goto $label$214 }
	goto $label$213 
	
.LABEL $label$215
	$9 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($9)
	*($5 + [472]) = ($9 | [1])
	*($5 + [480]) = $7
	*($5 + [476]) = $8
	
.LABEL $label$214
	CALL memcpy($7, [9332], $8)
	
.LABEL $label$213
	*(($7 + $8)) = [0]
	CALL eosio_assert([0], CALL $5($5, [128], ($5 + [472])))
	if ( ((*($5 + [472]) & [1]) == 0) ){ goto $label$85 }
	CALL _ZdlPv(*($5 + [480]))
	$9 = *($5 + [1456])
	if ( $9 ){ goto $label$47 }
	goto $label$48 
	
.LABEL $label$180
	$8 = CALL $393([8341])
	if ( ($8 <= [8]) ){ goto $label$175 }
	CALL eosio_assert([0], [10159])
	goto $label$174 
	
.LABEL $label$179
	if ( ((int_64)$11 != (int_64)$12) ){ goto $label$173 }
	$8 = CALL $393([9517])
	if ( ($8 <= [8]) ){ goto $label$168 }
	CALL eosio_assert([0], [10159])
	goto $label$167 
	
.LABEL $label$178
	if ( ((int_64)$11 != (int_64)$12) ){ goto $label$172 }
	$8 = CALL $393([9517])
	if ( ($8 <= [8]) ){ goto $label$166 }
	CALL eosio_assert([0], [10159])
	goto $label$165 
	
.LABEL $label$177
	CALL eosio_assert([0], [9691])
	goto $label$101 
	
.LABEL $label$176
	$2 = (int_64)0
	goto $label$86 
	
.LABEL $label$175
	if ( ($8 == 0) ){ goto $label$160 }
	
.LABEL $label$174
	$6 = (int_64)0
	
.LOOP $label$216:
	$7 = *(($8 + [8340]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$217 }
	CALL eosio_assert([0], [10204])
	
.LABEL $label$217
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$216 }
	goto $label$94 
	
.LABEL $label$173
	$7 = *($5 + [1471])
	$8 = CALL $393([8341])
	if ( ($7 == 0) ){ goto $label$157 }
	if ( ($8 <= [8]) ){ goto $label$151 }
	CALL eosio_assert([0], [10159])
	goto $label$150 
	
.LABEL $label$172
	$7 = *($5 + [1470])
	$8 = CALL $393([8341])
	if ( ($7 == 0) ){ goto $label$156 }
	if ( ($8 <= [8]) ){ goto $label$149 }
	CALL eosio_assert([0], [10159])
	goto $label$148 
	
.LABEL $label$171
	$8 = CALL $393([8341])
	if ( ($8 <= [8]) ){ goto $label$162 }
	CALL eosio_assert([0], [10159])
	goto $label$161 
	
.LABEL $label$170
	*($5 + [1244]) = [0]
	*($5 + [1240]) = ($5 + [1144])
	$8 = CALL $393([9517])
	if ( ($8 <= [8]) ){ goto $label$159 }
	CALL eosio_assert([0], [10159])
	goto $label$158 
	
.LABEL $label$169
	if ( ($8 <= [8]) ){ goto $label$153 }
	CALL eosio_assert([0], [10159])
	goto $label$152 
	
.LABEL $label$168
	if ( ($8 == 0) ){ goto $label$147 }
	
.LABEL $label$167
	$6 = (int_64)0
	
.LOOP $label$218:
	$7 = *(($8 + [9516]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$219 }
	CALL eosio_assert([0], [10204])
	
.LABEL $label$219
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$218 }
	goto $label$103 
	
.LABEL $label$166
	if ( ($8 == 0) ){ goto $label$144 }
	
.LABEL $label$165
	$6 = (int_64)0
	
.LOOP $label$220:
	$7 = *(($8 + [9516]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$221 }
	CALL eosio_assert([0], [10204])
	
.LABEL $label$221
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$220 }
	goto $label$106 
	
.LABEL $label$164
	if ( ($8 == 0) ){ goto $label$141 }
	
.LABEL $label$163
	$6 = (int_64)0
	
.LOOP $label$222:
	$7 = *(($8 + [9516]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$223 }
	CALL eosio_assert([0], [10204])
	
.LABEL $label$223
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$222 }
	goto $label$109 
	
.LABEL $label$162
	if ( ($8 == 0) ){ goto $label$140 }
	
.LABEL $label$161
	$6 = (int_64)0
	
.LOOP $label$224:
	$7 = *(($8 + [8340]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$225 }
	CALL eosio_assert([0], [10204])
	
.LABEL $label$225
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$224 }
	goto $label$110 
	
.LABEL $label$160
	$6 = (int_64)0
	goto $label$94 
	
.LABEL $label$159
	if ( ($8 == 0) ){ goto $label$139 }
	
.LABEL $label$158
	$6 = (int_64)0
	
.LOOP $label$226:
	$7 = *(($8 + [9516]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$227 }
	CALL eosio_assert([0], [10204])
	
.LABEL $label$227
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$226 }
	goto $label$114 
	
.LABEL $label$157
	if ( ($8 <= [8]) ){ goto $label$146 }
	CALL eosio_assert([0], [10159])
	goto $label$145 
	
.LABEL $label$156
	if ( ($8 <= [8]) ){ goto $label$143 }
	CALL eosio_assert([0], [10159])
	goto $label$142 
	
.LABEL $label$155
	if ( ($8 == 0) ){ goto $label$138 }
	
.LABEL $label$154
	$6 = (int_64)0
	
.LOOP $label$228:
	$7 = *(($8 + [9516]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$229 }
	CALL eosio_assert([0], [10204])
	
.LABEL $label$229
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$228 }
	goto $label$117 
	
.LABEL $label$153
	if ( ($8 == 0) ){ goto $label$137 }
	
.LABEL $label$152
	$6 = (int_64)0
	
.LOOP $label$230:
	$7 = *(($8 + [9516]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$231 }
	CALL eosio_assert([0], [10204])
	
.LABEL $label$231
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$230 }
	goto $label$118 
	
.LABEL $label$151
	if ( ($8 == 0) ){ goto $label$136 }
	
.LABEL $label$150
	$6 = (int_64)0
	
.LOOP $label$232:
	$7 = *(($8 + [8340]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$233 }
	CALL eosio_assert([0], [10204])
	
.LABEL $label$233
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$232 }
	goto $label$119 
	
.LABEL $label$149
	if ( ($8 == 0) ){ goto $label$135 }
	
.LABEL $label$148
	$6 = (int_64)0
	
.LOOP $label$234:
	$7 = *(($8 + [8340]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$235 }
	CALL eosio_assert([0], [10204])
	
.LABEL $label$235
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$234 }
	goto $label$120 
	
.LABEL $label$147
	$6 = (int_64)0
	goto $label$103 
	
.LABEL $label$146
	if ( ($8 == 0) ){ goto $label$134 }
	
.LABEL $label$145
	$6 = (int_64)0
	
.LOOP $label$236:
	$7 = *(($8 + [8340]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$237 }
	CALL eosio_assert([0], [10204])
	
.LABEL $label$237
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$236 }
	goto $label$121 
	
.LABEL $label$144
	$6 = (int_64)0
	goto $label$106 
	
.LABEL $label$143
	if ( ($8 == 0) ){ goto $label$133 }
	
.LABEL $label$142
	$6 = (int_64)0
	
.LOOP $label$238:
	$7 = *(($8 + [8340]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$239 }
	CALL eosio_assert([0], [10204])
	
.LABEL $label$239
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$238 }
	goto $label$122 
	
.LABEL $label$141
	$6 = (int_64)0
	goto $label$109 
	
.LABEL $label$140
	$6 = (int_64)0
	goto $label$110 
	
.LABEL $label$139
	$6 = (int_64)0
	goto $label$114 
	
.LABEL $label$138
	$6 = (int_64)0
	goto $label$117 
	
.LABEL $label$137
	$6 = (int_64)0
	goto $label$118 
	
.LABEL $label$136
	$6 = (int_64)0
	goto $label$119 
	
.LABEL $label$135
	$6 = (int_64)0
	goto $label$120 
	
.LABEL $label$134
	$6 = (int_64)0
	goto $label$121 
	
.LABEL $label$133
	$6 = (int_64)0
	goto $label$122 
	
.LABEL $label$128
	CALL $359(($5 + [1440]))
	
.LABEL $label$127
	CALL $359(($5 + [280]))
	
.LABEL $label$126
	CALL $359(($5 + [1424]))
	
.LABEL $label$125
	CALL $359(($5 + [1408]))
	
.LABEL $label$124
	CALL $359(($5 + [488]))
	
.LABEL $label$123
	CALL $359(($5 + [472]))
	
.LABEL $label$122
	$2 = ((int_64)$6 & (int_64)72057594037927935)
	$11 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)4)
	$8 = [0]
	
.LOOP $label$242:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$241 }
	$6 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$243 }
	$2 = $6
	$7 = $8
	$8 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$242 }
	goto $label$240 
	
.LABEL $label$243
	$2 = $6
	
.LOOP $label$244:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$241 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$9 = ($8 + [1])
	$8 = $9
	if ( $7 ){ goto $label$244 }
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$242 }
	goto $label$240 
	
.LABEL $label$241
	CALL eosio_assert([0], [18905])
	
.LABEL $label$240
	if ( ((int_64)*(($3 + [8])) == (int_64)$11) ){ goto $label$245 }
	CALL eosio_assert([0], [10257])
	
.LABEL $label$245
	*((($5 + [1280]) + [8])) = [0]
	*($5 + [1280]) = (int_64)0
	$2 = *($3)
	$8 = CALL $393([9654])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$246 }
	$9 = ((int_64)$2 > (int_64)99999)
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$249 }
	*($5 + [1280]) = ($8 << [1])
	$7 = (($5 + [1280]) | [1])
	if ( $8 ){ goto $label$248 }
	goto $label$247 
	
.LABEL $label$249
	$4 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($4)
	*($5 + [1280]) = ($4 | [1])
	*($5 + [1288]) = $7
	*($5 + [1284]) = $8
	
.LABEL $label$248
	CALL memcpy($7, [9654], $8)
	
.LABEL $label$247
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [146], ($5 + [1280])))
	if ( ((*($5 + [1280]) & [1]) == 0) ){ goto $label$105 }
	CALL _ZdlPv(*($5 + [1288]))
	goto $label$105 
	
.LABEL $label$246
	CALL $359(($5 + [1280]))
	
.LABEL $label$121
	$2 = ((int_64)$6 & (int_64)72057594037927935)
	$11 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)4)
	$8 = [0]
	
.LOOP $label$252:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$251 }
	$6 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$253 }
	$2 = $6
	$7 = $8
	$8 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$252 }
	goto $label$250 
	
.LABEL $label$253
	$2 = $6
	
.LOOP $label$254:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$251 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$9 = ($8 + [1])
	$8 = $9
	if ( $7 ){ goto $label$254 }
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$252 }
	goto $label$250 
	
.LABEL $label$251
	CALL eosio_assert([0], [18905])
	
.LABEL $label$250
	if ( ((int_64)*(($3 + [8])) == (int_64)$11) ){ goto $label$255 }
	CALL eosio_assert([0], [10257])
	
.LABEL $label$255
	*((($5 + [1328]) + [8])) = [0]
	*($5 + [1328]) = (int_64)0
	$2 = *($3)
	$8 = CALL $393([9654])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$256 }
	$9 = ((int_64)$2 > (int_64)9999)
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$259 }
	*($5 + [1328]) = ($8 << [1])
	$7 = (($5 + [1328]) | [1])
	if ( $8 ){ goto $label$258 }
	goto $label$257 
	
.LABEL $label$259
	$4 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($4)
	*($5 + [1328]) = ($4 | [1])
	*($5 + [1336]) = $7
	*($5 + [1332]) = $8
	
.LABEL $label$258
	CALL memcpy($7, [9654], $8)
	
.LABEL $label$257
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [146], ($5 + [1328])))
	if ( ((*($5 + [1328]) & [1]) == 0) ){ goto $label$102 }
	CALL _ZdlPv(*($5 + [1336]))
	goto $label$102 
	
.LABEL $label$256
	CALL $359(($5 + [1328]))
	
.LABEL $label$120
	$2 = ((int_64)$6 & (int_64)72057594037927935)
	$11 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)4)
	$8 = [0]
	
.LOOP $label$262:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$261 }
	$6 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$263 }
	$2 = $6
	$7 = $8
	$8 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$262 }
	goto $label$260 
	
.LABEL $label$263
	$2 = $6
	
.LOOP $label$264:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$261 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$9 = ($8 + [1])
	$8 = $9
	if ( $7 ){ goto $label$264 }
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$262 }
	goto $label$260 
	
.LABEL $label$261
	CALL eosio_assert([0], [18905])
	
.LABEL $label$260
	if ( ((int_64)*(($3 + [8])) == (int_64)$11) ){ goto $label$265 }
	CALL eosio_assert([0], [10257])
	
.LABEL $label$265
	*((($5 + [1296]) + [8])) = [0]
	*($5 + [1296]) = (int_64)0
	$2 = *($3)
	$8 = CALL $393([9654])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$266 }
	$9 = ((int_64)$2 > (int_64)29999)
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$269 }
	*($5 + [1296]) = ($8 << [1])
	$7 = (($5 + [1296]) | [1])
	if ( $8 ){ goto $label$268 }
	goto $label$267 
	
.LABEL $label$269
	$4 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($4)
	*($5 + [1296]) = ($4 | [1])
	*($5 + [1304]) = $7
	*($5 + [1300]) = $8
	
.LABEL $label$268
	CALL memcpy($7, [9654], $8)
	
.LABEL $label$267
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [146], ($5 + [1296])))
	if ( ((*($5 + [1296]) & [1]) == 0) ){ goto $label$105 }
	CALL _ZdlPv(*($5 + [1304]))
	goto $label$105 
	
.LABEL $label$266
	CALL $359(($5 + [1296]))
	
.LABEL $label$119
	$2 = ((int_64)$6 & (int_64)72057594037927935)
	$11 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)4)
	$8 = [0]
	
.LOOP $label$272:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$271 }
	$6 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$273 }
	$2 = $6
	$7 = $8
	$8 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$272 }
	goto $label$270 
	
.LABEL $label$273
	$2 = $6
	
.LOOP $label$274:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$271 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$9 = ($8 + [1])
	$8 = $9
	if ( $7 ){ goto $label$274 }
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$272 }
	goto $label$270 
	
.LABEL $label$271
	CALL eosio_assert([0], [18905])
	
.LABEL $label$270
	if ( ((int_64)*(($3 + [8])) == (int_64)$11) ){ goto $label$275 }
	CALL eosio_assert([0], [10257])
	
.LABEL $label$275
	*((($5 + [1344]) + [8])) = [0]
	*($5 + [1344]) = (int_64)0
	$2 = *($3)
	$8 = CALL $393([9654])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$276 }
	$9 = ((int_64)$2 > (int_64)2999)
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$279 }
	*($5 + [1344]) = ($8 << [1])
	$7 = (($5 + [1344]) | [1])
	if ( $8 ){ goto $label$278 }
	goto $label$277 
	
.LABEL $label$279
	$4 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($4)
	*($5 + [1344]) = ($4 | [1])
	*($5 + [1352]) = $7
	*($5 + [1348]) = $8
	
.LABEL $label$278
	CALL memcpy($7, [9654], $8)
	
.LABEL $label$277
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [146], ($5 + [1344])))
	if ( ((*($5 + [1344]) & [1]) == 0) ){ goto $label$102 }
	CALL _ZdlPv(*($5 + [1352]))
	goto $label$102 
	
.LABEL $label$276
	CALL $359(($5 + [1344]))
	
.LABEL $label$118
	$2 = ((int_64)$6 & (int_64)72057594037927935)
	$11 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)4)
	$8 = [0]
	
.LOOP $label$282:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$281 }
	$6 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$283 }
	$2 = $6
	$7 = $8
	$8 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$282 }
	goto $label$280 
	
.LABEL $label$283
	$2 = $6
	
.LOOP $label$284:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$281 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$9 = ($8 + [1])
	$8 = $9
	if ( $7 ){ goto $label$284 }
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$282 }
	goto $label$280 
	
.LABEL $label$281
	CALL eosio_assert([0], [18905])
	
.LABEL $label$280
	if ( ((int_64)*(($3 + [8])) == (int_64)$11) ){ goto $label$285 }
	CALL eosio_assert([0], [10257])
	
.LABEL $label$285
	*((($5 + [424]) + [8])) = [0]
	*($5 + [424]) = (int_64)0
	$2 = *($3)
	$8 = CALL $393([9845])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$286 }
	$9 = ((int_64)$2 > (int_64)1599999999)
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$289 }
	*($5 + [424]) = ($8 << [1])
	$7 = (($5 + [424]) | [1])
	if ( $8 ){ goto $label$288 }
	goto $label$287 
	
.LABEL $label$289
	$4 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($4)
	*($5 + [424]) = ($4 | [1])
	*($5 + [432]) = $7
	*($5 + [428]) = $8
	
.LABEL $label$288
	CALL memcpy($7, [9845], $8)
	
.LABEL $label$287
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [146], ($5 + [424])))
	if ( ((*($5 + [424]) & [1]) == 0) ){ goto $label$116 }
	CALL _ZdlPv(*($5 + [432]))
	goto $label$116 
	
.LABEL $label$286
	CALL $359(($5 + [424]))
	
.LABEL $label$117
	$2 = ((int_64)$6 & (int_64)72057594037927935)
	$11 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)4)
	$8 = [0]
	
.LOOP $label$292:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$291 }
	$6 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$293 }
	$2 = $6
	$7 = $8
	$8 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$292 }
	goto $label$290 
	
.LABEL $label$293
	$2 = $6
	
.LOOP $label$294:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$291 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$9 = ($8 + [1])
	$8 = $9
	if ( $7 ){ goto $label$294 }
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$292 }
	goto $label$290 
	
.LABEL $label$291
	CALL eosio_assert([0], [18905])
	
.LABEL $label$290
	if ( ((int_64)*(($3 + [8])) == (int_64)$11) ){ goto $label$295 }
	CALL eosio_assert([0], [10257])
	
.LABEL $label$295
	*((($5 + [440]) + [8])) = [0]
	*($5 + [440]) = (int_64)0
	$2 = *($3)
	$8 = CALL $393([9845])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$115 }
	$9 = ((int_64)$2 > (int_64)1599999999)
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$298 }
	*($5 + [440]) = ($8 << [1])
	$7 = (($5 + [440]) | [1])
	if ( $8 ){ goto $label$297 }
	goto $label$296 
	
.LABEL $label$298
	$4 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($4)
	*($5 + [440]) = ($4 | [1])
	*($5 + [448]) = $7
	*($5 + [444]) = $8
	
.LABEL $label$297
	CALL memcpy($7, [9845], $8)
	
.LABEL $label$296
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [146], ($5 + [440])))
	if ( ((*($5 + [440]) & [1]) == 0) ){ goto $label$116 }
	CALL _ZdlPv(*($5 + [448]))
	
.LABEL $label$116
	$2 = *($0)
	$8 = *($5 + [1244])
	*($5 + [640]) = ($5 + [1240])
	if ( $8 ){ goto $label$299 }
	CALL eosio_assert([0], [19537])
	
.LABEL $label$299
	CALL $128(($5 + [1144]), $8, $2, ($5 + [640]))
	goto $label$113 
	
.LABEL $label$115
	CALL $359(($5 + [440]))
	
.LABEL $label$114
	$2 = ((int_64)$6 & (int_64)72057594037927935)
	$11 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)4)
	$8 = [0]
	
.LOOP $label$302:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$301 }
	$6 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$303 }
	$2 = $6
	$7 = $8
	$8 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$302 }
	goto $label$300 
	
.LABEL $label$303
	$2 = $6
	
.LOOP $label$304:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$301 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$9 = ($8 + [1])
	$8 = $9
	if ( $7 ){ goto $label$304 }
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$302 }
	goto $label$300 
	
.LABEL $label$301
	CALL eosio_assert([0], [18905])
	
.LABEL $label$300
	if ( ((int_64)*(($3 + [8])) == (int_64)$11) ){ goto $label$305 }
	CALL eosio_assert([0], [10257])
	
.LABEL $label$305
	*((($5 + [456]) + [8])) = [0]
	*($5 + [456]) = (int_64)0
	$2 = *($3)
	$8 = CALL $393([9845])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$111 }
	$9 = ((int_64)$2 > (int_64)1599999999)
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$308 }
	*($5 + [456]) = ($8 << [1])
	$7 = (($5 + [456]) | [1])
	if ( $8 ){ goto $label$307 }
	goto $label$306 
	
.LABEL $label$308
	$4 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($4)
	*($5 + [456]) = ($4 | [1])
	*($5 + [464]) = $7
	*($5 + [460]) = $8
	
.LABEL $label$307
	CALL memcpy($7, [9845], $8)
	
.LABEL $label$306
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [146], ($5 + [456])))
	if ( ((*($5 + [456]) & [1]) == 0) ){ goto $label$309 }
	CALL _ZdlPv(*($5 + [464]))
	
.LABEL $label$309
	$6 = *($0)
	if ( ((int_64)*($5 + [1144]) == (int_64)CALL current_receiver()) ){ goto $label$310 }
	CALL eosio_assert([0], [19435])
	
.LABEL $label$310
	*(($8 = CALL _Znwj([32])) + [16]) = ($5 + [1144])
	*($8 + [8]) = (int_64)1
	*($8) = [4]
	CALL memcpy(($5 + [640]), $8, [1])
	CALL memcpy((($5 + [640]) | [1]), ($8 + [8]), [8])
	$2 = *($8)
	$9 = CALL db_store_i64(*((($5 + [1144]) + [8])), (int_64)4732883325973168128, $6, $2, ($5 + [640]), [9])
	*($8 + [20]) = $9
	$7 = ($5 + [1160])
	if ( ((uint_64)*($7) > (uint_64)$2) ){ goto $label$311 }
	*($7) = ((int_64)$2 + (int_64)1)
	
.LABEL $label$311
	*($5 + [640]) = $8
	$4 = *($8)
	*($5 + [576]) = $4
	*($5 + [352]) = $9
	$10 = ($5 + [1172])
	$7 = *($10)
	if ( ((uint_32)$7 >= (uint_32)*((($5 + [1144]) + [32]))) ){ goto $label$313 }
	*($7 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $4) & (int_64)255)
	*($7 + [16]) = $9
	*($5 + [640]) = [0]
	*($7) = $8
	*($10) = ($7 + [24])
	$8 = *($5 + [640])
	*($5 + [640]) = [0]
	if ( $8 ){ goto $label$312 }
	goto $label$113 
	
.LABEL $label$313
	CALL $129(($5 + [1168]), ($5 + [640]), ($5 + [576]), ($5 + [352]))
	$8 = *($5 + [640])
	*($5 + [640]) = [0]
	if ( ($8 == 0) ){ goto $label$113 }
	
.LABEL $label$312
	CALL _ZdlPv($8)
	$9 = *($5 + [1168])
	if ( $9 ){ goto $label$112 }
	goto $label$93 
	
.LABEL $label$113
	$9 = *($5 + [1168])
	if ( ($9 == 0) ){ goto $label$93 }
	
.LABEL $label$112
	$4 = ($5 + [1172])
	$8 = *($4)
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$315 }
	
.LOOP $label$316:
	$8 = ($8 + [-24])
	$7 = *($8)
	*($8) = [0]
	if ( ($7 == 0) ){ goto $label$317 }
	CALL _ZdlPv($7)
	
.LABEL $label$317
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$316 }
	$8 = *(($5 + [1168]))
	goto $label$314 
	
.LABEL $label$315
	$8 = $9
	
.LABEL $label$314
	*($4) = $9
	CALL _ZdlPv($8)
	goto $label$93 
	
.LABEL $label$111
	CALL $359(($5 + [456]))
	
.LABEL $label$110
	$2 = ((int_64)$6 & (int_64)72057594037927935)
	$11 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)4)
	$8 = [0]
	
.LOOP $label$320:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$319 }
	$6 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$321 }
	$2 = $6
	$7 = $8
	$8 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$320 }
	goto $label$318 
	
.LABEL $label$321
	$2 = $6
	
.LOOP $label$322:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$319 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$9 = ($8 + [1])
	$8 = $9
	if ( $7 ){ goto $label$322 }
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$320 }
	goto $label$318 
	
.LABEL $label$319
	CALL eosio_assert([0], [18905])
	
.LABEL $label$318
	if ( ((int_64)*(($3 + [8])) == (int_64)$11) ){ goto $label$323 }
	CALL eosio_assert([0], [10257])
	
.LABEL $label$323
	*((($5 + [1376]) + [8])) = [0]
	*($5 + [1376]) = (int_64)0
	$2 = *($3)
	$8 = CALL $393([9654])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$324 }
	$9 = ((int_64)$2 > (int_64)999)
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$327 }
	*($5 + [1376]) = ($8 << [1])
	$7 = (($5 + [1376]) | [1])
	if ( $8 ){ goto $label$326 }
	goto $label$325 
	
.LABEL $label$327
	$4 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($4)
	*($5 + [1376]) = ($4 | [1])
	*($5 + [1384]) = $7
	*($5 + [1380]) = $8
	
.LABEL $label$326
	CALL memcpy($7, [9654], $8)
	
.LABEL $label$325
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [146], ($5 + [1376])))
	if ( ((*($5 + [1376]) & [1]) == 0) ){ goto $label$108 }
	CALL _ZdlPv(*($5 + [1384]))
	goto $label$108 
	
.LABEL $label$324
	CALL $359(($5 + [1376]))
	
.LABEL $label$109
	$2 = ((int_64)$6 & (int_64)72057594037927935)
	$11 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)4)
	$8 = [0]
	
.LOOP $label$330:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$329 }
	$6 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$331 }
	$2 = $6
	$7 = $8
	$8 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$330 }
	goto $label$328 
	
.LABEL $label$331
	$2 = $6
	
.LOOP $label$332:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$329 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$9 = ($8 + [1])
	$8 = $9
	if ( $7 ){ goto $label$332 }
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$330 }
	goto $label$328 
	
.LABEL $label$329
	CALL eosio_assert([0], [18905])
	
.LABEL $label$328
	if ( ((int_64)*(($3 + [8])) == (int_64)$11) ){ goto $label$333 }
	CALL eosio_assert([0], [10257])
	
.LABEL $label$333
	*((($5 + [1392]) + [8])) = [0]
	*($5 + [1392]) = (int_64)0
	$2 = *($3)
	$8 = CALL $393([9654])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$107 }
	$9 = ((int_64)$2 > (int_64)1799999)
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$336 }
	*($5 + [1392]) = ($8 << [1])
	$7 = (($5 + [1392]) | [1])
	if ( $8 ){ goto $label$335 }
	goto $label$334 
	
.LABEL $label$336
	$4 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($4)
	*($5 + [1392]) = ($4 | [1])
	*($5 + [1400]) = $7
	*($5 + [1396]) = $8
	
.LABEL $label$335
	CALL memcpy($7, [9654], $8)
	
.LABEL $label$334
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [146], ($5 + [1392])))
	if ( ((*($5 + [1392]) & [1]) == 0) ){ goto $label$108 }
	CALL _ZdlPv(*($5 + [1400]))
	
.LABEL $label$108
	*($5 + [1488]) = ((int_64)*($5 + [1488]) + (int_64)1)
	goto $label$101 
	
.LABEL $label$107
	CALL $359(($5 + [1392]))
	
.LABEL $label$106
	$2 = ((int_64)$6 & (int_64)72057594037927935)
	$11 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)4)
	$8 = [0]
	
.LOOP $label$339:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$338 }
	$6 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$340 }
	$2 = $6
	$7 = $8
	$8 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$339 }
	goto $label$337 
	
.LABEL $label$340
	$2 = $6
	
.LOOP $label$341:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$338 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$9 = ($8 + [1])
	$8 = $9
	if ( $7 ){ goto $label$341 }
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$339 }
	goto $label$337 
	
.LABEL $label$338
	CALL eosio_assert([0], [18905])
	
.LABEL $label$337
	if ( ((int_64)*(($3 + [8])) == (int_64)$11) ){ goto $label$342 }
	CALL eosio_assert([0], [10257])
	
.LABEL $label$342
	*((($5 + [1312]) + [8])) = [0]
	*($5 + [1312]) = (int_64)0
	$2 = *($3)
	$8 = CALL $393([9654])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$104 }
	$9 = ((int_64)$2 > (int_64)179999999)
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$345 }
	*($5 + [1312]) = ($8 << [1])
	$7 = (($5 + [1312]) | [1])
	if ( $8 ){ goto $label$344 }
	goto $label$343 
	
.LABEL $label$345
	$4 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($4)
	*($5 + [1312]) = ($4 | [1])
	*($5 + [1320]) = $7
	*($5 + [1316]) = $8
	
.LABEL $label$344
	CALL memcpy($7, [9654], $8)
	
.LABEL $label$343
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [146], ($5 + [1312])))
	if ( ((*($5 + [1312]) & [1]) == 0) ){ goto $label$105 }
	CALL _ZdlPv(*($5 + [1320]))
	
.LABEL $label$105
	*($5 + [1470]) = [0]
	*($5 + [1472]) = ((int_64)*($5 + [1472]) + (int_64)1)
	goto $label$101 
	
.LABEL $label$104
	CALL $359(($5 + [1312]))
	
.LABEL $label$103
	$2 = ((int_64)$6 & (int_64)72057594037927935)
	$11 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)4)
	$8 = [0]
	
.LOOP $label$348:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$347 }
	$6 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$349 }
	$2 = $6
	$7 = $8
	$8 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$348 }
	goto $label$346 
	
.LABEL $label$349
	$2 = $6
	
.LOOP $label$350:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$347 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$9 = ($8 + [1])
	$8 = $9
	if ( $7 ){ goto $label$350 }
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$348 }
	goto $label$346 
	
.LABEL $label$347
	CALL eosio_assert([0], [18905])
	
.LABEL $label$346
	if ( ((int_64)*(($3 + [8])) == (int_64)$11) ){ goto $label$351 }
	CALL eosio_assert([0], [10257])
	
.LABEL $label$351
	*((($5 + [1360]) + [8])) = [0]
	*($5 + [1360]) = (int_64)0
	$2 = *($3)
	$8 = CALL $393([9654])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$100 }
	$9 = ((int_64)$2 > (int_64)17999999)
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$354 }
	*($5 + [1360]) = ($8 << [1])
	$7 = (($5 + [1360]) | [1])
	if ( $8 ){ goto $label$353 }
	goto $label$352 
	
.LABEL $label$354
	$4 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($4)
	*($5 + [1360]) = ($4 | [1])
	*($5 + [1368]) = $7
	*($5 + [1364]) = $8
	
.LABEL $label$353
	CALL memcpy($7, [9654], $8)
	
.LABEL $label$352
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [146], ($5 + [1360])))
	if ( ((*($5 + [1360]) & [1]) == 0) ){ goto $label$102 }
	CALL _ZdlPv(*($5 + [1368]))
	
.LABEL $label$102
	*($5 + [1471]) = [0]
	*($5 + [1480]) = ((int_64)*($5 + [1480]) + (int_64)1)
	
.LABEL $label$101
	$2 = *($0)
	*($5 + [1148]) = ($5 + [1480])
	*($5 + [1144]) = ($5 + [1488])
	*($5 + [1152]) = ($5 + [1472])
	*($5 + [1156]) = ($5 + [1471])
	*($5 + [1160]) = ($5 + [1470])
	CALL $130(($5 + [1496]), $10, $2, ($5 + [1144]))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$358 }
	$7 = [0]
	$9 = *([0] + [18928])
	
.LOOP $label$360:
	*((($5 + [1144]) + ($8 = $7))) = *(($9 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$7 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$359 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$360 }
	
.LABEL $label$359
	*(($5 + [648])) = [0]
	*($5 + [640]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$357 }
	*($5 + [640]) = ($7 << [1])
	$9 = (($5 + [640]) | [1])
	goto $label$356 
	
.LABEL $label$358
	*(($5 + [648])) = [0]
	*($5 + [640]) = (int_64)0
	*($5 + [640]) = [0]
	$8 = (($5 + [640]) | [1])
	goto $label$355 
	
.LABEL $label$357
	$4 = (($7 + [16]) & [-16])
	$9 = CALL _Znwj($4)
	*($5 + [640]) = ($4 | [1])
	*($5 + [648]) = $9
	*($5 + [644]) = $7
	
.LABEL $label$356
	$4 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$361:
	*(($9 + $8)) = *((($5 + [1144]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$361 }
	$8 = ($9 + $7)
	
.LABEL $label$355
	*($8) = [0]
	$8 = CALL $371(($5 + [640]), [0], [9706])
	$7 = ($8 + [8])
	*((($5 + [1240]) + [8])) = *($7)
	*($5 + [1240]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	$8 = CALL $367(($5 + [1240]), [9715])
	$7 = ($8 + [8])
	*((($5 + [1144]) + [8])) = *($7)
	*($5 + [1144]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	CALL $376(($5 + [576]), $15)
	$8 = *($5 + [576])
	$7 = ($8 & [1])
	$8 = CALL $369(($5 + [1144]), ( *($5 + [584]) ? (($5 + [576]) | [1]) : $7 ), ( *($5 + [580]) ? uint_32($8 >> [1]) : $7 ))
	$7 = ($8 + [8])
	*((($5 + [352]) + [8])) = *($7)
	*($5 + [352]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	if ( (*($5 + [576]) & [1]) ){ goto $label$363 }
	if ( (*($5 + [1144]) & [1]) ){ goto $label$362 }
	goto $label$99 
	
.LABEL $label$363
	CALL _ZdlPv(*((($5 + [576]) + [8])))
	if ( ((*($5 + [1144]) & [1]) == 0) ){ goto $label$99 }
	
.LABEL $label$362
	CALL _ZdlPv(*($5 + [1152]))
	$8 = [1]
	if ( ((*($5 + [1240]) & [1]) == 0) ){ goto $label$98 }
	goto $label$97 
	
.LABEL $label$100
	CALL $359(($5 + [1360]))
	
.LABEL $label$99
	$8 = [1]
	if ( (*($5 + [1240]) & [1]) ){ goto $label$97 }
	
.LABEL $label$98
	if ( ((*($5 + [640]) & $8) == 0) ){ goto $label$95 }
	goto $label$96 
	
.LABEL $label$97
	CALL _ZdlPv(*($5 + [1248]))
	if ( ((*($5 + [640]) & $8) == 0) ){ goto $label$95 }
	
.LABEL $label$96
	CALL _ZdlPv(*($5 + [648]))
	
.LABEL $label$95
	$2 = *($0)
	*($5 + [1224]) = [9726]
	*($5 + [1228]) = CALL $393([9726])
	*($5 + [32]) = *($5 + [1224])
	$8 = CALL $103(($5 + [1232]), ($5 + [32]))
	$7 = *($5 + [1568])
	$9 = ($7 & [1])
	*($5 + [1208]) = ( *($5 + [1576]) ? (($5 + [1568]) | [1]) : $9 )
	*($5 + [1212]) = ( *($5 + [1572]) ? uint_32($7 >> [1]) : $9 )
	*($5 + [640]) = $2
	*($5 + [648]) = *($8)
	*($5 + [24]) = *($5 + [1208])
	$8 = CALL $103(($5 + [1216]), ($5 + [24]))
	*($5 + [1192]) = [9733]
	*($5 + [1196]) = CALL $393([9733])
	*($5 + [16]) = *($5 + [1192])
	$7 = CALL $103(($5 + [1200]), ($5 + [16]))
	$2 = *($0)
	*($5 + [1136]) = [9742]
	*($5 + [1140]) = CALL $393([9742])
	*($5 + [8]) = *($5 + [1136])
	$9 = CALL $103(($5 + [576]), ($5 + [8]))
	*(($5 + [1168])) = *(($3 + [8]))
	*($5 + [1144]) = $2
	*($5 + [1152]) = *($9)
	*($5 + [1160]) = *($3)
	CALL $360((($5 + [1144]) + [32]), ($5 + [352]))
	$8 = CALL $131(($5 + [1240]), ($5 + [640]), *($8), *($7), ($5 + [1144]))
	CALL $132($8)
	$7 = *($8 + [28])
	if ( ($7 == 0) ){ goto $label$364 }
	*(($8 + [32])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$364
	$7 = *($8 + [16])
	if ( ($7 == 0) ){ goto $label$365 }
	*(($8 + [20])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$365
	if ( ((*($5 + [1176]) & [1]) == 0) ){ goto $label$366 }
	CALL _ZdlPv(*(($5 + [1184])))
	
.LABEL $label$366
	if ( ((*($5 + [352]) & [1]) == 0) ){ goto $label$85 }
	CALL _ZdlPv(*($5 + [360]))
	goto $label$85 
	
.LABEL $label$94
	$2 = ((int_64)$6 & (int_64)72057594037927935)
	$11 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)4)
	$8 = [0]
	
.LOOP $label$369:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$368 }
	$6 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$370 }
	$2 = $6
	$7 = $8
	$8 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$369 }
	goto $label$367 
	
.LABEL $label$370
	$2 = $6
	
.LOOP $label$371:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$368 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$9 = ($8 + [1])
	$8 = $9
	if ( $7 ){ goto $label$371 }
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$369 }
	goto $label$367 
	
.LABEL $label$368
	CALL eosio_assert([0], [18905])
	
.LABEL $label$367
	if ( ((int_64)*(($3 + [8])) == (int_64)$11) ){ goto $label$372 }
	CALL eosio_assert([0], [10257])
	
.LABEL $label$372
	*((($5 + [408]) + [8])) = [0]
	*($5 + [408]) = (int_64)0
	$2 = *($3)
	$8 = CALL $393([9845])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$92 }
	$9 = ((int_64)$2 > (int_64)879999)
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$375 }
	*($5 + [408]) = ($8 << [1])
	$7 = (($5 + [408]) | [1])
	if ( $8 ){ goto $label$374 }
	goto $label$373 
	
.LABEL $label$375
	$4 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($4)
	*($5 + [408]) = ($4 | [1])
	*($5 + [416]) = $7
	*($5 + [412]) = $8
	
.LABEL $label$374
	CALL memcpy($7, [9845], $8)
	
.LABEL $label$373
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [146], ($5 + [408])))
	if ( ((*($5 + [408]) & [1]) == 0) ){ goto $label$93 }
	CALL _ZdlPv(*($5 + [416]))
	
.LABEL $label$93
	*(($5 + [1272])) = [0]
	*($5 + [1256]) = (int_64)-1
	*($5 + [1264]) = (int_64)0
	$2 = *($0)
	*($5 + [1240]) = $2
	*($5 + [1248]) = $2
	$8 = CALL db_find_i64($2, $2, (int_64)4732883325973168128, (int_64)3)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$383 }
	$8 = CALL $127(($5 + [1240]), $8)
	if ( ((int_32)*($8 + [16]) == (int_32)($5 + [1240])) ){ goto $label$384 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$384
	*($5 + [852]) = $8
	$2 = *($8 + [8])
	*(($5 + [400])) = [0]
	*($5 + [392]) = (int_64)0
	*($5 + [848]) = ($5 + [1240])
	$8 = CALL $393([9893])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$376 }
	$9 = (uint_64)($2 <= (int_64)200)
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$382 }
	*($5 + [392]) = ($8 << [1])
	$7 = (($5 + [392]) | [1])
	if ( $8 ){ goto $label$381 }
	goto $label$380 
	
.LABEL $label$383
	*($5 + [852]) = [0]
	*($5 + [848]) = ($5 + [1240])
	$6 = *($0)
	if ( ((int_64)*($5 + [1240]) == (int_64)CALL current_receiver()) ){ goto $label$385 }
	CALL eosio_assert([0], [19435])
	
.LABEL $label$385
	*(($8 = CALL _Znwj([32])) + [16]) = ($5 + [1240])
	*($8 + [8]) = (int_64)1
	*($8) = [3]
	CALL memcpy(($5 + [640]), $8, [1])
	CALL memcpy((($5 + [640]) | [1]), ($8 + [8]), [8])
	$2 = *($8)
	$9 = CALL db_store_i64(*((($5 + [1240]) + [8])), (int_64)4732883325973168128, $6, $2, ($5 + [640]), [9])
	*($8 + [20]) = $9
	$7 = ($5 + [1256])
	if ( ((uint_64)*($7) > (uint_64)$2) ){ goto $label$386 }
	*($7) = ((int_64)$2 + (int_64)1)
	
.LABEL $label$386
	*($5 + [1144]) = $8
	$4 = *($8)
	*($5 + [352]) = $4
	*($5 + [640]) = $9
	$10 = ($5 + [1268])
	$7 = *($10)
	if ( ((uint_32)$7 >= (uint_32)*((($5 + [1240]) + [32]))) ){ goto $label$379 }
	*($7 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $4) & (int_64)255)
	*($7 + [16]) = $9
	*($5 + [1144]) = [0]
	*($7) = $8
	*($10) = ($7 + [24])
	$8 = *($5 + [1144])
	*($5 + [1144]) = [0]
	if ( $8 ){ goto $label$378 }
	goto $label$377 
	
.LABEL $label$382
	$4 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($4)
	*($5 + [392]) = ($4 | [1])
	*($5 + [400]) = $7
	*($5 + [396]) = $8
	
.LABEL $label$381
	CALL memcpy($7, [9893], $8)
	
.LABEL $label$380
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [146], ($5 + [392])))
	if ( ((*($5 + [392]) & [1]) == 0) ){ goto $label$387 }
	CALL _ZdlPv(*($5 + [400]))
	
.LABEL $label$387
	$2 = *($0)
	$8 = *($5 + [852])
	*($5 + [1144]) = ($5 + [848])
	if ( $8 ){ goto $label$388 }
	CALL eosio_assert([0], [19537])
	
.LABEL $label$388
	CALL $133(($5 + [1240]), $8, $2, ($5 + [1144]))
	goto $label$377 
	
.LABEL $label$379
	CALL $129(($5 + [1264]), ($5 + [1144]), ($5 + [352]), ($5 + [640]))
	$8 = *($5 + [1144])
	*($5 + [1144]) = [0]
	if ( ($8 == 0) ){ goto $label$377 }
	
.LABEL $label$378
	CALL _ZdlPv($8)
	
.LABEL $label$377
	*(($5 + [672])) = [0]
	*($5 + [656]) = (int_64)-1
	*($5 + [664]) = (int_64)0
	$2 = *($0)
	*($5 + [640]) = $2
	*($5 + [648]) = $2
	$8 = CALL db_find_i64($2, $2, (int_64)-3020380200705179648, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$389 }
	$8 = CALL $18(($5 + [640]), $8)
	if ( ((int_32)*($8 + [16]) == (int_32)($5 + [640])) ){ goto $label$390 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$390
	*($5 + [836]) = $8
	*($5 + [832]) = ($5 + [640])
	$2 = *($0)
	*($5 + [1144]) = ($5 + [832])
	CALL $134(($5 + [640]), $8, $2, ($5 + [1144]))
	$2 = (int_64)0
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$89 }
	goto $label$88 
	
.LABEL $label$389
	*($5 + [836]) = [0]
	*($5 + [832]) = ($5 + [640])
	$6 = *($0)
	if ( ((int_64)*($5 + [640]) == (int_64)CALL current_receiver()) ){ goto $label$391 }
	CALL eosio_assert([0], [19435])
	
.LABEL $label$391
	*(($8 = CALL _Znwj([32])) + [16]) = ($5 + [640])
	*($8) = $1
	*($8 + [8]) = [65537]
	*($8 + [12]) = [18]
	*($5 + [584]) = (($5 + [352]) | [14])
	*($5 + [580]) = ($5 + [352])
	*($5 + [576]) = ($5 + [352])
	*($5 + [864]) = ($5 + [576])
	*($5 + [1148]) = ($8 + [8])
	*($5 + [1144]) = $8
	*($5 + [1152]) = ($8 + [10])
	*($5 + [1156]) = ($8 + [12])
	CALL $135(($5 + [1144]), ($5 + [864]))
	$2 = *($8)
	$9 = CALL db_store_i64(*((($5 + [640]) + [8])), (int_64)-3020380200705179648, $6, $2, ($5 + [352]), [14])
	*($8 + [20]) = $9
	$7 = ($5 + [656])
	if ( (uint_64)($2 <= *($7)) ){ goto $label$392 }
	*($7) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$392
	*($5 + [352]) = $8
	$2 = *($8)
	*($5 + [1144]) = $2
	*($5 + [576]) = $9
	$4 = ($5 + [668])
	$7 = *($4)
	if ( ((uint_32)$7 >= (uint_32)*((($5 + [640]) + [32]))) ){ goto $label$393 }
	*($7 + [8]) = $2
	*($7 + [16]) = $9
	*($5 + [352]) = [0]
	*($7) = $8
	*($4) = ($7 + [24])
	$8 = *($5 + [352])
	*($5 + [352]) = [0]
	if ( ($8 == 0) ){ goto $label$90 }
	goto $label$91 
	
.LABEL $label$393
	CALL $136(($5 + [664]), ($5 + [352]), ($5 + [1144]), ($5 + [576]))
	$8 = *($5 + [352])
	*($5 + [352]) = [0]
	if ( $8 ){ goto $label$91 }
	goto $label$90 
	
.LABEL $label$376
	CALL $359(($5 + [392]))
	
.LABEL $label$92
	CALL $359(($5 + [408]))
	
.LABEL $label$91
	CALL _ZdlPv($8)
	
.LABEL $label$90
	$2 = (int_64)0
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$88 }
	
.LABEL $label$89
	$7 = [0]
	$9 = *([0] + [18928])
	
.LOOP $label$395:
	*((($5 + [1144]) + ($8 = $7))) = *(($9 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$7 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$394 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)$2) ){ goto $label$395 }
	
.LABEL $label$394
	*(($5 + [360])) = [0]
	*($5 + [352]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$397 }
	*($5 + [352]) = ($7 << [1])
	$9 = (($5 + [352]) | [1])
	goto $label$396 
	
.LABEL $label$397
	$4 = (($7 + [16]) & [-16])
	$9 = CALL _Znwj($4)
	*($5 + [352]) = ($4 | [1])
	*($5 + [360]) = $9
	*($5 + [356]) = $7
	
.LABEL $label$396
	$4 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$398:
	*(($9 + $8)) = *((($5 + [1144]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$398 }
	$8 = ($9 + $7)
	goto $label$87 
	
.LABEL $label$88
	*(($5 + [360])) = [0]
	*($5 + [352]) = $2
	*($5 + [352]) = [0]
	$8 = (($5 + [352]) | [1])
	
.LABEL $label$87
	*($8) = [0]
	$8 = CALL $371(($5 + [352]), [0], [9706])
	$7 = ($8 + [8])
	*((($5 + [1144]) + [8])) = *($7)
	*($5 + [1144]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	$8 = CALL $367(($5 + [1144]), [9902])
	$7 = ($8 + [8])
	*((($5 + [864]) + [8])) = *($7)
	*($5 + [864]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	if ( ((*($5 + [1144]) & [1]) == 0) ){ goto $label$399 }
	CALL _ZdlPv(*($5 + [1152]))
	
.LABEL $label$399
	if ( ((*($5 + [352]) & [1]) == 0) ){ goto $label$400 }
	CALL _ZdlPv(*($5 + [360]))
	
.LABEL $label$400
	$2 = *($0)
	*($5 + [336]) = [9726]
	*($5 + [340]) = CALL $393([9726])
	*($5 + [272]) = *($5 + [336])
	$8 = CALL $103(($5 + [344]), ($5 + [272]))
	$7 = *($5 + [1568])
	$9 = ($7 & [1])
	*($5 + [320]) = ( *($5 + [1576]) ? (($5 + [1568]) | [1]) : $9 )
	*($5 + [324]) = ( *($5 + [1572]) ? uint_32($7 >> [1]) : $9 )
	*($5 + [576]) = $2
	*($5 + [584]) = *($8)
	*($5 + [264]) = *($5 + [320])
	$8 = CALL $103(($5 + [328]), ($5 + [264]))
	*($5 + [304]) = [9733]
	*($5 + [308]) = CALL $393([9733])
	*($5 + [256]) = *($5 + [304])
	$7 = CALL $103(($5 + [312]), ($5 + [256]))
	$2 = *($0)
	*($5 + [296]) = [9742]
	*($5 + [300]) = CALL $393([9742])
	*($5 + [248]) = *($5 + [296])
	$9 = CALL $103(($5 + [816]), ($5 + [248]))
	*(($5 + [1168])) = *(($3 + [8]))
	*($5 + [1144]) = $2
	*($5 + [1152]) = *($9)
	*($5 + [1160]) = *($3)
	CALL $360((($5 + [1144]) + [32]), ($5 + [864]))
	$8 = CALL $131(($5 + [352]), ($5 + [576]), *($8), *($7), ($5 + [1144]))
	CALL $132($8)
	$7 = *($8 + [28])
	if ( ($7 == 0) ){ goto $label$401 }
	*(($8 + [32])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$401
	$7 = *($8 + [16])
	if ( ($7 == 0) ){ goto $label$402 }
	*(($8 + [20])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$402
	if ( (*($5 + [1176]) & [1]) ){ goto $label$407 }
	if ( (*($5 + [864]) & [1]) ){ goto $label$406 }
	goto $label$405 
	
.LABEL $label$407
	CALL _ZdlPv(*(($5 + [1184])))
	if ( ((*($5 + [864]) & [1]) == 0) ){ goto $label$405 }
	
.LABEL $label$406
	CALL _ZdlPv(*($5 + [872]))
	$9 = *($5 + [664])
	if ( ($9 == 0) ){ goto $label$403 }
	goto $label$404 
	
.LABEL $label$405
	$9 = *($5 + [664])
	if ( ($9 == 0) ){ goto $label$403 }
	
.LABEL $label$404
	$0 = ($5 + [668])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$409 }
	
.LOOP $label$410:
	$8 = ($8 + [-24])
	$7 = *($8)
	*($8) = [0]
	if ( ($7 == 0) ){ goto $label$411 }
	CALL _ZdlPv($7)
	
.LABEL $label$411
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$410 }
	$8 = *(($5 + [664]))
	goto $label$408 
	
.LABEL $label$409
	$8 = $9
	
.LABEL $label$408
	*($0) = $9
	CALL _ZdlPv($8)
	
.LABEL $label$403
	$9 = *($5 + [1264])
	if ( ($9 == 0) ){ goto $label$85 }
	$0 = ($5 + [1268])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$413 }
	
.LOOP $label$414:
	$8 = ($8 + [-24])
	$7 = *($8)
	*($8) = [0]
	if ( ($7 == 0) ){ goto $label$415 }
	CALL _ZdlPv($7)
	
.LABEL $label$415
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$414 }
	$8 = *(($5 + [1264]))
	goto $label$412 
	
.LABEL $label$413
	$8 = $9
	
.LABEL $label$412
	*($0) = $9
	CALL _ZdlPv($8)
	$9 = *($5 + [1456])
	if ( $9 ){ goto $label$47 }
	goto $label$48 
	
.LABEL $label$86
	*((($5 + [1120]) + [8])) = [0]
	*($5 + [1120]) = (int_64)0
	$6 = *(($3 + [8]))
	$8 = CALL $393([8990])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$420 }
	$9 = ((int_64)$6 == (int_64)((int_64)((int_64)$2 << (int_64)8) | (int_64)4))
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$423 }
	*($5 + [1120]) = ($8 << [1])
	$7 = (($5 + [1120]) | [1])
	if ( $8 ){ goto $label$422 }
	goto $label$421 
	
.LABEL $label$423
	$4 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($4)
	*($5 + [1120]) = ($4 | [1])
	*($5 + [1128]) = $7
	*($5 + [1124]) = $8
	
.LABEL $label$422
	CALL memcpy($7, [8990], $8)
	
.LABEL $label$421
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [115], ($5 + [1120])))
	if ( ((*($5 + [1120]) & [1]) == 0) ){ goto $label$424 }
	CALL _ZdlPv(*($5 + [1128]))
	
.LABEL $label$424
	*(($5 + [1112])) = [0]
	*($5 + [1104]) = (int_64)0
	$7 = *($5 + [1456])
	$9 = *($5 + [1460])
	$8 = CALL $393([9589])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$419 }
	$9 = ((int_32)($9 - $7) == (int_32)[36])
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$427 }
	*($5 + [1104]) = ($8 << [1])
	$7 = (($5 + [1104]) | [1])
	if ( $8 ){ goto $label$426 }
	goto $label$425 
	
.LABEL $label$427
	$4 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($4)
	*($5 + [1104]) = ($4 | [1])
	*($5 + [1112]) = $7
	*($5 + [1108]) = $8
	
.LABEL $label$426
	CALL memcpy($7, [9589], $8)
	
.LABEL $label$425
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [144], ($5 + [1104])))
	if ( ((*($5 + [1104]) & [1]) == 0) ){ goto $label$428 }
	CALL _ZdlPv(*($5 + [1112]))
	
.LABEL $label$428
	$7 = *($8 + [12])
	$8 = *($5 + [1456])
	CALL eosio_assert(((int_32)( *(($8 + [16])) ? uint_32($7 >> [1]) : ($7 & [1]) ) == (int_32)[64]), [8326])
	CALL $3(($8 + [12]), ($5 + [352]), [32])
	$8 = *($5 + [1456])
	if ( (*($8 + [24]) & [1]) ){ goto $label$430 }
	$8 = (($8 + [24]) + [1])
	goto $label$429 
	
.LABEL $label$430
	$8 = *(($8 + [32]))
	
.LABEL $label$429
	$7 = [0]
	*($5 + [1096]) = CALL $390($8, [0], [10])
	*(($5 + [1272])) = [0]
	*($5 + [1256]) = (int_64)-1
	*($5 + [1264]) = (int_64)0
	*($5 + [1276]) = [0]
	$2 = *($0)
	*($5 + [1240]) = $2
	*($5 + [1248]) = $2
	*($5 + [1088]) = ($5 + [1240])
	CALL $66(($5 + [1144]), ($5 + [1088]), ($5 + [352]))
	$8 = *($5 + [1148])
	if ( ($8 == 0) ){ goto $label$433 }
	if ( ((int_64)*($5 + [352]) != (int_64)*($8 + [16])) ){ goto $label$432 }
	$2 = *($5 + [1144])
	*($5 + [1080]) = $2
	$7 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32))
	$10 = (($5 + [1080]) | [4])
	goto $label$431 
	
.LABEL $label$433
	*($5 + [1084]) = [0]
	*($5 + [1080]) = ($5 + [1088])
	$10 = (($5 + [1080]) | [4])
	goto $label$431 
	
.LABEL $label$432
	$7 = [0]
	*($5 + [1084]) = [0]
	*($5 + [1080]) = ($5 + [1088])
	$10 = (($5 + [1080]) | [4])
	
.LABEL $label$431
	*(($5 + [1072])) = [0]
	*($5 + [1064]) = (int_64)0
	$8 = CALL $393([9156])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$418 }
	$9 = ((int_32)$7 != (int_32)[0])
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$436 }
	*($5 + [1064]) = ($8 << [1])
	$7 = (($5 + [1064]) | [1])
	if ( $8 ){ goto $label$435 }
	goto $label$434 
	
.LABEL $label$436
	$4 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($4)
	*($5 + [1064]) = ($4 | [1])
	*($5 + [1072]) = $7
	*($5 + [1068]) = $8
	
.LABEL $label$435
	CALL memcpy($7, [9156], $8)
	
.LABEL $label$434
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [121], ($5 + [1064])))
	if ( ((*($5 + [1064]) & [1]) == 0) ){ goto $label$437 }
	CALL _ZdlPv(*($5 + [1072]))
	
.LABEL $label$437
	*(($5 + [1056])) = [0]
	*($5 + [1048]) = (int_64)0
	$2 = *($5 + [1096])
	$6 = *(*($10) + [80])
	$8 = CALL $393([9763])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$417 }
	$9 = (((int_64)$2 != (int_64)0) & ((uint_64)$2 <= (uint_64)$6))
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$440 }
	*($5 + [1048]) = ($8 << [1])
	$7 = (($5 + [1048]) | [1])
	if ( $8 ){ goto $label$439 }
	goto $label$438 
	
.LABEL $label$440
	$4 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($4)
	*($5 + [1048]) = ($4 | [1])
	*($5 + [1056]) = $7
	*($5 + [1052]) = $8
	
.LABEL $label$439
	CALL memcpy($7, [9763], $8)
	
.LABEL $label$438
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [149], ($5 + [1048])))
	if ( ((*($5 + [1048]) & [1]) == 0) ){ goto $label$441 }
	CALL _ZdlPv(*($5 + [1056]))
	
.LABEL $label$441
	$9 = *($10)
	$8 = CALL $393([8341])
	if ( ($8 <= [8]) ){ goto $label$444 }
	CALL eosio_assert([0], [10159])
	goto $label$443 
	
.LABEL $label$444
	if ( ($8 == 0) ){ goto $label$442 }
	
.LABEL $label$443
	$2 = (int_64)0
	
.LOOP $label$445:
	$7 = *(($8 + [8340]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$446 }
	CALL eosio_assert([0], [10204])
	
.LABEL $label$446
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$445 }
	goto $label$416 
	
.LABEL $label$442
	$2 = (int_64)0
	goto $label$416 
	
.LABEL $label$420
	CALL $359(($5 + [1120]))
	
.LABEL $label$419
	CALL $359(($5 + [1104]))
	
.LABEL $label$418
	CALL $359(($5 + [1064]))
	
.LABEL $label$417
	CALL $359(($5 + [1048]))
	
.LABEL $label$416
	*(($5 + [1040])) = [0]
	*($5 + [1032]) = (int_64)0
	$6 = *(($9 + [72]))
	$8 = CALL $393([8990])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$473 }
	$4 = ((int_64)$6 == (int_64)((int_64)((int_64)$2 << (int_64)8) | (int_64)4))
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$476 }
	*($5 + [1032]) = ($8 << [1])
	$9 = (($5 + [1032]) | [1])
	if ( $8 ){ goto $label$475 }
	goto $label$474 
	
.LABEL $label$476
	$7 = (($8 + [16]) & [-16])
	$9 = CALL _Znwj($7)
	*($5 + [1032]) = ($7 | [1])
	*($5 + [1040]) = $9
	*($5 + [1036]) = $8
	
.LABEL $label$475
	CALL memcpy($9, [8990], $8)
	
.LABEL $label$474
	$7 = [0]
	*(($9 + $8)) = [0]
	CALL eosio_assert($4, CALL $5($5, [115], ($5 + [1032])))
	if ( ((*($5 + [1032]) & [1]) == 0) ){ goto $label$477 }
	CALL _ZdlPv(*($5 + [1040]))
	
.LABEL $label$477
	$8 = *($10)
	if ( ((uint_64)((int_64)*($8 + [64]) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$478 }
	$2 = (uint_64)*(($8 + [72])) >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$480:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$479 }
	$6 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$481 }
	$2 = $6
	$7 = [1]
	$9 = $8
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$480 }
	goto $label$478 
	
.LABEL $label$481
	$2 = $6
	
.LOOP $label$482:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$479 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$9 = ($8 + [1])
	$8 = $9
	if ( $7 ){ goto $label$482 }
	$7 = [1]
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$480 }
	goto $label$478 
	
.LABEL $label$479
	$7 = [0]
	
.LABEL $label$478
	*(($5 + [1024])) = [0]
	*($5 + [1016]) = (int_64)0
	$8 = CALL $393([8998])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$472 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$485 }
	*($5 + [1016]) = ($8 << [1])
	$9 = (($5 + [1016]) | [1])
	if ( $8 ){ goto $label$484 }
	goto $label$483 
	
.LABEL $label$485
	$4 = (($8 + [16]) & [-16])
	$9 = CALL _Znwj($4)
	*($5 + [1016]) = ($4 | [1])
	*($5 + [1024]) = $9
	*($5 + [1020]) = $8
	
.LABEL $label$484
	CALL memcpy($9, [8998], $8)
	
.LABEL $label$483
	*(($9 + $8)) = [0]
	CALL eosio_assert($7, CALL $5($5, [116], ($5 + [1016])))
	if ( ((*($5 + [1016]) & [1]) == 0) ){ goto $label$486 }
	CALL _ZdlPv(*($5 + [1024]))
	
.LABEL $label$486
	*(($5 + [1008])) = [0]
	*($5 + [1000]) = (int_64)0
	$2 = *(*($10) + [64])
	$8 = CALL $393([9573])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$471 }
	$9 = ((int_64)$2 > (int_64)0)
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$489 }
	*($5 + [1000]) = ($8 << [1])
	$7 = (($5 + [1000]) | [1])
	if ( $8 ){ goto $label$488 }
	goto $label$487 
	
.LABEL $label$489
	$4 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($4)
	*($5 + [1000]) = ($4 | [1])
	*($5 + [1008]) = $7
	*($5 + [1004]) = $8
	
.LABEL $label$488
	CALL memcpy($7, [9573], $8)
	
.LABEL $label$487
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [116], ($5 + [1000])))
	if ( ((*($5 + [1000]) & [1]) == 0) ){ goto $label$490 }
	CALL _ZdlPv(*($5 + [1008]))
	
.LABEL $label$490
	$2 = *($5 + [1096])
	$8 = *($10)
	$2 = *($8 + [64])
	CALL __multi3(($5 + [232]), $2, (int_64)$2 >> (int_64)63), $2, (int_64)$2 >> (int_64)63))
	$11 = *(($8 + [72]))
	$2 = *(($5 + [240]))
	$6 = *($5 + [232])
	if ( (( (uint_64)($6 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ) == 0) ){ goto $label$492 }
	if ( ( ((uint_64)$6 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ) ){ goto $label$491 }
	CALL eosio_assert([0], [18995])
	goto $label$491 
	
.LABEL $label$492
	CALL eosio_assert([0], [18971])
	
.LABEL $label$491
	if ( ((int_64)*(($3 + [8])) == (int_64)$11) ){ goto $label$493 }
	CALL eosio_assert([0], [10257])
	
.LABEL $label$493
	*((($5 + [984]) + [8])) = [0]
	*($5 + [984]) = (int_64)0
	$2 = *($3)
	$8 = CALL $393([9763])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$470 }
	$9 = ((int_64)$2 >= (int_64)$6)
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$496 }
	*($5 + [984]) = ($8 << [1])
	$7 = (($5 + [984]) | [1])
	if ( $8 ){ goto $label$495 }
	goto $label$494 
	
.LABEL $label$496
	$4 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($4)
	*($5 + [984]) = ($4 | [1])
	*($5 + [992]) = $7
	*($5 + [988]) = $8
	
.LABEL $label$495
	CALL memcpy($7, [9763], $8)
	
.LABEL $label$494
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [150], ($5 + [984])))
	if ( ((*($5 + [984]) & [1]) == 0) ){ goto $label$497 }
	CALL _ZdlPv(*($5 + [992]))
	
.LABEL $label$497
	$8 = *($10)
	CALL $43($0, $1, *($8 + [56]), *($8 + [57]), *($5 + [1096]))
	$8 = *($10)
	*(($7 = (($5 + [944]) + [16]))) = *(($8 + [32]))
	*(($9 = (($5 + [944]) + [24]))) = *(($8 + [40]))
	*(($4 = (($5 + [928]) + [8]))) = *(($8 + [72]))
	*($5 + [944]) = *($8 + [16])
	*($5 + [928]) = *($8 + [64])
	*($5 + [952]) = *(($8 + [24]))
	$2 = *($8 + [48])
	$6 = *($8 + [57])
	$8 = *($8 + [56])
	$11 = *($5 + [1096])
	*((($5 + [192]) + [24])) = *($9)
	*((($5 + [192]) + [16])) = *($7)
	*($5 + [200]) = *($5 + [952])
	*($5 + [192]) = *($5 + [944])
	*((($5 + [176]) + [8])) = *($4)
	*($5 + [176]) = *($5 + [928])
	CALL $137($0, $1, $2, ($5 + [192]), $8, $6, ($5 + [176]), $11)
	$8 = *($10)
	CALL $138($0, *($8 + [48]), *($8 + [56]), *($8 + [57]), *($5 + [1096]))
	$8 = *($10)
	*(($7 = (($5 + [896]) + [16]))) = *(($8 + [32]))
	*(($9 = (($5 + [896]) + [24]))) = *(($8 + [40]))
	*(($4 = (($5 + [880]) + [8]))) = *(($8 + [72]))
	*($5 + [896]) = *($8 + [16])
	*($5 + [880]) = *($8 + [64])
	*($5 + [904]) = *(($8 + [24]))
	$2 = *($8 + [48])
	$6 = *($8 + [57])
	$8 = *($8 + [56])
	$11 = *($5 + [1096])
	*((($5 + [144]) + [24])) = *($9)
	*((($5 + [144]) + [16])) = *($7)
	*($5 + [152]) = *($5 + [904])
	*($5 + [144]) = *($5 + [896])
	*((($5 + [128]) + [8])) = *($4)
	*($5 + [128]) = *($5 + [880])
	CALL $139($0, $2, ($5 + [144]), $1, $8, $6, ($5 + [128]), $11)
	CALL $25($0, $1)
	CALL $25($0, *(*($10) + [48]))
	$2 = *($5 + [1096])
	$8 = *($10)
	$2 = *($8 + [64])
	CALL __multi3(($5 + [112]), $2, (int_64)$2 >> (int_64)63), $2, (int_64)$2 >> (int_64)63))
	$6 = *(($8 + [72]))
	$2 = *((($5 + [112]) + [8]))
	$11 = *($5 + [112])
	if ( (( (uint_64)($11 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ) == 0) ){ goto $label$499 }
	if ( ( ((uint_64)$11 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ) ){ goto $label$498 }
	CALL eosio_assert([0], [18995])
	goto $label$498 
	
.LABEL $label$499
	CALL eosio_assert([0], [18971])
	
.LABEL $label$498
	$11 = ((int_64)((int_64)$11 + (int_64)9) / (int_64)10)
	$2 = *($3)
	if ( ((int_64)$6 == (int_64)*(($3 + [8]))) ){ goto $label$500 }
	CALL eosio_assert([0], [19020])
	
.LABEL $label$500
	$2 = (int_64)
	if ( ((int_64)$2($2 - $11)) <= (int_64)-4611686018427387904) ){ goto $label$502 }
	if ( ((int_64)$2 < (int_64)4611686018427387904) ){ goto $label$501 }
	CALL eosio_assert([0], [19090])
	goto $label$501 
	
.LABEL $label$502
	CALL eosio_assert([0], [19068])
	
.LABEL $label$501
	*($3) = $2
	$2 = *(*($10) + [48])
	if ( ((int_64)$2 == (int_64)0) ){ goto $label$506 }
	$7 = [0]
	$9 = *([0] + [18928])
	
.LOOP $label$508:
	*((($5 + [1144]) + ($8 = $7))) = *(($9 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$2 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$7 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$507 }
	$2 = ((int_64)$2 << (int_64)5)
	if ( ((int_64)$2 != (int_64)0) ){ goto $label$508 }
	
.LABEL $label$507
	*(($5 + [760])) = [0]
	*($5 + [752]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$505 }
	*($5 + [752]) = ($7 << [1])
	$9 = (($5 + [752]) | [1])
	goto $label$504 
	
.LABEL $label$506
	*(($5 + [760])) = [0]
	*($5 + [752]) = (int_64)0
	*($5 + [752]) = [0]
	$8 = (($5 + [752]) | [1])
	goto $label$503 
	
.LABEL $label$505
	$4 = (($7 + [16]) & [-16])
	$9 = CALL _Znwj($4)
	*($5 + [752]) = ($4 | [1])
	*($5 + [760]) = $9
	*($5 + [756]) = $7
	
.LABEL $label$504
	$4 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$509:
	*(($9 + $8)) = *((($5 + [1144]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$509 }
	$8 = ($9 + $7)
	
.LABEL $label$503
	$7 = [0]
	*($8) = [0]
	$8 = CALL $371(($5 + [752]), [0], [9706])
	$9 = ($8 + [8])
	*((($5 + [768]) + [8])) = *($9)
	*($5 + [768]) = *($8)
	*($8) = (int_64)0
	*($9) = [0]
	$8 = CALL $367(($5 + [768]), [9799])
	$9 = ($8 + [8])
	*((($5 + [784]) + [8])) = *($9)
	*($5 + [784]) = *($8)
	*($8) = (int_64)0
	*($9) = [0]
	CALL $375(($5 + [736]), *(*($10) + [56]))
	$8 = *($5 + [736])
	$9 = ($8 & [1])
	$8 = CALL $369(($5 + [784]), ( *($5 + [744]) ? (($5 + [736]) | [1]) : $9 ), ( *($5 + [740]) ? uint_32($8 >> [1]) : $9 ))
	$9 = ($8 + [8])
	*((($5 + [800]) + [8])) = *($9)
	*($5 + [800]) = *($8)
	*($8) = (int_64)0
	*($9) = [0]
	$8 = CALL $367(($5 + [800]), [9814])
	$9 = ($8 + [8])
	*((($5 + [816]) + [8])) = *($9)
	*($5 + [816]) = *($8)
	*($8) = (int_64)0
	*($9) = [0]
	CALL $375(($5 + [720]), *(*($10) + [57]))
	$8 = *($5 + [720])
	$9 = ($8 & [1])
	$8 = CALL $369(($5 + [816]), ( *($5 + [728]) ? (($5 + [720]) | [1]) : $9 ), ( *($5 + [724]) ? uint_32($8 >> [1]) : $9 ))
	$9 = ($8 + [8])
	*((($5 + [832]) + [8])) = *($9)
	*($5 + [832]) = *($8)
	*($8) = (int_64)0
	*($9) = [0]
	$8 = CALL $367(($5 + [832]), [9822])
	$9 = ($8 + [8])
	*((($5 + [848]) + [8])) = *($9)
	*($5 + [848]) = *($8)
	*($8) = (int_64)0
	*($9) = [0]
	CALL $376(($5 + [704]), *($5 + [1096]))
	$8 = *($5 + [704])
	$9 = ($8 & [1])
	$8 = CALL $369(($5 + [848]), ( *($5 + [712]) ? (($5 + [704]) | [1]) : $9 ), ( *($5 + [708]) ? uint_32($8 >> [1]) : $9 ))
	$9 = ($8 + [8])
	*((($5 + [576]) + [8])) = *($9)
	*($5 + [576]) = *($8)
	*($8) = (int_64)0
	*($9) = [0]
	$8 = CALL $367(($5 + [576]), [9830])
	$9 = ($8 + [8])
	*((($5 + [640]) + [8])) = *($9)
	*($5 + [640]) = *($8)
	*($8) = (int_64)0
	*($9) = [0]
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$513 }
	$9 = *([0] + [18928])
	
.LOOP $label$515:
	*((($5 + [1144]) + ($8 = $7))) = *(($9 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$7 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$514 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$515 }
	
.LABEL $label$514
	*(($5 + [696])) = [0]
	*($5 + [688]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$512 }
	*($5 + [688]) = ($7 << [1])
	$9 = (($5 + [688]) | [1])
	goto $label$511 
	
.LABEL $label$513
	*((($5 + [688]) + [8])) = [0]
	*($5 + [688]) = (int_64)0
	*($5 + [688]) = [0]
	$8 = (($5 + [688]) | [1])
	$7 = $8
	goto $label$510 
	
.LABEL $label$512
	$4 = (($7 + [16]) & [-16])
	$9 = CALL _Znwj($4)
	*($5 + [688]) = ($4 | [1])
	*($5 + [696]) = $9
	*($5 + [692]) = $7
	
.LABEL $label$511
	$4 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$516:
	*(($9 + $8)) = *((($5 + [1144]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$516 }
	$7 = ($9 + $7)
	$8 = (($5 + [688]) | [1])
	
.LABEL $label$510
	*($7) = [0]
	$7 = *($5 + [688])
	$9 = ($7 & [1])
	$8 = CALL $369(($5 + [640]), ( *($5 + [696]) ? $8 : $9 ), ( *($5 + [692]) ? uint_32($7 >> [1]) : $9 ))
	$7 = ($8 + [8])
	*((($5 + [864]) + [8])) = *($7)
	*($5 + [864]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	if ( (*($5 + [688]) & [1]) ){ goto $label$518 }
	if ( (*($5 + [640]) & [1]) ){ goto $label$517 }
	goto $label$469 
	
.LABEL $label$518
	CALL _ZdlPv(*((($5 + [688]) + [8])))
	if ( ((*($5 + [640]) & [1]) == 0) ){ goto $label$469 }
	
.LABEL $label$517
	CALL _ZdlPv(*($5 + [648]))
	$8 = [1]
	if ( ((*($5 + [576]) & [1]) == 0) ){ goto $label$468 }
	goto $label$467 
	
.LABEL $label$473
	CALL $359(($5 + [1032]))
	
.LABEL $label$472
	CALL $359(($5 + [1016]))
	
.LABEL $label$471
	CALL $359(($5 + [1000]))
	
.LABEL $label$470
	CALL $359(($5 + [984]))
	
.LABEL $label$469
	$8 = [1]
	if ( (*($5 + [576]) & [1]) ){ goto $label$467 }
	
.LABEL $label$468
	if ( (*($5 + [704]) & $8) ){ goto $label$466 }
	goto $label$465 
	
.LABEL $label$467
	CALL _ZdlPv(*($5 + [584]))
	if ( ((*($5 + [704]) & $8) == 0) ){ goto $label$465 }
	
.LABEL $label$466
	CALL _ZdlPv(*(($5 + [712])))
	$8 = [1]
	if ( ((*($5 + [848]) & [1]) == 0) ){ goto $label$464 }
	goto $label$463 
	
.LABEL $label$465
	$8 = [1]
	if ( (*($5 + [848]) & [1]) ){ goto $label$463 }
	
.LABEL $label$464
	if ( (*($5 + [832]) & $8) ){ goto $label$462 }
	goto $label$461 
	
.LABEL $label$463
	CALL _ZdlPv(*($5 + [856]))
	if ( ((*($5 + [832]) & $8) == 0) ){ goto $label$461 }
	
.LABEL $label$462
	CALL _ZdlPv(*($5 + [840]))
	$8 = [1]
	if ( ((*($5 + [720]) & [1]) == 0) ){ goto $label$460 }
	goto $label$459 
	
.LABEL $label$461
	$8 = [1]
	if ( (*($5 + [720]) & [1]) ){ goto $label$459 }
	
.LABEL $label$460
	if ( (*($5 + [816]) & $8) ){ goto $label$458 }
	goto $label$457 
	
.LABEL $label$459
	CALL _ZdlPv(*(($5 + [728])))
	if ( ((*($5 + [816]) & $8) == 0) ){ goto $label$457 }
	
.LABEL $label$458
	CALL _ZdlPv(*($5 + [824]))
	$8 = [1]
	if ( ((*($5 + [800]) & [1]) == 0) ){ goto $label$456 }
	goto $label$455 
	
.LABEL $label$457
	$8 = [1]
	if ( (*($5 + [800]) & [1]) ){ goto $label$455 }
	
.LABEL $label$456
	if ( (*($5 + [736]) & $8) ){ goto $label$454 }
	goto $label$453 
	
.LABEL $label$455
	CALL _ZdlPv(*($5 + [808]))
	if ( ((*($5 + [736]) & $8) == 0) ){ goto $label$453 }
	
.LABEL $label$454
	CALL _ZdlPv(*(($5 + [744])))
	$8 = [1]
	if ( ((*($5 + [784]) & [1]) == 0) ){ goto $label$452 }
	goto $label$451 
	
.LABEL $label$453
	$8 = [1]
	if ( (*($5 + [784]) & [1]) ){ goto $label$451 }
	
.LABEL $label$452
	if ( (*($5 + [768]) & $8) ){ goto $label$450 }
	goto $label$449 
	
.LABEL $label$451
	CALL _ZdlPv(*($5 + [792]))
	if ( ((*($5 + [768]) & $8) == 0) ){ goto $label$449 }
	
.LABEL $label$450
	CALL _ZdlPv(*($5 + [776]))
	$7 = [1]
	if ( (*($5 + [752]) & [1]) ){ goto $label$448 }
	goto $label$447 
	
.LABEL $label$449
	$7 = [1]
	if ( ((*($5 + [752]) & [1]) == 0) ){ goto $label$447 }
	
.LABEL $label$448
	CALL _ZdlPv(*($5 + [760]))
	
.LABEL $label$447
	$2 = *($0)
	*($5 + [624]) = [9726]
	*($5 + [628]) = CALL $393([9726])
	*($5 + [104]) = *($5 + [624])
	$1 = *(CALL $103(($5 + [632]), ($5 + [104])))
	*($5 + [608]) = [9561]
	*($5 + [612]) = CALL $393([9561])
	*($5 + [96]) = *($5 + [608])
	$8 = CALL $103(($5 + [616]), ($5 + [96]))
	*($5 + [592]) = [9733]
	*($5 + [596]) = CALL $393([9733])
	*($5 + [88]) = *($5 + [592])
	$9 = CALL $103(($5 + [600]), ($5 + [88]))
	*((($5 + [1144]) + [24])) = *(($3 + [8]))
	*($5 + [1144]) = *($0)
	*($5 + [1160]) = *($3)
	*($5 + [1152]) = *(*($10) + [48])
	$4 = CALL $360((($5 + [1144]) + [32]), ($5 + [864]))
	*(($3 = (($5 + [640]) + [24]))) = [0]
	*($5 + [656]) = (int_64)0
	*($5 + [640]) = *($8)
	*($5 + [648]) = *($9)
	*(($8 = CALL _Znwj([16]))) = $2
	*($8 + [8]) = $1
	*((($5 + [640]) + [36])) = [0]
	$9 = ($8 + [16])
	*($3) = $9
	*(($5 + [660])) = $9
	*($5 + [656]) = $8
	*($5 + [668 align=4]) = (int_64)0
	$8 = *($4)
	$9 = ( *((($5 + [1144]) + [36])) ? uint_32($8 >> $7) : ($8 & $7) )
	$8 = ($9 + [32])
	$2 = (CASTING uint_64)(uint_32 $9)
	$9 = ($5 + [668])
	
.LOOP $label$519:
	$8 = ($8 + $7)
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$519 }
	if ( ($8 == 0) ){ goto $label$521 }
	CALL $140($9, $8)
	$7 = *(($5 + [672]))
	$8 = *(($5 + [668]))
	goto $label$520 
	
.LABEL $label$521
	$7 = [0]
	$8 = [0]
	
.LABEL $label$520
	*($5 + [580]) = $8
	*($5 + [576]) = $8
	*($5 + [584]) = $7
	*($5 + [832]) = ($5 + [576])
	*($5 + [848]) = ($5 + [1144])
	CALL $141(($5 + [848]), ($5 + [832]))
	CALL $132(($5 + [640]))
	$8 = *($5 + [668])
	if ( ($8 == 0) ){ goto $label$522 }
	*(($5 + [672])) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$522
	$8 = *($5 + [656])
	if ( ($8 == 0) ){ goto $label$523 }
	*(($5 + [660])) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$523
	if ( ((*($5 + [1176]) & [1]) == 0) ){ goto $label$524 }
	CALL _ZdlPv(*(($5 + [1184])))
	
.LABEL $label$524
	$2 = *($0)
	*($5 + [560]) = [9726]
	*($5 + [564]) = CALL $393([9726])
	*($5 + [80]) = *($5 + [560])
	$8 = CALL $103(($5 + [568]), ($5 + [80]))
	*($5 + [576]) = $2
	*($5 + [584]) = *($8)
	*($5 + [544]) = [9561]
	*($5 + [548]) = CALL $393([9561])
	*($5 + [72]) = *($5 + [544])
	$8 = CALL $103(($5 + [552]), ($5 + [72]))
	*($5 + [528]) = [9733]
	*($5 + [532]) = CALL $393([9733])
	*($5 + [64]) = *($5 + [528])
	$7 = CALL $103(($5 + [536]), ($5 + [64]))
	$2 = *($0)
	*($5 + [520]) = [9742]
	*($5 + [524]) = CALL $393([9742])
	*($5 + [56]) = *($5 + [520])
	$9 = CALL $103(($5 + [848]), ($5 + [56]))
	*(($5 + [1168])) = $6
	*($5 + [1144]) = $2
	*($5 + [1160]) = $11
	*($5 + [1152]) = *($9)
	CALL $360((($5 + [1144]) + [32]), ($5 + [864]))
	$8 = CALL $131(($5 + [640]), ($5 + [576]), *($8), *($7), ($5 + [1144]))
	CALL $132($8)
	$7 = *($8 + [28])
	if ( ($7 == 0) ){ goto $label$525 }
	*(($8 + [32])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$525
	$7 = *($8 + [16])
	if ( ($7 == 0) ){ goto $label$526 }
	*(($8 + [20])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$526
	if ( ((*($5 + [1176]) & [1]) == 0) ){ goto $label$527 }
	CALL _ZdlPv(*(($5 + [1184])))
	
.LABEL $label$527
	$8 = *($10)
	if ( ((int_64)*($5 + [1096]) != (int_64)*($8 + [80])) ){ goto $label$529 }
	CALL $142($0, *($8 + [48]))
	$2 = *($5 + [1080])
	*($5 + [1144]) = $2
	$8 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	if ( $8) ){ goto $label$530 }
	CALL eosio_assert([0], [19223])
	$8 = *($5 + [1148])
	
.LABEL $label$530
	CALL $68(($5 + [1144]))
	CALL $69(*($5 + [1088]), $8)
	goto $label$528 
	
.LABEL $label$529
	$2 = *($0)
	*($5 + [1148]) = ($5 + [1096])
	*($5 + [1144]) = ($5 + [1080])
	if ( $8 ){ goto $label$531 }
	CALL eosio_assert([0], [19537])
	
.LABEL $label$531
	CALL $143(*($5 + [1088]), $8, $2, ($5 + [1144]))
	
.LABEL $label$528
	$8 = *($10)
	$1 = *(($8 + [72]))
	*((($5 + [504]) + [8])) = $1
	$6 = *($8 + [57])
	$7 = *($8 + [56])
	$2 = *($8 + [64])
	*((($5 + [40]) + [8])) = $1
	*($5 + [504]) = $2
	*($5 + [40]) = $2
	CALL $144($0, $7, $6, ($5 + [40]))
	if ( ((*($5 + [864]) & [1]) == 0) ){ goto $label$532 }
	CALL _ZdlPv(*($5 + [872]))
	
.LABEL $label$532
	$9 = *($5 + [1264])
	if ( ($9 == 0) ){ goto $label$85 }
	$0 = ($5 + [1268])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$534 }
	
.LOOP $label$535:
	$8 = ($8 + [-24])
	$7 = *($8)
	*($8) = [0]
	if ( ($7 == 0) ){ goto $label$536 }
	CALL _ZdlPv($7)
	
.LABEL $label$536
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$535 }
	$8 = *(($5 + [1264]))
	goto $label$533 
	
.LABEL $label$534
	$8 = $9
	
.LABEL $label$533
	*($0) = $9
	CALL _ZdlPv($8)
	$9 = *($5 + [1456])
	if ( $9 ){ goto $label$47 }
	goto $label$48 
	
.LABEL $label$85
	$9 = *($5 + [1456])
	if ( $9 ){ goto $label$47 }
	
.LABEL $label$48
	$9 = *($5 + [1520])
	if ( ($9 == 0) ){ goto $label$45 }
	goto $label$46 
	
.LABEL $label$47
	$7 = *($5 + [1460])
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$538 }
	
.LOOP $label$539:
	$8 = ($7 + [-12])
	if ( ((*($8) & [1]) == 0) ){ goto $label$540 }
	CALL _ZdlPv(*(($7 + [-4])))
	
.LABEL $label$540
	$7 = $8
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$539 }
	$8 = *($5 + [1456])
	goto $label$537 
	
.LABEL $label$538
	$8 = $9
	
.LABEL $label$537
	*($5 + [1460]) = $9
	CALL _ZdlPv($8)
	$9 = *($5 + [1520])
	if ( ($9 == 0) ){ goto $label$45 }
	
.LABEL $label$46
	$0 = ($5 + [1524])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$542 }
	
.LOOP $label$543:
	$8 = ($8 + [-24])
	$7 = *($8)
	*($8) = [0]
	if ( ($7 == 0) ){ goto $label$544 }
	CALL _ZdlPv($7)
	
.LABEL $label$544
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$543 }
	$8 = *(($5 + [1520]))
	goto $label$541 
	
.LABEL $label$542
	$8 = $9
	
.LABEL $label$541
	*($0) = $9
	CALL _ZdlPv($8)
	
.LABEL $label$45
	if ( ((*($5 + [1568]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*($5 + [1576]))
	
.LABEL $label$1
	$global$0 = ($5 + [1648])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $189 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-7807363788000198656, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $322($6, $8)
	*($3 + [28]) = [0]
	*($3 + [24]) = $6
	$7 = *(*(CALL $324(($3 + [24])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [19728])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	$6 = *($5 + [4])
	*($1 + [16]) = *($6)
	*(($1 + [40])) = *(($6 + [24]))
	*(($1 + [32])) = *(($6 + [16]))
	*(($1 + [24])) = *(($6 + [8]))
	$8 = ($1 + [48])
	CALL $362($8, *($5 + [8]))
	$9 = ($1 + [60])
	CALL $362($9, *($5 + [12]))
	$6 = *($5 + [16])
	*($1 + [72]) = *($6)
	*(($1 + [80])) = *(($6 + [8]))
	*($1 + [88]) = *(*($5 + [20]))
	$5 = *($1 + [48])
	$6 = ( *(($1 + [52])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($6 + [64])
	$7 = (CASTING uint_64)(uint_32 $6)
	$10 = ($1 + [88])
	$11 = ($1 + [72])
	$12 = ($1 + [16])
	
.LOOP $label$5:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$5 }
	$6 = *(($1 + [60]))
	$6 = ( *(($1 + [64])) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$5 = ($6 + $5)
	$7 = (CASTING uint_64)(uint_32 $6)
	
.LOOP $label$6:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$6 }
	if ( ($5 <= [513]) ){ goto $label$8 }
	$6 = CALL $397($5)
	goto $label$7 
	
.LABEL $label$8
	$6 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$7
	*($3 + [4]) = $6
	*($3) = $6
	*($3 + [8]) = ($6 + $5)
	*($3 + [16]) = $3
	*($3 + [28]) = $12
	*($3 + [24]) = $1
	*($3 + [32]) = $8
	*($3 + [36]) = $9
	*($3 + [40]) = $11
	*($3 + [44]) = $10
	CALL $325(($3 + [24]), ($3 + [16]))
	$7 = *($1)
	*($1 + [100]) = CALL db_store_i64(*($4 + [8]), (int_64)-7807363788000198656, *(*($0 + [8])), $7, $6, $5)
	if ( ($5 <= [513]) ){ goto $label$9 }
	CALL $400($6)
	
.LABEL $label$9
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$10 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	$7 = *(($4 + [8]))
	$13 = *(*(($0 + [8])))
	$14 = *($1)
	*($3 + [24]) = *($1 + [16])
	*($1 + [104]) = CALL db_idx64_store($7, (int_64)-7807363788000198656, $13, $14, ($3 + [24]))
	$global$0 = ($3 + [48])
}

void .FUNC $188 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-7807363788000198656, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [96]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [19486])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $322($7, CALL $fimport$7(*($7), *($7 + [8]), (int_64)-7807363788000198656, $6))
	if ( ((int_32)*($4 + [96]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$2
	*(($4 + [104])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $49 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_64 $17
	$7 = ($global$0 - [384])
	$global$0 = $7
	CALL require_auth(*($0))
	*(($7 + [376])) = [0]
	*($7 + [368]) = (int_64)0
	$8 = CALL $393([8932])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$13 }
	$9 = ($2 <= [240])
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$16 }
	*($7 + [368]) = ($8 << [1])
	$10 = (($7 + [368]) | [1])
	if ( $8 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$11 = (($8 + [16]) & [-16])
	$10 = CALL _Znwj($11)
	*($7 + [368]) = ($11 | [1])
	*($7 + [376]) = $10
	*($7 + [372]) = $8
	
.LABEL $label$15
	CALL memcpy($10, [8932], $8)
	
.LABEL $label$14
	*(($10 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($7, [166], ($7 + [368])))
	if ( ((*($7 + [368]) & [1]) == 0) ){ goto $label$17 }
	CALL _ZdlPv(*($7 + [376]))
	
.LABEL $label$17
	*(($7 + [360])) = [0]
	*($7 + [352]) = (int_64)0
	$8 = CALL $393([8945])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$12 }
	$11 = ((int_32)$3 != (int_32)[0])
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$20 }
	*($7 + [352]) = ($8 << [1])
	$10 = (($7 + [352]) | [1])
	if ( $8 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	$9 = (($8 + [16]) & [-16])
	$10 = CALL _Znwj($9)
	*($7 + [352]) = ($9 | [1])
	*($7 + [360]) = $10
	*($7 + [356]) = $8
	
.LABEL $label$19
	CALL memcpy($10, [8945], $8)
	
.LABEL $label$18
	$9 = [0]
	*(($10 + $8)) = [0]
	CALL eosio_assert($11, CALL $5($7, [107], ($7 + [352])))
	if ( ((*($7 + [352]) & [1]) == 0) ){ goto $label$21 }
	CALL _ZdlPv(*($7 + [360]))
	
.LABEL $label$21
	*(($7 + [344])) = [0]
	*($7 + [328]) = (int_64)-1
	*($7 + [336]) = (int_64)0
	$12 = *($0)
	*($7 + [312]) = $12
	*($7 + [320]) = $1
	$8 = CALL db_find_i64($12, $1, (int_64)-3913339338187833344, *($4))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$22 }
	$9 = CALL $12(($7 + [312]), $8)
	if ( ((int_32)*($9 + [88]) == (int_32)($7 + [312])) ){ goto $label$22 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$22
	*(($7 + [304])) = [0]
	*($7 + [296]) = (int_64)0
	$8 = CALL $393([8539])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$11 }
	$13 = ((int_32)$9 != (int_32)[0])
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$25 }
	*($7 + [296]) = ($8 << [1])
	$10 = (($7 + [296]) | [1])
	if ( $8 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$11 = (($8 + [16]) & [-16])
	$10 = CALL _Znwj($11)
	*($7 + [296]) = ($11 | [1])
	*($7 + [304]) = $10
	*($7 + [300]) = $8
	
.LABEL $label$24
	CALL memcpy($10, [8539], $8)
	
.LABEL $label$23
	$11 = [0]
	*(($10 + $8)) = [0]
	CALL eosio_assert($13, CALL $5($7, [101], ($7 + [296])))
	if ( ((*($7 + [296]) & [1]) == 0) ){ goto $label$26 }
	CALL _ZdlPv(*($7 + [304]))
	
.LABEL $label$26
	CALL $375(($7 + [232]), $2)
	$8 = CALL $371(($7 + [232]), [0], [8960])
	$10 = ($8 + [8])
	*((($7 + [248]) + [8])) = *($10)
	*($7 + [248]) = *($8)
	*($8) = (int_64)0
	*($10) = [0]
	$8 = CALL $367(($7 + [248]), [8864])
	$10 = ($8 + [8])
	*((($7 + [264]) + [8])) = *($10)
	*($7 + [264]) = *($8)
	*($8) = (int_64)0
	*($10) = [0]
	CALL $375(($7 + [216]), $3)
	$8 = *($7 + [216])
	$10 = ($8 & [1])
	$8 = CALL $369(($7 + [264]), ( *($7 + [224]) ? (($7 + [216]) | [1]) : $10 ), ( *($7 + [220]) ? uint_32($8 >> [1]) : $10 ))
	$10 = ($8 + [8])
	*((($7 + [280]) + [8])) = *($10)
	*($7 + [280]) = *($8)
	*($8) = (int_64)0
	*($10) = [0]
	$8 = ($8 & [1])
	$8 = *($7 + [280])
	$13 = ($8 & [1])
	$8 = *($9 + [32])
	$14 = uint_32($8 >> [1])
	$15 = ( *(($9 + [36])) ? $14 : $13 )
	if ( ((int_32)$15 != (int_32)( *($7 + [284]) ? uint_32($8 >> [1]) : $8 )) ){ goto $label$27 }
	$11 = [1]
	$8 = ( *($7 + [288]) ? (($7 + [280]) | [1]) : $8 )
	$10 = (($9 + [32]) + [1])
	if ( $13 ){ goto $label$29 }
	if ( ($15 == 0) ){ goto $label$27 }
	$13 = ([0] - $14)
	
.LOOP $label$30:
	if ( ((int_32)*($10) != (int_32)*($8)) ){ goto $label$28 }
	$11 = [1]
	$8 = ($8 + [1])
	$10 = ($10 + [1])
	$13 = ($13 + [1])
	if ( $13 ){ goto $label$30 }
	goto $label$27 
	
.LABEL $label$29
	if ( ($15 == 0) ){ goto $label$27 }
	$11 = (CALL $392(( *(($9 + [40])) ? $10 : $13 ), $8, $15) == 0)
	goto $label$27 
	
.LABEL $label$28
	$11 = [0]
	
.LABEL $label$27
	*((($7 + [200]) + [8])) = [0]
	*($7 + [200]) = (int_64)0
	$8 = CALL $393([8866])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$10 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$33 }
	*($7 + [200]) = ($8 << [1])
	$10 = (($7 + [200]) | [1])
	if ( $8 ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$33
	$13 = (($8 + [16]) & [-16])
	$10 = CALL _Znwj($13)
	*($7 + [200]) = ($13 | [1])
	*($7 + [208]) = $10
	*($7 + [204]) = $8
	
.LABEL $label$32
	CALL memcpy($10, [8866], $8)
	
.LABEL $label$31
	*(($10 + $8)) = [0]
	CALL eosio_assert($11, CALL $5($7, [102], ($7 + [200])))
	if ( (*($7 + [200]) & [1]) ){ goto $label$35 }
	if ( (*($7 + [280]) & [1]) ){ goto $label$34 }
	goto $label$9 
	
.LABEL $label$35
	CALL _ZdlPv(*($7 + [208]))
	if ( ((*($7 + [280]) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$34
	CALL _ZdlPv(*($7 + [288]))
	$8 = [1]
	if ( ((*($7 + [216]) & [1]) == 0) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$13
	CALL $359(($7 + [368]))
	
.LABEL $label$12
	CALL $359(($7 + [352]))
	
.LABEL $label$11
	CALL $359(($7 + [296]))
	
.LABEL $label$10
	CALL $359(($7 + [200]))
	
.LABEL $label$9
	$8 = [1]
	if ( (*($7 + [216]) & [1]) ){ goto $label$7 }
	
.LABEL $label$8
	if ( (*($7 + [264]) & $8) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL _ZdlPv(*(($7 + [224])))
	if ( ((*($7 + [264]) & $8) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL _ZdlPv(*($7 + [272]))
	$8 = [1]
	if ( ((*($7 + [248]) & [1]) == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$8 = [1]
	if ( (*($7 + [248]) & [1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ((*($7 + [232]) & $8) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL _ZdlPv(*($7 + [256]))
	if ( ((*($7 + [232]) & $8) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL _ZdlPv(*($7 + [240]))
	
.LABEL $label$1
	*(($8 = (($7 + [160]) + [24]))) = *(($4 + [24]))
	*(($10 = (($7 + [160]) + [16]))) = *(($4 + [16]))
	*(($11 = (($7 + [128]) + [16]))) = *(($5 + [16]))
	*(($13 = (($7 + [128]) + [24]))) = *(($5 + [24]))
	*(($15 = (($7 + [96]) + [16]))) = *(($6 + [16]))
	*(($14 = (($7 + [96]) + [24]))) = *(($6 + [24]))
	*($7 + [168]) = *(($4 + [8]))
	*($7 + [160]) = *($4)
	*($7 + [128]) = *($5)
	*($7 + [136]) = *(($5 + [8]))
	*($7 + [96]) = *($6)
	*($7 + [104]) = *(($6 + [8]))
	*((($7 + [64]) + [24])) = *($8)
	$12 = *($9 + [80])
	*((($7 + [64]) + [16])) = *($10)
	*((($7 + [32]) + [24])) = *($13)
	*((($7 + [32]) + [16])) = *($11)
	*(($7 + [24])) = *($14)
	*(($7 + [16])) = *($15)
	*($7 + [72]) = *($7 + [168])
	*($7 + [64]) = *($7 + [160])
	*($7 + [40]) = *($7 + [136])
	*($7 + [32]) = *($7 + [128])
	*($7 + [8]) = *($7 + [104])
	*($7) = *($7 + [96])
	$12 = CALL $17($0, $1, ($7 + [64]), ($7 + [32]), $7, $12)
	if ( ((uint_32)(($2 + [-101]) & [255]) > (uint_32)[19]) ){ goto $label$37 }
	$8 = ($2 + [-40])
	goto $label$36 
	
.LABEL $label$37
	if ( ((uint_32)(($2 + [-121]) & [255]) > (uint_32)[19]) ){ goto $label$38 }
	$8 = ($2 + [-60])
	goto $label$36 
	
.LABEL $label$38
	$8 = ( ($2 + [-80]) ? $2 : ((($2 + [115]) & [255]) <= [20]) )
	
.LABEL $label$36
	CALL $37($0, $1, ($8 & [255]), (int_64)1, (int_64)1, ((int_32)$3 == (int_32)[1]))
	$16 = (int_64)100
	$12 = ((uint_64)$12 % (uint_64)(int_64)100)
	$17 = (int_64)0
	$8 = ($3 + [-1])
	if ( ((uint_32)($8 & [255]) > (uint_32)[13]) ){ goto $label$39 }
	$8 = (int_32(($8 << [24]) >> [24]) << [3])
	$16 = *(($8 + [20160]))
	$17 = *(($8 + [20048]))
	
.LABEL $label$39
	$8 = ( [1] ? ( [-1] ? [0] : ((uint_64)$12 >= (uint_64)$16) ) : (uint_64)($12 <= $17) )
	if ( ($8 == 0) ){ goto $label$40 }
	CALL $37($0, $1, $2, (CASTING uint_64)(uint_32 $3), (int_64)1, [0])
	CALL $43($0, $1, $2, (CASTING int_64)(int_32 ($8 + $3)), (int_64)1)
	
.LABEL $label$40
	$2 = *($7 + [336])
	if ( ($2 == 0) ){ goto $label$41 }
	$9 = ($7 + [340])
	$8 = *($9)
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$43 }
	
.LOOP $label$44:
	$8 = ($8 + [-24])
	$10 = *($8)
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$45 }
	if ( ((*($10 + [32]) & [1]) == 0) ){ goto $label$46 }
	CALL _ZdlPv(*(($10 + [40])))
	
.LABEL $label$46
	CALL _ZdlPv($10)
	
.LABEL $label$45
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$44 }
	$8 = *(($7 + [336]))
	goto $label$42 
	
.LABEL $label$43
	$8 = $2
	
.LABEL $label$42
	*($9) = $2
	CALL _ZdlPv($8)
	
.LABEL $label$41
	$global$0 = ($7 + [384])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $48 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$7 = ($global$0 - [416])
	$global$0 = $7
	CALL require_auth(*($0))
	*(($7 + [408])) = [0]
	*($7 + [400]) = (int_64)0
	$8 = CALL $393([8805])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$13 }
	$9 = ((uint_32)$3 > (uint_32)[4])
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$16 }
	*($7 + [400]) = ($8 << [1])
	$10 = (($7 + [400]) | [1])
	if ( $8 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$11 = (($8 + [16]) & [-16])
	$10 = CALL _Znwj($11)
	*($7 + [400]) = ($11 | [1])
	*($7 + [408]) = $10
	*($7 + [404]) = $8
	
.LABEL $label$15
	CALL memcpy($10, [8805], $8)
	
.LABEL $label$14
	*(($10 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($7, [168], ($7 + [400])))
	if ( ((*($7 + [400]) & [1]) == 0) ){ goto $label$17 }
	CALL _ZdlPv(*($7 + [408]))
	
.LABEL $label$17
	*(($7 + [392])) = [0]
	*($7 + [384]) = (int_64)0
	$8 = CALL $393([8833])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$12 }
	$11 = ((($2 + [-61]) & [255]) <= [20])
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$20 }
	*($7 + [384]) = ($8 << [1])
	$10 = (($7 + [384]) | [1])
	if ( $8 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	$9 = (($8 + [16]) & [-16])
	$10 = CALL _Znwj($9)
	*($7 + [384]) = ($9 | [1])
	*($7 + [392]) = $10
	*($7 + [388]) = $8
	
.LABEL $label$19
	CALL memcpy($10, [8833], $8)
	
.LABEL $label$18
	$9 = [0]
	*(($10 + $8)) = [0]
	CALL eosio_assert($11, CALL $5($7, [169], ($7 + [384])))
	if ( ((*($7 + [384]) & [1]) == 0) ){ goto $label$21 }
	CALL _ZdlPv(*($7 + [392]))
	
.LABEL $label$21
	*(($7 + [376])) = [0]
	*($7 + [360]) = (int_64)-1
	*($7 + [368]) = (int_64)0
	$12 = *($0)
	*($7 + [344]) = $12
	*($7 + [352]) = $1
	$8 = CALL db_find_i64($12, $1, (int_64)-3913339338187833344, *($4))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$22 }
	$9 = CALL $12(($7 + [344]), $8)
	if ( ((int_32)*($9 + [88]) == (int_32)($7 + [344])) ){ goto $label$22 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$22
	*(($7 + [336])) = [0]
	*($7 + [328]) = (int_64)0
	$8 = CALL $393([8539])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$11 }
	$13 = ((int_32)$9 != (int_32)[0])
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$25 }
	*($7 + [328]) = ($8 << [1])
	$10 = (($7 + [328]) | [1])
	if ( $8 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$11 = (($8 + [16]) & [-16])
	$10 = CALL _Znwj($11)
	*($7 + [328]) = ($11 | [1])
	*($7 + [336]) = $10
	*($7 + [332]) = $8
	
.LABEL $label$24
	CALL memcpy($10, [8539], $8)
	
.LABEL $label$23
	$11 = [0]
	*(($10 + $8)) = [0]
	CALL eosio_assert($13, CALL $5($7, [101], ($7 + [328])))
	if ( ((*($7 + [328]) & [1]) == 0) ){ goto $label$26 }
	CALL _ZdlPv(*($7 + [336]))
	
.LABEL $label$26
	CALL $375(($7 + [264]), $2)
	$8 = CALL $371(($7 + [264]), [0], [8849])
	$10 = ($8 + [8])
	*((($7 + [280]) + [8])) = *($10)
	*($7 + [280]) = *($8)
	*($8) = (int_64)0
	*($10) = [0]
	$8 = CALL $367(($7 + [280]), [8864])
	$10 = ($8 + [8])
	*((($7 + [296]) + [8])) = *($10)
	*($7 + [296]) = *($8)
	*($8) = (int_64)0
	*($10) = [0]
	CALL $375(($7 + [248]), $3)
	$8 = *($7 + [248])
	$10 = ($8 & [1])
	$8 = CALL $369(($7 + [296]), ( *($7 + [256]) ? (($7 + [248]) | [1]) : $10 ), ( *($7 + [252]) ? uint_32($8 >> [1]) : $10 ))
	$10 = ($8 + [8])
	*((($7 + [312]) + [8])) = *($10)
	*($7 + [312]) = *($8)
	*($8) = (int_64)0
	*($10) = [0]
	$8 = ($8 & [1])
	$8 = *($7 + [312])
	$13 = ($8 & [1])
	$8 = *($9 + [32])
	$14 = uint_32($8 >> [1])
	$15 = ( *(($9 + [36])) ? $14 : $13 )
	if ( ((int_32)$15 != (int_32)( *($7 + [316]) ? uint_32($8 >> [1]) : $8 )) ){ goto $label$27 }
	$11 = [1]
	$8 = ( *($7 + [320]) ? (($7 + [312]) | [1]) : $8 )
	$10 = (($9 + [32]) + [1])
	if ( $13 ){ goto $label$29 }
	if ( ($15 == 0) ){ goto $label$27 }
	$13 = ([0] - $14)
	
.LOOP $label$30:
	if ( ((int_32)*($10) != (int_32)*($8)) ){ goto $label$28 }
	$11 = [1]
	$8 = ($8 + [1])
	$10 = ($10 + [1])
	$13 = ($13 + [1])
	if ( $13 ){ goto $label$30 }
	goto $label$27 
	
.LABEL $label$29
	if ( ($15 == 0) ){ goto $label$27 }
	$11 = (CALL $392(( *(($9 + [40])) ? $10 : $13 ), $8, $15) == 0)
	goto $label$27 
	
.LABEL $label$28
	$11 = [0]
	
.LABEL $label$27
	*((($7 + [232]) + [8])) = [0]
	*($7 + [232]) = (int_64)0
	$8 = CALL $393([8866])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$10 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$33 }
	*($7 + [232]) = ($8 << [1])
	$10 = (($7 + [232]) | [1])
	if ( $8 ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$33
	$13 = (($8 + [16]) & [-16])
	$10 = CALL _Znwj($13)
	*($7 + [232]) = ($13 | [1])
	*($7 + [240]) = $10
	*($7 + [236]) = $8
	
.LABEL $label$32
	CALL memcpy($10, [8866], $8)
	
.LABEL $label$31
	*(($10 + $8)) = [0]
	CALL eosio_assert($11, CALL $5($7, [102], ($7 + [232])))
	if ( (*($7 + [232]) & [1]) ){ goto $label$35 }
	if ( (*($7 + [312]) & [1]) ){ goto $label$34 }
	goto $label$9 
	
.LABEL $label$35
	CALL _ZdlPv(*($7 + [240]))
	if ( ((*($7 + [312]) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$34
	CALL _ZdlPv(*($7 + [320]))
	$8 = [1]
	if ( ((*($7 + [248]) & [1]) == 0) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$13
	CALL $359(($7 + [400]))
	
.LABEL $label$12
	CALL $359(($7 + [384]))
	
.LABEL $label$11
	CALL $359(($7 + [328]))
	
.LABEL $label$10
	CALL $359(($7 + [232]))
	
.LABEL $label$9
	$8 = [1]
	if ( (*($7 + [248]) & [1]) ){ goto $label$7 }
	
.LABEL $label$8
	if ( (*($7 + [296]) & $8) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL _ZdlPv(*(($7 + [256])))
	if ( ((*($7 + [296]) & $8) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL _ZdlPv(*($7 + [304]))
	$8 = [1]
	if ( ((*($7 + [280]) & [1]) == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$8 = [1]
	if ( (*($7 + [280]) & [1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ((*($7 + [264]) & $8) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL _ZdlPv(*($7 + [288]))
	if ( ((*($7 + [264]) & $8) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL _ZdlPv(*($7 + [272]))
	
.LABEL $label$1
	*(($8 = (($7 + [192]) + [24]))) = *(($4 + [24]))
	*(($10 = (($7 + [192]) + [16]))) = *(($4 + [16]))
	*(($11 = (($7 + [160]) + [16]))) = *(($5 + [16]))
	*(($13 = (($7 + [160]) + [24]))) = *(($5 + [24]))
	*(($15 = (($7 + [128]) + [16]))) = *(($6 + [16]))
	*(($14 = (($7 + [128]) + [24]))) = *(($6 + [24]))
	*($7 + [200]) = *(($4 + [8]))
	*($7 + [192]) = *($4)
	*($7 + [160]) = *($5)
	*($7 + [168]) = *(($5 + [8]))
	*($7 + [128]) = *($6)
	*($7 + [136]) = *(($6 + [8]))
	*((($7 + [64]) + [24])) = *($8)
	$12 = *($9 + [80])
	*((($7 + [64]) + [16])) = *($10)
	*((($7 + [32]) + [24])) = *($13)
	*((($7 + [32]) + [16])) = *($11)
	*(($7 + [24])) = *($14)
	*(($7 + [16])) = *($15)
	*($7 + [72]) = *($7 + [200])
	*($7 + [64]) = *($7 + [192])
	*($7 + [40]) = *($7 + [168])
	*($7 + [32]) = *($7 + [160])
	*($7 + [8]) = *($7 + [136])
	*($7) = *($7 + [128])
	$8 = (CASTING uint_32)(uint_64 ((uint_64)CALL $17($0, $1, ($7 + [64]), ($7 + [32]), $7, $12) % (uint_64)(int_64)3))
	if ( ((int_32)$8 == (int_32)[2]) ){ goto $label$39 }
	if ( ((int_32)$8 == (int_32)[1]) ){ goto $label$40 }
	if ( $8 ){ goto $label$38 }
	$9 = ($2 + [40])
	goto $label$37 
	
.LABEL $label$40
	$9 = ($2 + [60])
	goto $label$37 
	
.LABEL $label$39
	$9 = ($2 + [80])
	goto $label$37 
	
.LABEL $label$38
	*(($7 + [120])) = [0]
	*($7 + [112]) = (int_64)0
	$8 = CALL $393([8887])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$36 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$43 }
	*($7 + [112]) = ($8 << [1])
	$10 = (($7 + [112]) | [1])
	if ( $8 ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$43
	$9 = (($8 + [16]) & [-16])
	$10 = CALL _Znwj($9)
	*($7 + [112]) = ($9 | [1])
	*($7 + [120]) = $10
	*($7 + [116]) = $8
	
.LABEL $label$42
	CALL memcpy($10, [8887], $8)
	
.LABEL $label$41
	$9 = [0]
	*(($10 + $8)) = [0]
	CALL eosio_assert([0], CALL $5($7, [170], ($7 + [112])))
	if ( ((*($7 + [112]) & [1]) == 0) ){ goto $label$37 }
	CALL _ZdlPv(*($7 + [120]))
	
.LABEL $label$37
	*(($7 + [104])) = [0]
	*($7 + [96]) = (int_64)0
	$8 = CALL $393([8909])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$44 }
	$4 = (($9 + [-101]) <= [60])
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$47 }
	*($7 + [96]) = ($8 << [1])
	$10 = (($7 + [96]) | [1])
	if ( $8 ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$47
	$11 = (($8 + [16]) & [-16])
	$10 = CALL _Znwj($11)
	*($7 + [96]) = ($11 | [1])
	*($7 + [104]) = $10
	*($7 + [100]) = $8
	
.LABEL $label$46
	CALL memcpy($10, [8909], $8)
	
.LABEL $label$45
	*(($10 + $8)) = [0]
	CALL eosio_assert($4, CALL $5($7, [171], ($7 + [96])))
	if ( ((*($7 + [96]) & [1]) == 0) ){ goto $label$48 }
	CALL _ZdlPv(*($7 + [104]))
	
.LABEL $label$48
	$12 = (CASTING uint_64)(uint_32 $3)
	CALL $37($0, $1, $2, $12, (int_64)1, [0])
	CALL $43($0, $1, ($9 & [255]), $12, (int_64)1)
	$9 = *($7 + [368])
	if ( ($9 == 0) ){ goto $label$49 }
	$4 = ($7 + [372])
	$8 = *($4)
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$51 }
	
.LOOP $label$52:
	$8 = ($8 + [-24])
	$10 = *($8)
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$53 }
	if ( ((*($10 + [32]) & [1]) == 0) ){ goto $label$54 }
	CALL _ZdlPv(*(($10 + [40])))
	
.LABEL $label$54
	CALL _ZdlPv($10)
	
.LABEL $label$53
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$52 }
	$8 = *(($7 + [368]))
	goto $label$50 
	
.LABEL $label$51
	$8 = $9
	
.LABEL $label$50
	*($4) = $9
	CALL _ZdlPv($8)
	
.LABEL $label$49
	$global$0 = ($7 + [416])
	return (unreachable)
	
.LABEL $label$44
	CALL $359(($7 + [96]))
	
.LABEL $label$36
	CALL $359(($7 + [112]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $264 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	$2 = ($3 + [8])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [16])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[31]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [32])
	*(($0 = ($0 + [4]))) = (*($0) + [32])
	$2 = ($3 + [48])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[31]) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	$4 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [32])
	*(($0 = ($0 + [4]))) = (*($0) + [32])
	$2 = ($3 + [80])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[31]) ){ goto $label$5 }
	CALL eosio_assert([0], [19214])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [32])
	*(($0 = ($0 + [4]))) = (*($0) + [32])
	$0 = ($3 + [112])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [19214])
	$3 = *(($1 + [4]))
	
.LABEL $label$6
	CALL memcpy($0, $3, [4])
	*(($1 = ($1 + [4]))) = (*($1) + [4])
}

void .FUNC $265 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $285(*($1), *($0))
	$0 = *($0)
	$3 = ($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy(($2 + [15]), $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	*(($0 + [16])) = ((int_32)*($2 + [15]) != (int_32)[0])
	$3 = ($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	*($2 + [8]) = $0
	CALL $329(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $266 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$2 = ($global$0 - [80])
	$global$0 = $2
	$3 = CALL $360(($2 + [64]), $1)
	*($2 + [48]) = (int_64)0
	*($2 + [56]) = [0]
	$4 = *($1 + [41])
	$5 = *($1 + [40])
	$6 = *($1 + [32])
	$7 = *($1 + [24])
	$8 = *($1 + [16])
	$9 = *($1 + [12])
	$10 = (*(($1 + [48])) - *($1 + [44]))
	if ( ($10 == 0) ){ goto $label$5 }
	if ( ((int_32)$10 <= (int_32)[-1]) ){ goto $label$4 }
	$11 = CALL _Znwj($10)
	*(($2 + [56])) = ($11 + (int_32($10 >> [1]) << [1]))
	*($2 + [48]) = $11
	*($2 + [52]) = $11
	$12 = *(($1 + [44]))
	$10 = (*(($1 + [48])) - $12)
	if ( ((int_32)$10 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($11, $12, $10)
	*($2 + [52]) = (*($2 + [52]) + $10)
	
.LABEL $label$5
	*($2 + [40]) = [0]
	*($2 + [32]) = (int_64)0
	$10 = (*(($1 + [60])) - *($1 + [56]))
	if ( ($10 == 0) ){ goto $label$6 }
	if ( ((int_32)$10 <= (int_32)[-1]) ){ goto $label$3 }
	$11 = CALL _Znwj($10)
	*(($2 + [40])) = ($11 + (int_32($10 >> [1]) << [1]))
	*($2 + [32]) = $11
	*($2 + [36]) = $11
	$12 = *(($1 + [56]))
	$10 = (*(($1 + [60])) - $12)
	if ( ((int_32)$10 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($11, $12, $10)
	*($2 + [36]) = (*($2 + [36]) + $10)
	
.LABEL $label$6
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	$10 = (*(($1 + [72])) - *($1 + [68]))
	if ( ($10 == 0) ){ goto $label$7 }
	$11 = int_32($10 >> [5])
	if ( ((uint_32)$11 >= (uint_32)[134217728]) ){ goto $label$2 }
	$10 = CALL _Znwj($10)
	*(($2 + [24])) = ($10 + ($11 << [5]))
	*($2 + [16]) = $10
	*($2 + [20]) = $10
	$12 = *(($1 + [68]))
	$11 = (*(($1 + [72])) - $12)
	if ( ((int_32)$11 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($10, $12, $11)
	*($2 + [20]) = (*($2 + [20]) + $11)
	
.LABEL $label$7
	*($2 + [8]) = [0]
	*($2) = (int_64)0
	$10 = (*(($1 + [84])) - *($1 + [80]))
	if ( ($10 == 0) ){ goto $label$8 }
	$11 = int_32($10 >> [5])
	if ( ((uint_32)$11 >= (uint_32)[134217728]) ){ goto $label$1 }
	$10 = CALL _Znwj($10)
	*(($2 + [8])) = ($10 + ($11 << [5]))
	*($2) = $10
	*($2 + [4]) = $10
	$12 = *(($1 + [80]))
	$11 = (*(($1 + [84])) - $12)
	if ( ((int_32)$11 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($10, $12, $11)
	*($2 + [4]) = (*($2 + [4]) + $11)
	
.LABEL $label$8
	CALL $335($0, $3, $9, ((int_32)($8 & [255]) != (int_32)[0]), $7, $6, ((int_32)($5 & [255]) != (int_32)[0]), ((int_32)($4 & [255]) != (int_32)[0]), ($2 + [48]), ($2 + [32]), ($2 + [16]), $2, *($1 + [92]))
	$1 = *($2)
	if ( ($1 == 0) ){ goto $label$9 }
	*($2 + [4]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$1 = *($2 + [16])
	if ( ($1 == 0) ){ goto $label$10 }
	*($2 + [20]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$1 = *($2 + [32])
	if ( ($1 == 0) ){ goto $label$11 }
	*($2 + [36]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$11
	$1 = *($2 + [48])
	if ( ($1 == 0) ){ goto $label$12 }
	*($2 + [52]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$12
	if ( ((*($3) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*($3 + [8]))
	
.LABEL $label$13
	$global$0 = ($2 + [80])
	return (unreachable)
	
.LABEL $label$4
	CALL $377(($2 + [48]))
	
.LABEL $label$3
	CALL $377(($2 + [32]))
	
.LABEL $label$2
	CALL $377(($2 + [16]))
	
.LABEL $label$1
	CALL $377($2)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $267 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [19219])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$4 = *($1 + [4])
	$6 = int_32(($4 - $7) >> [1])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $297($1, ($2 - $6))
	$4 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$4 = ($7 + ($2 << [1]))
	*(($1 + [4])) = $4
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = ($0 + [4])
	$6 = *($2)
	$5 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((int_32)*($5) != (int_32)$6) ){ goto $label$8 }
	CALL eosio_assert([0], [19214])
	$6 = *($2)
	
.LABEL $label$8
	CALL memcpy($7, $6, [1])
	$6 = (*($2) + [1])
	*($2) = $6
	if ( ((int_32)*($5) != (int_32)$6) ){ goto $label$9 }
	CALL eosio_assert([0], [19214])
	$6 = *($2)
	
.LABEL $label$9
	CALL memcpy(($7 + [1]), $6, [1])
	$6 = (*($2) + [1])
	*($2) = $6
	$7 = ($7 + [2])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $43 (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = ($global$0 - [112])
	$global$0 = $5
	*($5 + [64]) = $3
	*($5 + [56]) = $4
	*($5 + [78]) = $2
	*(($5 + [48])) = [0]
	*($5 + [32]) = (int_64)-1
	*($5 + [40]) = (int_64)0
	$4 = *($0)
	*($5 + [16]) = $4
	*($5 + [24]) = $1
	$2 = CALL db_find_i64($4, $1, (int_64)-3020377498459275264, (CASTING uint_64)(uint_32 $2))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$7 }
	$6 = CALL $23(($5 + [16]), $2)
	if ( ((int_32)*($6 + [16]) == (int_32)($5 + [16])) ){ goto $label$8 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$8
	$7 = *(($6 + [8]))
	$2 = *($6 + [4])
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$9 }
	$1 = *($5 + [64])
	
.LOOP $label$10:
	if ( ((int_64)*($2) == (int_64)$1) ){ goto $label$9 }
	$2 = ($2 + [24])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$10 }
	*($5) = $7
	goto $label$6 
	
.LABEL $label$9
	*($5) = $2
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = *($0)
	*($5 + [84]) = $5
	*($5 + [80]) = ($5 + [64])
	*($5 + [88]) = ($5 + [56])
	CALL $44(($5 + [16]), $6, $1, ($5 + [80]))
	$6 = *($5 + [40])
	if ( $6 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$1 = *($0)
	*($5 + [4]) = ($5 + [64])
	*($5) = ($5 + [78])
	*($5 + [8]) = ($5 + [56])
	*($5 + [104]) = $1
	if ( ((int_64)$4 == (int_64)CALL current_receiver()) ){ goto $label$11 }
	CALL eosio_assert([0], [19435])
	
.LABEL $label$11
	*($5 + [84]) = $5
	*($5 + [80]) = ($5 + [16])
	*($5 + [88]) = ($5 + [104])
	*(($2 = CALL _Znwj([28])) + [12]) = [0]
	*($2 + [4 align=4]) = (int_64)0
	*($2 + [16]) = ($5 + [16])
	CALL $45(($5 + [80]), $2)
	*($5 + [96]) = $2
	$0 = *($2)
	*($5 + [79]) = $0
	$6 = *($2 + [20])
	*($5 + [80]) = $6
	$8 = (($5 + [16]) + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)*(($5 + [48]))) ){ goto $label$5 }
	*($7 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $0) & (int_64)255)
	*($7 + [16]) = $6
	*($5 + [96]) = [0]
	*($7) = $2
	*($8) = ($7 + [24])
	$2 = *($5 + [96])
	*($5 + [96]) = [0]
	if ( ($2 == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$1 = *($0)
	*($5 + [84]) = ($5 + [56])
	*($5 + [80]) = ($5 + [64])
	CALL $46(($5 + [16]), $6, $1, ($5 + [80]))
	goto $label$4 
	
.LABEL $label$5
	CALL $27(($5 + [40]), ($5 + [96]), ($5 + [79]), ($5 + [80]))
	$2 = *($5 + [96])
	*($5 + [96]) = [0]
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$4
	$6 = *($5 + [40])
	if ( ($6 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$7 = *($2 + [4])
	if ( ($7 == 0) ){ goto $label$12 }
	*(($2 + [8])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$12
	CALL _ZdlPv($2)
	$6 = *($5 + [40])
	if ( ($6 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$8 = ($5 + [44])
	$2 = *($8)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$14 }
	
.LOOP $label$15:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$16 }
	$0 = *($7 + [4])
	if ( ($0 == 0) ){ goto $label$17 }
	*(($7 + [8])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$17
	CALL _ZdlPv($7)
	
.LABEL $label$16
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$15 }
	$2 = *(($5 + [40]))
	goto $label$13 
	
.LABEL $label$14
	$2 = $6
	
.LABEL $label$13
	*($8) = $6
	CALL _ZdlPv($2)
	
.LABEL $label$1
	$global$0 = ($5 + [112])
}

void .FUNC $42 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [48])
	$global$0 = $5
	CALL require_auth(*($0))
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	$6 = CALL $393([8791])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$3 }
	$7 = ((int_32)$2 != (int_32)[0])
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$6 }
	*($5 + [32]) = ($6 << [1])
	$8 = (($5 + [32]) | [1])
	if ( $6 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$9 = (($6 + [16]) & [-16])
	$8 = CALL _Znwj($9)
	*($5 + [32]) = ($9 | [1])
	*($5 + [40]) = $8
	*($5 + [36]) = $6
	
.LABEL $label$5
	CALL memcpy($8, [8791], $6)
	
.LABEL $label$4
	*(($8 + $6)) = [0]
	CALL eosio_assert($7, CALL $5($5, [0], ($5 + [32])))
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$7 }
	CALL _ZdlPv(*($5 + [40]))
	
.LABEL $label$7
	*(($5 + [24])) = [0]
	*($5 + [16]) = (int_64)0
	$6 = CALL $393([8791])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$2 }
	$7 = ((($3 + [-1]) & [255]) <= [15])
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$10 }
	*($5 + [16]) = ($6 << [1])
	$8 = (($5 + [16]) | [1])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$9 = (($6 + [16]) & [-16])
	$8 = CALL _Znwj($9)
	*($5 + [16]) = ($9 | [1])
	*($5 + [24]) = $8
	*($5 + [20]) = $6
	
.LABEL $label$9
	CALL memcpy($8, [8791], $6)
	
.LABEL $label$8
	*(($8 + $6)) = [0]
	CALL eosio_assert($7, CALL $5($5, [0], ($5 + [16])))
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*($5 + [24]))
	
.LABEL $label$11
	*(($5 + [8])) = [0]
	*($5) = (int_64)0
	$6 = CALL $393([8791])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = ((($4 + [-1]) & [255]) <= [100])
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$14 }
	*($5) = ($6 << [1])
	$8 = ($5 | [1])
	if ( $6 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$9 = (($6 + [16]) & [-16])
	$8 = CALL _Znwj($9)
	*($5) = ($9 | [1])
	*($5 + [8]) = $8
	*($5 + [4]) = $6
	
.LABEL $label$13
	CALL memcpy($8, [8791], $6)
	
.LABEL $label$12
	*(($8 + $6)) = [0]
	CALL eosio_assert($7, CALL $5($5, [0], $5))
	if ( ((*($5) & [1]) == 0) ){ goto $label$15 }
	CALL _ZdlPv(*($5 + [8]))
	
.LABEL $label$15
	CALL $43($0, $1, $2, (CASTING uint_64)(uint_32 $3), (CASTING uint_64)(uint_32 $4))
	$global$0 = ($5 + [48])
	return (unreachable)
	
.LABEL $label$3
	CALL $359(($5 + [32]))
	
.LABEL $label$2
	CALL $359(($5 + [16]))
	
.LABEL $label$1
	CALL $359($5)
	(unreachable)
	(unreachable)
}

void .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19287])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19332])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [19382])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$2 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	$7 = *($5 + [8])
	if ( ($7 == 0) ){ goto $label$13 }
	*(($5 + [12])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$13
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$2 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	$7 = *($8 + [8])
	if ( ($7 == 0) ){ goto $label$16 }
	*(($8 + [12])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$16
	CALL _ZdlPv($8)
	
.LABEL $label$15
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $2
	CALL db_remove_i64(*($1 + [28]))
}

void .FUNC $40 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$global$0 = $2
	CALL require_auth(*($0))
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $1
	*($2 + [24]) = (int_64)0
	$0 = CALL db_lowerbound_i64($3, $1, (int_64)-7297964030780506112, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $32($2, $0)
	
.LOOP $label$2:
	$0 = [0]
	$5 = CALL db_next_i64(*($4 + [28]), ($2 + [40]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $32($2, $5)
	
.LABEL $label$3
	CALL $41($2, $4)
	$4 = $0
	if ( $0 ){ goto $label$2 }
	
.LABEL $label$1
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$4 }
	$7 = ($2 + [28])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	$5 = *($4 + [8])
	if ( ($5 == 0) ){ goto $label$9 }
	*(($4 + [12])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$9
	CALL _ZdlPv($4)
	
.LABEL $label$8
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($2 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $6
	
.LABEL $label$5
	*($7) = $6
	CALL _ZdlPv($0)
	
.LABEL $label$4
	$global$0 = ($2 + [48])
}

void .FUNC $47 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [48])
	$global$0 = $5
	CALL require_auth(*($0))
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	$6 = CALL $393([8791])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$3 }
	$7 = ((int_32)$2 != (int_32)[0])
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$6 }
	*($5 + [32]) = ($6 << [1])
	$8 = (($5 + [32]) | [1])
	if ( $6 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$9 = (($6 + [16]) & [-16])
	$8 = CALL _Znwj($9)
	*($5 + [32]) = ($9 | [1])
	*($5 + [40]) = $8
	*($5 + [36]) = $6
	
.LABEL $label$5
	CALL memcpy($8, [8791], $6)
	
.LABEL $label$4
	*(($8 + $6)) = [0]
	CALL eosio_assert($7, CALL $5($5, [0], ($5 + [32])))
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$7 }
	CALL _ZdlPv(*($5 + [40]))
	
.LABEL $label$7
	*(($5 + [24])) = [0]
	*($5 + [16]) = (int_64)0
	$6 = CALL $393([8791])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$2 }
	$7 = ((($3 + [-1]) & [255]) <= [15])
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$10 }
	*($5 + [16]) = ($6 << [1])
	$8 = (($5 + [16]) | [1])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$9 = (($6 + [16]) & [-16])
	$8 = CALL _Znwj($9)
	*($5 + [16]) = ($9 | [1])
	*($5 + [24]) = $8
	*($5 + [20]) = $6
	
.LABEL $label$9
	CALL memcpy($8, [8791], $6)
	
.LABEL $label$8
	*(($8 + $6)) = [0]
	CALL eosio_assert($7, CALL $5($5, [0], ($5 + [16])))
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*($5 + [24]))
	
.LABEL $label$11
	*(($5 + [8])) = [0]
	*($5) = (int_64)0
	$6 = CALL $393([8791])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = ((($4 + [-1]) & [255]) <= [100])
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$14 }
	*($5) = ($6 << [1])
	$8 = ($5 | [1])
	if ( $6 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$9 = (($6 + [16]) & [-16])
	$8 = CALL _Znwj($9)
	*($5) = ($9 | [1])
	*($5 + [8]) = $8
	*($5 + [4]) = $6
	
.LABEL $label$13
	CALL memcpy($8, [8791], $6)
	
.LABEL $label$12
	*(($8 + $6)) = [0]
	CALL eosio_assert($7, CALL $5($5, [0], $5))
	if ( ((*($5) & [1]) == 0) ){ goto $label$15 }
	CALL _ZdlPv(*($5 + [8]))
	
.LABEL $label$15
	CALL $37($0, $1, $2, (CASTING uint_64)(uint_32 $3), (CASTING uint_64)(uint_32 $4), [0])
	$global$0 = ($5 + [48])
	return (unreachable)
	
.LABEL $label$3
	CALL $359(($5 + [32]))
	
.LABEL $label$2
	CALL $359(($5 + [16]))
	
.LABEL $label$1
	CALL $359($5)
	(unreachable)
	(unreachable)
}

void .FUNC $46 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	$6 = *($1)
	$7 = *(*($3))
	*($5 + [24]) = *(*(($3 + [4])))
	*($5 + [16]) = $7
	*($5 + [32]) = (int_64)0
	$8 = ($1 + [8])
	$3 = *($8)
	if ( ((int_32)$3 == (int_32)*(($1 + [12]))) ){ goto $label$4 }
	*($3) = *($5 + [16])
	*(($3 + [16])) = *((($5 + [16]) + [16]))
	*(($3 + [8])) = *((($5 + [16]) + [8]))
	*($8) = (*($8) + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $294(($1 + [4]), ($5 + [16]))
	
.LABEL $label$3
	$7 = (CASTING uint_64)(uint_32 $6)
	if ( ((int_32)($6 & [255]) == (int_32)*($1)) ){ goto $label$5 }
	CALL eosio_assert([0], [19669])
	
.LABEL $label$5
	$9 = ((int_64)$7 & (int_64)255)
	$8 = *($1 + [4])
	$6 = *($1 + [8])
	$10 = ($6 - $8)
	$7 = (CASTING uint_64)(uint_32 ((int_32)$10 / (int_32)[24]))
	$3 = [25]
	
.LOOP $label$6:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$10 }
	$10 = (((int_32)((uint_32)($10 + [-24]) / (uint_32)[24]) * (int_32)[24]) + $3)
	if ( ($10 <= [513]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$10 = ($3 + [-24])
	if ( ((uint_32)$10 >= (uint_32)[513]) ){ goto $label$8 }
	
.LABEL $label$9
	$8 = ($4 - (($10 + [15]) & [-16]))
	$global$0 = $8
	goto $label$7 
	
.LABEL $label$8
	$8 = CALL $397($10)
	
.LABEL $label$7
	*($5 + [4]) = $8
	*($5) = $8
	*($5 + [8]) = ($8 + $10)
	$3 = $8
	if ( ((int_32)$10 > (int_32)[0]) ){ goto $label$11 }
	CALL eosio_assert([0], [18965])
	$3 = *($5 + [4])
	
.LABEL $label$11
	CALL memcpy($3, $1, [1])
	$3 = ($3 + [1])
	*($5 + [4]) = $3
	$7 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [8])) - *(($1 + [4]))) / (int_32)[24]))
	
.LOOP $label$12:
	$6 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$4 = ((int_64)$7) != (int_64)0
	*($5 + [16]) = (($4) << [7]) | ($6 & [127]))
	if ( ((int_32)(*(($5 + [8])) - $3) > (int_32)[0]) ){ goto $label$13 }
	CALL eosio_assert([0], [18965])
	$3 = *($5 + [4])
	
.LABEL $label$13
	CALL memcpy($3, ($5 + [16]), [1])
	$3 = ($3 + [1])
	*($5 + [4]) = $3
	if ( $4 ){ goto $label$12 }
	$6 = *(($1 + [8]))
	$3 = *(($1 + [4]))
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$14 }
	
.LOOP $label$15:
	*($5 + [40]) = $5
	*($5 + [16]) = $3
	*((($5 + [16]) + [8])) = ($3 + [16])
	*($5 + [20]) = ($3 + [8])
	CALL $295(($5 + [16]), ($5 + [40]))
	$3 = ($3 + [24])
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$15 }
	
.LABEL $label$14
	CALL db_update_i64(*(($1 + [20])), $2, $8, $10)
	if ( ((uint_32)$10 >= (uint_32)[513]) ){ goto $label$18 }
	if ( ((uint_64)*($0 + [16]) <= (uint_64)$9) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $400($8)
	if ( ((uint_64)*($0 + [16]) > (uint_64)$9) ){ goto $label$16 }
	
.LABEL $label$17
	*(($0 + [16])) = ((int_64)$9 + (int_64)1)
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$16
	$global$0 = ($5 + [48])
}

void .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = *($0 + [4])
	*($1) = *(*($3))
	$4 = *(*(($3 + [4])))
	$5 = *($0)
	*(($6 = $2) + [24]) = *(*(($3 + [8])))
	*($6 + [16]) = $4
	*($6 + [32]) = (int_64)0
	$7 = ($1 + [8])
	$3 = *($7)
	if ( ((int_32)$3 == (int_32)*(($1 + [12]))) ){ goto $label$2 }
	*($3) = *($6 + [16])
	*(($3 + [16])) = *((($6 + [16]) + [16]))
	*(($3 + [8])) = *((($6 + [16]) + [8]))
	$8 = (*($7) + [24])
	*($7) = $8
	goto $label$1 
	
.LABEL $label$2
	CALL $294(($1 + [4]), ($6 + [16]))
	$8 = *($1 + [8])
	
.LABEL $label$1
	$9 = *($1 + [4])
	$10 = ($8 - $9)
	$4 = (CASTING uint_64)(uint_32 ((int_32)$10 / (int_32)[24]))
	$3 = [25]
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$7 }
	$10 = (((int_32)((uint_32)($10 + [-24]) / (uint_32)[24]) * (int_32)[24]) + $3)
	if ( ($10 <= [513]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$10 = ($3 + [-24])
	if ( ((uint_32)$10 >= (uint_32)[513]) ){ goto $label$5 }
	
.LABEL $label$6
	$9 = ($2 - (($10 + [15]) & [-16]))
	$global$0 = $9
	goto $label$4 
	
.LABEL $label$5
	$9 = CALL $397($10)
	
.LABEL $label$4
	*($6 + [4]) = $9
	*($6) = $9
	*($6 + [8]) = ($9 + $10)
	$3 = $9
	if ( ((int_32)$10 > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [18965])
	$3 = *($6 + [4])
	
.LABEL $label$8
	CALL memcpy($3, $1, [1])
	$3 = ($3 + [1])
	*($6 + [4]) = $3
	$4 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [8])) - *(($1 + [4]))) / (int_32)[24]))
	
.LOOP $label$9:
	$8 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$2 = ((int_64)$4) != (int_64)0
	*($6 + [16]) = (($2) << [7]) | ($8 & [127]))
	if ( ((int_32)(*(($6 + [8])) - $3) > (int_32)[0]) ){ goto $label$10 }
	CALL eosio_assert([0], [18965])
	$3 = *($6 + [4])
	
.LABEL $label$10
	CALL memcpy($3, ($6 + [16]), [1])
	$3 = ($3 + [1])
	*($6 + [4]) = $3
	if ( $2 ){ goto $label$9 }
	$8 = *($7)
	$3 = *(($1 + [4]))
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$11 }
	
.LOOP $label$12:
	*($6 + [40]) = $6
	*($6 + [16]) = $3
	*((($6 + [16]) + [8])) = ($3 + [16])
	*($6 + [20]) = ($3 + [8])
	CALL $295(($6 + [16]), ($6 + [40]))
	$3 = ($3 + [24])
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$12 }
	
.LABEL $label$11
	$4 = *($1)
	*($1 + [20]) = CALL db_store_i64(*($5 + [8]), (int_64)-3020377498459275264, *(*($0 + [8])), $4, $9, $10)
	if ( ((uint_32)$10 >= (uint_32)[513]) ){ goto $label$15 }
	if ( ((uint_64)*($5 + [16]) <= (uint_64)$4) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $400($9)
	if ( ((uint_64)*($5 + [16]) > (uint_64)$4) ){ goto $label$13 }
	
.LABEL $label$14
	*(($5 + [16])) = ((int_64)$4 + (int_64)1)
	$global$0 = ($6 + [48])
	return 
	
.LABEL $label$13
	$global$0 = ($6 + [48])
}

void .FUNC $44 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	$6 = *(*(($3 + [8])))
	$7 = *(*(($3 + [4])))
	$8 = *($1)
	*($5 + [16]) = *(*($3))
	*($5 + [32]) = *($7 + [16])
	*($5 + [24]) = ((int_64)$6 + (int_64)*($7 + [8]))
	$10 = ($7 + [24])
	$9 = ($1 + [8])
	$3 = (*($9) - $10)
	$11 = ((int_32)$3 / (int_32)[24])
	if ( ($3 == 0) ){ goto $label$3 }
	CALL memmove($7, $10, $3)
	
.LABEL $label$3
	$7 = ($7 + ((int_32)$11 * (int_32)[24]))
	*($9) = $7
	if ( ((int_32)$7 == (int_32)*(($1 + [12]))) ){ goto $label$5 }
	*($7) = *($5 + [16])
	*(($7 + [16])) = *((($5 + [16]) + [16]))
	*(($7 + [8])) = *((($5 + [16]) + [8]))
	*(($7 = ($1 + [8]))) = (*($7) + [24])
	goto $label$4 
	
.LABEL $label$5
	CALL $294(($1 + [4]), ($5 + [16]))
	
.LABEL $label$4
	$6 = (CASTING uint_64)(uint_32 $8)
	if ( ((int_32)($8 & [255]) == (int_32)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [19669])
	
.LABEL $label$6
	$12 = ((int_64)$6 & (int_64)255)
	$8 = *($1 + [4])
	$3 = *($1 + [8])
	$9 = ($3 - $8)
	$6 = (CASTING uint_64)(uint_32 ((int_32)$9 / (int_32)[24]))
	$7 = [25]
	
.LOOP $label$7:
	$7 = ($7 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$11 }
	$9 = (((int_32)((uint_32)($9 + [-24]) / (uint_32)[24]) * (int_32)[24]) + $7)
	if ( ($9 <= [513]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$9 = ($7 + [-24])
	if ( ((uint_32)$9 >= (uint_32)[513]) ){ goto $label$9 }
	
.LABEL $label$10
	$4 = ($4 - (($9 + [15]) & [-16]))
	$global$0 = $4
	goto $label$8 
	
.LABEL $label$9
	$4 = CALL $397($9)
	
.LABEL $label$8
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $9)
	$7 = $4
	if ( ((int_32)$9 > (int_32)[0]) ){ goto $label$12 }
	CALL eosio_assert([0], [18965])
	$7 = *($5 + [4])
	
.LABEL $label$12
	CALL memcpy($7, $1, [1])
	$7 = ($7 + [1])
	*($5 + [4]) = $7
	$6 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [8])) - *(($1 + [4]))) / (int_32)[24]))
	
.LOOP $label$13:
	$3 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$8 = ((int_64)$6) != (int_64)0
	*($5 + [16]) = (($8) << [7]) | ($3 & [127]))
	if ( ((int_32)(*(($5 + [8])) - $7) > (int_32)[0]) ){ goto $label$14 }
	CALL eosio_assert([0], [18965])
	$7 = *($5 + [4])
	
.LABEL $label$14
	CALL memcpy($7, ($5 + [16]), [1])
	$7 = ($7 + [1])
	*($5 + [4]) = $7
	if ( $8 ){ goto $label$13 }
	$3 = *(($1 + [8]))
	$7 = *(($1 + [4]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$15 }
	
.LOOP $label$16:
	*($5 + [40]) = $5
	*($5 + [16]) = $7
	*((($5 + [16]) + [8])) = ($7 + [16])
	*($5 + [20]) = ($7 + [8])
	CALL $295(($5 + [16]), ($5 + [40]))
	$7 = ($7 + [24])
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$16 }
	
.LABEL $label$15
	CALL db_update_i64(*(($1 + [20])), $2, $4, $9)
	if ( ((uint_32)$9 >= (uint_32)[513]) ){ goto $label$19 }
	if ( ((uint_64)*($0 + [16]) <= (uint_64)$12) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL $400($4)
	if ( ((uint_64)*($0 + [16]) > (uint_64)$12) ){ goto $label$17 }
	
.LABEL $label$18
	*(($0 + [16])) = ((int_64)$12 + (int_64)1)
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$17
	$global$0 = ($5 + [48])
}

void .FUNC $363 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL _Znwj($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL _ZdlPv($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $362 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $363($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC $167 (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_64 $4, int_64 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [96])
	$global$0 = $6
	*($6 + [80]) = $4
	*($6 + [88]) = $3
	*($6 + [72]) = $5
	CALL require_auth(*($0))
	*(($6 + [64])) = [0]
	*($6 + [48]) = (int_64)-1
	*($6 + [56]) = (int_64)0
	$5 = *($0)
	*($6 + [32]) = $5
	*($6 + [40]) = $1
	$2 = CALL db_find_i64($5, $1, (int_64)-3020377498459275264, (CASTING uint_64)(uint_32 $2))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $23(($6 + [32]), $2)
	if ( ((int_32)*($7 + [16]) == (int_32)($6 + [32])) ){ goto $label$2 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$2
	$8 = *(($7 + [8]))
	$2 = *($7 + [4])
	if ( ((int_32)$2 == (int_32)$8) ){ goto $label$4 }
	$1 = *($6 + [88])
	
.LOOP $label$5:
	if ( ((int_64)*($2) == (int_64)$1) ){ goto $label$4 }
	$2 = ($2 + [24])
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	*($6 + [24]) = $8
	$7 = *($6 + [56])
	if ( $7 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	*($6 + [24]) = $2
	if ( ((int_32)$2 == (int_32)$8) ){ goto $label$6 }
	$1 = *($0)
	*($6 + [12]) = ($6 + [80])
	*($6 + [8]) = ($6 + [88])
	*($6 + [16]) = ($6 + [72])
	*($6 + [20]) = ($6 + [24])
	CALL $168(($6 + [32]), $7, $1, ($6 + [8]))
	
.LABEL $label$6
	$7 = *($6 + [56])
	if ( ($7 == 0) ){ goto $label$1 }
	
.LABEL $label$3
	$9 = ($6 + [60])
	$2 = *($9)
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$8 = *($2)
	*($2) = [0]
	if ( ($8 == 0) ){ goto $label$10 }
	$0 = *($8 + [4])
	if ( ($0 == 0) ){ goto $label$11 }
	*(($8 + [8])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$11
	CALL _ZdlPv($8)
	
.LABEL $label$10
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($6 + [56]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $7
	
.LABEL $label$7
	*($9) = $7
	CALL _ZdlPv($2)
	
.LABEL $label$1
	$global$0 = ($6 + [96])
}

void .FUNC $166 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	$6 = *($1)
	if ( (*([0] + [10328]) == 0) ){ goto $label$4 }
	$7 = *([0] + [10320])
	$8 = $6
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL current_time()
	*([0] + [10320]) = $7
	*([0] + [10328]) = [1]
	$8 = *($1)
	
.LABEL $label$3
	$9 = ($1 + [8])
	*($1 + [16]) = $7
	*($1 + [24]) = *(*($3 + [4]))
	$10 = ($1 + [24])
	if ( ((int_64)$6 == (int_64)$8) ){ goto $label$5 }
	CALL eosio_assert([0], [19669])
	
.LABEL $label$5
	$4 = $4
	$3 = ($4 + [-32])
	$global$0 = $3
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = $4
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $9
	*($5 + [44]) = $10
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [16])
	CALL $303(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [36]), $2, $3, [32])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$global$0 = ($5 + [48])
}

void .FUNC $165 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [64])
	$global$0 = $4
	*($4 + [48]) = $3
	*($4 + [56]) = $2
	CALL require_auth(*($0))
	*(($4 + [40])) = [0]
	*($4 + [24]) = (int_64)-1
	$2 = *($0)
	*($4 + [8]) = $2
	*($4 + [16]) = $1
	*($4 + [32]) = (int_64)0
	$5 = CALL db_lowerbound_i64($2, $1, (int_64)-3020381371621703680, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $60(($4 + [8]), $5)
	$1 = *($0)
	*($4 + [4]) = ($4 + [48])
	*($4) = ($4 + [56])
	CALL $166(($4 + [8]), $5, $1, $4)
	$6 = *($4 + [32])
	if ( ($6 == 0) ){ goto $label$1 }
	$7 = ($4 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$4:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL _ZdlPv($5)
	
.LABEL $label$5
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$4 }
	$0 = *(($4 + [32]))
	goto $label$2 
	
.LABEL $label$3
	$0 = $6
	
.LABEL $label$2
	*($7) = $6
	CALL _ZdlPv($0)
	
.LABEL $label$1
	$global$0 = ($4 + [64])
}

void .FUNC $164 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	$6 = *($1)
	$7 = *(*($3))
	if ( ((int_32)$7 == (int_32)*((*(*($3 + [4]) + [4]) + [8]))) ){ goto $label$4 }
	$9 = ($7 + [40])
	$8 = ($1 + [8])
	$10 = (*($8) - $9)
	$11 = ((int_32)$10 / (int_32)[40])
	if ( ($10 == 0) ){ goto $label$5 }
	CALL memmove($7, $9, $10)
	
.LABEL $label$5
	$7 = ($7 + ((int_32)$11 * (int_32)[40]))
	*($8) = $7
	goto $label$3 
	
.LABEL $label$4
	$8 = ($1 + [8])
	$7 = *($8)
	
.LABEL $label$3
	$3 = *($3 + [8])
	if ( ((int_32)$7 == (int_32)*(($1 + [12]))) ){ goto $label$7 }
	*($7) = *($3)
	*(($7 + [32])) = *(($3 + [32]))
	*(($7 + [24])) = *(($3 + [24]))
	*(($7 + [16])) = *(($3 + [16]))
	*(($7 + [8])) = *(($3 + [8]))
	*($8) = (*($8) + [40])
	goto $label$6 
	
.LABEL $label$7
	CALL $184(($1 + [4]), $3)
	
.LABEL $label$6
	$12 = (CASTING uint_64)(uint_32 $6)
	if ( ((int_32)($6 & [255]) == (int_32)*($1)) ){ goto $label$8 }
	CALL eosio_assert([0], [19669])
	
.LABEL $label$8
	$13 = ((int_64)$12 & (int_64)255)
	$6 = *($1 + [4])
	$3 = *($1 + [8])
	$8 = ($3 - $6)
	$12 = (CASTING uint_64)(uint_32 ((int_32)$8 / (int_32)[40]))
	$7 = [34]
	
.LOOP $label$9:
	$7 = ($7 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$9 }
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$13 }
	$10 = (((int_32)((uint_32)($8 + [-40]) / (uint_32)[40]) * (int_32)[33]) + $7)
	if ( ($10 <= [513]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$10 = ($7 + [-33])
	if ( ((uint_32)$10 >= (uint_32)[513]) ){ goto $label$11 }
	
.LABEL $label$12
	$8 = ($4 - (($10 + [15]) & [-16]))
	$global$0 = $8
	goto $label$10 
	
.LABEL $label$11
	$8 = CALL $397($10)
	
.LABEL $label$10
	*($5 + [12]) = $8
	*($5 + [8]) = $8
	*($5 + [16]) = ($8 + $10)
	$7 = $8
	if ( ((int_32)$10 > (int_32)[0]) ){ goto $label$14 }
	CALL eosio_assert([0], [18965])
	$7 = *($5 + [12])
	
.LABEL $label$14
	CALL memcpy($7, $1, [1])
	$7 = ($7 + [1])
	*($5 + [12]) = $7
	$12 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [8])) - *(($1 + [4]))) / (int_32)[40]))
	
.LOOP $label$15:
	$3 = (CASTING uint_32)(uint_64 $12)
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	$6 = ((int_64)$12) != (int_64)0
	*($5 + [32]) = (($6) << [7]) | ($3 & [127]))
	if ( ((int_32)(*((($5 + [8]) + [8])) - $7) > (int_32)[0]) ){ goto $label$16 }
	CALL eosio_assert([0], [18965])
	$7 = *($5 + [12])
	
.LABEL $label$16
	CALL memcpy($7, ($5 + [32]), [1])
	$7 = ($7 + [1])
	*($5 + [12]) = $7
	if ( $6 ){ goto $label$15 }
	$3 = *(($1 + [8]))
	$7 = *(($1 + [4]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$17 }
	
.LOOP $label$18:
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $7
	*((($5 + [32]) + [8])) = ($7 + [24])
	*($5 + [36]) = ($7 + [8])
	CALL $320(($5 + [32]), ($5 + [24]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$18 }
	
.LABEL $label$17
	CALL db_update_i64(*(($1 + [20])), $2, $8, $10)
	if ( ((uint_32)$10 >= (uint_32)[513]) ){ goto $label$21 }
	if ( ((uint_64)*($0 + [16]) <= (uint_64)$13) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	CALL $400($8)
	if ( ((uint_64)*($0 + [16]) > (uint_64)$13) ){ goto $label$19 }
	
.LABEL $label$20
	*(($0 + [16])) = ((int_64)$13 + (int_64)1)
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$19
	$global$0 = ($5 + [48])
}

void .FUNC $163 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	$6 = ($1 + [8])
	$7 = *($1)
	if ( (CALL $125(*($3), *(*(*(($3 + [4])) + [4]) + [16])) == 0) ){ goto $label$5 }
	*($6) = (int_64)1
	if ( (*([0] + [10328]) == 0) ){ goto $label$4 }
	*($1 + [16]) = *([0] + [10320])
	goto $label$3 
	
.LABEL $label$5
	*($6) = ((int_64)*($6) + (int_64)1)
	goto $label$3 
	
.LABEL $label$4
	$8 = CALL current_time()
	*([0] + [10328]) = [1]
	*([0] + [10320]) = $8
	*($1 + [16]) = $8
	
.LABEL $label$3
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	$8 = *($1 + [24])
	$3 = CALL $393([9211])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$6 }
	$9 = ((int_64)$8 != (int_64)0)
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$9 }
	*($5 + [32]) = ($3 << [1])
	$10 = (($5 + [32]) | [1])
	if ( $3 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$11 = (($3 + [16]) & [-16])
	$10 = CALL _Znwj($11)
	*($5 + [32]) = ($11 | [1])
	*($5 + [40]) = $10
	*($5 + [36]) = $3
	
.LABEL $label$8
	CALL memcpy($10, [9211], $3)
	
.LABEL $label$7
	*(($10 + $3)) = [0]
	CALL eosio_assert($9, CALL $5($5, [153], ($5 + [32])))
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*($5 + [40]))
	
.LABEL $label$10
	$10 = ($1 + [24])
	*(($3 = ($1 + [24]))) = ((int_64)*($3) + (int_64)-1)
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$11 }
	CALL eosio_assert([0], [19669])
	
.LABEL $label$11
	$4 = $4
	$3 = ($4 + [-32])
	$global$0 = $3
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = $4
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $6
	*($5 + [44]) = $10
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [16])
	CALL $303(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [36]), $2, $3, [32])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$12 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	$global$0 = ($5 + [48])
	return (unreachable)
	
.LABEL $label$6
	CALL $359(($5 + [32]))
}

void .FUNC $162 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $377($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $161 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)4229327255410965504, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $158($6, $8)
	*($3 + [28]) = [0]
	*($3 + [24]) = $6
	$7 = *(*(CALL $159(($3 + [24])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [19728])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	$6 = *($5 + [4])
	*($1 + [32]) = *($6)
	*(($1 + [56])) = *(($6 + [24]))
	*(($1 + [48])) = *(($6 + [16]))
	*(($1 + [40])) = *(($6 + [8]))
	*($1 + [8]) = *(*($5 + [8]))
	*($1 + [16]) = *(*($5 + [12]))
	*($1 + [64]) = *(*($5 + [16]))
	*($1 + [72]) = *(*($5 + [20]))
	$6 = *($5 + [24])
	*($1 + [80]) = *($6)
	*(($1 + [88])) = *(($6 + [8]))
	*($1 + [96]) = *(*($5 + [28]))
	$6 = ($1 + [96])
	$8 = ($1 + [80])
	$9 = ($1 + [72])
	$10 = ($1 + [64])
	$11 = ($1 + [16])
	$12 = ($1 + [8])
	$13 = ($1 + [32])
	if ( (*([0] + [10328]) == 0) ){ goto $label$6 }
	$7 = *([0] + [10320])
	goto $label$5 
	
.LABEL $label$6
	$7 = CALL current_time()
	*([0] + [10328]) = [1]
	*([0] + [10320]) = $7
	
.LABEL $label$5
	*($1 + [104]) = $7
	$2 = $2
	$5 = ($2 + [-112])
	$global$0 = $5
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($2 + [-15])
	*($3 + [16]) = $3
	*($3 + [28]) = $12
	*($3 + [24]) = $1
	*($3 + [32]) = $11
	*($3 + [36]) = $13
	*($3 + [40]) = $10
	*($3 + [44]) = $9
	*($3 + [48]) = $8
	*($3 + [52]) = $6
	*($3 + [56]) = ($1 + [104])
	CALL $311(($3 + [24]), ($3 + [16]))
	$7 = *($1)
	*($1 + [116]) = CALL db_store_i64(*($4 + [8]), (int_64)4229327255410965504, *(*($0 + [8])), $7, $5, [97])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$7 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$global$0 = ($3 + [64])
}

void .FUNC $160 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [112]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19287])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19332])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [19382])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL _ZdlPv($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [116]))
}

void .FUNC $67 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	$6 = *(*(($3 + [4])))
	$7 = *($1)
	$3 = *(*($3) + [4])
	*($5 + [16]) = *($3 + [57])
	$8 = *($3 + [80])
	*($5 + [24]) = ((int_64)*($6 + [8]) + (int_64)$8)
	$9 = *($6 + [16])
	*($5 + [32]) = (int_64))(( $9 ? ( $9 ? $8 : ((uint_64)$9 > (uint_64)$8) ) : (int_64)($8 == 0) ) - $8)
	$11 = ($6 + [24])
	$10 = ($1 + [8])
	$3 = (*($10) - $11)
	$12 = ((int_32)$3 / (int_32)[24])
	if ( ($3 == 0) ){ goto $label$3 }
	CALL memmove($6, $11, $3)
	
.LABEL $label$3
	$6 = ($6 + ((int_32)$12 * (int_32)[24]))
	*($10) = $6
	if ( ((int_32)$6 == (int_32)*(($1 + [12]))) ){ goto $label$5 }
	*($6) = *($5 + [16])
	*(($6 + [16])) = *((($5 + [16]) + [16]))
	*(($6 + [8])) = *((($5 + [16]) + [8]))
	*(($6 = ($1 + [8]))) = (*($6) + [24])
	goto $label$4 
	
.LABEL $label$5
	CALL $294(($1 + [4]), ($5 + [16]))
	
.LABEL $label$4
	$8 = (CASTING uint_64)(uint_32 $7)
	if ( ((int_32)($7 & [255]) == (int_32)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [19669])
	
.LABEL $label$6
	$9 = ((int_64)$8 & (int_64)255)
	$7 = *($1 + [4])
	$3 = *($1 + [8])
	$10 = ($3 - $7)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$10 / (int_32)[24]))
	$6 = [25]
	
.LOOP $label$7:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$11 }
	$10 = (((int_32)((uint_32)($10 + [-24]) / (uint_32)[24]) * (int_32)[24]) + $6)
	if ( ($10 <= [513]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$10 = ($6 + [-24])
	if ( ((uint_32)$10 >= (uint_32)[513]) ){ goto $label$9 }
	
.LABEL $label$10
	$4 = ($4 - (($10 + [15]) & [-16]))
	$global$0 = $4
	goto $label$8 
	
.LABEL $label$9
	$4 = CALL $397($10)
	
.LABEL $label$8
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $10)
	$6 = $4
	if ( ((int_32)$10 > (int_32)[0]) ){ goto $label$12 }
	CALL eosio_assert([0], [18965])
	$6 = *($5 + [4])
	
.LABEL $label$12
	CALL memcpy($6, $1, [1])
	$6 = ($6 + [1])
	*($5 + [4]) = $6
	$8 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [8])) - *(($1 + [4]))) / (int_32)[24]))
	
.LOOP $label$13:
	$3 = (CASTING uint_32)(uint_64 $8)
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	$7 = ((int_64)$8) != (int_64)0
	*($5 + [16]) = (($7) << [7]) | ($3 & [127]))
	if ( ((int_32)(*(($5 + [8])) - $6) > (int_32)[0]) ){ goto $label$14 }
	CALL eosio_assert([0], [18965])
	$6 = *($5 + [4])
	
.LABEL $label$14
	CALL memcpy($6, ($5 + [16]), [1])
	$6 = ($6 + [1])
	*($5 + [4]) = $6
	if ( $7 ){ goto $label$13 }
	$3 = *(($1 + [8]))
	$6 = *(($1 + [4]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$15 }
	
.LOOP $label$16:
	*($5 + [40]) = $5
	*($5 + [16]) = $6
	*((($5 + [16]) + [8])) = ($6 + [16])
	*($5 + [20]) = ($6 + [8])
	CALL $295(($5 + [16]), ($5 + [40]))
	$6 = ($6 + [24])
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$16 }
	
.LABEL $label$15
	CALL db_update_i64(*(($1 + [20])), $2, $4, $10)
	if ( ((uint_32)$10 >= (uint_32)[513]) ){ goto $label$19 }
	if ( ((uint_64)*($0 + [16]) <= (uint_64)$9) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL $400($4)
	if ( ((uint_64)*($0 + [16]) > (uint_64)$9) ){ goto $label$17 }
	
.LABEL $label$18
	*(($0 + [16])) = ((int_64)$9 + (int_64)1)
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$17
	$global$0 = ($5 + [48])
}

void .FUNC $169 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [80])
	$global$0 = $3
	*($3 + [79]) = $2
	CALL require_auth(*($0))
	*(($3 + [64])) = [0]
	*(($3 + [70])) = [0]
	*($3 + [48]) = (int_64)-1
	*($3 + [56]) = (int_64)0
	*($3 + [68]) = [0]
	$4 = *($0)
	*($3 + [32]) = $4
	*($3 + [40]) = $4
	$5 = [0]
	$2 = CALL db_find_i64($4, $4, (int_64)-3020371566920728576, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $10(($3 + [32]), $2)
	if ( ((int_32)*($5 + [88]) == (int_32)($3 + [32])) ){ goto $label$1 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$1
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$2 = CALL $393([9258])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$6 = ((int_32)$5 != (int_32)[0])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$5 }
	*($3 + [16]) = ($2 << [1])
	$7 = (($3 + [16]) | [1])
	if ( $2 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$8 = (($2 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($3 + [16]) = ($8 | [1])
	*($3 + [24]) = $7
	*($3 + [20]) = $2
	
.LABEL $label$4
	CALL memcpy($7, [9258], $2)
	
.LABEL $label$3
	*(($7 + $2)) = [0]
	CALL eosio_assert($6, CALL $5($2, [132], ($3 + [16])))
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$4 = *($0)
	*($3 + [8]) = ($3 + [79])
	if ( $5 ){ goto $label$7 }
	CALL eosio_assert([0], [19537])
	
.LABEL $label$7
	CALL $170(($3 + [32]), $5, $4, ($3 + [8]))
	$0 = *($3 + [56])
	if ( ($0 == 0) ){ goto $label$8 }
	$7 = ($3 + [60])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [-24])
	$5 = *($2)
	*($2) = [0]
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$11 }
	$2 = *(($3 + [56]))
	goto $label$9 
	
.LABEL $label$10
	$2 = $0
	
.LABEL $label$9
	*($7) = $0
	CALL _ZdlPv($2)
	
.LABEL $label$8
	$global$0 = ($3 + [80])
	return (unreachable)
	
.LABEL $label$2
	CALL $359(($3 + [16]))
}

void .FUNC $168 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	$6 = *($1)
	*($5 + [16]) = *(*($3))
	*($5 + [24]) = *(*($3 + [4]))
	*($5 + [32]) = *(*($3 + [8]))
	$3 = *(*($3 + [12]))
	$8 = ($3 + [24])
	$7 = ($1 + [8])
	$9 = (*($7) - $8)
	$10 = ((int_32)$9 / (int_32)[24])
	if ( ($9 == 0) ){ goto $label$3 }
	CALL memmove($3, $8, $9)
	
.LABEL $label$3
	$3 = ($3 + ((int_32)$10 * (int_32)[24]))
	*($7) = $3
	if ( ((int_32)$3 == (int_32)*(($1 + [12]))) ){ goto $label$5 }
	*($3) = *($5 + [16])
	*(($3 + [16])) = *((($5 + [16]) + [16]))
	*(($3 + [8])) = *((($5 + [16]) + [8]))
	*(($3 = ($1 + [8]))) = (*($3) + [24])
	goto $label$4 
	
.LABEL $label$5
	CALL $294(($1 + [4]), ($5 + [16]))
	
.LABEL $label$4
	$11 = (CASTING uint_64)(uint_32 $6)
	if ( ((int_32)($6 & [255]) == (int_32)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [19669])
	
.LABEL $label$6
	$12 = ((int_64)$11 & (int_64)255)
	$9 = *($1 + [4])
	$6 = *($1 + [8])
	$7 = ($6 - $9)
	$11 = (CASTING uint_64)(uint_32 ((int_32)$7 / (int_32)[24]))
	$3 = [25]
	
.LOOP $label$7:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$11 }
	$7 = (((int_32)((uint_32)($7 + [-24]) / (uint_32)[24]) * (int_32)[24]) + $3)
	if ( ($7 <= [513]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$7 = ($3 + [-24])
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$9 }
	
.LABEL $label$10
	$4 = ($4 - (($7 + [15]) & [-16]))
	$global$0 = $4
	goto $label$8 
	
.LABEL $label$9
	$4 = CALL $397($7)
	
.LABEL $label$8
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $7)
	$3 = $4
	if ( ((int_32)$7 > (int_32)[0]) ){ goto $label$12 }
	CALL eosio_assert([0], [18965])
	$3 = *($5 + [4])
	
.LABEL $label$12
	CALL memcpy($3, $1, [1])
	$3 = ($3 + [1])
	*($5 + [4]) = $3
	$11 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [8])) - *(($1 + [4]))) / (int_32)[24]))
	
.LOOP $label$13:
	$6 = (CASTING uint_32)(uint_64 $11)
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	$9 = ((int_64)$11) != (int_64)0
	*($5 + [16]) = (($9) << [7]) | ($6 & [127]))
	if ( ((int_32)(*(($5 + [8])) - $3) > (int_32)[0]) ){ goto $label$14 }
	CALL eosio_assert([0], [18965])
	$3 = *($5 + [4])
	
.LABEL $label$14
	CALL memcpy($3, ($5 + [16]), [1])
	$3 = ($3 + [1])
	*($5 + [4]) = $3
	if ( $9 ){ goto $label$13 }
	$6 = *(($1 + [8]))
	$3 = *(($1 + [4]))
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	*($5 + [40]) = $5
	*($5 + [16]) = $3
	*((($5 + [16]) + [8])) = ($3 + [16])
	*($5 + [20]) = ($3 + [8])
	CALL $295(($5 + [16]), ($5 + [40]))
	$3 = ($3 + [24])
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$16 }
	
.LABEL $label$15
	CALL db_update_i64(*(($1 + [20])), $2, $4, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$19 }
	if ( ((uint_64)*($0 + [16]) <= (uint_64)$12) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL $400($4)
	if ( ((uint_64)*($0 + [16]) > (uint_64)$12) ){ goto $label$17 }
	
.LABEL $label$18
	*(($0 + [16])) = ((int_64)$12 + (int_64)1)
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$17
	$global$0 = ($5 + [48])
}

void .FUNC $66 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-4421665485641187328, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [96]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [19486])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $72($7, CALL $fimport$7(*($7), *($7 + [8]), (int_64)-4421665485641187328, $6))
	if ( ((int_32)*($4 + [96]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$2
	*(($4 + [104])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $61 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	$6 = ($1 + [8])
	$7 = *($1)
	if ( (CALL $125(*($3), *(*(*(($3 + [4])) + [4]) + [16])) == 0) ){ goto $label$3 }
	*($6) = (int_64)0
	if ( (*([0] + [10328]) == 0) ){ goto $label$5 }
	$8 = *([0] + [10320])
	goto $label$4 
	
.LABEL $label$5
	$8 = CALL current_time()
	*([0] + [10328]) = [1]
	*([0] + [10320]) = $8
	
.LABEL $label$4
	*($1 + [16]) = $8
	
.LABEL $label$3
	*((($5 + [32]) + [8])) = [0]
	*($5 + [32]) = (int_64)0
	$8 = *($6)
	$9 = *($1 + [24])
	$3 = CALL $393([19882])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$6 }
	$10 = (uint_64)(((int_64)$8 + (int_64)$9) <= (int_64)3)
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$9 }
	*($5 + [32]) = ($3 << [1])
	$11 = (($5 + [32]) | [1])
	if ( $3 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$12 = (($3 + [16]) & [-16])
	$11 = CALL _Znwj($12)
	*($5 + [32]) = ($12 | [1])
	*($5 + [40]) = $11
	*($5 + [36]) = $3
	
.LABEL $label$8
	CALL memcpy($11, [19882], $3)
	
.LABEL $label$7
	*(($11 + $3)) = [0]
	CALL eosio_assert($10, CALL $5($5, [155], ($5 + [32])))
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*($5 + [40]))
	
.LABEL $label$10
	$11 = ($1 + [24])
	*(($3 = ($1 + [24]))) = ((int_64)*($3) + (int_64)1)
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$11 }
	CALL eosio_assert([0], [19669])
	
.LABEL $label$11
	$4 = $4
	$3 = ($4 + [-32])
	$global$0 = $3
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = $4
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $6
	*($5 + [44]) = $11
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [16])
	CALL $303(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [36]), $2, $3, [32])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$12 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	$global$0 = ($5 + [48])
	return (unreachable)
	
.LABEL $label$6
	CALL $359(($5 + [32]))
}

int_32 .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [19191])
	
.LABEL $label$5
	$4 = CALL $397($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([48])) + [32]) = $0
	*($5 + [16]) = (int_64)0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	CALL $301(($3 + [32]), ($3 + [24]))
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $63(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $400($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $63 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $377($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $241 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	$3 = ($global$0 - [240])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = ($4 + [136]))) = (int_64)0
	*(($8 = ($4 + [128]))) = (int_64)0
	*(($9 = (($4 + [96]) + [24]))) = (int_64)0
	*($4 + [104]) = [0]
	*($4 + [96]) = (int_64)0
	*($4 + [112]) = (int_64)0
	*($4 + [84]) = $2
	*($4 + [80]) = $2
	*($4 + [88]) = ($2 + $7)
	*($4 + [176]) = ($4 + [80])
	*($4 + [208]) = ($4 + [96])
	CALL $270(($4 + [208]), ($4 + [176]))
	*(($10 = (($4 + [32]) + [8]))) = *($4 + [88])
	*($4 + [32]) = *($4 + [80])
	*(($11 = (($4 + [176]) + [8]))) = *($10)
	*($4 + [176]) = *($4 + [32])
	$10 = *($11)
	*((($4 + [208]) + [8])) = $10
	*((($4 + [48]) + [24])) = $10
	*($4 + [48]) = $0
	*($4 + [56]) = $1
	$0 = *($4 + [176])
	*($4 + [64]) = $0
	*($4 + [208]) = $0
	*(($10 = (($4 + [144]) + [16]))) = *($8)
	*(($8 = (($4 + [144]) + [24]))) = *($3)
	*($4 + [144]) = *($4 + [112])
	*($4 + [152]) = *($9)
	$9 = *($4 + [104])
	$0 = *($4 + [96])
	*((($4 + [176]) + [24])) = *($8)
	*((($4 + [176]) + [16])) = *($10)
	*($4 + [184]) = *($4 + [152])
	*($4 + [176]) = *($4 + [144])
	$3 = (($4 + [48]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$1 = *((($4 + [176]) + [24]))
	*((($4 + [208]) + [24])) = $1
	$12 = *((($4 + [176]) + [16]))
	*((($4 + [208]) + [16])) = $12
	*(($4 + [16])) = $12
	*(($4 + [24])) = $1
	$1 = *($4 + [184])
	*($4 + [216]) = $1
	$12 = *($4 + [176])
	*($4) = $12
	*($4 + [208]) = $12
	*($4 + [8]) = $1
	CALL void $3((int_32 $0), (int_64 ($9 & [255])), (int_32 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $400($2)
	
.LABEL $label$5
	$global$0 = ($4 + [240])
	return [1]
}

int_32 .FUNC $398 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [8384])
	if ( $2 ){ goto $label$2 }
	$2 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$3 = (($1 + [4]) & [7])
	$3 = ( (($1 + [8]) - $3) ? $1 : $3 )
	$4 = *($0 + [8388])
	if ( ((uint_32)$4 >= (uint_32)$2) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$4 * (int_32)[12])) + [8192])
	if ( $4 ){ goto $label$6 }
	$2 = ($0 + [8196])
	if ( *($2) ){ goto $label$6 }
	*($1) = [8192]
	*($2) = $0
	
.LABEL $label$6
	$4 = ($3 + [4])
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( ((uint_32)($2 + $4) > (uint_32)*($1)) ){ goto $label$8 }
	*(($2 = (*($1 + [4]) + $2))) = ((*($2) & [-2147483648]) | $3)
	*(($1 = ($1 + [8]))) = (*($1) + $4)
	*($2) = (*($2) | [-2147483648])
	$1 = ($2 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $399($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$5 = ([2147483644] - $3)
	$6 = ($0 + [8392])
	$7 = ($0 + [8384])
	$8 = *($0 + [8392])
	$2 = $8
	
.LOOP $label$9:
	$9 = ($1 + [8192])
	$1 = ($0 + ((int_32)$2 * (int_32)[12]))
	if ( ((int_32)*(($1 + [8200])) == (int_32)*($9)) ){ goto $label$10 }
	CALL eosio_assert([0], [8240])
	
.LABEL $label$10
	$10 = *(($1 + [8196]))
	$2 = ($10 + [4])
	
.LOOP $label$11:
	$11 = ($10 + *($9))
	$12 = ($2 + [-4])
	$13 = *($12)
	$1 = ($13 & [2147483647])
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$12 }
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($2 + $1)
	if ( ((uint_32)$4 >= (uint_32)$11) ){ goto $label$13 }
	$4 = *($4)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$13 }
	$1 = (($1 + ($4 & [2147483647])) + [4])
	if ( ($1 <= $3) ){ goto $label$14 }
	
.LABEL $label$13
	*($12) = (( $1 ? $3 : ($1 <= $3) ) | ($13 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$3) ){ goto $label$15 }
	*(($2 + $3)) = (($5 + $1) & [2147483647])
	
.LABEL $label$15
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$3 }
	
.LABEL $label$12
	$2 = (($2 + $1) + [4])
	if ( ($2 <= $11) ){ goto $label$11 }
	$1 = [0]
	$2 = (*($6) + [1])
	$2 = ( [0] ? $2 : ((int_32)$2 == (int_32)*($7)) )
	*($6) = $2
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($12) = (*($12) | [-2147483648])
	return $2
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $399 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [10344]) == 0) ){ goto $label$2 }
	$2 = *([0] + [10348])
	goto $label$1 
	
.LABEL $label$2
	$2 = (current_memory)
	*([0] + [10344]) = [1]
	$2 = ($2 << [16])
	*([0] + [10348]) = $2
	
.LABEL $label$1
	$3 = $2
	$5 = (current_memory)
	$4 = uint_32(($2 + [65535]) >> [16])
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$6 }
	($4 - $5)
	$5 = [0]
	if ( ((int_32)$4 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [10348])
	
.LABEL $label$6
	$5 = [0]
	*([0] + [10348]) = $3
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$4 = ((int_32)$1 * (int_32)[12])
	$5 = ($2 & [65535])
	if ( ((uint_32)$5 > (uint_32)[64512]) ){ goto $label$8 }
	$5 = (($2 + [65536]) - $5)
	goto $label$7 
	
.LABEL $label$8
	$5 = (($2 + [131072]) - ($2 & [131071]))
	
.LABEL $label$7
	$4 = ($0 + $4)
	$2 = ($5 - $2)
	if ( *([0] + [10344]) ){ goto $label$9 }
	$3 = (current_memory)
	*([0] + [10344]) = [1]
	$3 = ($3 << [16])
	*([0] + [10348]) = $3
	
.LABEL $label$9
	$4 = ($4 + [8192])
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$8 = (current_memory)
	$7 = (($2 + [7]) & [-8])
	$5 = uint_32((($7 + $3) + [65535]) >> [16])
	if ( ((uint_32)$5 <= (uint_32)$8) ){ goto $label$10 }
	($5 - $8)
	if ( ((int_32)$5 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [10348])
	
.LABEL $label$10
	*([0] + [10348]) = ($6 + $7)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$5 = *($4)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $5) == (int_32)$3) ){ goto $label$3 }
	$7 = ($1 + [8200])
	$1 = *($7)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$11 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $5))
	*($7) = *($4)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$11
	$4 = (*($4) + [1])
	*(($4 = ($0 + [8388]))) = $4
	*(($5 = (($0 = ($0 + ((int_32)$4 * (int_32)[12]))) + [8192]))) = $2
	*(($0 + [8196])) = $3
	
.LABEL $label$5
	return $5
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$2 = *($1)
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$12 }
	*(($3 = (*(($3 + [8196])) + $2))) = ((*($3) & [-2147483648]) | (([-4] - $2) + $5))
	*($1) = *($4)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$12
	$2 = ($0 + [8388])
	$3 = (*($2) + [1])
	*($0 + [8384]) = $3
	*($2) = $3
	return [0]
	
.LABEL $label$3
	*($4) = ($5 + $2)
	return $4
}

int_64 .FUNC $390 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [144])
	$global$0 = $3
	*($3 + [4]) = $0
	*($3 + [44]) = $0
	*($3) = [0]
	*($3 + [76]) = [-1]
	*($3 + [8]) = ( [-1] ? ($0 + [2147483647]) : ((int_32)$0 < (int_32)[0]) )
	CALL $387($3, (int_64)0)
	$4 = CALL $389($3, $2, [1], (int_64)-1)
	if ( ($1 == 0) ){ goto $label$1 }
	*($1) = ($0 + ((*($3 + [4]) + *($3 + [120])) - *(($3 + [8]))))
	
.LABEL $label$1
	$global$0 = ($3 + [144])
	return $4
}

int_32 .FUNC $391 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$6:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$4 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$7 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = $2
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = $2
	
.LABEL $label$3
	if ( ((int_32)*($0) != (int_32)($1 & [255])) ){ goto $label$8 }
	if ( $5 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$8
	if ( ($5 <= [4]) ){ goto $label$10 }
	$3 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$3)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$1 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $392 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

int_32 .FUNC $393 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $394 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = [0]
	$4 = *($0)
	if ( ($4 == 0) ){ goto $label$1 }
	$0 = ($0 + [1])
	$2 = ([1] - $2)
	
.LOOP $label$4:
	$5 = *($1)
	if ( ((int_32)($4 & [255]) != (int_32)$5) ){ goto $label$2 }
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ($5 == 0) ){ goto $label$2 }
	$2 = ($2 + [1])
	$1 = ($1 + [1])
	$4 = *($0)
	$0 = ($0 + [1])
	if ( $4 ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	return [0]
	
.LABEL $label$2
	$3 = $4
	
.LABEL $label$1
	return (($3 & [255]) - *($1))
}

int_32 .FUNC $395 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $379())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $396($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $396 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $397($1)
	
.LABEL $label$2
	*(CALL $379()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $397(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $400($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

int_32 .FUNC $397 (int_32 $0)
{
	return CALL $398([10352], $0)
}

void .FUNC $365 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$5 }
	$5 = uint_32($3 >> [1])
	if ( ($5 <= $1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$3 }
	
.LABEL $label$4
	$1 = ($1 - $5)
	if ( ($1 == 0) ){ goto $label$2 }
	if ( $4 ){ goto $label$8 }
	$5 = [10]
	$4 = uint_32($3 >> [1])
	if ( (([10] - $4) <= $1) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$4 = *($0 + [4])
	$3 = *($0)
	$5 = (($3 & [-2]) + [-1])
	if ( ((uint_32)($5 - $4) >= (uint_32)$1) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $366($0, $5, (($4 + $1) - $5), $4, $4, [0], [0])
	$3 = *($0)
	
.LABEL $label$6
	if ( ($3 & [1]) ){ goto $label$10 }
	$3 = ($0 + [1])
	goto $label$9 
	
.LABEL $label$10
	$3 = *($0 + [8])
	
.LABEL $label$9
	CALL memset(($3 + $4), ($2 & [255]), $1)
	$1 = ($4 + $1)
	if ( (*($0) & [1]) ){ goto $label$11 }
	*($0) = ($1 << [1])
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$11
	*($0 + [4]) = $1
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$3
	if ( $4 ){ goto $label$1 }
	*((($0 + $1) + [1])) = [0]
	*($0) = ($1 << [1])
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*((*($0 + [8]) + $1)) = [0]
	*($0 + [4]) = $1
}

void .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($1)
	*($2 + [13]) = *(*($0 + [16]))
	$5 = *($4 + [4])
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, ($2 + [13]), [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$9 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($1)
	*($2 + [15]) = *(*($0 + [40]))
	$5 = *($4 + [4])
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$11 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($5, ($2 + [15]), [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($1)
	*($2 + [14]) = *(*($0 + [44]))
	$5 = *($4 + [4])
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$12 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy($5, ($2 + [14]), [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($1)
	*($2 + [12]) = *(*($0 + [48]))
	$5 = *($4 + [4])
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$13 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($5, ($2 + [12]), [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($1)
	*($2 + [11]) = *(*($0 + [52]))
	$5 = *($4 + [4])
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$14 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$14
	CALL memcpy($5, ($2 + [11]), [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($0 + [56])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$15 }
	CALL eosio_assert([0], [18965])
	$1 = *(($0 + [4]))
	
.LABEL $label$15
	CALL memcpy($1, $4, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $367 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $393($1)
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $363($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

void .FUNC $366 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$7 = ($0 + [1])
	$8 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = *($0 + [8])
	$8 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = [11]
	$2 = ($2 + $1)
	$9 = ($1 << [1])
	$2 = ( $9 ? $2 : ($2 <= $9) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$8 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL _Znwj($8)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $7, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($7 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL _ZdlPv($7)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($8 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $69 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [96]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19287])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19332])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [19382])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL _ZdlPv($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [100]))
	$9 = *(($1 + [104]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4421665485641187328, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

int_32 .FUNC $68 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = [-1]
	$4 = *($2 + [104])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [19257])
	$3 = [-1]
	$2 = *(($0 + [4]))
	$4 = *($2 + [104])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = *(*($0))
	$4 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)-4421665485641187328, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [104]) = $4
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$5 = CALL db_idx64_next($4, ($1 + [8]))
	if ( ((int_32)$5 <= (int_32)$3) ){ goto $label$7 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$8:
	$4 = ($2 + [-24])
	$3 = *($4)
	if ( ((int_64)*($3) == (int_64)$6) ){ goto $label$6 }
	$2 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$7
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	if ( ((int_32)*($3 + [96]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [19486])
	goto $label$4 
	
.LABEL $label$5
	$3 = CALL $72($7, CALL $fimport$7(*($7), *($7 + [8]), (int_64)-4421665485641187328, $6))
	if ( ((int_32)*($3 + [96]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$4
	*(($0 + [4])) = $3
	*(($3 + [104])) = $5
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $248 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [192])
	$global$0 = $3
	*(($4 = $3) + [152]) = *($2)
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$3 = CALL $397($2)
	goto $label$2 
	
.LABEL $label$4
	$3 = [0]
	goto $label$1 
	
.LABEL $label$3
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$2
	CALL read_action_data($3, $2)
	
.LABEL $label$1
	*((($4 + [64]) + [24])) = (int_64)0
	*(($4 + [80])) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [64]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [112]) = (int_64)0
	*($4 + [120]) = (int_64)0
	*($4 + [128]) = (int_64)0
	*($4 + [136]) = (int_64)0
	*($4 + [52]) = $3
	*($4 + [48]) = $3
	*($4 + [56]) = ($3 + $2)
	*($4 + [176]) = ($4 + [48])
	*($4 + [16]) = ($4 + [64])
	CALL $275(($4 + [16]), ($4 + [176]))
	*(($5 = ($4 + [8]))) = *($4 + [56])
	*($4) = *($4 + [48])
	*(($6 = (($4 + [160]) + [8]))) = *($5)
	*($4 + [160]) = *($4)
	$5 = *($6)
	*((($4 + [176]) + [8])) = $5
	*((($4 + [16]) + [24])) = $5
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [160])
	*($4 + [32]) = $0
	*($4 + [176]) = $0
	*($4 + [180]) = ($4 + [152])
	*($4 + [176]) = ($4 + [16])
	CALL $276(($4 + [176]), ($4 + [64]))
	if ( ($2 <= [513]) ){ goto $label$5 }
	CALL $400($3)
	
.LABEL $label$5
	if ( ((*(($4 + [108])) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*(($4 + [116])))
	
.LABEL $label$6
	if ( ((*(($4 + [96])) & [1]) == 0) ){ goto $label$7 }
	CALL _ZdlPv(*(($4 + [104])))
	
.LABEL $label$7
	$global$0 = ($4 + [192])
	return [1]
}

int_32 .FUNC $249 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [176])
	$global$0 = $3
	*(($4 = $3) + [136]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [80])) = (int_64)0
	*((($4 + [64]) + [24])) = (int_64)0
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = (int_64)0
	*(($3 = ($4 + [120]))) = (int_64)0
	*(($4 + [128])) = [0]
	*($4 + [64]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [52]) = $2
	*($4 + [48]) = $2
	*($4 + [56]) = ($2 + $5)
	*($4 + [160]) = ($4 + [48])
	*($4 + [16]) = ($4 + [64])
	CALL $279(($4 + [16]), ($4 + [160]))
	*(($6 = ($4 + [8]))) = *($4 + [56])
	*($4) = *($4 + [48])
	*(($7 = (($4 + [144]) + [8]))) = *($6)
	*($4 + [144]) = *($4)
	$6 = *($7)
	*((($4 + [160]) + [8])) = $6
	*((($4 + [16]) + [24])) = $6
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [144])
	*($4 + [32]) = $0
	*($4 + [160]) = $0
	*($4 + [164]) = ($4 + [136])
	*($4 + [160]) = ($4 + [16])
	CALL $280(($4 + [160]), ($4 + [64]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $400($2)
	
.LABEL $label$4
	$2 = *($3)
	if ( ($2 == 0) ){ goto $label$5 }
	*(($4 + [124])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$5
	$2 = *(($4 + [108]))
	if ( ($2 == 0) ){ goto $label$6 }
	*(($4 + [112])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$6
	$2 = *(($4 + [96]))
	if ( ($2 == 0) ){ goto $label$7 }
	*(($4 + [100])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$7
	$6 = *(($4 + [84]))
	if ( ($6 == 0) ){ goto $label$8 }
	$5 = $6
	$7 = ($4 + [88])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$9 }
	
.LOOP $label$10:
	$5 = ($2 + [-16])
	$3 = *(($2 + [-12]))
	if ( ($3 == 0) ){ goto $label$11 }
	*(($2 + [-8])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$11
	$2 = $5
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$10 }
	$5 = *(($4 + [84]))
	
.LABEL $label$9
	*($7) = $6
	CALL _ZdlPv($5)
	
.LABEL $label$8
	$2 = *(($4 + [72]))
	if ( ($2 == 0) ){ goto $label$12 }
	*(($4 + [76])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$12
	$global$0 = ($4 + [176])
	return [1]
}

int_32 .FUNC $246 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$3 = ($global$0 - [576])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = ($4 + [200]))) = (int_64)0
	*(($8 = ($4 + [192]))) = (int_64)0
	*(($9 = (($4 + [160]) + [24]))) = (int_64)0
	*(($10 = ($4 + [232]))) = (int_64)0
	*(($11 = ($4 + [224]))) = (int_64)0
	*(($12 = ($4 + [216]))) = (int_64)0
	*(($13 = ($4 + [264]))) = (int_64)0
	*(($14 = ($4 + [256]))) = (int_64)0
	*(($15 = ($4 + [248]))) = (int_64)0
	*($4 + [176]) = (int_64)0
	*($4 + [160]) = (int_64)0
	*($4 + [208]) = (int_64)0
	*($4 + [240]) = (int_64)0
	*($4 + [272]) = [0]
	*($4 + [148]) = $2
	*($4 + [144]) = $2
	*($4 + [152]) = ($2 + $7)
	*($4 + [512]) = ($4 + [144])
	*($4 + [544]) = ($4 + [160])
	CALL $263(($4 + [544]), ($4 + [512]))
	*(($16 = (($4 + [96]) + [8]))) = *($4 + [152])
	*($4 + [96]) = *($4 + [144])
	*(($17 = (($4 + [512]) + [8]))) = *($16)
	*($4 + [512]) = *($4 + [96])
	$16 = *($17)
	*((($4 + [544]) + [8])) = $16
	*((($4 + [112]) + [24])) = $16
	*($4 + [112]) = $0
	*($4 + [120]) = $1
	$0 = *($4 + [512])
	*($4 + [128]) = $0
	*($4 + [544]) = $0
	*(($16 = (($4 + [352]) + [16]))) = *($8)
	*(($8 = (($4 + [352]) + [24]))) = *($3)
	*(($3 = (($4 + [320]) + [16]))) = *($11)
	*(($11 = (($4 + [320]) + [24]))) = *($10)
	*(($10 = (($4 + [288]) + [16]))) = *($14)
	*(($14 = (($4 + [288]) + [24]))) = *($13)
	*($4 + [352]) = *($4 + [176])
	*($4 + [360]) = *($9)
	*($4 + [320]) = *($4 + [208])
	*($4 + [328]) = *($12)
	*($4 + [288]) = *($4 + [240])
	*($4 + [296]) = *($15)
	$0 = *($4 + [160])
	$9 = *($4 + [272])
	*((($4 + [448]) + [24])) = *($14)
	*((($4 + [448]) + [16])) = *($10)
	*((($4 + [416]) + [16])) = *($3)
	*((($4 + [416]) + [24])) = *($11)
	*((($4 + [384]) + [16])) = *($16)
	*((($4 + [384]) + [24])) = *($8)
	*($4 + [456]) = *($4 + [296])
	*($4 + [448]) = *($4 + [288])
	*($4 + [416]) = *($4 + [320])
	*($4 + [424]) = *($4 + [328])
	*($4 + [384]) = *($4 + [352])
	*($4 + [392]) = *($4 + [360])
	$3 = (($4 + [112]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	*(($5 = (($4 + [544]) + [24]))) = *((($4 + [384]) + [24]))
	*(($8 = (($4 + [544]) + [16]))) = *((($4 + [384]) + [16]))
	*(($10 = (($4 + [512]) + [16]))) = *((($4 + [416]) + [16]))
	*(($11 = (($4 + [512]) + [24]))) = *((($4 + [416]) + [24]))
	*(($12 = (($4 + [480]) + [16]))) = *((($4 + [448]) + [16]))
	*(($13 = (($4 + [480]) + [24]))) = *((($4 + [448]) + [24]))
	*($4 + [552]) = *($4 + [392])
	*($4 + [544]) = *($4 + [384])
	*($4 + [512]) = *($4 + [416])
	*($4 + [520]) = *($4 + [424])
	*($4 + [480]) = *($4 + [448])
	*($4 + [488]) = *($4 + [456])
	*((($4 + [64]) + [24])) = *($5)
	*((($4 + [64]) + [16])) = *($8)
	*((($4 + [32]) + [16])) = *($10)
	*((($4 + [32]) + [24])) = *($11)
	*(($4 + [16])) = *($12)
	*(($4 + [24])) = *($13)
	*($4 + [72]) = *($4 + [552])
	*($4 + [64]) = *($4 + [544])
	*($4 + [32]) = *($4 + [512])
	*($4 + [40]) = *($4 + [520])
	*($4) = *($4 + [480])
	*($4 + [8]) = *($4 + [488])
	CALL void $3((int_32 $0), (int_64 ($4 + [64])), (int_32 ($4 + [32])), (int_32 $4), (int_32 ((int_32)($9 & [255]) != (int_32)[0])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $400($2)
	
.LABEL $label$5
	$global$0 = ($4 + [576])
	return [1]
}

int_32 .FUNC $247 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$3 = ($global$0 - [576])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = ($4 + [200]))) = (int_64)0
	*(($8 = ($4 + [192]))) = (int_64)0
	*(($9 = (($4 + [160]) + [24]))) = (int_64)0
	*(($10 = ($4 + [232]))) = (int_64)0
	*(($11 = ($4 + [224]))) = (int_64)0
	*(($12 = ($4 + [216]))) = (int_64)0
	*(($13 = ($4 + [264]))) = (int_64)0
	*(($14 = ($4 + [256]))) = (int_64)0
	*(($15 = ($4 + [248]))) = (int_64)0
	*($4 + [168]) = (int_64)0
	*($4 + [160]) = (int_64)0
	*($4 + [176]) = (int_64)0
	*($4 + [208]) = (int_64)0
	*($4 + [240]) = (int_64)0
	*($4 + [272]) = [0]
	*($4 + [148]) = $2
	*($4 + [144]) = $2
	*($4 + [152]) = ($2 + $7)
	*($4 + [512]) = ($4 + [144])
	*($4 + [544]) = ($4 + [160])
	CALL $264(($4 + [544]), ($4 + [512]))
	*(($16 = (($4 + [96]) + [8]))) = *($4 + [152])
	*($4 + [96]) = *($4 + [144])
	*(($17 = (($4 + [512]) + [8]))) = *($16)
	*($4 + [512]) = *($4 + [96])
	$16 = *($17)
	*((($4 + [544]) + [8])) = $16
	*((($4 + [112]) + [24])) = $16
	*($4 + [112]) = $0
	*($4 + [120]) = $1
	$0 = *($4 + [512])
	*($4 + [128]) = $0
	*($4 + [544]) = $0
	*(($16 = (($4 + [352]) + [16]))) = *($8)
	*(($8 = (($4 + [352]) + [24]))) = *($3)
	*(($3 = (($4 + [320]) + [16]))) = *($11)
	*(($11 = (($4 + [320]) + [24]))) = *($10)
	*($4 + [352]) = *($4 + [176])
	*($4 + [360]) = *($9)
	*($4 + [320]) = *($4 + [208])
	*($4 + [328]) = *($12)
	$0 = *($4 + [168])
	$1 = *($4 + [160])
	*(($9 = (($4 + [288]) + [24]))) = *($13)
	*(($10 = (($4 + [288]) + [16]))) = *($14)
	*($4 + [296]) = *($15)
	*($4 + [288]) = *($4 + [240])
	$12 = *($4 + [272])
	*((($4 + [448]) + [24])) = *($9)
	*((($4 + [448]) + [16])) = *($10)
	*((($4 + [416]) + [16])) = *($3)
	*((($4 + [416]) + [24])) = *($11)
	*((($4 + [384]) + [16])) = *($16)
	*((($4 + [384]) + [24])) = *($8)
	*($4 + [456]) = *($4 + [296])
	*($4 + [448]) = *($4 + [288])
	*($4 + [416]) = *($4 + [320])
	*($4 + [424]) = *($4 + [328])
	*($4 + [384]) = *($4 + [352])
	*($4 + [392]) = *($4 + [360])
	$3 = (($4 + [112]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	*(($5 = (($4 + [544]) + [24]))) = *((($4 + [384]) + [24]))
	*(($8 = (($4 + [544]) + [16]))) = *((($4 + [384]) + [16]))
	*(($9 = (($4 + [512]) + [16]))) = *((($4 + [416]) + [16]))
	*(($10 = (($4 + [512]) + [24]))) = *((($4 + [416]) + [24]))
	*(($11 = (($4 + [480]) + [16]))) = *((($4 + [448]) + [16]))
	*(($13 = (($4 + [480]) + [24]))) = *((($4 + [448]) + [24]))
	*($4 + [552]) = *($4 + [392])
	*($4 + [544]) = *($4 + [384])
	*($4 + [512]) = *($4 + [416])
	*($4 + [520]) = *($4 + [424])
	*($4 + [480]) = *($4 + [448])
	*($4 + [488]) = *($4 + [456])
	*((($4 + [64]) + [24])) = *($5)
	*((($4 + [64]) + [16])) = *($8)
	*((($4 + [32]) + [16])) = *($9)
	*((($4 + [32]) + [24])) = *($10)
	*(($4 + [16])) = *($11)
	*(($4 + [24])) = *($13)
	*($4 + [72]) = *($4 + [552])
	*($4 + [64]) = *($4 + [544])
	*($4 + [32]) = *($4 + [512])
	*($4 + [40]) = *($4 + [520])
	*($4) = *($4 + [480])
	*($4 + [8]) = *($4 + [488])
	CALL void $3((int_32 $1), (int_64 $0), (int_64 ($4 + [64])), (int_32 ($4 + [32])), (int_32 $4), (int_32 $12), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $400($2)
	
.LABEL $label$5
	$global$0 = ($4 + [576])
	return [1]
}

int_32 .FUNC $244 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [40]) = [0]
	*($4 + [32]) = (int_64)0
	$3 = ($2 + $7)
	$8 = (($4 + [32]) + [8])
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [19214])
	CALL memcpy(($4 + [32]), $2, [8])
	$9 = ($2 + [8])
	goto $label$4 
	
.LABEL $label$5
	CALL memcpy(($4 + [32]), $2, [8])
	$9 = ($2 + [8])
	if ( ((int_32)$7 != (int_32)[8]) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	
.LABEL $label$4
	CALL memcpy($8, $9, [1])
	*(($4 + [24])) = $3
	*($4 + [16]) = $2
	*(($4 + [20])) = ($2 + [9])
	*($4 + [8]) = $1
	*($4) = $0
	$3 = ($4 + int_32($5 >> [1]))
	$8 = *(($4 + [40]))
	$0 = *($4 + [32])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 ($8 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $400($2)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
	return [1]
}

int_32 .FUNC $245 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [80]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $7)
	*($4 + [112]) = ($4 + [56])
	*($4 + [24]) = ($4 + [72])
	CALL $254(($4 + [24]), ($4 + [112]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [64])
	*($4 + [8]) = *($4 + [56])
	*(($8 = (($4 + [96]) + [8]))) = *($3)
	*($4 + [96]) = *($4 + [8])
	$3 = *($8)
	*((($4 + [112]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [96])
	*($4 + [40]) = $0
	*($4 + [112]) = $0
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$0 = *($4 + [88])
	$1 = *($4 + [80])
	$9 = *($4 + [72])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $400($2)
	
.LABEL $label$6
	$global$0 = ($4 + [128])
	return [1]
}

int_32 .FUNC $242 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [72]) = (int_64)0
	*($4 + [80]) = [0]
	*($4 + [84]) = [0]
	*($4 + [88]) = [0]
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $7)
	*($4 + [112]) = ($4 + [56])
	*($4 + [24]) = ($4 + [72])
	CALL $281(($4 + [24]), ($4 + [112]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [64])
	*($4 + [8]) = *($4 + [56])
	*(($8 = (($4 + [96]) + [8]))) = *($3)
	*($4 + [96]) = *($4 + [8])
	$3 = *($8)
	*((($4 + [112]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [96])
	*($4 + [40]) = $0
	*($4 + [112]) = $0
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$8 = *($4 + [88])
	$9 = *($4 + [84])
	$10 = *($4 + [82])
	$11 = *($4 + [80])
	$0 = *($4 + [72])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $0), (int_64 ($11 & [65535])), (int_32 ($10 & [65535])), (int_32 ($9 & [65535])), (int_32 $8), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $400($2)
	
.LABEL $label$5
	$global$0 = ($4 + [128])
	return [1]
}

int_32 .FUNC $243 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [64]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [52]) = $2
	*($4 + [48]) = $2
	*($4 + [56]) = ($2 + $7)
	*($4 + [96]) = ($4 + [48])
	*($4 + [16]) = ($4 + [64])
	CALL $271(($4 + [16]), ($4 + [96]))
	*(($3 = ($4 + [8]))) = *($4 + [56])
	*($4) = *($4 + [48])
	*(($8 = (($4 + [80]) + [8]))) = *($3)
	*($4 + [80]) = *($4)
	$3 = *($8)
	*((($4 + [96]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [80])
	*($4 + [32]) = $0
	*($4 + [96]) = $0
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$8 = *($4 + [76])
	$9 = *($4 + [72])
	$0 = *($4 + [64])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $0), (int_64 $9), (int_32 $8), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $400($2)
	
.LABEL $label$6
	$global$0 = ($4 + [112])
	return [1]
}

int_32 .FUNC $240 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [208])
	$global$0 = $3
	*(($4 = $3) + [168]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [124])) = (int_64)0
	*(($4 + [132])) = (int_64)0
	*(($4 + [148])) = (int_64)0
	*(($4 + [156])) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [88]) = [0]
	*($4 + [96]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [112]) = [0]
	*($4 + [116 align=4]) = (int_64)0
	*($4 + [140 align=4]) = (int_64)0
	*($4 + [164]) = [0]
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $5)
	*($4 + [192]) = ($4 + [56])
	*($4 + [24]) = ($4 + [72])
	CALL $265(($4 + [24]), ($4 + [192]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [64])
	*($4 + [8]) = *($4 + [56])
	*(($6 = (($4 + [176]) + [8]))) = *($3)
	*($4 + [176]) = *($4 + [8])
	$3 = *($6)
	*((($4 + [192]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [176])
	*($4 + [40]) = $0
	*($4 + [192]) = $0
	*($4 + [196]) = ($4 + [168])
	*($4 + [192]) = ($4 + [24])
	CALL $266(($4 + [192]), ($4 + [72]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $400($2)
	
.LABEL $label$4
	$2 = *(($4 + [152]))
	if ( ($2 == 0) ){ goto $label$5 }
	*(($4 + [156])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$5
	$2 = *(($4 + [140]))
	if ( ($2 == 0) ){ goto $label$6 }
	*(($4 + [144])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$6
	$2 = *(($4 + [128]))
	if ( ($2 == 0) ){ goto $label$7 }
	*(($4 + [132])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$7
	$2 = *(($4 + [116]))
	if ( ($2 == 0) ){ goto $label$8 }
	*(($4 + [120])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$8
	if ( ((*($4 + [72]) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*(($4 + [80])))
	
.LABEL $label$9
	$global$0 = ($4 + [208])
	return [1]
}

void .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	$6 = *($5 + [16])
	if ( ((int_64)$6 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$6 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$6 = (int_64)0
	$7 = CALL db_lowerbound_i64(*($5), *($5 + [8]), (int_64)-3020381371621703680, (int_64)0)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $60($5, $7)
	*($3 + [36]) = [0]
	*($3 + [32]) = $5
	$6 = *(*(CALL $302(($3 + [32])) + [4]))
	$6 = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	*(($5 + [16])) = $6
	if ( (uint_64)($6 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [19728])
	$6 = *(($5 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($5 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	*($1) = $6
	*($1 + [24]) = (int_64)1
	$7 = ($1 + [24])
	$8 = ($1 + [8])
	if ( (*([0] + [10328]) == 0) ){ goto $label$6 }
	$6 = *([0] + [10320])
	goto $label$5 
	
.LABEL $label$6
	$6 = CALL current_time()
	*([0] + [10328]) = [1]
	*([0] + [10320]) = $6
	
.LABEL $label$5
	*($1 + [16]) = $6
	$2 = $2
	$5 = ($2 + [-32])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = $2
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $8
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	*($3 + [44]) = $7
	CALL $303(($3 + [32]), ($3 + [24]))
	$6 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($4 + [8]), (int_64)-3020381371621703680, *(*($0 + [8])), $6, $5, [32])
	if ( (uint_64)($6 <= *($4 + [16])) ){ goto $label$7 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$global$0 = ($3 + [48])
}

int_32 .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [19191])
	
.LABEL $label$5
	$4 = CALL $397($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL _Znwj([40])) + [24]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [10])
	*($3 + [52]) = ($5 + [12])
	*($3 + [56]) = ($5 + [16])
	CALL $305(($3 + [40]), ($3 + [32]))
	*($5 + [28]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $206(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $400($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $199 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_64 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	$3 = ($global$0 - [384])
	$global$0 = $3
	CALL require_auth(*($0))
	*(($3 + [216])) = [0]
	*($3 + [192]) = $1
	*($3 + [200]) = (int_64)-1
	$4 = *($0)
	*($3 + [184]) = $4
	*($3 + [208]) = (int_64)0
	$5 = [0]
	$6 = CALL db_lowerbound_i64($4, $1, (int_64)-3020377498459275264, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $23(($3 + [184]), $6)
	
.LABEL $label$1
	*(($3 + [176])) = [0]
	*($3 + [168]) = (int_64)0
	$6 = CALL $393([10064])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$2 }
	$7 = ($5 == 0)
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$5 }
	*($3 + [168]) = ($6 << [1])
	$5 = (($3 + [168]) | [1])
	if ( $6 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$8 = (($6 + [16]) & [-16])
	$5 = CALL _Znwj($8)
	*($3 + [168]) = ($8 | [1])
	*($3 + [176]) = $5
	*($3 + [172]) = $6
	
.LABEL $label$4
	CALL memcpy($5, [10064], $6)
	
.LABEL $label$3
	*(($5 + $6)) = [0]
	CALL eosio_assert($7, CALL $5($3, [116], ($3 + [168])))
	if ( ((*($3 + [168]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [176]))
	
.LABEL $label$6
	*($3 + [8]) = [0]
	$9 = ($2 + [16])
	if ( ((int_32)*($9) == (int_32)*($2 + [12])) ){ goto $label$7 }
	$10 = (($3 + [184]) + [24])
	$11 = (($3 + [288]) + [8])
	$12 = ($3 + [216])
	$13 = ($2 + [12])
	
.LOOP $label$8:
	$4 = *($0)
	*($3 + [88]) = $2
	*($3 + [92]) = ($3 + [8])
	*($3 + [128]) = $4
	if ( ((int_64)*($3 + [184]) == (int_64)CALL current_receiver()) ){ goto $label$9 }
	CALL eosio_assert([0], [19435])
	
.LABEL $label$9
	*($11) = ($3 + [128])
	*($3 + [292]) = ($3 + [88])
	*($3 + [288]) = ($3 + [184])
	*(($6 = CALL _Znwj([28])) + [12]) = [0]
	*($6 + [4 align=4]) = (int_64)0
	*($6 + [16]) = ($3 + [184])
	CALL $200(($3 + [288]), $6)
	*($3 + [48]) = $6
	$7 = *($6)
	*($3 + [248]) = $7
	$8 = *($6 + [20])
	*($3 + [288]) = $8
	$14 = (($3 + [184]) + [28])
	$5 = *($14)
	if ( ((uint_32)$5 >= (uint_32)*($12)) ){ goto $label$12 }
	*($5 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255)
	*($5 + [16]) = $8
	*($3 + [48]) = [0]
	*($5) = $6
	*($14) = ($5 + [24])
	$6 = *($3 + [48])
	*($3 + [48]) = [0]
	if ( ($6 == 0) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$12
	CALL $27($10, ($3 + [48]), ($3 + [248]), ($3 + [288]))
	$6 = *($3 + [48])
	*($3 + [48]) = [0]
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$5 = *($6 + [4])
	if ( ($5 == 0) ){ goto $label$13 }
	*(($6 + [8])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$13
	CALL _ZdlPv($6)
	
.LABEL $label$10
	$6 = *($13)
	$5 = *($9)
	$7 = (*($3 + [8]) + [1])
	*($3 + [8]) = $7
	if ( ($7 <= int_32(($5 - $6) >> [4])) ){ goto $label$8 }
	
.LABEL $label$7
	*(($12 = (($3 + [128]) + [32]))) = [0]
	*($3 + [136]) = $1
	*($3 + [144]) = (int_64)-1
	*($3 + [152]) = (int_64)0
	$4 = *($0)
	*($3 + [128]) = $4
	if ( ((int_32)*($2 + [4]) == (int_32)*($2)) ){ goto $label$15 }
	$15 = (($3 + [128]) + [24])
	$13 = (($3 + [288]) | [1])
	$10 = ($3 + [136])
	$9 = ($3 + [156])
	$16 = ($2 + [4])
	$7 = [1]
	$8 = [0]
	$17 = $4
	if ( ((int_64)$4 != (int_64)CALL current_receiver()) ){ goto $label$16 }
	$18 = [1]
	goto $label$14 
	
.LABEL $label$16
	$18 = [0]
	goto $label$14 
	
.LABEL $label$15
	$18 = [8]
	
.LABEL $label$14
	
.LOOP $label$17:
	goto $label$172 
	
.LABEL $label$173
	$7 = ($7 + [1])
	$8 = ($8 + [2])
	if ( ((int_64)*($3 + [128]) == (int_64)CALL current_receiver()) ){ goto $label$80 }
	$18 = [0]
	goto $label$17 
	
.LABEL $label$172
	CALL eosio_assert([0], [19435])
	$18 = [1]
	goto $label$17 
	
.LABEL $label$171
	*(($6 = CALL _Znwj([16])) + [4]) = ($3 + [128])
	*($6) = *((*($2) + $8))
	CALL memcpy(($3 + [288]), $6, [1])
	CALL memcpy($13, ($6 + [1]), [1])
	$4 = *($6)
	$14 = CALL db_store_i64(*($10), (int_64)-3020374757434588672, $17, $4, ($3 + [288]), [2])
	*($6 + [8]) = $14
	$5 = (($3 + [128]) + [16])
	if ( ((uint_64)*($5) > (uint_64)$4) ){ goto $label$79 }
	$18 = [2]
	goto $label$17 
	
.LABEL $label$170
	*($5) = ((int_64)$4 + (int_64)1)
	$18 = [3]
	goto $label$17 
	
.LABEL $label$169
	*($3 + [288]) = $6
	$11 = *($6)
	*($3 + [48]) = $11
	*($3 + [88]) = $14
	$5 = *($9)
	if ( ((uint_32)$5 >= (uint_32)*($12)) ){ goto $label$78 }
	$18 = [92]
	goto $label$17 
	
.LABEL $label$168
	*($5 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $11) & (int_64)255)
	*($5 + [16]) = $14
	*($3 + [288]) = [0]
	*($5) = $6
	*($9) = ($5 + [24])
	$6 = *($3 + [288])
	*($3 + [288]) = [0]
	if ( $6 ){ goto $label$75 }
	goto $label$76 
	
.LABEL $label$167
	CALL $99($15, ($3 + [288]), ($3 + [48]), ($3 + [88]))
	$6 = *($3 + [288])
	*($3 + [288]) = [0]
	if ( ($6 == 0) ){ goto $label$77 }
	$18 = [5]
	goto $label$17 
	
.LABEL $label$166
	CALL _ZdlPv($6)
	$18 = [6]
	goto $label$17 
	
.LABEL $label$165
	$17 = *($0)
	if ( ($7 <= int_32((*($16) - *($2)) >> [1])) ){ goto $label$74 }
	$18 = [7]
	goto $label$17 
	
.LABEL $label$164
	$4 = $17
	$18 = [8]
	goto $label$17 
	
.LABEL $label$163
	*((($3 + [88]) + [32])) = [0]
	*($3 + [96]) = $1
	*($3 + [88]) = $4
	*($3 + [104]) = (int_64)-1
	*($3 + [112]) = (int_64)0
	$12 = ($2 + [28])
	if ( ((int_32)*($12) == (int_32)*($2 + [24])) ){ goto $label$73 }
	$18 = [9]
	goto $label$17 
	
.LABEL $label$162
	$19 = (($3 + [88]) + [24])
	$13 = (($3 + [288]) + [89])
	$10 = ($3 + [60])
	$16 = ($3 + [68])
	$15 = (($3 + [48]) + [28])
	$20 = ($3 + [120])
	$7 = [1]
	$8 = [0]
	$17 = $4
	if ( ((int_64)$4 == (int_64)CALL current_receiver()) ){ goto $label$72 }
	goto $label$71 
	
.LABEL $label$161
	$7 = ($7 + [1])
	$8 = ($8 + [112])
	if ( ((int_64)*($3 + [88]) == (int_64)CALL current_receiver()) ){ goto $label$70 }
	$18 = [10]
	goto $label$17 
	
.LABEL $label$160
	CALL eosio_assert([0], [19435])
	$18 = [11]
	goto $label$17 
	
.LABEL $label$159
	*(($6 = CALL _Znwj([128])) + [80]) = (int_64)0
	*($6 + [72]) = (int_64)0
	*($6 + [96]) = (int_64)0
	*($6 + [104]) = ($3 + [88])
	$9 = ($2 + [24])
	$6 = CALL memcpy($6, (*($9) + $8), [104])
	*((($3 + [8]) + [8])) = $13
	*($3 + [12]) = ($3 + [288])
	*($3 + [8]) = ($3 + [288])
	*($3 + [248]) = ($3 + [8])
	*((($3 + [48]) + [8])) = ($6 + [48])
	*($10) = ($6 + [56])
	*((($3 + [48]) + [16])) = ($6 + [64])
	*($16) = ($6 + [72])
	*((($3 + [48]) + [24])) = ($6 + [88])
	*($15) = ($6 + [96])
	*($3 + [52]) = ($6 + [16])
	*($3 + [48]) = $6
	CALL $201(($3 + [48]), ($3 + [248]))
	$4 = *($6)
	$14 = CALL db_store_i64(*((($3 + [88]) + [8])), (int_64)-4421665416302691328, $17, $4, ($3 + [288]), [89])
	*($6 + [108]) = $14
	$5 = (($3 + [88]) + [16])
	if ( (uint_64)($4 <= *($5)) ){ goto $label$69 }
	$18 = [12]
	goto $label$17 
	
.LABEL $label$158
	*($5) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	$18 = [13]
	goto $label$17 
	
.LABEL $label$157
	*($3 + [48]) = $6
	$4 = *($6)
	*($3 + [288]) = $4
	*($3 + [8]) = $14
	$11 = (($3 + [88]) + [28])
	$5 = *($11)
	if ( ((uint_32)$5 >= (uint_32)*($20)) ){ goto $label$68 }
	$18 = [90]
	goto $label$17 
	
.LABEL $label$156
	*($5 + [8]) = $4
	*($5 + [16]) = $14
	*($3 + [48]) = [0]
	*($5) = $6
	*($11) = ($5 + [24])
	$6 = *($3 + [48])
	*($3 + [48]) = [0]
	if ( $6 ){ goto $label$65 }
	goto $label$66 
	
.LABEL $label$155
	CALL $157($19, ($3 + [48]), ($3 + [288]), ($3 + [8]))
	$6 = *($3 + [48])
	*($3 + [48]) = [0]
	if ( ($6 == 0) ){ goto $label$67 }
	$18 = [15]
	goto $label$17 
	
.LABEL $label$154
	CALL _ZdlPv($6)
	$18 = [16]
	goto $label$17 
	
.LABEL $label$153
	$17 = *($0)
	if ( ($7 <= ((int_32)(*($12) - *($9)) / (int_32)[112])) ){ goto $label$64 }
	$18 = [17]
	goto $label$17 
	
.LABEL $label$152
	$4 = $17
	$18 = [18]
	goto $label$17 
	
.LABEL $label$151
	*(($12 = (($3 + [48]) + [32]))) = [0]
	*($3 + [56]) = $1
	*($3 + [48]) = $4
	*($3 + [64]) = (int_64)-1
	*($3 + [72]) = (int_64)0
	$13 = ($2 + [40])
	if ( ((int_32)*($13) == (int_32)*($2 + [36])) ){ goto $label$63 }
	$18 = [19]
	goto $label$17 
	
.LABEL $label$150
	$19 = (($3 + [48]) + [24])
	$10 = (($3 + [288]) + [89])
	$9 = ($2 + [36])
	$16 = ($3 + [20])
	$15 = ($3 + [28])
	$20 = (($3 + [8]) + [28])
	$7 = [1]
	$8 = [0]
	$17 = $4
	if ( ((int_64)$4 == (int_64)CALL current_receiver()) ){ goto $label$62 }
	goto $label$61 
	
.LABEL $label$149
	$7 = ($7 + [1])
	$8 = ($8 + [112])
	if ( ((int_64)*($3 + [48]) == (int_64)CALL current_receiver()) ){ goto $label$60 }
	$18 = [20]
	goto $label$17 
	
.LABEL $label$148
	CALL eosio_assert([0], [19435])
	$18 = [21]
	goto $label$17 
	
.LABEL $label$147
	*(($6 = CALL _Znwj([128])) + [80]) = (int_64)0
	*($6 + [72]) = (int_64)0
	*($6 + [96]) = (int_64)0
	*($6 + [104]) = ($3 + [48])
	$6 = CALL memcpy($6, (*($9) + $8), [104])
	*((($3 + [248]) + [8])) = $10
	*($3 + [252]) = ($3 + [288])
	*($3 + [248]) = ($3 + [288])
	*($3 + [224]) = ($3 + [248])
	*((($3 + [8]) + [8])) = ($6 + [48])
	*($16) = ($6 + [56])
	*((($3 + [8]) + [16])) = ($6 + [64])
	*($15) = ($6 + [72])
	*((($3 + [8]) + [24])) = ($6 + [88])
	*($20) = ($6 + [96])
	*($3 + [12]) = ($6 + [16])
	*($3 + [8]) = $6
	CALL $202(($3 + [8]), ($3 + [224]))
	$4 = *($6)
	$14 = CALL db_store_i64(*((($3 + [48]) + [8])), (int_64)4520724947059834880, $17, $4, ($3 + [288]), [89])
	*($6 + [108]) = $14
	$5 = (($3 + [48]) + [16])
	if ( (uint_64)($4 <= *($5)) ){ goto $label$59 }
	$18 = [22]
	goto $label$17 
	
.LABEL $label$146
	*($5) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	$18 = [23]
	goto $label$17 
	
.LABEL $label$145
	*($3 + [8]) = $6
	$4 = *($6)
	*($3 + [288]) = $4
	*($3 + [248]) = $14
	$11 = (($3 + [48]) + [28])
	$5 = *($11)
	if ( ((uint_32)$5 >= (uint_32)*($12)) ){ goto $label$58 }
	$18 = [88]
	goto $label$17 
	
.LABEL $label$144
	*($5 + [8]) = $4
	*($5 + [16]) = $14
	*($3 + [8]) = [0]
	*($5) = $6
	*($11) = ($5 + [24])
	$6 = *($3 + [8])
	*($3 + [8]) = [0]
	if ( $6 ){ goto $label$55 }
	goto $label$56 
	
.LABEL $label$143
	CALL $151($19, ($3 + [8]), ($3 + [288]), ($3 + [248]))
	$6 = *($3 + [8])
	*($3 + [8]) = [0]
	if ( ($6 == 0) ){ goto $label$57 }
	$18 = [25]
	goto $label$17 
	
.LABEL $label$142
	CALL _ZdlPv($6)
	$18 = [26]
	goto $label$17 
	
.LABEL $label$141
	$17 = *($0)
	if ( ($7 <= ((int_32)(*($13) - *($9)) / (int_32)[112])) ){ goto $label$54 }
	$18 = [27]
	goto $label$17 
	
.LABEL $label$140
	$4 = $17
	$18 = [28]
	goto $label$17 
	
.LABEL $label$139
	*((($3 + [8]) + [32])) = [0]
	*($3 + [16]) = $4
	*($3 + [8]) = $4
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$16 = ($2 + [52])
	if ( ((int_32)*($16) == (int_32)*($2 + [48])) ){ goto $label$53 }
	$18 = [29]
	goto $label$17 
	
.LABEL $label$138
	$21 = (($3 + [8]) + [24])
	$15 = (($3 + [288]) + [51])
	$20 = ($3 + [260])
	$19 = ($3 + [268])
	$22 = (($3 + [248]) + [28])
	$7 = [1]
	$8 = [0]
	$17 = $4
	if ( ((int_64)$4 == (int_64)CALL current_receiver()) ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$137
	$7 = ($7 + [1])
	$8 = ($8 + [56])
	$17 = *($0)
	if ( ((int_64)*($3 + [8]) == (int_64)CALL current_receiver()) ){ goto $label$50 }
	$18 = [30]
	goto $label$17 
	
.LABEL $label$136
	CALL eosio_assert([0], [19435])
	$18 = [31]
	goto $label$17 
	
.LABEL $label$135
	*(($6 = CALL _Znwj([72])) + [48]) = (int_64)0
	*($6 + [56]) = ($3 + [8])
	$9 = ($2 + [48])
	$5 = (*($9) + $8)
	*($6) = *($5)
	*(($14 = ($6 + [8]))) = *(($5 + [8]))
	*(($11 = ($6 + [16]))) = *(($5 + [16]))
	*(($12 = ($6 + [24]))) = *(($5 + [24]))
	*(($13 = ($6 + [32]))) = *(($5 + [32]))
	*(($10 = ($6 + [40]))) = *(($5 + [40]))
	*($6 + [48]) = *(($5 + [48]))
	*((($3 + [224]) + [8])) = $15
	*($3 + [228]) = ($3 + [288])
	*($3 + [224]) = ($3 + [288])
	*($3 + [240]) = ($3 + [224])
	*((($3 + [248]) + [8])) = $11
	*($20) = $12
	*((($3 + [248]) + [16])) = $13
	*($19) = $10
	*((($3 + [248]) + [24])) = ($6 + [41])
	*($22) = ($6 + [42])
	*((($3 + [248]) + [32])) = ($6 + [48])
	*($3 + [252]) = $14
	*($3 + [248]) = $6
	CALL $203(($3 + [248]), ($3 + [240]))
	$4 = *($6)
	$14 = CALL db_store_i64(*((($3 + [8]) + [8])), (int_64)-6039700478021828608, $17, $4, ($3 + [288]), [51])
	*($6 + [60]) = $14
	$5 = (($3 + [8]) + [16])
	if ( (uint_64)($4 <= *($5)) ){ goto $label$49 }
	$18 = [32]
	goto $label$17 
	
.LABEL $label$134
	*($5) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	$18 = [33]
	goto $label$17 
	
.LABEL $label$133
	*($3 + [248]) = $6
	$4 = *($6)
	*($3 + [288]) = $4
	*($3 + [224]) = $14
	$11 = (($3 + [8]) + [28])
	$5 = *($11)
	if ( ((uint_32)$5 >= (uint_32)*((($3 + [8]) + [32]))) ){ goto $label$48 }
	$18 = [86]
	goto $label$17 
	
.LABEL $label$132
	*($5 + [8]) = $4
	*($5 + [16]) = $14
	*($3 + [248]) = [0]
	*($5) = $6
	*($11) = ($5 + [24])
	$6 = *($3 + [248])
	*($3 + [248]) = [0]
	if ( $6 ){ goto $label$45 }
	goto $label$46 
	
.LABEL $label$131
	CALL $81($21, ($3 + [248]), ($3 + [288]), ($3 + [224]))
	$6 = *($3 + [248])
	*($3 + [248]) = [0]
	if ( ($6 == 0) ){ goto $label$47 }
	$18 = [35]
	goto $label$17 
	
.LABEL $label$130
	CALL _ZdlPv($6)
	$18 = [36]
	goto $label$17 
	
.LABEL $label$129
	if ( ($7 <= ((int_32)(*($16) - *($9)) / (int_32)[56])) ){ goto $label$44 }
	$18 = [37]
	goto $label$17 
	
.LABEL $label$128
	$2 = *($3 + [32])
	if ( ($2 == 0) ){ goto $label$43 }
	$18 = [38]
	goto $label$17 
	
.LABEL $label$127
	$0 = ($3 + [36])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$42 }
	$18 = [39]
	goto $label$17 
	
.LABEL $label$126
	$18 = [40]
	goto $label$17 
	
.LABEL $label$125
	$6 = ($6 + [-24])
	$5 = *($6)
	*($6) = [0]
	if ( ($5 == 0) ){ goto $label$40 }
	$18 = [41]
	goto $label$17 
	
.LABEL $label$124
	CALL _ZdlPv($5)
	$18 = [42]
	goto $label$17 
	
.LABEL $label$123
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$41 }
	$18 = [43]
	goto $label$17 
	
.LABEL $label$122
	$6 = *(($3 + [32]))
	goto $label$39 
	
.LABEL $label$121
	$6 = $2
	$18 = [44]
	goto $label$17 
	
.LABEL $label$120
	*($0) = $2
	CALL _ZdlPv($6)
	$18 = [45]
	goto $label$17 
	
.LABEL $label$119
	$2 = *($3 + [72])
	if ( ($2 == 0) ){ goto $label$38 }
	$18 = [46]
	goto $label$17 
	
.LABEL $label$118
	$0 = ($3 + [76])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$37 }
	$18 = [47]
	goto $label$17 
	
.LABEL $label$117
	$18 = [48]
	goto $label$17 
	
.LABEL $label$116
	$6 = ($6 + [-24])
	$5 = *($6)
	*($6) = [0]
	if ( ($5 == 0) ){ goto $label$35 }
	$18 = [49]
	goto $label$17 
	
.LABEL $label$115
	CALL _ZdlPv($5)
	$18 = [50]
	goto $label$17 
	
.LABEL $label$114
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$36 }
	$18 = [51]
	goto $label$17 
	
.LABEL $label$113
	$6 = *(($3 + [72]))
	goto $label$34 
	
.LABEL $label$112
	$6 = $2
	$18 = [52]
	goto $label$17 
	
.LABEL $label$111
	*($0) = $2
	CALL _ZdlPv($6)
	$18 = [53]
	goto $label$17 
	
.LABEL $label$110
	$2 = *($3 + [112])
	if ( ($2 == 0) ){ goto $label$33 }
	$18 = [54]
	goto $label$17 
	
.LABEL $label$109
	$0 = ($3 + [116])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$32 }
	$18 = [55]
	goto $label$17 
	
.LABEL $label$108
	$18 = [56]
	goto $label$17 
	
.LABEL $label$107
	$6 = ($6 + [-24])
	$5 = *($6)
	*($6) = [0]
	if ( ($5 == 0) ){ goto $label$30 }
	$18 = [57]
	goto $label$17 
	
.LABEL $label$106
	CALL _ZdlPv($5)
	$18 = [58]
	goto $label$17 
	
.LABEL $label$105
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$31 }
	$18 = [59]
	goto $label$17 
	
.LABEL $label$104
	$6 = *(($3 + [112]))
	goto $label$29 
	
.LABEL $label$103
	$6 = $2
	$18 = [60]
	goto $label$17 
	
.LABEL $label$102
	*($0) = $2
	CALL _ZdlPv($6)
	$18 = [61]
	goto $label$17 
	
.LABEL $label$101
	$2 = *($3 + [152])
	if ( ($2 == 0) ){ goto $label$28 }
	$18 = [62]
	goto $label$17 
	
.LABEL $label$100
	$0 = ($3 + [156])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$27 }
	$18 = [63]
	goto $label$17 
	
.LABEL $label$99
	$18 = [64]
	goto $label$17 
	
.LABEL $label$98
	$6 = ($6 + [-24])
	$5 = *($6)
	*($6) = [0]
	if ( ($5 == 0) ){ goto $label$25 }
	$18 = [65]
	goto $label$17 
	
.LABEL $label$97
	CALL _ZdlPv($5)
	$18 = [66]
	goto $label$17 
	
.LABEL $label$96
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$26 }
	$18 = [67]
	goto $label$17 
	
.LABEL $label$95
	$6 = *(($3 + [152]))
	goto $label$24 
	
.LABEL $label$94
	$6 = $2
	$18 = [68]
	goto $label$17 
	
.LABEL $label$93
	*($0) = $2
	CALL _ZdlPv($6)
	$18 = [69]
	goto $label$17 
	
.LABEL $label$92
	$0 = *($3 + [208])
	if ( ($0 == 0) ){ goto $label$23 }
	$18 = [70]
	goto $label$17 
	
.LABEL $label$91
	$7 = ($3 + [212])
	$6 = *($7)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$22 }
	$18 = [71]
	goto $label$17 
	
.LABEL $label$90
	$18 = [72]
	goto $label$17 
	
.LABEL $label$89
	$6 = ($6 + [-24])
	$5 = *($6)
	*($6) = [0]
	if ( ($5 == 0) ){ goto $label$20 }
	$18 = [73]
	goto $label$17 
	
.LABEL $label$88
	$2 = *($5 + [4])
	if ( ($2 == 0) ){ goto $label$19 }
	$18 = [74]
	goto $label$17 
	
.LABEL $label$87
	*(($5 + [8])) = $2
	CALL _ZdlPv($2)
	$18 = [75]
	goto $label$17 
	
.LABEL $label$86
	CALL _ZdlPv($5)
	$18 = [76]
	goto $label$17 
	
.LABEL $label$85
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$21 }
	$18 = [77]
	goto $label$17 
	
.LABEL $label$84
	$6 = *(($3 + [208]))
	goto $label$18 
	
.LABEL $label$83
	$6 = $0
	$18 = [78]
	goto $label$17 
	
.LABEL $label$82
	*($7) = $0
	CALL _ZdlPv($6)
	$18 = [79]
	goto $label$17 
	
.LABEL $label$81
	$global$0 = ($3 + [384])
	return (unreachable)
	
.LABEL $label$80
	$18 = [1]
	goto $label$17 
	
.LABEL $label$79
	$18 = [3]
	goto $label$17 
	
.LABEL $label$78
	$18 = [4]
	goto $label$17 
	
.LABEL $label$77
	$18 = [6]
	goto $label$17 
	
.LABEL $label$76
	$18 = [6]
	goto $label$17 
	
.LABEL $label$75
	$18 = [5]
	goto $label$17 
	
.LABEL $label$74
	$18 = [91]
	goto $label$17 
	
.LABEL $label$73
	$18 = [18]
	goto $label$17 
	
.LABEL $label$72
	$18 = [11]
	goto $label$17 
	
.LABEL $label$71
	$18 = [10]
	goto $label$17 
	
.LABEL $label$70
	$18 = [11]
	goto $label$17 
	
.LABEL $label$69
	$18 = [13]
	goto $label$17 
	
.LABEL $label$68
	$18 = [14]
	goto $label$17 
	
.LABEL $label$67
	$18 = [16]
	goto $label$17 
	
.LABEL $label$66
	$18 = [16]
	goto $label$17 
	
.LABEL $label$65
	$18 = [15]
	goto $label$17 
	
.LABEL $label$64
	$18 = [89]
	goto $label$17 
	
.LABEL $label$63
	$18 = [28]
	goto $label$17 
	
.LABEL $label$62
	$18 = [21]
	goto $label$17 
	
.LABEL $label$61
	$18 = [20]
	goto $label$17 
	
.LABEL $label$60
	$18 = [21]
	goto $label$17 
	
.LABEL $label$59
	$18 = [23]
	goto $label$17 
	
.LABEL $label$58
	$18 = [24]
	goto $label$17 
	
.LABEL $label$57
	$18 = [26]
	goto $label$17 
	
.LABEL $label$56
	$18 = [26]
	goto $label$17 
	
.LABEL $label$55
	$18 = [25]
	goto $label$17 
	
.LABEL $label$54
	$18 = [87]
	goto $label$17 
	
.LABEL $label$53
	$18 = [45]
	goto $label$17 
	
.LABEL $label$52
	$18 = [31]
	goto $label$17 
	
.LABEL $label$51
	$18 = [30]
	goto $label$17 
	
.LABEL $label$50
	$18 = [31]
	goto $label$17 
	
.LABEL $label$49
	$18 = [33]
	goto $label$17 
	
.LABEL $label$48
	$18 = [34]
	goto $label$17 
	
.LABEL $label$47
	$18 = [36]
	goto $label$17 
	
.LABEL $label$46
	$18 = [36]
	goto $label$17 
	
.LABEL $label$45
	$18 = [35]
	goto $label$17 
	
.LABEL $label$44
	$18 = [85]
	goto $label$17 
	
.LABEL $label$43
	$18 = [45]
	goto $label$17 
	
.LABEL $label$42
	$18 = [84]
	goto $label$17 
	
.LABEL $label$41
	$18 = [40]
	goto $label$17 
	
.LABEL $label$40
	$18 = [42]
	goto $label$17 
	
.LABEL $label$39
	$18 = [44]
	goto $label$17 
	
.LABEL $label$38
	$18 = [53]
	goto $label$17 
	
.LABEL $label$37
	$18 = [83]
	goto $label$17 
	
.LABEL $label$36
	$18 = [48]
	goto $label$17 
	
.LABEL $label$35
	$18 = [50]
	goto $label$17 
	
.LABEL $label$34
	$18 = [52]
	goto $label$17 
	
.LABEL $label$33
	$18 = [61]
	goto $label$17 
	
.LABEL $label$32
	$18 = [82]
	goto $label$17 
	
.LABEL $label$31
	$18 = [56]
	goto $label$17 
	
.LABEL $label$30
	$18 = [58]
	goto $label$17 
	
.LABEL $label$29
	$18 = [60]
	goto $label$17 
	
.LABEL $label$28
	$18 = [69]
	goto $label$17 
	
.LABEL $label$27
	$18 = [81]
	goto $label$17 
	
.LABEL $label$26
	$18 = [64]
	goto $label$17 
	
.LABEL $label$25
	$18 = [66]
	goto $label$17 
	
.LABEL $label$24
	$18 = [68]
	goto $label$17 
	
.LABEL $label$23
	$18 = [79]
	goto $label$17 
	
.LABEL $label$22
	$18 = [80]
	goto $label$17 
	
.LABEL $label$21
	$18 = [72]
	goto $label$17 
	
.LABEL $label$20
	$18 = [76]
	goto $label$17 
	
.LABEL $label$19
	$18 = [75]
	goto $label$17 
	
.LABEL $label$18
	$18 = [78]
	goto $label$17 
	
.LABEL $label$2
	CALL $359(($3 + [168]))
	$18
}

void .FUNC $83 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [240])
	$global$0 = $4
	*($4 + [79]) = $2
	CALL require_auth(*($0))
	*(($4 + [64])) = [0]
	*(($4 + [70])) = [0]
	*($4 + [48]) = (int_64)-1
	*($4 + [56]) = (int_64)0
	*($4 + [68]) = [0]
	$5 = *($0)
	*($4 + [32]) = $5
	*($4 + [40]) = $5
	$6 = CALL db_find_i64($5, $5, (int_64)-3020371566920728576, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$18 }
	$2 = CALL $10(($4 + [32]), $6)
	if ( ((int_32)*($2 + [88]) == (int_32)($4 + [32])) ){ goto $label$19 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$19
	if ( (*($2 + [84]) == 0) ){ goto $label$17 }
	*(($4 + [8])) = [0]
	*($4) = (int_64)0
	$2 = CALL $393([9301])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$16 }
	*($4) = ($2 << [1])
	$3 = ($4 | [1])
	if ( $2 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$18
	*($4 + [24]) = (int_64)0
	*($4 + [16]) = (int_64)0
	if ( ((int_32)$2 != (int_32)[26]) ){ goto $label$5 }
	*(($4 + [112])) = [0]
	*($4 + [96]) = (int_64)-1
	*($4 + [104]) = (int_64)0
	$5 = *($0)
	*($4 + [80]) = $5
	*($4 + [88]) = $5
	$2 = CALL db_find_i64($5, $5, (int_64)3617214838923984896, (int_64)1)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$13 }
	$2 = CALL $84(($4 + [80]), $2)
	if ( ((int_32)*($2 + [24]) == (int_32)($4 + [80])) ){ goto $label$20 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$20
	*($4 + [152]) = ($4 + [80])
	*($4 + [156]) = $2
	$5 = CALL current_time()
	if ( ((uint_32)*($2 + [16]) > (uint_32)(CASTING uint_32)(uint_64 ((uint_64)$5 / (uint_64)(int_64)1000000))) ){ goto $label$8 }
	$6 = *($2 + [10])
	if ( (*($2 + [8]) == 0) ){ goto $label$12 }
	if ( (($6 & [65535]) == 0) ){ goto $label$11 }
	$2 = [0]
	*($4 + [184]) = [0]
	*($4 + [176]) = (int_64)0
	
.LOOP $label$21:
	$6 = *(($3 + $2))
	CALL $368(($4 + [176]), *((uint_32($6 >> [4]) + [8223])))
	CALL $368(($4 + [176]), *((($6 & [15]) + [8223])))
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[32]) ){ goto $label$21 }
	$5 = CALL $4(($4 + [176]))
	if ( ((*($4 + [176]) & [1]) == 0) ){ goto $label$22 }
	CALL _ZdlPv(*(($4 + [184])))
	
.LABEL $label$22
	$7 = *($2 + [8])
	$2 = *($4 + [156])
	if ( ((uint_64)((uint_64)$5 % (uint_64)((int_64)*($2 + [10]) + (int_64)$7)) >= (uint_64)$7) ){ goto $label$10 }
	*($4 + [24]) = (int_64)1
	goto $label$9 
	
.LABEL $label$17
	$5 = *($0)
	*($4 + [80]) = ($4 + [79])
	CALL $85(($4 + [32]), $2, $5, ($4 + [80]))
	$0 = *($4 + [56])
	if ( $0 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$16
	$0 = (($2 + [16]) & [-16])
	$3 = CALL _Znwj($0)
	*($4) = ($0 | [1])
	*($4 + [8]) = $3
	*($4 + [4]) = $2
	
.LABEL $label$15
	CALL memcpy($3, [9301], $2)
	
.LABEL $label$14
	*(($3 + $2)) = [0]
	CALL eosio_assert([0], CALL $5($2, [164], $4))
	if ( ((*($4) & [1]) == 0) ){ goto $label$4 }
	CALL _ZdlPv(*($4 + [8]))
	$0 = *($4 + [56])
	if ( $0 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$13
	*($4 + [156]) = [0]
	*($4 + [152]) = ($4 + [80])
	$6 = *($4 + [104])
	if ( $6 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$12
	if ( (($6 & [65535]) == 0) ){ goto $label$9 }
	*($4 + [16]) = (int_64)1
	goto $label$9 
	
.LABEL $label$11
	*($4 + [24]) = (int_64)1
	goto $label$9 
	
.LABEL $label$10
	*($4 + [16]) = (int_64)1
	
.LABEL $label$9
	if ( (int_64)(((int_64)*($4 + [16]) | (int_64)*($4 + [24])) == 0) ){ goto $label$8 }
	$5 = *($0)
	*($4 + [180]) = ($4 + [24])
	*($4 + [176]) = ($4 + [152])
	*($4 + [184]) = ($4 + [16])
	if ( $2 ){ goto $label$23 }
	CALL eosio_assert([0], [19537])
	
.LABEL $label$23
	CALL $86(($4 + [80]), $2, $5, ($4 + [176]))
	
.LABEL $label$8
	$6 = *($4 + [104])
	if ( ($6 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$8 = ($4 + [108])
	$2 = *($8)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$25 }
	
.LOOP $label$26:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$27 }
	CALL _ZdlPv($3)
	
.LABEL $label$27
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$26 }
	$2 = *(($4 + [104]))
	goto $label$24 
	
.LABEL $label$25
	$2 = $6
	
.LABEL $label$24
	*($8) = $6
	CALL _ZdlPv($2)
	
.LABEL $label$6
	$5 = *($4 + [32])
	
.LABEL $label$5
	$7 = *($0)
	if ( ((int_64)$5 == (int_64)CALL current_receiver()) ){ goto $label$28 }
	CALL eosio_assert([0], [19435])
	
.LABEL $label$28
	*(($2 = CALL _Znwj([112])) + [88]) = ($4 + [32])
	*($2) = $1
	*($2 + [24]) = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = (int_64)1
	*($2 + [56]) = (int_64)1
	*($2 + [64]) = [0]
	*($2 + [72]) = (int_64)0
	*($2 + [32]) = [0]
	*($2 + [80]) = [257]
	*($2 + [16]) = *($4 + [16])
	*($2 + [84]) = *($4 + [79])
	*($2 + [8]) = ((int_64)*($4 + [24]) + (int_64)3)
	*($4 + [160]) = (($4 + [80]) + [71])
	*($4 + [156]) = ($4 + [80])
	*($4 + [152]) = ($4 + [80])
	*($4 + [168]) = ($4 + [152])
	*($4 + [180]) = ($2 + [8])
	*($4 + [176]) = $2
	*($4 + [184]) = ($2 + [16])
	*($4 + [188]) = ($2 + [24])
	*($4 + [192]) = ($2 + [32])
	$0 = ($2 + [40])
	*($4 + [196]) = $0
	*($4 + [200]) = ($2 + [48])
	*($4 + [204]) = ($2 + [56])
	$6 = ($2 + [64])
	*($4 + [208]) = $6
	$8 = ($2 + [72])
	*($4 + [212]) = $8
	*($4 + [216]) = ($2 + [80])
	*($4 + [220]) = ($2 + [81])
	*($4 + [224]) = ($2 + [82])
	*($4 + [228]) = ($2 + [83])
	*($4 + [232]) = ($2 + [84])
	CALL $87(($4 + [176]), ($4 + [168]))
	$5 = *($2)
	$3 = (($4 + [32]) + [8])
	*($2 + [92]) = CALL db_store_i64(*($3), (int_64)-3020371566920728576, $7, $5, ($4 + [80]), [71])
	$9 = (($4 + [32]) + [16])
	if ( (uint_64)($5 <= *($9)) ){ goto $label$29 }
	*($9) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$29
	$5 = *($2)
	$1 = *($3)
	*($4 + [176]) = *($0)
	*($2 + [96]) = CALL db_idx64_store($1, (int_64)-3020371566920728576, $7, $5, ($4 + [176]))
	$5 = *($2)
	$1 = *($3)
	*($4 + [176]) = *($6)
	*($2 + [100]) = CALL db_idx64_store($1, (int_64)-3020371566920728575, $7, $5, ($4 + [176]))
	$5 = *($2)
	$1 = *($3)
	*($4 + [176]) = *($8)
	*($2 + [104]) = CALL db_idx64_store($1, (int_64)-3020371566920728574, $7, $5, ($4 + [176]))
	*($4 + [176]) = $2
	$5 = *($2)
	*($4 + [80]) = $5
	$0 = *(($2 + [92]))
	*($4 + [152]) = $0
	$6 = ($4 + [60])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*((($4 + [32]) + [32]))) ){ goto $label$31 }
	*($3 + [8]) = $5
	*($3 + [16]) = $0
	*($4 + [176]) = [0]
	*($3) = $2
	*($6) = ($3 + [24])
	$2 = *($4 + [176])
	*($4 + [176]) = [0]
	if ( $2 ){ goto $label$30 }
	goto $label$4 
	
.LABEL $label$31
	CALL $88(($4 + [56]), ($4 + [176]), ($4 + [80]), ($4 + [152]))
	$2 = *($4 + [176])
	*($4 + [176]) = [0]
	if ( ($2 == 0) ){ goto $label$4 }
	
.LABEL $label$30
	CALL _ZdlPv($2)
	
.LABEL $label$4
	$0 = *($4 + [56])
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = ($4 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$33 }
	
.LOOP $label$34:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$35 }
	CALL _ZdlPv($3)
	
.LABEL $label$35
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$34 }
	$2 = *(($4 + [56]))
	goto $label$32 
	
.LABEL $label$33
	$2 = $0
	
.LABEL $label$32
	*($6) = $0
	CALL _ZdlPv($2)
	
.LABEL $label$2
	$global$0 = ($4 + [240])
	return (unreachable)
	
.LABEL $label$1
	CALL $359($4)
}

void .FUNC $82 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)*(*($3)))
	*($1 + [16]) = ((int_64)*($1 + [16]) + (int_64)*(*($3 + [4])))
	*($1 + [24]) = ((int_64)*($1 + [24]) + (int_64)*(*($3 + [8])))
	$6 = ($1 + [40])
	*($5 + [16]) = *($6)
	$7 = ($1 + [64])
	*($5 + [24]) = *($7)
	$8 = ($1 + [72])
	*($5 + [32]) = *($8)
	$9 = *($1)
	*($1 + [56]) = *(*($3 + [12]))
	*($1 + [32]) = *(*($3 + [16]))
	*($6) = *(*($3 + [20]))
	*($1 + [48]) = *(*($3 + [24]))
	$4 = $4
	$3 = ($4 + [-80])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-9])
	*($5 + [40]) = $5
	*($5 + [52]) = ($1 + [8])
	*($5 + [48]) = $1
	*($5 + [56]) = ($1 + [16])
	*($5 + [60]) = ($1 + [24])
	*($5 + [64]) = ($1 + [32])
	*($5 + [68]) = $6
	*($5 + [72]) = ($1 + [48])
	*($5 + [76]) = ($1 + [56])
	*($5 + [80]) = $7
	*($5 + [84]) = $8
	*($5 + [88]) = ($1 + [80])
	*($5 + [92]) = ($1 + [81])
	*($5 + [96]) = ($1 + [82])
	*($5 + [100]) = ($1 + [83])
	*($5 + [104]) = ($1 + [84])
	CALL $87(($5 + [48]), ($5 + [40]))
	CALL db_update_i64(*($1 + [92]), $2, $3, [71])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($5 + [16]) + [8])
	*($5 + [48]) = *($6)
	if ( (CALL $392(($5 + [16]), ($5 + [48]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [96])
	$6 = *($4)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$5 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728576, ($5 + [40]), $9)
	*($4) = $6
	
.LABEL $label$5
	CALL db_idx64_update($6, $2, ($5 + [48]))
	
.LABEL $label$4
	$6 = (($5 + [16]) + [16])
	*($5 + [48]) = *($7)
	if ( (CALL $392($3, ($5 + [48]), [8]) == 0) ){ goto $label$6 }
	$4 = ($1 + [100])
	$3 = *($4)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$7 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728575, ($5 + [40]), $9)
	*($4) = $3
	
.LABEL $label$7
	CALL db_idx64_update($3, $2, ($5 + [48]))
	
.LABEL $label$6
	*($5 + [48]) = *($8)
	if ( (CALL $392($6, ($5 + [48]), [8]) == 0) ){ goto $label$8 }
	$3 = ($1 + [104])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$9 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728574, ($5 + [40]), $9)
	*($3) = $1
	
.LABEL $label$9
	CALL db_idx64_update($1, $2, ($5 + [48]))
	
.LABEL $label$8
	$global$0 = ($5 + [112])
}

void .FUNC $149 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [104]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19287])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19332])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [19382])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL _ZdlPv($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*(($1 + [108])))
}

void .FUNC $81 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $377($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $145 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [18965])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [18965])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [18965])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $288(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $64 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	$3 = ($global$0 - [96])
	$global$0 = $3
	CALL require_auth($1)
	$4 = CALL $7($0)
	*(($3 + [88])) = [0]
	*($3 + [80]) = (int_64)0
	$5 = CALL $393([8366])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$2 }
	$6 = ((int_32)$4 ^ (int_32)[1])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$5 }
	*($3 + [80]) = ($5 << [1])
	$4 = (($3 + [80]) | [1])
	if ( $5 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$7 = (($5 + [16]) & [-16])
	$4 = CALL _Znwj($7)
	*($3 + [80]) = ($7 | [1])
	*($3 + [88]) = $4
	*($3 + [84]) = $5
	
.LABEL $label$4
	CALL memcpy($4, [8366], $5)
	
.LABEL $label$3
	*(($4 + $5)) = [0]
	CALL eosio_assert($6, CALL $5($3, [159], ($3 + [80])))
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [88]))
	
.LABEL $label$6
	$4 = CALL $8($0, $1)
	*(($3 + [72])) = [0]
	*($3 + [64]) = (int_64)0
	$5 = CALL $393([8384])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = ((int_32)$4 ^ (int_32)[1])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$9 }
	*($3 + [64]) = ($5 << [1])
	$4 = (($3 + [64]) | [1])
	if ( $5 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$7 = (($5 + [16]) & [-16])
	$4 = CALL _Znwj($7)
	*($3 + [64]) = ($7 | [1])
	*($3 + [72]) = $4
	*($3 + [68]) = $5
	
.LABEL $label$8
	CALL memcpy($4, [8384], $5)
	
.LABEL $label$7
	*(($4 + $5)) = [0]
	CALL eosio_assert($6, CALL $5($3, [157], ($3 + [64])))
	if ( ((*($3 + [64]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*($3 + [72]))
	
.LABEL $label$10
	$8 = *(($2 + [24]))
	*((($3 + [32]) + [24])) = $8
	$9 = *(($2 + [16]))
	*((($3 + [32]) + [16])) = $9
	$10 = *(($2 + [8]))
	$11 = *($2)
	*(($3 + [16])) = $9
	*(($3 + [24])) = $8
	*($3 + [32]) = $11
	*($3 + [40]) = $10
	*($3) = $11
	*($3 + [8]) = $10
	CALL $65($0, $1, $3)
	$global$0 = ($3 + [96])
	return (unreachable)
	
.LABEL $label$2
	CALL $359(($3 + [80]))
	
.LABEL $label$1
	CALL $359(($3 + [64]))
	(unreachable)
}

int_32 .FUNC $147 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [19191])
	
.LABEL $label$5
	$4 = CALL $397($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([128])) + [80]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [96]) = (int_64)0
	*($5 + [104]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [16])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [48])
	*($3 + [44]) = ($5 + [56])
	*($3 + [48]) = ($5 + [64])
	*($3 + [52]) = ($5 + [72])
	*($3 + [56]) = ($5 + [88])
	*($3 + [60]) = ($5 + [96])
	CALL $312(($3 + [32]), ($3 + [24]))
	*($5 + [108]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $151(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $400($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

int_32 .FUNC $146 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $283(CALL $282($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [18965])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [18965])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $141 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [18965])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [18965])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [18965])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $288(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $140 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $377($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $143 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [96]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	*($5 + [16]) = *($1 + [16])
	*($1 + [80]) = (*(*(*($3) + [4]) + [80]) - *(*(($3 + [4]))))
	$6 = *($1)
	$4 = $4
	$3 = ($4 + [-80])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-4])
	*($5 + [24]) = $5
	$4 = ($1 + [16])
	*($5 + [36]) = $4
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [48])
	*($5 + [44]) = ($1 + [56])
	*($5 + [48]) = ($1 + [57])
	*($5 + [52]) = ($1 + [64])
	*($5 + [56]) = ($1 + [80])
	*($5 + [60]) = ($1 + [88])
	CALL $299(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [100]), $2, $3, [76])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($5 + [32]) = *($4)
	if ( (CALL $392(($5 + [16]), ($5 + [32]), [8]) == 0) ){ goto $label$4 }
	$3 = ($1 + [104])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4421665485641187328, ($5 + [24]), $6)
	*($3) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, $2, ($5 + [32]))
	
.LABEL $label$4
	$global$0 = ($5 + [64])
}

void .FUNC $142 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [80])
	$global$0 = $2
	*(($2 + [72])) = [0]
	*($2 + [56]) = (int_64)-1
	$3 = *($0)
	*($2 + [40]) = $3
	*($2 + [48]) = $1
	*($2 + [64]) = (int_64)0
	$4 = [0]
	$5 = CALL db_lowerbound_i64($3, $1, (int_64)-3020381371621703680, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $60(($2 + [40]), $5)
	
.LABEL $label$1
	*(($2 + [24])) = [0]
	*($2 + [16]) = (int_64)0
	*($2 + [36]) = $4
	*($2 + [32]) = ($2 + [40])
	$5 = CALL $393([9180])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$2 }
	$6 = ((int_32)$4 != (int_32)[0])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$5 }
	*($2 + [16]) = ($5 << [1])
	$4 = (($2 + [16]) | [1])
	if ( $5 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$7 = (($5 + [16]) & [-16])
	$4 = CALL _Znwj($7)
	*($2 + [16]) = ($7 | [1])
	*($2 + [24]) = $4
	*($2 + [20]) = $5
	
.LABEL $label$4
	CALL memcpy($4, [9180], $5)
	
.LABEL $label$3
	*(($4 + $5)) = [0]
	CALL eosio_assert($6, CALL $5($5, [153], ($2 + [16])))
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($2 + [24]))
	
.LABEL $label$6
	$1 = *($0)
	$5 = *($2 + [36])
	*($2 + [8]) = $0
	*($2 + [12]) = ($2 + [32])
	if ( $5 ){ goto $label$7 }
	CALL eosio_assert([0], [19537])
	
.LABEL $label$7
	CALL $163(($2 + [40]), $5, $1, ($2 + [8]))
	$4 = *($2 + [64])
	if ( ($4 == 0) ){ goto $label$8 }
	$6 = ($2 + [68])
	$5 = *($6)
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$12 }
	CALL _ZdlPv($0)
	
.LABEL $label$12
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$11 }
	$5 = *(($2 + [64]))
	goto $label$9 
	
.LABEL $label$10
	$5 = $4
	
.LABEL $label$9
	*($6) = $4
	CALL _ZdlPv($5)
	
.LABEL $label$8
	$global$0 = ($2 + [80])
	return (unreachable)
	
.LABEL $label$2
	CALL $359(($2 + [16]))
}

void .FUNC $278 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [160])
	$global$0 = $2
	*(($3 = (($2 + [48]) + [24]))) = *(($1 + [24]))
	*(($4 = (($2 + [48]) + [16]))) = *(($1 + [16]))
	*($2 + [48]) = *($1)
	*($2 + [56]) = *(($1 + [8]))
	$5 = CALL $360(($2 + [32]), ($1 + [32]))
	$6 = *($1 + [48])
	*((($2 + [80]) + [24])) = *($3)
	*((($2 + [80]) + [16])) = *($4)
	*($2 + [88]) = *($2 + [56])
	*($2 + [80]) = *($2 + [48])
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*($0) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($2 + [128]) + [24]))) = *((($2 + [80]) + [24]))
	*(($7 = (($2 + [128]) + [16]))) = *((($2 + [80]) + [16]))
	*($2 + [136]) = *($2 + [88])
	*($2 + [128]) = *($2 + [80])
	$3 = CALL $360(($2 + [112]), $5)
	*(($2 + [24])) = *($4)
	*(($2 + [16])) = *($7)
	*($2 + [8]) = *($2 + [136])
	*($2) = *($2 + [128])
	CALL void $0((int_32 $2), (int_32 $3), (int_32 $6), (int_64 $1))
	if ( (*($2 + [112]) & [1]) ){ goto $label$4 }
	if ( (*($5) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($3 + [8]))
	if ( ((*($5) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($5 + [8]))
	$global$0 = ($2 + [160])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [160])
}

int_32 .FUNC $148 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [108]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [19834])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)4520724947059834880)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [19780])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [19780])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $147(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $98 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = $global$0
	$5 = $4
	if ( ((int_32)*($1 + [4]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	*($1 + [1]) = *(*($3))
	$6 = *($1)
	$4 = $4
	$3 = ($4 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [1])
	CALL memcpy(($4 + [-15]), ($1 + [1]), [1])
	CALL db_update_i64(*($1 + [8]), $2, $3, [2])
	if ( ((uint_64)*($0 + [16]) > (uint_64)$6) ){ goto $label$3 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$3
	$global$0 = $5
}

void .FUNC $99 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $377($0)
	
.LABEL $label$1
	$8 = *($2)
	$2 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($9 = ((int_32)$5 * (int_32)[24]))))) = $2
	*($1 + [8]) = $8
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $9) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $239 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [32])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	CALL eosio_assert([0], [19214])
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	CALL memcpy($4, $2, [1])
	$8 = *($4)
	*(($4 + [20])) = ($2 + [1])
	*(($4 + [24])) = ($2 + $7)
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $2
	$3 = ($4 + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 ((int_32)($8 & [255]) != (int_32)[0])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $400($2)
	
.LABEL $label$6
	$global$0 = ($4 + [32])
	return [1]
}

int_32 .FUNC $238 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$3 = ($global$0 - [560])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = ($4 + [200]))) = (int_64)0
	*(($8 = ($4 + [192]))) = (int_64)0
	*(($9 = (($4 + [160]) + [24]))) = (int_64)0
	*(($10 = ($4 + [232]))) = (int_64)0
	*(($11 = ($4 + [224]))) = (int_64)0
	*(($12 = ($4 + [216]))) = (int_64)0
	*(($13 = ($4 + [264]))) = (int_64)0
	*(($14 = ($4 + [256]))) = (int_64)0
	*(($15 = ($4 + [248]))) = (int_64)0
	*($4 + [160]) = (int_64)0
	*($4 + [168]) = [0]
	*($4 + [176]) = (int_64)0
	*($4 + [208]) = (int_64)0
	*($4 + [240]) = (int_64)0
	*($4 + [148]) = $2
	*($4 + [144]) = $2
	*($4 + [152]) = ($2 + $7)
	*($4 + [496]) = ($4 + [144])
	*($4 + [528]) = ($4 + [160])
	CALL $258(($4 + [528]), ($4 + [496]))
	*(($16 = (($4 + [96]) + [8]))) = *($4 + [152])
	*($4 + [96]) = *($4 + [144])
	*(($17 = (($4 + [496]) + [8]))) = *($16)
	*($4 + [496]) = *($4 + [96])
	$16 = *($17)
	*((($4 + [528]) + [8])) = $16
	*((($4 + [112]) + [24])) = $16
	*($4 + [112]) = $0
	*($4 + [120]) = $1
	$0 = *($4 + [496])
	*($4 + [128]) = $0
	*($4 + [528]) = $0
	*(($16 = (($4 + [336]) + [16]))) = *($8)
	*(($8 = (($4 + [336]) + [24]))) = *($3)
	*(($3 = (($4 + [304]) + [16]))) = *($11)
	*(($11 = (($4 + [304]) + [24]))) = *($10)
	*($4 + [336]) = *($4 + [176])
	*($4 + [344]) = *($9)
	*($4 + [304]) = *($4 + [208])
	*($4 + [312]) = *($12)
	$9 = *($4 + [169])
	$10 = *($4 + [168])
	$0 = *($4 + [160])
	*(($12 = (($4 + [272]) + [24]))) = *($13)
	*(($13 = (($4 + [272]) + [16]))) = *($14)
	*($4 + [280]) = *($15)
	*($4 + [272]) = *($4 + [240])
	*((($4 + [432]) + [24])) = *($12)
	*((($4 + [432]) + [16])) = *($13)
	*((($4 + [400]) + [16])) = *($3)
	*((($4 + [400]) + [24])) = *($11)
	*((($4 + [368]) + [16])) = *($16)
	*((($4 + [368]) + [24])) = *($8)
	*($4 + [440]) = *($4 + [280])
	*($4 + [432]) = *($4 + [272])
	*($4 + [400]) = *($4 + [304])
	*($4 + [408]) = *($4 + [312])
	*($4 + [368]) = *($4 + [336])
	*($4 + [376]) = *($4 + [344])
	$3 = (($4 + [112]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	*(($5 = (($4 + [528]) + [24]))) = *((($4 + [368]) + [24]))
	*(($8 = (($4 + [528]) + [16]))) = *((($4 + [368]) + [16]))
	*(($11 = (($4 + [496]) + [16]))) = *((($4 + [400]) + [16]))
	*(($12 = (($4 + [496]) + [24]))) = *((($4 + [400]) + [24]))
	*(($13 = (($4 + [464]) + [16]))) = *((($4 + [432]) + [16]))
	*(($14 = (($4 + [464]) + [24]))) = *((($4 + [432]) + [24]))
	*($4 + [536]) = *($4 + [376])
	*($4 + [528]) = *($4 + [368])
	*($4 + [496]) = *($4 + [400])
	*($4 + [504]) = *($4 + [408])
	*($4 + [464]) = *($4 + [432])
	*($4 + [472]) = *($4 + [440])
	*((($4 + [64]) + [24])) = *($5)
	*((($4 + [64]) + [16])) = *($8)
	*((($4 + [32]) + [16])) = *($11)
	*((($4 + [32]) + [24])) = *($12)
	*(($4 + [16])) = *($13)
	*(($4 + [24])) = *($14)
	*($4 + [72]) = *($4 + [536])
	*($4 + [64]) = *($4 + [528])
	*($4 + [32]) = *($4 + [496])
	*($4 + [40]) = *($4 + [504])
	*($4) = *($4 + [464])
	*($4 + [8]) = *($4 + [472])
	CALL void $3((int_32 $0), (int_64 ($10 & [255])), (int_32 ($9 & [255])), (int_32 ($4 + [64])), (int_32 ($4 + [32])), (int_32 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $400($2)
	
.LABEL $label$5
	$global$0 = ($4 + [560])
	return [1]
}

int_32 .FUNC $94 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [112])
	$global$0 = $4
	*($4 + [87]) = $3
	*(($4 + [72])) = [0]
	*(($4 + [32])) = [0]
	*($4 + [48]) = $1
	*($4 + [56]) = (int_64)-1
	*($4 + [64]) = (int_64)0
	*($4 + [24]) = (int_64)0
	*($4 + [40]) = *($0)
	$5 = CALL $393([9370])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$2 }
	$6 = ((int_32)$3 != (int_32)[0])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$5 }
	*($4 + [24]) = ($5 << [1])
	$3 = (($4 + [24]) | [1])
	if ( $5 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$7 = (($5 + [16]) & [-16])
	$3 = CALL _Znwj($7)
	*($4 + [24]) = ($7 | [1])
	*($4 + [32]) = $3
	*($4 + [28]) = $5
	
.LABEL $label$4
	CALL memcpy($3, [9370], $5)
	
.LABEL $label$3
	*(($3 + $5)) = [0]
	CALL eosio_assert($6, CALL $5($5, [130], ($4 + [24])))
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($4 + [32]))
	
.LABEL $label$6
	*(($4 + [16])) = [0]
	*($4 + [8]) = (int_64)0
	$5 = CALL $393([9382])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = ((int_32)$2 > (int_32)[0])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$9 }
	*($4 + [8]) = ($5 << [1])
	$3 = (($4 + [8]) | [1])
	if ( $5 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$7 = (($5 + [16]) & [-16])
	$3 = CALL _Znwj($7)
	*($4 + [8]) = ($7 | [1])
	*($4 + [16]) = $3
	*($4 + [12]) = $5
	
.LABEL $label$8
	CALL memcpy($3, [9382], $5)
	
.LABEL $label$7
	*(($3 + $5)) = [0]
	CALL eosio_assert($6, CALL $5($5, [131], ($4 + [8])))
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*($4 + [16]))
	
.LABEL $label$10
	$1 = (CASTING int_64)(int_32 $2)
	$3 = *(($4 + [68]))
	$7 = *(($4 + [64]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$15 }
	
.LOOP $label$17:
	$5 = ($3 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$16 }
	$3 = $5
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$15 }
	if ( ((int_32)*($6 + [4]) == (int_32)($4 + [40])) ){ goto $label$14 }
	CALL eosio_assert([0], [19486])
	goto $label$14 
	
.LABEL $label$15
	$5 = CALL db_find_i64(*($4 + [40]), *(($4 + [48])), (int_64)-3020374757434588672, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$13 }
	$6 = CALL $97(($4 + [40]), $5)
	if ( ((int_32)*($6 + [4]) == (int_32)($4 + [40])) ){ goto $label$14 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$14
	$7 = [0]
	if ( ((uint_32)*($4 + [87]) <= (uint_32)*($6 + [1])) ){ goto $label$11 }
	$1 = *($0)
	*($4 + [96]) = ($4 + [87])
	CALL $98(($4 + [40]), $6, $1, ($4 + [96]))
	goto $label$12 
	
.LABEL $label$13
	$8 = *($0)
	if ( ((int_64)*($4 + [40]) == (int_64)CALL current_receiver()) ){ goto $label$18 }
	CALL eosio_assert([0], [19435])
	
.LABEL $label$18
	*(($5 = CALL _Znwj([16])) + [4]) = ($4 + [40])
	*($5) = $2
	*($5 + [1]) = *($4 + [87])
	CALL memcpy(($4 + [96]), $5, [1])
	CALL memcpy((($4 + [96]) | [1]), ($5 + [1]), [1])
	$1 = *($5)
	$6 = CALL db_store_i64(*(($4 + [48])), (int_64)-3020374757434588672, $8, $1, ($4 + [96]), [2])
	*($5 + [8]) = $6
	$3 = (($4 + [40]) + [16])
	if ( ((uint_64)*($3) > (uint_64)$1) ){ goto $label$19 }
	*($3) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$19
	*($4 + [96]) = $5
	$7 = *($5)
	*($4 + [95]) = $7
	*($4 + [88]) = $6
	$2 = ($4 + [68])
	$3 = *($2)
	if ( ((uint_32)$3 >= (uint_32)*(($4 + [72]))) ){ goto $label$21 }
	*($3 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255)
	*($3 + [16]) = $6
	*($4 + [96]) = [0]
	*($3) = $5
	*($2) = ($3 + [24])
	$5 = *($4 + [96])
	*($4 + [96]) = [0]
	if ( $5 ){ goto $label$20 }
	goto $label$12 
	
.LABEL $label$21
	CALL $99(($4 + [64]), ($4 + [96]), ($4 + [95]), ($4 + [88]))
	$5 = *($4 + [96])
	*($4 + [96]) = [0]
	if ( ($5 == 0) ){ goto $label$12 }
	
.LABEL $label$20
	CALL _ZdlPv($5)
	
.LABEL $label$12
	$7 = [1]
	
.LABEL $label$11
	$6 = *($4 + [64])
	if ( ($6 == 0) ){ goto $label$22 }
	$2 = ($4 + [68])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$24 }
	
.LOOP $label$25:
	$5 = ($5 + [-24])
	$3 = *($5)
	*($5) = [0]
	if ( ($3 == 0) ){ goto $label$26 }
	CALL _ZdlPv($3)
	
.LABEL $label$26
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$25 }
	$5 = *(($4 + [64]))
	goto $label$23 
	
.LABEL $label$24
	$5 = $6
	
.LABEL $label$23
	*($2) = $6
	CALL _ZdlPv($5)
	
.LABEL $label$22
	$global$0 = ($4 + [112])
	return $7
	
.LABEL $label$2
	CALL $359(($4 + [24]))
	
.LABEL $label$1
	CALL $359(($4 + [8]))
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $236 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [192])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = (($4 + [64]) + [24]))) = (int_64)0
	*(($8 = (($4 + [64]) + [16]))) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [64]) = (int_64)0
	$9 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$5 }
	CALL eosio_assert([0], [19214])
	
.LABEL $label$5
	CALL memcpy(($4 + [64]), $2, [32])
	*(($4 + [52])) = ($2 + [32])
	*((($4 + [32]) + [24])) = $9
	*($4 + [40]) = $1
	*($4 + [32]) = $0
	*($4 + [48]) = $2
	*(($9 = (($4 + [96]) + [24]))) = *($3)
	*(($3 = (($4 + [96]) + [16]))) = *($8)
	*($4 + [104]) = *($4 + [72])
	*($4 + [96]) = *($4 + [64])
	*((($4 + [128]) + [24])) = *($9)
	*((($4 + [128]) + [16])) = *($3)
	*($4 + [136]) = *($4 + [104])
	*($4 + [128]) = *($4 + [96])
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	$0 = *((($4 + [128]) + [24]))
	*((($4 + [160]) + [24])) = $0
	$1 = *((($4 + [128]) + [16]))
	*((($4 + [160]) + [16])) = $1
	*(($4 + [16])) = $1
	*(($4 + [24])) = $0
	$0 = *($4 + [136])
	*($4 + [168]) = $0
	$1 = *($4 + [128])
	*($4) = $1
	*($4 + [160]) = $1
	*($4 + [8]) = $0
	CALL void $3((int_32 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $400($2)
	
.LABEL $label$7
	$global$0 = ($4 + [192])
	return [1]
}

void .FUNC $96 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [96])
	$global$0 = $3
	*(($3 + [48])) = [0]
	*($3 + [32]) = (int_64)-1
	$4 = *($0)
	*($3 + [16]) = $4
	*($3 + [24]) = $1
	*($3 + [40]) = (int_64)0
	$5 = CALL db_lowerbound_i64($4, $1, (int_64)-7297964030780506112, (int_64)0)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$3 }
	$5 = CALL $32(($3 + [16]), $5)
	$1 = *($0)
	*($3 + [64]) = $2
	CALL $100(($3 + [16]), $5, $1, ($3 + [64]))
	$6 = *($3 + [40])
	if ( $6 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$1 = *($0)
	*($3 + [12]) = $2
	*($3 + [8]) = ($3 + [16])
	*($3 + [88]) = $1
	if ( ((int_64)$4 == (int_64)CALL current_receiver()) ){ goto $label$4 }
	CALL eosio_assert([0], [19435])
	
.LABEL $label$4
	*($3 + [68]) = ($3 + [8])
	*($3 + [64]) = ($3 + [16])
	*($3 + [72]) = ($3 + [88])
	*(($0 = CALL _Znwj([40])) + [16]) = [0]
	*($0 + [8 align=4]) = (int_64)0
	*($0 + [24]) = ($3 + [16])
	CALL $101(($3 + [64]), $0)
	*($3 + [80]) = $0
	$1 = *($0)
	*($3 + [64]) = $1
	$5 = *($0 + [28])
	*($3 + [60]) = $5
	$6 = ($3 + [44])
	$2 = *($6)
	if ( ((uint_32)$2 >= (uint_32)*(($3 + [48]))) ){ goto $label$7 }
	*($2 + [8]) = $1
	*($2 + [16]) = $5
	*($3 + [80]) = [0]
	*($2) = $0
	*($6) = ($2 + [24])
	$0 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $35(($3 + [40]), ($3 + [80]), ($3 + [64]), ($3 + [60]))
	$0 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( $0 ){ goto $label$5 }
	
.LABEL $label$6
	$6 = *($3 + [40])
	if ( ($6 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	$2 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$8 }
	*(($0 + [12])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$8
	CALL _ZdlPv($0)
	$6 = *($3 + [40])
	if ( ($6 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($3 + [44])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$10 }
	
.LOOP $label$11:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$12 }
	$5 = *($2 + [8])
	if ( ($5 == 0) ){ goto $label$13 }
	*(($2 + [12])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$13
	CALL _ZdlPv($2)
	
.LABEL $label$12
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$11 }
	$0 = *(($3 + [40]))
	goto $label$9 
	
.LABEL $label$10
	$0 = $6
	
.LABEL $label$9
	*($7) = $6
	CALL _ZdlPv($0)
	
.LABEL $label$1
	$global$0 = ($3 + [96])
}

int_32 .FUNC $234 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [80]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $7)
	*($4 + [112]) = ($4 + [56])
	*($4 + [24]) = ($4 + [72])
	CALL $253(($4 + [24]), ($4 + [112]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [64])
	*($4 + [8]) = *($4 + [56])
	*(($8 = (($4 + [96]) + [8]))) = *($3)
	*($4 + [96]) = *($4 + [8])
	$3 = *($8)
	*((($4 + [112]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [96])
	*($4 + [40]) = $0
	*($4 + [112]) = $0
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$0 = *($4 + [88])
	$1 = *($4 + [80])
	$9 = *($4 + [72])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $400($2)
	
.LABEL $label$6
	$global$0 = ($4 + [128])
	return [1]
}

int_32 .FUNC $233 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [176])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = ($4 + [120]))) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [96]) = [0]
	*($4 + [104]) = (int_64)0
	*($4 + [112]) = (int_64)0
	*($4 + [76]) = $2
	*($4 + [72]) = $2
	*($4 + [80]) = ($2 + $7)
	*($4 + [160]) = ($4 + [72])
	*($4 + [40]) = ($4 + [88])
	CALL $260(($4 + [40]), ($4 + [160]))
	*(($9 = (($4 + [24]) + [8]))) = *($4 + [80])
	*($4 + [24]) = *($4 + [72])
	*(($3 = (($4 + [144]) + [8]))) = *($9)
	*($4 + [144]) = *($4 + [24])
	$9 = *($3)
	*((($4 + [160]) + [8])) = $9
	*(($4 + [64])) = $9
	*($4 + [40]) = $0
	*($4 + [48]) = $1
	$0 = *($4 + [144])
	*($4 + [56]) = $0
	*($4 + [160]) = $0
	*(($9 = (($4 + [128]) + [8]))) = *($8)
	*($4 + [128]) = *($4 + [112])
	$0 = *($4 + [104])
	$8 = *($4 + [97])
	$10 = *($4 + [96])
	$1 = *($4 + [88])
	*($3) = *($9)
	*($4 + [144]) = *($4 + [128])
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$11 = *((($4 + [144]) + [8]))
	*((($4 + [160]) + [8])) = $11
	*((($4 + [8]) + [8])) = $11
	$11 = *($4 + [144])
	*($4 + [8]) = $11
	*($4 + [160]) = $11
	CALL void $3((int_32 $1), (int_64 ($10 & [255])), (int_32 ($8 & [255])), (int_32 $0), (int_64 ($4 + [8])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $400($2)
	
.LABEL $label$5
	$global$0 = ($4 + [176])
	return [1]
}

void .FUNC $91 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$global$0 = $2
	*(($2 + [56])) = [0]
	*(($2 + [62])) = [0]
	*($2 + [40]) = (int_64)-1
	*($2 + [48]) = (int_64)0
	*($2 + [60]) = [0]
	$3 = *($0)
	*($2 + [24]) = $3
	*($2 + [32]) = $3
	$4 = [0]
	$5 = CALL db_find_i64($3, $3, (int_64)-3020371566920728576, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $10(($2 + [24]), $5)
	if ( ((int_32)*($4 + [88]) == (int_32)($2 + [24])) ){ goto $label$1 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$1
	*(($2 + [16])) = [0]
	*($2 + [8]) = (int_64)0
	$5 = CALL $393([9258])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$2 }
	$6 = ((int_32)$4 != (int_32)[0])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$5 }
	*($2 + [8]) = ($5 << [1])
	$7 = (($2 + [8]) | [1])
	if ( $5 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$8 = (($5 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($2 + [8]) = ($8 | [1])
	*($2 + [16]) = $7
	*($2 + [12]) = $5
	
.LABEL $label$4
	CALL memcpy($7, [9258], $5)
	
.LABEL $label$3
	*(($7 + $5)) = [0]
	CALL eosio_assert($6, CALL $5($5, [132], ($2 + [8])))
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($2 + [16]))
	
.LABEL $label$6
	$3 = *($0)
	if ( $4 ){ goto $label$7 }
	CALL eosio_assert([0], [19537])
	
.LABEL $label$7
	CALL $92(($2 + [24]), $4, $3)
	$7 = *($2 + [48])
	if ( ($7 == 0) ){ goto $label$8 }
	$0 = ($2 + [52])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$10 }
	
.LOOP $label$11:
	$5 = ($5 + [-24])
	$4 = *($5)
	*($5) = [0]
	if ( ($4 == 0) ){ goto $label$12 }
	CALL _ZdlPv($4)
	
.LABEL $label$12
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$11 }
	$5 = *(($2 + [48]))
	goto $label$9 
	
.LABEL $label$10
	$5 = $7
	
.LABEL $label$9
	*($0) = $7
	CALL _ZdlPv($5)
	
.LABEL $label$8
	$global$0 = ($2 + [64])
	return (unreachable)
	
.LABEL $label$2
	CALL $359(($2 + [8]))
}

void .FUNC $92 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	$6 = *($5)
	*(($5 = ($1 + [72]))) = ((int_64)$6 + (int_64)1)
	$7 = ($1 + [40])
	*($4 + [16]) = *($7)
	$8 = ($1 + [64])
	*($4 + [24]) = *($8)
	*($4 + [32]) = $6
	$6 = *($1)
	$9 = $3
	$3 = ($9 + [-80])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($9 + [-9])
	*($4 + [40]) = $4
	*($4 + [52]) = ($1 + [8])
	*($4 + [48]) = $1
	*($4 + [56]) = ($1 + [16])
	*($4 + [60]) = ($1 + [24])
	*($4 + [64]) = ($1 + [32])
	*($4 + [68]) = $7
	*($4 + [72]) = ($1 + [48])
	*($4 + [76]) = ($1 + [56])
	*($4 + [80]) = $8
	*($4 + [84]) = $5
	*($4 + [88]) = ($1 + [80])
	*($4 + [92]) = ($1 + [81])
	*($4 + [96]) = ($1 + [82])
	*($4 + [100]) = ($1 + [83])
	*($4 + [104]) = ($1 + [84])
	CALL $87(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [92]), $2, $3, [71])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [48]) = *($7)
	if ( (CALL $392(($4 + [16]), ($4 + [48]), [8]) == 0) ){ goto $label$4 }
	$9 = ($1 + [96])
	$7 = *($9)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$5 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728576, ($4 + [40]), $6)
	*($9) = $7
	
.LABEL $label$5
	CALL db_idx64_update($7, $2, ($4 + [48]))
	
.LABEL $label$4
	$7 = (($4 + [16]) + [16])
	*($4 + [48]) = *($8)
	if ( (CALL $392($3, ($4 + [48]), [8]) == 0) ){ goto $label$6 }
	$8 = ($1 + [100])
	$3 = *($8)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$7 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728575, ($4 + [40]), $6)
	*($8) = $3
	
.LABEL $label$7
	CALL db_idx64_update($3, $2, ($4 + [48]))
	
.LABEL $label$6
	*($4 + [48]) = *($5)
	if ( (CALL $392($7, ($4 + [48]), [8]) == 0) ){ goto $label$8 }
	$5 = ($1 + [104])
	$1 = *($5)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$9 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728574, ($4 + [40]), $6)
	*($5) = $1
	
.LABEL $label$9
	CALL db_idx64_update($1, $2, ($4 + [48]))
	
.LABEL $label$8
	$global$0 = ($4 + [112])
}

int_32 .FUNC $230 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$3 = ($global$0 - [208])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [104])) = (int_64)0
	*(($4 + [96])) = (int_64)0
	*(($4 + [88])) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [64]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [19214])
	
.LABEL $label$5
	$8 = ($2 + $7)
	$3 = ($4 + [80])
	CALL memcpy(($4 + [64]), $2, [8])
	$9 = ($2 + [8])
	if ( ((uint_32)($7 + [-8]) > (uint_32)[31]) ){ goto $label$6 }
	CALL eosio_assert([0], [19214])
	
.LABEL $label$6
	CALL memcpy($3, $9, [32])
	*((($4 + [32]) + [24])) = $8
	*($4 + [48]) = $2
	*(($4 + [52])) = ($2 + [40])
	*($4 + [40]) = $1
	*($4 + [32]) = $0
	*(($8 = (($4 + [112]) + [16]))) = *(($3 + [16]))
	*(($9 = (($4 + [112]) + [24]))) = *(($3 + [24]))
	*($4 + [112]) = *($3)
	*($4 + [120]) = *(($3 + [8]))
	$0 = *($4 + [64])
	*((($4 + [144]) + [24])) = *($9)
	*((($4 + [144]) + [16])) = *($8)
	*($4 + [152]) = *($4 + [120])
	*($4 + [144]) = *($4 + [112])
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	$1 = *((($4 + [144]) + [24]))
	*((($4 + [176]) + [24])) = $1
	$10 = *((($4 + [144]) + [16]))
	*((($4 + [176]) + [16])) = $10
	*(($4 + [16])) = $10
	*(($4 + [24])) = $1
	$1 = *($4 + [152])
	*($4 + [184]) = $1
	$10 = *($4 + [144])
	*($4) = $10
	*($4 + [176]) = $10
	*($4 + [8]) = $1
	CALL void $3((int_32 $0), (int_64 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $400($2)
	
.LABEL $label$8
	$global$0 = ($4 + [208])
	return [1]
}

void .FUNC $144 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$4 = ($global$0 - [160])
	$global$0 = $4
	$5 = [0]
	*(($4 + [152])) = [0]
	*($4 + [136]) = (int_64)-1
	*($4 + [144]) = (int_64)0
	$6 = *($0)
	*($4 + [120]) = $6
	*($4 + [128]) = $6
	$1 = CALL db_find_i64($6, $6, (int_64)7687445405353639936, (CASTING uint_64)(uint_32 $1))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$2 }
	$5 = CALL $105(($4 + [120]), $1)
	if ( ((int_32)*($5 + [16]) == (int_32)($4 + [120])) ){ goto $label$3 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$3
	*($4 + [116]) = $5
	*($4 + [112]) = ($4 + [120])
	goto $label$1 
	
.LABEL $label$2
	*($4 + [116]) = [0]
	*($4 + [112]) = ($4 + [120])
	
.LABEL $label$1
	*(($4 + [104])) = [0]
	*($4 + [96]) = (int_64)0
	$1 = CALL $393([9945])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$13 }
	$7 = ((int_32)$5 != (int_32)[0])
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$16 }
	*($4 + [96]) = ($1 << [1])
	$5 = (($4 + [96]) | [1])
	if ( $1 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$8 = (($1 + [16]) & [-16])
	$5 = CALL _Znwj($8)
	*($4 + [96]) = ($8 | [1])
	*($4 + [104]) = $5
	*($4 + [100]) = $1
	
.LABEL $label$15
	CALL memcpy($5, [9945], $1)
	
.LABEL $label$14
	*(($5 + $1)) = [0]
	CALL eosio_assert($7, CALL $5($1, [160], ($4 + [96])))
	if ( ((*($4 + [96]) & [1]) == 0) ){ goto $label$17 }
	CALL _ZdlPv(*($4 + [104]))
	
.LABEL $label$17
	$7 = *($4 + [116])
	if ( ($7 == 0) ){ goto $label$4 }
	*(($4 + [72])) = (int_64)0
	*(($4 + [88])) = *(($3 + [8]))
	*($4 + [64]) = (int_64)0
	*($4 + [56]) = $2
	*($4 + [80]) = *($3)
	$5 = *($7 + [4])
	$1 = $5
	$7 = *(($7 + [8]))
	$8 = ((int_32)$5 == (int_32)$7)
	if ( $8 ){ goto $label$24 }
	$1 = $5
	
.LOOP $label$25:
	if ( ((int_64)*($1) == (int_64)$2) ){ goto $label$24 }
	$1 = ($1 + [40])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$25 }
	*($4 + [48]) = $7
	goto $label$23 
	
.LABEL $label$24
	*($4 + [48]) = $1
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$23 }
	$2 = *(($1 + [16]))
	$9 = *($3 + [8])
	$10 = *($3)
	$6 = *($1 + [8])
	if ( ((int_64)$6 >= (int_64)2305843009213693952) ){ goto $label$22 }
	if ( ((int_64)$6 <= (int_64)-2305843009213693952) ){ goto $label$19 }
	$6 = ((int_64)$6 << (int_64)1)
	if ( ((int_64)$9 != (int_64)$2) ){ goto $label$18 }
	goto $label$8 
	
.LABEL $label$23
	if ( $8 ){ goto $label$26 }
	
.LOOP $label$27:
	if ( ((int_32)*($5) == (int_32)[1]) ){ goto $label$26 }
	$5 = ($5 + [40])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$27 }
	$5 = $7
	
.LABEL $label$26
	*(($4 + [40])) = [0]
	*($4 + [32]) = (int_64)0
	$1 = CALL $393([9925])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$12 }
	$8 = ((int_32)$5 != (int_32)$7)
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$30 }
	*($4 + [32]) = ($1 << [1])
	$7 = (($4 + [32]) | [1])
	if ( $1 ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	$11 = (($1 + [16]) & [-16])
	$7 = CALL _Znwj($11)
	*($4 + [32]) = ($11 | [1])
	*($4 + [40]) = $7
	*($4 + [36]) = $1
	
.LABEL $label$29
	CALL memcpy($7, [9925], $1)
	
.LABEL $label$28
	*(($7 + $1)) = [0]
	CALL eosio_assert($8, CALL $5($1, [161], ($4 + [32])))
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$31 }
	CALL _ZdlPv(*($4 + [40]))
	
.LABEL $label$31
	$6 = *($5 + [8])
	CALL __multi3($4, $6, (int_64)$6 >> (int_64)63), $2, (int_64)$2 >> (int_64)63))
	$2 = *(($5 + [16]))
	$9 = *(($4 + [8]))
	$6 = *($4)
	if ( (( (uint_64)($6 <= (int_64)4611686018427387904) ? ((int_64)$9 < (int_64)0) : (int_64)($9 == 0) ) == 0) ){ goto $label$33 }
	if ( ( ((uint_64)$6 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$9 > (int_64)-1) : ((int_64)$9 == (int_64)-1) ) ){ goto $label$32 }
	CALL eosio_assert([0], [18995])
	goto $label$32 
	
.LABEL $label$33
	CALL eosio_assert([0], [18971])
	
.LABEL $label$32
	$9 = *($3 + [8])
	$10 = *($3)
	if ( ((int_64)$6 >= (int_64)2305843009213693952) ){ goto $label$34 }
	if ( ((int_64)$6 <= (int_64)-2305843009213693952) ){ goto $label$21 }
	$6 = ((int_64)$6 << (int_64)1)
	if ( ((int_64)$9 != (int_64)$2) ){ goto $label$20 }
	goto $label$11 
	
.LABEL $label$34
	CALL eosio_assert([0], [18971])
	$6 = ((int_64)$6 << (int_64)1)
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$11 }
	goto $label$20 
	
.LABEL $label$22
	CALL eosio_assert([0], [18971])
	$6 = ((int_64)$6 << (int_64)1)
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$8 }
	goto $label$18 
	
.LABEL $label$21
	CALL eosio_assert([0], [18995])
	$6 = ((int_64)$6 << (int_64)1)
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$11 }
	
.LABEL $label$20
	CALL eosio_assert([0], [19111])
	$6 = ((int_64)$10 + (int_64)$6)
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$19
	CALL eosio_assert([0], [18995])
	$6 = ((int_64)$6 << (int_64)1)
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$8 }
	
.LABEL $label$18
	CALL eosio_assert([0], [19111])
	$6 = ((int_64)$10 + (int_64)$6)
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$13
	CALL $359(($4 + [96]))
	
.LABEL $label$12
	CALL $359(($4 + [32]))
	
.LABEL $label$11
	$6 = ((int_64)$10 + (int_64)$6)
	if ( ((int_64)$6 <= (int_64)-4611686018427387904) ){ goto $label$9 }
	
.LABEL $label$10
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [19173])
	goto $label$5 
	
.LABEL $label$9
	CALL eosio_assert([0], [19154])
	goto $label$5 
	
.LABEL $label$8
	$6 = ((int_64)$10 + (int_64)$6)
	if ( ((int_64)$6 <= (int_64)-4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [19173])
	goto $label$5 
	
.LABEL $label$6
	CALL eosio_assert([0], [19154])
	
.LABEL $label$5
	*(($4 + [72])) = $2
	$2 = ((int_64)$6 / (int_64)3)
	*(($4 + [64])) = ( $2 ? (int_64)10 : ((int_64)$2 > (int_64)10) )
	$2 = *($0)
	$1 = *($4 + [116])
	*($4 + [20]) = ($4 + [112])
	*($4 + [16]) = ($4 + [48])
	*($4 + [24]) = ($4 + [56])
	if ( $1 ){ goto $label$35 }
	CALL eosio_assert([0], [19537])
	
.LABEL $label$35
	CALL $164(($4 + [120]), $1, $2, ($4 + [16]))
	
.LABEL $label$4
	$3 = *($4 + [144])
	if ( ($3 == 0) ){ goto $label$36 }
	$0 = ($4 + [148])
	$1 = *($0)
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$38 }
	
.LOOP $label$39:
	$1 = ($1 + [-24])
	$5 = *($1)
	*($1) = [0]
	if ( ($5 == 0) ){ goto $label$40 }
	$7 = *($5 + [4])
	if ( ($7 == 0) ){ goto $label$41 }
	*(($5 + [8])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$41
	CALL _ZdlPv($5)
	
.LABEL $label$40
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$39 }
	$1 = *(($4 + [144]))
	goto $label$37 
	
.LABEL $label$38
	$1 = $3
	
.LABEL $label$37
	*($0) = $3
	CALL _ZdlPv($1)
	
.LABEL $label$36
	$global$0 = ($4 + [160])
	(unreachable)
	(unreachable)
}

int_32 .FUNC $192 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = [-1]
	$4 = *($2 + [104])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [19257])
	$3 = [-1]
	$2 = *(($0 + [4]))
	$4 = *($2 + [104])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = *(*($0))
	$4 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)-7807363788000198656, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [104]) = $4
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$5 = CALL db_idx64_next($4, ($1 + [8]))
	if ( ((int_32)$5 <= (int_32)$3) ){ goto $label$7 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$8:
	$4 = ($2 + [-24])
	$3 = *($4)
	if ( ((int_64)*($3) == (int_64)$6) ){ goto $label$6 }
	$2 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$7
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	if ( ((int_32)*($3 + [96]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [19486])
	goto $label$4 
	
.LABEL $label$5
	$3 = CALL $322($7, CALL $fimport$7(*($7), *($7 + [8]), (int_64)-7807363788000198656, $6))
	if ( ((int_32)*($3 + [96]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$4
	*(($0 + [4])) = $3
	*(($3 + [104])) = $5
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $260 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$3 = ($4 + [9])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$5 = ($4 + [24])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $0) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [19214])
	$0 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $0, [8])
	$5 = (*($0) + [8])
	*(($0 = ($1 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($1 + [8])) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [19214])
	$5 = *($0)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $5, [8])
	*(($4 + [32])) = *($2 + [8])
	*($0) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $261 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	CALL $285(*($1), ($3 + [8]))
	$2 = ($3 + [32])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[31]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [32])
	*(($0 = ($0 + [4]))) = (*($0) + [32])
	$2 = ($3 + [64])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[31]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [32])
	*(($0 = ($0 + [4]))) = (*($0) + [32])
	$0 = ($3 + [96])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $262 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	$2 = ($global$0 - [288])
	$global$0 = $2
	$3 = *($1)
	$4 = CALL $360(($2 + [128]), ($1 + [8]))
	*(($5 = (($2 + [96]) + [24]))) = *(($1 + [56]))
	*(($6 = (($2 + [96]) + [16]))) = *(($1 + [48]))
	*(($7 = (($2 + [64]) + [16]))) = *(($1 + [80]))
	*(($8 = (($2 + [64]) + [24]))) = *(($1 + [88]))
	*($2 + [104]) = *(($1 + [40]))
	*($2 + [96]) = *($1 + [32])
	*($2 + [64]) = *($1 + [64])
	*($2 + [72]) = *(($1 + [72]))
	$9 = *($1 + [96])
	*((($2 + [176]) + [24])) = *($8)
	*((($2 + [176]) + [16])) = *($7)
	*((($2 + [144]) + [16])) = *($6)
	*((($2 + [144]) + [24])) = *($5)
	*($2 + [184]) = *($2 + [72])
	*($2 + [176]) = *($2 + [64])
	*($2 + [144]) = *($2 + [96])
	*($2 + [152]) = *($2 + [104])
	$1 = *($0 + [4])
	$5 = *($1 + [4])
	$0 = (*($0) + int_32($5 >> [1]))
	$1 = *($1)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	$5 = CALL $360(($2 + [272]), $4)
	$10 = *((($2 + [144]) + [24]))
	*((($2 + [240]) + [24])) = $10
	$11 = *((($2 + [144]) + [16]))
	*((($2 + [240]) + [16])) = $11
	*(($6 = (($2 + [208]) + [16]))) = *((($2 + [176]) + [16]))
	*(($7 = (($2 + [208]) + [24]))) = *((($2 + [176]) + [24]))
	*((($2 + [32]) + [16])) = $11
	*((($2 + [32]) + [24])) = $10
	$10 = *($2 + [152])
	*($2 + [248]) = $10
	$11 = *($2 + [144])
	*($2 + [240]) = $11
	*($2 + [208]) = *($2 + [176])
	*($2 + [216]) = *($2 + [184])
	*($2 + [32]) = $11
	*($2 + [40]) = $10
	*(($2 + [24])) = *($7)
	*(($2 + [16])) = *($6)
	*($2 + [8]) = *($2 + [216])
	*($2) = *($2 + [208])
	CALL void $0((int_32 $3), (int_64 $5), (int_32 ($2 + [32])), (int_32 $2), (int_32 $9), (int_64 $1))
	if ( (*($2 + [272]) & [1]) ){ goto $label$4 }
	if ( (*($4) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($5 + [8]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($4 + [8]))
	$global$0 = ($2 + [288])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [288])
}

int_32 .FUNC $386 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = [-1]
	if ( CALL $385($0) ){ goto $label$1 }
	if ( ((int_32)CALL int_32 $0((int_32 ($1 + [15])), (int_32 [1]), (int_32 *($0 + [32]))) != (int_32)[1]) ){ goto $label$1 }
	$2 = *($1 + [15])
	
.LABEL $label$1
	$global$0 = ($1 + [16])
	return $2
}

void .FUNC $303 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [18965])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [18965])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [18965])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [18965])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

int_32 .FUNC $302 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [36]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [19834])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-3020381371621703680)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [19780])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [19780])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $60(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $301 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $263 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[31]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [32])
	*(($0 = ($0 + [4]))) = (*($0) + [32])
	$3 = ($4 + [48])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[31]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [32])
	*(($0 = ($0 + [4]))) = (*($0) + [32])
	$3 = ($4 + [80])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[31]) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [32])
	*(($0 = ($0 + [4]))) = (*($0) + [32])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$0) ){ goto $label$5 }
	CALL eosio_assert([0], [19214])
	$0 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [15]), $0, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
	*(($4 + [112])) = ((int_32)*($2 + [15]) != (int_32)[0])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $307 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [28]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [19834])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-4057297652277051392)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [19780])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [19780])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $9(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $306 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy(($2 + [15]), $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	*($3) = ((int_32)*($2 + [15]) != (int_32)[0])
	$4 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $305 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[1]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$3 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [19214])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
}

void .FUNC $304 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$7 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$8 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$8
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($0 + [32])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [19214])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $309 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[31]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [32])
	*(($4 = ($4 + [4]))) = (*($4) + [32])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [19214])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $308 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($1)
	*($2 + [15]) = *(*($0 + [4]))
	$5 = *($4 + [4])
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, ($2 + [15]), [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$5 = *($0 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [18965])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $282 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [18965])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [18965])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [18965])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $268 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	CALL $336(*($1), ($0 + [8]))
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy(($2 + [15]), $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	*(($0 + [20])) = ((int_32)*($2 + [15]) != (int_32)[0])
	$0 = ($0 + [21])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$4 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $4, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $129 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $377($0)
	
.LABEL $label$1
	$8 = *($2)
	$2 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($9 = ((int_32)$5 * (int_32)[24]))))) = $2
	*($1 + [8]) = $8
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $9) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $128 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = $global$0
	$5 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	*($1 + [8]) = ((int_64)*(*(*($3) + [4]) + [8]) + (int_64)1)
	$6 = *($1)
	$4 = $4
	$3 = ($4 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [1])
	CALL memcpy(($4 + [-15]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $3, [9])
	if ( ((uint_64)*($0 + [16]) > (uint_64)$6) ){ goto $label$3 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$3
	$global$0 = $5
}

int_32 .FUNC $286 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [19219])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $140($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [19214])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $287 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[31]) ){ goto $label$1 }
	CALL eosio_assert([0], [18965])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	CALL $288(*($1), *($0 + [4]))
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[31]) ){ goto $label$2 }
	CALL eosio_assert([0], [18965])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	$3 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [18965])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $284 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[31]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	CALL $285(*($1), *($0 + [4]))
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[31]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	$3 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

int_32 .FUNC $285 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $286($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $364($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $364($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $359($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $123 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-4057297652277051392, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $9($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $307(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [19728])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = [0]
	*($1 + [16]) = *(*($5 + [4]))
	$2 = $2
	$6 = ($2 + [-32])
	$global$0 = $6
	*($3 + [12]) = $6
	*($3 + [8]) = $6
	*($3 + [16]) = ($2 + [-15])
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [8])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	CALL $308(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($4 + [8]), (int_64)-4057297652277051392, *(*($0 + [8])), $7, $6, [17])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = ($3 + [48])
}

void .FUNC $122 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	*($1 + [16]) = *(*($3))
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-15])
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = ($1 + [8])
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [16])
	CALL $308(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [28]), $2, $4, [17])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

int_32 .FUNC $288 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [18965])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [18965])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $289 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[1]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$3 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $1, [2])
	*(($0 = ($0 + [4]))) = (*($0) + [2])
}

int_32 .FUNC $127 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [16])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [19191])
	
.LABEL $label$5
	$2 = CALL $397($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([32])) + [16]) = $0
	if ( $4 ){ goto $label$7 }
	CALL eosio_assert([0], [19214])
	
.LABEL $label$7
	$7 = ($5 + [8])
	CALL memcpy($5, $2, [1])
	$8 = ($2 + [1])
	if ( ((uint_32)($4 + [-1]) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [19214])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($5 + [20]) = $1
	*($3 + [8]) = $5
	$7 = *($5)
	*($3 + [7]) = $7
	*($3) = $1
	$8 = ($0 + [28])
	$4 = *($8)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255)
	*($4 + [16]) = $1
	*($3 + [8]) = [0]
	*($4) = $5
	*($8) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $129(($0 + [24]), ($3 + [8]), ($3 + [7]), $3)
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $400($2)
	
.LABEL $label$9
	$1 = *($3 + [8])
	*($3 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL _ZdlPv($1)
	
.LABEL $label$12
	$global$0 = ($3 + [16])
	return $5
}

void .FUNC $183 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$2 = ($global$0 - [64])
	$global$0 = $2
	$3 = *($0 + [4])
	*($1) = *(*($3))
	$4 = *($0)
	$5 = (int_64)0
	*(($7 = (($6 = $2) + [32]))) = (int_64)0
	*(($6 + [48])) = (int_64)0
	*($6 + [24]) = (int_64)0
	*($6 + [40]) = (int_64)0
	*($6 + [16]) = [1]
	$3 = *($3 + [4])
	*($7) = *(($3 + [8]))
	*($6 + [24]) = *($3)
	$3 = CALL $393([8341])
	if ( ($3 <= [8]) ){ goto $label$3 }
	CALL eosio_assert([0], [10159])
	goto $label$2 
	
.LABEL $label$3
	if ( ($3 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$5 = (int_64)0
	
.LOOP $label$4:
	$7 = *(($3 + [8340]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$5 }
	CALL eosio_assert([0], [10204])
	
.LABEL $label$5
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$4 }
	
.LABEL $label$1
	$8 = ((int_64)$5 & (int_64)72057594037927935)
	$9 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)4)
	$3 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$5 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$8 = $5
	$7 = $3
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$8 = $5
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$7 = ((int_32)$3 < (int_32)[6])
	$10 = ($3 + [1])
	$3 = $10
	if ( $7 ){ goto $label$10 }
	$3 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [18905])
	
.LABEL $label$6
	*(($7 = (($6 + [16]) + [32]))) = $9
	*(($10 = (($6 + [16]) + [24]))) = (int_64)0
	$11 = ($1 + [8])
	$3 = *($11)
	if ( ((int_32)$3 == (int_32)*(($1 + [12]))) ){ goto $label$12 }
	*($3) = *($6 + [16])
	*(($3 + [32])) = *($7)
	*(($3 + [24])) = *($10)
	*(($3 + [16])) = *((($6 + [16]) + [16]))
	*(($3 + [8])) = *((($6 + [16]) + [8]))
	$7 = (*($11) + [40])
	*($11) = $7
	goto $label$11 
	
.LABEL $label$12
	CALL $184(($1 + [4]), ($6 + [16]))
	$7 = *($1 + [8])
	
.LABEL $label$11
	$10 = *($1 + [4])
	$12 = ($7 - $10)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$12 / (int_32)[40]))
	$3 = [34]
	
.LOOP $label$13:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$13 }
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$17 }
	$12 = (((int_32)((uint_32)($12 + [-40]) / (uint_32)[40]) * (int_32)[33]) + $3)
	if ( ($12 <= [513]) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$12 = ($3 + [-33])
	if ( ((uint_32)$12 >= (uint_32)[513]) ){ goto $label$15 }
	
.LABEL $label$16
	$2 = ($2 - (($12 + [15]) & [-16]))
	$global$0 = $2
	goto $label$14 
	
.LABEL $label$15
	$2 = CALL $397($12)
	
.LABEL $label$14
	*($6 + [4]) = $2
	*($6) = $2
	*($6 + [8]) = ($2 + $12)
	$3 = $2
	if ( ((int_32)$12 > (int_32)[0]) ){ goto $label$18 }
	CALL eosio_assert([0], [18965])
	$3 = *($6 + [4])
	
.LABEL $label$18
	CALL memcpy($3, $1, [1])
	$3 = ($3 + [1])
	*($6 + [4]) = $3
	$8 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [8])) - *(($1 + [4]))) / (int_32)[40]))
	
.LOOP $label$19:
	$7 = (CASTING uint_32)(uint_64 $8)
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	$10 = ((int_64)$8) != (int_64)0
	*($6 + [16]) = (($10) << [7]) | ($7 & [127]))
	if ( ((int_32)(*(($6 + [8])) - $3) > (int_32)[0]) ){ goto $label$20 }
	CALL eosio_assert([0], [18965])
	$3 = *($6 + [4])
	
.LABEL $label$20
	CALL memcpy($3, ($6 + [16]), [1])
	$3 = ($3 + [1])
	*($6 + [4]) = $3
	if ( $10 ){ goto $label$19 }
	$7 = *($11)
	$3 = *(($1 + [4]))
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$21 }
	
.LOOP $label$22:
	*($6 + [56]) = $6
	*($6 + [16]) = $3
	*((($6 + [16]) + [8])) = ($3 + [24])
	*($6 + [20]) = ($3 + [8])
	CALL $320(($6 + [16]), ($6 + [56]))
	$3 = ($3 + [40])
	if ( ((int_32)$3 != (int_32)$7) ){ goto $label$22 }
	
.LABEL $label$21
	$8 = *($1)
	*($1 + [20]) = CALL db_store_i64(*($4 + [8]), (int_64)7687445405353639936, *(*($0 + [8])), $8, $2, $12)
	if ( ((uint_32)$12 >= (uint_32)[513]) ){ goto $label$25 }
	if ( ((uint_64)*($4 + [16]) <= (uint_64)$8) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	CALL $400($2)
	if ( ((uint_64)*($4 + [16]) > (uint_64)$8) ){ goto $label$23 }
	
.LABEL $label$24
	*(($4 + [16])) = ((int_64)$8 + (int_64)1)
	$global$0 = ($6 + [64])
	return 
	
.LABEL $label$23
	$global$0 = ($6 + [64])
}

int_32 .FUNC $125 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$global$0 = $2
	*(($2 + [40])) = [0]
	*($2 + [24]) = (int_64)-1
	$3 = *($0)
	*($2 + [8]) = $3
	*($2 + [16]) = $3
	*($2 + [32]) = (int_64)0
	$0 = CALL db_lowerbound_i64($3, $3, (int_64)-4057297652277051392, (int_64)0)
	if ( ((int_32)$0 <= (int_32)[-1]) ){ goto $label$6 }
	$4 = ((int_64)*(CALL $9(($2 + [8]), $0) + [16]) > (int_64)$1)
	$5 = *($2 + [32])
	if ( ($5 == 0) ){ goto $label$1 }
	$6 = ($2 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$5 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$8 }
	CALL _ZdlPv($7)
	
.LABEL $label$8
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($2 + [32]))
	goto $label$4 
	
.LABEL $label$6
	if ( (*([0] + [10328]) == 0) ){ goto $label$3 }
	$3 = *([0] + [10320])
	goto $label$2 
	
.LABEL $label$5
	$0 = $5
	
.LABEL $label$4
	*($6) = $5
	CALL _ZdlPv($0)
	$global$0 = ($2 + [48])
	return $4
	
.LABEL $label$3
	$3 = CALL current_time()
	*([0] + [10328]) = [1]
	*([0] + [10320]) = $3
	
.LABEL $label$2
	$4 = ((int_64))($3 - $1) > (int_64)86400000000)
	
.LABEL $label$1
	$global$0 = ($2 + [48])
	return $4
}

void .FUNC $124 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $377($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $182 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$3 = ($global$0 - [144])
	$global$0 = $3
	*($3 + [134]) = $1
	CALL require_auth(*($0))
	$1 = CALL $393([8341])
	if ( ($1 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [10159])
	goto $label$3 
	
.LABEL $label$4
	if ( ($1 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = (int_64)0
	
.LOOP $label$5:
	$5 = *(($1 + [8340]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [10204])
	
.LABEL $label$6
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$2
	$4 = (int_64)0
	
.LABEL $label$1
	*(($3 + [128])) = [0]
	*($3 + [120]) = (int_64)0
	$6 = *($2 + [8])
	$1 = CALL $393([8990])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$16 }
	$7 = ((int_64)$6 == (int_64)((int_64)((int_64)$4 << (int_64)8) | (int_64)4))
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$19 }
	*($3 + [120]) = ($1 << [1])
	$5 = (($3 + [120]) | [1])
	if ( $1 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$8 = (($1 + [16]) & [-16])
	$5 = CALL _Znwj($8)
	*($3 + [120]) = ($8 | [1])
	*($3 + [128]) = $5
	*($3 + [124]) = $1
	
.LABEL $label$18
	CALL memcpy($5, [8990], $1)
	
.LABEL $label$17
	*(($5 + $1)) = [0]
	CALL eosio_assert($7, CALL $5($3, [115], ($3 + [120])))
	if ( ((*($3 + [120]) & [1]) == 0) ){ goto $label$20 }
	CALL _ZdlPv(*($3 + [128]))
	
.LABEL $label$20
	*(($3 + [112])) = [0]
	*($3 + [96]) = (int_64)-1
	*($3 + [104]) = (int_64)0
	$4 = *($0)
	*($3 + [80]) = $4
	*($3 + [88]) = $4
	$1 = CALL db_find_i64($4, $4, (int_64)7687445405353639936, *($3 + [134]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$22 }
	$9 = CALL $105(($3 + [80]), $1)
	if ( ((int_32)*($9 + [16]) == (int_32)($3 + [80])) ){ goto $label$23 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$23
	*($3 + [72]) = [0]
	*($3 + [64]) = (int_64)0
	$5 = (*(($9 + [8])) - *($9 + [4]))
	$7 = ((int_32)$5 / (int_32)[40])
	$8 = [0]
	$1 = [0]
	if ( ($5 == 0) ){ goto $label$24 }
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$15 }
	$5 = CALL _Znwj($5)
	*((($3 + [64]) + [8])) = ($5 + ((int_32)$7 * (int_32)[40]))
	*($3 + [64]) = $5
	*($3 + [68]) = $5
	$7 = *(($9 + [4]))
	$1 = (*(($9 + [8])) - $7)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$21 }
	CALL memcpy($5, $7, $1)
	$8 = (*($3 + [68]) + ((int_32)((uint_32)$1 / (uint_32)[40]) * (int_32)[40]))
	*($3 + [68]) = $8
	$1 = *($3 + [64])
	
.LABEL $label$24
	*($3 + [56]) = [0]
	*($3 + [48]) = (int_64)0
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$22
	$4 = *($0)
	*($3 + [52]) = $2
	*($3 + [48]) = ($3 + [134])
	*($3 + [64]) = $4
	if ( ((int_64)*($3 + [80]) == (int_64)CALL current_receiver()) ){ goto $label$25 }
	CALL eosio_assert([0], [19435])
	
.LABEL $label$25
	*($3 + [12]) = ($3 + [48])
	*($3 + [8]) = ($3 + [80])
	*($3 + [16]) = ($3 + [64])
	*(($1 = CALL _Znwj([28])) + [12]) = [0]
	*($1 + [4 align=4]) = (int_64)0
	*($1 + [16]) = ($3 + [80])
	CALL $183(($3 + [8]), $1)
	*($3 + [136]) = $1
	$7 = *($1)
	*($3 + [135]) = $7
	$8 = *($1 + [20])
	*($3 + [8]) = $8
	$2 = (($3 + [80]) + [28])
	$5 = *($2)
	if ( ((uint_32)$5 >= (uint_32)*(($3 + [112]))) ){ goto $label$26 }
	*($5 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255)
	*($5 + [16]) = $8
	*($3 + [136]) = [0]
	*($5) = $1
	*($2) = ($5 + [24])
	$1 = *($3 + [136])
	*($3 + [136]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	goto $label$14 
	
.LABEL $label$26
	CALL $107(($3 + [104]), ($3 + [136]), ($3 + [135]), ($3 + [8]))
	$1 = *($3 + [136])
	*($3 + [136]) = [0]
	if ( $1 ){ goto $label$14 }
	goto $label$9 
	
.LABEL $label$21
	*($3 + [56]) = [0]
	*($3 + [48]) = (int_64)0
	$1 = $5
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$16
	CALL $359(($3 + [120]))
	
.LABEL $label$15
	CALL $377(($3 + [64]))
	
.LABEL $label$14
	$5 = *($1 + [4])
	if ( ($5 == 0) ){ goto $label$27 }
	*(($1 + [8])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$27
	CALL _ZdlPv($1)
	$8 = *($3 + [104])
	if ( $8 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$13
	$7 = (($3 + [8]) + [8])
	$8 = (($3 + [8]) + [24])
	$10 = [0]
	
.LOOP $label$28:
	*(($11 = (($3 + [8]) + [16]))) = (int_64)0
	*($7) = (int_64)0
	*($8) = (int_64)0
	*(($12 = (($3 + [8]) + [32]))) = (int_64)0
	*($3 + [8]) = *($1)
	*(($8 + [8])) = *(($1 + [32]))
	*($8) = *(($1 + [24]))
	$13 = ($2 + [8])
	$5 = ($1 + [16])
	if ( ((int_64)*($5) == (int_64)*($13)) ){ goto $label$29 }
	CALL eosio_assert([0], [10257])
	
.LABEL $label$29
	$14 = ($1 + [8])
	if ( ((int_64)*($14) <= (int_64)*($2)) ){ goto $label$31 }
	*($7) = *($2)
	*(($7 + [8])) = *($13)
	$10 = [1]
	goto $label$30 
	
.LABEL $label$31
	*(($7 + [8])) = *($5)
	*($7) = *($14)
	
.LABEL $label$30
	$5 = *($3 + [52])
	if ( ((int_32)$5 == (int_32)*((($3 + [48]) + [8]))) ){ goto $label$33 }
	*($5) = *($3 + [8])
	*(($5 + [32])) = *($12)
	*(($5 + [24])) = *($8)
	*(($5 + [16])) = *($11)
	*(($5 + [8])) = *($7)
	*($3 + [52]) = ($5 + [40])
	$1 = ($1 + [40])
	if ( ((int_32)$1 != (int_32)*($3 + [68])) ){ goto $label$28 }
	goto $label$32 
	
.LABEL $label$33
	CALL $184(($3 + [48]), ($3 + [8]))
	$1 = ($1 + [40])
	if ( ((int_32)$1 != (int_32)*($3 + [68])) ){ goto $label$28 }
	
.LABEL $label$32
	if ( (($10 & [1]) == 0) ){ goto $label$12 }
	$4 = *($0)
	*($3 + [8]) = ($3 + [48])
	CALL $185(($3 + [80]), $9, $4, ($3 + [8]))
	$1 = *($3 + [48])
	if ( $1 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$1 = *($3 + [48])
	if ( ($1 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	*($3 + [52]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$1 = *($3 + [64])
	if ( ($1 == 0) ){ goto $label$9 }
	*($3 + [68]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$8 = *($3 + [104])
	if ( ($8 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$2 = ($3 + [108])
	$1 = *($2)
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$35 }
	
.LOOP $label$36:
	$1 = ($1 + [-24])
	$5 = *($1)
	*($1) = [0]
	if ( ($5 == 0) ){ goto $label$37 }
	$7 = *($5 + [4])
	if ( ($7 == 0) ){ goto $label$38 }
	*(($5 + [8])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$38
	CALL _ZdlPv($5)
	
.LABEL $label$37
	if ( ((int_32)$8 != (int_32)$1) ){ goto $label$36 }
	$1 = *(($3 + [104]))
	goto $label$34 
	
.LABEL $label$35
	$1 = $8
	
.LABEL $label$34
	*($2) = $8
	CALL _ZdlPv($1)
	
.LABEL $label$7
	$global$0 = ($3 + [144])
	(unreachable)
	(unreachable)
}

void .FUNC $185 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	$6 = *($1)
	$7 = (CASTING uint_64)(uint_32 $6)
	$3 = *($3)
	$8 = ($1 + [4])
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$3 }
	CALL $321($8, *($3), *($3 + [4]))
	if ( ((int_32)($6 & [255]) == (int_32)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [19669])
	
.LABEL $label$3
	$9 = ((int_64)$7 & (int_64)255)
	$8 = *($1 + [4])
	$6 = *($1 + [8])
	$10 = ($6 - $8)
	$7 = (CASTING uint_64)(uint_32 ((int_32)$10 / (int_32)[40]))
	$3 = [34]
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$8 }
	$10 = (((int_32)((uint_32)($10 + [-40]) / (uint_32)[40]) * (int_32)[33]) + $3)
	if ( ($10 <= [513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$10 = ($3 + [-33])
	if ( ((uint_32)$10 >= (uint_32)[513]) ){ goto $label$6 }
	
.LABEL $label$7
	$8 = ($4 - (($10 + [15]) & [-16]))
	$global$0 = $8
	goto $label$5 
	
.LABEL $label$6
	$8 = CALL $397($10)
	
.LABEL $label$5
	*($5 + [12]) = $8
	*($5 + [8]) = $8
	*($5 + [16]) = ($8 + $10)
	$3 = $8
	if ( ((int_32)$10 > (int_32)[0]) ){ goto $label$9 }
	CALL eosio_assert([0], [18965])
	$3 = *($5 + [12])
	
.LABEL $label$9
	CALL memcpy($3, $1, [1])
	$3 = ($3 + [1])
	*($5 + [12]) = $3
	$7 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [8])) - *(($1 + [4]))) / (int_32)[40]))
	
.LOOP $label$10:
	$4 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($5 + [32]) = (($6) << [7]) | ($4 & [127]))
	if ( ((int_32)(*((($5 + [8]) + [8])) - $3) > (int_32)[0]) ){ goto $label$11 }
	CALL eosio_assert([0], [18965])
	$3 = *($5 + [12])
	
.LABEL $label$11
	CALL memcpy($3, ($5 + [32]), [1])
	$3 = ($3 + [1])
	*($5 + [12]) = $3
	if ( $6 ){ goto $label$10 }
	$4 = *(($1 + [8]))
	$3 = *(($1 + [4]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$12 }
	
.LOOP $label$13:
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $3
	*((($5 + [32]) + [8])) = ($3 + [24])
	*($5 + [36]) = ($3 + [8])
	CALL $320(($5 + [32]), ($5 + [24]))
	$3 = ($3 + [40])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$13 }
	
.LABEL $label$12
	CALL db_update_i64(*(($1 + [20])), $2, $8, $10)
	if ( ((uint_32)$10 >= (uint_32)[513]) ){ goto $label$16 }
	if ( ((uint_64)*($0 + [16]) <= (uint_64)$9) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL $400($8)
	if ( ((uint_64)*($0 + [16]) > (uint_64)$9) ){ goto $label$14 }
	
.LABEL $label$15
	*(($0 + [16])) = ((int_64)$9 + (int_64)1)
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$14
	$global$0 = ($5 + [48])
}

void .FUNC $184 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ((int_32)($2 - $3) / (int_32)[40])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$7 = ((int_32)(*($0 + [8]) - $3) / (int_32)[40])
	if ( ((uint_32)$7 > (uint_32)[53687090]) ){ goto $label$4 }
	$6 = ($7 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL _Znwj(((int_32)$6 * (int_32)[40]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $377($0)
	
.LABEL $label$1
	*(($4 = ($5 + ((int_32)$4 * (int_32)[40])))) = *($1)
	*(($4 + [32])) = *(($1 + [32]))
	*(($4 + [24])) = *(($1 + [24]))
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	$1 = ($2 - $3)
	$2 = ($4 + ((int_32)((int_32)$1 / (int_32)[-40]) * (int_32)[40]))
	$6 = ($5 + ((int_32)$6 * (int_32)[40]))
	$4 = ($4 + [40])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $2
	*(($0 + [4])) = $4
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$6 }
	CALL _ZdlPv($3)
	
.LABEL $label$6
	(unreachable)
}

void .FUNC $187 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_64 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$6 = ($global$0 - [176])
	$global$0 = $6
	*($6 + [128]) = $5
	CALL require_auth(*($0))
	$7 = [0]
	if ( ((uint_64)((int_64)*($4) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$5 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$5 = $9
	$7 = [1]
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$5 = $9
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$10 = ($8 + [1])
	$8 = $10
	if ( $7 ){ goto $label$5 }
	$7 = [1]
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	*(($6 + [120])) = [0]
	*($6 + [112]) = (int_64)0
	$8 = CALL $393([9959])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$14 }
	*($6 + [112]) = ($8 << [1])
	$10 = (($6 + [112]) | [1])
	if ( $8 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$11 = (($8 + [16]) & [-16])
	$10 = CALL _Znwj($11)
	*($6 + [112]) = ($11 | [1])
	*($6 + [120]) = $10
	*($6 + [116]) = $8
	
.LABEL $label$13
	CALL memcpy($10, [9959], $8)
	
.LABEL $label$12
	*(($10 + $8)) = [0]
	CALL eosio_assert($7, CALL $5($6, [116], ($6 + [112])))
	if ( ((*($6 + [112]) & [1]) == 0) ){ goto $label$15 }
	CALL _ZdlPv(*($6 + [120]))
	
.LABEL $label$15
	*(($6 + [104])) = [0]
	*($6 + [96]) = (int_64)0
	$5 = *($4)
	$8 = CALL $393([9573])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$10 }
	$10 = ((int_64)$5 > (int_64)0)
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$18 }
	*($6 + [96]) = ($8 << [1])
	$7 = (($6 + [96]) | [1])
	if ( $8 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$11 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($11)
	*($6 + [96]) = ($11 | [1])
	*($6 + [104]) = $7
	*($6 + [100]) = $8
	
.LABEL $label$17
	CALL memcpy($7, [9573], $8)
	
.LABEL $label$16
	*(($7 + $8)) = [0]
	CALL eosio_assert($10, CALL $5($6, [116], ($6 + [96])))
	$10 = [1]
	if ( ((*($6 + [96]) & [1]) == 0) ){ goto $label$19 }
	CALL _ZdlPv(*($6 + [104]))
	
.LABEL $label$19
	*(($6 + [88])) = [0]
	*($6 + [72]) = (int_64)-1
	*($6 + [80]) = (int_64)0
	*($6 + [92]) = [0]
	$5 = *($0)
	*($6 + [56]) = $5
	*($6 + [64]) = $5
	*($6 + [48]) = ($6 + [56])
	CALL $188(($6 + [8]), ($6 + [48]), $1)
	$8 = *($6 + [12])
	if ( ($8 == 0) ){ goto $label$20 }
	$10 = ((int_64)*($1) != (int_64)*($8 + [16]))
	
.LABEL $label$20
	*(($6 + [40])) = [0]
	*($6 + [32]) = (int_64)0
	$8 = CALL $393([9975])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$23 }
	*($6 + [32]) = ($8 << [1])
	$7 = (($6 + [32]) | [1])
	if ( $8 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	$11 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($11)
	*($6 + [32]) = ($11 | [1])
	*($6 + [40]) = $7
	*($6 + [36]) = $8
	
.LABEL $label$22
	CALL memcpy($7, [9975], $8)
	
.LABEL $label$21
	*(($7 + $8)) = [0]
	CALL eosio_assert($10, CALL $5($6, [106], ($6 + [32])))
	if ( ((*($6 + [32]) & [1]) == 0) ){ goto $label$24 }
	CALL _ZdlPv(*($6 + [40]))
	
.LABEL $label$24
	$5 = *($0)
	*($6 + [12]) = $1
	*($6 + [16]) = $2
	*($6 + [20]) = $3
	*($6 + [24]) = $4
	*($6 + [8]) = ($6 + [56])
	*($6 + [28]) = ($6 + [128])
	*($6 + [168]) = $5
	if ( ((int_64)*($6 + [56]) == (int_64)CALL current_receiver()) ){ goto $label$25 }
	CALL eosio_assert([0], [19435])
	
.LABEL $label$25
	*($6 + [148]) = ($6 + [8])
	*($6 + [144]) = ($6 + [56])
	*($6 + [152]) = ($6 + [168])
	*(($8 = CALL _Znwj([112])) + [48 align=4]) = (int_64)0
	*($8 + [56 align=4]) = (int_64)0
	*($8 + [64 align=4]) = (int_64)0
	*($8 + [72]) = (int_64)0
	*($8 + [80]) = (int_64)0
	*($8 + [96]) = ($6 + [56])
	CALL $189(($6 + [144]), $8)
	*($6 + [160]) = $8
	$5 = *($8)
	*($6 + [144]) = $5
	$10 = *($8 + [100])
	*($6 + [140]) = $10
	$4 = ($6 + [84])
	$7 = *($4)
	if ( ((uint_32)$7 >= (uint_32)*(($6 + [88]))) ){ goto $label$27 }
	*($7 + [8]) = $5
	*($7 + [16]) = $10
	*($6 + [160]) = [0]
	*($7) = $8
	*($4) = ($7 + [24])
	$8 = *($6 + [160])
	*($6 + [160]) = [0]
	if ( ($8 == 0) ){ goto $label$26 }
	goto $label$8 
	
.LABEL $label$27
	CALL $190(($6 + [80]), ($6 + [160]), ($6 + [144]), ($6 + [140]))
	$8 = *($6 + [160])
	*($6 + [160]) = [0]
	if ( $8 ){ goto $label$8 }
	
.LABEL $label$26
	$10 = *($6 + [80])
	if ( ($10 == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$11
	CALL $359(($6 + [112]))
	
.LABEL $label$10
	CALL $359(($6 + [96]))
	
.LABEL $label$9
	CALL $359(($6 + [32]))
	
.LABEL $label$8
	if ( ((*($8 + [60]) & [1]) == 0) ){ goto $label$28 }
	CALL _ZdlPv(*(($8 + [68])))
	
.LABEL $label$28
	if ( ((*($8 + [48]) & [1]) == 0) ){ goto $label$29 }
	CALL _ZdlPv(*(($8 + [56])))
	
.LABEL $label$29
	CALL _ZdlPv($8)
	$10 = *($6 + [80])
	if ( $10 ){ goto $label$6 }
	
.LABEL $label$7
	$global$0 = ($6 + [176])
	return 
	
.LABEL $label$6
	$4 = ($6 + [84])
	$7 = *($4)
	if ( ((int_32)$7 == (int_32)$10) ){ goto $label$31 }
	
.LOOP $label$32:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$33 }
	if ( ((*($8 + [60]) & [1]) == 0) ){ goto $label$34 }
	CALL _ZdlPv(*(($8 + [68])))
	
.LABEL $label$34
	if ( ((*($8 + [48]) & [1]) == 0) ){ goto $label$35 }
	CALL _ZdlPv(*(($8 + [56])))
	
.LABEL $label$35
	CALL _ZdlPv($8)
	
.LABEL $label$33
	if ( ((int_32)$10 != (int_32)$7) ){ goto $label$32 }
	$8 = *(($6 + [80]))
	goto $label$30 
	
.LABEL $label$31
	$8 = $10
	
.LABEL $label$30
	*($4) = $10
	CALL _ZdlPv($8)
	$global$0 = ($6 + [176])
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $186 (int_32 $0, int_32 $1, int_32 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	CALL require_auth(*($0))
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)*($4 + [4])) ){ goto $label$1 }
	$4 = ($4 + [4])
	
.LOOP $label$2:
	CALL $37($0, $3, *($5), *(($5 + [1])), *(($5 + [2])), [0])
	$5 = ($5 + [3])
	if ( ((int_32)$5 != (int_32)*($4)) ){ goto $label$2 }
	
.LABEL $label$1
}

void .FUNC _ZdaPvSt11align_val_t (int_32 $0, int_32 $1)
{
	CALL _ZdlPvSt11align_val_t($0, $1)
}

void .FUNC $359 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC _ZdaPv (int_32 $0)
{
	CALL _ZdlPv($0)
}

int_32 .FUNC _ZnwjSt11align_val_t (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $395(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [10332])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $395(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC _ZnajSt11align_val_t (int_32 $0, int_32 $1)
{
	return CALL _ZnwjSt11align_val_t($0, $1)
}

void .FUNC _ZdlPvSt11align_val_t (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $400($0)
	
.LABEL $label$1
}

int_32 .FUNC $350 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	*($0) = (int_64)0
	*($0 + [8]) = [0]
	$2 = (*($1 + [4]) - *($1))
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$5 }
	$4 = CALL _Znwj($2)
	*(($3 = ($0 + [4]))) = $4
	*(($0 + [8])) = ($4 + (int_32($2 >> [1]) << [1]))
	*($0) = $4
	$5 = *($1)
	$2 = (*(($1 + [4])) - $5)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($4, $5, $2)
	*($3) = (*($3) + $2)
	
.LABEL $label$6
	*($0 + [12 align=4]) = (int_64)0
	*(($0 + [20])) = [0]
	$2 = (*(($1 + [16])) - *($1 + [12]))
	if ( ($2 == 0) ){ goto $label$8 }
	$4 = int_32($2 >> [4])
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$4 }
	$2 = CALL _Znwj($2)
	*(($6 = ($0 + [16]))) = $2
	*(($0 + [20])) = ($2 + ($4 << [4]))
	*(($0 + [12])) = $2
	$7 = *(($1 + [16]))
	$4 = *(($1 + [12]))
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$8 }
	
.LOOP $label$9:
	*($2 + [4]) = [0]
	*(($5 = ($2 + [8]))) = (int_64)0
	*($2) = *($4)
	$9 = ($4 + [4])
	$8 = ($4 + [8])
	$3 = (*($8) - *($9))
	$10 = ((int_32)$3 / (int_32)[24])
	if ( ($3 == 0) ){ goto $label$10 }
	$11 = ($2 + [4])
	if ( ((uint_32)$10 >= (uint_32)[178956971]) ){ goto $label$7 }
	$3 = CALL _Znwj($3)
	*($11) = $3
	*(($2 + [12])) = ($3 + ((int_32)$10 * (int_32)[24]))
	*($5) = $3
	$10 = *($9)
	$2 = (*($8) - $10)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($3, $10, $2)
	*($5) = (*($5) + ((int_32)((uint_32)$2 / (uint_32)[24]) * (int_32)[24]))
	
.LABEL $label$10
	$2 = (*($6) + [16])
	*($6) = $2
	$4 = ($4 + [16])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$9 }
	
.LABEL $label$8
	*($0 + [24 align=4]) = (int_64)0
	*(($0 + [32])) = [0]
	$2 = (*(($1 + [28])) - *($1 + [24]))
	$4 = ((int_32)$2 / (int_32)[112])
	if ( ($2 == 0) ){ goto $label$11 }
	if ( ((uint_32)$4 >= (uint_32)[38347923]) ){ goto $label$3 }
	$2 = CALL _Znwj($2)
	*(($0 + [24])) = $2
	*(($0 + [32])) = ($2 + ((int_32)$4 * (int_32)[112]))
	*(($4 = ($0 + [28]))) = $2
	$5 = *(($1 + [24]))
	$3 = (*(($1 + [28])) - $5)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$11 }
	CALL memcpy($2, $5, $3)
	*($4) = (*($4) + ((int_32)((uint_32)$3 / (uint_32)[112]) * (int_32)[112]))
	
.LABEL $label$11
	*($0 + [36 align=4]) = (int_64)0
	*(($0 + [44])) = [0]
	$2 = (*(($1 + [40])) - *($1 + [36]))
	$4 = ((int_32)$2 / (int_32)[112])
	if ( ($2 == 0) ){ goto $label$12 }
	if ( ((uint_32)$4 >= (uint_32)[38347923]) ){ goto $label$2 }
	$2 = CALL _Znwj($2)
	*(($0 + [36])) = $2
	*(($0 + [44])) = ($2 + ((int_32)$4 * (int_32)[112]))
	*(($4 = ($0 + [40]))) = $2
	$5 = *(($1 + [36]))
	$3 = (*(($1 + [40])) - $5)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$12 }
	CALL memcpy($2, $5, $3)
	*($4) = (*($4) + ((int_32)((uint_32)$3 / (uint_32)[112]) * (int_32)[112]))
	
.LABEL $label$12
	*($0 + [48 align=4]) = (int_64)0
	*(($0 + [56])) = [0]
	$2 = (*(($1 + [52])) - *($1 + [48]))
	$4 = ((int_32)$2 / (int_32)[56])
	if ( ($2 == 0) ){ goto $label$13 }
	if ( ((uint_32)$4 >= (uint_32)[76695845]) ){ goto $label$1 }
	$2 = CALL _Znwj($2)
	*(($0 + [48])) = $2
	*(($0 + [56])) = ($2 + ((int_32)$4 * (int_32)[56]))
	*(($4 = ($0 + [52]))) = $2
	$5 = *(($1 + [48]))
	$3 = (*(($1 + [52])) - $5)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$13 }
	CALL memcpy($2, $5, $3)
	*($4) = (*($4) + ((int_32)((uint_32)$3 / (uint_32)[56]) * (int_32)[56]))
	
.LABEL $label$13
	return $0
	
.LABEL $label$7
	CALL $377($11)
	
.LABEL $label$5
	CALL $377($0)
	
.LABEL $label$4
	CALL $377(($0 + [12]))
	
.LABEL $label$3
	CALL $377(($0 + [24]))
	
.LABEL $label$2
	CALL $377(($0 + [36]))
	
.LABEL $label$1
	CALL $377(($0 + [48]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	return (unreachable)
}

int_32 .FUNC _Znwj (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $397($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [10332])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $397($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC _Znaj (int_32 $0)
{
	return CALL _Znwj($0)
}

void .FUNC _ZdlPv (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $400($0)
	
.LABEL $label$1
}

void .FUNC $29 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_64 $17
	int_64 $18
	$7 = ($global$0 - [432])
	$global$0 = $7
	CALL require_auth(*($0))
	*(($7 + [424])) = [0]
	*($7 + [400]) = $1
	*($7 + [408]) = (int_64)-1
	*($7 + [416]) = (int_64)0
	$8 = *($0)
	*($7 + [392]) = $8
	$9 = [0]
	$10 = CALL db_find_i64($8, $1, (int_64)-3913339338187833344, *($3))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $12(($7 + [392]), $10)
	if ( ((int_32)*($9 + [88]) == (int_32)($7 + [392])) ){ goto $label$1 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$1
	*(($7 + [384])) = [0]
	*($7 + [376]) = (int_64)0
	$10 = CALL $393([8539])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$6 }
	$11 = ((int_32)$9 != (int_32)[0])
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$9 }
	*($7 + [376]) = ($10 << [1])
	$12 = (($7 + [376]) | [1])
	if ( $10 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$13 = (($10 + [16]) & [-16])
	$12 = CALL _Znwj($13)
	*($7 + [376]) = ($13 | [1])
	*($7 + [384]) = $12
	*($7 + [380]) = $10
	
.LABEL $label$8
	CALL memcpy($12, [8539], $10)
	
.LABEL $label$7
	$13 = [0]
	*(($12 + $10)) = [0]
	CALL eosio_assert($11, CALL $5($7, [101], ($7 + [376])))
	if ( ((*($7 + [376]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*($7 + [384]))
	
.LABEL $label$10
	CALL $376(($7 + [360]), $2)
	$10 = CALL $371(($7 + [360]), [0], [8564])
	$12 = ($10 + [8])
	*((($7 + [200]) + [8])) = *($12)
	*($7 + [200]) = *($10)
	*($10) = (int_64)0
	*($12) = [0]
	$10 = ($10 & [1])
	$10 = *($7 + [200])
	$11 = ($10 & [1])
	$10 = *($9 + [32])
	$14 = uint_32($10 >> [1])
	$15 = ( *(($9 + [36])) ? $14 : $11 )
	if ( ((int_32)$15 != (int_32)( *($7 + [204]) ? uint_32($10 >> [1]) : $10 )) ){ goto $label$11 }
	$13 = [1]
	$10 = ( *($7 + [208]) ? (($7 + [200]) | [1]) : $10 )
	$12 = (($9 + [32]) + [1])
	if ( $11 ){ goto $label$13 }
	if ( ($15 == 0) ){ goto $label$11 }
	$11 = ([0] - $14)
	
.LOOP $label$14:
	if ( ((int_32)*($12) != (int_32)*($10)) ){ goto $label$12 }
	$13 = [1]
	$10 = ($10 + [1])
	$12 = ($12 + [1])
	$11 = ($11 + [1])
	if ( $11 ){ goto $label$14 }
	goto $label$11 
	
.LABEL $label$13
	if ( ($15 == 0) ){ goto $label$11 }
	$13 = (CALL $392(( *(($9 + [40])) ? $12 : $11 ), $10, $15) == 0)
	goto $label$11 
	
.LABEL $label$12
	$13 = [0]
	
.LABEL $label$11
	*((($7 + [344]) + [8])) = [0]
	*($7 + [344]) = (int_64)0
	$10 = CALL $393([8574])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$17 }
	*($7 + [344]) = ($10 << [1])
	$12 = (($7 + [344]) | [1])
	if ( $10 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$11 = (($10 + [16]) & [-16])
	$12 = CALL _Znwj($11)
	*($7 + [344]) = ($11 | [1])
	*($7 + [352]) = $12
	*($7 + [348]) = $10
	
.LABEL $label$16
	CALL memcpy($12, [8574], $10)
	
.LABEL $label$15
	*(($12 + $10)) = [0]
	CALL eosio_assert($13, CALL $5($7, [102], ($7 + [344])))
	if ( (*($7 + [344]) & [1]) ){ goto $label$19 }
	if ( (*($7 + [200]) & [1]) ){ goto $label$18 }
	goto $label$4 
	
.LABEL $label$19
	CALL _ZdlPv(*($7 + [352]))
	if ( ((*($7 + [200]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$18
	CALL _ZdlPv(*($7 + [208]))
	if ( (*($7 + [360]) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	CALL $359(($7 + [376]))
	
.LABEL $label$5
	CALL $359(($7 + [344]))
	
.LABEL $label$4
	if ( ((*($7 + [360]) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($7 + [368]))
	
.LABEL $label$2
	*(($10 = (($7 + [304]) + [24]))) = *(($3 + [24]))
	*(($12 = (($7 + [304]) + [16]))) = *(($3 + [16]))
	*(($13 = (($7 + [272]) + [16]))) = *(($4 + [16]))
	*(($11 = (($7 + [272]) + [24]))) = *(($4 + [24]))
	*(($15 = (($7 + [240]) + [16]))) = *(($5 + [16]))
	*(($14 = (($7 + [240]) + [24]))) = *(($5 + [24]))
	*($7 + [312]) = *(($3 + [8]))
	*($7 + [304]) = *($3)
	*($7 + [272]) = *($4)
	*($7 + [280]) = *(($4 + [8]))
	*($7 + [240]) = *($5)
	*($7 + [248]) = *(($5 + [8]))
	*((($7 + [64]) + [24])) = *($10)
	$8 = *($9 + [80])
	*((($7 + [64]) + [16])) = *($12)
	*((($7 + [32]) + [24])) = *($11)
	*((($7 + [32]) + [16])) = *($13)
	*(($7 + [24])) = *($14)
	*(($7 + [16])) = *($15)
	*($7 + [72]) = *($7 + [312])
	*($7 + [64]) = *($7 + [304])
	*($7 + [40]) = *($7 + [280])
	*($7 + [32]) = *($7 + [272])
	*($7 + [8]) = *($7 + [248])
	*($7) = *($7 + [240])
	$16 = CALL $17($0, $1, ($7 + [64]), ($7 + [32]), $7, $8)
	*(($7 + [232])) = [0]
	*(($7 + [238])) = [0]
	*($7 + [216]) = (int_64)-1
	*($7 + [224]) = (int_64)0
	*($7 + [236]) = [0]
	$8 = *($0)
	*($7 + [200]) = $8
	*($7 + [208]) = $8
	$10 = [0]
	$12 = CALL db_find_i64($8, $8, (int_64)-3020371566920728576, $1)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$20 }
	$10 = CALL $10(($7 + [200]), $12)
	if ( ((int_32)*($10 + [88]) == (int_32)($7 + [200])) ){ goto $label$20 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$20
	*((($7 + [184]) + [8])) = [0]
	*($7 + [184]) = (int_64)0
	$12 = CALL $393([8600])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$25 }
	$3 = ((int_32)$10 != (int_32)[0])
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$28 }
	*($7 + [184]) = ($12 << [1])
	$9 = (($7 + [184]) | [1])
	if ( $12 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	$13 = (($12 + [16]) & [-16])
	$9 = CALL _Znwj($13)
	*($7 + [184]) = ($13 | [1])
	*($7 + [192]) = $9
	*($7 + [188]) = $12
	
.LABEL $label$27
	CALL memcpy($9, [8600], $12)
	
.LABEL $label$26
	*(($9 + $12)) = [0]
	CALL eosio_assert($3, CALL $5($7, [163], ($7 + [184])))
	if ( ((*($7 + [184]) & [1]) == 0) ){ goto $label$29 }
	CALL _ZdlPv(*($7 + [192]))
	
.LABEL $label$29
	$8 = *($10 + [8])
	*($7 + [176]) = $8
	$17 = *($10 + [16])
	*($7 + [168]) = $17
	$18 = *($10 + [24])
	*($7 + [160]) = $18
	if ( ((int_64)$2 == (int_64)3) ){ goto $label$44 }
	if ( ((int_64)$2 == (int_64)2) ){ goto $label$45 }
	if ( ((int_64)$2 != (int_64)1) ){ goto $label$43 }
	*(($7 + [152])) = [0]
	*($7 + [144]) = (int_64)0
	$12 = CALL $393([8617])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$24 }
	$3 = ((int_64)$8 != (int_64)0)
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$36 }
	*($7 + [144]) = ($12 << [1])
	$9 = (($7 + [144]) | [1])
	if ( $12 ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$45
	*(($7 + [136])) = [0]
	*($7 + [128]) = (int_64)0
	$12 = CALL $393([8638])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$23 }
	$3 = ((int_64)$17 != (int_64)0)
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$42 }
	*($7 + [128]) = ($12 << [1])
	$9 = (($7 + [128]) | [1])
	if ( $12 ){ goto $label$41 }
	goto $label$40 
	
.LABEL $label$44
	*(($7 + [120])) = [0]
	*($7 + [112]) = (int_64)0
	$12 = CALL $393([8657])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$22 }
	$3 = ((int_64)$18 != (int_64)0)
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$39 }
	*($7 + [112]) = ($12 << [1])
	$9 = (($7 + [112]) | [1])
	if ( $12 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$43
	*(($7 + [104])) = [0]
	*($7 + [96]) = (int_64)0
	$12 = CALL $393([8681])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$21 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$33 }
	*($7 + [96]) = ($12 << [1])
	$9 = (($7 + [96]) | [1])
	if ( $12 ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$42
	$13 = (($12 + [16]) & [-16])
	$9 = CALL _Znwj($13)
	*($7 + [128]) = ($13 | [1])
	*($7 + [136]) = $9
	*($7 + [132]) = $12
	
.LABEL $label$41
	CALL memcpy($9, [8638], $12)
	
.LABEL $label$40
	*(($9 + $12)) = [0]
	CALL eosio_assert($3, CALL $5($7, [104], ($7 + [128])))
	if ( ((*($7 + [128]) & [1]) == 0) ){ goto $label$46 }
	CALL _ZdlPv(*($7 + [136]))
	
.LABEL $label$46
	*($7 + [168]) = ((int_64)*($7 + [168]) + (int_64)-1)
	goto $label$30 
	
.LABEL $label$39
	$13 = (($12 + [16]) & [-16])
	$9 = CALL _Znwj($13)
	*($7 + [112]) = ($13 | [1])
	*($7 + [120]) = $9
	*($7 + [116]) = $12
	
.LABEL $label$38
	CALL memcpy($9, [8657], $12)
	
.LABEL $label$37
	*(($9 + $12)) = [0]
	CALL eosio_assert($3, CALL $5($7, [105], ($7 + [112])))
	if ( ((*($7 + [112]) & [1]) == 0) ){ goto $label$47 }
	CALL _ZdlPv(*($7 + [120]))
	
.LABEL $label$47
	*($7 + [160]) = ((int_64)*($7 + [160]) + (int_64)-1)
	goto $label$30 
	
.LABEL $label$36
	$13 = (($12 + [16]) & [-16])
	$9 = CALL _Znwj($13)
	*($7 + [144]) = ($13 | [1])
	*($7 + [152]) = $9
	*($7 + [148]) = $12
	
.LABEL $label$35
	CALL memcpy($9, [8617], $12)
	
.LABEL $label$34
	*(($9 + $12)) = [0]
	CALL eosio_assert($3, CALL $5($7, [103], ($7 + [144])))
	if ( ((*($7 + [144]) & [1]) == 0) ){ goto $label$48 }
	CALL _ZdlPv(*($7 + [152]))
	
.LABEL $label$48
	*($7 + [176]) = ((int_64)*($7 + [176]) + (int_64)-1)
	goto $label$30 
	
.LABEL $label$33
	$3 = (($12 + [16]) & [-16])
	$9 = CALL _Znwj($3)
	*($7 + [96]) = ($3 | [1])
	*($7 + [104]) = $9
	*($7 + [100]) = $12
	
.LABEL $label$32
	CALL memcpy($9, [8681], $12)
	
.LABEL $label$31
	*(($9 + $12)) = [0]
	CALL eosio_assert([0], CALL $5($7, [106], ($7 + [96])))
	if ( ((*($7 + [96]) & [1]) == 0) ){ goto $label$30 }
	CALL _ZdlPv(*($7 + [104]))
	
.LABEL $label$30
	$8 = *($0)
	*($7 + [364]) = ($7 + [168])
	*($7 + [360]) = ($7 + [176])
	*($7 + [368]) = ($7 + [160])
	if ( $10 ){ goto $label$49 }
	CALL eosio_assert([0], [19537])
	
.LABEL $label$49
	CALL $30(($7 + [200]), $10, $8, ($7 + [360]))
	CALL $31($0, $1, (CASTING uint_32)(uint_64 $2), $16, $6)
	$0 = *($7 + [224])
	if ( ($0 == 0) ){ goto $label$50 }
	$9 = ($7 + [228])
	$10 = *($9)
	if ( ((int_32)$10 == (int_32)$0) ){ goto $label$52 }
	
.LOOP $label$53:
	$10 = ($10 + [-24])
	$12 = *($10)
	*($10) = [0]
	if ( ($12 == 0) ){ goto $label$54 }
	CALL _ZdlPv($12)
	
.LABEL $label$54
	if ( ((int_32)$0 != (int_32)$10) ){ goto $label$53 }
	$10 = *(($7 + [224]))
	goto $label$51 
	
.LABEL $label$52
	$10 = $0
	
.LABEL $label$51
	*($9) = $0
	CALL _ZdlPv($10)
	
.LABEL $label$50
	$0 = *($7 + [416])
	if ( ($0 == 0) ){ goto $label$55 }
	$9 = ($7 + [420])
	$10 = *($9)
	if ( ((int_32)$10 == (int_32)$0) ){ goto $label$57 }
	
.LOOP $label$58:
	$10 = ($10 + [-24])
	$12 = *($10)
	*($10) = [0]
	if ( ($12 == 0) ){ goto $label$59 }
	if ( ((*($12 + [32]) & [1]) == 0) ){ goto $label$60 }
	CALL _ZdlPv(*(($12 + [40])))
	
.LABEL $label$60
	CALL _ZdlPv($12)
	
.LABEL $label$59
	if ( ((int_32)$0 != (int_32)$10) ){ goto $label$58 }
	$10 = *(($7 + [416]))
	goto $label$56 
	
.LABEL $label$57
	$10 = $0
	
.LABEL $label$56
	*($9) = $0
	CALL _ZdlPv($10)
	
.LABEL $label$55
	$global$0 = ($7 + [432])
	return (unreachable)
	
.LABEL $label$25
	CALL $359(($7 + [184]))
	
.LABEL $label$24
	CALL $359(($7 + [144]))
	
.LABEL $label$23
	CALL $359(($7 + [128]))
	
.LABEL $label$22
	CALL $359(($7 + [112]))
	
.LABEL $label$21
	CALL $359(($7 + [96]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $310 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[31]) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [32])
	*(($4 = ($4 + [4]))) = (*($4) + [32])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$5 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [19214])
	$3 = *($5)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [32])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [19214])
	$1 = *(($0 + [4]))
	
.LABEL $label$10
	CALL memcpy($4, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $311 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[31]) ){ goto $label$4 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [32])
	*(($4 = ($4 + [4]))) = (*($4) + [32])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [18965])
	$3 = *($5)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [32])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [18965])
	$1 = *(($0 + [4]))
	
.LABEL $label$10
	CALL memcpy($1, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $21 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	*($1 + [10]) = (*(*(*($3) + [4]) + [10]) + [-1])
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-16])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-2])
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = ($1 + [8])
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [10])
	*($5 + [44]) = ($1 + [12])
	CALL $135(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [20]), $2, $4, [14])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

void .FUNC $20 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [96])
	$global$0 = $3
	*($3 + [62]) = $2
	CALL $22($0, $1, $2)
	*(($3 + [48])) = [0]
	*($3 + [24]) = $1
	*($3 + [32]) = (int_64)-1
	*($3 + [40]) = (int_64)0
	$4 = *($0)
	*($3 + [16]) = $4
	$2 = CALL db_find_i64($4, $1, (int_64)-3020377498459275264, (CASTING uint_64)(uint_32 $2))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	$2 = CALL $23(($3 + [16]), $2)
	if ( ((int_32)*($2 + [16]) == (int_32)($3 + [16])) ){ goto $label$4 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$4
	CALL $24(($3 + [16]), $2, *($0))
	CALL $25($0, $1)
	$5 = *($3 + [40])
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$6 = *($0)
	*($3 + [8]) = ($3 + [62])
	*($3 + [88]) = $6
	if ( ((int_64)$4 == (int_64)CALL current_receiver()) ){ goto $label$5 }
	CALL eosio_assert([0], [19435])
	
.LABEL $label$5
	*($3 + [68]) = ($3 + [8])
	*($3 + [64]) = ($3 + [16])
	*($3 + [72]) = ($3 + [88])
	*(($2 = CALL _Znwj([28])) + [12]) = [0]
	*($2 + [4 align=4]) = (int_64)0
	*($2 + [16]) = ($3 + [16])
	CALL $26(($3 + [64]), $2)
	*($3 + [80]) = $2
	$5 = *($2)
	*($3 + [63]) = $5
	$7 = *($2 + [20])
	*($3 + [64]) = $7
	$8 = (($3 + [16]) + [28])
	$9 = *($8)
	if ( ((uint_32)$9 >= (uint_32)*(($3 + [48]))) ){ goto $label$8 }
	*($9 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	*($9 + [16]) = $7
	*($3 + [80]) = [0]
	*($9) = $2
	*($8) = ($9 + [24])
	$2 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( ($2 == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $27(($3 + [40]), ($3 + [80]), ($3 + [63]), ($3 + [64]))
	$2 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( $2 ){ goto $label$6 }
	
.LABEL $label$7
	CALL $25($0, $1)
	$5 = *($3 + [40])
	if ( ($5 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$6
	$9 = *($2 + [4])
	if ( ($9 == 0) ){ goto $label$9 }
	*(($2 + [8])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$9
	CALL _ZdlPv($2)
	CALL $25($0, $1)
	$5 = *($3 + [40])
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($3 + [44])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$13 }
	$9 = *($2 + [4])
	if ( ($9 == 0) ){ goto $label$14 }
	*(($2 + [8])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$14
	CALL _ZdlPv($2)
	
.LABEL $label$13
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($3 + [40]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $5
	
.LABEL $label$10
	*($7) = $5
	CALL _ZdlPv($0)
	
.LABEL $label$1
	$global$0 = ($3 + [96])
}

int_32 .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$6 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $4
	$7 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [19191])
	
.LABEL $label$5
	$4 = CALL $397($6)
	$7 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $6)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $6)
	*(($5 = CALL _Znwj([28])) + [12]) = [0]
	*($5 + [4 align=4]) = (int_64)0
	*($5 + [16]) = $0
	$8 = ($5 + [4])
	$2 = $4
	if ( $6 ){ goto $label$7 }
	CALL eosio_assert([0], [19214])
	$2 = *($3 + [20])
	
.LABEL $label$7
	CALL memcpy($5, $2, [1])
	*($3 + [20]) = ($2 + [1])
	CALL $291(($3 + [16]), $8)
	*($5 + [20]) = $1
	*($3 + [8]) = $5
	$2 = *($5)
	*($3 + [7]) = $2
	*($3) = $1
	$6 = *(($0 + [28]))
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($6 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $2) & (int_64)255)
	*($6 + [16]) = $1
	*($3 + [8]) = [0]
	*($6) = $5
	*(($0 + [28])) = ($6 + [24])
	if ( $7 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $27(($0 + [24]), ($3 + [8]), ($3 + [7]), $3)
	if ( ($7 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $400($4)
	
.LABEL $label$8
	$1 = *($3 + [8])
	*($3 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	$4 = *($1 + [4])
	if ( ($4 == 0) ){ goto $label$12 }
	*(($1 + [8])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$12
	CALL _ZdlPv($1)
	
.LABEL $label$11
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $22 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [96])
	$global$0 = $3
	*($3 + [59]) = $2
	*(($3 + [48])) = [0]
	*($3 + [32]) = (int_64)-1
	$4 = *($0)
	*($3 + [16]) = $4
	*($3 + [24]) = $1
	*($3 + [40]) = (int_64)0
	$2 = CALL db_lowerbound_i64($4, $1, (int_64)-7297964030780506112, (int_64)0)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$3 }
	$2 = CALL $32(($3 + [16]), $2)
	$1 = *($0)
	*($3 + [64]) = ($3 + [59])
	CALL $33(($3 + [16]), $2, $1, ($3 + [64]))
	$5 = *($3 + [40])
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$1 = *($0)
	*($3 + [12]) = ($3 + [59])
	*($3 + [8]) = ($3 + [16])
	*($3 + [88]) = $1
	if ( ((int_64)$4 == (int_64)CALL current_receiver()) ){ goto $label$4 }
	CALL eosio_assert([0], [19435])
	
.LABEL $label$4
	*($3 + [68]) = ($3 + [8])
	*($3 + [64]) = ($3 + [16])
	*($3 + [72]) = ($3 + [88])
	*(($0 = CALL _Znwj([40])) + [16]) = [0]
	*($0 + [8 align=4]) = (int_64)0
	*($0 + [24]) = ($3 + [16])
	CALL $34(($3 + [64]), $0)
	*($3 + [80]) = $0
	$1 = *($0)
	*($3 + [64]) = $1
	$6 = *($0 + [28])
	*($3 + [60]) = $6
	$5 = ($3 + [44])
	$2 = *($5)
	if ( ((uint_32)$2 >= (uint_32)*(($3 + [48]))) ){ goto $label$7 }
	*($2 + [8]) = $1
	*($2 + [16]) = $6
	*($3 + [80]) = [0]
	*($2) = $0
	*($5) = ($2 + [24])
	$0 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $35(($3 + [40]), ($3 + [80]), ($3 + [64]), ($3 + [60]))
	$0 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( $0 ){ goto $label$5 }
	
.LABEL $label$6
	$5 = *($3 + [40])
	if ( ($5 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	$2 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$8 }
	*(($0 + [12])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$8
	CALL _ZdlPv($0)
	$5 = *($3 + [40])
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($3 + [44])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$10 }
	
.LOOP $label$11:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$12 }
	$6 = *($2 + [8])
	if ( ($6 == 0) ){ goto $label$13 }
	*(($2 + [12])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$13
	CALL _ZdlPv($2)
	
.LABEL $label$12
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$11 }
	$0 = *(($3 + [40]))
	goto $label$9 
	
.LABEL $label$10
	$0 = $5
	
.LABEL $label$9
	*($7) = $5
	CALL _ZdlPv($0)
	
.LABEL $label$1
	$global$0 = ($3 + [96])
}

void .FUNC $25 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [112])
	$global$0 = $2
	$3 = [0]
	*($2 + [111]) = [0]
	*((($2 + [64]) + [32])) = [0]
	*($2 + [72]) = $1
	*($2 + [80]) = (int_64)-1
	$4 = *($0)
	*($2 + [64]) = $4
	*($2 + [88]) = (int_64)0
	$5 = CALL db_lowerbound_i64($4, $1, (int_64)-3020377498459275264, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	$5 = CALL $23(($2 + [64]), $5)
	if ( ((uint_32)*($5) > (uint_32)[239]) ){ goto $label$3 }
	$6 = [2]
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	$6 = [3]
	
.LABEL $label$1
	
.LOOP $label$4:
	goto $label$60 
	
.LABEL $label$62
	$5 = CALL $23(($2 + [64]), $5)
	if ( ((uint_32)*($5) > (uint_32)[239]) ){ goto $label$24 }
	$6 = [2]
	goto $label$4 
	
.LABEL $label$61
	*($2 + [111]) = (*($2 + [111]) + [1])
	$6 = [0]
	goto $label$4 
	
.LABEL $label$60
	$5 = CALL db_next_i64(*($5 + [20]), ($2 + [24]))
	if ( ((int_32)$5 >= (int_32)[0]) ){ goto $label$25 }
	$6 = [3]
	goto $label$4 
	
.LABEL $label$59
	*((($2 + [24]) + [32])) = [0]
	*(($2 + [62])) = [0]
	*($2 + [40]) = (int_64)-1
	*($2 + [48]) = (int_64)0
	*($2 + [60]) = [0]
	$4 = *($0)
	*($2 + [24]) = $4
	*($2 + [32]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)-3020371566920728576, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$23 }
	$6 = [4]
	goto $label$4 
	
.LABEL $label$58
	$3 = CALL $10(($2 + [24]), $5)
	if ( ((int_32)*($3 + [88]) == (int_32)($2 + [24])) ){ goto $label$22 }
	$6 = [5]
	goto $label$4 
	
.LABEL $label$57
	CALL eosio_assert([0], [19486])
	$6 = [6]
	goto $label$4 
	
.LABEL $label$56
	*(($2 + [16])) = [0]
	*($2 + [8]) = (int_64)0
	$5 = CALL $393([9258])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$21 }
	$6 = [7]
	goto $label$4 
	
.LABEL $label$55
	$7 = ((int_32)$3 != (int_32)[0])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$20 }
	$6 = [35]
	goto $label$4 
	
.LABEL $label$54
	*($2 + [8]) = ($5 << [1])
	$8 = (($2 + [8]) | [1])
	if ( $5 ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$53
	$9 = (($5 + [16]) & [-16])
	$8 = CALL _Znwj($9)
	*($2 + [8]) = ($9 | [1])
	*($2 + [16]) = $8
	*($2 + [12]) = $5
	$6 = [9]
	goto $label$4 
	
.LABEL $label$52
	CALL memcpy($8, [9258], $5)
	$6 = [10]
	goto $label$4 
	
.LABEL $label$51
	*(($8 + $5)) = [0]
	CALL eosio_assert($7, CALL $5($2, [132], ($2 + [8])))
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$17 }
	$6 = [11]
	goto $label$4 
	
.LABEL $label$50
	CALL _ZdlPv(*($2 + [16]))
	$6 = [12]
	goto $label$4 
	
.LABEL $label$49
	$1 = *($0)
	*($2) = ($2 + [111])
	if ( $3 ){ goto $label$16 }
	$6 = [34]
	goto $label$4 
	
.LABEL $label$48
	CALL eosio_assert([0], [19537])
	$6 = [13]
	goto $label$4 
	
.LABEL $label$47
	CALL $36(($2 + [24]), $3, $1, $2)
	$0 = *($2 + [48])
	if ( ($0 == 0) ){ goto $label$15 }
	$6 = [14]
	goto $label$4 
	
.LABEL $label$46
	$8 = ($2 + [52])
	$5 = *($8)
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$14 }
	$6 = [15]
	goto $label$4 
	
.LABEL $label$45
	$6 = [16]
	goto $label$4 
	
.LABEL $label$44
	$5 = ($5 + [-24])
	$3 = *($5)
	*($5) = [0]
	if ( ($3 == 0) ){ goto $label$12 }
	$6 = [17]
	goto $label$4 
	
.LABEL $label$43
	CALL _ZdlPv($3)
	$6 = [18]
	goto $label$4 
	
.LABEL $label$42
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$13 }
	$6 = [19]
	goto $label$4 
	
.LABEL $label$41
	$5 = *(($2 + [48]))
	goto $label$11 
	
.LABEL $label$40
	$5 = $0
	$6 = [20]
	goto $label$4 
	
.LABEL $label$39
	*($8) = $0
	CALL _ZdlPv($5)
	$6 = [21]
	goto $label$4 
	
.LABEL $label$38
	$8 = *($2 + [88])
	if ( ($8 == 0) ){ goto $label$10 }
	$6 = [22]
	goto $label$4 
	
.LABEL $label$37
	$7 = ($2 + [92])
	$5 = *($7)
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$9 }
	$6 = [23]
	goto $label$4 
	
.LABEL $label$36
	$6 = [24]
	goto $label$4 
	
.LABEL $label$35
	$5 = ($5 + [-24])
	$3 = *($5)
	*($5) = [0]
	if ( ($3 == 0) ){ goto $label$7 }
	$6 = [25]
	goto $label$4 
	
.LABEL $label$34
	$0 = *($3 + [4])
	if ( ($0 == 0) ){ goto $label$6 }
	$6 = [26]
	goto $label$4 
	
.LABEL $label$33
	*(($3 + [8])) = $0
	CALL _ZdlPv($0)
	$6 = [27]
	goto $label$4 
	
.LABEL $label$32
	CALL _ZdlPv($3)
	$6 = [28]
	goto $label$4 
	
.LABEL $label$31
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$8 }
	$6 = [29]
	goto $label$4 
	
.LABEL $label$30
	$5 = *(($2 + [88]))
	goto $label$5 
	
.LABEL $label$29
	$5 = $8
	$6 = [30]
	goto $label$4 
	
.LABEL $label$28
	*($7) = $8
	CALL _ZdlPv($5)
	$6 = [31]
	goto $label$4 
	
.LABEL $label$27
	$global$0 = ($2 + [112])
	return (unreachable)
	
.LABEL $label$26
	CALL $359(($2 + [8]))
	
.LABEL $label$25
	$6 = [1]
	goto $label$4 
	
.LABEL $label$24
	$6 = [0]
	goto $label$4 
	
.LABEL $label$23
	$6 = [6]
	goto $label$4 
	
.LABEL $label$22
	$6 = [6]
	goto $label$4 
	
.LABEL $label$21
	$6 = [36]
	goto $label$4 
	
.LABEL $label$20
	$6 = [8]
	goto $label$4 
	
.LABEL $label$19
	$6 = [10]
	goto $label$4 
	
.LABEL $label$18
	$6 = [9]
	goto $label$4 
	
.LABEL $label$17
	$6 = [12]
	goto $label$4 
	
.LABEL $label$16
	$6 = [13]
	goto $label$4 
	
.LABEL $label$15
	$6 = [21]
	goto $label$4 
	
.LABEL $label$14
	$6 = [33]
	goto $label$4 
	
.LABEL $label$13
	$6 = [16]
	goto $label$4 
	
.LABEL $label$12
	$6 = [18]
	goto $label$4 
	
.LABEL $label$11
	$6 = [20]
	goto $label$4 
	
.LABEL $label$10
	$6 = [31]
	goto $label$4 
	
.LABEL $label$9
	$6 = [32]
	goto $label$4 
	
.LABEL $label$8
	$6 = [24]
	goto $label$4 
	
.LABEL $label$7
	$6 = [28]
	goto $label$4 
	
.LABEL $label$6
	$6 = [27]
	goto $label$4 
	
.LABEL $label$5
	$6 = [30]
	goto $label$4 
	$6
}

void .FUNC $24 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	$5 = *($1)
	$7 = *(($1 + [8]))
	$6 = *($1 + [4])
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	
.LOOP $label$6:
	if ( ((int_64)*($6) == (int_64)1) ){ goto $label$5 }
	$6 = ($6 + [24])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$6 }
	*($4 + [16]) = (int_64)1
	$6 = ($4 + [16])
	goto $label$4 
	
.LABEL $label$5
	*($4 + [16]) = (int_64)1
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$7 }
	*($4 + [32]) = *($6 + [16])
	*($4 + [24]) = ((int_64)*($6 + [8]) + (int_64)1)
	$8 = ($6 + [24])
	$7 = ($7 - $8)
	$9 = ((int_32)$7 / (int_32)[24])
	if ( ($7 == 0) ){ goto $label$8 }
	CALL memmove($6, $8, $7)
	
.LABEL $label$8
	$7 = ($6 + ((int_32)$9 * (int_32)[24]))
	*(($1 + [8])) = $7
	$6 = ($4 + [16])
	goto $label$3 
	
.LABEL $label$7
	$6 = ($4 + [16])
	
.LABEL $label$4
	*($4 + [32]) = (int_64)0
	*($4 + [24]) = (int_64)1
	
.LABEL $label$3
	if ( ((int_32)$7 == (int_32)*(($1 + [12]))) ){ goto $label$10 }
	*($7) = *($6)
	*(($7 + [16])) = *(($6 + [16]))
	*(($7 + [8])) = *(($6 + [8]))
	*(($6 = ($1 + [8]))) = (*($6) + [24])
	goto $label$9 
	
.LABEL $label$10
	CALL $294(($1 + [4]), ($4 + [16]))
	
.LABEL $label$9
	$10 = (CASTING uint_64)(uint_32 $5)
	if ( ((int_32)($5 & [255]) == (int_32)*($1)) ){ goto $label$11 }
	CALL eosio_assert([0], [19669])
	
.LABEL $label$11
	$11 = ((int_64)$10 & (int_64)255)
	$5 = *($1 + [4])
	$7 = *($1 + [8])
	$9 = ($7 - $5)
	$10 = (CASTING uint_64)(uint_32 ((int_32)$9 / (int_32)[24]))
	$6 = [25]
	
.LOOP $label$12:
	$6 = ($6 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$16 }
	$9 = (((int_32)((uint_32)($9 + [-24]) / (uint_32)[24]) * (int_32)[24]) + $6)
	if ( ($9 <= [513]) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$9 = ($6 + [-24])
	if ( ((uint_32)$9 >= (uint_32)[513]) ){ goto $label$14 }
	
.LABEL $label$15
	$3 = ($3 - (($9 + [15]) & [-16]))
	$global$0 = $3
	goto $label$13 
	
.LABEL $label$14
	$3 = CALL $397($9)
	
.LABEL $label$13
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $9)
	$6 = $3
	if ( ((int_32)$9 > (int_32)[0]) ){ goto $label$17 }
	CALL eosio_assert([0], [18965])
	$6 = *($4 + [4])
	
.LABEL $label$17
	CALL memcpy($6, $1, [1])
	$6 = ($6 + [1])
	*($4 + [4]) = $6
	$10 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [8])) - *(($1 + [4]))) / (int_32)[24]))
	
.LOOP $label$18:
	$7 = (CASTING uint_32)(uint_64 $10)
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	$5 = ((int_64)$10) != (int_64)0
	*($4 + [16]) = (($5) << [7]) | ($7 & [127]))
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[0]) ){ goto $label$19 }
	CALL eosio_assert([0], [18965])
	$6 = *($4 + [4])
	
.LABEL $label$19
	CALL memcpy($6, ($4 + [16]), [1])
	$6 = ($6 + [1])
	*($4 + [4]) = $6
	if ( $5 ){ goto $label$18 }
	$7 = *(($1 + [8]))
	$6 = *(($1 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$20 }
	
.LOOP $label$21:
	*($4 + [40]) = $4
	*($4 + [16]) = $6
	*((($4 + [16]) + [8])) = ($6 + [16])
	*($4 + [20]) = ($6 + [8])
	CALL $295(($4 + [16]), ($4 + [40]))
	$6 = ($6 + [24])
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$21 }
	
.LABEL $label$20
	CALL db_update_i64(*(($1 + [20])), $2, $3, $9)
	if ( ((uint_32)$9 >= (uint_32)[513]) ){ goto $label$24 }
	if ( ((uint_64)*($0 + [16]) <= (uint_64)$11) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	CALL $400($3)
	if ( ((uint_64)*($0 + [16]) > (uint_64)$11) ){ goto $label$22 }
	
.LABEL $label$23
	*(($0 + [16])) = ((int_64)$11 + (int_64)1)
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$22
	$global$0 = ($4 + [48])
}

void .FUNC $27 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $377($0)
	
.LABEL $label$1
	$8 = *($2)
	$2 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($9 = ((int_32)$5 * (int_32)[24]))))) = $2
	*($1 + [8]) = $8
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $9) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [4])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [8])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL _ZdlPv($4)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$2 = ($global$0 - [48])
	$global$0 = $2
	*($1) = *(*(*($0 + [4])))
	$3 = *($0)
	*(($4 = $2) + [24]) = (int_64)1
	*($4 + [16]) = (int_64)1
	*($4 + [32]) = (int_64)0
	$5 = ($1 + [8])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)*(($1 + [12]))) ){ goto $label$2 }
	*($6) = *($4 + [16])
	*(($6 + [16])) = *((($4 + [16]) + [16]))
	*(($6 + [8])) = *((($4 + [16]) + [8]))
	$7 = (*($5) + [24])
	*($5) = $7
	goto $label$1 
	
.LABEL $label$2
	CALL $294(($1 + [4]), ($4 + [16]))
	$7 = *($1 + [8])
	
.LABEL $label$1
	$8 = *($1 + [4])
	$9 = ($7 - $8)
	$10 = (CASTING uint_64)(uint_32 ((int_32)$9 / (int_32)[24]))
	$6 = [25]
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$7 }
	$9 = (((int_32)((uint_32)($9 + [-24]) / (uint_32)[24]) * (int_32)[24]) + $6)
	if ( ($9 <= [513]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$9 = ($6 + [-24])
	if ( ((uint_32)$9 >= (uint_32)[513]) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($2 - (($9 + [15]) & [-16]))
	$global$0 = $8
	goto $label$4 
	
.LABEL $label$5
	$8 = CALL $397($9)
	
.LABEL $label$4
	*($4 + [4]) = $8
	*($4) = $8
	*($4 + [8]) = ($8 + $9)
	$6 = $8
	if ( ((int_32)$9 > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [18965])
	$6 = *($4 + [4])
	
.LABEL $label$8
	CALL memcpy($6, $1, [1])
	$6 = ($6 + [1])
	*($4 + [4]) = $6
	$10 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [8])) - *(($1 + [4]))) / (int_32)[24]))
	
.LOOP $label$9:
	$7 = (CASTING uint_32)(uint_64 $10)
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	$2 = ((int_64)$10) != (int_64)0
	*($4 + [16]) = (($2) << [7]) | ($7 & [127]))
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[0]) ){ goto $label$10 }
	CALL eosio_assert([0], [18965])
	$6 = *($4 + [4])
	
.LABEL $label$10
	CALL memcpy($6, ($4 + [16]), [1])
	$6 = ($6 + [1])
	*($4 + [4]) = $6
	if ( $2 ){ goto $label$9 }
	$7 = *($5)
	$6 = *(($1 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$11 }
	
.LOOP $label$12:
	*($4 + [40]) = $4
	*($4 + [16]) = $6
	*((($4 + [16]) + [8])) = ($6 + [16])
	*($4 + [20]) = ($6 + [8])
	CALL $295(($4 + [16]), ($4 + [40]))
	$6 = ($6 + [24])
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$12 }
	
.LABEL $label$11
	$10 = *($1)
	*($1 + [20]) = CALL db_store_i64(*($3 + [8]), (int_64)-3020377498459275264, *(*($0 + [8])), $10, $8, $9)
	if ( ((uint_32)$9 >= (uint_32)[513]) ){ goto $label$15 }
	if ( ((uint_64)*($3 + [16]) <= (uint_64)$10) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $400($8)
	if ( ((uint_64)*($3 + [16]) > (uint_64)$10) ){ goto $label$13 }
	
.LABEL $label$14
	*(($3 + [16])) = ((int_64)$10 + (int_64)1)
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$13
	$global$0 = ($4 + [48])
}

void .FUNC $329 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (*($0) + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy(($2 + [14]), $5, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	*(($4 + [40])) = ((int_32)*($2 + [14]) != (int_32)[0])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [15]), $5, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	*(($4 + [41])) = ((int_32)*($2 + [15]) != (int_32)[0])
	CALL $330(*($1), ($4 + [44]))
	CALL $330(*($1), ($4 + [56]))
	CALL $331(*($1), ($4 + [68]))
	CALL $331(*($1), ($4 + [80]))
	$0 = ($4 + [92])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	$4 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $4, [4])
	*(($1 = ($1 + [4]))) = (*($1) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $328 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [18965])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [18965])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$3 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [18965])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $193 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [96]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19287])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19332])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [19382])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	if ( ((*($6 + [60]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*(($6 + [68])))
	
.LABEL $label$13
	if ( ((*($6 + [48]) & [1]) == 0) ){ goto $label$14 }
	CALL _ZdlPv(*(($6 + [56])))
	
.LABEL $label$14
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$15:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$16 }
	if ( ((*($9 + [60]) & [1]) == 0) ){ goto $label$17 }
	CALL _ZdlPv(*(($9 + [68])))
	
.LABEL $label$17
	if ( ((*($9 + [48]) & [1]) == 0) ){ goto $label$18 }
	CALL _ZdlPv(*(($9 + [56])))
	
.LABEL $label$18
	CALL _ZdlPv($9)
	
.LABEL $label$16
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$15 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [100]))
	$9 = *(($1 + [104]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$20 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-7807363788000198656, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$19 }
	
.LABEL $label$20
	CALL db_idx64_remove($9)
	
.LABEL $label$19
	$global$0 = ($2 + [16])
}

void .FUNC $321 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = *($0)
	$5 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = ((int_32)$3 / (int_32)[40])
	if ( ((uint_32)$4 <= (uint_32)((int_32)($5 - $6) / (int_32)[40])) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$5 }
	*($0 + [4]) = $6
	CALL _ZdlPv($6)
	$5 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[107374183]) ){ goto $label$1 }
	$6 = [107374182]
	$2 = ((int_32)$5 / (int_32)[40])
	if ( ((uint_32)$2 > (uint_32)[53687090]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	
.LABEL $label$6
	$4 = ((int_32)$6 * (int_32)[40])
	$6 = CALL _Znwj($4)
	*($0) = $6
	*($0 + [4]) = $6
	*(($0 + [8])) = ($6 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($6, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + ((int_32)((uint_32)$3 / (uint_32)[40]) * (int_32)[40]))
	goto $label$3 
	
.LABEL $label$4
	$3 = ((int_32)(*($0 + [4]) - $6) / (int_32)[40])
	$7 = ( ($1 + ((int_32)$3 * (int_32)[40])) ? $2 : ((uint_32)$4 > (uint_32)$3) )
	$5 = ($7 - $1)
	$8 = ((int_32)$5 / (int_32)[40])
	if ( ($5 == 0) ){ goto $label$7 }
	CALL memmove($6, $1, $5)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$3) ){ goto $label$2 }
	$1 = ($2 - $7)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $7, $1)
	*($0) = (*($0) + ((int_32)((uint_32)$1 / (uint_32)[40]) * (int_32)[40]))
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($6 + ((int_32)$8 * (int_32)[40]))
	return (unreachable)
	
.LABEL $label$1
	CALL $377($0)
}

void .FUNC $320 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [18965])
	$0 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $5, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = *($5 + [8])
	if ( ((int_32)(*(($4 + [8])) - $0) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [18965])
	$0 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $323 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[31]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [32])
	*(($4 = ($4 + [4]))) = (*($4) + [32])
	CALL $285(*($1), *($0 + [8]))
	CALL $285(*($1), *($0 + [12]))
	$6 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$4 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [19214])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $322 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [19191])
	
.LABEL $label$5
	$4 = CALL $397($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL _Znwj([112])) + [48 align=4]) = (int_64)0
	*($5 + [56 align=4]) = (int_64)0
	*($5 + [64 align=4]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [96]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [16])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [48])
	*($3 + [52]) = ($5 + [60])
	*($3 + [56]) = ($5 + [72])
	*($3 + [60]) = ($5 + [88])
	CALL $323(($3 + [40]), ($3 + [32]))
	*($5 + [104]) = [-1]
	*($5 + [100]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $190(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $400($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [60]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [68])))
	
.LABEL $label$11
	if ( ((*($1 + [48]) & [1]) == 0) ){ goto $label$12 }
	CALL _ZdlPv(*(($1 + [56])))
	
.LABEL $label$12
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $325 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[31]) ){ goto $label$2 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [32])
	*(($4 = ($4 + [4]))) = (*($4) + [32])
	CALL $288(*($1), *($0 + [8]))
	CALL $288(*($1), *($0 + [12]))
	$6 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [18965])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$4 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [18965])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $324 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [100]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [19834])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-7807363788000198656)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [19780])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [19780])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $322(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $327 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$3 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $326 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = *($0)
	$5 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = ((int_32)$3 / (int_32)[24])
	if ( ((uint_32)$4 <= (uint_32)((int_32)($5 - $6) / (int_32)[24])) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$5 }
	*($0 + [4]) = $6
	CALL _ZdlPv($6)
	$5 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[178956971]) ){ goto $label$1 }
	$6 = [178956970]
	$2 = ((int_32)$5 / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	
.LABEL $label$6
	$4 = ((int_32)$6 * (int_32)[24])
	$6 = CALL _Znwj($4)
	*($0) = $6
	*($0 + [4]) = $6
	*(($0 + [8])) = ($6 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($6, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + ((int_32)((uint_32)$3 / (uint_32)[24]) * (int_32)[24]))
	goto $label$3 
	
.LABEL $label$4
	$3 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$7 = ( ($1 + ((int_32)$3 * (int_32)[24])) ? $2 : ((uint_32)$4 > (uint_32)$3) )
	$5 = ($7 - $1)
	$8 = ((int_32)$5 / (int_32)[24])
	if ( ($5 == 0) ){ goto $label$7 }
	CALL memmove($6, $1, $5)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$3) ){ goto $label$2 }
	$1 = ($2 - $7)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $7, $1)
	*($0) = (*($0) + ((int_32)((uint_32)$1 / (uint_32)[24]) * (int_32)[24]))
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($6 + ((int_32)$8 * (int_32)[24]))
	return (unreachable)
	
.LABEL $label$1
	CALL $377($0)
}

void .FUNC $101 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-7297964030780506112, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $32($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $313(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [19728])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	$6 = [8]
	$5 = *($5 + [4])
	$8 = ($1 + [8])
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$5 }
	CALL $314($8, *($5), *($5 + [4]))
	
.LABEL $label$5
	$9 = *($1 + [8])
	$5 = *(($1 + [12]))
	$10 = ($5 - $9)
	$7 = (CASTING uint_64)(uint_32 int_32($10 >> [1]))
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$7 }
	$6 = (($10 & [-2]) + $6)
	
.LABEL $label$7
	$5 = ($6 + [1])
	if ( ($5 <= [513]) ){ goto $label$9 }
	$6 = CALL $397($5)
	goto $label$8 
	
.LABEL $label$9
	$6 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$8
	*($3 + [12]) = $6
	*($3 + [8]) = $6
	*($3 + [16]) = ($6 + $5)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $8
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [20])
	CALL $315(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($4 + [8]), (int_64)-7297964030780506112, *(*($0 + [8])), $7, $6, $5)
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$12 }
	if ( ((uint_64)$7 >= (uint_64)*($4 + [16])) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $400($6)
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$10 }
	
.LABEL $label$11
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$10
	$global$0 = ($3 + [48])
}

void .FUNC $100 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	$7 = ($1 + [8])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	CALL $314($7, *($3), *($3 + [4]))
	*($1 + [20]) = [0]
	$8 = ($1 + [20])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [19669])
	goto $label$3 
	
.LABEL $label$4
	*($1 + [20]) = [0]
	$8 = ($1 + [20])
	
.LABEL $label$3
	$10 = *($1 + [8])
	$9 = *(($1 + [12]))
	$11 = ($9 - $10)
	$12 = (CASTING uint_64)(uint_32 int_32($11 >> [1]))
	$3 = [8]
	
.LOOP $label$5:
	$3 = ($3 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$6 }
	$3 = (($11 & [-2]) + $3)
	
.LABEL $label$6
	$9 = ($3 + [1])
	if ( ($9 <= [513]) ){ goto $label$8 }
	$3 = CALL $397($9)
	goto $label$7 
	
.LABEL $label$8
	$3 = ($4 - (($9 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$7
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $9)
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $7
	*($5 + [40]) = $8
	*($5 + [32]) = $1
	CALL $315(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [28]), $2, $3, $9)
	if ( ((uint_32)$9 >= (uint_32)[513]) ){ goto $label$11 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $400($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	
.LABEL $label$10
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$9
	$global$0 = ($5 + [48])
}

int_32 .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$5 }
	CALL eosio_assert([0], [18748])
	$3 = [12]
	goto $label$4 
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$6:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$8 }
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$9 }
	$7 = ($7 + [-48])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [-91])
	goto $label$7 
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert([0], [18853])
	$4 = *($0)
	
.LABEL $label$7
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$2
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [18786])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [18853])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$1
	return $0
}

void .FUNC $102 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$1 = ($global$0 - [112])
	$global$0 = $1
	CALL require_auth(*($0))
	$2 = *($0)
	*($1 + [56]) = [9397]
	*($1 + [60]) = CALL $393([9397])
	*($1 + [24]) = *($1 + [56])
	CALL $103(($1 + [64]), ($1 + [24]))
	*(($1 + [104])) = [0]
	*($1 + [72]) = $2
	*($1 + [88]) = (int_64)-1
	*($1 + [96]) = (int_64)0
	*($1 + [80]) = (int_64)6138576049979331120
	$3 = (int_64)250
	$4 = CALL db_find_i64($2, (int_64)6138576049979331120, (int_64)-3020377498459275264, (int_64)240)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$5 = CALL $23(($1 + [72]), $4)
	if ( ((int_32)*($5 + [16]) == (int_32)($1 + [72])) ){ goto $label$3 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$3
	$5 = *(($5 + [8]))
	$4 = *($5 + [4])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$4 }
	
.LOOP $label$5:
	if ( ((int_64)*($4) == (int_64)1) ){ goto $label$4 }
	$4 = ($4 + [24])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$2 = ((int_64)*($4 + [16]) + (int_64)*($4 + [8]))
	$3 = (int_64)
	if ( ((int_32)(CASTING uint_32)(uint_64 $3(( ( $2 ? (int_64)250 : ((uint_64)$2 > (uint_64)(int_64)250) ) ? (int_64)250 : ((int_64))((int_64)0 - $2) < (int_64)0) ) - $2))) < (int_32)[1]) ){ goto $label$1 }
	
.LABEL $label$2
	*($1 + [48]) = [9397]
	*($1 + [52]) = CALL $393([9397])
	*($1 + [16]) = *($1 + [48])
	CALL $103(($1 + [64]), ($1 + [16]))
	CALL $43($0, (int_64)6138576049979331120, [240], (int_64)1, (int_64)((int_64)$3 << (int_64)32) >> (int_64)32))
	$4 = CALL $393([8341])
	if ( ($4 <= [8]) ){ goto $label$9 }
	CALL eosio_assert([0], [10159])
	goto $label$8 
	
.LABEL $label$9
	if ( ($4 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$2 = (int_64)0
	
.LOOP $label$10:
	$5 = *(($4 + [8340]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$11 }
	CALL eosio_assert([0], [10204])
	
.LABEL $label$11
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$10 }
	goto $label$6 
	
.LABEL $label$7
	$2 = (int_64)0
	
.LABEL $label$6
	*($1 + [32]) = (int_64)20000
	*($1 + [40]) = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	$2 = ((int_64)$2 & (int_64)72057594037927935)
	$4 = [0]
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$15 }
	$2 = $3
	$5 = $4
	$4 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$15
	$2 = $3
	
.LOOP $label$16:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$13 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$5 = ((int_32)$4 < (int_32)[6])
	$6 = ($4 + [1])
	$4 = $6
	if ( $5 ){ goto $label$16 }
	$4 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	CALL eosio_assert([0], [18905])
	
.LABEL $label$12
	*(($1 + [8])) = *((($1 + [32]) + [8]))
	*($1) = *($1 + [32])
	CALL $104($0, $1)
	
.LABEL $label$1
	$0 = *($1 + [96])
	if ( ($0 == 0) ){ goto $label$17 }
	$7 = ($1 + [100])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$19 }
	
.LOOP $label$20:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$21 }
	$6 = *($5 + [4])
	if ( ($6 == 0) ){ goto $label$22 }
	*(($5 + [8])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$22
	CALL _ZdlPv($5)
	
.LABEL $label$21
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$20 }
	$4 = *(($1 + [96]))
	goto $label$18 
	
.LABEL $label$19
	$4 = $0
	
.LABEL $label$18
	*($7) = $0
	CALL _ZdlPv($4)
	
.LABEL $label$17
	$global$0 = ($1 + [112])
}

int_32 .FUNC $105 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$6 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $4
	$7 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [19191])
	
.LABEL $label$5
	$4 = CALL $397($6)
	$7 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $6)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $6)
	*(($5 = CALL _Znwj([28])) + [12]) = [0]
	*($5 + [4 align=4]) = (int_64)0
	*($5 + [16]) = $0
	$8 = ($5 + [4])
	$2 = $4
	if ( $6 ){ goto $label$7 }
	CALL eosio_assert([0], [19214])
	$2 = *($3 + [20])
	
.LABEL $label$7
	CALL memcpy($5, $2, [1])
	*($3 + [20]) = ($2 + [1])
	CALL $317(($3 + [16]), $8)
	*($5 + [20]) = $1
	*($3 + [8]) = $5
	$2 = *($5)
	*($3 + [7]) = $2
	*($3) = $1
	$6 = *(($0 + [28]))
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($6 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $2) & (int_64)255)
	*($6 + [16]) = $1
	*($3 + [8]) = [0]
	*($6) = $5
	*(($0 + [28])) = ($6 + [24])
	if ( $7 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $107(($0 + [24]), ($3 + [8]), ($3 + [7]), $3)
	if ( ($7 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $400($4)
	
.LABEL $label$8
	$1 = *($3 + [8])
	*($3 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	$4 = *($1 + [4])
	if ( ($4 == 0) ){ goto $label$12 }
	*(($1 + [8])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$12
	CALL _ZdlPv($1)
	
.LABEL $label$11
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $104 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$2 = ($global$0 - [128])
	$global$0 = $2
	*(($2 + [104])) = [0]
	*($2 + [88]) = (int_64)-1
	*($2 + [96]) = (int_64)0
	$3 = *($0)
	*($2 + [72]) = $3
	*($2 + [80]) = $3
	$4 = CALL db_find_i64($3, $3, (int_64)7687445405353639936, (int_64)240)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$12 }
	$5 = CALL $105(($2 + [72]), $4)
	if ( ((int_32)*($5 + [16]) == (int_32)($2 + [72])) ){ goto $label$13 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$13
	*($2 + [64]) = ($2 + [72])
	*($2 + [68]) = $5
	*(($2 + [56])) = (int_64)0
	*(($2 + [40])) = *(($1 + [8]))
	*($2 + [48]) = (int_64)0
	*($2 + [24]) = [1]
	*($2 + [32]) = *($1)
	$4 = *(($5 + [8]))
	$1 = *($5 + [4])
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$14 }
	
.LOOP $label$15:
	if ( ((int_32)*($1) == (int_32)[1]) ){ goto $label$14 }
	$1 = ($1 + [40])
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$15 }
	*($2 + [120]) = $4
	goto $label$11 
	
.LABEL $label$14
	*($2 + [120]) = $1
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$11 }
	*((($2 + [24]) + [32])) = *(($1 + [32]))
	*($2 + [48]) = *($1 + [24])
	goto $label$5 
	
.LABEL $label$12
	*($2 + [68]) = [0]
	*($2 + [64]) = ($2 + [72])
	$3 = *($0)
	*($2) = $1
	*($2 + [8]) = $3
	if ( ((int_64)*($2 + [72]) == (int_64)CALL current_receiver()) ){ goto $label$16 }
	CALL eosio_assert([0], [19435])
	
.LABEL $label$16
	*($2 + [28]) = $2
	*($2 + [24]) = ($2 + [72])
	*($2 + [32]) = ($2 + [8])
	*(($1 = CALL _Znwj([28])) + [12]) = [0]
	*($1 + [4 align=4]) = (int_64)0
	*($1 + [16]) = ($2 + [72])
	CALL $106(($2 + [24]), $1)
	*($2 + [120]) = $1
	$5 = *($1)
	*($2 + [119]) = $5
	$0 = *($1 + [20])
	*($2 + [24]) = $0
	$6 = (($2 + [72]) + [28])
	$4 = *($6)
	if ( ((uint_32)$4 >= (uint_32)*(($2 + [104]))) ){ goto $label$10 }
	*($4 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	*($4 + [16]) = $0
	*($2 + [120]) = [0]
	*($4) = $1
	*($6) = ($4 + [24])
	$1 = *($2 + [120])
	*($2 + [120]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $393([8341])
	if ( ($1 <= [8]) ){ goto $label$9 }
	CALL eosio_assert([0], [10159])
	goto $label$8 
	
.LABEL $label$10
	CALL $107(($2 + [96]), ($2 + [120]), ($2 + [119]), ($2 + [24]))
	$1 = *($2 + [120])
	*($2 + [120]) = [0]
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$9
	if ( ($1 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$7 = (int_64)0
	
.LOOP $label$17:
	$4 = *(($1 + [8340]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$18 }
	CALL eosio_assert([0], [10204])
	
.LABEL $label$18
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$17 }
	goto $label$6 
	
.LABEL $label$7
	$7 = (int_64)0
	
.LABEL $label$6
	$3 = ((int_64)$7 & (int_64)72057594037927935)
	$8 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	$1 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$7 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$22 }
	$3 = $7
	$4 = $1
	$1 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$22
	$3 = $7
	
.LOOP $label$23:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$20 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$23 }
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	CALL eosio_assert([0], [18905])
	
.LABEL $label$19
	*(($2 + [56])) = $8
	*(($2 + [48])) = (int_64)0
	$5 = *($2 + [68])
	
.LABEL $label$5
	$3 = *($0)
	*($2 + [12]) = ($2 + [64])
	*($2 + [8]) = ($2 + [120])
	*($2 + [16]) = ($2 + [24])
	if ( $5 ){ goto $label$24 }
	CALL eosio_assert([0], [19537])
	
.LABEL $label$24
	CALL $108(($2 + [72]), $5, $3, ($2 + [8]))
	
.LABEL $label$4
	$0 = *($2 + [96])
	if ( ($0 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($1 + [4])
	if ( ($4 == 0) ){ goto $label$25 }
	*(($1 + [8])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$25
	CALL _ZdlPv($1)
	$0 = *($2 + [96])
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($2 + [100])
	$1 = *($6)
	if ( ((int_32)$1 == (int_32)$0) ){ goto $label$27 }
	
.LOOP $label$28:
	$1 = ($1 + [-24])
	$4 = *($1)
	*($1) = [0]
	if ( ($4 == 0) ){ goto $label$29 }
	$5 = *($4 + [4])
	if ( ($5 == 0) ){ goto $label$30 }
	*(($4 + [8])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$30
	CALL _ZdlPv($4)
	
.LABEL $label$29
	if ( ((int_32)$0 != (int_32)$1) ){ goto $label$28 }
	$1 = *(($2 + [96]))
	goto $label$26 
	
.LABEL $label$27
	$1 = $0
	
.LABEL $label$26
	*($6) = $0
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($2 + [128])
}

void .FUNC $107 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $377($0)
	
.LABEL $label$1
	$8 = *($2)
	$2 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($9 = ((int_32)$5 * (int_32)[24]))))) = $2
	*($1 + [8]) = $8
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $9) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [4])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [8])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL _ZdlPv($4)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $28 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = [0]
	*(($2 + [40])) = [0]
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	$4 = *($0)
	*($2 + [8]) = $4
	*($2 + [16]) = $4
	$0 = CALL db_find_i64($4, $4, (int_64)-3020380200705179648, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $18(($2 + [8]), $0)
	if ( ((int_32)*($0 + [16]) == (int_32)($2 + [8])) ){ goto $label$2 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$2
	$3 = ((int_32)*($0 + [8]) != (int_32)[0])
	$5 = *($2 + [32])
	if ( ($5 == 0) ){ goto $label$1 }
	$6 = ($2 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$6 }
	CALL _ZdlPv($7)
	
.LABEL $label$6
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($2 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $5
	
.LABEL $label$3
	*($6) = $5
	CALL _ZdlPv($0)
	
.LABEL $label$1
	$global$0 = ($2 + [48])
	return $3
}

void .FUNC $109 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [80])
	$global$0 = $4
	*($4 + [72]) = $3
	*($4 + [76]) = $2
	CALL require_auth(*($0))
	*(($4 + [64])) = [0]
	*(($4 + [70])) = [0]
	*($4 + [48]) = (int_64)-1
	*($4 + [56]) = (int_64)0
	*($4 + [68]) = [0]
	$5 = *($0)
	*($4 + [32]) = $5
	*($4 + [40]) = $5
	$3 = [0]
	$2 = CALL db_find_i64($5, $5, (int_64)-3020371566920728576, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $10(($4 + [32]), $2)
	if ( ((int_32)*($3 + [88]) == (int_32)($4 + [32])) ){ goto $label$1 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$1
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$2 = CALL $393([9258])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$6 = ((int_32)$3 != (int_32)[0])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$5 }
	*($4 + [16]) = ($2 << [1])
	$7 = (($4 + [16]) | [1])
	if ( $2 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$8 = (($2 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($4 + [16]) = ($8 | [1])
	*($4 + [24]) = $7
	*($4 + [20]) = $2
	
.LABEL $label$4
	CALL memcpy($7, [9258], $2)
	
.LABEL $label$3
	*(($7 + $2)) = [0]
	CALL eosio_assert($6, CALL $5($2, [127], ($4 + [16])))
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($4 + [24]))
	
.LABEL $label$6
	$5 = *($0)
	*($4 + [12]) = ($4 + [72])
	*($4 + [8]) = ($4 + [76])
	if ( $3 ){ goto $label$7 }
	CALL eosio_assert([0], [19537])
	
.LABEL $label$7
	CALL $110(($4 + [32]), $3, $5, ($4 + [8]))
	$0 = *($4 + [56])
	if ( ($0 == 0) ){ goto $label$8 }
	$7 = ($4 + [60])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$12 }
	CALL _ZdlPv($3)
	
.LABEL $label$12
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$11 }
	$2 = *(($4 + [56]))
	goto $label$9 
	
.LABEL $label$10
	$2 = $0
	
.LABEL $label$9
	*($7) = $0
	CALL _ZdlPv($2)
	
.LABEL $label$8
	$global$0 = ($4 + [80])
	return (unreachable)
	
.LABEL $label$2
	CALL $359(($4 + [16]))
}

void .FUNC $108 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	$6 = *($1)
	$7 = *(*($3))
	if ( ((int_32)$7 == (int_32)*((*(*($3 + [4]) + [4]) + [8]))) ){ goto $label$4 }
	$9 = ($7 + [40])
	$8 = ($1 + [8])
	$10 = (*($8) - $9)
	$11 = ((int_32)$10 / (int_32)[40])
	if ( ($10 == 0) ){ goto $label$5 }
	CALL memmove($7, $9, $10)
	
.LABEL $label$5
	$7 = ($7 + ((int_32)$11 * (int_32)[40]))
	*($8) = $7
	goto $label$3 
	
.LABEL $label$4
	$8 = ($1 + [8])
	$7 = *($8)
	
.LABEL $label$3
	$3 = *($3 + [8])
	if ( ((int_32)$7 == (int_32)*(($1 + [12]))) ){ goto $label$7 }
	*($7) = *($3)
	*(($7 + [32])) = *(($3 + [32]))
	*(($7 + [24])) = *(($3 + [24]))
	*(($7 + [16])) = *(($3 + [16]))
	*(($7 + [8])) = *(($3 + [8]))
	*($8) = (*($8) + [40])
	goto $label$6 
	
.LABEL $label$7
	CALL $184(($1 + [4]), $3)
	
.LABEL $label$6
	$12 = (CASTING uint_64)(uint_32 $6)
	if ( ((int_32)($6 & [255]) == (int_32)*($1)) ){ goto $label$8 }
	CALL eosio_assert([0], [19669])
	
.LABEL $label$8
	$13 = ((int_64)$12 & (int_64)255)
	$6 = *($1 + [4])
	$3 = *($1 + [8])
	$8 = ($3 - $6)
	$12 = (CASTING uint_64)(uint_32 ((int_32)$8 / (int_32)[40]))
	$7 = [34]
	
.LOOP $label$9:
	$7 = ($7 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$9 }
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$13 }
	$10 = (((int_32)((uint_32)($8 + [-40]) / (uint_32)[40]) * (int_32)[33]) + $7)
	if ( ($10 <= [513]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$10 = ($7 + [-33])
	if ( ((uint_32)$10 >= (uint_32)[513]) ){ goto $label$11 }
	
.LABEL $label$12
	$8 = ($4 - (($10 + [15]) & [-16]))
	$global$0 = $8
	goto $label$10 
	
.LABEL $label$11
	$8 = CALL $397($10)
	
.LABEL $label$10
	*($5 + [12]) = $8
	*($5 + [8]) = $8
	*($5 + [16]) = ($8 + $10)
	$7 = $8
	if ( ((int_32)$10 > (int_32)[0]) ){ goto $label$14 }
	CALL eosio_assert([0], [18965])
	$7 = *($5 + [12])
	
.LABEL $label$14
	CALL memcpy($7, $1, [1])
	$7 = ($7 + [1])
	*($5 + [12]) = $7
	$12 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [8])) - *(($1 + [4]))) / (int_32)[40]))
	
.LOOP $label$15:
	$3 = (CASTING uint_32)(uint_64 $12)
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	$6 = ((int_64)$12) != (int_64)0
	*($5 + [32]) = (($6) << [7]) | ($3 & [127]))
	if ( ((int_32)(*((($5 + [8]) + [8])) - $7) > (int_32)[0]) ){ goto $label$16 }
	CALL eosio_assert([0], [18965])
	$7 = *($5 + [12])
	
.LABEL $label$16
	CALL memcpy($7, ($5 + [32]), [1])
	$7 = ($7 + [1])
	*($5 + [12]) = $7
	if ( $6 ){ goto $label$15 }
	$3 = *(($1 + [8]))
	$7 = *(($1 + [4]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$17 }
	
.LOOP $label$18:
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $7
	*((($5 + [32]) + [8])) = ($7 + [24])
	*($5 + [36]) = ($7 + [8])
	CALL $320(($5 + [32]), ($5 + [24]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$18 }
	
.LABEL $label$17
	CALL db_update_i64(*(($1 + [20])), $2, $8, $10)
	if ( ((uint_32)$10 >= (uint_32)[513]) ){ goto $label$21 }
	if ( ((uint_64)*($0 + [16]) <= (uint_64)$13) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	CALL $400($8)
	if ( ((uint_64)*($0 + [16]) > (uint_64)$13) ){ goto $label$19 }
	
.LABEL $label$20
	*(($0 + [16])) = ((int_64)$13 + (int_64)1)
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$19
	$global$0 = ($5 + [48])
}

void .FUNC $318 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $3) / (int_32)[40]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ((int_32)($3 - $4) / (int_32)[40])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$3 }
	$3 = [107374182]
	$2 = ((int_32)($2 - $4) / (int_32)[40])
	if ( ((uint_32)$2 > (uint_32)[53687090]) ){ goto $label$6 }
	$3 = ($2 << [1])
	$3 = ( $6 ? $3 : ($3 <= $6) )
	if ( ($3 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj(((int_32)$3 * (int_32)[40]))
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*(($3 + [32])) = (int_64)0
	$3 = (*($0) + [40])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$3 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $377($0)
	
.LABEL $label$2
	$4 = ($2 + ((int_32)$3 * (int_32)[40]))
	$5 = ($2 + ((int_32)$5 * (int_32)[40]))
	$3 = $5
	
.LOOP $label$8:
	*($3) = (int_64)0
	*(($3 + [8])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*(($3 + [24])) = (int_64)0
	*(($3 + [32])) = (int_64)0
	$3 = ($3 + [40])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$6 = ($2 + ((int_32)$6 * (int_32)[40]))
	$3 = *($0)
	$7 = ($0 + [4])
	$1 = (*($7) - $3)
	$2 = ($5 + ((int_32)((int_32)$1 / (int_32)[-40]) * (int_32)[40]))
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($7) = $6
	*(($0 + [8])) = $4
	if ( ($3 == 0) ){ goto $label$1 }
	CALL _ZdlPv($3)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $319 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	$0 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $0) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [19214])
	$0 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $0, [8])
	*($5 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $215 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$1 = ($global$0 - [112])
	$global$0 = $1
	CALL require_auth(*($0))
	$2 = [0]
	*((($1 + [64]) + [32])) = [0]
	*($1 + [80]) = (int_64)-1
	$3 = *($0)
	*($1 + [64]) = $3
	*($1 + [72]) = $3
	*($1 + [88]) = (int_64)0
	$4 = [0]
	$5 = CALL db_lowerbound_i64($3, $3, (int_64)5304430165563284784, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $210(($1 + [64]), $5)
	
.LABEL $label$1
	*((($1 + [24]) + [32])) = [0]
	*($1 + [40]) = (int_64)-1
	$3 = *($0)
	*($1 + [24]) = $3
	*($1 + [32]) = $3
	*($1 + [48]) = (int_64)0
	$0 = CALL db_lowerbound_i64($3, $3, (int_64)-4057297652277051392, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$2 }
	$2 = CALL $9(($1 + [24]), $0)
	
.LABEL $label$2
	*(($1 + [16])) = [0]
	*($1 + [8]) = (int_64)0
	$0 = CALL $393([10115])
	if ( ((uint_32)$0 >= (uint_32)[-16]) ){ goto $label$3 }
	$6 = ((int_32)$2 != (int_32)[0])
	if ( ((uint_32)$0 >= (uint_32)[11]) ){ goto $label$6 }
	*($1 + [8]) = ($0 << [1])
	$5 = (($1 + [8]) | [1])
	if ( $0 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$7 = (($0 + [16]) & [-16])
	$5 = CALL _Znwj($7)
	*($1 + [8]) = ($7 | [1])
	*($1 + [16]) = $5
	*($1 + [12]) = $0
	
.LABEL $label$5
	CALL memcpy($5, [10115], $0)
	
.LABEL $label$4
	*(($5 + $0)) = [0]
	CALL eosio_assert($6, CALL $5($4, [180], ($1 + [8])))
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$7 }
	CALL _ZdlPv(*($1 + [16]))
	
.LABEL $label$7
	if ( ($4 == 0) ){ goto $label$8 }
	$5 = ($2 + [16])
	
.LOOP $label$9:
	if ( ((int_64))(*($5) - *($4 + [16])) < (int_64)86400000000) ){ goto $label$10 }
	if ( $4 ){ goto $label$11 }
	CALL eosio_assert([0], [19223])
	CALL eosio_assert([0], [19257])
	
.LABEL $label$11
	$0 = [0]
	$2 = CALL db_next_i64(*($4 + [28]), ($1 + [104]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$12 }
	$0 = CALL $210(($1 + [64]), $2)
	
.LABEL $label$12
	CALL $216(($1 + [64]), $4)
	$4 = $0
	if ( $4 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$0 = *($4 + [28])
	$4 = [0]
	$0 = CALL db_next_i64($0, ($1 + [104]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$13 }
	$4 = CALL $210(($1 + [64]), $0)
	
.LABEL $label$13
	if ( $4 ){ goto $label$9 }
	
.LABEL $label$8
	$5 = *($1 + [48])
	if ( ($5 == 0) ){ goto $label$14 }
	$2 = ($1 + [52])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$18 }
	CALL _ZdlPv($0)
	
.LABEL $label$18
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$17 }
	$4 = *(($1 + [48]))
	goto $label$15 
	
.LABEL $label$16
	$4 = $5
	
.LABEL $label$15
	*($2) = $5
	CALL _ZdlPv($4)
	
.LABEL $label$14
	$5 = *($1 + [88])
	if ( ($5 == 0) ){ goto $label$19 }
	$2 = ($1 + [92])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$21 }
	
.LOOP $label$22:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$23 }
	CALL _ZdlPv($0)
	
.LABEL $label$23
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$22 }
	$4 = *(($1 + [88]))
	goto $label$20 
	
.LABEL $label$21
	$4 = $5
	
.LABEL $label$20
	*($2) = $5
	CALL _ZdlPv($4)
	
.LABEL $label$19
	$global$0 = ($1 + [112])
	return (unreachable)
	
.LABEL $label$3
	CALL $359(($1 + [8]))
}

void .FUNC $214 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	*($1 + [8]) = [1]
	$5 = ($1 + [8])
	$6 = *($1)
	if ( (*([0] + [10328]) == 0) ){ goto $label$4 }
	*($1 + [16]) = *([0] + [10320])
	goto $label$3 
	
.LABEL $label$4
	$8 = CALL current_time()
	*([0] + [10320]) = $8
	*([0] + [10328]) = [1]
	*($1 + [16]) = $8
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [19669])
	
.LABEL $label$3
	$7 = $3
	$3 = ($7 + [-32])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($7 + [-14])
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = $5
	*($4 + [32]) = $1
	*($4 + [40]) = ($1 + [16])
	CALL $328(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [28]), $2, $3, [18])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$5 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = ($4 + [48])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [688])
	$global$0 = $3
	CALL memory()
	if ( ((int_64)$1 == (int_64)6138663591592764928) ){ goto $label$2 }
	if ( ((int_64)$1 != (int_64)-7768265973351312080) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$1 }
	*($3 + [684]) = [0]
	*($3 + [680]) = [1]
	*($3 + [336]) = *($3 + [680])
	CALL $218($0, $1, ($3 + [336]))
	CALL eosio_exit([0])
	
.LABEL $label$1
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$3 }
	if ( ((int_64)$2 > (int_64)-3075276113066676417) ){ goto $label$45 }
	if ( ((int_64)$2 <= (int_64)-4860355161193742337) ){ goto $label$44 }
	if ( ((int_64)$2 <= (int_64)-4421665485653803009) ){ goto $label$42 }
	if ( ((int_64)$2 > (int_64)-3841127219510378497) ){ goto $label$38 }
	if ( ((int_64)$2 == (int_64)-4421665485653803008) ){ goto $label$30 }
	if ( ((int_64)$2 == (int_64)-4352394788318740480) ){ goto $label$29 }
	if ( ((int_64)$2 != (int_64)-4139216409883725616) ){ goto $label$4 }
	*($3 + [548]) = [0]
	*($3 + [544]) = [2]
	*($3 + [128]) = *($3 + [544])
	CALL $219($1, $1, ($3 + [128]))
	CALL eosio_exit([0])
	
.LABEL $label$45
	if ( ((int_64)$2 <= (int_64)4730614997266694143) ){ goto $label$43 }
	if ( ((int_64)$2 <= (int_64)5052071211677253631) ){ goto $label$41 }
	if ( ((int_64)$2 > (int_64)5606354665366093823) ){ goto $label$37 }
	if ( ((int_64)$2 == (int_64)5052071211677253632) ){ goto $label$28 }
	if ( ((int_64)$2 == (int_64)5375798015061655552) ){ goto $label$27 }
	if ( ((int_64)$2 != (int_64)5606352846453211136) ){ goto $label$4 }
	*($3 + [604]) = [0]
	*($3 + [600]) = [3]
	*($3 + [72]) = *($3 + [600])
	CALL $220($1, $1, ($3 + [72]))
	CALL eosio_exit([0])
	
.LABEL $label$44
	if ( ((int_64)$2 > (int_64)-7694775669921677313) ){ goto $label$40 }
	if ( ((int_64)$2 <= (int_64)-7902392378965622785) ){ goto $label$36 }
	if ( ((int_64)$2 == (int_64)-7902392378965622784) ){ goto $label$26 }
	if ( ((int_64)$2 == (int_64)-7873605733789466624) ){ goto $label$25 }
	if ( ((int_64)$2 != (int_64)-7694775801455050752) ){ goto $label$4 }
	*($3 + [372]) = [0]
	*($3 + [368]) = [4]
	*($3 + [304]) = *($3 + [368])
	CALL $221($1, $1, ($3 + [304]))
	CALL eosio_exit([0])
	
.LABEL $label$43
	if ( ((int_64)$2 > (int_64)-2982882893337985025) ){ goto $label$39 }
	if ( ((int_64)$2 <= (int_64)-3073298666655193089) ){ goto $label$35 }
	if ( ((int_64)$2 == (int_64)-3073298666655193088) ){ goto $label$24 }
	if ( ((int_64)$2 == (int_64)-3073298664406384640) ){ goto $label$23 }
	if ( ((int_64)$2 != (int_64)-3018911690356948992) ){ goto $label$4 }
	*($3 + [652]) = [0]
	*($3 + [648]) = [5]
	*($3 + [24]) = *($3 + [648])
	CALL $222($1, $1, ($3 + [24]))
	CALL eosio_exit([0])
	
.LABEL $label$42
	if ( ((int_64)$2 <= (int_64)-4498683514248495105) ){ goto $label$34 }
	if ( ((int_64)$2 == (int_64)-4498683514248495104) ){ goto $label$22 }
	if ( ((int_64)$2 == (int_64)-4488212224488856688) ){ goto $label$21 }
	if ( ((int_64)$2 != (int_64)-4488143026727938672) ){ goto $label$4 }
	*($3 + [420]) = [0]
	*($3 + [416]) = [6]
	*($3 + [256]) = *($3 + [416])
	CALL $223($1, $1, ($3 + [256]))
	CALL eosio_exit([0])
	
.LABEL $label$41
	if ( ((int_64)$2 <= (int_64)4849591923579895807) ){ goto $label$33 }
	if ( ((int_64)$2 == (int_64)4849591923579895808) ){ goto $label$20 }
	if ( ((int_64)$2 == (int_64)4851652482884960256) ){ goto $label$19 }
	if ( ((int_64)$2 != (int_64)4923678949864112128) ){ goto $label$4 }
	*($3 + [428]) = [0]
	*($3 + [424]) = [7]
	*($3 + [248]) = *($3 + [424])
	CALL $221($1, $1, ($3 + [248]))
	CALL eosio_exit([0])
	
.LABEL $label$40
	if ( ((int_64)$2 <= (int_64)-5949567197260021761) ){ goto $label$32 }
	if ( ((int_64)$2 == (int_64)-5949567197260021760) ){ goto $label$18 }
	if ( ((int_64)$2 == (int_64)-5859367104448495616) ){ goto $label$17 }
	if ( ((int_64)$2 != (int_64)-4994302176407577296) ){ goto $label$4 }
	*($3 + [628]) = [0]
	*($3 + [624]) = [8]
	*($3 + [48]) = *($3 + [624])
	CALL $224($1, $1, ($3 + [48]))
	CALL eosio_exit([0])
	
.LABEL $label$39
	if ( ((int_64)$2 <= (int_64)3626071038623120383) ){ goto $label$31 }
	if ( ((int_64)$2 == (int_64)3626071038623120384) ){ goto $label$16 }
	if ( ((int_64)$2 == (int_64)3626143375075311616) ){ goto $label$15 }
	if ( ((int_64)$2 != (int_64)3628212449800355840) ){ goto $label$4 }
	*($3 + [620]) = [0]
	*($3 + [616]) = [9]
	*($3 + [56]) = *($3 + [616])
	CALL $225($1, $1, ($3 + [56]))
	CALL eosio_exit([0])
	
.LABEL $label$38
	if ( ((int_64)$2 == (int_64)-3841127219510378496) ){ goto $label$14 }
	if ( ((int_64)$2 == (int_64)-3345447591331495936) ){ goto $label$13 }
	if ( ((int_64)$2 != (int_64)-3075276116894047360) ){ goto $label$4 }
	*($3 + [516]) = [0]
	*($3 + [512]) = [10]
	*($3 + [160]) = *($3 + [512])
	CALL $226($1, $1, ($3 + [160]))
	CALL eosio_exit([0])
	
.LABEL $label$37
	if ( ((int_64)$2 == (int_64)5606354665366093824) ){ goto $label$12 }
	if ( ((int_64)$2 == (int_64)5606355548686516224) ){ goto $label$11 }
	if ( ((int_64)$2 != (int_64)6761222076679323648) ){ goto $label$4 }
	*($3 + [484]) = [0]
	*($3 + [480]) = [11]
	*($3 + [192]) = *($3 + [480])
	CALL $227($1, $1, ($3 + [192]))
	CALL eosio_exit([0])
	
.LABEL $label$36
	if ( ((int_64)$2 == (int_64)-7957139261935845376) ){ goto $label$10 }
	if ( ((int_64)$2 != (int_64)-7916651636028604416) ){ goto $label$4 }
	*($3 + [380]) = [0]
	*($3 + [376]) = [12]
	*($3 + [296]) = *($3 + [376])
	CALL $228($1, $1, ($3 + [296]))
	CALL eosio_exit([0])
	
.LABEL $label$35
	if ( ((int_64)$2 == (int_64)-3075276113066676416) ){ goto $label$9 }
	if ( ((int_64)$2 != (int_64)-3075276113064067072) ){ goto $label$4 }
	*($3 + [444]) = [0]
	*($3 + [440]) = [13]
	*($3 + [232]) = *($3 + [440])
	CALL $229($1, $1, ($3 + [232]))
	CALL eosio_exit([0])
	
.LABEL $label$34
	if ( ((int_64)$2 == (int_64)-4860355161193742336) ){ goto $label$8 }
	if ( ((int_64)$2 != (int_64)-4856569248165658624) ){ goto $label$4 }
	*($3 + [612]) = [0]
	*($3 + [608]) = [14]
	*($3 + [64]) = *($3 + [608])
	CALL $225($1, $1, ($3 + [64]))
	CALL eosio_exit([0])
	
.LABEL $label$33
	if ( ((int_64)$2 == (int_64)4730614997266694144) ){ goto $label$7 }
	if ( ((int_64)$2 != (int_64)4730614998765420544) ){ goto $label$4 }
	*($3 + [556]) = [0]
	*($3 + [552]) = [15]
	*($3 + [120]) = *($3 + [552])
	CALL $230($1, $1, ($3 + [120]))
	CALL eosio_exit([0])
	
.LABEL $label$32
	if ( ((int_64)$2 == (int_64)-7694775669921677312) ){ goto $label$6 }
	if ( ((int_64)$2 != (int_64)-6030910704054173696) ){ goto $label$4 }
	*($3 + [508]) = [0]
	*($3 + [504]) = [16]
	*($3 + [168]) = *($3 + [504])
	CALL $231($1, $1, ($3 + [168]))
	CALL eosio_exit([0])
	
.LABEL $label$31
	if ( ((int_64)$2 == (int_64)-2982882893337985024) ){ goto $label$5 }
	if ( ((int_64)$2 != (int_64)-1199744046923542368) ){ goto $label$4 }
	*($3 + [412]) = [0]
	*($3 + [408]) = [17]
	*($3 + [264]) = *($3 + [408])
	CALL $232($1, $1, ($3 + [264]))
	CALL eosio_exit([0])
	
.LABEL $label$30
	*($3 + [564]) = [0]
	*($3 + [560]) = [18]
	*($3 + [112]) = *($3 + [560])
	CALL $233($1, $1, ($3 + [112]))
	CALL eosio_exit([0])
	
.LABEL $label$29
	*($3 + [676]) = [0]
	*($3 + [672]) = [19]
	*($3) = *($3 + [672])
	CALL $234($1, $1, $3)
	CALL eosio_exit([0])
	
.LABEL $label$28
	*($3 + [660]) = [0]
	*($3 + [656]) = [20]
	*($3 + [16]) = *($3 + [656])
	CALL $221($1, $1, ($3 + [16]))
	CALL eosio_exit([0])
	
.LABEL $label$27
	*($3 + [580]) = [0]
	*($3 + [576]) = [21]
	*($3 + [96]) = *($3 + [576])
	CALL $235($1, $1, ($3 + [96]))
	CALL eosio_exit([0])
	
.LABEL $label$26
	*($3 + [388]) = [0]
	*($3 + [384]) = [22]
	*($3 + [288]) = *($3 + [384])
	CALL $236($1, $1, ($3 + [288]))
	CALL eosio_exit([0])
	
.LABEL $label$25
	*($3 + [404]) = [0]
	*($3 + [400]) = [23]
	*($3 + [272]) = *($3 + [400])
	CALL $237($1, $1, ($3 + [272]))
	CALL eosio_exit([0])
	
.LABEL $label$24
	*($3 + [588]) = [0]
	*($3 + [584]) = [24]
	*($3 + [88]) = *($3 + [584])
	CALL $238($1, $1, ($3 + [88]))
	CALL eosio_exit([0])
	
.LABEL $label$23
	*($3 + [476]) = [0]
	*($3 + [472]) = [25]
	*($3 + [200]) = *($3 + [472])
	CALL $239($1, $1, ($3 + [200]))
	CALL eosio_exit([0])
	
.LABEL $label$22
	*($3 + [492]) = [0]
	*($3 + [488]) = [26]
	*($3 + [184]) = *($3 + [488])
	CALL $235($1, $1, ($3 + [184]))
	CALL eosio_exit([0])
	
.LABEL $label$21
	*($3 + [524]) = [0]
	*($3 + [520]) = [27]
	*($3 + [152]) = *($3 + [520])
	CALL $240($1, $1, ($3 + [152]))
	CALL eosio_exit([0])
	
.LABEL $label$20
	*($3 + [468]) = [0]
	*($3 + [464]) = [28]
	*($3 + [208]) = *($3 + [464])
	CALL $241($1, $1, ($3 + [208]))
	CALL eosio_exit([0])
	
.LABEL $label$19
	*($3 + [668]) = [0]
	*($3 + [664]) = [29]
	*($3 + [8]) = *($3 + [664])
	CALL $221($1, $1, ($3 + [8]))
	CALL eosio_exit([0])
	
.LABEL $label$18
	*($3 + [596]) = [0]
	*($3 + [592]) = [30]
	*($3 + [80]) = *($3 + [592])
	CALL $224($1, $1, ($3 + [80]))
	CALL eosio_exit([0])
	
.LABEL $label$17
	*($3 + [572]) = [0]
	*($3 + [568]) = [31]
	*($3 + [104]) = *($3 + [568])
	CALL $238($1, $1, ($3 + [104]))
	CALL eosio_exit([0])
	
.LABEL $label$16
	*($3 + [356]) = [0]
	*($3 + [352]) = [32]
	*($3 + [320]) = *($3 + [352])
	CALL $242($1, $1, ($3 + [320]))
	CALL eosio_exit([0])
	
.LABEL $label$15
	*($3 + [452]) = [0]
	*($3 + [448]) = [33]
	*($3 + [224]) = *($3 + [448])
	CALL $243($1, $1, ($3 + [224]))
	CALL eosio_exit([0])
	
.LABEL $label$14
	*($3 + [460]) = [0]
	*($3 + [456]) = [34]
	*($3 + [216]) = *($3 + [456])
	CALL $244($1, $1, ($3 + [216]))
	CALL eosio_exit([0])
	
.LABEL $label$13
	*($3 + [644]) = [0]
	*($3 + [640]) = [35]
	*($3 + [32]) = *($3 + [640])
	CALL $245($1, $1, ($3 + [32]))
	CALL eosio_exit([0])
	
.LABEL $label$12
	*($3 + [540]) = [0]
	*($3 + [536]) = [36]
	*($3 + [136]) = *($3 + [536])
	CALL $246($1, $1, ($3 + [136]))
	CALL eosio_exit([0])
	
.LABEL $label$11
	*($3 + [532]) = [0]
	*($3 + [528]) = [37]
	*($3 + [144]) = *($3 + [528])
	CALL $247($1, $1, ($3 + [144]))
	CALL eosio_exit([0])
	
.LABEL $label$10
	*($3 + [396]) = [0]
	*($3 + [392]) = [38]
	*($3 + [280]) = *($3 + [392])
	CALL $248($1, $1, ($3 + [280]))
	CALL eosio_exit([0])
	
.LABEL $label$9
	*($3 + [436]) = [0]
	*($3 + [432]) = [39]
	*($3 + [240]) = *($3 + [432])
	CALL $224($1, $1, ($3 + [240]))
	CALL eosio_exit([0])
	
.LABEL $label$8
	*($3 + [348]) = [0]
	*($3 + [344]) = [40]
	*($3 + [328]) = *($3 + [344])
	CALL $221($1, $1, ($3 + [328]))
	CALL eosio_exit([0])
	
.LABEL $label$7
	*($3 + [500]) = [0]
	*($3 + [496]) = [41]
	*($3 + [176]) = *($3 + [496])
	CALL $221($1, $1, ($3 + [176]))
	CALL eosio_exit([0])
	
.LABEL $label$6
	*($3 + [364]) = [0]
	*($3 + [360]) = [42]
	*($3 + [312]) = *($3 + [360])
	CALL $249($1, $1, ($3 + [312]))
	CALL eosio_exit([0])
	
.LABEL $label$5
	*($3 + [636]) = [0]
	*($3 + [632]) = [43]
	*($3 + [40]) = *($3 + [632])
	CALL $250($1, $1, ($3 + [40]))
	CALL eosio_exit([0])
	
.LABEL $label$4
	CALL eosio_assert([0], [10139])
	
.LABEL $label$3
	CALL eosio_exit([0])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $216 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19287])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19332])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [19382])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL _ZdlPv($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [28]))
}

void .FUNC $211 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	*($1 + [8]) = [1]
	*($1) = *(*(*($0 + [4])))
	$4 = ($1 + [8])
	$5 = *($0)
	if ( (*([0] + [10328]) == 0) ){ goto $label$2 }
	$6 = *([0] + [10320])
	goto $label$1 
	
.LABEL $label$2
	$6 = CALL current_time()
	*([0] + [10328]) = [1]
	*([0] + [10320]) = $6
	
.LABEL $label$1
	*($1 + [16]) = $6
	$7 = $2
	$2 = ($7 + [-32])
	$global$0 = $2
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($7 + [-14])
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $4
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	CALL $328(($3 + [32]), ($3 + [24]))
	$6 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($5 + [8]), (int_64)5304430165563284784, *(*($0 + [8])), $6, $2, [18])
	if ( (uint_64)($6 <= *($5 + [16])) ){ goto $label$3 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($3 + [48])
}

int_32 .FUNC $210 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [19191])
	
.LABEL $label$5
	$4 = CALL $397($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([40])) + [24]) = $0
	*($5 + [16]) = (int_64)0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	CALL $327(($3 + [32]), ($3 + [24]))
	*($5 + [28]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $213(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $400($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $213 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $377($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $223 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [40]) = (int_64)0
	*($4 + [32]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [19214])
	
.LABEL $label$5
	$3 = ($2 + $7)
	$8 = (($4 + [32]) + [8])
	CALL memcpy(($4 + [32]), $2, [8])
	$9 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [19214])
	
.LABEL $label$6
	CALL memcpy($8, $9, [8])
	*(($4 + [24])) = $3
	*($4 + [16]) = $2
	*(($4 + [20])) = ($2 + [16])
	*($4 + [8]) = $1
	*($4) = $0
	$3 = ($4 + int_32($5 >> [1]))
	$0 = *((($4 + [32]) + [8]))
	$1 = *($4 + [32])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $400($2)
	
.LABEL $label$8
	$global$0 = ($4 + [48])
	return [1]
}

void .FUNC $196 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((int_32)*($1 + [4]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19287])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19332])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = (*($1) & [255])
	if ( ((int_32)*(*(($4 + [-24]))) == (int_32)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$5 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$8 }
	$8 = ($5 + [-48])
	$5 = ($5 + [-24])
	if ( ((int_32)*(*($8)) != (int_32)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$6 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [19382])
	$6 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $6)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $6)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $6)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL _ZdlPv($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [8]))
}

void .FUNC $197 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19287])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19332])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [19382])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL _ZdlPv($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [60]))
}

void .FUNC $194 (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$4 = ($global$0 - [272])
	$global$0 = $4
	CALL require_auth($3)
	*(($4 + [264])) = [0]
	*($4 + [248]) = (int_64)-1
	*($4 + [256]) = (int_64)0
	*($4 + [268]) = [0]
	$5 = *($0)
	*($4 + [232]) = $5
	*($4 + [240]) = $5
	*($4 + [224]) = ($4 + [232])
	CALL $188(($4 + [24]), ($4 + [224]), $1)
	$6 = ($4 + [224])
	$7 = *($4 + [28])
	if ( ($7 == 0) ){ goto $label$2 }
	$8 = [0]
	if ( ((int_64)*($1) != (int_64)*($7 + [16])) ){ goto $label$1 }
	$6 = *($4 + [24])
	$8 = $7
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	
.LABEL $label$1
	*(($4 + [216])) = [0]
	*($4 + [208]) = (int_64)0
	$1 = CALL $393([10005])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$7 }
	$9 = ((int_32)$8 != (int_32)[0])
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$10 }
	*($4 + [208]) = ($1 << [1])
	$7 = (($4 + [208]) | [1])
	if ( $1 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$10 = (($1 + [16]) & [-16])
	$7 = CALL _Znwj($10)
	*($4 + [208]) = ($10 | [1])
	*($4 + [216]) = $7
	*($4 + [212]) = $1
	
.LABEL $label$9
	CALL memcpy($7, [10005], $1)
	
.LABEL $label$8
	*(($7 + $1)) = [0]
	CALL eosio_assert($9, CALL $5($4, [170], ($4 + [208])))
	if ( ((*($4 + [208]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*($4 + [216]))
	
.LABEL $label$11
	*(($4 + [200])) = [0]
	*($4 + [192]) = (int_64)0
	$5 = *($8 + [88])
	$1 = CALL $393([10025])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$6 }
	$9 = ((int_64)$5 == (int_64)$3)
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$14 }
	*($4 + [192]) = ($1 << [1])
	$7 = (($4 + [192]) | [1])
	if ( $1 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$10 = (($1 + [16]) & [-16])
	$7 = CALL _Znwj($10)
	*($4 + [192]) = ($10 | [1])
	*($4 + [200]) = $7
	*($4 + [196]) = $1
	
.LABEL $label$13
	CALL memcpy($7, [10025], $1)
	
.LABEL $label$12
	*(($7 + $1)) = [0]
	CALL eosio_assert($9, CALL $5($4, [122], ($4 + [192])))
	if ( ((*($4 + [192]) & [1]) == 0) ){ goto $label$15 }
	CALL _ZdlPv(*($4 + [200]))
	
.LABEL $label$15
	$3 = (uint_64)*(($8 + [80])) >> (uint_64)(int_64)8
	if ( (int_64)($3) == 0) ){ goto $label$19 }
	$7 = [0]
	
.LOOP $label$21:
	*((($4 + [24]) + ($1 = $7))) = $3
	$7 = ($1 + [1])
	if ( ((uint_32)$1 > (uint_32)[5]) ){ goto $label$20 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$21 }
	
.LABEL $label$20
	*(($4 + [128])) = [0]
	*($4 + [120]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$18 }
	*($4 + [120]) = ($7 << [1])
	$9 = (($4 + [120]) | [1])
	goto $label$17 
	
.LABEL $label$19
	*(($4 + [128])) = [0]
	*($4 + [120]) = (int_64)0
	*($4 + [120]) = [0]
	$1 = (($4 + [120]) | [1])
	goto $label$16 
	
.LABEL $label$18
	$10 = (($7 + [16]) & [-16])
	$9 = CALL _Znwj($10)
	*($4 + [120]) = ($10 | [1])
	*($4 + [128]) = $9
	*($4 + [124]) = $7
	
.LABEL $label$17
	$10 = ($1 + [1])
	$1 = [0]
	
.LOOP $label$22:
	*(($9 + $1)) = *((($4 + [24]) + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$10 != (int_32)$1) ){ goto $label$22 }
	$1 = ($9 + $7)
	
.LABEL $label$16
	*($1) = [0]
	$1 = CALL $371(($4 + [120]), [0], [10038])
	$7 = ($1 + [8])
	*((($4 + [136]) + [8])) = *($7)
	*($4 + [136]) = *($1)
	*($1) = (int_64)0
	*($7) = [0]
	$1 = CALL $367(($4 + [136]), [10058])
	$7 = ($1 + [8])
	*((($4 + [24]) + [8])) = *($7)
	*($4 + [24]) = *($1)
	*($1) = (int_64)0
	*($7) = [0]
	$1 = *($2)
	$7 = ($1 & [1])
	$1 = CALL $369(($4 + [24]), ( *($2 + [8]) ? ($2 + [1]) : $7 ), ( *($2 + [4]) ? uint_32($1 >> [1]) : $7 ))
	$7 = ($1 + [8])
	*((($4 + [176]) + [8])) = *($7)
	*($4 + [176]) = *($1)
	*($1) = (int_64)0
	*($7) = [0]
	if ( (*($4 + [24]) & [1]) ){ goto $label$24 }
	if ( (*($4 + [136]) & [1]) ){ goto $label$23 }
	goto $label$5 
	
.LABEL $label$24
	CALL _ZdlPv(*($4 + [32]))
	if ( ((*($4 + [136]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$23
	CALL _ZdlPv(*($4 + [144]))
	$1 = [1]
	if ( (*($4 + [120]) & [1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$7
	CALL $359(($4 + [208]))
	
.LABEL $label$6
	CALL $359(($4 + [192]))
	
.LABEL $label$5
	$1 = [1]
	if ( ((*($4 + [120]) & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL _ZdlPv(*($4 + [128]))
	
.LABEL $label$3
	$3 = *($0)
	*($4 + [104]) = [9726]
	*($4 + [108]) = CALL $393([9726])
	*($4 + [16]) = *($4 + [104])
	$7 = CALL $103(($4 + [112]), ($4 + [16]))
	*($4 + [120]) = $3
	*($4 + [128]) = *($7)
	$7 = *($8 + [60])
	if ( ($7 & $1) ){ goto $label$26 }
	$1 = uint_32($7 >> [1])
	$7 = (($8 + [60]) + [1])
	goto $label$25 
	
.LABEL $label$26
	$1 = *(($8 + [64]))
	$7 = *(($8 + [68]))
	
.LABEL $label$25
	*($4 + [92]) = $1
	*($4 + [88]) = $7
	*($4 + [8]) = *($4 + [88])
	$1 = CALL $103(($4 + [96]), ($4 + [8]))
	*($4 + [72]) = [9733]
	*($4 + [76]) = CALL $393([9733])
	*($4) = *($4 + [72])
	$7 = CALL $103(($4 + [80]), $4)
	$3 = *(($8 + [88]))
	*(($4 + [48])) = *(($8 + [80]))
	*($4 + [24]) = *($0)
	*($4 + [32]) = $3
	*($4 + [40]) = *($8 + [72])
	CALL $360((($4 + [24]) + [32]), ($4 + [176]))
	$1 = CALL $131(($4 + [136]), ($4 + [120]), *($1), *($7), ($4 + [24]))
	CALL $132($1)
	$7 = *($1 + [28])
	if ( ($7 == 0) ){ goto $label$27 }
	*(($1 + [32])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$27
	$7 = *($1 + [16])
	if ( ($7 == 0) ){ goto $label$28 }
	*(($1 + [20])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$28
	if ( ((*($4 + [56]) & [1]) == 0) ){ goto $label$29 }
	CALL _ZdlPv(*(($4 + [64])))
	
.LABEL $label$29
	*($4 + [24]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $6))
	if ( $8 ){ goto $label$30 }
	CALL eosio_assert([0], [19223])
	$8 = *($4 + [28])
	
.LABEL $label$30
	CALL $192(($4 + [24]))
	CALL $193(*($4 + [224]), $8)
	if ( ((*($4 + [176]) & [1]) == 0) ){ goto $label$31 }
	CALL _ZdlPv(*($4 + [184]))
	
.LABEL $label$31
	$9 = *($4 + [256])
	if ( ($9 == 0) ){ goto $label$32 }
	$10 = ($4 + [260])
	$7 = *($10)
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$34 }
	
.LOOP $label$35:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$36 }
	if ( ((*($1 + [60]) & [1]) == 0) ){ goto $label$37 }
	CALL _ZdlPv(*(($1 + [68])))
	
.LABEL $label$37
	if ( ((*($1 + [48]) & [1]) == 0) ){ goto $label$38 }
	CALL _ZdlPv(*(($1 + [56])))
	
.LABEL $label$38
	CALL _ZdlPv($1)
	
.LABEL $label$36
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$35 }
	$1 = *(($4 + [256]))
	goto $label$33 
	
.LABEL $label$34
	$1 = $9
	
.LABEL $label$33
	*($10) = $9
	CALL _ZdlPv($1)
	
.LABEL $label$32
	$global$0 = ($4 + [272])
	(unreachable)
	(unreachable)
}

void .FUNC $195 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [336])
	$global$0 = $2
	CALL require_auth(*($0))
	*((($2 + [288]) + [32])) = [0]
	*($2 + [296]) = $1
	*($2 + [304]) = (int_64)-1
	$3 = *($0)
	*($2 + [288]) = $3
	*($2 + [312]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $1, (int_64)-3020377498459275264, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $23(($2 + [288]), $4)
	
.LOOP $label$2:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [20]), ($2 + [248]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $23(($2 + [288]), $6)
	
.LABEL $label$3
	CALL $39(($2 + [288]), $5)
	$5 = $4
	if ( $4 ){ goto $label$2 }
	
.LABEL $label$1
	*((($2 + [248]) + [32])) = [0]
	*($2 + [264]) = (int_64)-1
	$3 = *($0)
	*($2 + [248]) = $3
	*($2 + [256]) = $1
	*($2 + [272]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $1, (int_64)-3020374757434588672, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $97(($2 + [248]), $4)
	
.LOOP $label$5:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [8]), ($2 + [208]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	$4 = CALL $97(($2 + [248]), $6)
	
.LABEL $label$6
	CALL $196(($2 + [248]), $5)
	$5 = $4
	if ( $4 ){ goto $label$5 }
	
.LABEL $label$4
	*((($2 + [208]) + [32])) = [0]
	*($2 + [224]) = (int_64)-1
	$3 = *($0)
	*($2 + [208]) = $3
	*($2 + [216]) = $1
	*($2 + [232]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $1, (int_64)-4421665416302691328, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$7 }
	$5 = CALL $153(($2 + [208]), $4)
	
.LOOP $label$8:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [108]), ($2 + [168]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$9 }
	$4 = CALL $153(($2 + [208]), $6)
	
.LABEL $label$9
	CALL $155(($2 + [208]), $5)
	$5 = $4
	if ( $4 ){ goto $label$8 }
	
.LABEL $label$7
	*((($2 + [168]) + [32])) = [0]
	*($2 + [184]) = (int_64)-1
	$3 = *($0)
	*($2 + [168]) = $3
	*($2 + [176]) = $1
	*($2 + [192]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $1, (int_64)4520724947059834880, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$10 }
	$5 = CALL $147(($2 + [168]), $4)
	
.LOOP $label$11:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [108]), ($2 + [128]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$12 }
	$4 = CALL $147(($2 + [168]), $6)
	
.LABEL $label$12
	CALL $149(($2 + [168]), $5)
	$5 = $4
	if ( $4 ){ goto $label$11 }
	
.LABEL $label$10
	*((($2 + [128]) + [32])) = [0]
	*($2 + [144]) = (int_64)-1
	*($2 + [152]) = (int_64)0
	$3 = *($0)
	*($2 + [128]) = $3
	*($2 + [136]) = $3
	$4 = CALL db_find_i64($3, $3, (int_64)-6039700478021828608, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$13 }
	$4 = CALL $78(($2 + [128]), $4)
	if ( ((int_32)*($4 + [56]) == (int_32)($2 + [128])) ){ goto $label$14 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$14
	$5 = CALL db_next_i64(*($4 + [60]), ($2 + [88]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$15 }
	CALL $78(($2 + [128]), $5)
	
.LABEL $label$15
	CALL $197(($2 + [128]), $4)
	
.LABEL $label$13
	*((($2 + [88]) + [32])) = [0]
	*($2 + [104]) = (int_64)-1
	$3 = *($0)
	*($2 + [88]) = $3
	*($2 + [96]) = $1
	*($2 + [112]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $1, (int_64)-7297964030780506112, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$16 }
	$5 = CALL $32(($2 + [88]), $4)
	
.LOOP $label$17:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [28]), ($2 + [48]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$18 }
	$4 = CALL $32(($2 + [88]), $6)
	
.LABEL $label$18
	CALL $41(($2 + [88]), $5)
	$5 = $4
	if ( $4 ){ goto $label$17 }
	
.LABEL $label$16
	*((($2 + [48]) + [32])) = [0]
	*($2 + [64]) = (int_64)-1
	$3 = *($0)
	*($2 + [48]) = $3
	*($2 + [56]) = $1
	*($2 + [72]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $1, (int_64)-3913339338187833344, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$19 }
	$5 = CALL $12(($2 + [48]), $4)
	
.LOOP $label$20:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [92]), ($2 + [8]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$21 }
	$4 = CALL $12(($2 + [48]), $6)
	
.LABEL $label$21
	CALL $13(($2 + [48]), $5)
	$5 = $4
	if ( $4 ){ goto $label$20 }
	
.LABEL $label$19
	*((($2 + [8]) + [32])) = [0]
	*($2 + [24]) = (int_64)-1
	$3 = *($0)
	*($2 + [8]) = $3
	*($2 + [16]) = $1
	*($2 + [32]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $1, (int_64)-3020381371621703680, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$22 }
	$5 = CALL $60(($2 + [8]), $4)
	
.LOOP $label$23:
	$4 = [0]
	$6 = CALL db_next_i64(*($5 + [36]), ($2 + [328]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$24 }
	$4 = CALL $60(($2 + [8]), $6)
	
.LABEL $label$24
	CALL $198(($2 + [8]), $5)
	$5 = $4
	if ( $4 ){ goto $label$23 }
	
.LABEL $label$22
	$6 = *($2 + [32])
	if ( ($6 == 0) ){ goto $label$25 }
	$0 = ($2 + [36])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$27 }
	
.LOOP $label$28:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$29 }
	CALL _ZdlPv($5)
	
.LABEL $label$29
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$28 }
	$4 = *(($2 + [32]))
	goto $label$26 
	
.LABEL $label$27
	$4 = $6
	
.LABEL $label$26
	*($0) = $6
	CALL _ZdlPv($4)
	
.LABEL $label$25
	$6 = *($2 + [72])
	if ( ($6 == 0) ){ goto $label$30 }
	$0 = ($2 + [76])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$32 }
	
.LOOP $label$33:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$34 }
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$35 }
	CALL _ZdlPv(*(($5 + [40])))
	
.LABEL $label$35
	CALL _ZdlPv($5)
	
.LABEL $label$34
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$33 }
	$4 = *(($2 + [72]))
	goto $label$31 
	
.LABEL $label$32
	$4 = $6
	
.LABEL $label$31
	*($0) = $6
	CALL _ZdlPv($4)
	
.LABEL $label$30
	$0 = *($2 + [112])
	if ( ($0 == 0) ){ goto $label$36 }
	$7 = ($2 + [116])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$38 }
	
.LOOP $label$39:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$40 }
	$6 = *($5 + [8])
	if ( ($6 == 0) ){ goto $label$41 }
	*(($5 + [12])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$41
	CALL _ZdlPv($5)
	
.LABEL $label$40
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$39 }
	$4 = *(($2 + [112]))
	goto $label$37 
	
.LABEL $label$38
	$4 = $0
	
.LABEL $label$37
	*($7) = $0
	CALL _ZdlPv($4)
	
.LABEL $label$36
	$6 = *($2 + [152])
	if ( ($6 == 0) ){ goto $label$42 }
	$0 = ($2 + [156])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$44 }
	
.LOOP $label$45:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$46 }
	CALL _ZdlPv($5)
	
.LABEL $label$46
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$45 }
	$4 = *(($2 + [152]))
	goto $label$43 
	
.LABEL $label$44
	$4 = $6
	
.LABEL $label$43
	*($0) = $6
	CALL _ZdlPv($4)
	
.LABEL $label$42
	$6 = *($2 + [192])
	if ( ($6 == 0) ){ goto $label$47 }
	$0 = ($2 + [196])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$49 }
	
.LOOP $label$50:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$51 }
	CALL _ZdlPv($5)
	
.LABEL $label$51
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$50 }
	$4 = *(($2 + [192]))
	goto $label$48 
	
.LABEL $label$49
	$4 = $6
	
.LABEL $label$48
	*($0) = $6
	CALL _ZdlPv($4)
	
.LABEL $label$47
	$6 = *($2 + [232])
	if ( ($6 == 0) ){ goto $label$52 }
	$0 = ($2 + [236])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$54 }
	
.LOOP $label$55:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$56 }
	CALL _ZdlPv($5)
	
.LABEL $label$56
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$55 }
	$4 = *(($2 + [232]))
	goto $label$53 
	
.LABEL $label$54
	$4 = $6
	
.LABEL $label$53
	*($0) = $6
	CALL _ZdlPv($4)
	
.LABEL $label$52
	$6 = *($2 + [272])
	if ( ($6 == 0) ){ goto $label$57 }
	$0 = ($2 + [276])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$59 }
	
.LOOP $label$60:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$61 }
	CALL _ZdlPv($5)
	
.LABEL $label$61
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$60 }
	$4 = *(($2 + [272]))
	goto $label$58 
	
.LABEL $label$59
	$4 = $6
	
.LABEL $label$58
	*($0) = $6
	CALL _ZdlPv($4)
	
.LABEL $label$57
	$0 = *($2 + [312])
	if ( ($0 == 0) ){ goto $label$62 }
	$7 = ($2 + [316])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$64 }
	
.LOOP $label$65:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$66 }
	$6 = *($5 + [4])
	if ( ($6 == 0) ){ goto $label$67 }
	*(($5 + [8])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$67
	CALL _ZdlPv($5)
	
.LABEL $label$66
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$65 }
	$4 = *(($2 + [312]))
	goto $label$63 
	
.LABEL $label$64
	$4 = $0
	
.LABEL $label$63
	*($7) = $0
	CALL _ZdlPv($4)
	
.LABEL $label$62
	$global$0 = ($2 + [336])
}

int_32 .FUNC $219 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [224])
	$global$0 = $3
	*(($4 = $3) + [184]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [80])) = [0]
	*(($4 + [120])) = (int_64)0
	*(($4 + [112])) = (int_64)0
	*(($4 + [104])) = (int_64)0
	*(($4 + [152])) = (int_64)0
	*(($4 + [144])) = (int_64)0
	*(($4 + [136])) = (int_64)0
	*($4 + [64]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [128]) = (int_64)0
	*($4 + [160]) = (int_64)0
	*($4 + [52]) = $2
	*($4 + [48]) = $2
	*($4 + [56]) = ($2 + $5)
	*($4 + [208]) = ($4 + [48])
	*($4 + [16]) = ($4 + [64])
	CALL $261(($4 + [16]), ($4 + [208]))
	*(($3 = ($4 + [8]))) = *($4 + [56])
	*($4) = *($4 + [48])
	*(($6 = (($4 + [192]) + [8]))) = *($3)
	*($4 + [192]) = *($4)
	$3 = *($6)
	*((($4 + [208]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [192])
	*($4 + [32]) = $0
	*($4 + [208]) = $0
	*($4 + [212]) = ($4 + [184])
	*($4 + [208]) = ($4 + [16])
	CALL $262(($4 + [208]), ($4 + [64]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = [1]
	if ( (*($4 + [72]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $400($2)
	$2 = [1]
	if ( ((*($4 + [72]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL _ZdlPv(*(($4 + [80])))
	$global$0 = ($4 + [224])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [224])
	return $2
}

int_32 .FUNC $218 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [160])
	$global$0 = $3
	*(($4 = $3) + [120]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [72]) + [24])) = (int_64)0
	*(($4 + [112])) = [0]
	*($4 + [80]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $5)
	*($4 + [144]) = ($4 + [56])
	*($4 + [24]) = ($4 + [72])
	CALL $251(($4 + [24]), ($4 + [144]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [64])
	*($4 + [8]) = *($4 + [56])
	*(($6 = (($4 + [128]) + [8]))) = *($3)
	*($4 + [128]) = *($4 + [8])
	$3 = *($6)
	*((($4 + [144]) + [8])) = $3
	*((($4 + [24]) + [24])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [128])
	*($4 + [40]) = $0
	*($4 + [144]) = $0
	*($4 + [148]) = ($4 + [120])
	*($4 + [144]) = ($4 + [24])
	CALL $252(($4 + [144]), ($4 + [72]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = [1]
	if ( (*($4 + [104]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $400($2)
	$2 = [1]
	if ( ((*($4 + [104]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL _ZdlPv(*(($4 + [112])))
	$global$0 = ($4 + [160])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [160])
	return $2
}

void .FUNC $190 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $377($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [60]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [68])))
	
.LABEL $label$11
	if ( ((*($1 + [48]) & [1]) == 0) ){ goto $label$12 }
	CALL _ZdlPv(*(($1 + [56])))
	
.LABEL $label$12
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$13 }
	CALL _ZdlPv($2)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $191 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [80])
	$global$0 = $2
	CALL require_auth(*($0))
	*(($2 + [64])) = [0]
	*($2 + [48]) = (int_64)-1
	*($2 + [56]) = (int_64)0
	*($2 + [68]) = [0]
	$3 = *($0)
	*($2 + [32]) = $3
	*($2 + [40]) = $3
	*($2 + [24]) = ($2 + [32])
	CALL $188(($2 + [72]), ($2 + [24]), $1)
	$4 = ($2 + [24])
	$0 = *($2 + [76])
	if ( ($0 == 0) ){ goto $label$2 }
	$5 = [0]
	if ( ((int_64)*($1) != (int_64)*($0 + [16])) ){ goto $label$1 }
	$4 = *($2 + [72])
	$5 = $0
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	*(($2 + [16])) = [0]
	*($2 + [8]) = (int_64)0
	$0 = CALL $393([9994])
	if ( ((uint_32)$0 >= (uint_32)[-16]) ){ goto $label$3 }
	$6 = ((int_32)$5 != (int_32)[0])
	if ( ((uint_32)$0 >= (uint_32)[11]) ){ goto $label$6 }
	*($2 + [8]) = ($0 << [1])
	$1 = (($2 + [8]) | [1])
	if ( $0 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$7 = (($0 + [16]) & [-16])
	$1 = CALL _Znwj($7)
	*($2 + [8]) = ($7 | [1])
	*($2 + [16]) = $1
	*($2 + [12]) = $0
	
.LABEL $label$5
	CALL memcpy($1, [9994], $0)
	
.LABEL $label$4
	*(($1 + $0)) = [0]
	CALL eosio_assert($6, CALL $5($0, [106], ($2 + [8])))
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$7 }
	CALL _ZdlPv(*($2 + [16]))
	
.LABEL $label$7
	*($2 + [72]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $4))
	if ( $5 ){ goto $label$8 }
	CALL eosio_assert([0], [19223])
	$5 = *($2 + [76])
	
.LABEL $label$8
	CALL $192(($2 + [72]))
	CALL $193(*($2 + [24]), $5)
	$1 = *($2 + [56])
	if ( ($1 == 0) ){ goto $label$9 }
	$4 = ($2 + [60])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$11 }
	
.LOOP $label$12:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$13 }
	if ( ((*($0 + [60]) & [1]) == 0) ){ goto $label$14 }
	CALL _ZdlPv(*(($0 + [68])))
	
.LABEL $label$14
	if ( ((*($0 + [48]) & [1]) == 0) ){ goto $label$15 }
	CALL _ZdlPv(*(($0 + [56])))
	
.LABEL $label$15
	CALL _ZdlPv($0)
	
.LABEL $label$13
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$12 }
	$0 = *(($2 + [56]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $1
	
.LABEL $label$10
	*($4) = $1
	CALL _ZdlPv($0)
	
.LABEL $label$9
	$global$0 = ($2 + [80])
	return (unreachable)
	
.LABEL $label$3
	CALL $359(($2 + [8]))
}

int_32 .FUNC $378 (int_32 $0)
{
	return (((int_32)$0 == (int_32)[32]) | (($0 + [-9]) <= [5]))
}

int_32 .FUNC $379 ()
{
	return [10336]
}

int_32 .FUNC $372 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$3 }
	$5 = uint_32($3 >> [1])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = *($0 + [4])
	if ( ($5 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ($2 == 0) ){ goto $label$4 }
	if ( $4 ){ goto $label$6 }
	$6 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$6
	$6 = *($0 + [8])
	
.LABEL $label$5
	$2 = ( $4 ? $2 : ($4 <= $2) )
	$4 = ($5 - $1)
	$4 = ($4 - $2)
	if ( ($4 == 0) ){ goto $label$7 }
	$1 = ($6 + $1)
	CALL memmove($1, ($1 + $2), $4)
	$3 = *($0)
	
.LABEL $label$7
	$2 = ($5 - $2)
	if ( ($3 & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($6 + $2)) = [0]
	
.LABEL $label$4
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $373 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	if ( ($3 & [1]) ){ goto $label$3 }
	$4 = ($0 + [1])
	$5 = [-1]
	$0 = uint_32($3 >> [1])
	if ( ((uint_32)$0 <= (uint_32)$2) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [8])
	$5 = [-1]
	$0 = *($0 + [4])
	if ( ((uint_32)$0 > (uint_32)$2) ){ goto $label$1 }
	
.LABEL $label$2
	return $5
	
.LABEL $label$1
	$0 = ($0 - $2)
	if ( ($0 == 0) ){ goto $label$4 }
	$0 = CALL $391(($4 + $2), ($1 & [255]), $0)
	return ( ($0 - $4) ? [-1] : $0 )
	
.LABEL $label$4
	return ( ([0] - $4) ? [-1] : [0] )
}

int_32 .FUNC $370 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *($0)
	$5 = ($4 & [1])
	if ( $5 ){ goto $label$5 }
	$4 = uint_32($4 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = [10]
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$6
	if ( ((uint_32)($6 - $4) >= (uint_32)$3) ){ goto $label$10 }
	CALL $363($0, $6, (($4 + $3) - $6), $4, $1, [0], $3, $2)
	goto $label$9 
	
.LABEL $label$10
	if ( ($3 == 0) ){ goto $label$9 }
	if ( $5 ){ goto $label$8 }
	$5 = ($0 + [1])
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( ($1 == 0) ){ goto $label$7 }
	goto $label$2 
	
.LABEL $label$9
	return $0
	
.LABEL $label$8
	$5 = *($0 + [8])
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( $1 ){ goto $label$2 }
	
.LABEL $label$7
	CALL memmove($6, $2, $3)
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL memmove(($6 + $3), $6, $1)
	CALL memmove($6, ( ( ($2 + $3) ? $2 : ((uint_32)($5 + $4) > (uint_32)$2) ) ? $2 : ((uint_32)$6 <= (uint_32)$2) ), $3)
	
.LABEL $label$1
	$3 = ($4 + $3)
	if ( (*($0) & [1]) ){ goto $label$11 }
	*($0) = ($3 << [1])
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$11
	*($0 + [4]) = $3
	*(($5 + $3)) = [0]
	(unreachable)
	return $0
}

int_32 .FUNC $371 (int_32 $0, int_32 $1, int_32 $2)
{
	return CALL $370($0, $1, $2, CALL $393($2))
}

void .FUNC $376 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $365(($2 + [16]), [10], [0])
	$3 = *($2 + [16])
	$4 = ( *($2 + [20]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = (($2 + [16]) | [1])
	$6 = ($2 + [24])
	
.LOOP $label$2:
	*($2) = $1
	$3 = CALL $384(( *($6) ? $5 : ($3 & [1]) ), ($4 + [1]), [20275], $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$1 }
	$4 = $3
	goto $label$3 
	
.LABEL $label$4
	$4 = (($4 << [1]) | [1])
	
.LABEL $label$3
	CALL $365(($2 + [16]), $4, [0])
	$3 = *($2 + [16])
	goto $label$2 
	
.LABEL $label$1
	CALL $365(($2 + [16]), $3, [0])
	*(($0 + [8])) = *((($2 + [16]) + [8]))
	*($0) = *($2 + [16])
	$global$0 = ($2 + [32])
}

void .FUNC $377 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $374 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$5 }
	$5 = uint_32($5 >> [1])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ($5 <= $1) ){ goto $label$3 }
	$5 = ($5 - $1)
	$2 = ( $5 ? $2 : ($5 <= $2) )
	if ( $6 ){ goto $label$6 }
	$0 = ($0 + [1])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( ($5 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$6
	$0 = *($0 + [8])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$1 = CALL $392(($0 + $1), $3, $5)
	if ( ($1 == 0) ){ goto $label$1 }
	return $1
	
.LABEL $label$1
	(unreachable)
	return ( [-1] ? $6 : ($2 <= $4) )
}

void .FUNC $375 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $365(($2 + [16]), [10], [0])
	$3 = *($2 + [16])
	$4 = ( *($2 + [20]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = (($2 + [16]) | [1])
	$6 = ($2 + [24])
	
.LOOP $label$2:
	*($2) = $1
	$3 = CALL $384(( *($6) ? $5 : ($3 & [1]) ), ($4 + [1]), [20272], $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$1 }
	$4 = $3
	goto $label$3 
	
.LABEL $label$4
	$4 = (($4 << [1]) | [1])
	
.LABEL $label$3
	CALL $365(($2 + [16]), $4, [0])
	$3 = *($2 + [16])
	goto $label$2 
	
.LABEL $label$1
	CALL $365(($2 + [16]), $3, [0])
	*(($0 + [8])) = *((($2 + [16]) + [8]))
	*($0) = *($2 + [16])
	$global$0 = ($2 + [32])
}

void .FUNC $174 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [80])
	$global$0 = $3
	*($3 + [51]) = $2
	CALL require_auth($1)
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$4 = *($0)
	*($3 + [8]) = $4
	*($3 + [16]) = $4
	$2 = CALL db_find_i64($4, $4, (int_64)-3841123346188075008, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	$2 = CALL $175(($3 + [8]), $2)
	if ( ((int_32)*($2 + [16]) == (int_32)($3 + [8])) ){ goto $label$4 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$4
	$4 = *($0)
	*($3 + [64]) = ($3 + [51])
	CALL $176(($3 + [8]), $2, $4, ($3 + [64]))
	$5 = *($3 + [32])
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$6 = *($0)
	if ( ((int_64)$4 == (int_64)CALL current_receiver()) ){ goto $label$5 }
	CALL eosio_assert([0], [19435])
	
.LABEL $label$5
	*(($0 = CALL _Znwj([32])) + [16]) = ($3 + [8])
	*($0) = $1
	*($0 + [8]) = *($3 + [51])
	CALL memcpy(($3 + [64]), $0, [8])
	CALL memcpy((($3 + [64]) | [8]), ($0 + [8]), [1])
	$4 = *($0)
	$5 = CALL db_store_i64(*((($3 + [8]) + [8])), (int_64)-3841123346188075008, $6, $4, ($3 + [64]), [9])
	*($0 + [20]) = $5
	$2 = ($3 + [24])
	if ( (uint_64)($4 <= *($2)) ){ goto $label$6 }
	*($2) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($3 + [56]) = $0
	$4 = *($0)
	*($3 + [64]) = $4
	*($3 + [52]) = $5
	$7 = ($3 + [36])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*((($3 + [8]) + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $4
	*($2 + [16]) = $5
	*($3 + [56]) = [0]
	*($2) = $0
	*($7) = ($2 + [24])
	$0 = *($3 + [56])
	*($3 + [56]) = [0]
	if ( $0 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $177(($3 + [32]), ($3 + [56]), ($3 + [64]), ($3 + [52]))
	$0 = *($3 + [56])
	*($3 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL _ZdlPv($0)
	
.LABEL $label$7
	$5 = *($3 + [32])
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($3 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$13 }
	CALL _ZdlPv($2)
	
.LABEL $label$13
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($3 + [32]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $5
	
.LABEL $label$10
	*($7) = $5
	CALL _ZdlPv($0)
	
.LABEL $label$1
	$global$0 = ($3 + [80])
}

int_32 .FUNC $175 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [19191])
	
.LABEL $label$5
	$2 = CALL $397($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([32])) + [16]) = $0
	$7 = ($5 + [8])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [19214])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	goto $label$7 
	
.LABEL $label$8
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$7 }
	CALL eosio_assert([0], [19214])
	
.LABEL $label$7
	CALL memcpy($7, $8, [1])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $177(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $400($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL _ZdlPv($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $176 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = $global$0
	$5 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	$6 = *($1)
	$4 = $4
	$3 = ($4 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	CALL memcpy(($4 + [-8]), ($1 + [8]), [1])
	CALL db_update_i64(*($1 + [20]), $2, $3, [9])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = $5
}

void .FUNC $177 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $377($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $170 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	*($1 + [83]) = *(*($3))
	$3 = ($1 + [40])
	*($5 + [16]) = *($3)
	$6 = ($1 + [64])
	*($5 + [24]) = *($6)
	$7 = ($1 + [72])
	*($5 + [32]) = *($7)
	$8 = *($1)
	$9 = $4
	$4 = ($9 + [-80])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($9 + [-9])
	*($5 + [40]) = $5
	*($5 + [52]) = ($1 + [8])
	*($5 + [48]) = $1
	*($5 + [56]) = ($1 + [16])
	*($5 + [60]) = ($1 + [24])
	*($5 + [64]) = ($1 + [32])
	*($5 + [68]) = $3
	*($5 + [72]) = ($1 + [48])
	*($5 + [76]) = ($1 + [56])
	*($5 + [80]) = $6
	*($5 + [84]) = $7
	*($5 + [88]) = ($1 + [80])
	*($5 + [92]) = ($1 + [81])
	*($5 + [96]) = ($1 + [82])
	*($5 + [100]) = ($1 + [83])
	*($5 + [104]) = ($1 + [84])
	CALL $87(($5 + [48]), ($5 + [40]))
	CALL db_update_i64(*($1 + [92]), $2, $4, [71])
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$4 = (($5 + [16]) + [8])
	*($5 + [48]) = *($3)
	if ( (CALL $392(($5 + [16]), ($5 + [48]), [8]) == 0) ){ goto $label$4 }
	$9 = ($1 + [96])
	$3 = *($9)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$5 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728576, ($5 + [40]), $8)
	*($9) = $3
	
.LABEL $label$5
	CALL db_idx64_update($3, $2, ($5 + [48]))
	
.LABEL $label$4
	$3 = (($5 + [16]) + [16])
	*($5 + [48]) = *($6)
	if ( (CALL $392($4, ($5 + [48]), [8]) == 0) ){ goto $label$6 }
	$6 = ($1 + [100])
	$4 = *($6)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$7 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728575, ($5 + [40]), $8)
	*($6) = $4
	
.LABEL $label$7
	CALL db_idx64_update($4, $2, ($5 + [48]))
	
.LABEL $label$6
	*($5 + [48]) = *($7)
	if ( (CALL $392($3, ($5 + [48]), [8]) == 0) ){ goto $label$8 }
	$4 = ($1 + [104])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$9 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728574, ($5 + [40]), $8)
	*($4) = $1
	
.LABEL $label$9
	CALL db_idx64_update($1, $2, ($5 + [48]))
	
.LABEL $label$8
	$global$0 = ($5 + [112])
}

void .FUNC $171 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [96])
	$global$0 = $2
	*($2 + [59]) = $1
	CALL require_auth(*($0))
	*(($2 + [48])) = [0]
	*($2 + [32]) = (int_64)-1
	$3 = *($0)
	*($2 + [16]) = $3
	*($2 + [24]) = $3
	*($2 + [40]) = (int_64)0
	$1 = CALL db_lowerbound_i64($3, $3, (int_64)-4057297652277051392, (int_64)0)
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$3 }
	$1 = CALL $9(($2 + [16]), $1)
	$3 = *($0)
	*($2 + [64]) = ($2 + [59])
	CALL $172(($2 + [16]), $1, $3, ($2 + [64]))
	$4 = *($2 + [40])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = *($0)
	*($2 + [12]) = ($2 + [59])
	*($2 + [8]) = ($2 + [16])
	*($2 + [88]) = $5
	if ( ((int_64)$3 == (int_64)CALL current_receiver()) ){ goto $label$4 }
	CALL eosio_assert([0], [19435])
	
.LABEL $label$4
	*($2 + [68]) = ($2 + [8])
	*($2 + [64]) = ($2 + [16])
	*($2 + [72]) = ($2 + [88])
	*(($0 = CALL _Znwj([40])) + [16]) = (int_64)0
	*($0 + [24]) = ($2 + [16])
	CALL $173(($2 + [64]), $0)
	*($2 + [80]) = $0
	$3 = *($0)
	*($2 + [64]) = $3
	$4 = *($0 + [28])
	*($2 + [60]) = $4
	$6 = ($2 + [44])
	$1 = *($6)
	if ( ((uint_32)$1 >= (uint_32)*(($2 + [48]))) ){ goto $label$7 }
	*($1 + [8]) = $3
	*($1 + [16]) = $4
	*($2 + [80]) = [0]
	*($1) = $0
	*($6) = ($1 + [24])
	$0 = *($2 + [80])
	*($2 + [80]) = [0]
	if ( $0 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $124(($2 + [40]), ($2 + [80]), ($2 + [64]), ($2 + [60]))
	$0 = *($2 + [80])
	*($2 + [80]) = [0]
	if ( ($0 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL _ZdlPv($0)
	
.LABEL $label$5
	$4 = *($2 + [40])
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($2 + [44])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL _ZdlPv($1)
	
.LABEL $label$11
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($2 + [40]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $4
	
.LABEL $label$8
	*($6) = $4
	CALL _ZdlPv($0)
	
.LABEL $label$1
	$global$0 = ($2 + [96])
}

void .FUNC $172 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-15])
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = ($1 + [8])
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [16])
	CALL $308(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [28]), $2, $4, [17])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

void .FUNC $173 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-4057297652277051392, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $9($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $307(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [19728])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	$2 = $2
	$6 = ($2 + [-32])
	$global$0 = $6
	*($3 + [12]) = $6
	*($3 + [8]) = $6
	*($3 + [16]) = ($2 + [-15])
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [8])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	CALL $308(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($4 + [8]), (int_64)-4057297652277051392, *(*($0 + [8])), $7, $6, [17])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = ($3 + [48])
}

void .FUNC $178 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$1 = ($global$0 - [96])
	$global$0 = $1
	CALL require_auth(*($0))
	*(($2 = ($1 + [48]))) = [0]
	*($1 + [32]) = (int_64)-1
	*($1 + [40]) = (int_64)0
	$3 = *($0)
	*($1 + [16]) = $3
	*($1 + [24]) = $3
	*($1 + [12]) = [101]
	$4 = (($1 + [16]) + [24])
	$5 = (($1 + [64]) + [8])
	$6 = $3
	
.LOOP $label$1:
	*($1 + [4]) = $0
	*($1) = ($1 + [12])
	*($1 + [88]) = $6
	if ( ((int_64)$3 == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19435])
	
.LABEL $label$2
	*($5) = ($1 + [88])
	*($1 + [68]) = $1
	*($1 + [64]) = ($1 + [16])
	*(($7 = CALL _Znwj([28])) + [12]) = [0]
	*($7 + [4 align=4]) = (int_64)0
	*($7 + [16]) = ($1 + [16])
	CALL $179(($1 + [64]), $7)
	*($1 + [80]) = $7
	$8 = *($7)
	*($1 + [63]) = $8
	$9 = *($7 + [20])
	*($1 + [64]) = $9
	$10 = (($1 + [16]) + [28])
	$11 = *($10)
	if ( ((uint_32)$11 >= (uint_32)*($2)) ){ goto $label$5 }
	*($11 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $8) & (int_64)255)
	*($11 + [16]) = $9
	*($1 + [80]) = [0]
	*($11) = $7
	*($10) = ($11 + [24])
	$7 = *($1 + [80])
	*($1 + [80]) = [0]
	if ( ($7 == 0) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	CALL $107($4, ($1 + [80]), ($1 + [63]), ($1 + [64]))
	$7 = *($1 + [80])
	*($1 + [80]) = [0]
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$11 = *($7 + [4])
	if ( ($11 == 0) ){ goto $label$6 }
	*(($7 + [8])) = $11
	CALL _ZdlPv($11)
	
.LABEL $label$6
	CALL _ZdlPv($7)
	
.LABEL $label$3
	$7 = *($1 + [12])
	*($1 + [12]) = ($7 + [1])
	if ( ((int_32)$7 > (int_32)[159]) ){ goto $label$7 }
	$6 = *($0)
	$3 = *($1 + [16])
	goto $label$1 
	
.LABEL $label$7
	$8 = *($1 + [40])
	if ( ($8 == 0) ){ goto $label$8 }
	$9 = ($1 + [44])
	$7 = *($9)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$10 }
	
.LOOP $label$11:
	$7 = ($7 + [-24])
	$11 = *($7)
	*($7) = [0]
	if ( ($11 == 0) ){ goto $label$12 }
	$0 = *($11 + [4])
	if ( ($0 == 0) ){ goto $label$13 }
	*(($11 + [8])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$13
	CALL _ZdlPv($11)
	
.LABEL $label$12
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$11 }
	$7 = *(($1 + [40]))
	goto $label$9 
	
.LABEL $label$10
	$7 = $8
	
.LABEL $label$9
	*($9) = $8
	CALL _ZdlPv($7)
	
.LABEL $label$8
	$global$0 = ($1 + [96])
}

void .FUNC $179 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$2 = ($global$0 - [64])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = *(*($3))
	*($1) = $4
	$5 = *(($3 + [4]))
	$6 = *($0)
	$7 = (int_64)0
	*(($8 = (($3 = $2) + [32]))) = (int_64)0
	*(($3 + [48])) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [40]) = (int_64)0
	*($3 + [16]) = [1]
	CALL $180($3, $5, $4, (int_64)1)
	*($8) = *(($3 + [8]))
	*($3 + [24]) = *($3)
	$4 = CALL $393([8341])
	if ( ($4 <= [8]) ){ goto $label$3 }
	CALL eosio_assert([0], [10159])
	goto $label$2 
	
.LABEL $label$3
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = (int_64)0
	
.LOOP $label$4:
	$5 = *(($4 + [8340]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$5 }
	CALL eosio_assert([0], [10204])
	
.LABEL $label$5
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$4 }
	
.LABEL $label$1
	$9 = ((int_64)$7 & (int_64)72057594037927935)
	$10 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$9 = $7
	$5 = $4
	$4 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$9 = $7
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$5 = ((int_32)$4 < (int_32)[6])
	$8 = ($4 + [1])
	$4 = $8
	if ( $5 ){ goto $label$10 }
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [18905])
	
.LABEL $label$6
	*(($5 = (($3 + [16]) + [32]))) = $10
	*(($8 = (($3 + [16]) + [24]))) = (int_64)0
	$11 = ($1 + [8])
	$4 = *($11)
	if ( ((int_32)$4 == (int_32)*(($1 + [12]))) ){ goto $label$12 }
	*($4) = *($3 + [16])
	*(($4 + [32])) = *($5)
	*(($4 + [24])) = *($8)
	*(($4 + [16])) = *((($3 + [16]) + [16]))
	*(($4 + [8])) = *((($3 + [16]) + [8]))
	$5 = (*($11) + [40])
	*($11) = $5
	goto $label$11 
	
.LABEL $label$12
	CALL $184(($1 + [4]), ($3 + [16]))
	$5 = *($1 + [8])
	
.LABEL $label$11
	$8 = *($1 + [4])
	$12 = ($5 - $8)
	$9 = (CASTING uint_64)(uint_32 ((int_32)$12 / (int_32)[40]))
	$4 = [34]
	
.LOOP $label$13:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$13 }
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$17 }
	$12 = (((int_32)((uint_32)($12 + [-40]) / (uint_32)[40]) * (int_32)[33]) + $4)
	if ( ($12 <= [513]) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$12 = ($4 + [-33])
	if ( ((uint_32)$12 >= (uint_32)[513]) ){ goto $label$15 }
	
.LABEL $label$16
	$2 = ($2 - (($12 + [15]) & [-16]))
	$global$0 = $2
	goto $label$14 
	
.LABEL $label$15
	$2 = CALL $397($12)
	
.LABEL $label$14
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $12)
	$4 = $2
	if ( ((int_32)$12 > (int_32)[0]) ){ goto $label$18 }
	CALL eosio_assert([0], [18965])
	$4 = *($3 + [4])
	
.LABEL $label$18
	CALL memcpy($4, $1, [1])
	$4 = ($4 + [1])
	*($3 + [4]) = $4
	$9 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [8])) - *(($1 + [4]))) / (int_32)[40]))
	
.LOOP $label$19:
	$5 = (CASTING uint_32)(uint_64 $9)
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	$8 = ((int_64)$9) != (int_64)0
	*($3 + [16]) = (($8) << [7]) | ($5 & [127]))
	if ( ((int_32)(*(($3 + [8])) - $4) > (int_32)[0]) ){ goto $label$20 }
	CALL eosio_assert([0], [18965])
	$4 = *($3 + [4])
	
.LABEL $label$20
	CALL memcpy($4, ($3 + [16]), [1])
	$4 = ($4 + [1])
	*($3 + [4]) = $4
	if ( $8 ){ goto $label$19 }
	$5 = *($11)
	$4 = *(($1 + [4]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$21 }
	
.LOOP $label$22:
	*($3 + [56]) = $3
	*($3 + [16]) = $4
	*((($3 + [16]) + [8])) = ($4 + [24])
	*($3 + [20]) = ($4 + [8])
	CALL $320(($3 + [16]), ($3 + [56]))
	$4 = ($4 + [40])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$22 }
	
.LABEL $label$21
	$9 = *($1)
	*($1 + [20]) = CALL db_store_i64(*($6 + [8]), (int_64)7687445405353639936, *(*($0 + [8])), $9, $2, $12)
	if ( ((uint_32)$12 >= (uint_32)[513]) ){ goto $label$25 }
	if ( ((uint_64)*($6 + [16]) <= (uint_64)$9) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	CALL $400($2)
	if ( ((uint_64)*($6 + [16]) > (uint_64)$9) ){ goto $label$23 }
	
.LABEL $label$24
	*(($6 + [16])) = ((int_64)$9 + (int_64)1)
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$23
	$global$0 = ($3 + [64])
}

int_32 .FUNC $361 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$6 = ($5 & [1])
	$5 = *($1)
	$5 = ( *($1 + [4]) ? uint_32($5 >> [1]) : $6 )
	if ( ($5 <= $2) ){ goto $label$1 }
	$5 = ($5 - $2)
	$3 = ( $5 ? $3 : ($5 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$3 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$2 }
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$3
	$8 = (($3 + [16]) & [-16])
	$5 = CALL _Znwj($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $3
	
.LABEL $label$2
	CALL memcpy($5, (( $7 ? ($1 + [1]) : $6 ) + $2), $3)
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $237 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [192])
	$global$0 = $3
	*(($4 = $3) + [152]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [64]) + [24])) = (int_64)0
	*(($4 + [80])) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [64]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [104]) = [0]
	*($4 + [112]) = (int_64)0
	*($4 + [120]) = (int_64)0
	*($4 + [128]) = [0]
	*($4 + [52]) = $2
	*($4 + [48]) = $2
	*($4 + [56]) = ($2 + $5)
	*($4 + [176]) = ($4 + [48])
	*($4 + [16]) = ($4 + [64])
	CALL $273(($4 + [16]), ($4 + [176]))
	*(($3 = ($4 + [8]))) = *($4 + [56])
	*($4) = *($4 + [48])
	*(($6 = (($4 + [160]) + [8]))) = *($3)
	*($4 + [160]) = *($4)
	$3 = *($6)
	*((($4 + [176]) + [8])) = $3
	*((($4 + [16]) + [24])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [160])
	*($4 + [32]) = $0
	*($4 + [176]) = $0
	*($4 + [180]) = ($4 + [152])
	*($4 + [176]) = ($4 + [16])
	CALL $274(($4 + [176]), ($4 + [64]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $400($2)
	
.LABEL $label$4
	$2 = *(($4 + [120]))
	if ( ($2 == 0) ){ goto $label$5 }
	*(($4 + [124])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$5
	if ( ((*(($4 + [96])) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*(($4 + [104])))
	
.LABEL $label$6
	$global$0 = ($4 + [192])
	return [1]
}

void .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ($2 - $3)
	if ( ((int_32)$4 <= (int_32)[-3]) ){ goto $label$2 }
	$4 = (*($0 + [8]) - $3)
	$5 = int_32($4 >> [1])
	$6 = ($5 + [1])
	$4 = ( ( $6 ? $4 : ($4 <= $6) ) ? [2147483647] : (int_32($4 >> [1]) <= [1073741823]) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$1 }
	$6 = CALL _Znwj(($4 << [1]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	
.LABEL $label$3
	*(($5 = ($6 + ($5 << [1])))) = *($1)
	$2 = ($2 - $3)
	$1 = ($5 - $2)
	$4 = ($6 + ($4 << [1]))
	$6 = ($5 + [2])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $4
	if ( ($3 == 0) ){ goto $label$6 }
	CALL _ZdlPv($3)
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$2
	CALL $377($0)
	
.LABEL $label$1
	CALL abort()
	(unreachable)
}

int_32 .FUNC $235 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [64]) = (int_64)0
	*($4 + [72]) = [0]
	*($4 + [52]) = $2
	*($4 + [48]) = $2
	*($4 + [56]) = ($2 + $7)
	*($4 + [96]) = ($4 + [48])
	*($4 + [16]) = ($4 + [64])
	CALL $259(($4 + [16]), ($4 + [96]))
	*(($3 = ($4 + [8]))) = *($4 + [56])
	*($4) = *($4 + [48])
	*(($8 = (($4 + [80]) + [8]))) = *($3)
	*($4 + [80]) = *($4)
	$3 = *($8)
	*((($4 + [96]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [80])
	*($4 + [32]) = $0
	*($4 + [96]) = $0
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$8 = *($4 + [73])
	$9 = *($4 + [72])
	$0 = *($4 + [64])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $0), (int_64 ($9 & [255])), (int_32 ($8 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $400($2)
	
.LABEL $label$5
	$global$0 = ($4 + [112])
	return [1]
}

int_32 .FUNC $360 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL _Znwj($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $97 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [16])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [19191])
	
.LABEL $label$5
	$2 = CALL $397($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([16])) + [4]) = $0
	$7 = ($5 + [1])
	if ( ($4 == 0) ){ goto $label$8 }
	CALL memcpy($5, $2, [1])
	$8 = ($2 + [1])
	if ( ((int_32)$4 != (int_32)[1]) ){ goto $label$7 }
	CALL eosio_assert([0], [19214])
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [19214])
	CALL memcpy($5, $2, [1])
	$8 = ($2 + [1])
	
.LABEL $label$7
	CALL memcpy($7, $8, [1])
	*($5 + [8]) = $1
	*($3 + [8]) = $5
	$7 = *($5)
	*($3 + [7]) = $7
	*($3) = $1
	$8 = ($0 + [28])
	$4 = *($8)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255)
	*($4 + [16]) = $1
	*($3 + [8]) = [0]
	*($4) = $5
	*($8) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $99(($0 + [24]), ($3 + [8]), ($3 + [7]), $3)
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $400($2)
	
.LABEL $label$9
	$1 = *($3 + [8])
	*($3 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL _ZdlPv($1)
	
.LABEL $label$12
	$global$0 = ($3 + [16])
	return $5
}

void .FUNC $90 (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$5 = ($global$0 - [32])
	$global$0 = $5
	*(($5 + [24])) = [0]
	*($5 + [16]) = (int_64)0
	$6 = *($2)
	$7 = *($2 + [4])
	$8 = CALL $393([9340])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$2 }
	$7 = ($7 - $6)
	$9 = ((int_32($7 >> [1]) + [-3]) <= [2])
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$5 }
	*($5 + [16]) = ($8 << [1])
	$6 = (($5 + [16]) | [1])
	if ( $8 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$10 = (($8 + [16]) & [-16])
	$6 = CALL _Znwj($10)
	*($5 + [16]) = ($10 | [1])
	*($5 + [24]) = $6
	*($5 + [20]) = $8
	
.LABEL $label$4
	CALL memcpy($6, [9340], $8)
	
.LABEL $label$3
	*(($6 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($8, [166], ($5 + [16])))
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($5 + [24]))
	
.LABEL $label$6
	$8 = *($2)
	if ( ((int_32)$7 != (int_32)[8]) ){ goto $label$11 }
	$2 = *(($2 + [4]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	if ( ((int_32)*($8) == (int_32)[240]) ){ goto $label$12 }
	$8 = ($8 + [2])
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$13 }
	$8 = $2
	
.LABEL $label$12
	*(($5 + [8])) = [0]
	*($5) = (int_64)0
	$6 = CALL $393([9352])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = ((int_32)$8 != (int_32)$2)
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$10 }
	*($5) = ($6 << [1])
	$8 = ($5 | [1])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$6 = ($4 << [1])
	$8 = ($8 + $6)
	CALL $37($0, $1, *($8), *($8 + [1]), (int_64)1, [0])
	$8 = (*($2) + $6)
	CALL $43($0, $3, *($8), *($8 + [1]), (int_64)1)
	CALL $25($0, $1)
	CALL $25($0, $3)
	goto $label$7 
	
.LABEL $label$10
	$7 = (($6 + [16]) & [-16])
	$8 = CALL _Znwj($7)
	*($5) = ($7 | [1])
	*($5 + [8]) = $8
	*($5 + [4]) = $6
	
.LABEL $label$9
	CALL memcpy($8, [9352], $6)
	
.LABEL $label$8
	*(($8 + $6)) = [0]
	CALL eosio_assert($2, CALL $5($8, [167], $5))
	if ( ((*($5) & [1]) == 0) ){ goto $label$14 }
	CALL _ZdlPv(*($5 + [8]))
	
.LABEL $label$14
	CALL $37($0, $1, [240], (int_64)1, (int_64)1, [0])
	CALL $43($0, $3, [240], (int_64)1, (int_64)1)
	
.LABEL $label$7
	CALL $91($0, $3)
	$global$0 = ($5 + [32])
	return (unreachable)
	
.LABEL $label$2
	CALL $359(($5 + [16]))
	
.LABEL $label$1
	CALL $359($5)
	(unreachable)
}

void .FUNC $86 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	$6 = *(*($3) + [4])
	*($1 + [8]) = (*($6 + [8]) - *(*(($3 + [4]))))
	*($1 + [10]) = (*($6 + [10]) - *(*(($3 + [8]))))
	$7 = *($1)
	$4 = $4
	$3 = ($4 + [-32])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-14])
	*($5 + [16]) = $5
	*($5 + [28]) = ($1 + [8])
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [10])
	*($5 + [36]) = ($1 + [12])
	*($5 + [40]) = ($1 + [16])
	CALL $205(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [28]), $2, $3, [18])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

int_32 .FUNC $232 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [160])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [96]) = (int_64)0
	*($4 + [88]) = [0]
	*($4 + [104]) = (int_64)0
	*($4 + [76]) = $2
	*($4 + [72]) = $2
	*($4 + [80]) = ($2 + $7)
	*($4 + [144]) = ($4 + [72])
	*($4 + [40]) = ($4 + [88])
	CALL $272(($4 + [40]), ($4 + [144]))
	*(($8 = (($4 + [24]) + [8]))) = *($4 + [80])
	*($4 + [24]) = *($4 + [72])
	*(($3 = (($4 + [128]) + [8]))) = *($8)
	*($4 + [128]) = *($4 + [24])
	$8 = *($3)
	*((($4 + [144]) + [8])) = $8
	*(($4 + [64])) = $8
	*($4 + [40]) = $0
	*($4 + [48]) = $1
	$0 = *($4 + [128])
	*($4 + [56]) = $0
	*($4 + [144]) = $0
	*(($8 = (($4 + [112]) + [8]))) = *($4 + [104])
	*($4 + [112]) = *($4 + [96])
	$9 = *($4 + [88])
	*($3) = *($8)
	*($4 + [128]) = *($4 + [112])
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$0 = *((($4 + [128]) + [8]))
	*((($4 + [144]) + [8])) = $0
	*((($4 + [8]) + [8])) = $0
	$0 = *($4 + [128])
	*($4 + [8]) = $0
	*($4 + [144]) = $0
	CALL void $3((int_32 ($9 & [255])), (int_32 ($4 + [8])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $400($2)
	
.LABEL $label$5
	$global$0 = ($4 + [160])
	return [1]
}

int_32 .FUNC $231 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [128])
	$global$0 = $3
	*(($4 = $3) + [88]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [80])) = [0]
	*($4 + [64]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [84]) = [0]
	*($4 + [52]) = $2
	*($4 + [48]) = $2
	*($4 + [56]) = ($2 + $5)
	*($4 + [112]) = ($4 + [48])
	*($4 + [16]) = ($4 + [64])
	CALL $268(($4 + [16]), ($4 + [112]))
	*(($3 = ($4 + [8]))) = *($4 + [56])
	*($4) = *($4 + [48])
	*(($6 = (($4 + [96]) + [8]))) = *($3)
	*($4 + [96]) = *($4)
	$3 = *($6)
	*((($4 + [112]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [96])
	*($4 + [32]) = $0
	*($4 + [112]) = $0
	*($4 + [116]) = ($4 + [88])
	*($4 + [112]) = ($4 + [16])
	CALL $269(($4 + [112]), ($4 + [64]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $400($2)
	
.LABEL $label$4
	$2 = *((($4 + [64]) + [8]))
	if ( ($2 == 0) ){ goto $label$5 }
	*(($4 + [76])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$5
	$global$0 = ($4 + [128])
	return [1]
}

void .FUNC $93 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [32])
	$global$0 = $3
	CALL require_auth(*($0))
	$4 = [0]
	*($3 + [24]) = [0]
	*($3 + [16]) = (int_64)0
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)*($2 + [4])) ){ goto $label$2 }
	$6 = ($3 + [24])
	$2 = ($2 + [4])
	
.LOOP $label$4:
	if ( (CALL $94($0, $1, *($5), *(($5 + [1]))) == 0) ){ goto $label$6 }
	*($3 + [14]) = *($5)
	$4 = *($3 + [20])
	if ( ((int_32)$4 == (int_32)*($6)) ){ goto $label$5 }
	*($4) = *($3 + [14])
	*($3 + [20]) = (*($3 + [20]) + [2])
	
.LABEL $label$6
	$5 = ($5 + [2])
	if ( ((int_32)$5 != (int_32)*($2)) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL $95(($3 + [16]), ($3 + [14]))
	$5 = ($5 + [2])
	if ( ((int_32)$5 != (int_32)*($2)) ){ goto $label$4 }
	
.LABEL $label$3
	$4 = *($3 + [16])
	$5 = *($3 + [20])
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	*($3 + [8]) = [0]
	*($3) = (int_64)0
	$5 = ($5 - $4)
	if ( ($5 == 0) ){ goto $label$8 }
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$7 }
	$2 = CALL _Znwj($5)
	*(($3 + [8])) = ($2 + (int_32($5 >> [1]) << [1]))
	*($3) = $2
	*($3 + [4]) = $2
	$4 = *($3 + [16])
	$5 = (*($3 + [20]) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($2, $4, $5)
	*($3 + [4]) = (*($3 + [4]) + $5)
	
.LABEL $label$8
	CALL $96($0, $1, $3)
	$5 = *($3)
	if ( ($5 == 0) ){ goto $label$9 }
	*($3 + [4]) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$9
	$5 = *($3 + [16])
	if ( ($5 == 0) ){ goto $label$10 }
	*($3 + [20]) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$10
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$7
	CALL $377($3)
}

void .FUNC $65 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [224])
	$global$0 = $3
	$4 = [0]
	*(($3 + [216])) = [0]
	*($3 + [200]) = (int_64)-1
	*($3 + [208]) = (int_64)0
	*($3 + [220]) = [0]
	$5 = *($0)
	*($3 + [184]) = $5
	*($3 + [192]) = $5
	*($3 + [176]) = ($3 + [184])
	CALL $66(($3 + [96]), ($3 + [176]), $2)
	$6 = *($3 + [100])
	if ( ($6 == 0) ){ goto $label$3 }
	if ( ((int_64)*($2) != (int_64)*($6 + [16])) ){ goto $label$2 }
	$5 = *($3 + [96])
	*($3 + [168]) = $5
	$4 = (CASTING uint_32)(uint_64 (uint_64)$5 >> (uint_64)(int_64)32))
	$7 = (($3 + [168]) | [4])
	goto $label$1 
	
.LABEL $label$3
	*($3 + [172]) = [0]
	*($3 + [168]) = ($3 + [176])
	$7 = (($3 + [168]) | [4])
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	*($3 + [172]) = [0]
	*($3 + [168]) = ($3 + [176])
	$7 = (($3 + [168]) | [4])
	
.LABEL $label$1
	*(($3 + [160])) = [0]
	*($3 + [152]) = (int_64)0
	$2 = CALL $393([9156])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$9 }
	$6 = ((int_32)$4 != (int_32)[0])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$12 }
	*($3 + [152]) = ($2 << [1])
	$4 = (($3 + [152]) | [1])
	if ( $2 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$8 = (($2 + [16]) & [-16])
	$4 = CALL _Znwj($8)
	*($3 + [152]) = ($8 | [1])
	*($3 + [160]) = $4
	*($3 + [156]) = $2
	
.LABEL $label$11
	CALL memcpy($4, [9156], $2)
	
.LABEL $label$10
	*(($4 + $2)) = [0]
	CALL eosio_assert($6, CALL $5($3, [121], ($3 + [152])))
	if ( ((*($3 + [152]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*($3 + [160]))
	
.LABEL $label$13
	*(($3 + [144])) = [0]
	*($3 + [136]) = (int_64)0
	$5 = *(*($7) + [48])
	$2 = CALL $393([9172])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$8 }
	$6 = ((int_64)$5 == (int_64)$1)
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$16 }
	*($3 + [136]) = ($2 << [1])
	$4 = (($3 + [136]) | [1])
	if ( $2 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$8 = (($2 + [16]) & [-16])
	$4 = CALL _Znwj($8)
	*($3 + [136]) = ($8 | [1])
	*($3 + [144]) = $4
	*($3 + [140]) = $2
	
.LABEL $label$15
	CALL memcpy($4, [9172], $2)
	
.LABEL $label$14
	*(($4 + $2)) = [0]
	CALL eosio_assert($6, CALL $5($3, [122], ($3 + [136])))
	if ( ((*($3 + [136]) & [1]) == 0) ){ goto $label$17 }
	CALL _ZdlPv(*($3 + [144]))
	
.LABEL $label$17
	$2 = *($7)
	if ( (*($2 + [80]) == 0) ){ goto $label$18 }
	*(($3 + [128])) = [0]
	*($3 + [112]) = (int_64)-1
	*($3 + [120]) = (int_64)0
	$5 = *($0)
	*($3 + [96]) = $5
	*($3 + [104]) = $1
	$6 = [0]
	$2 = CALL db_find_i64($5, $1, (int_64)-3020377498459275264, *($2 + [56]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$19 }
	$6 = CALL $23(($3 + [96]), $2)
	if ( ((int_32)*($6 + [16]) == (int_32)($3 + [96])) ){ goto $label$19 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$19
	*(($3 + [88])) = [0]
	*($3 + [80]) = (int_64)0
	$2 = CALL $393([8692])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$5 }
	$8 = ((int_32)$6 != (int_32)[0])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$22 }
	*($3 + [80]) = ($2 << [1])
	$4 = (($3 + [80]) | [1])
	if ( $2 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	$9 = (($2 + [16]) & [-16])
	$4 = CALL _Znwj($9)
	*($3 + [80]) = ($9 | [1])
	*($3 + [88]) = $4
	*($3 + [84]) = $2
	
.LABEL $label$21
	CALL memcpy($4, [8692], $2)
	
.LABEL $label$20
	*(($4 + $2)) = [0]
	CALL eosio_assert($8, CALL $5($3, [110], ($3 + [80])))
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$23 }
	CALL _ZdlPv(*($3 + [88]))
	
.LABEL $label$23
	$4 = *(($6 + [8]))
	$2 = *($6 + [4])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$24 }
	$5 = *(*($7) + [57])
	
.LOOP $label$25:
	if ( ((int_64)*($2) == (int_64)$5) ){ goto $label$24 }
	$2 = ($2 + [24])
	if ( ((int_32)$4 != (int_32)$2) ){ goto $label$25 }
	$2 = $4
	
.LABEL $label$24
	*((($3 + [56]) + [8])) = [0]
	*($3 + [56]) = (int_64)0
	*($3 + [72]) = $2
	$7 = CALL $393([8713])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$4 }
	$4 = ((int_32)$2 != (int_32)$4)
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$28 }
	*($3 + [56]) = ($7 << [1])
	$2 = (($3 + [56]) | [1])
	if ( $7 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	$8 = (($7 + [16]) & [-16])
	$2 = CALL _Znwj($8)
	*($3 + [56]) = ($8 | [1])
	*($3 + [64]) = $2
	*($3 + [60]) = $7
	
.LABEL $label$27
	CALL memcpy($2, [8713], $7)
	
.LABEL $label$26
	*(($2 + $7)) = [0]
	CALL eosio_assert($4, CALL $5($3, [111], ($3 + [56])))
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$29 }
	CALL _ZdlPv(*($3 + [64]))
	
.LABEL $label$29
	$5 = *($0)
	*($3 + [48]) = $0
	*($3 + [44]) = ($3 + [72])
	*($3 + [40]) = ($3 + [168])
	if ( $6 ){ goto $label$30 }
	CALL eosio_assert([0], [19537])
	
.LABEL $label$30
	CALL $67(($3 + [96]), $6, $5, ($3 + [40]))
	$7 = *($3 + [120])
	if ( ($7 == 0) ){ goto $label$18 }
	$8 = ($3 + [124])
	$2 = *($8)
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$32 }
	
.LOOP $label$33:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$34 }
	$6 = *($4 + [4])
	if ( ($6 == 0) ){ goto $label$35 }
	*(($4 + [8])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$35
	CALL _ZdlPv($4)
	
.LABEL $label$34
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$33 }
	$2 = *(($3 + [120]))
	goto $label$31 
	
.LABEL $label$32
	$2 = $7
	
.LABEL $label$31
	*($8) = $7
	CALL _ZdlPv($2)
	
.LABEL $label$18
	$5 = *($3 + [168])
	*($3 + [96]) = $5
	$2 = (CASTING uint_32)(uint_64 (uint_64)$5 >> (uint_64)(int_64)32)
	if ( $2) ){ goto $label$36 }
	CALL eosio_assert([0], [19223])
	$2 = *($3 + [100])
	
.LABEL $label$36
	CALL $68(($3 + [96]))
	CALL $69(*($3 + [176]), $2)
	*(($3 + [128])) = [0]
	*($3 + [112]) = (int_64)-1
	$5 = *($0)
	*($3 + [96]) = $5
	*($3 + [104]) = $1
	*($3 + [120]) = (int_64)0
	$4 = [0]
	$2 = CALL db_lowerbound_i64($5, $1, (int_64)-3020381371621703680, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$37 }
	$4 = CALL $60(($3 + [96]), $2)
	
.LABEL $label$37
	*(($3 + [32])) = [0]
	*($3 + [24]) = (int_64)0
	$2 = CALL $393([9180])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$7 }
	$7 = ((int_32)$4 != (int_32)[0])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$40 }
	*($3 + [24]) = ($2 << [1])
	$6 = (($3 + [24]) | [1])
	if ( $2 ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$40
	$8 = (($2 + [16]) & [-16])
	$6 = CALL _Znwj($8)
	*($3 + [24]) = ($8 | [1])
	*($3 + [32]) = $6
	*($3 + [28]) = $2
	
.LABEL $label$39
	CALL memcpy($6, [9180], $2)
	
.LABEL $label$38
	*(($6 + $2)) = [0]
	CALL eosio_assert($7, CALL $5($3, [153], ($3 + [24])))
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$41 }
	CALL _ZdlPv(*($3 + [32]))
	
.LABEL $label$41
	*(($3 + [16])) = [0]
	*($3 + [8]) = (int_64)0
	$5 = *($4 + [24])
	$2 = CALL $393([9211])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$6 }
	$7 = ((int_64)$5 != (int_64)0)
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$44 }
	*($3 + [8]) = ($2 << [1])
	$6 = (($3 + [8]) | [1])
	if ( $2 ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$44
	$8 = (($2 + [16]) & [-16])
	$6 = CALL _Znwj($8)
	*($3 + [8]) = ($8 | [1])
	*($3 + [16]) = $6
	*($3 + [12]) = $2
	
.LABEL $label$43
	CALL memcpy($6, [9211], $2)
	
.LABEL $label$42
	*(($6 + $2)) = [0]
	CALL eosio_assert($7, CALL $5($3, [153], ($3 + [8])))
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$45 }
	CALL _ZdlPv(*($3 + [16]))
	
.LABEL $label$45
	CALL $70(($3 + [96]), $4, *($0))
	$6 = *($3 + [120])
	if ( ($6 == 0) ){ goto $label$46 }
	$7 = ($3 + [124])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$48 }
	
.LOOP $label$49:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$50 }
	CALL _ZdlPv($4)
	
.LABEL $label$50
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$49 }
	$2 = *(($3 + [120]))
	goto $label$47 
	
.LABEL $label$48
	$2 = $6
	
.LABEL $label$47
	*($7) = $6
	CALL _ZdlPv($2)
	
.LABEL $label$46
	$6 = *($3 + [208])
	if ( ($6 == 0) ){ goto $label$51 }
	$7 = ($3 + [212])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$53 }
	
.LOOP $label$54:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$55 }
	CALL _ZdlPv($4)
	
.LABEL $label$55
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$54 }
	$2 = *(($3 + [208]))
	goto $label$52 
	
.LABEL $label$53
	$2 = $6
	
.LABEL $label$52
	*($7) = $6
	CALL _ZdlPv($2)
	
.LABEL $label$51
	$global$0 = ($3 + [224])
	return (unreachable)
	
.LABEL $label$9
	CALL $359(($3 + [152]))
	
.LABEL $label$8
	CALL $359(($3 + [136]))
	
.LABEL $label$7
	CALL $359(($3 + [24]))
	
.LABEL $label$6
	CALL $359(($3 + [8]))
	
.LABEL $label$5
	CALL $359(($3 + [80]))
	
.LABEL $label$4
	CALL $359(($3 + [56]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $85 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	$6 = ($1 + [40])
	*($5 + [16]) = *($6)
	$7 = ($1 + [64])
	*($5 + [24]) = *($7)
	$8 = ($1 + [72])
	*($5 + [32]) = *($8)
	*($1 + [84]) = *(*($3))
	$9 = *($1)
	$3 = $4
	$4 = ($3 + [-80])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-9])
	*($5 + [40]) = $5
	*($5 + [52]) = ($1 + [8])
	*($5 + [48]) = $1
	*($5 + [56]) = ($1 + [16])
	*($5 + [60]) = ($1 + [24])
	*($5 + [64]) = ($1 + [32])
	*($5 + [68]) = $6
	*($5 + [72]) = ($1 + [48])
	*($5 + [76]) = ($1 + [56])
	*($5 + [80]) = $7
	*($5 + [84]) = $8
	*($5 + [88]) = ($1 + [80])
	*($5 + [92]) = ($1 + [81])
	*($5 + [96]) = ($1 + [82])
	*($5 + [100]) = ($1 + [83])
	*($5 + [104]) = ($1 + [84])
	CALL $87(($5 + [48]), ($5 + [40]))
	CALL db_update_i64(*($1 + [92]), $2, $4, [71])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$4 = (($5 + [16]) + [8])
	*($5 + [48]) = *($6)
	if ( (CALL $392(($5 + [16]), ($5 + [48]), [8]) == 0) ){ goto $label$4 }
	$3 = ($1 + [96])
	$6 = *($3)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$5 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728576, ($5 + [40]), $9)
	*($3) = $6
	
.LABEL $label$5
	CALL db_idx64_update($6, $2, ($5 + [48]))
	
.LABEL $label$4
	$6 = (($5 + [16]) + [16])
	*($5 + [48]) = *($7)
	if ( (CALL $392($4, ($5 + [48]), [8]) == 0) ){ goto $label$6 }
	$7 = ($1 + [100])
	$4 = *($7)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$7 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728575, ($5 + [40]), $9)
	*($7) = $4
	
.LABEL $label$7
	CALL db_idx64_update($4, $2, ($5 + [48]))
	
.LABEL $label$6
	*($5 + [48]) = *($8)
	if ( (CALL $392($6, ($5 + [48]), [8]) == 0) ){ goto $label$8 }
	$4 = ($1 + [104])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$9 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728574, ($5 + [40]), $9)
	*($4) = $1
	
.LABEL $label$9
	CALL db_idx64_update($1, $2, ($5 + [48]))
	
.LABEL $label$8
	$global$0 = ($5 + [112])
}

void .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-4421665485641187328, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $72($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $298(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [19728])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	$6 = *($5 + [4])
	*($1 + [16]) = *($6)
	*(($1 + [40])) = *(($6 + [24]))
	*(($1 + [32])) = *(($6 + [16]))
	*(($1 + [24])) = *(($6 + [8]))
	*($1 + [48]) = *(*($5 + [8]))
	*($1 + [56]) = *(*($5 + [12]))
	*($1 + [57]) = *(*($5 + [16]))
	$6 = *($5 + [20])
	*($1 + [64]) = *($6)
	*(($1 + [72])) = *(($6 + [8]))
	*($1 + [80]) = *(*($5 + [24]))
	$6 = ($1 + [80])
	$8 = ($1 + [64])
	$9 = ($1 + [57])
	$10 = ($1 + [56])
	$11 = ($1 + [48])
	$12 = ($1 + [16])
	if ( (*([0] + [10328]) == 0) ){ goto $label$6 }
	$7 = *([0] + [10320])
	goto $label$5 
	
.LABEL $label$6
	$7 = CALL current_time()
	*([0] + [10328]) = [1]
	*([0] + [10320]) = $7
	
.LABEL $label$5
	*($1 + [88]) = $7
	$2 = $2
	$5 = ($2 + [-80])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($2 + [-4])
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $12
	*($3 + [32]) = $1
	*($3 + [40]) = $11
	*($3 + [44]) = $10
	*($3 + [48]) = $9
	*($3 + [52]) = $8
	*($3 + [56]) = $6
	*($3 + [60]) = ($1 + [88])
	CALL $299(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [100]) = CALL db_store_i64(*($4 + [8]), (int_64)-4421665485641187328, *(*($0 + [8])), $7, $5, [76])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$7 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$7 = *(($4 + [8]))
	$13 = *(*(($0 + [8])))
	$14 = *($1)
	*($3 + [32]) = *($1 + [16])
	*($1 + [104]) = CALL db_idx64_store($7, (int_64)-4421665485641187328, $13, $14, ($3 + [32]))
	$global$0 = ($3 + [64])
}

void .FUNC $59 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $377($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $271 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$0 = ($4 + [12])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [4])
	*(($1 = ($1 + [4]))) = (*($1) + [4])
}

void .FUNC $270 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$0 = ($4 + [16])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[31]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [32])
	*(($1 = ($1 + [4]))) = (*($1) + [32])
}

void .FUNC $277 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[31]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	$3 = *($0)
	CALL $285(*($1), ($3 + [32]))
	$0 = ($3 + [48])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$3 = *(($1 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $276 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	$2 = ($global$0 - [256])
	$global$0 = $2
	*(($3 = (($2 + [96]) + [24]))) = *(($1 + [24]))
	*(($4 = (($2 + [96]) + [16]))) = *(($1 + [16]))
	*($2 + [96]) = *($1)
	*($2 + [104]) = *(($1 + [8]))
	$5 = CALL $360(($2 + [80]), ($1 + [32]))
	$6 = CALL $360(($2 + [64]), ($1 + [44]))
	*(($7 = (($2 + [48]) + [8]))) = *(($1 + [64]))
	*($2 + [48]) = *($1 + [56])
	$8 = *($1 + [72])
	*((($2 + [160]) + [8])) = *($7)
	*((($2 + [128]) + [16])) = *($4)
	*((($2 + [128]) + [24])) = *($3)
	*($2 + [160]) = *($2 + [48])
	*($2 + [128]) = *($2 + [96])
	*($2 + [136]) = *($2 + [104])
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*($0) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($7 = (($2 + [224]) + [24]))) = *((($2 + [128]) + [24]))
	*(($9 = (($2 + [224]) + [16]))) = *((($2 + [128]) + [16]))
	*($2 + [232]) = *($2 + [136])
	*($2 + [224]) = *($2 + [128])
	$3 = CALL $360(($2 + [208]), $5)
	$4 = CALL $360(($2 + [192]), $6)
	$10 = *((($2 + [160]) + [8]))
	*((($2 + [176]) + [8])) = $10
	*((($2 + [16]) + [16])) = *($9)
	*((($2 + [16]) + [24])) = *($7)
	*(($2 + [8])) = $10
	$10 = *($2 + [160])
	*($2 + [176]) = $10
	*($2 + [16]) = *($2 + [224])
	*($2 + [24]) = *($2 + [232])
	*($2) = $10
	CALL void $0((int_32 ($2 + [16])), (int_32 $3), (int_32 $4), (int_32 $2), (int_32 $8), (int_64 $1))
	if ( (*($2 + [192]) & [1]) ){ goto $label$8 }
	if ( (*($2 + [208]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL _ZdlPv(*($4 + [8]))
	if ( ((*($2 + [208]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL _ZdlPv(*($3 + [8]))
	$1 = [1]
	if ( ((*($6) & [1]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$1 = [1]
	if ( (*($6) & [1]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( (*($5) & $1) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($6 + [8]))
	if ( ((*($5) & $1) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($5 + [8]))
	$global$0 = ($2 + [256])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [256])
}

void .FUNC $275 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[31]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [32])
	*(($4 = ($4 + [4]))) = (*($4) + [32])
	$0 = *($0)
	CALL $285(*($1), ($0 + [32]))
	CALL $285(*($1), ($0 + [44]))
	$3 = ($0 + [56])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*($0 + [64]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($0 + [72])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	$4 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $4, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $274 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [64]) + [24]))) = *(($1 + [24]))
	*(($4 = (($2 + [64]) + [16]))) = *(($1 + [16]))
	*($2 + [64]) = *($1)
	*($2 + [72]) = *(($1 + [8]))
	$5 = CALL $360(($2 + [48]), ($1 + [32]))
	*($2 + [32]) = (int_64)0
	*($2 + [40]) = [0]
	$6 = (*($1 + [60]) - *($1 + [56]))
	$7 = ((int_32)$6 / (int_32)[3])
	$8 = *($1 + [48])
	if ( ($6 == 0) ){ goto $label$2 }
	if ( ((uint_32)$7 >= (uint_32)[1431655766]) ){ goto $label$1 }
	$6 = CALL _Znwj($6)
	*(($2 + [40])) = ($6 + ((int_32)$7 * (int_32)[3]))
	*($2 + [32]) = $6
	*($2 + [36]) = $6
	$7 = *(($1 + [56]))
	$1 = (*(($1 + [60])) - $7)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy($6, $7, $1)
	*($2 + [36]) = (*($2 + [36]) + ((int_32)((uint_32)$1 / (uint_32)[3]) * (int_32)[3]))
	
.LABEL $label$2
	*(($2 + [24])) = *($3)
	*(($2 + [16])) = *($4)
	*($2 + [8]) = *($2 + [72])
	*($2) = *($2 + [64])
	CALL $339($0, $2, $5, $8, ($2 + [32]))
	$1 = *($2 + [32])
	if ( ($1 == 0) ){ goto $label$3 }
	*($2 + [36]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$3
	if ( ((*($5) & [1]) == 0) ){ goto $label$4 }
	CALL _ZdlPv(*($5 + [8]))
	
.LABEL $label$4
	$global$0 = ($2 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $377(($2 + [32]))
}

void .FUNC $50 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [48])
	$global$0 = $4
	CALL require_auth($1)
	*(($4 + [40])) = [0]
	*($4 + [32]) = (int_64)0
	$5 = CALL $393([8932])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$3 }
	$6 = ($2 <= [240])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$6 }
	*($4 + [32]) = ($5 << [1])
	$7 = (($4 + [32]) | [1])
	if ( $5 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$8 = (($5 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($4 + [32]) = ($8 | [1])
	*($4 + [40]) = $7
	*($4 + [36]) = $5
	
.LABEL $label$5
	CALL memcpy($7, [8932], $5)
	
.LABEL $label$4
	*(($7 + $5)) = [0]
	CALL eosio_assert($6, CALL $5($4, [166], ($4 + [32])))
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$7 }
	CALL _ZdlPv(*($4 + [40]))
	
.LABEL $label$7
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$5 = CALL $393([8791])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$2 }
	$6 = ((($2 + [-1]) & [255]) <= [100])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$10 }
	*($4 + [16]) = ($5 << [1])
	$7 = (($4 + [16]) | [1])
	if ( $5 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$8 = (($5 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($4 + [16]) = ($8 | [1])
	*($4 + [24]) = $7
	*($4 + [20]) = $5
	
.LABEL $label$9
	CALL memcpy($7, [8791], $5)
	
.LABEL $label$8
	*(($7 + $5)) = [0]
	CALL eosio_assert($6, CALL $5($4, [0], ($4 + [16])))
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*($4 + [24]))
	
.LABEL $label$11
	*(($4 + [8])) = [0]
	*($4) = (int_64)0
	$5 = CALL $393([8791])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = ((uint_32)$3 > (uint_32)[1])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$14 }
	*($4) = ($5 << [1])
	$7 = ($4 | [1])
	if ( $5 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$8 = (($5 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($4) = ($8 | [1])
	*($4 + [8]) = $7
	*($4 + [4]) = $5
	
.LABEL $label$13
	CALL memcpy($7, [8791], $5)
	
.LABEL $label$12
	*(($7 + $5)) = [0]
	CALL eosio_assert($6, CALL $5($4, [0], $4))
	if ( ((*($4) & [1]) == 0) ){ goto $label$15 }
	CALL _ZdlPv(*($4 + [8]))
	
.LABEL $label$15
	$9 = (CASTING uint_64)(uint_32 $3)
	CALL $37($0, $1, $2, $9, (int_64)1, [0])
	CALL $43($0, $1, $2, (int_64)1, $9)
	$global$0 = ($4 + [48])
	return (unreachable)
	
.LABEL $label$3
	CALL $359(($4 + [32]))
	
.LABEL $label$2
	CALL $359(($4 + [16]))
	
.LABEL $label$1
	CALL $359($4)
	(unreachable)
	(unreachable)
}

void .FUNC $51 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_64 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [400])
	$global$0 = $6
	*($6 + [351]) = $2
	*($6 + [352]) = $1
	*($6 + [350]) = $3
	*($6 + [336]) = $4
	CALL require_auth($1)
	$2 = CALL $7($0)
	*(($6 + [328])) = [0]
	*($6 + [320]) = (int_64)0
	$3 = CALL $393([8366])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$4 }
	$7 = ((int_32)$2 ^ (int_32)[1])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$7 }
	*($6 + [320]) = ($3 << [1])
	$2 = (($6 + [320]) | [1])
	if ( $3 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = (($3 + [16]) & [-16])
	$2 = CALL _Znwj($8)
	*($6 + [320]) = ($8 | [1])
	*($6 + [328]) = $2
	*($6 + [324]) = $3
	
.LABEL $label$6
	CALL memcpy($2, [8366], $3)
	
.LABEL $label$5
	*(($2 + $3)) = [0]
	CALL eosio_assert($7, CALL $5($6, [159], ($6 + [320])))
	if ( ((*($6 + [320]) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*($6 + [328]))
	
.LABEL $label$8
	$2 = CALL $8($0, *($6 + [352]))
	*(($6 + [312])) = [0]
	*($6 + [304]) = (int_64)0
	$3 = CALL $393([8384])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$3 }
	$7 = ((int_32)$2 ^ (int_32)[1])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$11 }
	*($6 + [304]) = ($3 << [1])
	$2 = (($6 + [304]) | [1])
	if ( $3 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$8 = (($3 + [16]) & [-16])
	$2 = CALL _Znwj($8)
	*($6 + [304]) = ($8 | [1])
	*($6 + [312]) = $2
	*($6 + [308]) = $3
	
.LABEL $label$10
	CALL memcpy($2, [8384], $3)
	
.LABEL $label$9
	*(($2 + $3)) = [0]
	CALL eosio_assert($7, CALL $5($6, [157], ($6 + [304])))
	if ( ((*($6 + [304]) & [1]) == 0) ){ goto $label$12 }
	CALL _ZdlPv(*($6 + [312]))
	
.LABEL $label$12
	$2 = CALL $52($0, *($6 + [352]))
	*(($6 + [296])) = [0]
	*($6 + [288]) = (int_64)0
	$3 = CALL $393([8973])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$7 = ((int_32)$2 ^ (int_32)[1])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$15 }
	*($6 + [288]) = ($3 << [1])
	$2 = (($6 + [288]) | [1])
	if ( $3 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$8 = (($3 + [16]) & [-16])
	$2 = CALL _Znwj($8)
	*($6 + [288]) = ($8 | [1])
	*($6 + [296]) = $2
	*($6 + [292]) = $3
	
.LABEL $label$14
	CALL memcpy($2, [8973], $3)
	
.LABEL $label$13
	*(($2 + $3)) = [0]
	CALL eosio_assert($7, CALL $5($6, [158], ($6 + [288])))
	if ( ((*($6 + [288]) & [1]) == 0) ){ goto $label$16 }
	CALL _ZdlPv(*($6 + [296]))
	
.LABEL $label$16
	$3 = CALL $393([8341])
	if ( ($3 <= [8]) ){ goto $label$19 }
	CALL eosio_assert([0], [10159])
	goto $label$18 
	
.LABEL $label$19
	if ( ($3 == 0) ){ goto $label$17 }
	
.LABEL $label$18
	$1 = (int_64)0
	
.LOOP $label$20:
	$2 = *(($3 + [8340]))
	if ( ((($2 + [-65]) & [255]) <= [26]) ){ goto $label$21 }
	CALL eosio_assert([0], [10204])
	
.LABEL $label$21
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$20 }
	goto $label$1 
	
.LABEL $label$17
	$1 = (int_64)0
	goto $label$1 
	
.LABEL $label$4
	CALL $359(($6 + [320]))
	
.LABEL $label$3
	CALL $359(($6 + [304]))
	
.LABEL $label$2
	CALL $359(($6 + [288]))
	
.LABEL $label$1
	*(($6 + [280])) = [0]
	*($6 + [272]) = (int_64)0
	$4 = *($5 + [8])
	$3 = CALL $393([8990])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$28 }
	$8 = ((int_64)$4 == (int_64)((int_64)((int_64)$1 << (int_64)8) | (int_64)4))
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$31 }
	*($6 + [272]) = ($3 << [1])
	$7 = (($6 + [272]) | [1])
	if ( $3 ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$31
	$2 = (($3 + [16]) & [-16])
	$7 = CALL _Znwj($2)
	*($6 + [272]) = ($2 | [1])
	*($6 + [280]) = $7
	*($6 + [276]) = $3
	
.LABEL $label$30
	CALL memcpy($7, [8990], $3)
	
.LABEL $label$29
	$2 = [0]
	*(($7 + $3)) = [0]
	CALL eosio_assert($8, CALL $5($6, [115], ($6 + [272])))
	if ( ((*($6 + [272]) & [1]) == 0) ){ goto $label$32 }
	CALL _ZdlPv(*($6 + [280]))
	
.LABEL $label$32
	if ( ((uint_64)((int_64)*($5) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$33 }
	$1 = (uint_64)*(($5 + [8])) >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$35:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$34 }
	$4 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$36 }
	$1 = $4
	$2 = [1]
	$7 = $3
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$35 }
	goto $label$33 
	
.LABEL $label$36
	$1 = $4
	
.LOOP $label$37:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$34 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$2 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $2 ){ goto $label$37 }
	$2 = [1]
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$35 }
	goto $label$33 
	
.LABEL $label$34
	$2 = [0]
	
.LABEL $label$33
	*(($6 + [264])) = [0]
	*($6 + [256]) = (int_64)0
	$3 = CALL $393([8998])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$27 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$40 }
	*($6 + [256]) = ($3 << [1])
	$7 = (($6 + [256]) | [1])
	if ( $3 ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$40
	$8 = (($3 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($6 + [256]) = ($8 | [1])
	*($6 + [264]) = $7
	*($6 + [260]) = $3
	
.LABEL $label$39
	CALL memcpy($7, [8998], $3)
	
.LABEL $label$38
	*(($7 + $3)) = [0]
	CALL eosio_assert($2, CALL $5($6, [116], ($6 + [256])))
	if ( ((*($6 + [256]) & [1]) == 0) ){ goto $label$41 }
	CALL _ZdlPv(*($6 + [264]))
	
.LABEL $label$41
	CALL $53(($6 + [200]), $0, *($6 + [351]), *($6 + [350]))
	$1 = ((int_64)*($6 + [200]) / (int_64)10)
	if ( ((int_64)*(($5 + [8])) == (int_64)*($6 + [208])) ){ goto $label$42 }
	CALL eosio_assert([0], [10257])
	
.LABEL $label$42
	*((($6 + [240]) + [8])) = [0]
	*($6 + [240]) = (int_64)0
	$4 = *($5)
	$3 = CALL $393([9013])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$26 }
	$8 = ((int_64)$4 >= (int_64)( $1 ? (int_64)10 : ((int_64)$1 > (int_64)10) ))
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$45 }
	*($6 + [240]) = ($3 << [1])
	$2 = (($6 + [240]) | [1])
	if ( $3 ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$45
	$7 = (($3 + [16]) & [-16])
	$2 = CALL _Znwj($7)
	*($6 + [240]) = ($7 | [1])
	*($6 + [248]) = $2
	*($6 + [244]) = $3
	
.LABEL $label$44
	CALL memcpy($2, [9013], $3)
	
.LABEL $label$43
	$7 = [0]
	*(($2 + $3)) = [0]
	CALL eosio_assert($8, CALL $5($6, [162], ($6 + [240])))
	if ( ((*($6 + [240]) & [1]) == 0) ){ goto $label$46 }
	CALL _ZdlPv(*($6 + [248]))
	
.LABEL $label$46
	*(($6 + [232])) = [0]
	*($6 + [216]) = (int_64)-1
	*($6 + [224]) = (int_64)0
	$1 = *($0)
	*($6 + [200]) = $1
	$4 = *($6 + [352])
	*($6 + [208]) = $4
	$3 = CALL db_find_i64($1, $4, (int_64)-3020377498459275264, *($6 + [351]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$47 }
	$7 = CALL $23(($6 + [200]), $3)
	if ( ((int_32)*($7 + [16]) == (int_32)($6 + [200])) ){ goto $label$47 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$47
	*(($6 + [192])) = [0]
	*($6 + [184]) = (int_64)0
	$3 = CALL $393([8692])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$25 }
	$8 = ((int_32)$7 != (int_32)[0])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$50 }
	*($6 + [184]) = ($3 << [1])
	$2 = (($6 + [184]) | [1])
	if ( $3 ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$50
	$9 = (($3 + [16]) & [-16])
	$2 = CALL _Znwj($9)
	*($6 + [184]) = ($9 | [1])
	*($6 + [192]) = $2
	*($6 + [188]) = $3
	
.LABEL $label$49
	CALL memcpy($2, [8692], $3)
	
.LABEL $label$48
	*(($2 + $3)) = [0]
	CALL eosio_assert($8, CALL $5($6, [110], ($6 + [184])))
	if ( ((*($6 + [184]) & [1]) == 0) ){ goto $label$51 }
	CALL _ZdlPv(*($6 + [192]))
	
.LABEL $label$51
	$3 = *($6 + [351])
	if ( ((int_32)$3 == (int_32)[240]) ){ goto $label$52 }
	if ( ((int_32)CALL $54($0, $3) == (int_32)[5]) ){ goto $label$52 }
	$2 = [0]
	$8 = *(($7 + [8]))
	$3 = *($7 + [4])
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$53 }
	
.LOOP $label$54:
	$2 = ($2 + *(($3 + [8])))
	$3 = ($3 + [24])
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$54 }
	
.LABEL $label$53
	$8 = CALL $28($0, *($6 + [352]))
	$3 = *($6 + [351])
	if ( ((uint_32)(($3 + [-61]) & [255]) > (uint_32)[19]) ){ goto $label$57 }
	$2 = (($2 + (CASTING uint_32)(uint_64 CALL $55($0, *($6 + [352]), (($3 + [40]) & [255])))) + (CASTING uint_32)(uint_64 CALL $55($0, *($6 + [352]), ((*($6 + [351]) + [60]) & [255]))))
	$3 = (*($6 + [351]) + [80])
	goto $label$56 
	
.LABEL $label$57
	if ( ((uint_32)(($3 + [-101]) & [255]) > (uint_32)[19]) ){ goto $label$58 }
	$2 = (($2 + (CASTING uint_32)(uint_64 CALL $55($0, *($6 + [352]), (($3 + [-40]) & [255])))) + (CASTING uint_32)(uint_64 CALL $55($0, *($6 + [352]), ((*($6 + [351]) + [20]) & [255]))))
	$3 = (*($6 + [351]) + [40])
	goto $label$56 
	
.LABEL $label$58
	if ( ((uint_32)(($3 + [-121]) & [255]) > (uint_32)[19]) ){ goto $label$59 }
	$2 = (($2 + (CASTING uint_32)(uint_64 CALL $55($0, *($6 + [352]), (($3 + [-60]) & [255])))) + (CASTING uint_32)(uint_64 CALL $55($0, *($6 + [352]), ((*($6 + [351]) + [-20]) & [255]))))
	$3 = (*($6 + [351]) + [20])
	goto $label$56 
	
.LABEL $label$59
	if ( ((uint_32)(($3 + [115]) & [255]) > (uint_32)[19]) ){ goto $label$55 }
	$2 = (($2 + (CASTING uint_32)(uint_64 CALL $55($0, *($6 + [352]), (($3 + [-80]) & [255])))) + (CASTING uint_32)(uint_64 CALL $55($0, *($6 + [352]), ((*($6 + [351]) + [-40]) & [255]))))
	$3 = (*($6 + [351]) + [-20])
	
.LABEL $label$56
	$1 = CALL $55($0, *($6 + [352]), ($3 & [255]))
	if ( $8 ){ goto $label$52 }
	$2 = ($2 + (CASTING uint_32)(uint_64 $1))
	
.LABEL $label$55
	*(($6 + [176])) = [0]
	*($6 + [168]) = (int_64)0
	$1 = *($6 + [336])
	$3 = CALL $393([9045])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$22 }
	$8 = ((uint_64)$1 <= (uint_64)(CASTING int_64)(int_32 ($2 + [-1])))
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$62 }
	*($6 + [168]) = ($3 << [1])
	$2 = (($6 + [168]) | [1])
	if ( $3 ){ goto $label$61 }
	goto $label$60 
	
.LABEL $label$62
	$9 = (($3 + [16]) & [-16])
	$2 = CALL _Znwj($9)
	*($6 + [168]) = ($9 | [1])
	*($6 + [176]) = $2
	*($6 + [172]) = $3
	
.LABEL $label$61
	CALL memcpy($2, [9045], $3)
	
.LABEL $label$60
	*(($2 + $3)) = [0]
	CALL eosio_assert($8, CALL $5($6, [165], ($6 + [168])))
	if ( ((*($6 + [168]) & [1]) == 0) ){ goto $label$52 }
	CALL _ZdlPv(*($6 + [176]))
	
.LABEL $label$52
	$2 = *(($7 + [8]))
	$3 = *($7 + [4])
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$63 }
	$1 = *($6 + [350])
	
.LOOP $label$64:
	if ( ((int_64)*($3) == (int_64)$1) ){ goto $label$63 }
	$3 = ($3 + [24])
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$64 }
	$3 = $2
	
.LABEL $label$63
	*((($6 + [144]) + [8])) = [0]
	*($6 + [144]) = (int_64)0
	*($6 + [160]) = $3
	$8 = CALL $393([8713])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$24 }
	$2 = ((int_32)$3 != (int_32)$2)
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$67 }
	*($6 + [144]) = ($8 << [1])
	$3 = (($6 + [144]) | [1])
	if ( $8 ){ goto $label$66 }
	goto $label$65 
	
.LABEL $label$67
	$9 = (($8 + [16]) & [-16])
	$3 = CALL _Znwj($9)
	*($6 + [144]) = ($9 | [1])
	*($6 + [152]) = $3
	*($6 + [148]) = $8
	
.LABEL $label$66
	CALL memcpy($3, [8713], $8)
	
.LABEL $label$65
	*(($3 + $8)) = [0]
	CALL eosio_assert($2, CALL $5($6, [111], ($6 + [144])))
	if ( ((*($6 + [144]) & [1]) == 0) ){ goto $label$68 }
	CALL _ZdlPv(*($6 + [152]))
	
.LABEL $label$68
	$4 = *(*($6 + [160]) + [8])
	*(($6 + [136])) = [0]
	*($6 + [128]) = (int_64)0
	$1 = *($6 + [336])
	$3 = CALL $393([9109])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$23 }
	$8 = (((uint_64)$4 >= (uint_64)$1) & ((int_64)$1 != (int_64)0))
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$71 }
	*($6 + [128]) = ($3 << [1])
	$2 = (($6 + [128]) | [1])
	if ( $3 ){ goto $label$70 }
	goto $label$69 
	
.LABEL $label$71
	$9 = (($3 + [16]) & [-16])
	$2 = CALL _Znwj($9)
	*($6 + [128]) = ($9 | [1])
	*($6 + [136]) = $2
	*($6 + [132]) = $3
	
.LABEL $label$70
	CALL memcpy($2, [9109], $3)
	
.LABEL $label$69
	*(($2 + $3)) = [0]
	CALL eosio_assert($8, CALL $5($6, [112], ($6 + [128])))
	if ( ((*($6 + [128]) & [1]) == 0) ){ goto $label$72 }
	CALL _ZdlPv(*($6 + [136]))
	
.LABEL $label$72
	$1 = *($0)
	*($6 + [60]) = $0
	*($6 + [56]) = ($6 + [350])
	*($6 + [64]) = ($6 + [160])
	*($6 + [68]) = ($6 + [336])
	if ( $7 ){ goto $label$73 }
	CALL eosio_assert([0], [19537])
	
.LABEL $label$73
	CALL $56(($6 + [200]), $7, $1, ($6 + [56]))
	CALL $57(($6 + [96]), $6)
	*(($7 = ($6 + [88]))) = [0]
	*($6 + [72]) = (int_64)-1
	*($6 + [80]) = (int_64)0
	*($6 + [92]) = [0]
	$1 = *($0)
	*($6 + [56]) = $1
	*($6 + [64]) = $1
	*($6 + [36]) = $5
	*($6 + [20]) = ($6 + [96])
	*($6 + [16]) = ($6 + [56])
	*($6 + [24]) = ($6 + [352])
	*($6 + [28]) = ($6 + [351])
	*($6 + [32]) = ($6 + [350])
	*($6 + [40]) = ($6 + [336])
	*($6 + [392]) = $1
	if ( ((int_64)$1 == (int_64)CALL current_receiver()) ){ goto $label$74 }
	CALL eosio_assert([0], [19435])
	
.LABEL $label$74
	*($6 + [372]) = ($6 + [16])
	*($6 + [368]) = ($6 + [56])
	*($6 + [376]) = ($6 + [392])
	*(($3 = CALL _Znwj([112])) + [72]) = (int_64)0
	*($3 + [64]) = (int_64)0
	*($3 + [88]) = (int_64)0
	*($3 + [96]) = ($6 + [56])
	CALL $58(($6 + [368]), $3)
	*($6 + [8]) = $3
	$1 = *($3)
	*($6 + [368]) = $1
	$5 = *($3 + [100])
	*($6 + [384]) = $5
	$8 = ($6 + [84])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*($7)) ){ goto $label$77 }
	*($2 + [8]) = $1
	*($2 + [16]) = $5
	*($6 + [8]) = [0]
	*($2) = $3
	*($8) = ($2 + [24])
	$3 = *($6 + [8])
	$2 = [0]
	*($6 + [8]) = [0]
	if ( $3 ){ goto $label$76 }
	goto $label$75 
	
.LABEL $label$77
	CALL $59(($6 + [80]), ($6 + [8]), ($6 + [368]), ($6 + [384]))
	$3 = *($6 + [8])
	$2 = [0]
	*($6 + [8]) = [0]
	if ( ($3 == 0) ){ goto $label$75 }
	
.LABEL $label$76
	CALL _ZdlPv($3)
	
.LABEL $label$75
	*(($6 + [48])) = $2
	*($6 + [32]) = (int_64)-1
	$1 = *($0)
	*($6 + [16]) = $1
	$4 = *($6 + [352])
	*($6 + [24]) = $4
	*($6 + [40]) = (int_64)0
	$3 = CALL db_lowerbound_i64($1, $4, (int_64)-3020381371621703680, (int_64)0)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$80 }
	$3 = CALL $60(($6 + [16]), $3)
	*($6 + [12]) = $3
	*($6 + [8]) = ($6 + [16])
	$1 = *($0)
	*($6 + [368]) = $0
	*($6 + [372]) = ($6 + [8])
	CALL $61(($6 + [16]), $3, $1, ($6 + [368]))
	$0 = *($6 + [40])
	if ( $0 ){ goto $label$79 }
	goto $label$78 
	
.LABEL $label$80
	*($6 + [12]) = [0]
	*($6 + [8]) = ($6 + [16])
	$1 = *($0)
	*($6) = ($6 + [16])
	*($6 + [392]) = $1
	if ( ((int_64)*($6 + [16]) == (int_64)CALL current_receiver()) ){ goto $label$81 }
	CALL eosio_assert([0], [19435])
	
.LABEL $label$81
	*($6 + [372]) = $6
	*($6 + [368]) = ($6 + [16])
	*($6 + [376]) = ($6 + [392])
	*(($3 = CALL _Znwj([48])) + [16]) = (int_64)0
	*($3 + [32]) = ($6 + [16])
	CALL $62(($6 + [368]), $3)
	*($6 + [384]) = $3
	$1 = *($3)
	*($6 + [368]) = $1
	$0 = *($3 + [36])
	*($6 + [364]) = $0
	$7 = ($6 + [44])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($6 + [48]))) ){ goto $label$84 }
	*($2 + [8]) = $1
	*($2 + [16]) = $0
	*($6 + [384]) = [0]
	*($2) = $3
	*($7) = ($2 + [24])
	$3 = *($6 + [384])
	*($6 + [384]) = [0]
	if ( $3 ){ goto $label$83 }
	goto $label$82 
	
.LABEL $label$84
	CALL $63(($6 + [40]), ($6 + [384]), ($6 + [368]), ($6 + [364]))
	$3 = *($6 + [384])
	*($6 + [384]) = [0]
	if ( ($3 == 0) ){ goto $label$82 }
	
.LABEL $label$83
	CALL _ZdlPv($3)
	
.LABEL $label$82
	$0 = *($6 + [40])
	if ( ($0 == 0) ){ goto $label$78 }
	
.LABEL $label$79
	$7 = ($6 + [44])
	$3 = *($7)
	if ( ((int_32)$3 == (int_32)$0) ){ goto $label$86 }
	
.LOOP $label$87:
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$88 }
	CALL _ZdlPv($2)
	
.LABEL $label$88
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$87 }
	$3 = *(($6 + [40]))
	goto $label$85 
	
.LABEL $label$86
	$3 = $0
	
.LABEL $label$85
	*($7) = $0
	CALL _ZdlPv($3)
	
.LABEL $label$78
	$0 = *($6 + [80])
	if ( ($0 == 0) ){ goto $label$89 }
	$7 = ($6 + [84])
	$3 = *($7)
	if ( ((int_32)$3 == (int_32)$0) ){ goto $label$91 }
	
.LOOP $label$92:
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$93 }
	CALL _ZdlPv($2)
	
.LABEL $label$93
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$92 }
	$3 = *(($6 + [80]))
	goto $label$90 
	
.LABEL $label$91
	$3 = $0
	
.LABEL $label$90
	*($7) = $0
	CALL _ZdlPv($3)
	
.LABEL $label$89
	$7 = *($6 + [224])
	if ( ($7 == 0) ){ goto $label$94 }
	$5 = ($6 + [228])
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$96 }
	
.LOOP $label$97:
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$98 }
	$0 = *($2 + [4])
	if ( ($0 == 0) ){ goto $label$99 }
	*(($2 + [8])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$99
	CALL _ZdlPv($2)
	
.LABEL $label$98
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$97 }
	$3 = *(($6 + [224]))
	goto $label$95 
	
.LABEL $label$96
	$3 = $7
	
.LABEL $label$95
	*($5) = $7
	CALL _ZdlPv($3)
	
.LABEL $label$94
	$global$0 = ($6 + [400])
	return (unreachable)
	
.LABEL $label$28
	CALL $359(($6 + [272]))
	
.LABEL $label$27
	CALL $359(($6 + [256]))
	
.LABEL $label$26
	CALL $359(($6 + [240]))
	
.LABEL $label$25
	CALL $359(($6 + [184]))
	
.LABEL $label$24
	CALL $359(($6 + [144]))
	
.LABEL $label$23
	CALL $359(($6 + [128]))
	
.LABEL $label$22
	CALL $359(($6 + [168]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $279 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL $340($3, ($0 + [8]))
	CALL $341($3, ($0 + [20]))
	CALL $342($3, ($0 + [32]))
	CALL $343($3, ($0 + [44]))
	CALL $344($3, ($0 + [56]))
}

void .FUNC $53 (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$4 = ($global$0 - [96])
	$global$0 = $4
	$5 = CALL $393([8341])
	if ( ($5 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [10159])
	goto $label$3 
	
.LABEL $label$4
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = (int_64)0
	
.LOOP $label$5:
	$7 = *(($5 + [8340]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [10204])
	
.LABEL $label$6
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$2
	$6 = (int_64)0
	
.LABEL $label$1
	*($0) = (int_64)0
	*($0 + [8]) = ((int_64)((int_64)$6 << (int_64)8) | (int_64)4)
	$6 = ((int_64)$6 & (int_64)72057594037927935)
	$5 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$8 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$6 = $8
	$7 = $5
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$6 = $8
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$7 = ((int_32)$5 < (int_32)[6])
	$9 = ($5 + [1])
	$5 = $9
	if ( $7 ){ goto $label$11 }
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [18905])
	
.LABEL $label$7
	*(($4 + [88])) = [0]
	*($4 + [72]) = (int_64)-1
	*($4 + [80]) = (int_64)0
	$6 = *($1)
	*($4 + [56]) = $6
	*($4 + [64]) = $6
	$9 = [0]
	$5 = CALL db_find_i64($6, $6, (int_64)7687445405353639936, (CASTING uint_64)(uint_32 $2))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$12 }
	$9 = CALL $105(($4 + [56]), $5)
	if ( ((int_32)*($9 + [16]) == (int_32)($4 + [56])) ){ goto $label$12 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$12
	*(($4 + [48])) = [0]
	*($4 + [40]) = (int_64)0
	$5 = CALL $393([9925])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$14 }
	$1 = ((int_32)$9 != (int_32)[0])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$17 }
	*($4 + [40]) = ($5 << [1])
	$7 = (($4 + [40]) | [1])
	if ( $5 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$2 = (($5 + [16]) & [-16])
	$7 = CALL _Znwj($2)
	*($4 + [40]) = ($2 | [1])
	*($4 + [48]) = $7
	*($4 + [44]) = $5
	
.LABEL $label$16
	CALL memcpy($7, [9925], $5)
	
.LABEL $label$15
	*(($7 + $5)) = [0]
	CALL eosio_assert($1, CALL $5($5, [161], ($4 + [40])))
	if ( ((*($4 + [40]) & [1]) == 0) ){ goto $label$18 }
	CALL _ZdlPv(*($4 + [48]))
	
.LABEL $label$18
	$7 = *($9 + [4])
	$5 = $7
	$9 = *(($9 + [8]))
	$1 = ((int_32)$7 == (int_32)$9)
	if ( $1 ){ goto $label$21 }
	$5 = $7
	
.LOOP $label$22:
	if ( ((int_64)*($5) == (int_64)$3) ){ goto $label$21 }
	$5 = ($5 + [40])
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$20 }
	$6 = *($5 + [8])
	$6 = ( $6 ? (int_64)10 : ((int_64)$6 > (int_64)10) )
	$3 = *(($5 + [16]))
	goto $label$19 
	
.LABEL $label$20
	if ( $1 ){ goto $label$23 }
	
.LOOP $label$24:
	if ( ((int_32)*($7) == (int_32)[1]) ){ goto $label$23 }
	$7 = ($7 + [40])
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$24 }
	$7 = $9
	
.LABEL $label$23
	*(($4 + [32])) = [0]
	*($4 + [24]) = (int_64)0
	$5 = CALL $393([9925])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$13 }
	$1 = ((int_32)$7 != (int_32)$9)
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$27 }
	*($4 + [24]) = ($5 << [1])
	$9 = (($4 + [24]) | [1])
	if ( $5 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$2 = (($5 + [16]) & [-16])
	$9 = CALL _Znwj($2)
	*($4 + [24]) = ($2 | [1])
	*($4 + [32]) = $9
	*($4 + [28]) = $5
	
.LABEL $label$26
	CALL memcpy($9, [9925], $5)
	
.LABEL $label$25
	*(($9 + $5)) = [0]
	CALL eosio_assert($1, CALL $5($5, [161], ($4 + [24])))
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$28 }
	CALL _ZdlPv(*($4 + [32]))
	
.LABEL $label$28
	$6 = *($7 + [8])
	CALL __multi3(($4 + [8]), $6, (int_64)$6 >> (int_64)63), $3, (int_64)$3 >> (int_64)63))
	$3 = *(($7 + [16]))
	$8 = *(($4 + [16]))
	$6 = *($4 + [8])
	if ( (( (uint_64)($6 <= (int_64)4611686018427387904) ? ((int_64)$8 < (int_64)0) : (int_64)($8 == 0) ) == 0) ){ goto $label$29 }
	if ( ( ((uint_64)$6 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$8 > (int_64)-1) : ((int_64)$8 == (int_64)-1) ) ){ goto $label$19 }
	CALL eosio_assert([0], [18995])
	goto $label$19 
	
.LABEL $label$29
	CALL eosio_assert([0], [18971])
	
.LABEL $label$19
	*($0) = $6
	*(($0 + [8])) = $3
	$0 = *($4 + [80])
	if ( ($0 == 0) ){ goto $label$30 }
	$1 = ($4 + [84])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$32 }
	
.LOOP $label$33:
	$5 = ($5 + [-24])
	$7 = *($5)
	*($5) = [0]
	if ( ($7 == 0) ){ goto $label$34 }
	$9 = *($7 + [4])
	if ( ($9 == 0) ){ goto $label$35 }
	*(($7 + [8])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$35
	CALL _ZdlPv($7)
	
.LABEL $label$34
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$33 }
	$5 = *(($4 + [80]))
	goto $label$31 
	
.LABEL $label$32
	$5 = $0
	
.LABEL $label$31
	*($1) = $0
	CALL _ZdlPv($5)
	
.LABEL $label$30
	$global$0 = ($4 + [96])
	return (unreachable)
	
.LABEL $label$14
	CALL $359(($4 + [40]))
	
.LABEL $label$13
	CALL $359(($4 + [24]))
	(unreachable)
}

int_32 .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	$3 = CALL $393([8932])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$4 = ($1 <= [240])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($2) = ($3 << [1])
	$5 = ($2 | [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($3 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($5, [8932], $3)
	
.LABEL $label$2
	*(($5 + $3)) = [0]
	CALL eosio_assert($4, CALL $5($2, [166], $2))
	if ( ((*($2) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*($2 + [8]))
	
.LABEL $label$5
	if ( ((uint_32)(($1 + [-101]) & [255]) > (uint_32)[19]) ){ goto $label$7 }
	$3 = ($1 + [-40])
	goto $label$6 
	
.LABEL $label$7
	if ( ((uint_32)(($1 + [-121]) & [255]) > (uint_32)[19]) ){ goto $label$8 }
	$3 = ($1 + [-60])
	goto $label$6 
	
.LABEL $label$8
	$3 = ( ($1 + [-80]) ? $1 : ((($1 + [115]) & [255]) <= [20]) )
	
.LABEL $label$6
	$global$0 = ($2 + [16])
	return ((((int_32)(($3 & [255]) + [-1]) / (int_32)[20]) + [1]) & [255])
	
.LABEL $label$1
	CALL $359($2)
	return (unreachable)
}

int_64 .FUNC $55 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [48])
	$global$0 = $3
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	$4 = (int_64)0
	*($3 + [32]) = (int_64)0
	$5 = *($0)
	*($3 + [8]) = $5
	*($3 + [16]) = $1
	$2 = CALL db_find_i64($5, $1, (int_64)-3020377498459275264, (CASTING uint_64)(uint_32 $2))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $23(($3 + [8]), $2)
	if ( ((int_32)*($0 + [16]) == (int_32)($3 + [8])) ){ goto $label$2 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$2
	$0 = *(($0 + [8]))
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$1 }
	$4 = (int_64)0
	
.LOOP $label$3:
	$4 = ((int_64)*(($2 + [8])) + (int_64)$4)
	$2 = ($2 + [24])
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$3 }
	
.LABEL $label$1
	$6 = *($3 + [32])
	if ( ($6 == 0) ){ goto $label$4 }
	$7 = ($3 + [36])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$8 }
	$8 = *($0 + [4])
	if ( ($8 == 0) ){ goto $label$9 }
	*(($0 + [8])) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$9
	CALL _ZdlPv($0)
	
.LABEL $label$8
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$7 }
	$2 = *(($3 + [32]))
	goto $label$5 
	
.LABEL $label$6
	$2 = $6
	
.LABEL $label$5
	*($7) = $6
	CALL _ZdlPv($2)
	
.LABEL $label$4
	$global$0 = ($3 + [48])
	return $4
}

void .FUNC $56 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	$6 = *(*(($3 + [12])))
	$7 = *(*(($3 + [8])))
	$8 = *($1)
	*($5 + [16]) = *(*($3))
	*($5 + [32]) = ((int_64)$6 + (int_64)*($7 + [16]))
	$9 = *($7 + [8])
	*($5 + [24]) = (int_64))(( ( $9 ? $6 : ((uint_64)$9 > (uint_64)$6) ) ? $9 : ((int_64))((int_64)0 - $6) < (int_64)0) ) - $6)
	$11 = ($7 + [24])
	$10 = ($1 + [8])
	$3 = (*($10) - $11)
	$12 = ((int_32)$3 / (int_32)[24])
	if ( ($3 == 0) ){ goto $label$3 }
	CALL memmove($7, $11, $3)
	
.LABEL $label$3
	$7 = ($7 + ((int_32)$12 * (int_32)[24]))
	*($10) = $7
	if ( ((int_32)$7 == (int_32)*(($1 + [12]))) ){ goto $label$5 }
	*($7) = *($5 + [16])
	*(($7 + [16])) = *((($5 + [16]) + [16]))
	*(($7 + [8])) = *((($5 + [16]) + [8]))
	*(($7 = ($1 + [8]))) = (*($7) + [24])
	goto $label$4 
	
.LABEL $label$5
	CALL $294(($1 + [4]), ($5 + [16]))
	
.LABEL $label$4
	$6 = (CASTING uint_64)(uint_32 $8)
	if ( ((int_32)($8 & [255]) == (int_32)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [19669])
	
.LABEL $label$6
	$9 = ((int_64)$6 & (int_64)255)
	$8 = *($1 + [4])
	$3 = *($1 + [8])
	$10 = ($3 - $8)
	$6 = (CASTING uint_64)(uint_32 ((int_32)$10 / (int_32)[24]))
	$7 = [25]
	
.LOOP $label$7:
	$7 = ($7 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$11 }
	$10 = (((int_32)((uint_32)($10 + [-24]) / (uint_32)[24]) * (int_32)[24]) + $7)
	if ( ($10 <= [513]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$10 = ($7 + [-24])
	if ( ((uint_32)$10 >= (uint_32)[513]) ){ goto $label$9 }
	
.LABEL $label$10
	$4 = ($4 - (($10 + [15]) & [-16]))
	$global$0 = $4
	goto $label$8 
	
.LABEL $label$9
	$4 = CALL $397($10)
	
.LABEL $label$8
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $10)
	$7 = $4
	if ( ((int_32)$10 > (int_32)[0]) ){ goto $label$12 }
	CALL eosio_assert([0], [18965])
	$7 = *($5 + [4])
	
.LABEL $label$12
	CALL memcpy($7, $1, [1])
	$7 = ($7 + [1])
	*($5 + [4]) = $7
	$6 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [8])) - *(($1 + [4]))) / (int_32)[24]))
	
.LOOP $label$13:
	$3 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$8 = ((int_64)$6) != (int_64)0
	*($5 + [16]) = (($8) << [7]) | ($3 & [127]))
	if ( ((int_32)(*(($5 + [8])) - $7) > (int_32)[0]) ){ goto $label$14 }
	CALL eosio_assert([0], [18965])
	$7 = *($5 + [4])
	
.LABEL $label$14
	CALL memcpy($7, ($5 + [16]), [1])
	$7 = ($7 + [1])
	*($5 + [4]) = $7
	if ( $8 ){ goto $label$13 }
	$3 = *(($1 + [8]))
	$7 = *(($1 + [4]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$15 }
	
.LOOP $label$16:
	*($5 + [40]) = $5
	*($5 + [16]) = $7
	*((($5 + [16]) + [8])) = ($7 + [16])
	*($5 + [20]) = ($7 + [8])
	CALL $295(($5 + [16]), ($5 + [40]))
	$7 = ($7 + [24])
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$16 }
	
.LABEL $label$15
	CALL db_update_i64(*(($1 + [20])), $2, $4, $10)
	if ( ((uint_32)$10 >= (uint_32)[513]) ){ goto $label$19 }
	if ( ((uint_64)*($0 + [16]) <= (uint_64)$9) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL $400($4)
	if ( ((uint_64)*($0 + [16]) > (uint_64)$9) ){ goto $label$17 }
	
.LABEL $label$18
	*(($0 + [16])) = ((int_64)$9 + (int_64)1)
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$17
	$global$0 = ($5 + [48])
}

void .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = CALL transaction_size()
	$2 = $global$0
	$4 = ($2 - (($3 + [15]) & [-16]))
	$global$0 = $4
	CALL sha256($4, CALL $fimport$12($4, $3), $0)
	$global$0 = $2
}

void .FUNC $152 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	$6 = *($1)
	*($5 + [16]) = *(*($3))
	$7 = *($3 + [4])
	$8 = *($7)
	*($5 + [24]) = *($8 + [8])
	$10 = *(*($3 + [12]))
	$9 = *($8 + [16])
	*($5 + [32]) = (int_64))(( ( $9 ? $10 : ((uint_64)$9 > (uint_64)$10) ) ? $9 : ((int_64))((int_64)0 - $10) < (int_64)0) ) - $10)
	$7 = *($7)
	$12 = ($7 + [24])
	$11 = ($1 + [8])
	$13 = (*($11) - $12)
	$14 = ((int_32)$13 / (int_32)[24])
	$8 = $7
	if ( ($13 == 0) ){ goto $label$3 }
	CALL memmove($7, $12, $13)
	$8 = *(*(($3 + [4])))
	
.LABEL $label$3
	$7 = ($7 + ((int_32)$14 * (int_32)[24]))
	*($11) = $7
	if ( ((int_64)*($8 + [8]) != (int_64)0) ){ goto $label$5 }
	if ( ((int_64)*($8 + [16]) == (int_64)*(*(($3 + [12])))) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)*(($1 + [12]))) ){ goto $label$6 }
	*($7) = *($5 + [16])
	*(($7 + [16])) = *((($5 + [16]) + [16]))
	*(($7 + [8])) = *((($5 + [16]) + [8]))
	*(($3 = ($1 + [8]))) = (*($3) + [24])
	goto $label$4 
	
.LABEL $label$6
	CALL $294(($1 + [4]), ($5 + [16]))
	
.LABEL $label$4
	$10 = (CASTING uint_64)(uint_32 $6)
	if ( ((int_32)($6 & [255]) == (int_32)*($1)) ){ goto $label$7 }
	CALL eosio_assert([0], [19669])
	
.LABEL $label$7
	$9 = ((int_64)$10 & (int_64)255)
	$6 = *($1 + [4])
	$7 = *($1 + [8])
	$8 = ($7 - $6)
	$10 = (CASTING uint_64)(uint_32 ((int_32)$8 / (int_32)[24]))
	$3 = [25]
	
.LOOP $label$8:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$8 }
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$12 }
	$13 = (((int_32)((uint_32)($8 + [-24]) / (uint_32)[24]) * (int_32)[24]) + $3)
	if ( ($13 <= [513]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$13 = ($3 + [-24])
	if ( ((uint_32)$13 >= (uint_32)[513]) ){ goto $label$10 }
	
.LABEL $label$11
	$8 = ($4 - (($13 + [15]) & [-16]))
	$global$0 = $8
	goto $label$9 
	
.LABEL $label$10
	$8 = CALL $397($13)
	
.LABEL $label$9
	*($5 + [4]) = $8
	*($5) = $8
	*($5 + [8]) = ($8 + $13)
	$3 = $8
	if ( ((int_32)$13 > (int_32)[0]) ){ goto $label$13 }
	CALL eosio_assert([0], [18965])
	$3 = *($5 + [4])
	
.LABEL $label$13
	CALL memcpy($3, $1, [1])
	$3 = ($3 + [1])
	*($5 + [4]) = $3
	$10 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [8])) - *(($1 + [4]))) / (int_32)[24]))
	
.LOOP $label$14:
	$7 = (CASTING uint_32)(uint_64 $10)
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	$6 = ((int_64)$10) != (int_64)0
	*($5 + [16]) = (($6) << [7]) | ($7 & [127]))
	if ( ((int_32)(*(($5 + [8])) - $3) > (int_32)[0]) ){ goto $label$15 }
	CALL eosio_assert([0], [18965])
	$3 = *($5 + [4])
	
.LABEL $label$15
	CALL memcpy($3, ($5 + [16]), [1])
	$3 = ($3 + [1])
	*($5 + [4]) = $3
	if ( $6 ){ goto $label$14 }
	$7 = *(($1 + [8]))
	$3 = *(($1 + [4]))
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$16 }
	
.LOOP $label$17:
	*($5 + [40]) = $5
	*($5 + [16]) = $3
	*((($5 + [16]) + [8])) = ($3 + [16])
	*($5 + [20]) = ($3 + [8])
	CALL $295(($5 + [16]), ($5 + [40]))
	$3 = ($3 + [24])
	if ( ((int_32)$3 != (int_32)$7) ){ goto $label$17 }
	
.LABEL $label$16
	CALL db_update_i64(*(($1 + [20])), $2, $8, $13)
	if ( ((uint_32)$13 >= (uint_32)[513]) ){ goto $label$20 }
	if ( ((uint_64)*($0 + [16]) <= (uint_64)$9) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	CALL $400($8)
	if ( ((uint_64)*($0 + [16]) > (uint_64)$9) ){ goto $label$18 }
	
.LABEL $label$19
	*(($0 + [16])) = ((int_64)$9 + (int_64)1)
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$18
	$global$0 = ($5 + [48])
}

int_32 .FUNC $153 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [19191])
	
.LABEL $label$5
	$4 = CALL $397($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([128])) + [80]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [96]) = (int_64)0
	*($5 + [104]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [16])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [48])
	*($3 + [44]) = ($5 + [56])
	*($3 + [48]) = ($5 + [64])
	*($3 + [52]) = ($5 + [72])
	*($3 + [56]) = ($5 + [88])
	*($3 + [60]) = ($5 + [96])
	CALL $309(($3 + [32]), ($3 + [24]))
	*($5 + [108]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $157(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $400($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $150 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)4520724947059834880, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $147($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $148(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [19728])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	$6 = *($5 + [4])
	*($1 + [16]) = *($6)
	*(($1 + [40])) = *(($6 + [24]))
	*(($1 + [32])) = *(($6 + [16]))
	*(($1 + [24])) = *(($6 + [8]))
	*($1 + [48]) = *(*($5 + [8]))
	*($1 + [56]) = *(*($5 + [12]))
	*($1 + [64]) = *(*($5 + [16]))
	$6 = *($5 + [20])
	*($1 + [72]) = *($6)
	*(($1 + [80])) = *(($6 + [8]))
	*($1 + [88]) = *(*($5 + [24]))
	$6 = ($1 + [88])
	$8 = ($1 + [72])
	$9 = ($1 + [64])
	$10 = ($1 + [56])
	$11 = ($1 + [48])
	$12 = ($1 + [16])
	if ( (*([0] + [10328]) == 0) ){ goto $label$6 }
	$7 = *([0] + [10320])
	goto $label$5 
	
.LABEL $label$6
	$7 = CALL current_time()
	*([0] + [10328]) = [1]
	*([0] + [10320]) = $7
	
.LABEL $label$5
	*($1 + [96]) = $7
	$2 = $2
	$5 = ($2 + [-96])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($2 + [-7])
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $12
	*($3 + [32]) = $1
	*($3 + [40]) = $11
	*($3 + [44]) = $10
	*($3 + [48]) = $9
	*($3 + [52]) = $8
	*($3 + [56]) = $6
	*($3 + [60]) = ($1 + [96])
	CALL $202(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [108]) = CALL db_store_i64(*($4 + [8]), (int_64)4520724947059834880, *(*($0 + [8])), $7, $5, [89])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$7 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$global$0 = ($3 + [64])
}

void .FUNC $151 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $377($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $156 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-4421665416302691328, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $153($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $154(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [19728])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	$6 = *($5 + [4])
	*($1 + [16]) = *($6)
	*(($1 + [40])) = *(($6 + [24]))
	*(($1 + [32])) = *(($6 + [16]))
	*(($1 + [24])) = *(($6 + [8]))
	*($1 + [48]) = *(*($5 + [8]))
	*($1 + [56]) = *(*($5 + [12]))
	*($1 + [64]) = *(*($5 + [16]))
	$6 = *($5 + [20])
	*($1 + [72]) = *($6)
	*(($1 + [80])) = *(($6 + [8]))
	*($1 + [88]) = *(*($5 + [24]))
	$6 = ($1 + [88])
	$8 = ($1 + [72])
	$9 = ($1 + [64])
	$10 = ($1 + [56])
	$11 = ($1 + [48])
	$12 = ($1 + [16])
	if ( (*([0] + [10328]) == 0) ){ goto $label$6 }
	$7 = *([0] + [10320])
	goto $label$5 
	
.LABEL $label$6
	$7 = CALL current_time()
	*([0] + [10328]) = [1]
	*([0] + [10320]) = $7
	
.LABEL $label$5
	*($1 + [96]) = $7
	$2 = $2
	$5 = ($2 + [-96])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($2 + [-7])
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $12
	*($3 + [32]) = $1
	*($3 + [40]) = $11
	*($3 + [44]) = $10
	*($3 + [48]) = $9
	*($3 + [52]) = $8
	*($3 + [56]) = $6
	*($3 + [60]) = ($1 + [96])
	CALL $201(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [108]) = CALL db_store_i64(*($4 + [8]), (int_64)-4421665416302691328, *(*($0 + [8])), $7, $5, [89])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$7 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$global$0 = ($3 + [64])
}

void .FUNC $157 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $377($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $154 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [108]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [19834])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-4421665416302691328)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [19780])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [19780])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $153(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $155 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [104]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19287])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19332])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [19382])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL _ZdlPv($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*(($1 + [108])))
}

int_32 .FUNC $158 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [19191])
	
.LABEL $label$5
	$4 = CALL $397($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL _Znwj([128])) + [88]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [104]) = (int_64)0
	*($5 + [112]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [32])
	*($3 + [56]) = ($5 + [64])
	*($3 + [60]) = ($5 + [72])
	*($3 + [64]) = ($5 + [80])
	*($3 + [68]) = ($5 + [96])
	*($3 + [72]) = ($5 + [104])
	CALL $310(($3 + [40]), ($3 + [32]))
	*($5 + [116]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $162(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $400($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

int_32 .FUNC $159 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [116]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [19834])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)4229327255410965504)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [19780])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [19780])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $158(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $400 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$1 = *([0] + [18736])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	$2 = [18544]
	$3 = (((int_32)$1 * (int_32)[12]) + [18544])
	
.LOOP $label$3:
	$1 = *(($2 + [4]))
	if ( ($1 == 0) ){ goto $label$2 }
	if ( ((uint_32)($1 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($1 + *($2)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$2 = ($2 + [12])
	if ( ($2 <= $3) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($2 = ($0 + [-4]))) = (*($2) & [2147483647])
}

void .FUNC $273 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[31]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	$0 = *($0)
	CALL $285(*($1), ($0 + [32]))
	$2 = ($0 + [48])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $336(*($1), ($0 + [56]))
}

void .FUNC $272 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $0, [8])
	*($5 + [16]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$2 = ($global$0 - [64])
	$global$0 = $2
	*($1) = [240]
	$3 = *($0)
	$4 = *($0 + [4])
	$5 = (int_64)0
	*(($7 = (($6 = $2) + [32]))) = (int_64)0
	*(($6 + [48])) = (int_64)0
	*($6 + [24]) = (int_64)0
	*($6 + [40]) = (int_64)0
	*($6 + [16]) = [1]
	$4 = *($4)
	*($7) = *(($4 + [8]))
	*($6 + [24]) = *($4)
	$4 = CALL $393([8341])
	if ( ($4 <= [8]) ){ goto $label$3 }
	CALL eosio_assert([0], [10159])
	goto $label$2 
	
.LABEL $label$3
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$5 = (int_64)0
	
.LOOP $label$4:
	$7 = *(($4 + [8340]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$5 }
	CALL eosio_assert([0], [10204])
	
.LABEL $label$5
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$4 }
	
.LABEL $label$1
	$8 = ((int_64)$5 & (int_64)72057594037927935)
	$9 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)4)
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$5 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$8 = $5
	$7 = $4
	$4 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$8 = $5
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$7 = ((int_32)$4 < (int_32)[6])
	$10 = ($4 + [1])
	$4 = $10
	if ( $7 ){ goto $label$10 }
	$4 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [18905])
	
.LABEL $label$6
	*(($7 = (($6 + [16]) + [32]))) = $9
	*(($10 = (($6 + [16]) + [24]))) = (int_64)0
	$11 = ($1 + [8])
	$4 = *($11)
	if ( ((int_32)$4 == (int_32)*(($1 + [12]))) ){ goto $label$12 }
	*($4) = *($6 + [16])
	*(($4 + [32])) = *($7)
	*(($4 + [24])) = *($10)
	*(($4 + [16])) = *((($6 + [16]) + [16]))
	*(($4 + [8])) = *((($6 + [16]) + [8]))
	$7 = (*($11) + [40])
	*($11) = $7
	goto $label$11 
	
.LABEL $label$12
	CALL $184(($1 + [4]), ($6 + [16]))
	$7 = *($1 + [8])
	
.LABEL $label$11
	$10 = *($1 + [4])
	$12 = ($7 - $10)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$12 / (int_32)[40]))
	$4 = [34]
	
.LOOP $label$13:
	$4 = ($4 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$13 }
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$17 }
	$12 = (((int_32)((uint_32)($12 + [-40]) / (uint_32)[40]) * (int_32)[33]) + $4)
	if ( ($12 <= [513]) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$12 = ($4 + [-33])
	if ( ((uint_32)$12 >= (uint_32)[513]) ){ goto $label$15 }
	
.LABEL $label$16
	$2 = ($2 - (($12 + [15]) & [-16]))
	$global$0 = $2
	goto $label$14 
	
.LABEL $label$15
	$2 = CALL $397($12)
	
.LABEL $label$14
	*($6 + [4]) = $2
	*($6) = $2
	*($6 + [8]) = ($2 + $12)
	$4 = $2
	if ( ((int_32)$12 > (int_32)[0]) ){ goto $label$18 }
	CALL eosio_assert([0], [18965])
	$4 = *($6 + [4])
	
.LABEL $label$18
	CALL memcpy($4, $1, [1])
	$4 = ($4 + [1])
	*($6 + [4]) = $4
	$8 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [8])) - *(($1 + [4]))) / (int_32)[40]))
	
.LOOP $label$19:
	$7 = (CASTING uint_32)(uint_64 $8)
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	$10 = ((int_64)$8) != (int_64)0
	*($6 + [16]) = (($10) << [7]) | ($7 & [127]))
	if ( ((int_32)(*(($6 + [8])) - $4) > (int_32)[0]) ){ goto $label$20 }
	CALL eosio_assert([0], [18965])
	$4 = *($6 + [4])
	
.LABEL $label$20
	CALL memcpy($4, ($6 + [16]), [1])
	$4 = ($4 + [1])
	*($6 + [4]) = $4
	if ( $10 ){ goto $label$19 }
	$7 = *($11)
	$4 = *(($1 + [4]))
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$21 }
	
.LOOP $label$22:
	*($6 + [56]) = $6
	*($6 + [16]) = $4
	*((($6 + [16]) + [8])) = ($4 + [24])
	*($6 + [20]) = ($4 + [8])
	CALL $320(($6 + [16]), ($6 + [56]))
	$4 = ($4 + [40])
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$22 }
	
.LABEL $label$21
	$8 = *($1)
	*($1 + [20]) = CALL db_store_i64(*($3 + [8]), (int_64)7687445405353639936, *(*($0 + [8])), $8, $2, $12)
	if ( ((uint_32)$12 >= (uint_32)[513]) ){ goto $label$25 }
	if ( ((uint_64)*($3 + [16]) <= (uint_64)$8) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	CALL $400($2)
	if ( ((uint_64)*($3 + [16]) > (uint_64)$8) ){ goto $label$23 }
	
.LABEL $label$24
	*(($3 + [16])) = ((int_64)$8 + (int_64)1)
	$global$0 = ($6 + [64])
	return 
	
.LABEL $label$23
	$global$0 = ($6 + [64])
}

int_32 .FUNC $344 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($3 <= *($5)) ){ goto $label$2 }
	CALL eosio_assert([0], [19219])
	$3 = *($6)
	
.LABEL $label$2
	$8 = *($3)
	$3 = ($3 + [1])
	*($6) = $3
	$7 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $7)))
	$7 = ($7 + [7])
	$3 = $3
	if ( ($8 & [128]) ){ goto $label$1 }
	$7 = (CASTING uint_32)(uint_64 $4)
	$3 = *($1)
	$8 = *($1 + [4])
	$6 = ((int_32)($8 - $3) / (int_32)[56])
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$5 }
	CALL $349($1, ($7 - $6))
	$8 = *(($1 + [4]))
	$3 = *($1)
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$6 }
	$8 = ($3 + ((int_32)$7 * (int_32)[56]))
	*(($1 + [4])) = $8
	
.LABEL $label$6
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = ($2 + [20])
	$6 = ($2 + [28])
	$5 = ($2 + [36])
	
.LOOP $label$7:
	*($2) = $0
	*($2 + [8]) = $3
	*((($2 + [8]) + [8])) = ($3 + [16])
	*($7) = ($3 + [24])
	*((($2 + [8]) + [16])) = ($3 + [32])
	*($6) = ($3 + [40])
	*((($2 + [8]) + [24])) = ($3 + [41])
	*($5) = ($3 + [42])
	*((($2 + [8]) + [32])) = ($3 + [48])
	*($2 + [12]) = ($3 + [8])
	CALL $304(($2 + [8]), $2)
	$3 = ($3 + [56])
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$7 }
	
.LABEL $label$3
	$global$0 = ($2 + [48])
	return $0
}

int_32 .FUNC $228 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [176])
	$global$0 = $3
	*(($4 = $3) + [136]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [64]) + [24])) = (int_64)0
	*(($4 + [80])) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [64]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [104]) = [0]
	*($4 + [112]) = (int_64)0
	*($4 + [52]) = $2
	*($4 + [48]) = $2
	*($4 + [56]) = ($2 + $5)
	*($4 + [160]) = ($4 + [48])
	*($4 + [16]) = ($4 + [64])
	CALL $277(($4 + [16]), ($4 + [160]))
	*(($3 = ($4 + [8]))) = *($4 + [56])
	*($4) = *($4 + [48])
	*(($6 = (($4 + [144]) + [8]))) = *($3)
	*($4 + [144]) = *($4)
	$3 = *($6)
	*((($4 + [160]) + [8])) = $3
	*((($4 + [16]) + [24])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [144])
	*($4 + [32]) = $0
	*($4 + [160]) = $0
	*($4 + [164]) = ($4 + [136])
	*($4 + [160]) = ($4 + [16])
	CALL $278(($4 + [160]), ($4 + [64]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $400($2)
	
.LABEL $label$4
	if ( ((*(($4 + [96])) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [104])))
	
.LABEL $label$5
	$global$0 = ($4 + [176])
	return [1]
}

int_32 .FUNC $229 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [40]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [19214])
	
.LABEL $label$5
	CALL memcpy(($4 + [40]), $2, [8])
	*(($4 + [28])) = ($2 + [8])
	*(($4 + [32])) = $3
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [24]) = $2
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *($4 + [40])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $400($2)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
	return [1]
}

void .FUNC $89 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_64 $4, int_64 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10, int_32 $11, int_32 $12)
{
	int_32 $13
	$13 = ($global$0 - [64])
	$global$0 = $13
	CALL require_auth(*($0))
	if ( ((int_32)$2 == (int_32)[3]) ){ goto $label$14 }
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$15 }
	if ( ((int_32)$2 != (int_32)[1]) ){ goto $label$13 }
	CALL $77($0, $4, $5, [1], ((int_32)$3 ^ (int_32)[1]), $6)
	CALL $77($0, $5, $4, [1], $3, $7)
	$global$0 = ($13 + [64])
	return 
	
.LABEL $label$15
	if ( ($3 == 0) ){ goto $label$12 }
	*($13 + [56]) = [0]
	*($13 + [48]) = (int_64)0
	$2 = (*($8 + [4]) - *($8))
	if ( ($2 == 0) ){ goto $label$16 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$2 }
	$3 = CALL _Znwj($2)
	*(($13 + [56])) = ($3 + (int_32($2 >> [1]) << [1]))
	*($13 + [48]) = $3
	*($13 + [52]) = $3
	$8 = *($8)
	$2 = (*(($8 + [4])) - $8)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$16 }
	CALL memcpy($3, $8, $2)
	*($13 + [52]) = ($3 + $2)
	
.LABEL $label$16
	CALL $90($0, $4, ($13 + [48]), $5, $12)
	$2 = *($13 + [48])
	if ( ($2 == 0) ){ goto $label$5 }
	*($13 + [52]) = $2
	CALL _ZdlPv($2)
	$global$0 = ($13 + [64])
	return (unreachable)
	
.LABEL $label$14
	*(($13 + [24])) = [0]
	*($13 + [16]) = (int_64)0
	$2 = CALL $393([9332])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$11 }
	*($13 + [16]) = ($2 << [1])
	$0 = (($13 + [16]) | [1])
	if ( $2 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$13
	*(($13 + [8])) = [0]
	*($13) = (int_64)0
	$2 = CALL $393([8681])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$8 }
	*($13) = ($2 << [1])
	$0 = ($13 | [1])
	if ( $2 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$12
	*($13 + [40]) = [0]
	*($13 + [32]) = (int_64)0
	$2 = (*($9 + [4]) - *($9))
	if ( ($2 == 0) ){ goto $label$17 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$1 }
	$3 = CALL _Znwj($2)
	*(($13 + [40])) = ($3 + (int_32($2 >> [1]) << [1]))
	*($13 + [32]) = $3
	*($13 + [36]) = $3
	$8 = *($9)
	$2 = (*(($9 + [4])) - $8)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$17 }
	CALL memcpy($3, $8, $2)
	*($13 + [36]) = ($3 + $2)
	
.LABEL $label$17
	CALL $90($0, $5, ($13 + [32]), $4, $12)
	$2 = *($13 + [32])
	if ( ($2 == 0) ){ goto $label$5 }
	*($13 + [36]) = $2
	CALL _ZdlPv($2)
	$global$0 = ($13 + [64])
	return (unreachable)
	
.LABEL $label$11
	$3 = (($2 + [16]) & [-16])
	$0 = CALL _Znwj($3)
	*($13 + [16]) = ($3 | [1])
	*($13 + [24]) = $0
	*($13 + [20]) = $2
	
.LABEL $label$10
	CALL memcpy($0, [9332], $2)
	
.LABEL $label$9
	*(($0 + $2)) = [0]
	CALL eosio_assert([0], CALL $5($13, [128], ($13 + [16])))
	if ( ((*($13 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*($13 + [24]))
	$global$0 = ($13 + [64])
	return (unreachable)
	
.LABEL $label$8
	$3 = (($2 + [16]) & [-16])
	$0 = CALL _Znwj($3)
	*($13) = ($3 | [1])
	*($13 + [8]) = $0
	*($13 + [4]) = $2
	
.LABEL $label$7
	CALL memcpy($0, [8681], $2)
	
.LABEL $label$6
	*(($0 + $2)) = [0]
	CALL eosio_assert([0], CALL $5($13, [129], $13))
	if ( ((*($13) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*($13 + [8]))
	
.LABEL $label$5
	$global$0 = ($13 + [64])
	return (unreachable)
	
.LABEL $label$4
	CALL $359(($13 + [16]))
	
.LABEL $label$3
	CALL $359($13)
	
.LABEL $label$2
	CALL $377(($13 + [48]))
	
.LABEL $label$1
	CALL $377(($13 + [32]))
}

void .FUNC $88 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $377($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $224 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [32])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [20])) = $2
	*(($4 + [24])) = ($2 + $7)
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $2
	$3 = ($4 + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $400($2)
	
.LABEL $label$6
	$global$0 = ($4 + [32])
	return [1]
}

int_32 .FUNC $225 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [64]) = (int_64)0
	*($4 + [72]) = [0]
	*($4 + [74]) = [0]
	*($4 + [52]) = $2
	*($4 + [48]) = $2
	*($4 + [56]) = ($2 + $7)
	*($4 + [96]) = ($4 + [48])
	*($4 + [16]) = ($4 + [64])
	CALL $256(($4 + [16]), ($4 + [96]))
	*(($3 = ($4 + [8]))) = *($4 + [56])
	*($4) = *($4 + [48])
	*(($8 = (($4 + [80]) + [8]))) = *($3)
	*($4 + [80]) = *($4)
	$3 = *($8)
	*((($4 + [96]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$0 = *($4 + [80])
	*($4 + [32]) = $0
	*($4 + [96]) = $0
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$8 = *($4 + [74])
	$9 = *($4 + [73])
	$10 = *($4 + [72])
	$0 = *($4 + [64])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $0), (int_64 ($10 & [255])), (int_32 ($9 & [255])), (int_32 ($8 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $400($2)
	
.LABEL $label$5
	$global$0 = ($4 + [112])
	return [1]
}

int_32 .FUNC $226 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [128])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [88])) = [0]
	*($4 + [72]) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $7)
	$3 = $2
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	$3 = *($4 + [60])
	
.LABEL $label$4
	CALL memcpy(($4 + [72]), $3, [8])
	*($4 + [60]) = ($3 + [8])
	CALL $267(($4 + [56]), (($4 + [72]) + [8]))
	*(($3 = (($4 + [8]) + [8]))) = *((($4 + [56]) + [8]))
	*($4 + [8]) = *($4 + [56])
	*(($8 = (($4 + [96]) + [8]))) = *($3)
	*($4 + [96]) = *($4 + [8])
	$3 = *($8)
	*((($4 + [112]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [96])
	*($4 + [40]) = $0
	*($4 + [112]) = $0
	*($4 + [96]) = (int_64)0
	$3 = [0]
	*($4 + [104]) = [0]
	$0 = *($4 + [72])
	$8 = (*(($4 + [84])) - *($4 + [80]))
	if ( ($8 == 0) ){ goto $label$7 }
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$6 }
	$3 = CALL _Znwj($8)
	*((($4 + [96]) + [8])) = ($3 + (int_32($8 >> [1]) << [1]))
	*($4 + [96]) = $3
	*($4 + [100]) = $3
	$9 = *((($4 + [72]) + [8]))
	$8 = (*(($4 + [84])) - $9)
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($3, $9, $8)
	$3 = (*($4 + [100]) + $8)
	*($4 + [100]) = $3
	
.LABEL $label$7
	$8 = (($4 + [24]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$8 }
	$6 = *((*($8) + $6))
	
.LABEL $label$8
	*($4 + [120]) = [0]
	*($4 + [112]) = (int_64)0
	$3 = ($3 - *($4 + [96]))
	if ( ($3 == 0) ){ goto $label$9 }
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL _Znwj($3)
	*(($4 + [120])) = ($5 + (int_32($3 >> [1]) << [1]))
	*($4 + [112]) = $5
	*($4 + [116]) = $5
	$9 = *($4 + [96])
	$3 = (*($4 + [100]) - $9)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $9, $3)
	*($4 + [116]) = ($5 + $3)
	
.LABEL $label$9
	CALL void $8((int_32 $0), (int_64 ($4 + [112])), (int_32 $6))
	$3 = *($4 + [112])
	if ( ($3 == 0) ){ goto $label$10 }
	*($4 + [116]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$10
	$3 = *($4 + [96])
	if ( ($3 == 0) ){ goto $label$11 }
	*($4 + [100]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$11
	if ( ($7 <= [513]) ){ goto $label$12 }
	CALL $400($2)
	
.LABEL $label$12
	$2 = *(($4 + [80]))
	if ( ($2 == 0) ){ goto $label$13 }
	*(($4 + [84])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$13
	$global$0 = ($4 + [128])
	return [1]
	
.LABEL $label$6
	CALL $377(($4 + [96]))
	
.LABEL $label$5
	CALL $377(($4 + [112]))
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $227 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [40]) = [0]
	*($4 + [32]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	
.LABEL $label$4
	$3 = ($2 + $7)
	CALL memcpy(($4 + [32]), $2, [8])
	$8 = ($2 + [8])
	if ( ((int_32)$7 != (int_32)[8]) ){ goto $label$5 }
	CALL eosio_assert([0], [19214])
	
.LABEL $label$5
	CALL memcpy($4, $8, [1])
	$8 = *($4)
	*((($4 + [32]) + [8])) = ((int_32)$8 != (int_32)[0])
	*(($4 + [24])) = $3
	*($4 + [16]) = $2
	*(($4 + [20])) = ($2 + [9])
	*($4 + [8]) = $1
	*($4) = $0
	$3 = ($4 + int_32($5 >> [1]))
	$0 = *($4 + [32])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 ((int_32)$8 != (int_32)[0])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $400($2)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
	return [1]
}

int_32 .FUNC $220 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$3 = ($global$0 - [560])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = ($4 + [200]))) = (int_64)0
	*(($8 = ($4 + [192]))) = (int_64)0
	*(($9 = (($4 + [160]) + [24]))) = (int_64)0
	*(($10 = ($4 + [232]))) = (int_64)0
	*(($11 = ($4 + [224]))) = (int_64)0
	*(($12 = ($4 + [216]))) = (int_64)0
	*(($13 = ($4 + [264]))) = (int_64)0
	*(($14 = ($4 + [256]))) = (int_64)0
	*(($15 = ($4 + [248]))) = (int_64)0
	*($4 + [176]) = (int_64)0
	*($4 + [160]) = (int_64)0
	*($4 + [208]) = (int_64)0
	*($4 + [240]) = (int_64)0
	*($4 + [148]) = $2
	*($4 + [144]) = $2
	*($4 + [152]) = ($2 + $7)
	*($4 + [496]) = ($4 + [144])
	*($4 + [528]) = ($4 + [160])
	CALL $257(($4 + [528]), ($4 + [496]))
	*(($16 = (($4 + [96]) + [8]))) = *($4 + [152])
	*($4 + [96]) = *($4 + [144])
	*(($17 = (($4 + [496]) + [8]))) = *($16)
	*($4 + [496]) = *($4 + [96])
	$16 = *($17)
	*((($4 + [528]) + [8])) = $16
	*((($4 + [112]) + [24])) = $16
	*($4 + [112]) = $0
	*($4 + [120]) = $1
	$0 = *($4 + [496])
	*($4 + [128]) = $0
	*($4 + [528]) = $0
	*(($16 = (($4 + [336]) + [16]))) = *($8)
	*(($8 = (($4 + [336]) + [24]))) = *($3)
	*(($3 = (($4 + [304]) + [16]))) = *($11)
	*(($11 = (($4 + [304]) + [24]))) = *($10)
	*(($10 = (($4 + [272]) + [16]))) = *($14)
	*(($14 = (($4 + [272]) + [24]))) = *($13)
	*($4 + [336]) = *($4 + [176])
	*($4 + [344]) = *($9)
	*($4 + [304]) = *($4 + [208])
	*($4 + [312]) = *($12)
	*($4 + [272]) = *($4 + [240])
	*($4 + [280]) = *($15)
	$0 = *($4 + [160])
	*((($4 + [432]) + [24])) = *($14)
	*((($4 + [432]) + [16])) = *($10)
	*((($4 + [400]) + [16])) = *($3)
	*((($4 + [400]) + [24])) = *($11)
	*((($4 + [368]) + [16])) = *($16)
	*((($4 + [368]) + [24])) = *($8)
	*($4 + [440]) = *($4 + [280])
	*($4 + [432]) = *($4 + [272])
	*($4 + [400]) = *($4 + [304])
	*($4 + [408]) = *($4 + [312])
	*($4 + [368]) = *($4 + [336])
	*($4 + [376]) = *($4 + [344])
	$3 = (($4 + [112]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	*(($5 = (($4 + [528]) + [24]))) = *((($4 + [368]) + [24]))
	*(($8 = (($4 + [528]) + [16]))) = *((($4 + [368]) + [16]))
	*(($9 = (($4 + [496]) + [16]))) = *((($4 + [400]) + [16]))
	*(($10 = (($4 + [496]) + [24]))) = *((($4 + [400]) + [24]))
	*(($11 = (($4 + [464]) + [16]))) = *((($4 + [432]) + [16]))
	*(($12 = (($4 + [464]) + [24]))) = *((($4 + [432]) + [24]))
	*($4 + [536]) = *($4 + [376])
	*($4 + [528]) = *($4 + [368])
	*($4 + [496]) = *($4 + [400])
	*($4 + [504]) = *($4 + [408])
	*($4 + [464]) = *($4 + [432])
	*($4 + [472]) = *($4 + [440])
	*((($4 + [64]) + [24])) = *($5)
	*((($4 + [64]) + [16])) = *($8)
	*((($4 + [32]) + [16])) = *($9)
	*((($4 + [32]) + [24])) = *($10)
	*(($4 + [16])) = *($11)
	*(($4 + [24])) = *($12)
	*($4 + [72]) = *($4 + [536])
	*($4 + [64]) = *($4 + [528])
	*($4 + [32]) = *($4 + [496])
	*($4 + [40]) = *($4 + [504])
	*($4) = *($4 + [464])
	*($4 + [8]) = *($4 + [472])
	CALL void $3((int_32 $0), (int_64 ($4 + [64])), (int_32 ($4 + [32])), (int_32 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $400($2)
	
.LABEL $label$6
	$global$0 = ($4 + [560])
	return [1]
}

int_32 .FUNC $221 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [40]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [19214])
	
.LABEL $label$5
	CALL memcpy(($4 + [40]), $2, [8])
	*(($4 + [28])) = ($2 + [8])
	*(($4 + [32])) = $3
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [24]) = $2
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *($4 + [40])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $400($2)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
	return [1]
}

int_32 .FUNC $222 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [40]) = [0]
	*($4 + [32]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	
.LABEL $label$4
	$3 = ($2 + $7)
	$8 = (($4 + [32]) + [8])
	CALL memcpy(($4 + [32]), $2, [8])
	$9 = ($2 + [8])
	if ( ((int_32)($7 & [-2]) != (int_32)[8]) ){ goto $label$5 }
	CALL eosio_assert([0], [19214])
	
.LABEL $label$5
	CALL memcpy($8, $9, [2])
	*(($4 + [24])) = $3
	*($4 + [16]) = $2
	*(($4 + [20])) = ($2 + [10])
	*($4 + [8]) = $1
	*($4) = $0
	$3 = ($4 + int_32($5 >> [1]))
	$8 = *(($4 + [40]))
	$0 = *($4 + [32])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 ($8 & [65535])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $400($2)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
	return [1]
}

void .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($0)
	if ( (*(*($4 + [4])) == 0) ){ goto $label$3 }
	if ( *(*($4 + [8])) ){ goto $label$1 }
	*($1 + [24]) = ((int_64)*($1 + [24]) + (int_64)1)
	$4 = ($1 + [8])
	goto $label$2 
	
.LABEL $label$3
	*($1 + [32]) = ((int_64)*($1 + [32]) + (int_64)1)
	$4 = ($1 + [16])
	
.LABEL $label$2
	*($4) = ((int_64)*($4) + (int_64)1)
	
.LABEL $label$1
	if ( (*([0] + [10328]) == 0) ){ goto $label$5 }
	$6 = *([0] + [10320])
	goto $label$4 
	
.LABEL $label$5
	$6 = CALL current_time()
	*([0] + [10328]) = [1]
	*([0] + [10320]) = $6
	
.LABEL $label$4
	*($1 + [48]) = $6
	$4 = $2
	$2 = ($4 + [-64])
	$global$0 = $2
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($4 + [-13])
	*($3 + [16]) = $3
	*($3 + [28]) = ($1 + [8])
	*($3 + [24]) = $1
	*($3 + [32]) = ($1 + [16])
	*($3 + [36]) = ($1 + [24])
	*($3 + [40]) = ($1 + [32])
	*($3 + [44]) = ($1 + [40])
	*($3 + [48]) = ($1 + [41])
	*($3 + [52]) = ($1 + [42])
	*($3 + [56]) = ($1 + [48])
	CALL $203(($3 + [24]), ($3 + [16]))
	$6 = *($1)
	*($1 + [60]) = CALL db_store_i64(*($5 + [8]), (int_64)-6039700478021828608, *(*($0 + [8])), $6, $2, [51])
	if ( (uint_64)($6 <= *($5 + [16])) ){ goto $label$6 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$global$0 = ($3 + [64])
}

int_64 .FUNC $389 (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	if ( ((uint_32)$1 > (uint_32)[36]) ){ goto $label$17 }
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$17 }
	$4 = ($0 + [104])
	$5 = ($0 + [4])
	
.LOOP $label$18:
	$6 = *($5)
	if ( ($6 <= *($4)) ){ goto $label$20 }
	$6 = CALL $388($0)
	if ( ((uint_32)($6 + [-9]) >= (uint_32)[5]) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	*($5) = ($6 + [1])
	$6 = *($6)
	if ( (($6 + [-9]) <= [5]) ){ goto $label$18 }
	
.LABEL $label$19
	if ( ((int_32)$6 == (int_32)[32]) ){ goto $label$18 }
	$5 = ((int_32)$6 == (int_32)[45])
	if ( $5 ){ goto $label$21 }
	if ( ((int_32)$6 != (int_32)[43]) ){ goto $label$16 }
	
.LABEL $label$21
	$7 = ( [-1] ? [0] : $5 )
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$15 }
	*($5) = ($6 + [1])
	$6 = *($6)
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$17
	*(CALL $379()) = [22]
	return (int_64)0
	
.LABEL $label$16
	$7 = [0]
	if ( ((int_32)($1 | [16]) == (int_32)[16]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$6 = CALL $388($0)
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$13 }
	
.LABEL $label$14
	if ( ((int_32)$6 != (int_32)[48]) ){ goto $label$13 }
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$12 }
	*($5) = ($6 + [1])
	$6 = *($6)
	goto $label$11 
	
.LABEL $label$13
	$1 = ( $1 ? [10] : $1 )
	if ( ((uint_32)$1 > (uint_32)*(($6 + [20369]))) ){ goto $label$10 }
	if ( (*(($0 + [104])) == 0) ){ goto $label$22 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	
.LABEL $label$22
	CALL $387($0, (int_64)0)
	*(CALL $379()) = [22]
	return (int_64)0
	
.LABEL $label$12
	$6 = CALL $388($0)
	
.LABEL $label$11
	if ( ((int_32)($6 | [32]) != (int_32)[120]) ){ goto $label$23 }
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$9 }
	*($5) = ($6 + [1])
	$6 = *($6)
	goto $label$8 
	
.LABEL $label$23
	if ( ($1 == 0) ){ goto $label$7 }
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)[10]) ){ goto $label$6 }
	$8 = (int_64)0
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$2 }
	$5 = [0]
	$9 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$25:
	$6 = ((int_32)$5 * (int_32)[10])
	$1 = *($2)
	if ( ((uint_32)$1 >= (uint_32)*($9)) ){ goto $label$27 }
	*($2) = ($1 + [1])
	$5 = ($6 + $4)
	$6 = *($1)
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 <= (uint_32)[9]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$27
	$5 = ($6 + $4)
	$6 = CALL $388($0)
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$24 }
	
.LABEL $label$26
	if ( ($5 <= [429496729]) ){ goto $label$25 }
	
.LABEL $label$24
	$8 = (CASTING uint_64)(uint_32 $5)
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$2 }
	$1 = [10]
	$11 = (CASTING int_64)(int_32 $4)
	$10 = ((int_64)$8 * (int_64)10)
	if ( ((uint_64)$10 > (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$28:
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$30 }
	*($4) = ($6 + [1])
	$8 = ((int_64)$10 + (int_64)$11)
	$6 = *($6)
	$5 = ($6 + [-48])
	if ( ((uint_32)$5 <= (uint_32)[9]) ){ goto $label$29 }
	goto $label$4 
	
.LABEL $label$30
	$8 = ((int_64)$10 + (int_64)$11)
	$6 = CALL $388($0)
	$5 = ($6 + [-48])
	if ( ((uint_32)$5 > (uint_32)[9]) ){ goto $label$4 }
	
.LABEL $label$29
	if ( ((uint_64)$8 >= (uint_64)(int_64)1844674407370955162) ){ goto $label$4 }
	$11 = (CASTING int_64)(int_32 $5)
	$10 = ((int_64)$8 * (int_64)10)
	if ( ((uint_64)$10 <= (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$28 }
	goto $label$3 
	
.LABEL $label$9
	$6 = CALL $388($0)
	
.LABEL $label$8
	$1 = [16]
	if ( (*(($6 + [20369])) <= [16]) ){ goto $label$6 }
	$6 = *(($0 + [104]))
	if ( ($6 == 0) ){ goto $label$31 }
	*(($5 = ($0 + [4]))) = (*($5) + [-1])
	
.LABEL $label$31
	if ( ($2 == 0) ){ goto $label$5 }
	$8 = (int_64)0
	if ( ($6 == 0) ){ goto $label$1 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	return (int_64)0
	
.LABEL $label$7
	$1 = [8]
	
.LABEL $label$6
	if ( ((($1 + [-1]) & $1) == 0) ){ goto $label$32 }
	$8 = (int_64)0
	$5 = *(($6 + [20369]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$33 }
	$4 = [0]
	$9 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$35:
	$4 = ($5 + ((int_32)$4 * (int_32)$1))
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*($9)) ){ goto $label$37 }
	*($2) = ($6 + [1])
	$6 = *($6)
	$5 = *(($6 + [20369]))
	if ( ((uint_32)$4 <= (uint_32)[119304646]) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$37
	$6 = CALL $388($0)
	$5 = *(($6 + [20369]))
	if ( ((uint_32)$4 > (uint_32)[119304646]) ){ goto $label$34 }
	
.LABEL $label$36
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$35 }
	
.LABEL $label$34
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LABEL $label$33
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	$12 = (CASTING uint_64)(uint_32 $1)
	$13 = ((uint_64)(int_64)-1 / (uint_64)$12)
	if ( ((uint_64)$8 > (uint_64)$13) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$38:
	$11 = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	$10 = ((int_64)$8 * (int_64)$12)
	if ( ((uint_64)$10 > (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$3 }
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$40 }
	*($4) = ($6 + [1])
	$6 = *($6)
	goto $label$39 
	
.LABEL $label$40
	$6 = CALL $388($0)
	
.LABEL $label$39
	$8 = ((int_64)$10 + (int_64)$11)
	$5 = *(($6 + [20369]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	if ( ((uint_64)$8 <= (uint_64)$13) ){ goto $label$38 }
	goto $label$3 
	
.LABEL $label$32
	$9 = *(((uint_32(((int_32)$1 * (int_32)[23]) >> [5]) & [7]) + [8214]))
	$8 = (int_64)0
	$5 = *(($6 + [20369]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$41 }
	$4 = [0]
	$14 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$43:
	$4 = ($5 | ($4 << $9))
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*($14)) ){ goto $label$45 }
	*($2) = ($6 + [1])
	$6 = *($6)
	$5 = *(($6 + [20369]))
	if ( ((uint_32)$4 <= (uint_32)[134217727]) ){ goto $label$44 }
	goto $label$42 
	
.LABEL $label$45
	$6 = CALL $388($0)
	$5 = *(($6 + [20369]))
	if ( ((uint_32)$4 > (uint_32)[134217727]) ){ goto $label$42 }
	
.LABEL $label$44
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$43 }
	
.LABEL $label$42
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LABEL $label$41
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	$11 = (CASTING uint_64)(uint_32 $9)
	$12 = (uint_64)(int_64)-1 >> (uint_64)$11
	if ( (uint_64)($12) <= $8) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$46:
	$8 = ((int_64)$8 << (int_64)$11)
	$10 = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$48 }
	*($4) = ($6 + [1])
	$6 = *($6)
	goto $label$47 
	
.LABEL $label$48
	$6 = CALL $388($0)
	
.LABEL $label$47
	$8 = ((int_64)$8 | (int_64)$10)
	$5 = *(($6 + [20369]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	if ( ((uint_64)$8 <= (uint_64)$12) ){ goto $label$46 }
	goto $label$3 
	
.LABEL $label$5
	CALL $387($0, (int_64)0)
	return (int_64)0
	
.LABEL $label$4
	if ( ((uint_32)$5 > (uint_32)[9]) ){ goto $label$2 }
	
.LABEL $label$3
	if ( ((uint_32)$1 <= (uint_32)*(($6 + [20369]))) ){ goto $label$2 }
	$4 = ($0 + [104])
	$5 = ($0 + [4])
	
.LOOP $label$50:
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*($4)) ){ goto $label$51 }
	*($5) = ($6 + [1])
	if ( ((uint_32)$1 > (uint_32)*((*($6) + [20369]))) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$51
	if ( ((uint_32)$1 > (uint_32)*((CALL $388($0) + [20369]))) ){ goto $label$50 }
	
.LABEL $label$49
	*(CALL $379()) = [34]
	$7 = ( $7 ? [0] : (int_64)(((int_64)$3 & (int_64)1) == 0) )
	$8 = $3
	
.LABEL $label$2
	if ( (*(($0 + [104])) == 0) ){ goto $label$52 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	
.LABEL $label$52
	if ( (uint_64)($8 <= $3) ){ goto $label$53 }
	if ( (CASTING uint_32)(uint_64 ((int_64)$3 & (int_64)1)) ){ goto $label$54 }
	if ( $7 ){ goto $label$54 }
	*(CALL $379()) = [34]
	return ((int_64)$3 + (int_64)-1)
	
.LABEL $label$54
	if ( ((uint_64)$8 <= (uint_64)$3) ){ goto $label$53 }
	*(CALL $379()) = [34]
	return $3
	
.LABEL $label$53
	$10 = (CASTING int_64)(int_32 $7)
	$8 = (int_64))(((int_64)$8 ^ (int_64)$10) - $10)
	
.LABEL $label$1
	return $8
}

int_32 .FUNC $388 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [112])
	if ( (int_64)($1 == 0) ){ goto $label$6 }
	if ( ((int_64)*($0 + [120]) >= (int_64)$1) ){ goto $label$5 }
	
.LABEL $label$6
	$2 = CALL $386($0)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($0 + [8])
	$1 = *(($0 + [112]))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$7 }
	$4 = *($0 + [4])
	$1 = (int_64)
	if ( ((int_64)$1($1 - *($0 + [120]))) <= (int_64)(CASTING int_64)(int_32 ($3 - $4))) ){ goto $label$4 }
	
.LABEL $label$7
	*($0 + [104]) = $3
	if ( ($3 == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	*($0 + [104]) = [0]
	return [-1]
	
.LABEL $label$4
	*($0 + [104]) = (($4 + (CASTING uint_32)(uint_64 $1)) + [-1])
	if ( $3 ){ goto $label$2 }
	
.LABEL $label$3
	$3 = *(($0 + [4]))
	goto $label$1 
	
.LABEL $label$2
	$3 = *(($0 + [4]))
	*($0 + [120]) = ((int_64)*($0 + [120]) + (int_64)(CASTING int_64)(int_32 (($3 + [1]) - $3)))
	
.LABEL $label$1
	$0 = ($3 + [-1])
	if ( ((int_32)$2 == (int_32)*($0)) ){ goto $label$8 }
	*($0) = $2
	
.LABEL $label$8
	return $2
}

void .FUNC $383 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$1 }
	*(($1 + $2)) = $0
	
.LABEL $label$1
}

int_32 .FUNC $382 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10)
{
	int_32 $11
	$11 = ($10 & [2])
	if ( $11 ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$1 }
	
.LOOP $label$2:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ($5 <= [32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)($10 & [3]) != (int_32)[1]) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$3 }
	
.LOOP $label$4:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ($5 <= [32]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( (($10 & [16]) == 0) ){ goto $label$5 }
	if ( ($10 & [1024]) ){ goto $label$11 }
	if ( ($5 == 0) ){ goto $label$11 }
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$10 }
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_32)$7 != (int_32)[16]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$5 = ($5 + [-1])
	$5 = ( ( ($5 + [-2]) ? $5 : $5 ) ? $5 : ((int_32)$7 == (int_32)[16]) )
	if ( ((int_32)$7 == (int_32)[16]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((int_32)$7 != (int_32)[2]) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [98]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$8 = ($10 & [32])
	if ( $8 ){ goto $label$12 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$12 }
	*(($4 + $5)) = [120]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$12
	if ( ($8 == 0) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [88]
	$5 = ($5 + [1])
	
.LABEL $label$7
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$5 }
	
.LABEL $label$6
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	
.LABEL $label$5
	if ( ($5 == 0) ){ goto $label$13 }
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$13 }
	$5 = ($9 - (((int_32)($10 & [12]) != (int_32)[0]) | $6))
	
.LABEL $label$13
	$8 = ($10 & [1])
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$16 }
	if ( ($6 == 0) ){ goto $label$17 }
	*(($4 + $5)) = [45]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	if ( ($10 & [4]) ){ goto $label$18 }
	if ( (($10 & [8]) == 0) ){ goto $label$16 }
	*(($4 + $5)) = [32]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$18
	*(($4 + $5)) = [43]
	$5 = ($5 + [1])
	
.LABEL $label$16
	$6 = $2
	if ( $8 ){ goto $label$14 }
	
.LABEL $label$15
	$6 = $2
	if ( $11 ){ goto $label$14 }
	$6 = $2
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$14 }
	$10 = ($9 - $5)
	$6 = ($9 + $2)
	$8 = $2
	
.LOOP $label$19:
	CALL void [32]((int_32 $1), (int_32 $8), (int_32 $3), (int_32 $0))
	$8 = ($8 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$19 }
	$6 = ($6 - $5)
	
.LABEL $label$14
	if ( ($5 == 0) ){ goto $label$20 }
	$8 = ($5 + [-1])
	$10 = $6
	
.LOOP $label$21:
	CALL void *(($4 + $8))((int_32 $1), (int_32 $10), (int_32 $3), (int_32 $0))
	$10 = ($10 + [1])
	$8 = ($8 + [-1])
	if ( ((int_32)$8 != (int_32)[-1]) ){ goto $label$21 }
	$6 = ($5 + $6)
	
.LABEL $label$20
	if ( ($11 == 0) ){ goto $label$22 }
	if ( ((uint_32)($6 - $2) >= (uint_32)$9) ){ goto $label$22 }
	$5 = ([0] - $2)
	
.LOOP $label$23:
	CALL void [32]((int_32 $1), (int_32 $6), (int_32 $3), (int_32 $0))
	$6 = ($6 + [1])
	if ( (($5 + $6) <= $9) ){ goto $label$23 }
	$6 = ($9 + $2)
	
.LABEL $label$22
	return $6
}

void .FUNC $381 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
}

int_32 .FUNC $380 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	float_64 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	float_64 $24
	float_64 $25
	float_64 $26
	int_32 $27
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = ( $0 ? [44] : $1 )
	$7 = [0]
	
.LOOP $label$1:
	$9 = $7
	$10 = ([0] - $9)
	$0 = ($3 + [2])
	$11 = [0]
	$7 = *(($3 + [0]))
	if ( ($7 == 0) ){ goto $label$5 }
	
.LOOP $label$7:
	$12 = ($9 + $11)
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$6 }
	CALL void int_32(($7 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$10 = ($10 + [-1])
	$0 = ($0 + [1])
	$11 = ($11 + [1])
	$7 = *(($3 + $11))
	if ( $7 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$13 = [0]
	
.LOOP $label$9:
	$8 = ($0 + [-1])
	$7 = *($8)
	$14 = ($7 + [-32])
	if ( ((uint_32)$14 > (uint_32)[16]) ){ goto $label$8 }
	$3 = [1]
	goto $label$14 
	
.LABEL $label$14
	$3 = [8]
	goto $label$10 
	
.LABEL $label$13
	$3 = [16]
	goto $label$10 
	
.LABEL $label$12
	$3 = [4]
	goto $label$10 
	
.LABEL $label$11
	$3 = [2]
	
.LABEL $label$10
	$0 = ($0 + [1])
	$13 = ($13 | $3)
	goto $label$9 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$15 }
	$3 = [0]
	
.LOOP $label$16:
	$3 = ((((int_32)$3 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$16 }
	$14 = [0]
	if ( ((int_32)($7 & [255]) != (int_32)[46]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$15
	$3 = [0]
	if ( ((int_32)$7 != (int_32)[42]) ){ goto $label$17 }
	$7 = *($4)
	$13 = ( ($13 | [2]) ? $13 : ((int_32)$7 < (int_32)[0]) )
	$3 = int_32($7 >> [31])
	$3 = ((int_32)($7 + $3) ^ (int_32)$3)
	$4 = ($4 + [4])
	$14 = [0]
	$7 = *($0)
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$17
	$0 = $8
	$14 = [0]
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$0 = ($9 + $11)
	CALL void [0]((int_32 $1), (int_32 ( $0 ? ($2 + [-1]) : ($0 <= $2) )), (int_32 $2), (int_32 $6))
	$global$0 = ($5 + [32])
	return $0
	
.LABEL $label$4
	$8 = $0
	goto $label$2 
	
.LABEL $label$3
	$8 = ($0 + [1])
	$13 = ($13 | [1024])
	$7 = *($0 + [1])
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$18 }
	$14 = [0]
	
.LOOP $label$19:
	$14 = ((((int_32)$14 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$19 }
	$8 = $0
	goto $label$2 
	
.LABEL $label$18
	if ( ((int_32)($7 & [255]) != (int_32)[42]) ){ goto $label$2 }
	$7 = *($4)
	$14 = ( $7 ? [0] : ((int_32)$7 > (int_32)[0]) )
	$8 = ($0 + [2])
	$4 = ($4 + [4])
	$7 = *($0 + [2])
	
.LABEL $label$2
	$0 = (rotl((int_32) (int_32(($7 << [24]) >> [24]) + [-104])))
	if ( ((uint_32)$0 > (uint_32)[31]) ){ goto $label$23 }
	goto $label$26 
	
.LABEL $label$27
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	goto $label$23 
	
.LABEL $label$26
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[104]) ){ goto $label$22 }
	$8 = ($8 + [2])
	$13 = ($13 | [192])
	goto $label$23 
	
.LABEL $label$25
	$8 = ($8 + [1])
	$13 = ($13 | [512])
	goto $label$23 
	
.LABEL $label$24
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[108]) ){ goto $label$21 }
	$8 = ($8 + [2])
	$13 = ($13 | [768])
	
.LABEL $label$23
	$0 = *($8)
	goto $label$20 
	
.LABEL $label$22
	$8 = ($8 + [1])
	$13 = ($13 | [128])
	goto $label$20 
	
.LABEL $label$21
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	
.LABEL $label$20
	$15 = int_32(($0 << [24]) >> [24])
	$7 = ($15 + [-37])
	if ( ((uint_32)$7 > (uint_32)[83]) ){ goto $label$51 }
	goto $label$55 
	
.LABEL $label$62
	$11 = ($0 & [255])
	$7 = ($11 + [-88])
	if ( ((uint_32)$7 > (uint_32)[32]) ){ goto $label$60 }
	$0 = [8]
	$10 = [16]
	goto $label$59 
	
.LABEL $label$63
	$0 = [2]
	goto $label$58 
	
.LABEL $label$61
	$18 = ((float_64)$17 < (float_64)(float_64)0)
	$16 = (($4 + [7]) & [-8])
	$17 = *($16)
	$17 = ( (float_64))((float_64)0 - $17) ? $17 : $18 )
	$0 = ( $14 ? [6] : ($13 & [1024]) )
	if ( ($0 <= [10]) ){ goto $label$48 }
	$14 = [1]
	
.LOOP $label$65:
	*((($5 + ($7 = $14)) + [-1])) = [48]
	$14 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$64 }
	if ( ((uint_32)$0 > (uint_32)[9]) ){ goto $label$65 }
	
.LABEL $label$64
	$19 = ($7 <= [32])
	$14 = ($14 + [-1])
	goto $label$47 
	
.LABEL $label$60
	$13 = ($13 & [-17])
	$10 = [10]
	
.LABEL $label$59
	$13 = ( ($13 | [32]) ? $13 : ((int_32)$11 == (int_32)[88]) )
	if ( ((int_32)$11 == (int_32)[100]) ){ goto $label$57 }
	$0 = $10
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$56 }
	
.LABEL $label$58
	$13 = ($13 & [-13])
	goto $label$56 
	
.LABEL $label$57
	$0 = $10
	
.LABEL $label$56
	$7 = ( ($13 & [-2]) ? $13 : ($13 & [1024]) )
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$70 }
	if ( ((int_32)$11 != (int_32)[100]) ){ goto $label$69 }
	
.LABEL $label$70
	if ( ($7 & [512]) ){ goto $label$68 }
	if ( ($7 & [256]) ){ goto $label$67 }
	if ( ($7 & [64]) ){ goto $label$46 }
	$11 = *($4)
	$15 = ( int_32(($11 << [16]) >> [16]) ? $11 : ($7 & [128]) )
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$69
	if ( ($7 & [512]) ){ goto $label$66 }
	if ( ($7 & [256]) ){ goto $label$45 }
	if ( ($7 & [64]) ){ goto $label$44 }
	$11 = *($4)
	$11 = ( ($11 & [65535]) ? $11 : ($7 & [128]) )
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( ($11 == 0) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$68
	$9 = (($4 + [7]) & [-8])
	$20 = *($9)
	$11 = ((int_64)$20 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$72 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$71 }
	
.LABEL $label$72
	$21 = (CASTING uint_64)(uint_32 $0)
	$22 = (int_64)$20 >> (int_64)63
	$22 = ((int_64)((int_64)$20 + (int_64)$22)) ^ (int_64)$22)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$73:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$71 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$73 }
	
.LABEL $label$71
	$4 = ($9 + [8])
	$7 = CALL $382($6, $1, $12, $2, $5, $11, (CASTING uint_32)(uint_64 (uint_64)$20 >> (uint_64)(int_64)63)), $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$67
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$75 }
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$74 }
	
.LABEL $label$75
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$76:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$74 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$76 }
	
.LABEL $label$74
	$4 = ($4 + [4])
	$7 = CALL $382($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$66
	$9 = (($4 + [7]) & [-8])
	$22 = *($9)
	$11 = ((int_64)$22 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$78 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$77 }
	
.LABEL $label$78
	$21 = (CASTING uint_64)(uint_32 $0)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$79:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$77 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$79 }
	
.LABEL $label$77
	$4 = ($9 + [8])
	$7 = CALL $382($6, $1, $12, $2, $5, $11, [0], $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$55
	CALL void [37]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	goto $label$50 
	
.LABEL $label$54
	$10 = [1]
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$80 }
	$10 = [2]
	if ( ($3 <= [2]) ){ goto $label$80 }
	$0 = ($3 + [-1])
	$10 = ($3 + [1])
	
.LOOP $label$81:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$81 }
	$12 = ((($3 + $9) + $11) + [-1])
	
.LABEL $label$80
	CALL void *($4)((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$7 = ($12 + [1])
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$49 }
	if ( ((uint_32)$10 >= (uint_32)$3) ){ goto $label$49 }
	$0 = ($3 - $10)
	$11 = ($7 + $3)
	
.LOOP $label$82:
	CALL void [32]((int_32 $1), (int_32 $7), (int_32 $2), (int_32 $6))
	$7 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$82 }
	$7 = ($11 - $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$53
	$0 = *($4)
	$0 = ($13 | [33])
	$10 = ( $0 ? ($0 & [-17]) : $0 )
	if ( $0 ){ goto $label$84 }
	$11 = [0]
	if ( ($10 & [1024]) ){ goto $label$83 }
	
.LABEL $label$84
	$11 = [0]
	
.LOOP $label$85:
	$7 = ($0 & [15])
	*(($5 + $11)) = (( [48] ? [55] : ($7 <= [10]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$83 }
	$7 = ((uint_32)$0 > (uint_32)[15])
	$0 = uint_32($0 >> [4])
	if ( $7 ){ goto $label$85 }
	
.LABEL $label$83
	$4 = ($4 + [4])
	$7 = CALL $382($6, $1, $12, $2, $5, $11, [0], [16], $14, [8], $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$52
	$10 = *($4)
	$0 = ($10 + [-1])
	
.LOOP $label$86:
	$0 = ($0 + [1])
	if ( *($0) ){ goto $label$86 }
	$15 = ($13 & [1024])
	$0 = ($0 - $10)
	$7 = ( ( $0 ? $14 : ($0 <= $14) ) ? $0 : uint_32($15 >> [10]) )
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$39 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$40 }
	$0 = (($9 + ($3 - $7)) + $11)
	
.LOOP $label$87:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$7 = ($7 + [1])
	if ( ($7 <= $3) ){ goto $label$87 }
	$7 = ($3 + [1])
	$12 = $0
	$0 = *($10)
	if ( $0 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$51
	CALL void $15((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	
.LABEL $label$50
	$7 = ($12 + [1])
	
.LABEL $label$49
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$48
	$19 = [1]
	$14 = [0]
	
.LABEL $label$47
	$24 = *((($0 << [3]) + [20288]))
	$25 = ((float_64)(float_64))($17 - (Rounds 0)($17)) * (float_64)$24
	$26 = (float_64)
	$7 = ((float_64)$26($25) - (Rounds 0)($25))) > (float_64)(float_64)0.5)
	if ( (((float_64)$25 < (float_64)(float_64)4294967296) & ((float_64)$25 >= (float_64)(float_64)0)) ){ goto $label$89 }
	$4 = [0]
	goto $label$88 
	
.LABEL $label$89
	$4 = (CASTING uint_32)(float_64 $25)
	
.LABEL $label$88
	$7 = ((int_32)$7 ^ (int_32)[1])
	if ( ((float_64)(float_64)|$17| < (float_64)(float_64)2147483648) ){ goto $label$91 }
	$15 = [-2147483648]
	if ( ($7 == 0) ){ goto $label$90 }
	goto $label$36 
	
.LABEL $label$91
	$15 = (CASTING int_32)(float_64 $17)
	if ( $7 ){ goto $label$36 }
	
.LABEL $label$90
	$4 = ($4 + [1])
	if ( ((int_32)((float_64)$24 <= (float_64)(CASTING float_64)(uint_32 $4)) ^ (int_32)[1]) ){ goto $label$35 }
	$15 = ($15 + [1])
	$4 = [0]
	goto $label$35 
	
.LABEL $label$46
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( ($15 == 0) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$45
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$93 }
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$92 }
	
.LABEL $label$93
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$94:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$92 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$94 }
	
.LABEL $label$92
	$4 = ($4 + [4])
	$7 = CALL $382($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$44
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$42 }
	
.LABEL $label$43
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$41 }
	
.LABEL $label$42
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$95:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$41 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$95 }
	
.LABEL $label$41
	$4 = ($4 + [4])
	$7 = CALL $382($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$40
	$7 = ($7 + [1])
	
.LABEL $label$39
	$0 = *($10)
	if ( ($0 == 0) ){ goto $label$37 }
	
.LABEL $label$38
	if ( ($15 == 0) ){ goto $label$96 }
	$11 = ($10 + [1])
	
.LOOP $label$97:
	if ( ($14 == 0) ){ goto $label$37 }
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$14 = ($14 + [-1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$97 }
	goto $label$37 
	
.LABEL $label$96
	$11 = ($10 + [1])
	
.LOOP $label$98:
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$98 }
	
.LABEL $label$37
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$100 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$99 }
	$0 = ($3 - $7)
	$11 = ($12 + $3)
	
.LOOP $label$101:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$101 }
	$7 = ($11 - $7)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$100
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$99
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$36
	if ( ((float_64)$26 != (float_64)(float_64)0.5) ){ goto $label$35 }
	$4 = ((($4 & [1]) | ($4 == 0)) + $4)
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$35
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	
.LABEL $label$34
	if ( ($0 == 0) ){ goto $label$105 }
	$7 = [32]
	if ( ($19 == 0) ){ goto $label$102 }
	
.LOOP $label$107:
	$7 = ((uint_32)$4 / (uint_32)[10])
	*(($5 + $14)) = (($4 - ((int_32)$7 * (int_32)[10])) | [48])
	$0 = ($0 + [-1])
	$14 = ($14 + [1])
	if ( ($4 <= [10]) ){ goto $label$106 }
	$4 = $7
	if ( ($14 <= [32]) ){ goto $label$107 }
	
.LABEL $label$106
	$4 = ($14 <= [32])
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$108 }
	if ( ($0 == 0) ){ goto $label$108 }
	$19 = ($0 + [-1])
	$27 = ($5 + $14)
	$0 = [0]
	
.LOOP $label$110:
	*(($27 + $0)) = [48]
	$7 = ($0 + [1])
	$4 = (($14 + $0) + [1])
	if ( ((int_32)$19 == (int_32)$0) ){ goto $label$109 }
	$0 = $7
	if ( ($4 <= [32]) ){ goto $label$110 }
	
.LABEL $label$109
	$4 = ($4 <= [32])
	$14 = ($14 + $7)
	
.LABEL $label$108
	if ( ($4 == 0) ){ goto $label$103 }
	*(($5 + $14)) = [46]
	$7 = [32]
	$14 = ($14 + [1])
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$105
	$17 = (float_64)
	if ( ((int_32)((float_64)$17($17 - (CASTING float_64)(int_32 $15))) > (float_64)(float_64)0.5) ^ (int_32)[1]) ){ goto $label$111 }
	$15 = ($15 + [1])
	$7 = [32]
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$111
	$15 = ($15 + ($15 & ((float_64)$17 == (float_64)(float_64)0.5)))
	$7 = [32]
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$102 }
	
.LABEL $label$104
	$7 = $14
	
.LOOP $label$112:
	$0 = ((int_32)$15 / (int_32)[10])
	*(($5 + $7)) = (($15 - ((int_32)$0 * (int_32)[10])) + [48])
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$102 }
	$14 = ($15 + [9])
	$15 = $0
	if ( ((uint_32)$14 > (uint_32)[18]) ){ goto $label$112 }
	goto $label$102 
	
.LABEL $label$103
	$7 = $14
	
.LABEL $label$102
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ((int_32)($13 & [3]) != (int_32)[1]) ){ goto $label$113 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$113 }
	
.LOOP $label$114:
	*(($5 + $7)) = [48]
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ($7 <= $3) ){ goto $label$114 }
	
.LABEL $label$113
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$115 }
	$7 = ($3 - (((int_32)($13 & [12]) != (int_32)[0]) | $18))
	
.LABEL $label$115
	$0 = ($13 & [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$116 }
	if ( ((int_32)$18 ^ (int_32)[1]) ){ goto $label$118 }
	*(($5 + $7)) = [45]
	goto $label$117 
	
.LABEL $label$118
	if ( ($13 & [4]) ){ goto $label$119 }
	if ( (($13 & [8]) == 0) ){ goto $label$116 }
	*(($5 + $7)) = [32]
	goto $label$117 
	
.LABEL $label$119
	*(($5 + $7)) = [43]
	
.LABEL $label$117
	$7 = ($7 + [1])
	
.LABEL $label$116
	$14 = ($13 & [2])
	if ( $0 ){ goto $label$120 }
	if ( $14 ){ goto $label$120 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$120 }
	$0 = ($3 - $7)
	
.LOOP $label$121:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$121 }
	$12 = (($9 + ($3 - $7)) + $11)
	
.LABEL $label$120
	if ( ($7 == 0) ){ goto $label$122 }
	$0 = ($7 + [-1])
	$13 = $12
	
.LOOP $label$123:
	CALL void *(($5 + $0))((int_32 $1), (int_32 $13), (int_32 $2), (int_32 $6))
	$13 = ($13 + [1])
	$0 = ($0 + [-1])
	if ( ((int_32)$0 != (int_32)[-1]) ){ goto $label$123 }
	$12 = ($12 + $7)
	
.LABEL $label$122
	if ( ($14 == 0) ){ goto $label$31 }
	if ( ((uint_32)(($12 - $9) - $11) >= (uint_32)$3) ){ goto $label$32 }
	$0 = ($12 + $10)
	
.LOOP $label$124:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [1])
	if ( ($0 <= $3) ){ goto $label$124 }
	$7 = (($3 + $9) + $11)
	
.LABEL $label$33
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$32
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$31
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$30
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$28 }
	
.LABEL $label$29
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$125:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$28 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$125 }
	
.LABEL $label$28
	$4 = ($4 + [4])
	$7 = CALL $382($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	$14
	[9]
	$0
	$7
	return $7
}

void .FUNC $387 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	*($0 + [112]) = $1
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	$4 = (CASTING int_64)(int_32 ($2 - $3))
	*($0 + [120]) = $4
	if ( (int_64)($1 == 0) ){ goto $label$1 }
	if ( ((int_64)$4 <= (int_64)$1) ){ goto $label$1 }
	*($0 + [104]) = ($3 + (CASTING uint_32)(uint_64 $1))
	return 
	
.LABEL $label$1
	*($0 + [104]) = $2
}

int_32 .FUNC $52 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [64])
	$global$0 = $2
	*(($2 + [56])) = [0]
	*(($2 + [62])) = [0]
	*($2 + [40]) = (int_64)-1
	*($2 + [48]) = (int_64)0
	*($2 + [60]) = [0]
	$3 = *($0)
	*($2 + [24]) = $3
	*($2 + [32]) = $3
	$4 = [0]
	$0 = CALL db_find_i64($3, $3, (int_64)-3020371566920728576, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $10(($2 + [24]), $0)
	if ( ((int_32)*($4 + [88]) == (int_32)($2 + [24])) ){ goto $label$1 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$1
	*(($2 + [16])) = [0]
	*($2 + [8]) = (int_64)0
	$0 = CALL $393([9258])
	if ( ((uint_32)$0 >= (uint_32)[-16]) ){ goto $label$2 }
	$5 = ((int_32)$4 != (int_32)[0])
	if ( ((uint_32)$0 >= (uint_32)[11]) ){ goto $label$5 }
	*($2 + [8]) = ($0 << [1])
	$6 = (($2 + [8]) | [1])
	if ( $0 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$7 = (($0 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($2 + [8]) = ($7 | [1])
	*($2 + [16]) = $6
	*($2 + [12]) = $0
	
.LABEL $label$4
	CALL memcpy($6, [9258], $0)
	
.LABEL $label$3
	*(($6 + $0)) = [0]
	CALL eosio_assert($5, CALL $5($0, [132], ($2 + [8])))
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($2 + [16]))
	
.LABEL $label$6
	$5 = *($4 + [82])
	$6 = *($2 + [48])
	if ( ($6 == 0) ){ goto $label$7 }
	$7 = ($2 + [52])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	CALL _ZdlPv($4)
	
.LABEL $label$11
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($2 + [48]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $6
	
.LABEL $label$8
	*($7) = $6
	CALL _ZdlPv($0)
	
.LABEL $label$7
	$global$0 = ($2 + [64])
	return ((int_32)($5 & [255]) != (int_32)[0])
	
.LABEL $label$2
	CALL $359(($2 + [8]))
	return (unreachable)
}

int_32 .FUNC $385 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [-1]) | $1)
	if ( ((uint_32)*($0 + [20]) <= (uint_32)*($0 + [28])) ){ goto $label$1 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	
.LABEL $label$1
	*($0 + [16]) = (int_64)0
	*(($0 + [28])) = [0]
	$1 = *($0)
	if ( ($1 & [4]) ){ goto $label$2 }
	$2 = (*($0 + [44]) + *($0 + [48]))
	*($0 + [8]) = $2
	*($0 + [4]) = $2
	return int_32(($1 << [27]) >> [31])
	
.LABEL $label$2
	*($0) = ($1 | [32])
	return [-1]
}

int_32 .FUNC $384 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [12]) = $3
	$3 = CALL $380([45], $0, $1, $2, $3)
	$global$0 = ($4 + [16])
	return $3
}

int_32 .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [19191])
	
.LABEL $label$5
	$4 = CALL $397($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([112])) + [72]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [88]) = (int_64)0
	*($5 + [96]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [16])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [48])
	*($3 + [44]) = ($5 + [56])
	*($3 + [48]) = ($5 + [57])
	*($3 + [52]) = ($5 + [64])
	*($3 + [56]) = ($5 + [80])
	*($3 + [60]) = ($5 + [88])
	CALL $300(($3 + [32]), ($3 + [24]))
	*($5 + [104]) = [-1]
	*($5 + [100]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $59(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $400($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $73 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [64])
	$global$0 = $3
	*($3 + [62]) = $2
	CALL require_auth(*($0))
	*(($3 + [48])) = [0]
	*($3 + [32]) = (int_64)-1
	*($3 + [40]) = (int_64)0
	*($3 + [52]) = [0]
	$4 = *($0)
	*($3 + [16]) = $4
	*($3 + [24]) = $4
	$2 = CALL db_find_i64($4, $4, (int_64)-4421665485641187328, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$2 = CALL $72(($3 + [16]), $2)
	if ( ((int_32)*($2 + [96]) == (int_32)($3 + [16])) ){ goto $label$2 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$2
	$4 = *($0)
	*($3 + [8]) = ($3 + [62])
	CALL $74(($3 + [16]), $2, $4, ($3 + [8]))
	$5 = *($3 + [40])
	if ( ($5 == 0) ){ goto $label$1 }
	$6 = ($3 + [44])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$6 }
	CALL _ZdlPv($2)
	
.LABEL $label$6
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($3 + [40]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $5
	
.LABEL $label$3
	*($6) = $5
	CALL _ZdlPv($0)
	
.LABEL $label$1
	$global$0 = ($3 + [64])
}

void .FUNC $70 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	*($1 + [24]) = ((int_64)*($1 + [24]) + (int_64)-1)
	$5 = *($1)
	$6 = $3
	$3 = ($6 + [-32])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = $6
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = ($1 + [8])
	*($4 + [32]) = $1
	*($4 + [40]) = ($1 + [16])
	*($4 + [44]) = ($1 + [24])
	CALL $303(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [36]), $2, $3, [32])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $71 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$global$0 = $2
	CALL require_auth(*($0))
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [24]) = (int_64)0
	*($2 + [36]) = [0]
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	$0 = CALL db_find_i64($3, $3, (int_64)-4421665485641187328, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $72($2, $0)
	if ( ((int_32)*($0 + [96]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$2
	$4 = CALL db_next_i64(*($0 + [100]), ($2 + [40]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	CALL $72($2, $4)
	
.LABEL $label$3
	CALL $69($2, $0)
	$5 = *($2 + [24])
	if ( ($5 == 0) ){ goto $label$1 }
	$6 = ($2 + [28])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$7 }
	CALL _ZdlPv($4)
	
.LABEL $label$7
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($2 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $5
	
.LABEL $label$4
	*($6) = $5
	CALL _ZdlPv($0)
	
.LABEL $label$1
	$global$0 = ($2 + [48])
}

int_64 .FUNC $76 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [16])
	$global$0 = $4
	*(($4 + [8])) = [0]
	*($4) = (int_64)0
	$5 = CALL $393([9223])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = ((int_32)$1 != (int_32)[0])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$4 }
	*($4) = ($5 << [1])
	$7 = ($4 | [1])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = (($5 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($4) = ($8 | [1])
	*($4 + [8]) = $7
	*($4 + [4]) = $5
	
.LABEL $label$3
	CALL memcpy($7, [9223], $5)
	
.LABEL $label$2
	*(($7 + $5)) = [0]
	CALL eosio_assert($6, CALL $5($4, [125], $4))
	if ( ((*($4) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*($4 + [8]))
	
.LABEL $label$5
	if ( ($3 == 0) ){ goto $label$9 }
	$5 = ($1 + [-1])
	if ( ((uint_32)($5 & [255]) > (uint_32)[4]) ){ goto $label$8 }
	$5 = ( $5 ? [1] : ((uint_32)$1 > (uint_32)[1]) )
	if ( ((int_32)($1 + [1]) >= (int_32)$2) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$global$0 = ($4 + [16])
	$9 = (CASTING int_64)(int_32 ([-9] - $1))
	return ( $9 ? (int_64)-20 : ((uint_64)$9 > (uint_64)(int_64)-20) )
	
.LABEL $label$8
	if ( ((uint_32)(($1 + [-6]) & [255]) > (uint_32)[4]) ){ goto $label$10 }
	$5 = ( ($1 + [-2]) ? [5] : ((uint_32)$1 > (uint_32)[6]) )
	if ( ((int_32)($1 + [2]) >= (int_32)$2) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$10
	if ( ((uint_32)(($1 + [-11]) & [255]) > (uint_32)[4]) ){ goto $label$11 }
	$5 = ( ($1 + [-3]) ? [9] : ((uint_32)$1 > (uint_32)[11]) )
	if ( ((int_32)($1 + [3]) >= (int_32)$2) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$11
	$7 = [0]
	$5 = [0]
	if ( ($1 <= [16]) ){ goto $label$12 }
	$5 = ( ($1 + [-5]) ? [13] : ((uint_32)$1 > (uint_32)[17]) )
	$7 = ($1 + [5])
	
.LABEL $label$12
	if ( ((int_32)$7 < (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$7
	if ( ((uint_32)$5 > (uint_32)$2) ){ goto $label$6 }
	$global$0 = ($4 + [16])
	return (int_64)16
	
.LABEL $label$6
	$global$0 = ($4 + [16])
	return (CASTING int_64)(int_32 (([16] - $1) + $2))
	
.LABEL $label$1
	CALL $359($4)
	return (unreachable)
}

void .FUNC $77 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [240])
	$global$0 = $6
	*(($6 + [224])) = [0]
	*($6 + [231]) = $4
	*($6 + [232]) = $1
	*($6 + [230]) = $5
	*($6 + [216]) = (int_64)0
	$5 = CALL $393([9235])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$3 }
	$4 = ((int_32)$3 == (int_32)[1])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$6 }
	*($6 + [216]) = ($5 << [1])
	$3 = (($6 + [216]) | [1])
	if ( $5 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$7 = (($5 + [16]) & [-16])
	$3 = CALL _Znwj($7)
	*($6 + [216]) = ($7 | [1])
	*($6 + [224]) = $3
	*($6 + [220]) = $5
	
.LABEL $label$5
	CALL memcpy($3, [9235], $5)
	
.LABEL $label$4
	*(($3 + $5)) = [0]
	CALL eosio_assert($4, CALL $5($6, [126], ($6 + [216])))
	if ( ((*($6 + [216]) & [1]) == 0) ){ goto $label$7 }
	CALL _ZdlPv(*($6 + [224]))
	
.LABEL $label$7
	*(($6 + [208])) = [0]
	*($6 + [192]) = (int_64)-1
	*($6 + [200]) = (int_64)0
	$1 = *($0)
	*($6 + [176]) = $1
	*($6 + [184]) = $1
	*($6 + [175]) = [0]
	*($6 + [168]) = [0]
	$5 = CALL db_find_i64($1, $1, (int_64)-6039700478021828608, *($6 + [232]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$9 }
	$5 = CALL $78(($6 + [176]), $5)
	if ( ((int_32)*($5 + [56]) == (int_32)($6 + [176])) ){ goto $label$10 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$10
	$1 = *($0)
	*($6 + [128]) = $0
	*($6 + [132]) = ($6 + [231])
	*($6 + [136]) = ($6 + [230])
	*($6 + [140]) = ($6 + [168])
	CALL $79(($6 + [176]), $5, $1, ($6 + [128]))
	$5 = *($6 + [231])
	goto $label$8 
	
.LABEL $label$9
	$1 = *($0)
	*($6 + [76]) = ($6 + [231])
	*($6 + [72]) = ($6 + [232])
	*($6 + [80]) = ($6 + [230])
	*($6) = $1
	if ( ((int_64)*($6 + [176]) == (int_64)CALL current_receiver()) ){ goto $label$11 }
	CALL eosio_assert([0], [19435])
	
.LABEL $label$11
	*($6 + [132]) = ($6 + [72])
	*($6 + [128]) = ($6 + [176])
	*($6 + [136]) = $6
	*(($5 = CALL _Znwj([72])) + [48]) = (int_64)0
	*($5 + [56]) = ($6 + [176])
	CALL $80(($6 + [128]), $5)
	*($6 + [48]) = $5
	$1 = *($5)
	*($6 + [128]) = $1
	$4 = *($5 + [60])
	*($6 + [40]) = $4
	$7 = ($6 + [204])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($6 + [208]))) ){ goto $label$14 }
	*($3 + [8]) = $1
	*($3 + [16]) = $4
	*($6 + [48]) = [0]
	*($3) = $5
	*($7) = ($3 + [24])
	$5 = *($6 + [48])
	*($6 + [48]) = [0]
	if ( $5 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $81(($6 + [200]), ($6 + [48]), ($6 + [128]), ($6 + [40]))
	$5 = *($6 + [48])
	*($6 + [48]) = [0]
	if ( ($5 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL _ZdlPv($5)
	
.LABEL $label$12
	$5 = [1]
	
.LABEL $label$8
	*($6 + [175]) = $5
	*(($6 + [160])) = [0]
	*(($6 + [166])) = [0]
	*($6 + [144]) = (int_64)-1
	*($6 + [152]) = (int_64)0
	*($6 + [164]) = [0]
	$1 = *($0)
	*($6 + [128]) = $1
	*($6 + [136]) = $1
	$5 = [0]
	$3 = CALL db_find_i64($1, $1, (int_64)-3020371566920728576, *($6 + [232]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$15 }
	$5 = CALL $10(($6 + [128]), $3)
	if ( ((int_32)*($5 + [88]) == (int_32)($6 + [128])) ){ goto $label$15 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$15
	*(($6 + [120])) = [0]
	*($6 + [112]) = (int_64)0
	$3 = CALL $393([9258])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$8 = ((int_32)$5 != (int_32)[0])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$18 }
	*($6 + [112]) = ($3 << [1])
	$7 = (($6 + [112]) | [1])
	if ( $3 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$4 = (($3 + [16]) & [-16])
	$7 = CALL _Znwj($4)
	*($6 + [112]) = ($4 | [1])
	*($6 + [120]) = $7
	*($6 + [116]) = $3
	
.LABEL $label$17
	CALL memcpy($7, [9258], $3)
	
.LABEL $label$16
	$4 = [0]
	*(($7 + $3)) = [0]
	CALL eosio_assert($8, CALL $5($6, [127], ($6 + [112])))
	if ( ((*($6 + [112]) & [1]) == 0) ){ goto $label$19 }
	CALL _ZdlPv(*($6 + [120]))
	
.LABEL $label$19
	*(($6 + [104])) = [0]
	*(($6 + [110])) = [0]
	*($6 + [88]) = (int_64)-1
	*($6 + [96]) = (int_64)0
	*($6 + [108]) = [0]
	$1 = *($0)
	*($6 + [72]) = $1
	*($6 + [80]) = $1
	$3 = CALL db_find_i64($1, $1, (int_64)-3020371566920728576, $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$20 }
	$4 = CALL $10(($6 + [72]), $3)
	if ( ((int_32)*($4 + [88]) == (int_32)($6 + [72])) ){ goto $label$20 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$20
	*(($6 + [64])) = [0]
	*($6 + [56]) = (int_64)0
	$3 = CALL $393([9275])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$8 = ((int_32)$4 != (int_32)[0])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$23 }
	*($6 + [56]) = ($3 << [1])
	$7 = (($6 + [56]) | [1])
	if ( $3 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	$9 = (($3 + [16]) & [-16])
	$7 = CALL _Znwj($9)
	*($6 + [56]) = ($9 | [1])
	*($6 + [64]) = $7
	*($6 + [60]) = $3
	
.LABEL $label$22
	CALL memcpy($7, [9275], $3)
	
.LABEL $label$21
	*(($7 + $3)) = [0]
	CALL eosio_assert($8, CALL $5($6, [127], ($6 + [56])))
	if ( ((*($6 + [56]) & [1]) == 0) ){ goto $label$24 }
	CALL _ZdlPv(*($6 + [64]))
	
.LABEL $label$24
	$1 = CALL $76($0, *($5 + [48]), *($4 + [48]), *($6 + [231]))
	$2 = *($5 + [40])
	if ( ((int_64)$1 > (int_64)-1) ){ goto $label$26 }
	if ( ((uint_64)$2 > (uint_64)(int_64))((int_64)0 - $1)) ){ goto $label$26 }
	*($6 + [48]) = (int_64)0
	$3 = [1]
	goto $label$25 
	
.LABEL $label$26
	$1 = ((int_64)$2 + (int_64)$1)
	*($6 + [48]) = $1
	$3 = [1]
	if ( (uint_64)($1 <= (int_64)11) ){ goto $label$25 }
	$3 = [2]
	if ( (uint_64)($1 <= (int_64)51) ){ goto $label$25 }
	$3 = [3]
	if ( (uint_64)($1 <= (int_64)121) ){ goto $label$25 }
	$3 = [4]
	if ( (uint_64)($1 <= (int_64)221) ){ goto $label$25 }
	if ( ((uint_64)$1 > (uint_64)(int_64)1120) ){ goto $label$27 }
	$3 = (((uint_32)(((CASTING uint_32)(uint_64 $1) + [-221]) & [65535]) / (uint_32)[150]) + [5])
	goto $label$25 
	
.LABEL $label$27
	if ( ((uint_64)$1 > (uint_64)(int_64)2120) ){ goto $label$28 }
	$3 = (((uint_32)(((CASTING uint_32)(uint_64 $1) + [-1121]) & [65535]) / (uint_32)[200]) + [11])
	goto $label$25 
	
.LABEL $label$28
	if ( ((uint_64)$1 > (uint_64)(int_64)3520) ){ goto $label$29 }
	$3 = (((uint_32)(((CASTING uint_32)(uint_64 $1) + [-2121]) & [65535]) / (uint_32)[280]) + [16])
	goto $label$25 
	
.LABEL $label$29
	$3 = [25]
	if ( ((uint_64)$1 > (uint_64)(int_64)5320) ){ goto $label$25 }
	$3 = (((uint_32)(((CASTING uint_32)(uint_64 $1) + [-3521]) & [65535]) / (uint_32)[360]) + [21])
	
.LABEL $label$25
	$1 = ((int_64)(CASTING uint_64)(uint_32 $3) & (int_64)65535)
	*($6 + [40]) = $1
	*($6 + [36]) = [0]
	*($6 + [32]) = [0]
	$2 = *($5 + [56])
	*($6 + [28]) = $2
	if ( ((uint_64)(int_64)((int_64)$2 << (int_64)32) >> (int_64)32) >= (uint_64)$1) ){ goto $label$30 }
	if ( ((uint_64)((int_64)$1 + (int_64)-2) > (uint_64)(int_64)3) ){ goto $label$32 }
	*($6 + [36]) = [1]
	goto $label$31 
	
.LABEL $label$32
	if ( ((uint_64)((int_64)$1 + (int_64)-6) > (uint_64)(int_64)19) ){ goto $label$31 }
	if ( (((uint_32)($3 & [255]) % (uint_32)[5]) == 0) ){ goto $label$33 }
	*($6 + [168]) = (*($6 + [168]) + [1])
	goto $label$31 
	
.LABEL $label$33
	*($6 + [32]) = [1]
	
.LABEL $label$31
	*($6 + [28]) = ($3 & [65535])
	
.LABEL $label$30
	$1 = *($0)
	*($6 + [4]) = ($6 + [168])
	*($6) = ($6 + [36])
	*($6 + [8]) = ($6 + [32])
	*($6 + [12]) = ($6 + [28])
	*($6 + [16]) = ($6 + [175])
	*($6 + [20]) = ($6 + [48])
	*($6 + [24]) = ($6 + [40])
	if ( $5 ){ goto $label$34 }
	CALL eosio_assert([0], [19537])
	
.LABEL $label$34
	CALL $82(($6 + [128]), $5, $1, $6)
	$3 = *($6 + [96])
	if ( ($3 == 0) ){ goto $label$35 }
	$4 = ($6 + [100])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$37 }
	
.LOOP $label$38:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$39 }
	CALL _ZdlPv($5)
	
.LABEL $label$39
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$38 }
	$0 = *(($6 + [96]))
	goto $label$36 
	
.LABEL $label$37
	$0 = $3
	
.LABEL $label$36
	*($4) = $3
	CALL _ZdlPv($0)
	
.LABEL $label$35
	$3 = *($6 + [152])
	if ( ($3 == 0) ){ goto $label$40 }
	$4 = ($6 + [156])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$42 }
	
.LOOP $label$43:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$44 }
	CALL _ZdlPv($5)
	
.LABEL $label$44
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$43 }
	$0 = *(($6 + [152]))
	goto $label$41 
	
.LABEL $label$42
	$0 = $3
	
.LABEL $label$41
	*($4) = $3
	CALL _ZdlPv($0)
	
.LABEL $label$40
	$3 = *($6 + [200])
	if ( ($3 == 0) ){ goto $label$45 }
	$4 = ($6 + [204])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$47 }
	
.LOOP $label$48:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$49 }
	CALL _ZdlPv($5)
	
.LABEL $label$49
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$48 }
	$0 = *(($6 + [200]))
	goto $label$46 
	
.LABEL $label$47
	$0 = $3
	
.LABEL $label$46
	*($4) = $3
	CALL _ZdlPv($0)
	
.LABEL $label$45
	$global$0 = ($6 + [240])
	return (unreachable)
	
.LABEL $label$3
	CALL $359(($6 + [216]))
	
.LABEL $label$2
	CALL $359(($6 + [112]))
	
.LABEL $label$1
	CALL $359(($6 + [56]))
	(unreachable)
	(unreachable)
}

void .FUNC $74 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [96]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	*($5 + [16]) = *($1 + [16])
	*($1 + [80]) = *(*($3))
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-80])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-4])
	*($5 + [24]) = $5
	$3 = ($1 + [16])
	*($5 + [36]) = $3
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [48])
	*($5 + [44]) = ($1 + [56])
	*($5 + [48]) = ($1 + [57])
	*($5 + [52]) = ($1 + [64])
	*($5 + [56]) = ($1 + [80])
	*($5 + [60]) = ($1 + [88])
	CALL $299(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [100]), $2, $4, [76])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($5 + [32]) = *($3)
	if ( (CALL $392(($5 + [16]), ($5 + [32]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [104])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4421665485641187328, ($5 + [24]), $6)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, $2, ($5 + [32]))
	
.LABEL $label$4
	$global$0 = ($5 + [64])
}

void .FUNC $75 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [112])
	$global$0 = $3
	CALL require_auth(*($0))
	*(($3 + [104])) = [0]
	*($3 + [88]) = (int_64)-1
	*($3 + [96]) = (int_64)0
	*($3 + [108]) = [0]
	$4 = *($0)
	*($3 + [72]) = $4
	*($3 + [80]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)-4421665485641187328, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $72(($3 + [72]), $5)
	if ( ((int_32)*($5 + [96]) == (int_32)($3 + [72])) ){ goto $label$2 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$2
	if ( (*([0] + [10328]) == 0) ){ goto $label$4 }
	$4 = *([0] + [10320])
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL current_time()
	*([0] + [10328]) = [1]
	*([0] + [10320]) = $4
	
.LABEL $label$3
	if ( ((int_64))($4 - *($5 + [88])) <= (int_64)((int_64)$2 * (int_64)3600000000)) ){ goto $label$1 }
	$4 = *(($5 + [24]))
	$2 = *(($5 + [40]))
	*(($3 + [24])) = $2
	$6 = *($5 + [48])
	$1 = *($5 + [16])
	$7 = *(($5 + [32]))
	*(($3 + [16])) = $7
	*((($3 + [32]) + [24])) = $2
	*((($3 + [32]) + [16])) = $7
	*($3 + [32]) = $1
	*($3) = $1
	*($3 + [40]) = $4
	*($3 + [8]) = $4
	CALL $65($0, $6, $3)
	
.LABEL $label$1
	$8 = *($3 + [96])
	if ( ($8 == 0) ){ goto $label$5 }
	$9 = ($3 + [100])
	$0 = *($9)
	if ( ((int_32)$0 == (int_32)$8) ){ goto $label$7 }
	
.LOOP $label$8:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$9 }
	CALL _ZdlPv($5)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$0) ){ goto $label$8 }
	$0 = *(($3 + [96]))
	goto $label$6 
	
.LABEL $label$7
	$0 = $8
	
.LABEL $label$6
	*($9) = $8
	CALL _ZdlPv($0)
	
.LABEL $label$5
	$global$0 = ($3 + [112])
}

int_32 .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [19191])
	
.LABEL $label$5
	$4 = CALL $397($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL _Znwj([72])) + [56]) = $0
	*($5 + [48]) = (int_64)0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	*($3 + [60]) = ($5 + [40])
	*($3 + [64]) = ($5 + [41])
	*($3 + [68]) = ($5 + [42])
	*($3 + [72]) = ($5 + [48])
	CALL $304(($3 + [40]), ($3 + [32]))
	*($5 + [60]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $81(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $400($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

void .FUNC $79 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	$6 = *($1)
	if ( (CALL $125(*($3), *($1 + [48])) == 0) ){ goto $label$3 }
	*($1 + [16]) = (int_64)0
	*($1 + [8]) = (int_64)0
	*($1 + [40]) = [0]
	*($1 + [42]) = [0]
	if ( (*([0] + [10328]) == 0) ){ goto $label$5 }
	$7 = *([0] + [10320])
	goto $label$4 
	
.LABEL $label$5
	$7 = CALL current_time()
	*([0] + [10328]) = [1]
	*([0] + [10320]) = $7
	
.LABEL $label$4
	*(($1 + [48])) = $7
	
.LABEL $label$3
	if ( (*(*($3 + [4])) == 0) ){ goto $label$10 }
	if ( (*(*($3 + [8])) == 0) ){ goto $label$9 }
	$7 = *($1 + [8])
	goto $label$8 
	
.LABEL $label$10
	*($1 + [24]) = (int_64)0
	*($1 + [32]) = ((int_64)*($1 + [32]) + (int_64)1)
	*($1 + [16]) = ((int_64)*($1 + [16]) + (int_64)1)
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	*($1 + [24]) = ((int_64)*($1 + [24]) + (int_64)1)
	$7 = ((int_64)*($1 + [8]) + (int_64)1)
	*($1 + [8]) = $7
	
.LABEL $label$8
	*($1 + [32]) = (int_64)0
	if ( ((int_64)$7 != (int_64)20) ){ goto $label$11 }
	*(($3 = *($3 + [12]))) = (*($3) + [1])
	
.LABEL $label$11
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [19669])
	
.LABEL $label$6
	$4 = $4
	$3 = ($4 + [-64])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-13])
	*($5 + [16]) = $5
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [24])
	*($5 + [40]) = ($1 + [32])
	*($5 + [44]) = ($1 + [40])
	*($5 + [48]) = ($1 + [41])
	*($5 + [52]) = ($1 + [42])
	*($5 + [56]) = ($1 + [48])
	CALL $203(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [60]), $2, $3, [51])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$12 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	$global$0 = ($5 + [64])
}

void .FUNC $259 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$0 = ($4 + [9])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

void .FUNC $258 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	$2 = ($3 + [8])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$2 = ($3 + [9])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$2 = ($3 + [16])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[31]) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	$4 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [32])
	*(($0 = ($0 + [4]))) = (*($0) + [32])
	$2 = ($3 + [48])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[31]) ){ goto $label$5 }
	CALL eosio_assert([0], [19214])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [32])
	*(($0 = ($0 + [4]))) = (*($0) + [32])
	$0 = ($3 + [80])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[31]) ){ goto $label$6 }
	CALL eosio_assert([0], [19214])
	$3 = *(($1 + [4]))
	
.LABEL $label$6
	CALL memcpy($0, $3, [32])
	*(($1 = ($1 + [4]))) = (*($1) + [32])
}

void .FUNC $312 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[31]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [32])
	*(($4 = ($4 + [4]))) = (*($4) + [32])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [19214])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $313 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [28]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [19834])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-7297964030780506112)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [19780])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [19780])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $32(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $314 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$5 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [1])
	if ( ((uint_32)$4 <= (uint_32)int_32(($5 - $6) >> [1])) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$5 }
	*($0 + [4]) = $6
	CALL _ZdlPv($6)
	$5 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$1 }
	$6 = ( ( $4 ? $5 : ($5 <= $4) ) ? [2147483647] : (int_32($5 >> [1]) <= [1073741823]) )
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$1 }
	$4 = ($6 << [1])
	$6 = CALL _Znwj($4)
	*($0) = $6
	*($0 + [4]) = $6
	*(($0 + [8])) = ($6 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($6, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	goto $label$3 
	
.LABEL $label$4
	$3 = int_32($5 >> [1])
	$5 = (*($0 + [4]) - $6)
	$7 = ( ($1 + $5) ? $2 : ((uint_32)$4 > (uint_32)$3) )
	$5 = ($7 - $1)
	if ( ($5 == 0) ){ goto $label$6 }
	CALL memmove($6, $1, $5)
	
.LABEL $label$6
	if ( ((uint_32)$4 <= (uint_32)$3) ){ goto $label$2 }
	$1 = ($2 - $7)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $7, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($6 + (int_32($5 >> [1]) << [1]))
	return (unreachable)
	
.LABEL $label$1
	CALL $377($0)
}

void .FUNC $315 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [18965])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $316(*($1), *($0 + [4]))
	$3 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [18965])
	$1 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($1, $3, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
}

int_32 .FUNC $316 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [1]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [18965])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$8 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($8) - $4) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [18965])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( ((int_32)(*($8) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [18965])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [1]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	$7 = ($7 + [2])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $317 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($3 <= *($5)) ){ goto $label$2 }
	CALL eosio_assert([0], [19219])
	$3 = *($6)
	
.LABEL $label$2
	$8 = *($3)
	$3 = ($3 + [1])
	*($6) = $3
	$7 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $7)))
	$7 = ($7 + [7])
	$3 = $3
	if ( ($8 & [128]) ){ goto $label$1 }
	$7 = (CASTING uint_32)(uint_64 $4)
	$3 = *($1)
	$8 = *($1 + [4])
	$6 = ((int_32)($8 - $3) / (int_32)[40])
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$5 }
	CALL $318($1, ($7 - $6))
	$8 = *(($1 + [4]))
	$3 = *($1)
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$6 }
	$8 = ($3 + ((int_32)$7 * (int_32)[40]))
	*(($1 + [4])) = $8
	
.LABEL $label$6
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	*($2 + [8]) = $0
	*($2 + [16]) = $3
	*((($2 + [16]) + [8])) = ($3 + [24])
	*($2 + [20]) = ($3 + [8])
	CALL $319(($2 + [16]), ($2 + [8]))
	$3 = ($3 + [40])
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$7 }
	
.LABEL $label$3
	$global$0 = ($2 + [32])
	return $0
}

void .FUNC $251 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $0, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($5 + [24])) = *($2 + [8])
	*($0) = (*($0) + [8])
	CALL $285(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $250 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [144])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $397($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [80]) = [0]
	*($4 + [72]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $7)
	*($4 + [128]) = ($4 + [56])
	*($4 + [24]) = ($4 + [72])
	CALL $255(($4 + [24]), ($4 + [128]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [64])
	*($4 + [8]) = *($4 + [56])
	*(($8 = (($4 + [112]) + [8]))) = *($3)
	*($4 + [112]) = *($4 + [8])
	$3 = *($8)
	*((($4 + [128]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [112])
	*($4 + [40]) = $0
	*($4 + [128]) = $0
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$0 = *($4 + [104])
	$1 = *($4 + [96])
	$9 = *($4 + [88])
	$8 = *($4 + [80])
	$10 = *($4 + [72])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $10), (int_64 ($8 & [255])), (int_32 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $400($2)
	
.LABEL $label$5
	$global$0 = ($4 + [144])
	return [1]
}

void .FUNC $253 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($4 + [16])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $252 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [24]))
	*($2 + [32]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $360(($2 + [16]), ($1 + [32]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$3 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$6 = CALL $360(($2 + [64]), $1)
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $5), (int_64 $4), (int_64 $2), (int_32 $6), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $255 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	$2 = ($3 + [8])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$2 = ($3 + [16])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [24])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	$4 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$0 = ($3 + [32])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [19214])
	$3 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $254 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($4 + [16])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $257 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[31]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	$2 = ($0 + [48])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[31]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	$0 = ($0 + [80])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[31]) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $3, [32])
	*(($1 = ($1 + [4]))) = (*($1) + [32])
}

void .FUNC $256 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = ($0 + [9])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$0 = ($0 + [10])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$3) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $3, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

int_32 .FUNC $181 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	$3 = CALL $393([8932])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$4 = ($1 <= [240])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($2) = ($3 << [1])
	$5 = ($2 | [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($3 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($5, [8932], $3)
	
.LABEL $label$2
	*(($5 + $3)) = [0]
	CALL eosio_assert($4, CALL $5($2, [166], $2))
	if ( ((*($2) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*($2 + [8]))
	
.LABEL $label$5
	if ( ((uint_32)(($1 + [-101]) & [255]) > (uint_32)[19]) ){ goto $label$7 }
	$3 = ($1 + [-40])
	goto $label$6 
	
.LABEL $label$7
	if ( ((uint_32)(($1 + [-121]) & [255]) > (uint_32)[19]) ){ goto $label$8 }
	$3 = ($1 + [-60])
	goto $label$6 
	
.LABEL $label$8
	$3 = ( ($1 + [-80]) ? $1 : ((($1 + [115]) & [255]) <= [20]) )
	
.LABEL $label$6
	$global$0 = ($2 + [16])
	return (($3 & [3]) == 0)
	
.LABEL $label$1
	CALL $359($2)
	return (unreachable)
}

void .FUNC $180 (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$4 = ($global$0 - [48])
	$global$0 = $4
	*(($4 + [40])) = [0]
	*($4 + [32]) = (int_64)0
	$5 = CALL $393([8932])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$2 }
	$6 = ($2 <= [240])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$5 }
	*($4 + [32]) = ($5 << [1])
	$7 = (($4 + [32]) | [1])
	if ( $5 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$8 = (($5 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($4 + [32]) = ($8 | [1])
	*($4 + [40]) = $7
	*($4 + [36]) = $5
	
.LABEL $label$4
	CALL memcpy($7, [8932], $5)
	
.LABEL $label$3
	*(($7 + $5)) = [0]
	CALL eosio_assert($6, CALL $5($5, [166], ($4 + [32])))
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($4 + [40]))
	
.LABEL $label$6
	$5 = CALL $393([8341])
	if ( ($5 <= [8]) ){ goto $label$9 }
	CALL eosio_assert([0], [10159])
	goto $label$8 
	
.LABEL $label$9
	if ( ($5 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$9 = (int_64)0
	
.LOOP $label$10:
	$7 = *(($5 + [8340]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$11 }
	CALL eosio_assert([0], [10204])
	
.LABEL $label$11
	$9 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$10 }
	goto $label$1 
	
.LABEL $label$7
	$9 = (int_64)0
	goto $label$1 
	
.LABEL $label$2
	CALL $359(($4 + [32]))
	
.LABEL $label$1
	*($0) = (int_64)0
	*($0 + [8]) = ((int_64)((int_64)$9 << (int_64)8) | (int_64)4)
	$9 = ((int_64)$9 & (int_64)72057594037927935)
	$5 = [0]
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$10 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$15 }
	$9 = $10
	$7 = $5
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$15
	$9 = $10
	
.LOOP $label$16:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$13 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$7 = ((int_32)$5 < (int_32)[6])
	$6 = ($5 + [1])
	$5 = $6
	if ( $7 ){ goto $label$16 }
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	CALL eosio_assert([0], [18905])
	
.LABEL $label$12
	$7 = CALL $181($1, $2)
	$6 = CALL $54($1, $2)
	$5 = ($6 + [-1])
	if ( ((uint_32)$5 > (uint_32)[4]) ){ goto $label$19 }
	goto $label$24 
	
.LABEL $label$24
	$9 = ( (int_64)200 ? (int_64)100 : $7 )
	*($0) = $9
	goto $label$18 
	
.LABEL $label$23
	$9 = ( (int_64)5000000 ? (int_64)3000000 : $7 )
	*($0) = $9
	goto $label$18 
	
.LABEL $label$22
	$9 = ( (int_64)20000 ? (int_64)10000 : $7 )
	*($0) = $9
	goto $label$18 
	
.LABEL $label$21
	$9 = ( (int_64)200000 ? (int_64)100000 : $7 )
	*($0) = $9
	goto $label$18 
	
.LABEL $label$20
	$9 = ( (int_64)2000 ? (int_64)1000 : $7 )
	*($0) = $9
	goto $label$18 
	
.LABEL $label$19
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$5 = CALL $393([9913])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$17 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$27 }
	*($4 + [16]) = ($5 << [1])
	$7 = (($4 + [16]) | [1])
	if ( $5 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$2 = (($5 + [16]) & [-16])
	$7 = CALL _Znwj($2)
	*($4 + [16]) = ($2 | [1])
	*($4 + [24]) = $7
	*($4 + [20]) = $5
	
.LABEL $label$26
	CALL memcpy($7, [9913], $5)
	
.LABEL $label$25
	*(($7 + $5)) = [0]
	CALL $375($4, $6)
	$5 = *($4)
	$7 = ($5 & [1])
	CALL $369(($4 + [16]), ( *($4 + [8]) ? ($4 | [1]) : $7 ), ( *($4 + [4]) ? uint_32($5 >> [1]) : $7 ))
	if ( ((*($4) & [1]) == 0) ){ goto $label$28 }
	CALL _ZdlPv(*(($4 + [8])))
	
.LABEL $label$28
	CALL eosio_assert([0], ( *($4 + [24]) ? (($4 + [16]) | [1]) : (*($4 + [16]) & [1]) ))
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$29 }
	CALL _ZdlPv(*(($4 + [24])))
	
.LABEL $label$29
	$9 = *($0)
	
.LABEL $label$18
	*($0) = ((int_64)$9 * (int_64)$3)
	$global$0 = ($4 + [48])
	return (unreachable)
	
.LABEL $label$17
	CALL $359(($4 + [16]))
	(unreachable)
	$5
}

void .FUNC $138 (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$5 = ($global$0 - [128])
	$global$0 = $5
	*($5 + [112]) = $4
	*($5 + [120]) = $3
	*(($5 + [104])) = [0]
	*($5 + [88]) = (int_64)-1
	*($5 + [96]) = (int_64)0
	$3 = *($0)
	*($5 + [72]) = $3
	*($5 + [80]) = $1
	$6 = [0]
	$4 = (CASTING uint_64)(uint_32 $2)
	$7 = CALL db_find_i64($3, $1, (int_64)-3020377498459275264, $4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $23(($5 + [72]), $7)
	if ( ((int_32)*($6 + [16]) == (int_32)($5 + [72])) ){ goto $label$1 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$1
	*(($5 + [64])) = [0]
	*($5 + [56]) = (int_64)0
	$7 = CALL $393([9484])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$4 }
	$8 = ((int_32)$6 != (int_32)[0])
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$7 }
	*($5 + [56]) = ($7 << [1])
	$9 = (($5 + [56]) | [1])
	if ( $7 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$10 = (($7 + [16]) & [-16])
	$9 = CALL _Znwj($10)
	*($5 + [56]) = ($10 | [1])
	*($5 + [64]) = $9
	*($5 + [60]) = $7
	
.LABEL $label$6
	CALL memcpy($9, [9484], $7)
	
.LABEL $label$5
	*(($9 + $7)) = [0]
	CALL eosio_assert($8, CALL $5($5, [110], ($5 + [56])))
	if ( ((*($5 + [56]) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*($5 + [64]))
	
.LABEL $label$8
	$9 = *(($6 + [8]))
	$7 = *($6 + [4])
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$9 }
	$1 = *($5 + [120])
	
.LOOP $label$10:
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$9 }
	$7 = ($7 + [24])
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$10 }
	$7 = $9
	
.LABEL $label$9
	*((($5 + [32]) + [8])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [48]) = $7
	$8 = CALL $393([8713])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$3 }
	$9 = ((int_32)$7 != (int_32)$9)
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$13 }
	*($5 + [32]) = ($8 << [1])
	$7 = (($5 + [32]) | [1])
	if ( $8 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$10 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($10)
	*($5 + [32]) = ($10 | [1])
	*($5 + [40]) = $7
	*($5 + [36]) = $8
	
.LABEL $label$12
	CALL memcpy($7, [8713], $8)
	
.LABEL $label$11
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [111], ($5 + [32])))
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$14 }
	CALL _ZdlPv(*($5 + [40]))
	
.LABEL $label$14
	*(($5 + [24])) = [0]
	*($5 + [16]) = (int_64)0
	$1 = *($5 + [112])
	$3 = *(*($5 + [48]) + [16])
	$7 = CALL $393([9109])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$2 }
	$8 = (((uint_64)$3 >= (uint_64)$1) & ((int_64)$1 != (int_64)0))
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$17 }
	*($5 + [16]) = ($7 << [1])
	$9 = (($5 + [16]) | [1])
	if ( $7 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$10 = (($7 + [16]) & [-16])
	$9 = CALL _Znwj($10)
	*($5 + [16]) = ($10 | [1])
	*($5 + [24]) = $9
	*($5 + [20]) = $7
	
.LABEL $label$16
	CALL memcpy($9, [9109], $7)
	
.LABEL $label$15
	*(($9 + $7)) = [0]
	CALL eosio_assert($8, CALL $5($5, [112], ($5 + [16])))
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$18 }
	CALL _ZdlPv(*($5 + [24]))
	
.LABEL $label$18
	$1 = *($0)
	*($5 + [8]) = $0
	*($5 + [4]) = ($5 + [48])
	*($5) = ($5 + [120])
	*($5 + [12]) = ($5 + [112])
	if ( $6 ){ goto $label$19 }
	CALL eosio_assert([0], [19537])
	
.LABEL $label$19
	CALL $152(($5 + [72]), $6, $1, $5)
	$9 = *(($5 + [100]))
	$8 = *(($5 + [96]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$21 }
	
.LOOP $label$23:
	$7 = ($9 + [-24])
	$6 = *($7)
	if ( ((int_32)*($6) == (int_32)$2) ){ goto $label$22 }
	$9 = $7
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$21 }
	if ( ((int_32)*($6 + [16]) == (int_32)($5 + [72])) ){ goto $label$20 }
	CALL eosio_assert([0], [19486])
	goto $label$20 
	
.LABEL $label$21
	$6 = [0]
	$7 = CALL db_find_i64(*($5 + [72]), *(($5 + [80])), (int_64)-3020377498459275264, $4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$20 }
	$6 = CALL $23(($5 + [72]), $7)
	if ( ((int_32)*($6 + [16]) == (int_32)($5 + [72])) ){ goto $label$20 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$20
	if ( ((int_32)*(($6 + [8])) != (int_32)*($6 + [4])) ){ goto $label$24 }
	if ( $6 ){ goto $label$25 }
	CALL eosio_assert([0], [19223])
	CALL eosio_assert([0], [19257])
	
.LABEL $label$25
	$7 = CALL db_next_i64(*($6 + [20]), $5)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$26 }
	CALL $23(($5 + [72]), $7)
	
.LABEL $label$26
	CALL $39(($5 + [72]), $6)
	
.LABEL $label$24
	$2 = *($5 + [96])
	if ( ($2 == 0) ){ goto $label$27 }
	$8 = ($5 + [100])
	$7 = *($8)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$29 }
	
.LOOP $label$30:
	$7 = ($7 + [-24])
	$9 = *($7)
	*($7) = [0]
	if ( ($9 == 0) ){ goto $label$31 }
	$6 = *($9 + [4])
	if ( ($6 == 0) ){ goto $label$32 }
	*(($9 + [8])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$32
	CALL _ZdlPv($9)
	
.LABEL $label$31
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$30 }
	$7 = *(($5 + [96]))
	goto $label$28 
	
.LABEL $label$29
	$7 = $2
	
.LABEL $label$28
	*($8) = $2
	CALL _ZdlPv($7)
	
.LABEL $label$27
	$global$0 = ($5 + [128])
	return (unreachable)
	
.LABEL $label$4
	CALL $359(($5 + [56]))
	
.LABEL $label$3
	CALL $359(($5 + [32]))
	
.LABEL $label$2
	CALL $359(($5 + [16]))
	(unreachable)
	(unreachable)
}

void .FUNC $139 (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_32 $4, int_64 $5, int_32 $6, int_64 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$8 = ($global$0 - [256])
	$global$0 = $8
	*($8 + [200]) = $3
	*($8 + [208]) = $1
	*($8 + [199]) = $4
	*($8 + [184]) = $5
	*($8 + [176]) = $7
	*(($8 + [168])) = [0]
	*($8 + [144]) = $1
	*($8 + [152]) = (int_64)-1
	*($8 + [160]) = (int_64)0
	$5 = *($0)
	*($8 + [136]) = $5
	*((($8 + [112]) + [8])) = [0]
	*(($9 = ($8 + [128]))) = [0]
	*($8 + [116]) = ($8 + [136])
	*($8 + [124]) = ($8 + [136])
	$10 = ($8 + [124])
	$7 = (int_64)0
	$4 = [0]
	$11 = CALL db_lowerbound_i64($5, $1, (int_64)-4421665416302691328, (int_64)0)
	if ( ((int_32)$11 >= (int_32)[0]) ){ goto $label$2 }
	$12 = [1]
	goto $label$1 
	
.LABEL $label$2
	$12 = [0]
	
.LABEL $label$1
	
.LOOP $label$3:
	goto $label$127 
	
.LABEL $label$128
	$4 = [0]
	$11 = CALL db_lowerbound_i64(*($8 + [136]), *((($8 + [136]) + [8])), (int_64)-4421665416302691328, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$56 }
	$12 = [0]
	goto $label$3 
	
.LABEL $label$127
	$4 = CALL $153(($8 + [136]), $11)
	$12 = [1]
	goto $label$3 
	
.LABEL $label$126
	if ( ((int_32)*($9) == (int_32)$4) ){ goto $label$55 }
	$12 = [2]
	goto $label$3 
	
.LABEL $label$125
	if ( (uint_64)($7 <= (int_64)4) ){ goto $label$54 }
	$12 = [5]
	goto $label$3 
	
.LABEL $label$124
	*($8 + [104]) = *($10)
	$1 = *(CALL $154(($8 + [104])))
	$4 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( $4) ){ goto $label$51 }
	$12 = [9]
	goto $label$3 
	
.LABEL $label$123
	CALL eosio_assert([0], [19223])
	CALL eosio_assert([0], [19257])
	$12 = [6]
	goto $label$3 
	
.LABEL $label$122
	$11 = [0]
	$13 = CALL db_next_i64(*($4 + [108]), ($8 + [64]))
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$50 }
	$12 = [7]
	goto $label$3 
	
.LABEL $label$121
	$11 = CALL $153((CASTING uint_32)(uint_64 $1), $13)
	$12 = [8]
	goto $label$3 
	
.LABEL $label$120
	CALL $155(($8 + [136]), $4)
	$1 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)32) | (int_64)((int_64)$1 & (int_64)4294967295))
	*($10) = $1
	*($8 + [116 align=4]) = $1
	goto $label$52 
	
.LABEL $label$119
	CALL $154($10)
	$7 = ((int_64)$7 + (int_64)1)
	goto $label$53 
	
.LABEL $label$118
	$7 = *($0)
	*($8 + [68]) = $2
	*($8 + [84]) = $6
	*($8 + [64]) = ($8 + [136])
	*($8 + [72]) = ($8 + [200])
	*($8 + [76]) = ($8 + [199])
	*($8 + [80]) = ($8 + [184])
	*($8 + [88]) = ($8 + [176])
	*($8 + [40]) = $7
	if ( ((int_64)*($8 + [136]) == (int_64)CALL current_receiver()) ){ goto $label$49 }
	$12 = [11]
	goto $label$3 
	
.LABEL $label$117
	CALL eosio_assert([0], [19435])
	$12 = [12]
	goto $label$3 
	
.LABEL $label$116
	*($8 + [4]) = ($8 + [64])
	*($8) = ($8 + [136])
	*($8 + [8]) = ($8 + [40])
	*(($4 = CALL _Znwj([128])) + [80]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [104]) = ($8 + [136])
	CALL $156($8, $4)
	*($8 + [224]) = $4
	$7 = *($4)
	*($8) = $7
	$10 = *($4 + [108])
	*($8 + [248]) = $10
	$9 = ($8 + [164])
	$11 = *($9)
	if ( ((uint_32)$11 >= (uint_32)*(($8 + [168]))) ){ goto $label$48 }
	$12 = [71]
	goto $label$3 
	
.LABEL $label$115
	*($11 + [8]) = $7
	*($11 + [16]) = $10
	*($8 + [224]) = [0]
	*($11) = $4
	*($9) = ($11 + [24])
	$4 = *($8 + [224])
	$14 = [0]
	*($8 + [224]) = [0]
	if ( $4 ){ goto $label$45 }
	goto $label$46 
	
.LABEL $label$114
	CALL $157(($8 + [160]), ($8 + [224]), $8, ($8 + [248]))
	$4 = *($8 + [224])
	$14 = [0]
	*($8 + [224]) = [0]
	if ( ($4 == 0) ){ goto $label$47 }
	$12 = [14]
	goto $label$3 
	
.LABEL $label$113
	CALL _ZdlPv($4)
	$12 = [15]
	goto $label$3 
	
.LABEL $label$112
	*(($8 + [96])) = $14
	*($8 + [80]) = (int_64)-1
	*($8 + [88]) = (int_64)0
	$1 = *($0)
	*($8 + [64]) = $1
	*($8 + [72]) = $1
	*((($8 + [40]) + [8])) = $14
	*(($9 = ($8 + [56]))) = $14
	*($8 + [44]) = ($8 + [64])
	*($8 + [52]) = ($8 + [64])
	$10 = ($8 + [52])
	$7 = (int_64)0
	$4 = [0]
	$11 = CALL db_lowerbound_i64($1, $1, (int_64)4229327255410965504, (int_64)0)
	if ( ((int_32)$11 >= (int_32)[0]) ){ goto $label$43 }
	goto $label$44 
	
.LABEL $label$111
	$4 = [0]
	$11 = CALL db_lowerbound_i64(*($8 + [64]), *((($8 + [64]) + [8])), (int_64)4229327255410965504, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$42 }
	$12 = [16]
	goto $label$3 
	
.LABEL $label$110
	$4 = CALL $158(($8 + [64]), $11)
	$12 = [17]
	goto $label$3 
	
.LABEL $label$109
	if ( ((int_32)*($9) == (int_32)$4) ){ goto $label$41 }
	$12 = [18]
	goto $label$3 
	
.LABEL $label$108
	if ( (uint_64)($7 <= (int_64)99) ){ goto $label$40 }
	$12 = [21]
	goto $label$3 
	
.LABEL $label$107
	*($8 + [32]) = *($10)
	$1 = *(CALL $159(($8 + [32])))
	$4 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( $4) ){ goto $label$37 }
	$12 = [25]
	goto $label$3 
	
.LABEL $label$106
	CALL eosio_assert($14, [19223])
	CALL eosio_assert($14, [19257])
	$12 = [22]
	goto $label$3 
	
.LABEL $label$105
	$11 = [0]
	$13 = CALL db_next_i64(*($4 + [116]), $8)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$36 }
	$12 = [23]
	goto $label$3 
	
.LABEL $label$104
	$11 = CALL $158((CASTING uint_32)(uint_64 $1), $13)
	$12 = [24]
	goto $label$3 
	
.LABEL $label$103
	CALL $160(($8 + [64]), $4)
	$1 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)32) | (int_64)((int_64)$1 & (int_64)4294967295))
	*($10) = $1
	*($8 + [44 align=4]) = $1
	goto $label$38 
	
.LABEL $label$102
	CALL $159($10)
	$7 = ((int_64)$7 + (int_64)1)
	goto $label$39 
	
.LABEL $label$101
	$4 = CALL $393([8341])
	if ( ($4 <= [8]) ){ goto $label$35 }
	$12 = [70]
	goto $label$3 
	
.LABEL $label$100
	CALL eosio_assert([0], [10159])
	goto $label$33 
	
.LABEL $label$99
	if ( ($4 == 0) ){ goto $label$34 }
	$12 = [28]
	goto $label$3 
	
.LABEL $label$98
	$1 = (int_64)0
	$12 = [29]
	goto $label$3 
	
.LABEL $label$97
	$11 = *(($4 + [8340]))
	if ( ((($11 + [-65]) & [255]) <= [26]) ){ goto $label$30 }
	$12 = [68]
	goto $label$3 
	
.LABEL $label$96
	CALL eosio_assert([0], [10204])
	$12 = [30]
	goto $label$3 
	
.LABEL $label$95
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$31 }
	goto $label$32 
	
.LABEL $label$94
	$1 = (int_64)0
	$12 = [31]
	goto $label$3 
	
.LABEL $label$93
	$7 = ((int_64)$1 & (int_64)72057594037927935)
	$5 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)4)
	$4 = [0]
	$12 = [32]
	goto $label$3 
	
.LABEL $label$92
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$26 }
	$12 = [61]
	goto $label$3 
	
.LABEL $label$91
	$1 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$5 }
	$12 = [62]
	goto $label$3 
	
.LABEL $label$90
	$7 = $1
	$11 = $4
	$4 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$89
	$7 = $1
	$12 = [65]
	goto $label$3 
	
.LABEL $label$88
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$25 }
	$12 = [66]
	goto $label$3 
	
.LABEL $label$87
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$11 = ((int_32)$4 < (int_32)[6])
	$10 = ($4 + [1])
	$4 = $10
	if ( $11 ){ goto $label$4 }
	$12 = [67]
	goto $label$3 
	
.LABEL $label$86
	$4 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$29 }
	$12 = [63]
	goto $label$3 
	
.LABEL $label$85
	if ( ((int_64)*($6 + [8]) == (int_64)$5) ){ goto $label$24 }
	$12 = [34]
	goto $label$3 
	
.LABEL $label$84
	CALL eosio_assert([0], [10257])
	$12 = [35]
	goto $label$3 
	
.LABEL $label$83
	if ( ((int_64)*($6) < (int_64)50000) ){ goto $label$21 }
	$12 = [55]
	goto $label$3 
	
.LABEL $label$82
	$7 = *($0)
	*($8 + [4]) = $2
	*($8 + [24]) = $6
	*($8) = ($8 + [64])
	*($8 + [8]) = ($8 + [200])
	*($8 + [12]) = ($8 + [208])
	*($8 + [16]) = ($8 + [199])
	*($8 + [20]) = ($8 + [184])
	*($8 + [28]) = ($8 + [176])
	*($8 + [248]) = $7
	if ( ((int_64)*($8 + [64]) == (int_64)CALL current_receiver()) ){ goto $label$7 }
	$12 = [56]
	goto $label$3 
	
.LABEL $label$81
	CALL eosio_assert([0], [19435])
	$12 = [57]
	goto $label$3 
	
.LABEL $label$80
	*($8 + [228]) = $8
	*($8 + [224]) = ($8 + [64])
	*($8 + [232]) = ($8 + [248])
	*(($4 = CALL _Znwj([128])) + [88]) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [112]) = ($8 + [64])
	CALL $161(($8 + [224]), $4)
	*($8 + [240]) = $4
	$7 = *($4)
	*($8 + [224]) = $7
	$10 = *($4 + [116])
	*($8 + [220]) = $10
	$9 = ($8 + [92])
	$11 = *($9)
	if ( ((uint_32)$11 >= (uint_32)*(($8 + [96]))) ){ goto $label$6 }
	$12 = [60]
	goto $label$3 
	
.LABEL $label$79
	*($11 + [8]) = $7
	*($11 + [16]) = $10
	*($8 + [240]) = [0]
	*($11) = $4
	*($9) = ($11 + [24])
	$4 = *($8 + [240])
	*($8 + [240]) = [0]
	if ( $4 ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$78
	CALL eosio_assert([0], [18905])
	if ( ((int_64)*($6 + [8]) != (int_64)$5) ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$77
	CALL $162(($8 + [88]), ($8 + [240]), ($8 + [224]), ($8 + [220]))
	$4 = *($8 + [240])
	*($8 + [240]) = [0]
	if ( ($4 == 0) ){ goto $label$20 }
	$12 = [59]
	goto $label$3 
	
.LABEL $label$76
	CALL _ZdlPv($4)
	$12 = [36]
	goto $label$3 
	
.LABEL $label$75
	$10 = *($8 + [88])
	if ( ($10 == 0) ){ goto $label$17 }
	$12 = [37]
	goto $label$3 
	
.LABEL $label$74
	$9 = ($8 + [92])
	$4 = *($9)
	if ( ((int_32)$4 == (int_32)$10) ){ goto $label$16 }
	$12 = [38]
	goto $label$3 
	
.LABEL $label$73
	$12 = [39]
	goto $label$3 
	
.LABEL $label$72
	$4 = ($4 + [-24])
	$11 = *($4)
	*($4) = [0]
	if ( ($11 == 0) ){ goto $label$14 }
	$12 = [40]
	goto $label$3 
	
.LABEL $label$71
	CALL _ZdlPv($11)
	$12 = [41]
	goto $label$3 
	
.LABEL $label$70
	if ( ((int_32)$10 != (int_32)$4) ){ goto $label$15 }
	$12 = [42]
	goto $label$3 
	
.LABEL $label$69
	$4 = *(($8 + [88]))
	goto $label$13 
	
.LABEL $label$68
	$4 = $10
	$12 = [43]
	goto $label$3 
	
.LABEL $label$67
	*($9) = $10
	CALL _ZdlPv($4)
	$12 = [44]
	goto $label$3 
	
.LABEL $label$66
	$10 = *($8 + [160])
	if ( ($10 == 0) ){ goto $label$12 }
	$12 = [45]
	goto $label$3 
	
.LABEL $label$65
	$9 = ($8 + [164])
	$4 = *($9)
	if ( ((int_32)$4 == (int_32)$10) ){ goto $label$11 }
	$12 = [46]
	goto $label$3 
	
.LABEL $label$64
	$12 = [47]
	goto $label$3 
	
.LABEL $label$63
	$4 = ($4 + [-24])
	$11 = *($4)
	*($4) = [0]
	if ( ($11 == 0) ){ goto $label$9 }
	$12 = [48]
	goto $label$3 
	
.LABEL $label$62
	CALL _ZdlPv($11)
	$12 = [49]
	goto $label$3 
	
.LABEL $label$61
	if ( ((int_32)$10 != (int_32)$4) ){ goto $label$10 }
	$12 = [50]
	goto $label$3 
	
.LABEL $label$60
	$4 = *(($8 + [160]))
	goto $label$8 
	
.LABEL $label$59
	$4 = $10
	$12 = [51]
	goto $label$3 
	
.LABEL $label$58
	*($9) = $10
	CALL _ZdlPv($4)
	$12 = [52]
	goto $label$3 
	
.LABEL $label$57
	$global$0 = ($8 + [256])
	return 
	
.LABEL $label$56
	$12 = [1]
	goto $label$3 
	
.LABEL $label$55
	$12 = [10]
	goto $label$3 
	
.LABEL $label$54
	$12 = [3]
	goto $label$3 
	
.LABEL $label$53
	$12 = [4]
	goto $label$3 
	
.LABEL $label$52
	$12 = [4]
	goto $label$3 
	
.LABEL $label$51
	$12 = [6]
	goto $label$3 
	
.LABEL $label$50
	$12 = [8]
	goto $label$3 
	
.LABEL $label$49
	$12 = [12]
	goto $label$3 
	
.LABEL $label$48
	$12 = [13]
	goto $label$3 
	
.LABEL $label$47
	$12 = [15]
	goto $label$3 
	
.LABEL $label$46
	$12 = [15]
	goto $label$3 
	
.LABEL $label$45
	$12 = [14]
	goto $label$3 
	
.LABEL $label$44
	$12 = [17]
	goto $label$3 
	
.LABEL $label$43
	$12 = [16]
	goto $label$3 
	
.LABEL $label$42
	$12 = [17]
	goto $label$3 
	
.LABEL $label$41
	$12 = [26]
	goto $label$3 
	
.LABEL $label$40
	$12 = [19]
	goto $label$3 
	
.LABEL $label$39
	$12 = [20]
	goto $label$3 
	
.LABEL $label$38
	$12 = [20]
	goto $label$3 
	
.LABEL $label$37
	$12 = [22]
	goto $label$3 
	
.LABEL $label$36
	$12 = [24]
	goto $label$3 
	
.LABEL $label$35
	$12 = [27]
	goto $label$3 
	
.LABEL $label$34
	$12 = [69]
	goto $label$3 
	
.LABEL $label$33
	$12 = [28]
	goto $label$3 
	
.LABEL $label$32
	$12 = [31]
	goto $label$3 
	
.LABEL $label$31
	$12 = [29]
	goto $label$3 
	
.LABEL $label$30
	$12 = [30]
	goto $label$3 
	
.LABEL $label$29
	$12 = [32]
	goto $label$3 
	
.LABEL $label$28
	$12 = [32]
	goto $label$3 
	
.LABEL $label$27
	$12 = [63]
	goto $label$3 
	
.LABEL $label$26
	$12 = [33]
	goto $label$3 
	
.LABEL $label$25
	$12 = [33]
	goto $label$3 
	
.LABEL $label$24
	$12 = [35]
	goto $label$3 
	
.LABEL $label$23
	$12 = [35]
	goto $label$3 
	
.LABEL $label$22
	$12 = [34]
	goto $label$3 
	
.LABEL $label$21
	$12 = [36]
	goto $label$3 
	
.LABEL $label$20
	$12 = [36]
	goto $label$3 
	
.LABEL $label$19
	$12 = [36]
	goto $label$3 
	
.LABEL $label$18
	$12 = [59]
	goto $label$3 
	
.LABEL $label$17
	$12 = [44]
	goto $label$3 
	
.LABEL $label$16
	$12 = [54]
	goto $label$3 
	
.LABEL $label$15
	$12 = [39]
	goto $label$3 
	
.LABEL $label$14
	$12 = [41]
	goto $label$3 
	
.LABEL $label$13
	$12 = [43]
	goto $label$3 
	
.LABEL $label$12
	$12 = [52]
	goto $label$3 
	
.LABEL $label$11
	$12 = [53]
	goto $label$3 
	
.LABEL $label$10
	$12 = [47]
	goto $label$3 
	
.LABEL $label$9
	$12 = [49]
	goto $label$3 
	
.LABEL $label$8
	$12 = [51]
	goto $label$3 
	
.LABEL $label$7
	$12 = [57]
	goto $label$3 
	
.LABEL $label$6
	$12 = [58]
	goto $label$3 
	
.LABEL $label$5
	$12 = [64]
	goto $label$3 
	
.LABEL $label$4
	$12 = [65]
	goto $label$3 
	$12
}

int_32 .FUNC $369 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $363($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

void .FUNC $269 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2) = (int_64)0
	$3 = [0]
	*($2 + [8]) = [0]
	$4 = (*(($1 + [12])) - *($1 + [8]))
	$5 = ((int_32)$4 / (int_32)[3])
	$6 = *($1)
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ((uint_32)$5 >= (uint_32)[1431655766]) ){ goto $label$2 }
	$3 = CALL _Znwj($4)
	*(($2 + [8])) = ($3 + ((int_32)$5 * (int_32)[3]))
	*($2) = $3
	*($2 + [4]) = $3
	$5 = *(($1 + [8]))
	$4 = (*(($1 + [12])) - $5)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($3, $5, $4)
	$4 = ($3 + ((int_32)((uint_32)$4 / (uint_32)[3]) * (int_32)[3]))
	*($2 + [4]) = $4
	$5 = $3
	$3 = $4
	$7 = $5
	goto $label$3 
	
.LABEL $label$5
	$5 = [0]
	$7 = [0]
	goto $label$3 
	
.LABEL $label$4
	$5 = $3
	$7 = $3
	
.LABEL $label$3
	$8 = *($1 + [21])
	$9 = *($1 + [20])
	$1 = *($0 + [4])
	$0 = *($1 + [4])
	$4 = (*($0) + int_32($0 >> [1]))
	$1 = *($1)
	if ( (($0 & [1]) == 0) ){ goto $label$6 }
	$1 = *((*($4) + $1))
	
.LABEL $label$6
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	$0 = ($3 - $7)
	$7 = ((int_32)$0 / (int_32)[3])
	if ( ($0 == 0) ){ goto $label$7 }
	if ( ((uint_32)$7 >= (uint_32)[1431655766]) ){ goto $label$1 }
	$0 = CALL _Znwj($0)
	*(($2 + [24])) = ($0 + ((int_32)$7 * (int_32)[3]))
	*($2 + [16]) = $0
	*($2 + [20]) = $0
	$3 = ($3 - $5)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($0, $5, $3)
	*($2 + [20]) = ($0 + ((int_32)((uint_32)$3 / (uint_32)[3]) * (int_32)[3]))
	
.LABEL $label$7
	CALL void $4((int_32 $6), (int_64 ($2 + [16])), (int_32 ((int_32)($9 & [255]) != (int_32)[0])), (int_32 ($8 & [255])), (int_32 $1))
	$1 = *($2 + [16])
	if ( ($1 == 0) ){ goto $label$8 }
	*($2 + [20]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$8
	$1 = *($2)
	if ( ($1 == 0) ){ goto $label$9 }
	*($2 + [4]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($2 + [32])
	return (unreachable)
	
.LABEL $label$2
	CALL $377($2)
	
.LABEL $label$1
	CALL $377(($2 + [16]))
	(unreachable)
}

void .FUNC $130 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	$6 = ($1 + [40])
	*($5 + [16]) = *($6)
	$7 = ($1 + [64])
	*($5 + [24]) = *($7)
	$8 = ($1 + [72])
	*($5 + [32]) = *($8)
	*($1 + [8]) = *(*($3))
	*($1 + [16]) = *(*($3 + [4]))
	*($1 + [24]) = *(*($3 + [8]))
	$9 = *($1)
	*($1 + [32]) = [0]
	*($1 + [80]) = *(*($3 + [12]))
	*($1 + [81]) = *(*($3 + [16]))
	$4 = $4
	$3 = ($4 + [-80])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-9])
	*($5 + [40]) = $5
	*($5 + [52]) = ($1 + [8])
	*($5 + [48]) = $1
	*($5 + [56]) = ($1 + [16])
	*($5 + [60]) = ($1 + [24])
	*($5 + [64]) = ($1 + [32])
	*($5 + [68]) = $6
	*($5 + [72]) = ($1 + [48])
	*($5 + [76]) = ($1 + [56])
	*($5 + [80]) = $7
	*($5 + [84]) = $8
	*($5 + [88]) = ($1 + [80])
	*($5 + [92]) = ($1 + [81])
	*($5 + [96]) = ($1 + [82])
	*($5 + [100]) = ($1 + [83])
	*($5 + [104]) = ($1 + [84])
	CALL $87(($5 + [48]), ($5 + [40]))
	CALL db_update_i64(*($1 + [92]), $2, $3, [71])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($5 + [16]) + [8])
	*($5 + [48]) = *($6)
	if ( (CALL $392(($5 + [16]), ($5 + [48]), [8]) == 0) ){ goto $label$4 }
	$6 = ($1 + [96])
	$4 = *($6)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$5 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728576, ($5 + [40]), $9)
	*($6) = $4
	
.LABEL $label$5
	CALL db_idx64_update($4, $2, ($5 + [48]))
	
.LABEL $label$4
	$4 = (($5 + [16]) + [16])
	*($5 + [48]) = *($7)
	if ( (CALL $392($3, ($5 + [48]), [8]) == 0) ){ goto $label$6 }
	$6 = ($1 + [100])
	$3 = *($6)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$7 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728575, ($5 + [40]), $9)
	*($6) = $3
	
.LABEL $label$7
	CALL db_idx64_update($3, $2, ($5 + [48]))
	
.LABEL $label$6
	*($5 + [48]) = *($8)
	if ( (CALL $392($4, ($5 + [48]), [8]) == 0) ){ goto $label$8 }
	$3 = ($1 + [104])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$9 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728574, ($5 + [40]), $9)
	*($3) = $1
	
.LABEL $label$9
	CALL db_idx64_update($1, $2, ($5 + [48]))
	
.LABEL $label$8
	$global$0 = ($5 + [112])
}

int_32 .FUNC $131 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($6 = ($0 + [24]))) = [0]
	$7 = CALL _Znwj([16])
	*($0 + [16]) = $7
	*(($8 = ($0 + [20]))) = $7
	$9 = ($7 + [16])
	*($6) = $9
	$2 = *(($1 + [8]))
	$3 = *($1)
	*($8) = $9
	*(($7 + [8])) = $2
	*($7) = $3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$7 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $140($1, $7)
	$1 = *(($0 + [32]))
	$7 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$7 = [0]
	
.LABEL $label$2
	*($5 + [4]) = $7
	*($5) = $7
	*($5 + [8]) = $1
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	CALL $145(($5 + [24]), ($5 + [16]))
	$global$0 = ($5 + [32])
	return $0
}

void .FUNC $132 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $140($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $146(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

void .FUNC $133 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = $global$0
	$5 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	*($1 + [8]) = ((int_64)*(*(*($3) + [4]) + [8]) + (int_64)1)
	$6 = *($1)
	$4 = $4
	$3 = ($4 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [1])
	CALL memcpy(($4 + [-15]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $3, [9])
	if ( ((uint_64)*($0 + [16]) > (uint_64)$6) ){ goto $label$3 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$3
	$global$0 = $5
}

void .FUNC $134 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	$3 = *(*($3) + [4])
	*($1 + [8]) = (*($3 + [8]) + [1])
	*($1 + [10]) = (*($3 + [10]) + [1])
	*($1 + [12]) = (*($3 + [12]) + [18])
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-16])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-2])
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = ($1 + [8])
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [10])
	*($5 + [44]) = ($1 + [12])
	CALL $135(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [20]), $2, $4, [14])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

void .FUNC $135 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [18965])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [18965])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[1]) ){ goto $label$3 }
	CALL eosio_assert([0], [18965])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$3 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [18965])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($1, $3, [2])
	*(($0 = ($0 + [4]))) = (*($0) + [2])
}

void .FUNC $136 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $377($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $137 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_64 $5, int_32 $6, int_64 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$8 = ($global$0 - [176])
	$global$0 = $8
	*($8 + [127]) = $4
	*($8 + [128]) = $2
	*($8 + [112]) = $5
	*($8 + [104]) = $7
	*(($8 + [96])) = [0]
	*($8 + [72]) = $1
	*($8 + [80]) = (int_64)-1
	*($8 + [88]) = (int_64)0
	$5 = *($0)
	*($8 + [64]) = $5
	*((($8 + [40]) + [8])) = [0]
	*(($9 = ($8 + [56]))) = [0]
	*($8 + [44]) = ($8 + [64])
	*($8 + [52]) = ($8 + [64])
	$10 = ($8 + [52])
	$7 = (int_64)0
	$4 = [0]
	$11 = CALL db_lowerbound_i64($5, $1, (int_64)4520724947059834880, (int_64)0)
	if ( ((int_32)$11 >= (int_32)[0]) ){ goto $label$2 }
	$12 = [1]
	goto $label$1 
	
.LABEL $label$2
	$12 = [0]
	
.LABEL $label$1
	
.LOOP $label$3:
	goto $label$45 
	
.LABEL $label$46
	$4 = [0]
	$11 = CALL db_lowerbound_i64(*($8 + [64]), *((($8 + [64]) + [8])), (int_64)4520724947059834880, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$20 }
	$12 = [0]
	goto $label$3 
	
.LABEL $label$45
	$4 = CALL $147(($8 + [64]), $11)
	$12 = [1]
	goto $label$3 
	
.LABEL $label$44
	if ( ((int_32)*($9) == (int_32)$4) ){ goto $label$19 }
	$12 = [2]
	goto $label$3 
	
.LABEL $label$43
	if ( (uint_64)($7 <= (int_64)4) ){ goto $label$18 }
	$12 = [5]
	goto $label$3 
	
.LABEL $label$42
	*($8 + [32]) = *($10)
	$1 = *(CALL $148(($8 + [32])))
	$4 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( $4) ){ goto $label$15 }
	$12 = [9]
	goto $label$3 
	
.LABEL $label$41
	CALL eosio_assert([0], [19223])
	CALL eosio_assert([0], [19257])
	$12 = [6]
	goto $label$3 
	
.LABEL $label$40
	$11 = [0]
	$13 = CALL db_next_i64(*($4 + [108]), $8)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$14 }
	$12 = [7]
	goto $label$3 
	
.LABEL $label$39
	$11 = CALL $147((CASTING uint_32)(uint_64 $1), $13)
	$12 = [8]
	goto $label$3 
	
.LABEL $label$38
	CALL $149(($8 + [64]), $4)
	$1 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)32) | (int_64)((int_64)$1 & (int_64)4294967295))
	*($10) = $1
	*($8 + [44 align=4]) = $1
	goto $label$16 
	
.LABEL $label$37
	CALL $148($10)
	$7 = ((int_64)$7 + (int_64)1)
	goto $label$17 
	
.LABEL $label$36
	$7 = *($0)
	*($8 + [4]) = $3
	*($8 + [20]) = $6
	*($8) = ($8 + [64])
	*($8 + [8]) = ($8 + [128])
	*($8 + [12]) = ($8 + [127])
	*($8 + [16]) = ($8 + [112])
	*($8 + [24]) = ($8 + [104])
	*($8 + [168]) = $7
	if ( ((int_64)*($8 + [64]) == (int_64)CALL current_receiver()) ){ goto $label$13 }
	$12 = [11]
	goto $label$3 
	
.LABEL $label$35
	CALL eosio_assert([0], [19435])
	$12 = [12]
	goto $label$3 
	
.LABEL $label$34
	*($8 + [148]) = $8
	*($8 + [144]) = ($8 + [64])
	*($8 + [152]) = ($8 + [168])
	*(($4 = CALL _Znwj([128])) + [80]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [104]) = ($8 + [64])
	CALL $150(($8 + [144]), $4)
	*($8 + [160]) = $4
	$7 = *($4)
	*($8 + [144]) = $7
	$10 = *($4 + [108])
	*($8 + [140]) = $10
	$9 = ($8 + [92])
	$11 = *($9)
	if ( ((uint_32)$11 >= (uint_32)*(($8 + [96]))) ){ goto $label$12 }
	$12 = [25]
	goto $label$3 
	
.LABEL $label$33
	*($11 + [8]) = $7
	*($11 + [16]) = $10
	*($8 + [160]) = [0]
	*($11) = $4
	*($9) = ($11 + [24])
	$4 = *($8 + [160])
	*($8 + [160]) = [0]
	if ( $4 ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$32
	CALL $151(($8 + [88]), ($8 + [160]), ($8 + [144]), ($8 + [140]))
	$4 = *($8 + [160])
	*($8 + [160]) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	$12 = [14]
	goto $label$3 
	
.LABEL $label$31
	CALL _ZdlPv($4)
	$12 = [15]
	goto $label$3 
	
.LABEL $label$30
	$10 = *($8 + [88])
	if ( ($10 == 0) ){ goto $label$8 }
	$12 = [16]
	goto $label$3 
	
.LABEL $label$29
	$9 = ($8 + [92])
	$4 = *($9)
	if ( ((int_32)$4 == (int_32)$10) ){ goto $label$7 }
	$12 = [17]
	goto $label$3 
	
.LABEL $label$28
	$12 = [18]
	goto $label$3 
	
.LABEL $label$27
	$4 = ($4 + [-24])
	$11 = *($4)
	*($4) = [0]
	if ( ($11 == 0) ){ goto $label$5 }
	$12 = [19]
	goto $label$3 
	
.LABEL $label$26
	CALL _ZdlPv($11)
	$12 = [20]
	goto $label$3 
	
.LABEL $label$25
	if ( ((int_32)$10 != (int_32)$4) ){ goto $label$6 }
	$12 = [21]
	goto $label$3 
	
.LABEL $label$24
	$4 = *(($8 + [88]))
	goto $label$4 
	
.LABEL $label$23
	$4 = $10
	$12 = [22]
	goto $label$3 
	
.LABEL $label$22
	*($9) = $10
	CALL _ZdlPv($4)
	$12 = [23]
	goto $label$3 
	
.LABEL $label$21
	$global$0 = ($8 + [176])
	return 
	
.LABEL $label$20
	$12 = [1]
	goto $label$3 
	
.LABEL $label$19
	$12 = [10]
	goto $label$3 
	
.LABEL $label$18
	$12 = [3]
	goto $label$3 
	
.LABEL $label$17
	$12 = [4]
	goto $label$3 
	
.LABEL $label$16
	$12 = [4]
	goto $label$3 
	
.LABEL $label$15
	$12 = [6]
	goto $label$3 
	
.LABEL $label$14
	$12 = [8]
	goto $label$3 
	
.LABEL $label$13
	$12 = [12]
	goto $label$3 
	
.LABEL $label$12
	$12 = [13]
	goto $label$3 
	
.LABEL $label$11
	$12 = [15]
	goto $label$3 
	
.LABEL $label$10
	$12 = [15]
	goto $label$3 
	
.LABEL $label$9
	$12 = [14]
	goto $label$3 
	
.LABEL $label$8
	$12 = [23]
	goto $label$3 
	
.LABEL $label$7
	$12 = [24]
	goto $label$3 
	
.LABEL $label$6
	$12 = [18]
	goto $label$3 
	
.LABEL $label$5
	$12 = [20]
	goto $label$3 
	
.LABEL $label$4
	$12 = [22]
	goto $label$3 
	$12
}

void .FUNC $33 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	*($1 + [20]) = *(*($3))
	*(($1 + [12])) = *($1 + [8])
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-16])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-6])
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = ($1 + [8])
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [20])
	CALL $315(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [28]), $2, $4, [10])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

void .FUNC $368 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$3 = ($2 & [1])
	if ( ($3 == 0) ){ goto $label$6 }
	$4 = ((*($0) & [-2]) + [-1])
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$4 = [10]
	$2 = uint_32($2 >> [1])
	if ( ((int_32)$2 != (int_32)[10]) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $366($0, $4, [1], $4, $4, [0], [0])
	if ( (*($0) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($0 + [4]) = ($2 + [1])
	$0 = *($0 + [8])
	goto $label$1 
	
.LABEL $label$2
	*($0) = (($2 << [1]) + [2])
	$0 = ($0 + [1])
	
.LABEL $label$1
	*(($0 = ($0 + $2)) + [1]) = [0]
	*($0) = $1
}

void .FUNC $300 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[31]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [32])
	*(($4 = ($4 + [4]))) = (*($4) + [32])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$5 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[1]) ){ goto $label$8 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [2])
	*(($4 = ($4 + [4]))) = (*($4) + [2])
	$4 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [19214])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $208 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19287])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19332])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [19382])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL _ZdlPv($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [28]))
}

void .FUNC $209 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [144])
	$global$0 = $2
	*($2 + [112]) = $1
	CALL require_auth($1)
	*(($2 + [104])) = [0]
	*($2 + [88]) = (int_64)-1
	*($2 + [96]) = (int_64)0
	$3 = *($0)
	*($2 + [72]) = $3
	*($2 + [80]) = $3
	$4 = CALL db_find_i64($3, $3, (int_64)5304430165563284784, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$12 }
	$4 = CALL $210(($2 + [72]), $4)
	if ( ((int_32)*($4 + [24]) == (int_32)($2 + [72])) ){ goto $label$13 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$13
	*($2 + [68]) = $4
	*($2 + [64]) = ($2 + [72])
	*(($2 + [48])) = [0]
	*($2 + [32]) = (int_64)-1
	$1 = *($0)
	*($2 + [16]) = $1
	*($2 + [24]) = $1
	*($2 + [40]) = (int_64)0
	$5 = [0]
	$4 = CALL db_lowerbound_i64($1, $1, (int_64)-4057297652277051392, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$14 }
	$5 = CALL $9(($2 + [16]), $4)
	
.LABEL $label$14
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	$4 = CALL $393([10115])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$5 }
	$6 = ((int_32)$5 != (int_32)[0])
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$11 }
	*($2) = ($4 << [1])
	$7 = ($2 | [1])
	if ( $4 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	*($2 + [68]) = [0]
	*($2 + [64]) = ($2 + [72])
	$1 = *($0)
	*($2 + [56]) = ($2 + [112])
	*($2 + [136]) = $1
	if ( ((int_64)*($2 + [72]) == (int_64)CALL current_receiver()) ){ goto $label$15 }
	CALL eosio_assert([0], [19435])
	
.LABEL $label$15
	*($2 + [20]) = ($2 + [56])
	*($2 + [16]) = ($2 + [72])
	*($2 + [24]) = ($2 + [136])
	*(($4 = CALL _Znwj([40])) + [16]) = (int_64)0
	*($4 + [24]) = ($2 + [72])
	CALL $211(($2 + [16]), $4)
	*($2 + [128]) = $4
	$1 = *($4)
	*($2 + [16]) = $1
	$5 = *($4 + [28])
	*($2 + [124]) = $5
	$7 = ($2 + [100])
	$0 = *($7)
	if ( ((uint_32)$0 >= (uint_32)*(($2 + [104]))) ){ goto $label$8 }
	*($0 + [8]) = $1
	*($0 + [16]) = $5
	*($2 + [128]) = [0]
	*($0) = $4
	*($7) = ($0 + [24])
	$4 = *($2 + [128])
	*($2 + [128]) = [0]
	if ( $4 ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$11
	$8 = (($4 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($2) = ($8 | [1])
	*($2 + [8]) = $7
	*($2 + [4]) = $4
	
.LABEL $label$10
	CALL memcpy($7, [10115], $4)
	
.LABEL $label$9
	*(($7 + $4)) = [0]
	CALL eosio_assert($6, CALL $5($4, [180], $2))
	if ( ((*($2) & [1]) == 0) ){ goto $label$16 }
	CALL _ZdlPv(*($2 + [8]))
	
.LABEL $label$16
	$4 = *($2 + [68])
	$3 = *($4 + [16])
	$1 = *($5 + [16])
	if ( ((int_64)$1 < (int_64)$3) ){ goto $label$17 }
	$9 = *($0)
	if ( ((int_64))($1 - $3) > (int_64)86399999999) ){ goto $label$6 }
	*($2 + [136]) = ($2 + [64])
	if ( $4 ){ goto $label$18 }
	CALL eosio_assert([0], [19537])
	
.LABEL $label$18
	CALL $212(($2 + [72]), $4, $9, ($2 + [136]))
	
.LABEL $label$17
	$5 = *($2 + [40])
	if ( ($5 == 0) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$8
	CALL $213(($2 + [96]), ($2 + [128]), ($2 + [16]), ($2 + [124]))
	$4 = *($2 + [128])
	*($2 + [128]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	
.LABEL $label$7
	CALL _ZdlPv($4)
	$5 = *($2 + [96])
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$6
	if ( $4 ){ goto $label$19 }
	CALL eosio_assert([0], [19537])
	
.LABEL $label$19
	CALL $214(($2 + [72]), $4, $9)
	$5 = *($2 + [40])
	if ( $5 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL $359($2)
	
.LABEL $label$4
	$7 = ($2 + [44])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$21 }
	
.LOOP $label$22:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$23 }
	CALL _ZdlPv($0)
	
.LABEL $label$23
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$22 }
	$4 = *(($2 + [40]))
	goto $label$20 
	
.LABEL $label$21
	$4 = $5
	
.LABEL $label$20
	*($7) = $5
	CALL _ZdlPv($4)
	
.LABEL $label$3
	$5 = *($2 + [96])
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($2 + [100])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$25 }
	
.LOOP $label$26:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$27 }
	CALL _ZdlPv($0)
	
.LABEL $label$27
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$26 }
	$4 = *(($2 + [96]))
	goto $label$24 
	
.LABEL $label$25
	$4 = $5
	
.LABEL $label$24
	*($7) = $5
	CALL _ZdlPv($4)
	
.LABEL $label$1
	$global$0 = ($2 + [144])
	(unreachable)
}

void .FUNC $202 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[31]) ){ goto $label$2 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [32])
	*(($4 = ($4 + [4]))) = (*($4) + [32])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [18965])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($1, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $203 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [18965])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [18965])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [18965])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [18965])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [18965])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [18965])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert([0], [18965])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [18965])
	$4 = *(($3 + [4]))
	
.LABEL $label$8
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($0 + [32])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [18965])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $200 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	$4 = (*(*($4) + [12]) + (*(*(($4 + [4]))) << [4]))
	*($1) = *($4)
	$5 = *($0)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$1 }
	CALL $326(($1 + [4]), *($4 + [4]), *(($4 + [8])))
	
.LABEL $label$1
	$7 = *($1 + [4])
	$6 = *($1 + [8])
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 ((int_32)$8 / (int_32)[24]))
	$4 = [25]
	
.LOOP $label$2:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$6 }
	$8 = (((int_32)((uint_32)($8 + [-24]) / (uint_32)[24]) * (int_32)[24]) + $4)
	if ( ($8 <= [513]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$8 = ($4 + [-24])
	if ( ((uint_32)$8 >= (uint_32)[513]) ){ goto $label$4 }
	
.LABEL $label$5
	$7 = ($2 - (($8 + [15]) & [-16]))
	$global$0 = $7
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL $397($8)
	
.LABEL $label$3
	*($3 + [12]) = $7
	*($3 + [8]) = $7
	*($3 + [16]) = ($7 + $8)
	$4 = $7
	if ( ((int_32)$8 > (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert([0], [18965])
	$4 = *($3 + [12])
	
.LABEL $label$7
	CALL memcpy($4, $1, [1])
	$4 = ($4 + [1])
	*($3 + [12]) = $4
	$9 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [8])) - *(($1 + [4]))) / (int_32)[24]))
	
.LOOP $label$8:
	$2 = (CASTING uint_32)(uint_64 $9)
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	$6 = ((int_64)$9) != (int_64)0
	*($3 + [32]) = (($6) << [7]) | ($2 & [127]))
	if ( ((int_32)(*((($3 + [8]) + [8])) - $4) > (int_32)[0]) ){ goto $label$9 }
	CALL eosio_assert([0], [18965])
	$4 = *($3 + [12])
	
.LABEL $label$9
	CALL memcpy($4, ($3 + [32]), [1])
	$4 = ($4 + [1])
	*($3 + [12]) = $4
	if ( $6 ){ goto $label$8 }
	$2 = *(($1 + [8]))
	$4 = *(($1 + [4]))
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	*($3 + [24]) = ($3 + [8])
	*($3 + [32]) = $4
	*((($3 + [32]) + [8])) = ($4 + [16])
	*($3 + [36]) = ($4 + [8])
	CALL $295(($3 + [32]), ($3 + [24]))
	$4 = ($4 + [24])
	if ( ((int_32)$4 != (int_32)$2) ){ goto $label$11 }
	
.LABEL $label$10
	$9 = *($1)
	*($1 + [20]) = CALL db_store_i64(*($5 + [8]), (int_64)-3020377498459275264, *(*($0 + [8])), $9, $7, $8)
	if ( ((uint_32)$8 >= (uint_32)[513]) ){ goto $label$14 }
	if ( ((uint_64)*($5 + [16]) <= (uint_64)$9) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $400($7)
	if ( ((uint_64)*($5 + [16]) > (uint_64)$9) ){ goto $label$12 }
	
.LABEL $label$13
	*(($5 + [16])) = ((int_64)$9 + (int_64)1)
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$12
	$global$0 = ($3 + [48])
}

void .FUNC $201 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[31]) ){ goto $label$2 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [32])
	*(($4 = ($4 + [4]))) = (*($4) + [32])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [18965])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($1, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $206 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $377($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $207 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [64])
	$global$0 = $2
	CALL require_auth(*($0))
	*(($2 + [48])) = [0]
	*($2 + [32]) = (int_64)-1
	*($2 + [40]) = (int_64)0
	$3 = *($0)
	*($2 + [16]) = $3
	*($2 + [24]) = $3
	$4 = [0]
	$0 = CALL db_find_i64($3, $3, (int_64)3617214838923984896, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $84(($2 + [16]), $0)
	if ( ((int_32)*($4 + [24]) == (int_32)($2 + [16])) ){ goto $label$1 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$1
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	$0 = CALL $393([10095])
	if ( ((uint_32)$0 >= (uint_32)[-16]) ){ goto $label$2 }
	$5 = ((int_32)$4 != (int_32)[0])
	if ( ((uint_32)$0 >= (uint_32)[11]) ){ goto $label$5 }
	*($2) = ($0 << [1])
	$6 = ($2 | [1])
	if ( $0 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$7 = (($0 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($2) = ($7 | [1])
	*($2 + [8]) = $6
	*($2 + [4]) = $0
	
.LABEL $label$4
	CALL memcpy($6, [10095], $0)
	
.LABEL $label$3
	*(($6 + $0)) = [0]
	CALL eosio_assert($5, CALL $5($0, [116], $2))
	if ( ((*($2) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($2 + [8]))
	
.LABEL $label$6
	if ( $4 ){ goto $label$7 }
	CALL eosio_assert([0], [19223])
	CALL eosio_assert([0], [19257])
	
.LABEL $label$7
	$0 = CALL db_next_i64(*($4 + [28]), ($2 + [56]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$8 }
	CALL $84(($2 + [16]), $0)
	
.LABEL $label$8
	CALL $208(($2 + [16]), $4)
	$6 = *($2 + [40])
	if ( ($6 == 0) ){ goto $label$9 }
	$5 = ($2 + [44])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$13 }
	CALL _ZdlPv($4)
	
.LABEL $label$13
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($2 + [40]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $6
	
.LABEL $label$10
	*($5) = $6
	CALL _ZdlPv($0)
	
.LABEL $label$9
	$global$0 = ($2 + [64])
	return (unreachable)
	
.LABEL $label$2
	CALL $359($2)
}

void .FUNC $204 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	$6 = ($global$0 - [144])
	$global$0 = $6
	CALL require_auth(*($0))
	*(($6 + [56])) = [0]
	*($6 + [40]) = (int_64)-1
	*($6 + [48]) = (int_64)0
	$7 = *($0)
	*($6 + [24]) = $7
	*($6 + [32]) = $7
	$8 = CALL db_find_i64($7, $7, (int_64)3617214838923984896, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$2 }
	$9 = [0]
	if ( ((int_32)*(CALL $84(($6 + [24]), $8) + [24]) == (int_32)($6 + [24])) ){ goto $label$1 }
	$9 = [0]
	CALL eosio_assert([0], [19486])
	goto $label$1 
	
.LABEL $label$2
	$9 = [1]
	
.LABEL $label$1
	*(($6 + [16])) = [0]
	*($6 + [8]) = (int_64)0
	$8 = CALL $393([10079])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$6 }
	*($6 + [8]) = ($8 << [1])
	$10 = (($6 + [8]) | [1])
	if ( $8 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$11 = (($8 + [16]) & [-16])
	$10 = CALL _Znwj($11)
	*($6 + [8]) = ($11 | [1])
	*($6 + [16]) = $10
	*($6 + [12]) = $8
	
.LABEL $label$5
	CALL memcpy($10, [10079], $8)
	
.LABEL $label$4
	*(($10 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($8, [116], ($6 + [8])))
	if ( ((*($6 + [8]) & [1]) == 0) ){ goto $label$7 }
	CALL _ZdlPv(*($6 + [16]))
	
.LABEL $label$7
	$12 = *($0)
	if ( ((int_64)*($6 + [24]) == (int_64)CALL current_receiver()) ){ goto $label$8 }
	CALL eosio_assert([0], [19435])
	
.LABEL $label$8
	*(($8 = CALL _Znwj([40])) + [24]) = ($6 + [24])
	*($8 + [8]) = $2
	*($8) = $1
	*($8 + [10]) = $3
	*($8 + [12]) = $4
	*($8 + [16]) = $5
	*($6 + [104]) = (($6 + [64]) + [18])
	*($6 + [100]) = ($6 + [64])
	*($6 + [96]) = ($6 + [64])
	*($6 + [112]) = ($6 + [96])
	*($6 + [124]) = ($8 + [8])
	*($6 + [120]) = $8
	*($6 + [128]) = ($8 + [10])
	*($6 + [132]) = ($8 + [12])
	*($6 + [136]) = ($8 + [16])
	CALL $205(($6 + [120]), ($6 + [112]))
	$7 = *($8)
	$10 = CALL db_store_i64(*((($6 + [24]) + [8])), (int_64)3617214838923984896, $12, $7, ($6 + [64]), [18])
	*($8 + [28]) = $10
	$0 = (($6 + [24]) + [16])
	if ( (uint_64)($7 <= *($0)) ){ goto $label$9 }
	*($0) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*($6 + [64]) = $8
	$7 = *($8)
	*($6 + [120]) = $7
	*($6 + [96]) = $10
	$9 = ($6 + [52])
	$0 = *($9)
	if ( ((uint_32)$0 >= (uint_32)*(($6 + [56]))) ){ goto $label$12 }
	*($0 + [8]) = $7
	*($0 + [16]) = $10
	*($6 + [64]) = [0]
	*($0) = $8
	*($9) = ($0 + [24])
	$8 = *($6 + [64])
	*($6 + [64]) = [0]
	if ( $8 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $206(($6 + [48]), ($6 + [64]), ($6 + [120]), ($6 + [96]))
	$8 = *($6 + [64])
	*($6 + [64]) = [0]
	if ( ($8 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL _ZdlPv($8)
	
.LABEL $label$10
	$10 = *($6 + [48])
	if ( ($10 == 0) ){ goto $label$13 }
	$9 = ($6 + [52])
	$8 = *($9)
	if ( ((int_32)$8 == (int_32)$10) ){ goto $label$15 }
	
.LOOP $label$16:
	$8 = ($8 + [-24])
	$0 = *($8)
	*($8) = [0]
	if ( ($0 == 0) ){ goto $label$17 }
	CALL _ZdlPv($0)
	
.LABEL $label$17
	if ( ((int_32)$10 != (int_32)$8) ){ goto $label$16 }
	$8 = *(($6 + [48]))
	goto $label$14 
	
.LABEL $label$15
	$8 = $10
	
.LABEL $label$14
	*($9) = $10
	CALL _ZdlPv($8)
	
.LABEL $label$13
	$global$0 = ($6 + [144])
	return (unreachable)
	
.LABEL $label$3
	CALL $359(($6 + [8]))
}

void .FUNC $205 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [18965])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [18965])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[1]) ){ goto $label$3 }
	CALL eosio_assert([0], [18965])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [18965])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$3 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [18965])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $3, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
}

int_32 .FUNC $8 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = [0]
	*(($2 + [40])) = [0]
	*(($2 + [46])) = [0]
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	*($2 + [44]) = [0]
	$4 = *($0)
	*($2 + [8]) = $4
	*($2 + [16]) = $4
	$0 = CALL db_find_i64($4, $4, (int_64)-3020371566920728576, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $10(($2 + [8]), $0)
	if ( ((int_32)*($0 + [88]) == (int_32)($2 + [8])) ){ goto $label$2 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$2
	$3 = ((int_32)*($0 + [83]) != (int_32)[0])
	$5 = *($2 + [32])
	if ( ($5 == 0) ){ goto $label$1 }
	$6 = ($2 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$6 }
	CALL _ZdlPv($7)
	
.LABEL $label$6
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($2 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $5
	
.LABEL $label$3
	*($6) = $5
	CALL _ZdlPv($0)
	
.LABEL $label$1
	$global$0 = ($2 + [48])
	return $3
}

int_32 .FUNC $9 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [19191])
	
.LABEL $label$5
	$4 = CALL $397($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([40])) + [24]) = $0
	*($5 + [16]) = (int_64)0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	CALL $306(($3 + [32]), ($3 + [24]))
	*($5 + [28]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $124(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $400($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $6 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [32])
	$global$0 = $4
	CALL require_auth($1)
	$5 = CALL $7($0)
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$6 = CALL $393([8366])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$2 }
	$7 = ((int_32)$5 ^ (int_32)[1])
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$5 }
	*($4 + [16]) = ($6 << [1])
	$5 = (($4 + [16]) | [1])
	if ( $6 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$8 = (($6 + [16]) & [-16])
	$5 = CALL _Znwj($8)
	*($4 + [16]) = ($8 | [1])
	*($4 + [24]) = $5
	*($4 + [20]) = $6
	
.LABEL $label$4
	CALL memcpy($5, [8366], $6)
	
.LABEL $label$3
	*(($5 + $6)) = [0]
	CALL eosio_assert($7, CALL $5($4, [159], ($4 + [16])))
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($4 + [24]))
	
.LABEL $label$6
	$5 = CALL $8($0, $1)
	*(($4 + [8])) = [0]
	*($4) = (int_64)0
	$6 = CALL $393([8384])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	$0 = ((int_32)$5 ^ (int_32)[1])
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$9 }
	*($4) = ($6 << [1])
	$5 = ($4 | [1])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$7 = (($6 + [16]) & [-16])
	$5 = CALL _Znwj($7)
	*($4) = ($7 | [1])
	*($4 + [8]) = $5
	*($4 + [4]) = $6
	
.LABEL $label$8
	CALL memcpy($5, [8384], $6)
	
.LABEL $label$7
	*(($5 + $6)) = [0]
	CALL eosio_assert($0, CALL $5($4, [157], $4))
	if ( ((*($4) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*($4 + [8]))
	
.LABEL $label$10
	$global$0 = ($4 + [32])
	return (unreachable)
	
.LABEL $label$2
	CALL $359(($4 + [16]))
	
.LABEL $label$1
	CALL $359($4)
	(unreachable)
}

int_32 .FUNC $7 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$1 = ($global$0 - [48])
	$global$0 = $1
	$2 = [0]
	*(($1 + [40])) = [0]
	*($1 + [24]) = (int_64)-1
	$3 = *($0)
	*($1 + [8]) = $3
	*($1 + [16]) = $3
	*($1 + [32]) = (int_64)0
	$0 = CALL db_lowerbound_i64($3, $3, (int_64)-4057297652277051392, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$2 = ((int_32)*(CALL $9(($1 + [8]), $0) + [8]) != (int_32)[0])
	$4 = *($1 + [32])
	if ( ($4 == 0) ){ goto $label$1 }
	$5 = ($1 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$3 }
	
.LOOP $label$4:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$5 }
	CALL _ZdlPv($6)
	
.LABEL $label$5
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$4 }
	$0 = *(($1 + [32]))
	goto $label$2 
	
.LABEL $label$3
	$0 = $4
	
.LABEL $label$2
	*($5) = $4
	CALL _ZdlPv($0)
	
.LABEL $label$1
	$global$0 = ($1 + [48])
	return $2
}

int_64 .FUNC $4 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0)
	$3 = ($2 & [1])
	$4 = ( *($0 + [8]) ? ($0 + [1]) : $3 )
	$3 = ( *($0 + [4]) ? uint_32($2 >> [1]) : $3 )
	if ( ($3 <= [4]) ){ goto $label$4 }
	$5 = ($3 + [-4])
	$0 = $4
	$2 = $3
	
.LOOP $label$5:
	CALL memcpy(($1 + [12]), $0, [4])
	$6 = ((int_32)*($1 + [12]) * (int_32)[1540483477])
	$2 = ((int_32)((int_32)((int_32)uint_32($6 >> [24]) ^ (int_32)$6) * (int_32)[1540483477]) ^ (int_32)((int_32)$2 * (int_32)[1540483477]))
	$0 = ($0 + [4])
	$3 = ($3 + [-4])
	if ( ((uint_32)$3 > (uint_32)[3]) ){ goto $label$5 }
	$0 = ($5 & [-4])
	$4 = (($4 + $0) + [4])
	$3 = ($5 - $0)
	if ( ((int_32)$3 == (int_32)[1]) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	$2 = $3
	if ( ((int_32)$3 == (int_32)[1]) ){ goto $label$2 }
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)[2]) ){ goto $label$6 }
	if ( ((int_32)$3 != (int_32)[3]) ){ goto $label$1 }
	$2 = ((int_32)(*($4 + [2]) << [16]) ^ (int_32)$2)
	
.LABEL $label$6
	$2 = ((int_32)(*($4 + [1]) << [8]) ^ (int_32)$2)
	
.LABEL $label$2
	$2 = ((int_32)((int_32)$2 ^ (int_32)*($4)) * (int_32)[1540483477])
	
.LABEL $label$1
	$global$0 = ($1 + [16])
	$0 = ((int_32)((int_32)uint_32($2 >> [13]) ^ (int_32)$2) * (int_32)[1540483477])
	return (CASTING uint_64)(uint_32 ((int_32)uint_32($0 >> [15]) ^ (int_32)$0))
}

int_32 .FUNC $5 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	$3 = ($global$0 - [80])
	$global$0 = $3
	CALL $375($3, $1)
	$1 = CALL $371($3, [0], [8345])
	$4 = ($1 + [8])
	*((($3 + [16]) + [8])) = *($4)
	*($3 + [16]) = *($1)
	*($1) = (int_64)0
	*($4) = [0]
	$1 = CALL $367(($3 + [16]), [8354])
	$4 = ($1 + [8])
	*((($3 + [32]) + [8])) = *($4)
	*($3 + [32]) = *($1)
	*($1) = (int_64)0
	*($4) = [0]
	$1 = *($2)
	$4 = ($1 & [1])
	$2 = CALL $369(($3 + [32]), ( *($2 + [8]) ? ($2 + [1]) : $4 ), ( *($2 + [4]) ? uint_32($1 >> [1]) : $4 ))
	$1 = ($2 + [8])
	*((($3 + [48]) + [8])) = *($1)
	*($3 + [48]) = *($2)
	*($2) = (int_64)0
	*($1) = [0]
	$2 = CALL $367(($3 + [48]), [8363])
	$5 = *($2)
	*($2) = (int_64)0
	$2 = ($2 + [8])
	*((($3 + [64]) + [8])) = *($2)
	*($2) = [0]
	*($3 + [64]) = $5
	if ( (*($3 + [48]) & [1]) ){ goto $label$9 }
	if ( (*($3 + [32]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL _ZdlPv(*($3 + [56]))
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL _ZdlPv(*($3 + [40]))
	$2 = [1]
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$2 = [1]
	if ( (*($3 + [16]) & [1]) ){ goto $label$5 }
	
.LABEL $label$6
	if ( (*($3) & $2) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL _ZdlPv(*($3 + [24]))
	if ( ((*($3) & $2) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL _ZdlPv(*($3 + [8]))
	$2 = [1]
	if ( ((*($3 + [64]) & [1]) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$2 = [1]
	if ( (*($3 + [64]) & [1]) ){ goto $label$1 }
	
.LABEL $label$2
	$global$0 = ($3 + [80])
	return (($3 + [64]) | $2)
	
.LABEL $label$1
	$2 = *($3 + [72])
	CALL _ZdlPv($2)
	$global$0 = ($3 + [80])
	return $2
}

void .FUNC $2 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ((int_32)($2 - $3) / (int_32)[12])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[357913942]) ){ goto $label$2 }
	$6 = [357913941]
	$7 = ((int_32)(*($0 + [8]) - $3) / (int_32)[12])
	if ( ((uint_32)$7 > (uint_32)[178956969]) ){ goto $label$4 }
	$6 = ($7 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL _Znwj(((int_32)$6 * (int_32)[12]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $377($0)
	
.LABEL $label$1
	$8 = *($1)
	*($1) = (int_64)0
	*(($4 = ($5 + ((int_32)$4 * (int_32)[12])))) = $8
	$1 = ($1 + [8])
	$7 = *($1)
	*($1) = [0]
	*(($4 + [8])) = $7
	$6 = ($5 + ((int_32)$6 * (int_32)[12]))
	$5 = ($4 + [12])
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$6:
	$1 = ($2 + [-4])
	*(($4 + [-4])) = *($1)
	$2 = ($2 + [-12])
	*(($4 = ($4 + [-12]))) = *($2)
	*($2) = (int_64)0
	*($1) = [0]
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$6 }
	$2 = *(($0 + [4]))
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $4
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$7 }
	
.LOOP $label$8:
	$4 = ($2 + [-12])
	if ( ((*($4) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*(($2 + [-4])))
	
.LABEL $label$9
	$2 = $4
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$8 }
	
.LABEL $label$7
	if ( ($3 == 0) ){ goto $label$10 }
	CALL _ZdlPv($3)
	
.LABEL $label$10
	(unreachable)
}

int_32 .FUNC $3 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = $1
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = $1
	$4 = ($4 & [1])
	$4 = *($0)
	if ( (( *($0 + [4]) ? uint_32($4 >> [1]) : $4 ) == 0) ){ goto $label$1 }
	$6 = ($0 + [1])
	$5 = ($0 + [8])
	$4 = ( *($5) ? $6 : $4 )
	$7 = ($2 + [-1])
	$3 = $1
	
.LOOP $label$2:
	$8 = *($4)
	$2 = ($8 + [-48])
	if ( (($2 & [255]) <= [10]) ){ goto $label$3 }
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[5]) ){ goto $label$4 }
	$2 = ($8 + [-87])
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)(($8 + [-65]) & [255]) > (uint_32)[5]) ){ goto $label$5 }
	$2 = ($8 + [-55])
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	CALL eosio_assert([0], [8192])
	
.LABEL $label$3
	$9 = ($2 << [4])
	*($3) = $9
	$11 = uint_32($11 >> [1])
	$12 = ($0 + [4])
	$13 = *($12)
	$11 = *($0)
	$2 = ($11 & [1])
	$8 = *($5)
	$10 = ($4 + [1])
	if ( ((int_32)$10 == (int_32)(( $8 ? $6 : $2 ) + ( $13 ? $11 : $2 ))) ){ goto $label$9 }
	$8 = *($10)
	$2 = ($8 + [-48])
	if ( (($2 & [255]) <= [10]) ){ goto $label$7 }
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[5]) ){ goto $label$8 }
	$2 = ($8 + [-87])
	goto $label$7 
	
.LABEL $label$9
	$4 = $10
	$3 = ($3 + [1])
	if ( $7 ){ goto $label$6 }
	goto $label$1 
	
.LABEL $label$8
	if ( ((uint_32)(($8 + [-65]) & [255]) > (uint_32)[5]) ){ goto $label$10 }
	$2 = ($8 + [-55])
	goto $label$7 
	
.LABEL $label$10
	$2 = [0]
	CALL eosio_assert([0], [8192])
	$9 = *($3)
	
.LABEL $label$7
	*($3) = ($9 | $2)
	$4 = ($4 + [2])
	$2 = *($0)
	$11 = uint_32($2 >> [1])
	$2 = ($2 & [1])
	$13 = *($12)
	$8 = *($5)
	$3 = ($3 + [1])
	if ( ($7 == 0) ){ goto $label$1 }
	
.LABEL $label$6
	$7 = ($7 + [-1])
	if ( ((int_32)$4 != (int_32)(( $8 ? $6 : $2 ) + ( $13 ? $11 : $2 ))) ){ goto $label$2 }
	
.LABEL $label$1
	return ($3 - $1)
}

void .FUNC memory ()
{
}

void .FUNC $1 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = CALL $373($0, $1, [0])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$1 }
	$5 = ($2 + [8])
	$6 = ($2 + [4])
	$7 = [0]
	
.LOOP $label$3:
	$8 = CALL $361($3, $0, $7, ($4 - $7), $0)
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*($5)) ){ goto $label$4 }
	*($7) = *($3)
	$7 = ($3 + [8])
	*(($7 + [8])) = *($7)
	*($7) = [0]
	*($6) = (*($6) + [12])
	*($3) = (int_64)0
	$7 = ($4 + [1])
	$4 = CALL $373($0, $1, $7)
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $2($2, $8)
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$5
	$7 = ($4 + [1])
	$4 = CALL $373($0, $1, $7)
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$2
	$4 = *($0)
	$4 = CALL $361($3, $0, $7, ( *(($0 + [4])) ? uint_32($4 >> [1]) : ($4 & [1]) ), $0)
	$0 = ($2 + [4])
	$7 = *($0)
	if ( ((uint_32)$7 >= (uint_32)*(($2 + [8]))) ){ goto $label$6 }
	*($7) = *($3)
	$7 = ($3 + [8])
	*(($7 + [8])) = *($7)
	*($7) = [0]
	*($0) = (*($0) + [12])
	*($3) = (int_64)0
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$6
	CALL $2($2, $4)
	if ( ((*($3) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$1
	$global$0 = ($3 + [16])
}

void .FUNC $14 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	*($1) = *($6)
	*(($1 + [24])) = *(($6 + [24]))
	*(($1 + [16])) = *(($6 + [16]))
	*(($1 + [8])) = *(($6 + [8]))
	$7 = ($1 + [32])
	CALL $362($7, *($5 + [4]))
	$6 = *($5 + [8])
	*($1 + [48]) = *($6)
	*(($1 + [72])) = *(($6 + [24]))
	*(($1 + [64])) = *(($6 + [16]))
	*(($1 + [56])) = *(($6 + [8]))
	*($1 + [80]) = *(*($5 + [12]))
	$5 = *($1 + [32])
	$6 = ( *(($1 + [36])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($6 + [72])
	$8 = (CASTING uint_64)(uint_32 $6)
	$9 = ($1 + [80])
	$10 = ($1 + [48])
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$6 = CALL $397($5)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$2
	*($3 + [12]) = $6
	*($3 + [8]) = $6
	*($3 + [16]) = ($6 + $5)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $7
	*($3 + [32]) = $1
	*($3 + [40]) = $10
	*($3 + [44]) = $9
	CALL $287(($3 + [32]), ($3 + [24]))
	$8 = *($1)
	*($1 + [92]) = CALL db_store_i64(*($4 + [8]), (int_64)-3913339338187833344, *(*($0 + [8])), $8, $6, $5)
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	if ( ((uint_64)$8 >= (uint_64)*($4 + [16])) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $400($6)
	if ( (uint_64)($8 <= *($4 + [16])) ){ goto $label$4 }
	
.LABEL $label$5
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$4
	$global$0 = ($3 + [48])
}

void .FUNC $15 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $377($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [32]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [40])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL _ZdlPv($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $16 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	$5 = ($global$0 - [368])
	$global$0 = $5
	CALL require_auth(*($0))
	*(($5 + [360])) = [0]
	*($5 + [336]) = $1
	*($5 + [344]) = (int_64)-1
	*($5 + [352]) = (int_64)0
	$6 = *($0)
	*($5 + [328]) = $6
	$7 = [0]
	$8 = CALL db_find_i64($6, $1, (int_64)-3913339338187833344, *($2))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $12(($5 + [328]), $8)
	if ( ((int_32)*($7 + [88]) == (int_32)($5 + [328])) ){ goto $label$1 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$1
	*(($5 + [320])) = [0]
	*($5 + [312]) = (int_64)0
	$8 = CALL $393([8402])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$5 }
	$9 = ((int_32)$7 != (int_32)[0])
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$8 }
	*($5 + [312]) = ($8 << [1])
	$10 = (($5 + [312]) | [1])
	if ( $8 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$11 = (($8 + [16]) & [-16])
	$10 = CALL _Znwj($11)
	*($5 + [312]) = ($11 | [1])
	*($5 + [320]) = $10
	*($5 + [316]) = $8
	
.LABEL $label$7
	CALL memcpy($10, [8402], $8)
	
.LABEL $label$6
	$11 = [0]
	*(($10 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($5, [101], ($5 + [312])))
	if ( ((*($5 + [312]) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*($5 + [320]))
	
.LABEL $label$9
	$8 = *($7 + [32])
	$10 = CALL $393([8436])
	if ( ((int_32)$10 != (int_32)( *(($7 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$10 }
	$11 = (CALL $374(($7 + [32]), [0], [-1], [8436], $10) == 0)
	
.LABEL $label$10
	*(($5 + [304])) = [0]
	*($5 + [296]) = (int_64)0
	$8 = CALL $393([8446])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$13 }
	*($5 + [296]) = ($8 << [1])
	$10 = (($5 + [296]) | [1])
	if ( $8 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$9 = (($8 + [16]) & [-16])
	$10 = CALL _Znwj($9)
	*($5 + [296]) = ($9 | [1])
	*($5 + [304]) = $10
	*($5 + [300]) = $8
	
.LABEL $label$12
	CALL memcpy($10, [8446], $8)
	
.LABEL $label$11
	*(($10 + $8)) = [0]
	CALL eosio_assert($11, CALL $5($5, [102], ($5 + [296])))
	if ( ((*($5 + [296]) & [1]) == 0) ){ goto $label$14 }
	CALL _ZdlPv(*($5 + [304]))
	
.LABEL $label$14
	*(($8 = (($5 + [256]) + [24]))) = *(($2 + [24]))
	*(($10 = (($5 + [256]) + [16]))) = *(($2 + [16]))
	*(($11 = (($5 + [224]) + [16]))) = *(($3 + [16]))
	*(($9 = (($5 + [224]) + [24]))) = *(($3 + [24]))
	*(($12 = (($5 + [192]) + [16]))) = *(($4 + [16]))
	*(($13 = (($5 + [192]) + [24]))) = *(($4 + [24]))
	*($5 + [256]) = *($2)
	*($5 + [224]) = *($3)
	*($5 + [192]) = *($4)
	*($5 + [264]) = *(($2 + [8]))
	*($5 + [232]) = *(($3 + [8]))
	*($5 + [200]) = *(($4 + [8]))
	*((($5 + [64]) + [24])) = *($8)
	$6 = *($7 + [80])
	*((($5 + [64]) + [16])) = *($10)
	*((($5 + [32]) + [24])) = *($9)
	*((($5 + [32]) + [16])) = *($11)
	*(($5 + [24])) = *($13)
	*(($5 + [16])) = *($12)
	*($5 + [72]) = *($5 + [264])
	*($5 + [64]) = *($5 + [256])
	*($5 + [40]) = *($5 + [232])
	*($5 + [32]) = *($5 + [224])
	*($5 + [8]) = *($5 + [200])
	*($5) = *($5 + [192])
	$14 = CALL $17($0, $1, ($5 + [64]), ($5 + [32]), $5, $6)
	*(($5 + [184])) = [0]
	*($5 + [168]) = (int_64)-1
	*($5 + [176]) = (int_64)0
	$6 = *($0)
	*($5 + [152]) = $6
	*($5 + [160]) = $6
	$14 = ((uint_64)$14 % (uint_64)(int_64)20)
	$7 = CALL db_find_i64($6, $6, (int_64)-3020380200705179648, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$16 }
	$2 = CALL $18(($5 + [152]), $7)
	if ( ((int_32)*($2 + [16]) == (int_32)($5 + [152])) ){ goto $label$17 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$17
	*($5 + [148]) = $2
	*($5 + [144]) = ($5 + [152])
	$8 = (($5 + [144]) | [4])
	goto $label$15 
	
.LABEL $label$16
	$2 = [0]
	*($5 + [148]) = [0]
	*($5 + [144]) = ($5 + [152])
	$8 = (($5 + [144]) | [4])
	
.LABEL $label$15
	*(($5 + [136])) = [0]
	*($5 + [128]) = (int_64)0
	$7 = CALL $393([8479])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$3 }
	$3 = ((int_32)$2 != (int_32)[0])
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$20 }
	*($5 + [128]) = ($7 << [1])
	$2 = (($5 + [128]) | [1])
	if ( $7 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	$4 = (($7 + [16]) & [-16])
	$2 = CALL _Znwj($4)
	*($5 + [128]) = ($4 | [1])
	*($5 + [136]) = $2
	*($5 + [132]) = $7
	
.LABEL $label$19
	CALL memcpy($2, [8479], $7)
	
.LABEL $label$18
	*(($2 + $7)) = [0]
	CALL eosio_assert($3, CALL $5($5, [172], ($5 + [128])))
	$3 = [1]
	if ( ((*($5 + [128]) & [1]) == 0) ){ goto $label$21 }
	CALL _ZdlPv(*($5 + [136]))
	
.LABEL $label$21
	$7 = *($8)
	if ( *($7 + [10]) ){ goto $label$22 }
	$3 = ((int_32)*($7 + [12]) != (int_32)[0])
	
.LABEL $label$22
	*(($5 + [120])) = [0]
	*($5 + [112]) = (int_64)0
	$7 = CALL $393([8516])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$25 }
	*($5 + [112]) = ($7 << [1])
	$2 = (($5 + [112]) | [1])
	if ( $7 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$4 = (($7 + [16]) & [-16])
	$2 = CALL _Znwj($4)
	*($5 + [112]) = ($4 | [1])
	*($5 + [120]) = $2
	*($5 + [116]) = $7
	
.LABEL $label$24
	CALL memcpy($2, [8516], $7)
	
.LABEL $label$23
	*(($2 + $7)) = [0]
	CALL eosio_assert($3, CALL $5($5, [173], ($5 + [112])))
	if ( ((*($5 + [112]) & [1]) == 0) ){ goto $label$26 }
	CALL _ZdlPv(*($5 + [120]))
	
.LABEL $label$26
	$7 = *($8)
	if ( (*($7 + [12]) == 0) ){ goto $label$29 }
	$6 = *($0)
	*($5 + [104]) = ($5 + [144])
	if ( $7 ){ goto $label$30 }
	CALL eosio_assert([0], [19537])
	
.LABEL $label$30
	CALL $19(($5 + [152]), $7, $6, ($5 + [104]))
	CALL $20($0, $1, (((CASTING uint_32)(uint_64 $14) + [61]) & [255]))
	$2 = *($5 + [176])
	if ( $2 ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	if ( (*($7 + [10]) == 0) ){ goto $label$31 }
	$6 = *($0)
	*($5 + [104]) = ($5 + [144])
	CALL $21(($5 + [152]), $7, $6, ($5 + [104]))
	CALL $20($0, $1, (((CASTING uint_32)(uint_64 $14) + [81]) & [255]))
	
.LABEL $label$31
	$2 = *($5 + [176])
	if ( ($2 == 0) ){ goto $label$27 }
	
.LABEL $label$28
	$8 = ($5 + [180])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$33 }
	
.LOOP $label$34:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$35 }
	CALL _ZdlPv($7)
	
.LABEL $label$35
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$34 }
	$0 = *(($5 + [176]))
	goto $label$32 
	
.LABEL $label$33
	$0 = $2
	
.LABEL $label$32
	*($8) = $2
	CALL _ZdlPv($0)
	
.LABEL $label$27
	$2 = *($5 + [352])
	if ( ($2 == 0) ){ goto $label$36 }
	$8 = ($5 + [356])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$38 }
	
.LOOP $label$39:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$40 }
	if ( ((*($7 + [32]) & [1]) == 0) ){ goto $label$41 }
	CALL _ZdlPv(*(($7 + [40])))
	
.LABEL $label$41
	CALL _ZdlPv($7)
	
.LABEL $label$40
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$39 }
	$0 = *(($5 + [352]))
	goto $label$37 
	
.LABEL $label$38
	$0 = $2
	
.LABEL $label$37
	*($8) = $2
	CALL _ZdlPv($0)
	
.LABEL $label$36
	$global$0 = ($5 + [368])
	return (unreachable)
	
.LABEL $label$5
	CALL $359(($5 + [312]))
	
.LABEL $label$4
	CALL $359(($5 + [296]))
	
.LABEL $label$3
	CALL $359(($5 + [128]))
	
.LABEL $label$2
	CALL $359(($5 + [112]))
	(unreachable)
	(unreachable)
	(unreachable)
}

int_64 .FUNC $17 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_64 $5)
{
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$6 = ($global$0 - [288])
	$global$0 = $6
	*(($6 + [216])) = [0]
	*($6 + [200]) = (int_64)-1
	*($6 + [208]) = (int_64)0
	$7 = *($0)
	*($6 + [184]) = $7
	*($6 + [192]) = $1
	$8 = [0]
	$2 = CALL db_find_i64($7, $1, (int_64)-3913339338187833344, *($2))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $12(($6 + [184]), $2)
	if ( ((int_32)*($8 + [88]) == (int_32)($6 + [184])) ){ goto $label$1 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$1
	*(($6 + [176])) = [0]
	*($6 + [168]) = (int_64)0
	$0 = CALL $393([8539])
	if ( ((uint_32)$0 >= (uint_32)[-16]) ){ goto $label$11 }
	$9 = ((int_32)$8 != (int_32)[0])
	if ( ((uint_32)$0 >= (uint_32)[11]) ){ goto $label$14 }
	*($6 + [168]) = ($0 << [1])
	$10 = (($6 + [168]) | [1])
	if ( $0 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$2 = (($0 + [16]) & [-16])
	$10 = CALL _Znwj($2)
	*($6 + [168]) = ($2 | [1])
	*($6 + [176]) = $10
	*($6 + [172]) = $0
	
.LABEL $label$13
	CALL memcpy($10, [8539], $0)
	
.LABEL $label$12
	$2 = [0]
	*(($10 + $0)) = [0]
	CALL eosio_assert($9, CALL $5($6, [101], ($6 + [168])))
	if ( ((*($6 + [168]) & [1]) == 0) ){ goto $label$15 }
	CALL _ZdlPv(*($6 + [176]))
	
.LABEL $label$15
	*((($6 + [128]) + [24])) = *(($8 + [24]))
	*((($6 + [128]) + [16])) = *(($8 + [16]))
	*($6 + [128]) = *($8)
	*($6 + [112]) = (int_64)0
	*($6 + [120]) = [0]
	*($6 + [136]) = *(($8 + [8]))
	
.LOOP $label$16:
	$0 = *(($3 + $2))
	CALL $368(($6 + [112]), *((uint_32($0 >> [4]) + [8223])))
	CALL $368(($6 + [112]), *((($0 & [15]) + [8223])))
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[32]) ){ goto $label$16 }
	*((($6 + [224]) + [24])) = *((($6 + [128]) + [24]))
	*((($6 + [224]) + [16])) = *((($6 + [128]) + [16]))
	*($6 + [232]) = *($6 + [136])
	*($6 + [224]) = *($6 + [128])
	$2 = *($6 + [112])
	$0 = ($2 & [1])
	CALL sha256(( *((($6 + [112]) + [8])) ? (($6 + [112]) | [1]) : $0 ), ( *($6 + [116]) ? uint_32($2 >> [1]) : $0 ), ($6 + [256]))
	$0 = CALL $394(($6 + [224]), ($6 + [256]), [32])
	*((($6 + [96]) + [8])) = [0]
	*($6 + [96]) = (int_64)0
	$2 = CALL $393([9424])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$10 }
	$10 = ($0 == 0)
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$19 }
	*($6 + [96]) = ($2 << [1])
	$0 = (($6 + [96]) | [1])
	if ( $2 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$9 = (($2 + [16]) & [-16])
	$0 = CALL _Znwj($9)
	*($6 + [96]) = ($9 | [1])
	*($6 + [104]) = $0
	*($6 + [100]) = $2
	
.LABEL $label$18
	CALL memcpy($0, [9424], $2)
	
.LABEL $label$17
	*(($0 + $2)) = [0]
	CALL eosio_assert($10, CALL $5($6, [136], ($6 + [96])))
	if ( ((*($6 + [96]) & [1]) == 0) ){ goto $label$20 }
	CALL _ZdlPv(*($6 + [104]))
	
.LABEL $label$20
	if ( ((*($6 + [112]) & [1]) == 0) ){ goto $label$21 }
	CALL _ZdlPv(*(($6 + [120])))
	
.LABEL $label$21
	*(($6 + [88])) = *(($8 + [72]))
	*(($6 + [80])) = *(($8 + [64]))
	*($6 + [64]) = *($8 + [48])
	*($6 + [72]) = *(($8 + [56]))
	$2 = [0]
	*($6 + [40]) = [0]
	*($6 + [32]) = (int_64)0
	
.LOOP $label$22:
	$0 = *(($4 + $2))
	CALL $368(($6 + [32]), *((uint_32($0 >> [4]) + [8223])))
	CALL $368(($6 + [32]), *((($0 & [15]) + [8223])))
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[32]) ){ goto $label$22 }
	CALL $376(($6 + [16]), $5)
	$2 = *($6 + [16])
	$10 = ($2 & [1])
	$2 = CALL $369(($6 + [32]), ( *($6 + [24]) ? (($6 + [16]) | [1]) : $10 ), ( *($6 + [20]) ? uint_32($2 >> [1]) : $10 ))
	$10 = ($2 + [8])
	*(($0 = (($6 + [48]) + [8]))) = *($10)
	*($6 + [48]) = *($2)
	*($2) = (int_64)0
	*($10) = [0]
	*((($6 + [224]) + [24])) = *((($6 + [64]) + [24]))
	*((($6 + [224]) + [16])) = *((($6 + [64]) + [16]))
	*($6 + [232]) = *($6 + [72])
	*($6 + [224]) = *($6 + [64])
	$2 = *($6 + [48])
	$0 = ($2 & [1])
	CALL sha256(( *($0) ? (($6 + [48]) | [1]) : $0 ), ( *($6 + [52]) ? uint_32($2 >> [1]) : $0 ), ($6 + [256]))
	$0 = CALL $394(($6 + [224]), ($6 + [256]), [32])
	*(($6 + [8])) = [0]
	*($6) = (int_64)0
	$2 = CALL $393([9454])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$9 }
	$10 = ($0 == 0)
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$25 }
	*($6) = ($2 << [1])
	$0 = ($6 | [1])
	if ( $2 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$9 = (($2 + [16]) & [-16])
	$0 = CALL _Znwj($9)
	*($6) = ($9 | [1])
	*($6 + [8]) = $0
	*($6 + [4]) = $2
	
.LABEL $label$24
	CALL memcpy($0, [9454], $2)
	
.LABEL $label$23
	*(($0 + $2)) = [0]
	CALL eosio_assert($10, CALL $5($6, [137], $6))
	if ( (*($6) & [1]) ){ goto $label$27 }
	if ( (*($6 + [48]) & [1]) ){ goto $label$26 }
	goto $label$8 
	
.LABEL $label$27
	CALL _ZdlPv(*($6 + [8]))
	if ( ((*($6 + [48]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$26
	CALL _ZdlPv(*(($6 + [56])))
	$2 = [1]
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$11
	CALL $359(($6 + [168]))
	
.LABEL $label$10
	CALL $359(($6 + [96]))
	
.LABEL $label$9
	CALL $359($6)
	
.LABEL $label$8
	$2 = [1]
	if ( (*($6 + [16]) & [1]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( (*($6 + [32]) & $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL _ZdlPv(*(($6 + [24])))
	if ( ((*($6 + [32]) & $2) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL _ZdlPv(*(($6 + [40])))
	if ( $8 ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	if ( $8 ){ goto $label$2 }
	
.LABEL $label$3
	CALL eosio_assert([0], [19223])
	CALL eosio_assert([0], [19257])
	
.LABEL $label$2
	$2 = [0]
	$0 = CALL db_next_i64(*($8 + [92]), ($6 + [256]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$28 }
	CALL $12(($6 + [184]), $0)
	
.LABEL $label$28
	CALL $13(($6 + [184]), $8)
	*($6 + [264]) = [0]
	*($6 + [256]) = (int_64)0
	
.LOOP $label$29:
	$0 = *(($3 + $2))
	CALL $368(($6 + [256]), *((uint_32($0 >> [4]) + [8223])))
	CALL $368(($6 + [256]), *((($0 & [15]) + [8223])))
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[32]) ){ goto $label$29 }
	$1 = CALL $4(($6 + [256]))
	if ( ((*($6 + [256]) & [1]) == 0) ){ goto $label$30 }
	CALL _ZdlPv(*(($6 + [264])))
	
.LABEL $label$30
	$2 = [0]
	*($6 + [264]) = [0]
	*($6 + [256]) = (int_64)0
	
.LOOP $label$31:
	$3 = *(($4 + $2))
	CALL $368(($6 + [256]), *((uint_32($3 >> [4]) + [8223])))
	CALL $368(($6 + [256]), *((($3 & [15]) + [8223])))
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[32]) ){ goto $label$31 }
	$5 = CALL $4(($6 + [256]))
	if ( ((*($6 + [256]) & [1]) == 0) ){ goto $label$32 }
	CALL _ZdlPv(*(($6 + [264])))
	
.LABEL $label$32
	$1 = ((int_64)$5 ^ (int_64)$1)
	$4 = *($6 + [208])
	if ( ($4 == 0) ){ goto $label$33 }
	$0 = ($6 + [212])
	$2 = *($0)
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$35 }
	
.LOOP $label$36:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$37 }
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$38 }
	CALL _ZdlPv(*(($3 + [40])))
	
.LABEL $label$38
	CALL _ZdlPv($3)
	
.LABEL $label$37
	if ( ((int_32)$4 != (int_32)$2) ){ goto $label$36 }
	$2 = *(($6 + [208]))
	goto $label$34 
	
.LABEL $label$35
	$2 = $4
	
.LABEL $label$34
	*($0) = $4
	CALL _ZdlPv($2)
	
.LABEL $label$33
	$global$0 = ($6 + [288])
	(unreachable)
	(unreachable)
	(unreachable)
	return $1
}

int_32 .FUNC $10 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [96])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [19191])
	
.LABEL $label$5
	$4 = CALL $397($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([112])) + [88]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [32])
	*($3 + [52]) = ($5 + [40])
	*($3 + [56]) = ($5 + [48])
	*($3 + [60]) = ($5 + [56])
	*($3 + [64]) = ($5 + [64])
	*($3 + [68]) = ($5 + [72])
	*($3 + [72]) = ($5 + [80])
	*($3 + [76]) = ($5 + [81])
	*($3 + [80]) = ($5 + [82])
	*($3 + [84]) = ($5 + [83])
	*($3 + [88]) = ($5 + [84])
	CALL $290(($3 + [32]), ($3 + [24]))
	*($5 + [92]) = $1
	*($5 + [96 align=4]) = (int_64)-1
	*($5 + [104]) = [-1]
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $88(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $400($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [96])
	return $5
}

void .FUNC $11 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_64 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$6 = ($global$0 - [144])
	$global$0 = $6
	*($6 + [96]) = $5
	CALL require_auth($1)
	$7 = CALL $7($0)
	*(($6 + [88])) = [0]
	*($6 + [80]) = (int_64)0
	$8 = CALL $393([8366])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$5 }
	$9 = ((int_32)$7 ^ (int_32)[1])
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$8 }
	*($6 + [80]) = ($8 << [1])
	$7 = (($6 + [80]) | [1])
	if ( $8 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$10 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($10)
	*($6 + [80]) = ($10 | [1])
	*($6 + [88]) = $7
	*($6 + [84]) = $8
	
.LABEL $label$7
	CALL memcpy($7, [8366], $8)
	
.LABEL $label$6
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($6, [159], ($6 + [80])))
	if ( ((*($6 + [80]) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*($6 + [88]))
	
.LABEL $label$9
	$7 = CALL $8($0, $1)
	*(($6 + [72])) = [0]
	*($6 + [64]) = (int_64)0
	$8 = CALL $393([8384])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$4 }
	$9 = ((int_32)$7 ^ (int_32)[1])
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$12 }
	*($6 + [64]) = ($8 << [1])
	$7 = (($6 + [64]) | [1])
	if ( $8 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$10 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($10)
	*($6 + [64]) = ($10 | [1])
	*($6 + [72]) = $7
	*($6 + [68]) = $8
	
.LABEL $label$11
	CALL memcpy($7, [8384], $8)
	
.LABEL $label$10
	*(($7 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($6, [157], ($6 + [64])))
	if ( ((*($6 + [64]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*($6 + [72]))
	
.LABEL $label$13
	*(($6 + [56])) = [0]
	*($6 + [40]) = (int_64)-1
	$5 = *($0)
	*($6 + [24]) = $5
	*($6 + [32]) = $1
	*($6 + [48]) = (int_64)0
	$8 = CALL db_lowerbound_i64($5, $1, (int_64)-3913339338187833344, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$14 }
	$7 = CALL $12(($6 + [24]), $8)
	
.LOOP $label$15:
	$8 = [0]
	$9 = CALL db_next_i64(*($7 + [92]), ($6 + [8]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$16 }
	$8 = CALL $12(($6 + [24]), $9)
	
.LABEL $label$16
	CALL $13(($6 + [24]), $7)
	$7 = $8
	if ( $8 ){ goto $label$15 }
	
.LABEL $label$14
	$1 = *($0)
	*($6 + [12]) = $2
	*($6 + [8]) = $3
	*($6 + [16]) = $4
	*($6 + [20]) = ($6 + [96])
	*($6 + [136]) = $1
	if ( ((int_64)*($6 + [24]) == (int_64)CALL current_receiver()) ){ goto $label$17 }
	CALL eosio_assert([0], [19435])
	
.LABEL $label$17
	*($6 + [116]) = ($6 + [8])
	*($6 + [112]) = ($6 + [24])
	*($6 + [120]) = ($6 + [136])
	*(($8 = CALL _Znwj([112])) + [40]) = [0]
	*($8 + [32 align=4]) = (int_64)0
	*($8 + [88]) = ($6 + [24])
	CALL $14(($6 + [112]), $8)
	*($6 + [128]) = $8
	$1 = *($8)
	*($6 + [112]) = $1
	$9 = *($8 + [92])
	*($6 + [108]) = $9
	$0 = ($6 + [52])
	$7 = *($0)
	if ( ((uint_32)$7 >= (uint_32)*(($6 + [56]))) ){ goto $label$19 }
	*($7 + [8]) = $1
	*($7 + [16]) = $9
	*($6 + [128]) = [0]
	*($7) = $8
	*($0) = ($7 + [24])
	$8 = *($6 + [128])
	*($6 + [128]) = [0]
	if ( ($8 == 0) ){ goto $label$18 }
	goto $label$3 
	
.LABEL $label$19
	CALL $15(($6 + [48]), ($6 + [128]), ($6 + [112]), ($6 + [108]))
	$8 = *($6 + [128])
	*($6 + [128]) = [0]
	if ( $8 ){ goto $label$3 }
	
.LABEL $label$18
	$9 = *($6 + [48])
	if ( ($9 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	CALL $359(($6 + [80]))
	
.LABEL $label$4
	CALL $359(($6 + [64]))
	
.LABEL $label$3
	if ( ((*($8 + [32]) & [1]) == 0) ){ goto $label$20 }
	CALL _ZdlPv(*(($8 + [40])))
	
.LABEL $label$20
	CALL _ZdlPv($8)
	$9 = *($6 + [48])
	if ( ($9 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$0 = ($6 + [52])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$22 }
	
.LOOP $label$23:
	$8 = ($8 + [-24])
	$7 = *($8)
	*($8) = [0]
	if ( ($7 == 0) ){ goto $label$24 }
	if ( ((*($7 + [32]) & [1]) == 0) ){ goto $label$25 }
	CALL _ZdlPv(*(($7 + [40])))
	
.LABEL $label$25
	CALL _ZdlPv($7)
	
.LABEL $label$24
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$23 }
	$8 = *(($6 + [48]))
	goto $label$21 
	
.LABEL $label$22
	$8 = $9
	
.LABEL $label$21
	*($0) = $9
	CALL _ZdlPv($8)
	
.LABEL $label$1
	$global$0 = ($6 + [144])
	(unreachable)
	(unreachable)
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [19191])
	
.LABEL $label$5
	$4 = CALL $397($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([112])) + [40]) = [0]
	*($5 + [32 align=4]) = (int_64)0
	*($5 + [88]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [32])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [48])
	*($3 + [44]) = ($5 + [80])
	CALL $284(($3 + [32]), ($3 + [24]))
	*($5 + [92]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $15(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $400($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [32]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [40])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19287])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19332])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [19382])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*(($5 + [40])))
	
.LABEL $label$13
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	if ( ((*($8 + [32]) & [1]) == 0) ){ goto $label$16 }
	CALL _ZdlPv(*(($8 + [40])))
	
.LABEL $label$16
	CALL _ZdlPv($8)
	
.LABEL $label$15
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*(($1 + [92])))
}

void .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19287])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19332])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = (*($1) & [255])
	if ( ((int_32)*(*(($4 + [-24]))) == (int_32)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$5 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$8 }
	$8 = ($5 + [-48])
	$5 = ($5 + [-24])
	if ( ((int_32)*(*($8)) != (int_32)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$6 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [19382])
	$6 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$2 = ($5 + $6)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $6)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	$7 = *($5 + [4])
	if ( ($7 == 0) ){ goto $label$13 }
	*(($5 + [8])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$13
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$2 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$5 = ($5 + $6)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	$7 = *($8 + [4])
	if ( ($7 == 0) ){ goto $label$16 }
	*(($8 + [8])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$16
	CALL _ZdlPv($8)
	
.LABEL $label$15
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $2
	CALL db_remove_i64(*(($1 + [20])))
}

int_32 .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [19191])
	
.LABEL $label$5
	$4 = CALL $397($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([32])) + [16]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [10])
	*($3 + [44]) = ($5 + [12])
	CALL $289(($3 + [32]), ($3 + [24]))
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $136(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $400($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $19 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	*($1 + [12]) = (*(*(*($3) + [4]) + [12]) + [-1])
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-16])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-2])
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = ($1 + [8])
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [10])
	*($5 + [44]) = ($1 + [12])
	CALL $135(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [20]), $2, $4, [14])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

void .FUNC $338 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
}

void .FUNC $339 (int_32 $0, int_32 $1, int_32 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [96])
	$global$0 = $5
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$7 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($7) + $0))
	
.LABEL $label$1
	*(($8 = (($5 + [64]) + [24]))) = *(($1 + [24]))
	*(($9 = (($5 + [64]) + [16]))) = *(($1 + [16]))
	*($5 + [64]) = *($1)
	*($5 + [72]) = *(($1 + [8]))
	$1 = CALL $360(($5 + [48]), $2)
	*($5 + [40]) = [0]
	*($5 + [32]) = (int_64)0
	$2 = (*($4 + [4]) - *($4))
	$6 = ((int_32)$2 / (int_32)[3])
	if ( ($2 == 0) ){ goto $label$3 }
	if ( ((uint_32)$6 >= (uint_32)[1431655766]) ){ goto $label$2 }
	$2 = CALL _Znwj($2)
	*(($5 + [40])) = ($2 + ((int_32)$6 * (int_32)[3]))
	*($5 + [32]) = $2
	*($5 + [36]) = $2
	$6 = *($4)
	$4 = (*(($4 + [4])) - $6)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($2, $6, $4)
	*($5 + [36]) = (*($5 + [36]) + ((int_32)((uint_32)$4 / (uint_32)[3]) * (int_32)[3]))
	
.LABEL $label$3
	*(($5 + [24])) = *($8)
	*(($5 + [16])) = *($9)
	*($5 + [8]) = *($5 + [72])
	*($5) = *($5 + [64])
	CALL void $7((int_32 $5), (int_32 $1), (int_32 $3), (int_64 ($5 + [32])), (int_32 $0))
	$4 = *($5 + [32])
	if ( ($4 == 0) ){ goto $label$4 }
	*($5 + [36]) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$4
	if ( ((*($1) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*($1 + [8]))
	
.LABEL $label$5
	$global$0 = ($5 + [96])
	return (unreachable)
	
.LABEL $label$2
	CALL $377(($5 + [32]))
}

int_32 .FUNC $336 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($3 <= *($5)) ){ goto $label$2 }
	CALL eosio_assert([0], [19219])
	$3 = *($6)
	
.LABEL $label$2
	$8 = *($3)
	$3 = ($3 + [1])
	*($6) = $3
	$7 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $7)))
	$7 = ($7 + [7])
	$3 = $3
	if ( ($8 & [128]) ){ goto $label$1 }
	$7 = (CASTING uint_32)(uint_64 $4)
	$3 = *($1)
	$8 = *($1 + [4])
	$6 = ((int_32)($8 - $3) / (int_32)[3])
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$5 }
	CALL $337($1, ($7 - $6))
	$8 = *(($1 + [4]))
	$3 = *($1)
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$6 }
	$8 = ($3 + ((int_32)$7 * (int_32)[3]))
	*(($1 + [4])) = $8
	
.LABEL $label$6
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = ($2 + [24])
	
.LOOP $label$7:
	*($2 + [8]) = $0
	*($2 + [16]) = $3
	*($7) = ($3 + [2])
	*($2 + [20]) = ($3 + [1])
	CALL $338(($2 + [16]), ($2 + [8]))
	$3 = ($3 + [3])
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$7 }
	
.LABEL $label$3
	$global$0 = ($2 + [32])
	return $0
}

void .FUNC $337 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $3) / (int_32)[3]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ((int_32)($3 - $4) / (int_32)[3])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[1431655766]) ){ goto $label$3 }
	$3 = [1431655765]
	$2 = ((int_32)($2 - $4) / (int_32)[3])
	if ( ((uint_32)$2 > (uint_32)[715827881]) ){ goto $label$6 }
	$3 = ($2 << [1])
	$3 = ( $6 ? $3 : ($3 <= $6) )
	if ( ($3 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj(((int_32)$3 * (int_32)[3]))
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	*(($3 + [2])) = [0]
	$3 = (*($0) + [3])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$3 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $377($0)
	
.LABEL $label$2
	$4 = ($2 + ((int_32)$3 * (int_32)[3]))
	$5 = ($2 + ((int_32)$5 * (int_32)[3]))
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	*(($3 + [2])) = [0]
	$3 = ($3 + [3])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$6 = ($2 + ((int_32)$6 * (int_32)[3]))
	$1 = *($0)
	$7 = ($0 + [4])
	$3 = (*($7) - $1)
	$2 = ($5 + ((int_32)((int_32)$3 / (int_32)[-3]) * (int_32)[3]))
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($7) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $334 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$5 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [19214])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy(($2 + [15]), $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	*($4) = ((int_32)*($2 + [15]) != (int_32)[0])
	$global$0 = ($2 + [16])
}

void .FUNC $335 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_64 $4, int_64 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10, int_32 $11, int_32 $12)
{
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$13 = ($global$0 - [80])
	$global$0 = $13
	$0 = *($0 + [4])
	$14 = *($0 + [4])
	$15 = (*($0) + int_32($14 >> [1]))
	$16 = *($0)
	if ( (($14 & [1]) == 0) ){ goto $label$1 }
	$16 = *((*($15) + $16))
	
.LABEL $label$1
	$0 = CALL $360(($13 + [64]), $1)
	*($13 + [56]) = [0]
	*($13 + [48]) = (int_64)0
	$1 = (*($8 + [4]) - *($8))
	if ( ($1 == 0) ){ goto $label$6 }
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$14 = CALL _Znwj($1)
	*(($13 + [56])) = ($14 + (int_32($1 >> [1]) << [1]))
	*($13 + [48]) = $14
	*($13 + [52]) = $14
	$1 = *($8)
	$8 = (*(($8 + [4])) - $1)
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($14, $1, $8)
	*($13 + [52]) = (*($13 + [52]) + $8)
	
.LABEL $label$6
	*($13 + [40]) = [0]
	*($13 + [32]) = (int_64)0
	$8 = (*($9 + [4]) - *($9))
	if ( ($8 == 0) ){ goto $label$7 }
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$4 }
	$1 = CALL _Znwj($8)
	*(($13 + [40])) = ($1 + (int_32($8 >> [1]) << [1]))
	*($13 + [32]) = $1
	*($13 + [36]) = $1
	$9 = *($9)
	$8 = (*(($9 + [4])) - $9)
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($1, $9, $8)
	*($13 + [36]) = (*($13 + [36]) + $8)
	
.LABEL $label$7
	*($13 + [24]) = [0]
	*($13 + [16]) = (int_64)0
	$8 = (*($10 + [4]) - *($10))
	if ( ($8 == 0) ){ goto $label$8 }
	$9 = int_32($8 >> [5])
	if ( ((uint_32)$9 >= (uint_32)[134217728]) ){ goto $label$3 }
	$8 = CALL _Znwj($8)
	*(($13 + [24])) = ($8 + ($9 << [5]))
	*($13 + [16]) = $8
	*($13 + [20]) = $8
	$10 = *($10)
	$9 = (*(($10 + [4])) - $10)
	if ( ((int_32)$9 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($8, $10, $9)
	*($13 + [20]) = (*($13 + [20]) + $9)
	
.LABEL $label$8
	*($13 + [8]) = [0]
	*($13) = (int_64)0
	$8 = (*($11 + [4]) - *($11))
	if ( ($8 == 0) ){ goto $label$9 }
	$9 = int_32($8 >> [5])
	if ( ((uint_32)$9 >= (uint_32)[134217728]) ){ goto $label$2 }
	$8 = CALL _Znwj($8)
	*(($13 + [8])) = ($8 + ($9 << [5]))
	*($13) = $8
	*($13 + [4]) = $8
	$10 = *($11)
	$9 = (*(($11 + [4])) - $10)
	if ( ((int_32)$9 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($8, $10, $9)
	*($13 + [4]) = (*($13 + [4]) + $9)
	
.LABEL $label$9
	CALL void $15((int_32 $0), (int_32 $2), (int_32 $3), (int_32 $4), (int_64 $5), (int_64 $6), (int_32 $7), (int_32 ($13 + [48])), (int_32 ($13 + [32])), (int_32 ($13 + [16])), (int_32 $13), (int_32 $12), (int_32 $16))
	$8 = *($13)
	if ( ($8 == 0) ){ goto $label$10 }
	*($13 + [4]) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$10
	$8 = *($13 + [16])
	if ( ($8 == 0) ){ goto $label$11 }
	*($13 + [20]) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$11
	$8 = *($13 + [32])
	if ( ($8 == 0) ){ goto $label$12 }
	*($13 + [36]) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$12
	$8 = *($13 + [48])
	if ( ($8 == 0) ){ goto $label$13 }
	*($13 + [52]) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$13
	if ( ((*($0) & [1]) == 0) ){ goto $label$14 }
	CALL _ZdlPv(*($0 + [8]))
	
.LABEL $label$14
	$global$0 = ($13 + [80])
	return (unreachable)
	
.LABEL $label$5
	CALL $377(($13 + [48]))
	
.LABEL $label$4
	CALL $377(($13 + [32]))
	
.LABEL $label$3
	CALL $377(($13 + [16]))
	
.LABEL $label$2
	CALL $377($13)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $332 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [1]) >= (uint_32)$1) ){ goto $label$4 }
	$4 = *($0)
	$5 = int_32(($3 - $4) >> [1])
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	$7 = [0]
	$3 = ($2 - $4)
	$3 = ( ( $6 ? $3 : ($3 <= $6) ) ? [2147483647] : (int_32($3 >> [1]) <= [1073741823]) )
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$1 }
	$7 = CALL _Znwj(($3 << [1]))
	
.LABEL $label$5
	$2 = ($7 + ($3 << [1]))
	$4 = ($7 + ($5 << [1]))
	$3 = $4
	
.LOOP $label$6:
	*($3) = [0]
	$3 = ($3 + [2])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$6 }
	$6 = ($7 + ($6 << [1]))
	$1 = *($0)
	$5 = ($0 + [4])
	$3 = (*($5) - $1)
	$7 = ($4 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($7, $1, $3)
	$1 = *($0)
	
.LABEL $label$7
	*($0) = $7
	*($5) = $6
	*(($0 + [8])) = $2
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	return (unreachable)
	
.LABEL $label$4
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*($3) = [0]
	$3 = (*($0) + [2])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	
.LABEL $label$3
	return (unreachable)
	
.LABEL $label$2
	CALL $377($0)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $333 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [5]) >= (uint_32)$1) ){ goto $label$6 }
	$4 = *($0)
	$5 = int_32(($3 - $4) >> [5])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[134217728]) ){ goto $label$4 }
	$3 = [134217727]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [5]) > (uint_32)[67108862]) ){ goto $label$7 }
	$3 = int_32($2 >> [4])
	$3 = ( $6 ? $3 : ($3 <= $6) )
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((uint_32)$3 >= (uint_32)[134217728]) ){ goto $label$3 }
	
.LABEL $label$7
	$2 = CALL _Znwj(($3 << [5]))
	goto $label$2 
	
.LABEL $label$6
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*($3) = (int_64)0
	*(($3 + [24])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*(($3 + [8])) = (int_64)0
	$3 = (*($0) + [32])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$3 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $377($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$4 = ($2 + ($3 << [5]))
	$5 = ($2 + ($5 << [5]))
	$3 = $5
	
.LOOP $label$9:
	*($3) = (int_64)0
	*(($3 + [24])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*(($3 + [8])) = (int_64)0
	$3 = ($3 + [32])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$6 = ($2 + ($6 << [5]))
	$3 = *($0)
	$7 = ($0 + [4])
	$1 = (*($7) - $3)
	$2 = ($5 - $1)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$10
	*($0) = $2
	*($7) = $6
	*(($0 + [8])) = $4
	if ( ($3 == 0) ){ goto $label$1 }
	CALL _ZdlPv($3)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

int_32 .FUNC $330 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [19219])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$4 = *($1 + [4])
	$6 = int_32(($4 - $7) >> [1])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $332($1, ($2 - $6))
	$4 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$4 = ($7 + ($2 << [1]))
	*(($1 + [4])) = $4
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = ($0 + [4])
	$6 = *($2)
	$5 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((int_32)*($5) != (int_32)$6) ){ goto $label$8 }
	CALL eosio_assert([0], [19214])
	$6 = *($2)
	
.LABEL $label$8
	CALL memcpy($7, $6, [1])
	$6 = (*($2) + [1])
	*($2) = $6
	if ( ((int_32)*($5) != (int_32)$6) ){ goto $label$9 }
	CALL eosio_assert([0], [19214])
	$6 = *($2)
	
.LABEL $label$9
	CALL memcpy(($7 + [1]), $6, [1])
	$6 = (*($2) + [1])
	*($2) = $6
	$7 = ($7 + [2])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

int_32 .FUNC $331 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($3 <= *($5)) ){ goto $label$2 }
	CALL eosio_assert([0], [19219])
	$3 = *($6)
	
.LABEL $label$2
	$8 = *($3)
	$3 = ($3 + [1])
	*($6) = $3
	$7 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $7)))
	$7 = ($7 + [7])
	$3 = $3
	if ( ($8 & [128]) ){ goto $label$1 }
	$7 = (CASTING uint_32)(uint_64 $4)
	$3 = *($1)
	$8 = *($1 + [4])
	$6 = int_32(($8 - $3) >> [5])
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$5 }
	CALL $333($1, ($7 - $6))
	$8 = *(($1 + [4]))
	$3 = *($1)
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$6 }
	$8 = ($3 + ($7 << [5]))
	*(($1 + [4])) = $8
	
.LABEL $label$6
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = ($2 + [20])
	$6 = ($2 + [28])
	
.LOOP $label$7:
	*($2) = $0
	*($2 + [8]) = $3
	*((($2 + [8]) + [8])) = ($3 + [8])
	*($7) = ($3 + [16])
	*((($2 + [8]) + [16])) = ($3 + [24])
	*($6) = ($3 + [25])
	*($2 + [12]) = ($3 + [1])
	CALL $334(($2 + [8]), $2)
	$3 = ($3 + [32])
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$7 }
	
.LABEL $label$3
	$global$0 = ($2 + [32])
	return $0
}

void .FUNC $116 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	*($1 + [82]) = *(*($3))
	$3 = ($1 + [40])
	*($5 + [16]) = *($3)
	$6 = ($1 + [64])
	*($5 + [24]) = *($6)
	$7 = ($1 + [72])
	*($5 + [32]) = *($7)
	$8 = *($1)
	$9 = $4
	$4 = ($9 + [-80])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($9 + [-9])
	*($5 + [40]) = $5
	*($5 + [52]) = ($1 + [8])
	*($5 + [48]) = $1
	*($5 + [56]) = ($1 + [16])
	*($5 + [60]) = ($1 + [24])
	*($5 + [64]) = ($1 + [32])
	*($5 + [68]) = $3
	*($5 + [72]) = ($1 + [48])
	*($5 + [76]) = ($1 + [56])
	*($5 + [80]) = $6
	*($5 + [84]) = $7
	*($5 + [88]) = ($1 + [80])
	*($5 + [92]) = ($1 + [81])
	*($5 + [96]) = ($1 + [82])
	*($5 + [100]) = ($1 + [83])
	*($5 + [104]) = ($1 + [84])
	CALL $87(($5 + [48]), ($5 + [40]))
	CALL db_update_i64(*($1 + [92]), $2, $4, [71])
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$4 = (($5 + [16]) + [8])
	*($5 + [48]) = *($3)
	if ( (CALL $392(($5 + [16]), ($5 + [48]), [8]) == 0) ){ goto $label$4 }
	$9 = ($1 + [96])
	$3 = *($9)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$5 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728576, ($5 + [40]), $8)
	*($9) = $3
	
.LABEL $label$5
	CALL db_idx64_update($3, $2, ($5 + [48]))
	
.LABEL $label$4
	$3 = (($5 + [16]) + [16])
	*($5 + [48]) = *($6)
	if ( (CALL $392($4, ($5 + [48]), [8]) == 0) ){ goto $label$6 }
	$6 = ($1 + [100])
	$4 = *($6)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$7 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728575, ($5 + [40]), $8)
	*($6) = $4
	
.LABEL $label$7
	CALL db_idx64_update($4, $2, ($5 + [48]))
	
.LABEL $label$6
	*($5 + [48]) = *($7)
	if ( (CALL $392($3, ($5 + [48]), [8]) == 0) ){ goto $label$8 }
	$4 = ($1 + [104])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$9 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728574, ($5 + [40]), $8)
	*($4) = $1
	
.LABEL $label$9
	CALL db_idx64_update($1, $2, ($5 + [48]))
	
.LABEL $label$8
	$global$0 = ($5 + [112])
}

void .FUNC $117 (int_32 $0, int_64 $1)
{
	CALL require_auth(*($0))
	CALL $115($0, $1, [0])
}

void .FUNC $114 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	$5 = ($global$0 - [128])
	$global$0 = $5
	CALL require_auth(*($0))
	$6 = CALL $7($0)
	*(($5 + [120])) = [0]
	*($5 + [112]) = (int_64)0
	$7 = CALL $393([8366])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$7 }
	$8 = ((int_32)$6 ^ (int_32)[1])
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$10 }
	*($5 + [112]) = ($7 << [1])
	$6 = (($5 + [112]) | [1])
	if ( $7 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$9 = (($7 + [16]) & [-16])
	$6 = CALL _Znwj($9)
	*($5 + [112]) = ($9 | [1])
	*($5 + [120]) = $6
	*($5 + [116]) = $7
	
.LABEL $label$9
	CALL memcpy($6, [8366], $7)
	
.LABEL $label$8
	*(($6 + $7)) = [0]
	CALL eosio_assert($8, CALL $5($7, [159], ($5 + [112])))
	if ( ((*($5 + [112]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*($5 + [120]))
	
.LABEL $label$11
	$6 = CALL $8($0, $1)
	*(($5 + [104])) = [0]
	*($5 + [96]) = (int_64)0
	$7 = CALL $393([8384])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$6 }
	$8 = ((int_32)$6 ^ (int_32)[1])
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$14 }
	*($5 + [96]) = ($7 << [1])
	$6 = (($5 + [96]) | [1])
	if ( $7 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$9 = (($7 + [16]) & [-16])
	$6 = CALL _Znwj($9)
	*($5 + [96]) = ($9 | [1])
	*($5 + [104]) = $6
	*($5 + [100]) = $7
	
.LABEL $label$13
	CALL memcpy($6, [8384], $7)
	
.LABEL $label$12
	*(($6 + $7)) = [0]
	CALL eosio_assert($8, CALL $5($7, [157], ($5 + [96])))
	if ( ((*($5 + [96]) & [1]) == 0) ){ goto $label$15 }
	CALL _ZdlPv(*($5 + [104]))
	
.LABEL $label$15
	if ( ($3 == 0) ){ goto $label$3 }
	*(($5 + [88])) = [0]
	*($5 + [64]) = $1
	*($5 + [72]) = (int_64)-1
	*($5 + [80]) = (int_64)0
	*($5 + [56]) = *($0)
	$10 = *($2)
	if ( ((int_32)$10 == (int_32)*($2 + [4])) ){ goto $label$2 }
	$11 = (($5 + [8]) | [1])
	$12 = (($5 + [24]) | [1])
	$13 = (($5 + [40]) | [1])
	$14 = (($5 + [56]) + [8])
	$15 = ($2 + [4])
	$16 = (($5 + [56]) + [24])
	$17 = ($5 + [84])
	$9 = [0]
	$6 = [0]
	$8 = *($10)
	if ( ((int_32)[0] != (int_32)[0]) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$7
	CALL $359(($5 + [112]))
	
.LABEL $label$6
	CALL $359(($5 + [96]))
	
.LABEL $label$5
	$18 = [2]
	goto $label$1 
	
.LABEL $label$4
	$18 = [0]
	goto $label$1 
	
.LABEL $label$3
	$18 = [40]
	goto $label$1 
	
.LABEL $label$2
	$18 = [40]
	
.LABEL $label$1
	
.LOOP $label$16:
	goto $label$102 
	
.LABEL $label$103
	$8 = *($10)
	$6 = *($17)
	$9 = *($16)
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$51 }
	$18 = [0]
	goto $label$16 
	
.LABEL $label$102
	$7 = ($6 + [-24])
	$2 = *($7)
	if ( ((int_32)*($2) == (int_32)($8 & [255])) ){ goto $label$47 }
	$18 = [1]
	goto $label$16 
	
.LABEL $label$101
	$6 = $7
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$45 }
	goto $label$46 
	
.LABEL $label$100
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$50 }
	$18 = [51]
	goto $label$16 
	
.LABEL $label$99
	if ( ((int_32)*($2 + [16]) != (int_32)($5 + [56])) ){ goto $label$48 }
	goto $label$49 
	
.LABEL $label$98
	$2 = [0]
	$7 = CALL db_find_i64(*($5 + [56]), *($14), (int_64)-3020377498459275264, ((int_64)(CASTING uint_64)(uint_32 $8) & (int_64)255))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$44 }
	$18 = [3]
	goto $label$16 
	
.LABEL $label$97
	$2 = CALL $23(($5 + [56]), $7)
	if ( ((int_32)*($2 + [16]) == (int_32)($5 + [56])) ){ goto $label$43 }
	$18 = [4]
	goto $label$16 
	
.LABEL $label$96
	CALL eosio_assert([0], [19486])
	$18 = [5]
	goto $label$16 
	
.LABEL $label$95
	*(($8 = (($5 + [40]) + [8]))) = [0]
	*($5 + [40]) = (int_64)0
	$7 = CALL $393([9484])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$42 }
	$18 = [6]
	goto $label$16 
	
.LABEL $label$94
	$9 = ((int_32)$2 != (int_32)[0])
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$41 }
	$18 = [48]
	goto $label$16 
	
.LABEL $label$93
	*($5 + [40]) = ($7 << [1])
	$6 = $13
	if ( $7 ){ goto $label$39 }
	goto $label$40 
	
.LABEL $label$92
	$19 = (($7 + [16]) & [-16])
	$6 = CALL _Znwj($19)
	*($8) = $6
	*($5 + [40]) = ($19 | [1])
	*($5 + [44]) = $7
	$18 = [8]
	goto $label$16 
	
.LABEL $label$91
	CALL memcpy($6, [9484], $7)
	$18 = [9]
	goto $label$16 
	
.LABEL $label$90
	*(($6 + $7)) = [0]
	CALL eosio_assert($9, CALL $5($7, [110], ($5 + [40])))
	if ( ((*($5 + [40]) & [1]) == 0) ){ goto $label$38 }
	$18 = [10]
	goto $label$16 
	
.LABEL $label$89
	CALL _ZdlPv(*($8))
	$18 = [11]
	goto $label$16 
	
.LABEL $label$88
	$6 = *(($2 + [8]))
	$7 = *($2 + [4])
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$37 }
	$18 = [12]
	goto $label$16 
	
.LABEL $label$87
	$20 = *(($10 + [1]))
	$18 = [13]
	goto $label$16 
	
.LABEL $label$86
	if ( ((int_64)*($7) == (int_64)$20) ){ goto $label$35 }
	$18 = [14]
	goto $label$16 
	
.LABEL $label$85
	$7 = ($7 + [24])
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$36 }
	$18 = [15]
	goto $label$16 
	
.LABEL $label$84
	$7 = $6
	$18 = [16]
	goto $label$16 
	
.LABEL $label$83
	*(($8 = (($5 + [24]) + [8]))) = [0]
	*($5 + [24]) = (int_64)0
	$2 = CALL $393([9484])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$34 }
	$18 = [17]
	goto $label$16 
	
.LABEL $label$82
	$9 = ((int_32)$7 != (int_32)$6)
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$33 }
	$18 = [46]
	goto $label$16 
	
.LABEL $label$81
	*($5 + [24]) = ($2 << [1])
	$6 = $12
	if ( $2 ){ goto $label$31 }
	goto $label$32 
	
.LABEL $label$80
	$19 = (($2 + [16]) & [-16])
	$6 = CALL _Znwj($19)
	*($8) = $6
	*($5 + [24]) = ($19 | [1])
	*($5 + [28]) = $2
	$18 = [19]
	goto $label$16 
	
.LABEL $label$79
	CALL memcpy($6, [9484], $2)
	$18 = [20]
	goto $label$16 
	
.LABEL $label$78
	*(($6 + $2)) = [0]
	CALL eosio_assert($9, CALL $5($7, [111], ($5 + [24])))
	if ( ((*($5 + [24]) & [1]) == 0) ){ goto $label$30 }
	$18 = [21]
	goto $label$16 
	
.LABEL $label$77
	CALL _ZdlPv(*($8))
	$18 = [22]
	goto $label$16 
	
.LABEL $label$76
	$20 = *($10 + [2])
	$21 = *($7 + [8])
	*(($2 = (($5 + [8]) + [8]))) = [0]
	*($5 + [8]) = (int_64)0
	$7 = CALL $393([9499])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$29 }
	$18 = [23]
	goto $label$16 
	
.LABEL $label$75
	$8 = ((uint_64)$21 >= (uint_64)$20)
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$28 }
	$18 = [44]
	goto $label$16 
	
.LABEL $label$74
	*($5 + [8]) = ($7 << [1])
	$6 = $11
	if ( $7 ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$73
	$9 = (($7 + [16]) & [-16])
	$6 = CALL _Znwj($9)
	*($2) = $6
	*($5 + [8]) = ($9 | [1])
	*($5 + [12]) = $7
	$18 = [25]
	goto $label$16 
	
.LABEL $label$72
	CALL memcpy($6, [9499], $7)
	$18 = [26]
	goto $label$16 
	
.LABEL $label$71
	*(($6 + $7)) = [0]
	CALL eosio_assert($8, CALL $5($7, [112], ($5 + [8])))
	if ( ((*($5 + [8]) & [1]) == 0) ){ goto $label$25 }
	$18 = [27]
	goto $label$16 
	
.LABEL $label$70
	CALL _ZdlPv(*($2))
	$18 = [28]
	goto $label$16 
	
.LABEL $label$69
	$10 = ($10 + [3])
	if ( ((int_32)$10 != (int_32)*($15)) ){ goto $label$24 }
	$18 = [30]
	goto $label$16 
	
.LABEL $label$68
	$8 = *($5 + [80])
	if ( ($8 == 0) ){ goto $label$23 }
	$18 = [31]
	goto $label$16 
	
.LABEL $label$67
	$9 = ($5 + [84])
	$7 = *($9)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$22 }
	$18 = [32]
	goto $label$16 
	
.LABEL $label$66
	$18 = [33]
	goto $label$16 
	
.LABEL $label$65
	$7 = ($7 + [-24])
	$6 = *($7)
	*($7) = [0]
	if ( ($6 == 0) ){ goto $label$20 }
	$18 = [34]
	goto $label$16 
	
.LABEL $label$64
	$2 = *($6 + [4])
	if ( ($2 == 0) ){ goto $label$19 }
	$18 = [35]
	goto $label$16 
	
.LABEL $label$63
	*(($6 + [8])) = $2
	CALL _ZdlPv($2)
	$18 = [36]
	goto $label$16 
	
.LABEL $label$62
	CALL _ZdlPv($6)
	$18 = [37]
	goto $label$16 
	
.LABEL $label$61
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$21 }
	$18 = [38]
	goto $label$16 
	
.LABEL $label$60
	$7 = *(($5 + [80]))
	goto $label$18 
	
.LABEL $label$59
	$7 = $8
	$18 = [39]
	goto $label$16 
	
.LABEL $label$58
	*($9) = $8
	CALL _ZdlPv($7)
	$18 = [40]
	goto $label$16 
	
.LABEL $label$57
	if ( ((int_32)$4 != (int_32)[2]) ){ goto $label$17 }
	$18 = [42]
	goto $label$16 
	
.LABEL $label$56
	CALL $115($0, $1, $3)
	$global$0 = ($5 + [128])
	return (unreachable)
	
.LABEL $label$55
	CALL $115($0, $1, [0])
	$global$0 = ($5 + [128])
	return (unreachable)
	
.LABEL $label$54
	CALL $359(($5 + [40]))
	
.LABEL $label$53
	CALL $359(($5 + [24]))
	
.LABEL $label$52
	CALL $359(($5 + [8]))
	
.LABEL $label$51
	$18 = [2]
	goto $label$16 
	
.LABEL $label$50
	$18 = [2]
	goto $label$16 
	
.LABEL $label$49
	$18 = [5]
	goto $label$16 
	
.LABEL $label$48
	$18 = [4]
	goto $label$16 
	
.LABEL $label$47
	$18 = [50]
	goto $label$16 
	
.LABEL $label$46
	$18 = [2]
	goto $label$16 
	
.LABEL $label$45
	$18 = [0]
	goto $label$16 
	
.LABEL $label$44
	$18 = [5]
	goto $label$16 
	
.LABEL $label$43
	$18 = [5]
	goto $label$16 
	
.LABEL $label$42
	$18 = [49]
	goto $label$16 
	
.LABEL $label$41
	$18 = [7]
	goto $label$16 
	
.LABEL $label$40
	$18 = [9]
	goto $label$16 
	
.LABEL $label$39
	$18 = [8]
	goto $label$16 
	
.LABEL $label$38
	$18 = [11]
	goto $label$16 
	
.LABEL $label$37
	$18 = [16]
	goto $label$16 
	
.LABEL $label$36
	$18 = [13]
	goto $label$16 
	
.LABEL $label$35
	$18 = [16]
	goto $label$16 
	
.LABEL $label$34
	$18 = [47]
	goto $label$16 
	
.LABEL $label$33
	$18 = [18]
	goto $label$16 
	
.LABEL $label$32
	$18 = [20]
	goto $label$16 
	
.LABEL $label$31
	$18 = [19]
	goto $label$16 
	
.LABEL $label$30
	$18 = [22]
	goto $label$16 
	
.LABEL $label$29
	$18 = [45]
	goto $label$16 
	
.LABEL $label$28
	$18 = [24]
	goto $label$16 
	
.LABEL $label$27
	$18 = [26]
	goto $label$16 
	
.LABEL $label$26
	$18 = [25]
	goto $label$16 
	
.LABEL $label$25
	$18 = [28]
	goto $label$16 
	
.LABEL $label$24
	$18 = [29]
	goto $label$16 
	
.LABEL $label$23
	$18 = [40]
	goto $label$16 
	
.LABEL $label$22
	$18 = [43]
	goto $label$16 
	
.LABEL $label$21
	$18 = [33]
	goto $label$16 
	
.LABEL $label$20
	$18 = [37]
	goto $label$16 
	
.LABEL $label$19
	$18 = [36]
	goto $label$16 
	
.LABEL $label$18
	$18 = [39]
	goto $label$16 
	
.LABEL $label$17
	$18 = [41]
	goto $label$16 
	(unreachable)
	(unreachable)
	$18
	(unreachable)
}

void .FUNC $115 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [80])
	$global$0 = $3
	*($3 + [79]) = $2
	*(($3 + [64])) = [0]
	*(($3 + [70])) = [0]
	*($3 + [48]) = (int_64)-1
	*($3 + [56]) = (int_64)0
	*($3 + [68]) = [0]
	$4 = *($0)
	*($3 + [32]) = $4
	*($3 + [40]) = $4
	$5 = [0]
	$2 = CALL db_find_i64($4, $4, (int_64)-3020371566920728576, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $10(($3 + [32]), $2)
	if ( ((int_32)*($5 + [88]) == (int_32)($3 + [32])) ){ goto $label$1 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$1
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$2 = CALL $393([9258])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$6 = ((int_32)$5 != (int_32)[0])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$5 }
	*($3 + [16]) = ($2 << [1])
	$7 = (($3 + [16]) | [1])
	if ( $2 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$8 = (($2 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($3 + [16]) = ($8 | [1])
	*($3 + [24]) = $7
	*($3 + [20]) = $2
	
.LABEL $label$4
	CALL memcpy($7, [9258], $2)
	
.LABEL $label$3
	*(($7 + $2)) = [0]
	CALL eosio_assert($6, CALL $5($2, [132], ($3 + [16])))
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$4 = *($0)
	*($3 + [8]) = ($3 + [79])
	if ( $5 ){ goto $label$7 }
	CALL eosio_assert([0], [19537])
	
.LABEL $label$7
	CALL $116(($3 + [32]), $5, $4, ($3 + [8]))
	$7 = *($3 + [56])
	if ( ($7 == 0) ){ goto $label$8 }
	$0 = ($3 + [60])
	$2 = *($0)
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [-24])
	$5 = *($2)
	*($2) = [0]
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	$2 = *(($3 + [56]))
	goto $label$9 
	
.LABEL $label$10
	$2 = $7
	
.LABEL $label$9
	*($0) = $7
	CALL _ZdlPv($2)
	
.LABEL $label$8
	$global$0 = ($3 + [80])
	return (unreachable)
	
.LABEL $label$2
	CALL $359(($3 + [16]))
}

void .FUNC $112 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	*($1 + [32]) = [0]
	$5 = ($1 + [40])
	*($4 + [16]) = *($5)
	$6 = ($1 + [64])
	*($4 + [24]) = *($6)
	$7 = ($1 + [72])
	*($4 + [32]) = *($7)
	$8 = *($1)
	$9 = $3
	$3 = ($9 + [-80])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($9 + [-9])
	*($4 + [40]) = $4
	*($4 + [52]) = ($1 + [8])
	*($4 + [48]) = $1
	*($4 + [56]) = ($1 + [16])
	*($4 + [60]) = ($1 + [24])
	*($4 + [64]) = ($1 + [32])
	*($4 + [68]) = $5
	*($4 + [72]) = ($1 + [48])
	*($4 + [76]) = ($1 + [56])
	*($4 + [80]) = $6
	*($4 + [84]) = $7
	*($4 + [88]) = ($1 + [80])
	*($4 + [92]) = ($1 + [81])
	*($4 + [96]) = ($1 + [82])
	*($4 + [100]) = ($1 + [83])
	*($4 + [104]) = ($1 + [84])
	CALL $87(($4 + [48]), ($4 + [40]))
	CALL db_update_i64(*($1 + [92]), $2, $3, [71])
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($4 + [16]) + [8])
	*($4 + [48]) = *($5)
	if ( (CALL $392(($4 + [16]), ($4 + [48]), [8]) == 0) ){ goto $label$4 }
	$9 = ($1 + [96])
	$5 = *($9)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728576, ($4 + [40]), $8)
	*($9) = $5
	
.LABEL $label$5
	CALL db_idx64_update($5, $2, ($4 + [48]))
	
.LABEL $label$4
	$5 = (($4 + [16]) + [16])
	*($4 + [48]) = *($6)
	if ( (CALL $392($3, ($4 + [48]), [8]) == 0) ){ goto $label$6 }
	$6 = ($1 + [100])
	$3 = *($6)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$7 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728575, ($4 + [40]), $8)
	*($6) = $3
	
.LABEL $label$7
	CALL db_idx64_update($3, $2, ($4 + [48]))
	
.LABEL $label$6
	*($4 + [48]) = *($7)
	if ( (CALL $392($5, ($4 + [48]), [8]) == 0) ){ goto $label$8 }
	$3 = ($1 + [104])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$9 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728574, ($4 + [40]), $8)
	*($3) = $1
	
.LABEL $label$9
	CALL db_idx64_update($1, $2, ($4 + [48]))
	
.LABEL $label$8
	$global$0 = ($4 + [112])
}

void .FUNC $113 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	$6 = *($1)
	if ( (*(*($3)) == 0) ){ goto $label$13 }
	*(($5 + [32])) = [0]
	*($5 + [24]) = (int_64)0
	$7 = *($1 + [41])
	$3 = CALL $393([19910])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$6 }
	$8 = ((int_32)$7 != (int_32)[0])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$12 }
	*($5 + [24]) = ($3 << [1])
	$7 = (($5 + [24]) | [1])
	if ( $3 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$13
	*(($5 + [32])) = [0]
	*($5 + [24]) = (int_64)0
	$7 = *($1 + [40])
	$3 = CALL $393([19940])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$5 }
	$8 = ($7 <= [6])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$9 }
	*($5 + [24]) = ($3 << [1])
	$7 = (($5 + [24]) | [1])
	if ( $3 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$12
	$9 = (($3 + [16]) & [-16])
	$7 = CALL _Znwj($9)
	*($5 + [24]) = ($9 | [1])
	*($5 + [32]) = $7
	*($5 + [28]) = $3
	
.LABEL $label$11
	CALL memcpy($7, [19910], $3)
	
.LABEL $label$10
	*(($7 + $3)) = [0]
	CALL eosio_assert($8, CALL $5($5, [134], ($5 + [24])))
	if ( ((*($5 + [24]) & [1]) == 0) ){ goto $label$14 }
	CALL _ZdlPv(*($5 + [32]))
	
.LABEL $label$14
	*(($3 = ($1 + [41]))) = (*($3) + [-1])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$9
	$9 = (($3 + [16]) & [-16])
	$7 = CALL _Znwj($9)
	*($5 + [24]) = ($9 | [1])
	*($5 + [32]) = $7
	*($5 + [28]) = $3
	
.LABEL $label$8
	CALL memcpy($7, [19940], $3)
	
.LABEL $label$7
	*(($7 + $3)) = [0]
	CALL eosio_assert($8, CALL $5($5, [134], ($5 + [24])))
	if ( ((*($5 + [24]) & [1]) == 0) ){ goto $label$15 }
	CALL _ZdlPv(*($5 + [32]))
	
.LABEL $label$15
	*(($3 = ($1 + [40]))) = (*($3) + [1])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	CALL $359(($5 + [24]))
	
.LABEL $label$5
	CALL $359(($5 + [24]))
	
.LABEL $label$4
	CALL eosio_assert([0], [19669])
	
.LABEL $label$3
	$4 = $4
	$3 = ($4 + [-64])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-13])
	*($5 + [16]) = $5
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [24])
	*($5 + [40]) = ($1 + [32])
	*($5 + [44]) = ($1 + [40])
	*($5 + [48]) = ($1 + [41])
	*($5 + [52]) = ($1 + [42])
	*($5 + [56]) = ($1 + [48])
	CALL $203(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [60]), $2, $3, [51])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$16 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	$global$0 = ($5 + [64])
	(unreachable)
	(unreachable)
}

void .FUNC $110 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	$6 = ($1 + [40])
	*($5 + [16]) = *($6)
	$7 = ($1 + [64])
	*($5 + [24]) = *($7)
	$8 = ($1 + [72])
	*($5 + [32]) = *($8)
	$9 = *(($3 + [4]))
	$10 = *($1)
	$3 = *(*($3))
	if ( ((int_32)$3 == (int_32)[3]) ){ goto $label$6 }
	$11 = (int_64)0
	if ( ((int_32)$3 == (int_32)[2]) ){ goto $label$5 }
	if ( ((int_32)$3 != (int_32)[1]) ){ goto $label$3 }
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)*($9))
	$12 = (int_64)0
	goto $label$4 
	
.LABEL $label$6
	$11 = *($9)
	goto $label$3 
	
.LABEL $label$5
	$12 = *($9)
	
.LABEL $label$4
	*($1 + [16]) = ((int_64)*($1 + [16]) + (int_64)$12)
	
.LABEL $label$3
	*($1 + [24]) = ((int_64)*($1 + [24]) + (int_64)$11)
	$4 = $4
	$3 = ($4 + [-80])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-9])
	*($5 + [40]) = $5
	*($5 + [52]) = ($1 + [8])
	*($5 + [48]) = $1
	*($5 + [56]) = ($1 + [16])
	*($5 + [60]) = ($1 + [24])
	*($5 + [64]) = ($1 + [32])
	*($5 + [68]) = $6
	*($5 + [72]) = ($1 + [48])
	*($5 + [76]) = ($1 + [56])
	*($5 + [80]) = $7
	*($5 + [84]) = $8
	*($5 + [88]) = ($1 + [80])
	*($5 + [92]) = ($1 + [81])
	*($5 + [96]) = ($1 + [82])
	*($5 + [100]) = ($1 + [83])
	*($5 + [104]) = ($1 + [84])
	CALL $87(($5 + [48]), ($5 + [40]))
	CALL db_update_i64(*($1 + [92]), $2, $3, [71])
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$3 = ($5 + [24])
	*($5 + [48]) = *($6)
	if ( (CALL $392(($5 + [16]), ($5 + [48]), [8]) == 0) ){ goto $label$8 }
	$6 = ($1 + [96])
	$4 = *($6)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$9 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728576, ($5 + [40]), $10)
	*($6) = $4
	
.LABEL $label$9
	CALL db_idx64_update($4, $2, ($5 + [48]))
	
.LABEL $label$8
	$4 = ($5 + [32])
	*($5 + [48]) = *($7)
	if ( (CALL $392($3, ($5 + [48]), [8]) == 0) ){ goto $label$10 }
	$6 = ($1 + [100])
	$3 = *($6)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$11 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728575, ($5 + [40]), $10)
	*($6) = $3
	
.LABEL $label$11
	CALL db_idx64_update($3, $2, ($5 + [48]))
	
.LABEL $label$10
	*($5 + [48]) = *($8)
	if ( (CALL $392($4, ($5 + [48]), [8]) == 0) ){ goto $label$12 }
	$3 = ($1 + [104])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$13 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728574, ($5 + [40]), $10)
	*($3) = $1
	
.LABEL $label$13
	CALL db_idx64_update($1, $2, ($5 + [48]))
	
.LABEL $label$12
	$global$0 = ($5 + [112])
}

void .FUNC $111 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	$6 = ($global$0 - [400])
	$global$0 = $6
	*($6 + [399]) = $5
	CALL require_auth(*($0))
	*(($6 + [384])) = [0]
	*($6 + [360]) = $1
	*($6 + [368]) = (int_64)-1
	*($6 + [376]) = (int_64)0
	$7 = *($0)
	*($6 + [352]) = $7
	$8 = [0]
	$5 = CALL db_find_i64($7, $1, (int_64)-3913339338187833344, *($2))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $12(($6 + [352]), $5)
	if ( ((int_32)*($8 + [88]) == (int_32)($6 + [352])) ){ goto $label$1 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$1
	*(($6 + [344])) = [0]
	*($6 + [336]) = (int_64)0
	$5 = CALL $393([8539])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$5 }
	$9 = ((int_32)$8 != (int_32)[0])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$8 }
	*($6 + [336]) = ($5 << [1])
	$10 = (($6 + [336]) | [1])
	if ( $5 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$11 = (($5 + [16]) & [-16])
	$10 = CALL _Znwj($11)
	*($6 + [336]) = ($11 | [1])
	*($6 + [344]) = $10
	*($6 + [340]) = $5
	
.LABEL $label$7
	CALL memcpy($10, [8539], $5)
	
.LABEL $label$6
	$11 = [0]
	*(($10 + $5)) = [0]
	CALL eosio_assert($9, CALL $5($6, [101], ($6 + [336])))
	if ( ((*($6 + [336]) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*($6 + [344]))
	
.LABEL $label$9
	*(($5 = (($6 + [304]) + [24]))) = *(($2 + [24]))
	*(($10 = (($6 + [304]) + [16]))) = *(($2 + [16]))
	*(($9 = (($6 + [272]) + [16]))) = *(($3 + [16]))
	*(($12 = (($6 + [272]) + [24]))) = *(($3 + [24]))
	*(($13 = (($6 + [240]) + [16]))) = *(($4 + [16]))
	*(($14 = (($6 + [240]) + [24]))) = *(($4 + [24]))
	*($6 + [304]) = *($2)
	*($6 + [272]) = *($3)
	*($6 + [240]) = *($4)
	*($6 + [312]) = *(($2 + [8]))
	*($6 + [280]) = *(($3 + [8]))
	*($6 + [248]) = *(($4 + [8]))
	*((($6 + [64]) + [24])) = *($5)
	$7 = *($8 + [80])
	*((($6 + [64]) + [16])) = *($10)
	*((($6 + [32]) + [24])) = *($12)
	*((($6 + [32]) + [16])) = *($9)
	*(($6 + [24])) = *($14)
	*(($6 + [16])) = *($13)
	*($6 + [72]) = *($6 + [312])
	*($6 + [64]) = *($6 + [304])
	*($6 + [40]) = *($6 + [280])
	*($6 + [32]) = *($6 + [272])
	*($6 + [8]) = *($6 + [248])
	*($6) = *($6 + [240])
	$15 = CALL $17($0, $1, ($6 + [64]), ($6 + [32]), $6, $7)
	*(($6 + [232])) = [0]
	*(($6 + [238])) = [0]
	*($6 + [216]) = (int_64)-1
	*($6 + [224]) = (int_64)0
	*($6 + [236]) = [0]
	$7 = *($0)
	*($6 + [200]) = $7
	*($6 + [208]) = $7
	$2 = CALL db_find_i64($7, $7, (int_64)-3020371566920728576, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$10 }
	$11 = CALL $10(($6 + [200]), $2)
	if ( ((int_32)*($11 + [88]) == (int_32)($6 + [200])) ){ goto $label$10 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$10
	*((($6 + [184]) + [8])) = [0]
	*($6 + [184]) = (int_64)0
	$2 = CALL $393([9258])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$4 }
	$3 = ((int_32)$11 != (int_32)[0])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$13 }
	*($6 + [184]) = ($2 << [1])
	$5 = (($6 + [184]) | [1])
	if ( $2 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$4 = (($2 + [16]) & [-16])
	$5 = CALL _Znwj($4)
	*($6 + [184]) = ($4 | [1])
	*($6 + [192]) = $5
	*($6 + [188]) = $2
	
.LABEL $label$12
	CALL memcpy($5, [9258], $2)
	
.LABEL $label$11
	*(($5 + $2)) = [0]
	CALL eosio_assert($3, CALL $5($6, [132], ($6 + [184])))
	if ( ((*($6 + [184]) & [1]) == 0) ){ goto $label$14 }
	CALL _ZdlPv(*($6 + [192]))
	
.LABEL $label$14
	*(($6 + [176])) = [0]
	*($6 + [168]) = (int_64)0
	$3 = *($11 + [32])
	$2 = CALL $393([9410])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$17 }
	*($6 + [168]) = ($2 << [1])
	$5 = (($6 + [168]) | [1])
	if ( $2 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$4 = (($2 + [16]) & [-16])
	$5 = CALL _Znwj($4)
	*($6 + [168]) = ($4 | [1])
	*($6 + [176]) = $5
	*($6 + [172]) = $2
	
.LABEL $label$16
	CALL memcpy($5, [9410], $2)
	
.LABEL $label$15
	*(($5 + $2)) = [0]
	CALL eosio_assert($3, CALL $5($6, [133], ($6 + [168])))
	if ( ((*($6 + [168]) & [1]) == 0) ){ goto $label$18 }
	CALL _ZdlPv(*($6 + [176]))
	
.LABEL $label$18
	$7 = *($0)
	if ( $11 ){ goto $label$19 }
	CALL eosio_assert([0], [19537])
	
.LABEL $label$19
	CALL $112(($6 + [200]), $11, $7)
	*(($6 + [160])) = [0]
	*($6 + [144]) = (int_64)-1
	*($6 + [152]) = (int_64)0
	$7 = *($0)
	*($6 + [128]) = $7
	*($6 + [136]) = $7
	$5 = [0]
	$2 = CALL db_find_i64($7, $7, (int_64)-6039700478021828608, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$20 }
	$5 = CALL $78(($6 + [128]), $2)
	if ( ((int_32)*($5 + [56]) == (int_32)($6 + [128])) ){ goto $label$20 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$20
	*(($6 + [120])) = [0]
	*($6 + [112]) = (int_64)0
	$2 = CALL $393([9258])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = ((int_32)$5 != (int_32)[0])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$23 }
	*($6 + [112]) = ($2 << [1])
	$11 = (($6 + [112]) | [1])
	if ( $2 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	$4 = (($2 + [16]) & [-16])
	$11 = CALL _Znwj($4)
	*($6 + [112]) = ($4 | [1])
	*($6 + [120]) = $11
	*($6 + [116]) = $2
	
.LABEL $label$22
	CALL memcpy($11, [9258], $2)
	
.LABEL $label$21
	*(($11 + $2)) = [0]
	CALL eosio_assert($3, CALL $5($6, [132], ($6 + [112])))
	if ( ((*($6 + [112]) & [1]) == 0) ){ goto $label$24 }
	CALL _ZdlPv(*($6 + [120]))
	
.LABEL $label$24
	$7 = *($0)
	*($6 + [108]) = $0
	*($6 + [104]) = ($6 + [399])
	if ( $5 ){ goto $label$25 }
	CALL eosio_assert([0], [19537])
	
.LABEL $label$25
	CALL $113(($6 + [128]), $5, $7, ($6 + [104]))
	$7 = ((uint_64)$15 % (uint_64)(int_64)100000)
	CALL $20($0, $1, (CASTING uint_32)(uint_64 ((int_64)((int_64)((uint_64)$15 % (uint_64)(int_64)20) + (int_64)( (int_64)0 ? ( (int_64)20 ? (int_64)40 : (uint_64)($7 <= (int_64)96798) ) : (uint_64)($7 <= (int_64)65798) )) + (int_64)1)))
	$5 = *($6 + [152])
	if ( ($5 == 0) ){ goto $label$26 }
	$11 = ($6 + [156])
	$0 = *($11)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$28 }
	
.LOOP $label$29:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$30 }
	CALL _ZdlPv($2)
	
.LABEL $label$30
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$29 }
	$0 = *(($6 + [152]))
	goto $label$27 
	
.LABEL $label$28
	$0 = $5
	
.LABEL $label$27
	*($11) = $5
	CALL _ZdlPv($0)
	
.LABEL $label$26
	$5 = *($6 + [224])
	if ( ($5 == 0) ){ goto $label$31 }
	$11 = ($6 + [228])
	$0 = *($11)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$33 }
	
.LOOP $label$34:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$35 }
	CALL _ZdlPv($2)
	
.LABEL $label$35
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$34 }
	$0 = *(($6 + [224]))
	goto $label$32 
	
.LABEL $label$33
	$0 = $5
	
.LABEL $label$32
	*($11) = $5
	CALL _ZdlPv($0)
	
.LABEL $label$31
	$5 = *($6 + [376])
	if ( ($5 == 0) ){ goto $label$36 }
	$11 = ($6 + [380])
	$0 = *($11)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$38 }
	
.LOOP $label$39:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$40 }
	if ( ((*($2 + [32]) & [1]) == 0) ){ goto $label$41 }
	CALL _ZdlPv(*(($2 + [40])))
	
.LABEL $label$41
	CALL _ZdlPv($2)
	
.LABEL $label$40
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$39 }
	$0 = *(($6 + [376]))
	goto $label$37 
	
.LABEL $label$38
	$0 = $5
	
.LABEL $label$37
	*($11) = $5
	CALL _ZdlPv($0)
	
.LABEL $label$36
	$global$0 = ($6 + [400])
	return (unreachable)
	
.LABEL $label$5
	CALL $359(($6 + [336]))
	
.LABEL $label$4
	CALL $359(($6 + [184]))
	
.LABEL $label$3
	CALL $359(($6 + [168]))
	
.LABEL $label$2
	CALL $359(($6 + [112]))
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $118 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$4 = ($global$0 - [288])
	$global$0 = $4
	*($4 + [287]) = $3
	CALL require_auth($1)
	$5 = CALL $7($0)
	*(($4 + [280])) = [0]
	*($4 + [272]) = (int_64)0
	$3 = CALL $393([8366])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$10 }
	$6 = ((int_32)$5 ^ (int_32)[1])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$13 }
	*($4 + [272]) = ($3 << [1])
	$5 = (($4 + [272]) | [1])
	if ( $3 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$7 = (($3 + [16]) & [-16])
	$5 = CALL _Znwj($7)
	*($4 + [272]) = ($7 | [1])
	*($4 + [280]) = $5
	*($4 + [276]) = $3
	
.LABEL $label$12
	CALL memcpy($5, [8366], $3)
	
.LABEL $label$11
	*(($5 + $3)) = [0]
	CALL eosio_assert($6, CALL $5($4, [159], ($4 + [272])))
	if ( ((*($4 + [272]) & [1]) == 0) ){ goto $label$14 }
	CALL _ZdlPv(*($4 + [280]))
	
.LABEL $label$14
	$5 = CALL $8($0, $1)
	*(($4 + [264])) = [0]
	*($4 + [256]) = (int_64)0
	$3 = CALL $393([8384])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$9 }
	$6 = ((int_32)$5 ^ (int_32)[1])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$17 }
	*($4 + [256]) = ($3 << [1])
	$5 = (($4 + [256]) | [1])
	if ( $3 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$7 = (($3 + [16]) & [-16])
	$5 = CALL _Znwj($7)
	*($4 + [256]) = ($7 | [1])
	*($4 + [264]) = $5
	*($4 + [260]) = $3
	
.LABEL $label$16
	CALL memcpy($5, [8384], $3)
	
.LABEL $label$15
	*(($5 + $3)) = [0]
	CALL eosio_assert($6, CALL $5($4, [157], ($4 + [256])))
	if ( ((*($4 + [256]) & [1]) == 0) ){ goto $label$18 }
	CALL _ZdlPv(*($4 + [264]))
	
.LABEL $label$18
	$5 = CALL $52($0, $1)
	*(($4 + [248])) = [0]
	*($4 + [240]) = (int_64)0
	$3 = CALL $393([8973])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$8 }
	$6 = ((int_32)$5 ^ (int_32)[1])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$21 }
	*($4 + [240]) = ($3 << [1])
	$5 = (($4 + [240]) | [1])
	if ( $3 ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	$7 = (($3 + [16]) & [-16])
	$5 = CALL _Znwj($7)
	*($4 + [240]) = ($7 | [1])
	*($4 + [248]) = $5
	*($4 + [244]) = $3
	
.LABEL $label$20
	CALL memcpy($5, [8973], $3)
	
.LABEL $label$19
	*(($5 + $3)) = [0]
	CALL eosio_assert($6, CALL $5($4, [158], ($4 + [240])))
	if ( ((*($4 + [240]) & [1]) == 0) ){ goto $label$22 }
	CALL _ZdlPv(*($4 + [248]))
	
.LABEL $label$22
	*(($4 + [232])) = [0]
	*($4 + [224]) = (int_64)0
	$3 = CALL $393([8932])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$7 }
	$7 = ($2 <= [240])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$25 }
	*($4 + [224]) = ($3 << [1])
	$5 = (($4 + [224]) | [1])
	if ( $3 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$6 = (($3 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($4 + [224]) = ($6 | [1])
	*($4 + [232]) = $5
	*($4 + [228]) = $3
	
.LABEL $label$24
	CALL memcpy($5, [8932], $3)
	
.LABEL $label$23
	$6 = [0]
	*(($5 + $3)) = [0]
	CALL eosio_assert($7, CALL $5($4, [166], ($4 + [224])))
	if ( ((*($4 + [224]) & [1]) == 0) ){ goto $label$26 }
	CALL _ZdlPv(*($4 + [232]))
	
.LABEL $label$26
	*(($4 + [216])) = [0]
	*($4 + [200]) = (int_64)-1
	*($4 + [208]) = (int_64)0
	$8 = *($0)
	*($4 + [184]) = $8
	*($4 + [192]) = $1
	$9 = (CASTING uint_64)(uint_32 $2)
	$3 = CALL db_find_i64($8, $1, (int_64)-3020377498459275264, $9)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$27 }
	$6 = CALL $23(($4 + [184]), $3)
	if ( ((int_32)*($6 + [16]) == (int_32)($4 + [184])) ){ goto $label$27 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$27
	*(($4 + [176])) = [0]
	*($4 + [168]) = (int_64)0
	$3 = CALL $393([9484])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$6 }
	$7 = ((int_32)$6 != (int_32)[0])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$30 }
	*($4 + [168]) = ($3 << [1])
	$5 = (($4 + [168]) | [1])
	if ( $3 ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	$10 = (($3 + [16]) & [-16])
	$5 = CALL _Znwj($10)
	*($4 + [168]) = ($10 | [1])
	*($4 + [176]) = $5
	*($4 + [172]) = $3
	
.LABEL $label$29
	CALL memcpy($5, [9484], $3)
	
.LABEL $label$28
	*(($5 + $3)) = [0]
	CALL eosio_assert($7, CALL $5($4, [110], ($4 + [168])))
	if ( ((*($4 + [168]) & [1]) == 0) ){ goto $label$31 }
	CALL _ZdlPv(*($4 + [176]))
	
.LABEL $label$31
	$5 = *(($6 + [8]))
	$3 = *($6 + [4])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$32 }
	$8 = *($4 + [287])
	
.LOOP $label$33:
	if ( ((int_64)*($3) == (int_64)$8) ){ goto $label$32 }
	$3 = ($3 + [24])
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$33 }
	$3 = $5
	
.LABEL $label$32
	*((($4 + [144]) + [8])) = [0]
	*($4 + [144]) = (int_64)0
	*($4 + [160]) = $3
	$7 = CALL $393([9484])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$5 }
	$5 = ((int_32)$3 != (int_32)$5)
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$36 }
	*($4 + [144]) = ($7 << [1])
	$3 = (($4 + [144]) | [1])
	if ( $7 ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$36
	$10 = (($7 + [16]) & [-16])
	$3 = CALL _Znwj($10)
	*($4 + [144]) = ($10 | [1])
	*($4 + [152]) = $3
	*($4 + [148]) = $7
	
.LABEL $label$35
	CALL memcpy($3, [9484], $7)
	
.LABEL $label$34
	*(($3 + $7)) = [0]
	CALL eosio_assert($5, CALL $5($4, [111], ($4 + [144])))
	if ( ((*($4 + [144]) & [1]) == 0) ){ goto $label$37 }
	CALL _ZdlPv(*($4 + [152]))
	
.LABEL $label$37
	$8 = *(*($4 + [160]) + [8])
	*(($4 + [136])) = [0]
	*($4 + [128]) = (int_64)0
	$3 = CALL $393([9499])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$4 }
	$7 = ((int_64)$8 != (int_64)0)
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$40 }
	*($4 + [128]) = ($3 << [1])
	$5 = (($4 + [128]) | [1])
	if ( $3 ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$40
	$10 = (($3 + [16]) & [-16])
	$5 = CALL _Znwj($10)
	*($4 + [128]) = ($10 | [1])
	*($4 + [136]) = $5
	*($4 + [132]) = $3
	
.LABEL $label$39
	CALL memcpy($5, [9499], $3)
	
.LABEL $label$38
	*(($5 + $3)) = [0]
	CALL eosio_assert($7, CALL $5($4, [112], ($4 + [128])))
	if ( ((*($4 + [128]) & [1]) == 0) ){ goto $label$41 }
	CALL _ZdlPv(*($4 + [136]))
	
.LABEL $label$41
	$8 = *($0)
	*($4 + [92]) = ($4 + [160])
	*($4 + [88]) = ($4 + [287])
	if ( $6 ){ goto $label$42 }
	CALL eosio_assert([0], [19537])
	
.LABEL $label$42
	CALL $119(($4 + [184]), $6, $8, ($4 + [88]))
	$5 = *(($4 + [212]))
	$7 = *(($4 + [208]))
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$44 }
	
.LOOP $label$46:
	$3 = ($5 + [-24])
	$6 = *($3)
	if ( ((int_32)*($6) == (int_32)$2) ){ goto $label$45 }
	$5 = $3
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$46 }
	goto $label$44 
	
.LABEL $label$45
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$44 }
	if ( ((int_32)*($6 + [16]) == (int_32)($4 + [184])) ){ goto $label$43 }
	CALL eosio_assert([0], [19486])
	goto $label$43 
	
.LABEL $label$44
	$6 = [0]
	$3 = CALL db_find_i64(*($4 + [184]), *(($4 + [192])), (int_64)-3020377498459275264, $9)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$43 }
	$6 = CALL $23(($4 + [184]), $3)
	if ( ((int_32)*($6 + [16]) == (int_32)($4 + [184])) ){ goto $label$43 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$43
	if ( ((int_32)*(($6 + [8])) != (int_32)*($6 + [4])) ){ goto $label$47 }
	if ( $6 ){ goto $label$48 }
	CALL eosio_assert([0], [19223])
	CALL eosio_assert([0], [19257])
	
.LABEL $label$48
	$3 = CALL db_next_i64(*($6 + [20]), ($4 + [88]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$49 }
	CALL $23(($4 + [184]), $3)
	
.LABEL $label$49
	CALL $39(($4 + [184]), $6)
	
.LABEL $label$47
	*(($4 + [120])) = [0]
	*(($4 + [126])) = [0]
	*($4 + [104]) = (int_64)-1
	*($4 + [112]) = (int_64)0
	*($4 + [124]) = [0]
	$8 = *($0)
	*($4 + [88]) = $8
	*($4 + [96]) = $8
	$5 = [0]
	$3 = CALL db_find_i64($8, $8, (int_64)-3020371566920728576, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$50 }
	$5 = CALL $10(($4 + [88]), $3)
	if ( ((int_32)*($5 + [88]) == (int_32)($4 + [88])) ){ goto $label$50 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$50
	*(($4 + [80])) = [0]
	*($4 + [72]) = (int_64)0
	$3 = CALL $393([9258])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$3 }
	$2 = ((int_32)$5 != (int_32)[0])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$53 }
	*($4 + [72]) = ($3 << [1])
	$6 = (($4 + [72]) | [1])
	if ( $3 ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$53
	$7 = (($3 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($4 + [72]) = ($7 | [1])
	*($4 + [80]) = $6
	*($4 + [76]) = $3
	
.LABEL $label$52
	CALL memcpy($6, [9258], $3)
	
.LABEL $label$51
	*(($6 + $3)) = [0]
	CALL eosio_assert($2, CALL $5($4, [132], ($4 + [72])))
	if ( ((*($4 + [72]) & [1]) == 0) ){ goto $label$54 }
	CALL _ZdlPv(*($4 + [80]))
	
.LABEL $label$54
	*(($4 + [64])) = [0]
	*($4 + [56]) = (int_64)0
	$2 = *($5 + [32])
	$3 = CALL $393([9410])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$57 }
	*($4 + [56]) = ($3 << [1])
	$6 = (($4 + [56]) | [1])
	if ( $3 ){ goto $label$56 }
	goto $label$55 
	
.LABEL $label$57
	$5 = (($3 + [16]) & [-16])
	$6 = CALL _Znwj($5)
	*($4 + [56]) = ($5 | [1])
	*($4 + [64]) = $6
	*($4 + [60]) = $3
	
.LABEL $label$56
	CALL memcpy($6, [9410], $3)
	
.LABEL $label$55
	$5 = [0]
	*(($6 + $3)) = [0]
	CALL eosio_assert($2, CALL $5($4, [133], ($4 + [56])))
	if ( ((*($4 + [56]) & [1]) == 0) ){ goto $label$58 }
	CALL _ZdlPv(*($4 + [64]))
	
.LABEL $label$58
	*(($4 + [48])) = [0]
	*($4 + [32]) = (int_64)-1
	*($4 + [40]) = (int_64)0
	$8 = *($0)
	*($4 + [16]) = $8
	*($4 + [24]) = $8
	$3 = CALL db_find_i64($8, $8, (int_64)-6039700478021828608, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$59 }
	$5 = CALL $78(($4 + [16]), $3)
	if ( ((int_32)*($5 + [56]) == (int_32)($4 + [16])) ){ goto $label$59 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$59
	*(($4 + [8])) = [0]
	*($4) = (int_64)0
	$3 = CALL $393([9258])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = ((int_32)$5 != (int_32)[0])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$62 }
	*($4) = ($3 << [1])
	$6 = ($4 | [1])
	if ( $3 ){ goto $label$61 }
	goto $label$60 
	
.LABEL $label$62
	$7 = (($3 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($4) = ($7 | [1])
	*($4 + [8]) = $6
	*($4 + [4]) = $3
	
.LABEL $label$61
	CALL memcpy($6, [9258], $3)
	
.LABEL $label$60
	*(($6 + $3)) = [0]
	CALL eosio_assert($2, CALL $5($4, [132], $4))
	if ( ((*($4) & [1]) == 0) ){ goto $label$63 }
	CALL _ZdlPv(*($4 + [8]))
	
.LABEL $label$63
	$8 = *($0)
	if ( $5 ){ goto $label$64 }
	CALL eosio_assert([0], [19537])
	
.LABEL $label$64
	CALL $120(($4 + [16]), $5, $8)
	$6 = *($4 + [40])
	if ( ($6 == 0) ){ goto $label$65 }
	$2 = ($4 + [44])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$67 }
	
.LOOP $label$68:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$69 }
	CALL _ZdlPv($5)
	
.LABEL $label$69
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$68 }
	$3 = *(($4 + [40]))
	goto $label$66 
	
.LABEL $label$67
	$3 = $6
	
.LABEL $label$66
	*($2) = $6
	CALL _ZdlPv($3)
	
.LABEL $label$65
	$6 = *($4 + [112])
	if ( ($6 == 0) ){ goto $label$70 }
	$2 = ($4 + [116])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$72 }
	
.LOOP $label$73:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$74 }
	CALL _ZdlPv($5)
	
.LABEL $label$74
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$73 }
	$3 = *(($4 + [112]))
	goto $label$71 
	
.LABEL $label$72
	$3 = $6
	
.LABEL $label$71
	*($2) = $6
	CALL _ZdlPv($3)
	
.LABEL $label$70
	$2 = *($4 + [208])
	if ( ($2 == 0) ){ goto $label$75 }
	$7 = ($4 + [212])
	$3 = *($7)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$77 }
	
.LOOP $label$78:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$79 }
	$6 = *($5 + [4])
	if ( ($6 == 0) ){ goto $label$80 }
	*(($5 + [8])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$80
	CALL _ZdlPv($5)
	
.LABEL $label$79
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$78 }
	$3 = *(($4 + [208]))
	goto $label$76 
	
.LABEL $label$77
	$3 = $2
	
.LABEL $label$76
	*($7) = $2
	CALL _ZdlPv($3)
	
.LABEL $label$75
	$global$0 = ($4 + [288])
	return (unreachable)
	
.LABEL $label$10
	CALL $359(($4 + [272]))
	
.LABEL $label$9
	CALL $359(($4 + [256]))
	
.LABEL $label$8
	CALL $359(($4 + [240]))
	
.LABEL $label$7
	CALL $359(($4 + [224]))
	
.LABEL $label$6
	CALL $359(($4 + [168]))
	
.LABEL $label$5
	CALL $359(($4 + [144]))
	
.LABEL $label$4
	CALL $359(($4 + [128]))
	
.LABEL $label$3
	CALL $359(($4 + [72]))
	
.LABEL $label$2
	CALL $359(($4 + [56]))
	
.LABEL $label$1
	CALL $359($4)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $119 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	$6 = *($1)
	*($5 + [16]) = *(*($3))
	$7 = *($3 + [4])
	$8 = *($7)
	*($5 + [32]) = *($8 + [16])
	*($5 + [24]) = ((int_64)*($8 + [8]) + (int_64)-1)
	$7 = *($7)
	$10 = ($7 + [24])
	$9 = ($1 + [8])
	$11 = (*($9) - $10)
	$12 = ((int_32)$11 / (int_32)[24])
	$8 = $7
	if ( ($11 == 0) ){ goto $label$3 }
	CALL memmove($7, $10, $11)
	$8 = *(*(($3 + [4])))
	
.LABEL $label$3
	$3 = ($7 + ((int_32)$12 * (int_32)[24]))
	*($9) = $3
	if ( ((int_64)*($8 + [8]) != (int_64)1) ){ goto $label$5 }
	if ( (int_64)(*($8 + [16]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((int_32)$3 == (int_32)*(($1 + [12]))) ){ goto $label$6 }
	*($3) = *($5 + [16])
	*(($3 + [16])) = *((($5 + [16]) + [16]))
	*(($3 + [8])) = *((($5 + [16]) + [8]))
	*(($3 = ($1 + [8]))) = (*($3) + [24])
	goto $label$4 
	
.LABEL $label$6
	CALL $294(($1 + [4]), ($5 + [16]))
	
.LABEL $label$4
	$13 = (CASTING uint_64)(uint_32 $6)
	if ( ((int_32)($6 & [255]) == (int_32)*($1)) ){ goto $label$7 }
	CALL eosio_assert([0], [19669])
	
.LABEL $label$7
	$14 = ((int_64)$13 & (int_64)255)
	$8 = *($1 + [4])
	$7 = *($1 + [8])
	$6 = ($7 - $8)
	$13 = (CASTING uint_64)(uint_32 ((int_32)$6 / (int_32)[24]))
	$3 = [25]
	
.LOOP $label$8:
	$3 = ($3 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$8 }
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$12 }
	$11 = (((int_32)((uint_32)($6 + [-24]) / (uint_32)[24]) * (int_32)[24]) + $3)
	if ( ($11 <= [513]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$11 = ($3 + [-24])
	if ( ((uint_32)$11 >= (uint_32)[513]) ){ goto $label$10 }
	
.LABEL $label$11
	$6 = ($4 - (($11 + [15]) & [-16]))
	$global$0 = $6
	goto $label$9 
	
.LABEL $label$10
	$6 = CALL $397($11)
	
.LABEL $label$9
	*($5 + [4]) = $6
	*($5) = $6
	*($5 + [8]) = ($6 + $11)
	$3 = $6
	if ( ((int_32)$11 > (int_32)[0]) ){ goto $label$13 }
	CALL eosio_assert([0], [18965])
	$3 = *($5 + [4])
	
.LABEL $label$13
	CALL memcpy($3, $1, [1])
	$3 = ($3 + [1])
	*($5 + [4]) = $3
	$13 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [8])) - *(($1 + [4]))) / (int_32)[24]))
	
.LOOP $label$14:
	$7 = (CASTING uint_32)(uint_64 $13)
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	$8 = ((int_64)$13) != (int_64)0
	*($5 + [16]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*(($5 + [8])) - $3) > (int_32)[0]) ){ goto $label$15 }
	CALL eosio_assert([0], [18965])
	$3 = *($5 + [4])
	
.LABEL $label$15
	CALL memcpy($3, ($5 + [16]), [1])
	$3 = ($3 + [1])
	*($5 + [4]) = $3
	if ( $8 ){ goto $label$14 }
	$7 = *(($1 + [8]))
	$3 = *(($1 + [4]))
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$16 }
	
.LOOP $label$17:
	*($5 + [40]) = $5
	*($5 + [16]) = $3
	*((($5 + [16]) + [8])) = ($3 + [16])
	*($5 + [20]) = ($3 + [8])
	CALL $295(($5 + [16]), ($5 + [40]))
	$3 = ($3 + [24])
	if ( ((int_32)$3 != (int_32)$7) ){ goto $label$17 }
	
.LABEL $label$16
	CALL db_update_i64(*(($1 + [20])), $2, $6, $11)
	if ( ((uint_32)$11 >= (uint_32)[513]) ){ goto $label$20 }
	if ( ((uint_64)*($0 + [16]) <= (uint_64)$14) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	CALL $400($6)
	if ( ((uint_64)*($0 + [16]) > (uint_64)$14) ){ goto $label$18 }
	
.LABEL $label$19
	*(($0 + [16])) = ((int_64)$14 + (int_64)1)
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$18
	$global$0 = ($5 + [48])
}

void .FUNC $299 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[31]) ){ goto $label$2 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [32])
	*(($4 = ($4 + [4]))) = (*($4) + [32])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[1]) ){ goto $label$8 }
	CALL eosio_assert([0], [18965])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [2])
	*(($4 = ($4 + [4]))) = (*($4) + [2])
	$4 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [18965])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($1, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $298 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [100]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [19834])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-4421665485641187328)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [19780])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [19780])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $72(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $295 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [18965])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [18965])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [18965])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $294 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ((int_32)($2 - $3) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$6 = [178956970]
	$7 = ((int_32)(*($0 + [8]) - $3) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$4 }
	$6 = ($7 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL _Znwj(((int_32)$6 * (int_32)[24]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $377($0)
	
.LABEL $label$1
	*(($4 = ($5 + ((int_32)$4 * (int_32)[24])))) = *($1)
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	$1 = ($2 - $3)
	$2 = ($4 + ((int_32)((int_32)$1 / (int_32)[-24]) * (int_32)[24]))
	$6 = ($5 + ((int_32)$6 * (int_32)[24]))
	$4 = ($4 + [24])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $2
	*(($0 + [4])) = $4
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$6 }
	CALL _ZdlPv($3)
	
.LABEL $label$6
	(unreachable)
}

void .FUNC $297 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [1]) >= (uint_32)$1) ){ goto $label$4 }
	$4 = *($0)
	$5 = int_32(($3 - $4) >> [1])
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	$7 = [0]
	$3 = ($2 - $4)
	$3 = ( ( $6 ? $3 : ($3 <= $6) ) ? [2147483647] : (int_32($3 >> [1]) <= [1073741823]) )
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$1 }
	$7 = CALL _Znwj(($3 << [1]))
	
.LABEL $label$5
	$2 = ($7 + ($3 << [1]))
	$4 = ($7 + ($5 << [1]))
	$3 = $4
	
.LOOP $label$6:
	*($3) = [0]
	$3 = ($3 + [2])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$6 }
	$6 = ($7 + ($6 << [1]))
	$1 = *($0)
	$5 = ($0 + [4])
	$3 = (*($5) - $1)
	$7 = ($4 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($7, $1, $3)
	$1 = *($0)
	
.LABEL $label$7
	*($0) = $7
	*($5) = $6
	*(($0 + [8])) = $2
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	return (unreachable)
	
.LABEL $label$4
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*($3) = [0]
	$3 = (*($0) + [2])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	
.LABEL $label$3
	return (unreachable)
	
.LABEL $label$2
	CALL $377($0)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $296 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	*($0 + [8 align=4]) = (int_64)0
	*($0 + [24]) = $1
	*(($0 + [16])) = [0]
	$3 = ($0 + [8])
	$4 = *($1 + [4])
	$1 = *($2 + [4])
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$4 = *(($1 + [4]))
	
.LABEL $label$1
	$5 = ($0 + [20])
	CALL memcpy($0, $4, [8])
	*(($4 = ($1 + [4]))) = (*($4) + [8])
	CALL $267($1, $3)
	$1 = *($4)
	if ( ((int_32)*(($1 + [8])) != (int_32)$1) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$1 = *($4)
	
.LABEL $label$2
	CALL memcpy($5, $1, [1])
	*($4) = (*($4) + [1])
	*($0 + [28]) = *(*($2 + [8]))
	return $0
}

int_32 .FUNC $291 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($3 <= *($5)) ){ goto $label$2 }
	CALL eosio_assert([0], [19219])
	$3 = *($6)
	
.LABEL $label$2
	$8 = *($3)
	$3 = ($3 + [1])
	*($6) = $3
	$7 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $7)))
	$7 = ($7 + [7])
	$3 = $3
	if ( ($8 & [128]) ){ goto $label$1 }
	$7 = (CASTING uint_32)(uint_64 $4)
	$3 = *($1)
	$8 = *($1 + [4])
	$6 = ((int_32)($8 - $3) / (int_32)[24])
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$5 }
	CALL $292($1, ($7 - $6))
	$8 = *(($1 + [4]))
	$3 = *($1)
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$6 }
	$8 = ($3 + ((int_32)$7 * (int_32)[24]))
	*(($1 + [4])) = $8
	
.LABEL $label$6
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	*($2 + [8]) = $0
	*($2 + [16]) = $3
	*((($2 + [16]) + [8])) = ($3 + [16])
	*($2 + [20]) = ($3 + [8])
	CALL $293(($2 + [16]), ($2 + [8]))
	$3 = ($3 + [24])
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$7 }
	
.LABEL $label$3
	$global$0 = ($2 + [32])
	return $0
}

void .FUNC $290 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$5 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [13]), $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	*($3) = ((int_32)*($2 + [13]) != (int_32)[0])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$9 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$11 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy(($2 + [15]), $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	*($3) = ((int_32)*($2 + [15]) != (int_32)[0])
	$3 = *($0 + [44])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$12 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$12
	CALL memcpy(($2 + [14]), $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	*($3) = ((int_32)*($2 + [14]) != (int_32)[0])
	$3 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$13 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy(($2 + [12]), $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	*($3) = ((int_32)*($2 + [12]) != (int_32)[0])
	$3 = *($0 + [52])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$14 }
	CALL eosio_assert([0], [19214])
	$5 = *(($4 + [4]))
	
.LABEL $label$14
	CALL memcpy(($2 + [11]), $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	*($3) = ((int_32)*($2 + [11]) != (int_32)[0])
	$4 = *($0 + [56])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$15 }
	CALL eosio_assert([0], [19214])
	$1 = *(($0 + [4]))
	
.LABEL $label$15
	CALL memcpy($4, $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $293 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $292 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $3) / (int_32)[24]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ((int_32)($3 - $4) / (int_32)[24])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$3 }
	$3 = [178956970]
	$2 = ((int_32)($2 - $4) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$6 }
	$3 = ($2 << [1])
	$3 = ( $6 ? $3 : ($3 <= $6) )
	if ( ($3 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj(((int_32)$3 * (int_32)[24]))
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*(($3 + [8])) = (int_64)0
	$3 = (*($0) + [24])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$3 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $377($0)
	
.LABEL $label$2
	$4 = ($2 + ((int_32)$3 * (int_32)[24]))
	$5 = ($2 + ((int_32)$5 * (int_32)[24]))
	$3 = $5
	
.LOOP $label$8:
	*($3) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*(($3 + [8])) = (int_64)0
	$3 = ($3 + [24])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$6 = ($2 + ((int_32)$6 * (int_32)[24]))
	$3 = *($0)
	$7 = ($0 + [4])
	$1 = (*($7) - $3)
	$2 = ($5 + ((int_32)((int_32)$1 / (int_32)[-24]) * (int_32)[24]))
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($7) = $6
	*(($0 + [8])) = $4
	if ( ($3 == 0) ){ goto $label$1 }
	CALL _ZdlPv($3)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $198 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19287])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19332])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [19382])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL _ZdlPv($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [36]))
}

void .FUNC $349 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $3) / (int_32)[56]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ((int_32)($3 - $4) / (int_32)[56])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[76695845]) ){ goto $label$3 }
	$3 = [76695844]
	$2 = ((int_32)($2 - $4) / (int_32)[56])
	if ( ((uint_32)$2 > (uint_32)[38347921]) ){ goto $label$6 }
	$3 = ($2 << [1])
	$3 = ( $6 ? $3 : ($3 <= $6) )
	if ( ($3 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj(((int_32)$3 * (int_32)[56]))
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = (int_64)0
	*($3 + [48]) = (int_64)0
	*(($3 + [40])) = (int_64)0
	*(($3 + [32])) = (int_64)0
	*(($3 + [24])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*(($3 + [8])) = (int_64)0
	$3 = (*($0) + [56])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$3 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $377($0)
	
.LABEL $label$2
	$4 = ($2 + ((int_32)$3 * (int_32)[56]))
	$5 = ($2 + ((int_32)$5 * (int_32)[56]))
	$3 = $5
	
.LOOP $label$8:
	*($3) = (int_64)0
	*(($3 + [40])) = (int_64)0
	*(($3 + [32])) = (int_64)0
	*(($3 + [24])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*(($3 + [8])) = (int_64)0
	*(($3 + [48])) = (int_64)0
	$3 = ($3 + [56])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$6 = ($2 + ((int_32)$6 * (int_32)[56]))
	$3 = *($0)
	$7 = ($0 + [4])
	$1 = (*($7) - $3)
	$2 = ($5 + ((int_32)((int_32)$1 / (int_32)[-56]) * (int_32)[56]))
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($7) = $6
	*(($0 + [8])) = $4
	if ( ($3 == 0) ){ goto $label$1 }
	CALL _ZdlPv($3)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $348 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $3) / (int_32)[112]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ((int_32)($3 - $4) / (int_32)[112])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[38347923]) ){ goto $label$3 }
	$3 = [38347922]
	$2 = ((int_32)($2 - $4) / (int_32)[112])
	if ( ((uint_32)$2 > (uint_32)[19173960]) ){ goto $label$6 }
	$3 = ($2 << [1])
	$3 = ( $6 ? $3 : ($3 <= $6) )
	if ( ($3 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj(((int_32)$3 * (int_32)[112]))
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*(($3 = CALL memset($3, [0], [112])) + [96]) = (int_64)0
	*(($3 + [80])) = (int_64)0
	*($3 + [72]) = (int_64)0
	$3 = (*($0) + [112])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$3 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $377($0)
	
.LABEL $label$2
	$4 = ($2 + ((int_32)$3 * (int_32)[112]))
	$5 = ($2 + ((int_32)$5 * (int_32)[112]))
	$3 = $5
	
.LOOP $label$8:
	*((($3 = CALL memset($3, [0], [112])) + [80])) = (int_64)0
	*(($3 + [72])) = (int_64)0
	*(($3 + [96])) = (int_64)0
	$3 = ($3 + [112])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$6 = ($2 + ((int_32)$6 * (int_32)[112]))
	$1 = *($0)
	$7 = ($0 + [4])
	$3 = (*($7) - $1)
	$2 = ($5 + ((int_32)((int_32)$3 / (int_32)[-112]) * (int_32)[112]))
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($7) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $347 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $3) / (int_32)[112]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ((int_32)($3 - $4) / (int_32)[112])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[38347923]) ){ goto $label$3 }
	$3 = [38347922]
	$2 = ((int_32)($2 - $4) / (int_32)[112])
	if ( ((uint_32)$2 > (uint_32)[19173960]) ){ goto $label$6 }
	$3 = ($2 << [1])
	$3 = ( $6 ? $3 : ($3 <= $6) )
	if ( ($3 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj(((int_32)$3 * (int_32)[112]))
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*(($3 = CALL memset($3, [0], [112])) + [96]) = (int_64)0
	*(($3 + [80])) = (int_64)0
	*($3 + [72]) = (int_64)0
	$3 = (*($0) + [112])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$3 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $377($0)
	
.LABEL $label$2
	$4 = ($2 + ((int_32)$3 * (int_32)[112]))
	$5 = ($2 + ((int_32)$5 * (int_32)[112]))
	$3 = $5
	
.LOOP $label$8:
	*((($3 = CALL memset($3, [0], [112])) + [80])) = (int_64)0
	*(($3 + [72])) = (int_64)0
	*(($3 + [96])) = (int_64)0
	$3 = ($3 + [112])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$6 = ($2 + ((int_32)$6 * (int_32)[112]))
	$1 = *($0)
	$7 = ($0 + [4])
	$3 = (*($7) - $1)
	$2 = ($5 + ((int_32)((int_32)$3 / (int_32)[-112]) * (int_32)[112]))
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($7) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $346 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [4]) >= (uint_32)$1) ){ goto $label$6 }
	$4 = *($0)
	$5 = int_32(($3 - $4) >> [4])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$4 }
	$3 = [268435455]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$7 }
	$3 = int_32($2 >> [3])
	$3 = ( $6 ? $3 : ($3 <= $6) )
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((uint_32)$3 >= (uint_32)[268435456]) ){ goto $label$3 }
	
.LABEL $label$7
	$7 = CALL _Znwj(($3 << [4]))
	goto $label$2 
	
.LABEL $label$6
	$2 = ($0 + [4])
	
.LOOP $label$8:
	*($3) = (int_64)0
	*(($3 + [8])) = (int_64)0
	$3 = (*($2) + [16])
	*($2) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$3 = [0]
	$7 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $377($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$8 = ($7 + ($3 << [4]))
	$9 = ($7 + ($5 << [4]))
	$3 = $9
	
.LOOP $label$9:
	*($3) = (int_64)0
	*(($3 + [8])) = (int_64)0
	$3 = ($3 + [16])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$10 = ($7 + ($6 << [4]))
	$6 = *($0)
	$1 = ($0 + [4])
	$11 = *($1)
	if ( ((int_32)$11 == (int_32)$6) ){ goto $label$11 }
	$12 = (($5 + [-1]) - uint_32((($11 + [-16]) - $6) >> [4]))
	$13 = ($6 - $11)
	$1 = [0]
	
.LOOP $label$12:
	*(($6 = (($3 = ($9 + $1)) + [-12]))) = (int_64)0
	*(($5 = ($3 + [-4]))) = [0]
	$2 = ($11 + $1)
	$4 = ($2 + [-12])
	*($6) = *($4)
	$6 = ($2 + [-4])
	*($5) = *($6)
	*(($3 + [-16])) = *(($2 + [-16]))
	*($6) = [0]
	*($4) = (int_64)0
	$1 = ($1 + [-16])
	if ( ((int_32)$13 != (int_32)$1) ){ goto $label$12 }
	*(($0 + [8])) = $8
	$6 = *($0)
	*($0) = ($7 + ($12 << [4]))
	$3 = ($0 + [4])
	$1 = *($3)
	*($3) = $10
	if ( ((int_32)$1 == (int_32)$6) ){ goto $label$13 }
	
.LOOP $label$14:
	$3 = ($1 + [-16])
	$2 = *(($1 + [-12]))
	if ( ($2 == 0) ){ goto $label$15 }
	*(($1 + [-8])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$15
	$1 = $3
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$14 }
	
.LABEL $label$13
	if ( $6 ){ goto $label$10 }
	goto $label$1 
	
.LABEL $label$11
	*($0) = $9
	*($1) = $10
	*(($0 + [8])) = $8
	if ( ($6 == 0) ){ goto $label$1 }
	
.LABEL $label$10
	CALL _ZdlPv($6)
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

void .FUNC $345 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [1]) >= (uint_32)$1) ){ goto $label$4 }
	$4 = *($0)
	$5 = int_32(($3 - $4) >> [1])
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	$7 = [0]
	$3 = ($2 - $4)
	$3 = ( ( $6 ? $3 : ($3 <= $6) ) ? [2147483647] : (int_32($3 >> [1]) <= [1073741823]) )
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$1 }
	$7 = CALL _Znwj(($3 << [1]))
	
.LABEL $label$5
	$2 = ($7 + ($3 << [1]))
	$4 = ($7 + ($5 << [1]))
	$3 = $4
	
.LOOP $label$6:
	*($3) = [0]
	$3 = ($3 + [2])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$6 }
	$6 = ($7 + ($6 << [1]))
	$1 = *($0)
	$5 = ($0 + [4])
	$3 = (*($5) - $1)
	$7 = ($4 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($7, $1, $3)
	$1 = *($0)
	
.LABEL $label$7
	*($0) = $7
	*($5) = $6
	*(($0 + [8])) = $2
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	return (unreachable)
	
.LABEL $label$4
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*($3) = [0]
	$3 = (*($0) + [2])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	
.LABEL $label$3
	return (unreachable)
	
.LABEL $label$2
	CALL $377($0)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $212 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	*($1 + [8]) = (*(*(*($3) + [4]) + [8]) + [1])
	$3 = ($1 + [8])
	$6 = *($1)
	if ( (*([0] + [10328]) == 0) ){ goto $label$4 }
	*($1 + [16]) = *([0] + [10320])
	goto $label$3 
	
.LABEL $label$4
	$8 = CALL current_time()
	*([0] + [10320]) = $8
	*([0] + [10328]) = [1]
	*($1 + [16]) = $8
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [19669])
	
.LABEL $label$3
	$7 = $4
	$4 = ($7 + [-32])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($7 + [-14])
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $3
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [16])
	CALL $328(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [28]), $2, $4, [18])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$5 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = ($5 + [48])
}

int_32 .FUNC $343 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($3 <= *($5)) ){ goto $label$2 }
	CALL eosio_assert([0], [19219])
	$3 = *($6)
	
.LABEL $label$2
	$8 = *($3)
	$3 = ($3 + [1])
	*($6) = $3
	$7 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $7)))
	$7 = ($7 + [7])
	$3 = $3
	if ( ($8 & [128]) ){ goto $label$1 }
	$7 = (CASTING uint_32)(uint_64 $4)
	$3 = *($1)
	$8 = *($1 + [4])
	$6 = ((int_32)($8 - $3) / (int_32)[112])
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$5 }
	CALL $348($1, ($7 - $6))
	$8 = *(($1 + [4]))
	$3 = *($1)
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$6 }
	$8 = ($3 + ((int_32)$7 * (int_32)[112]))
	*(($1 + [4])) = $8
	
.LABEL $label$6
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = ($2 + [24])
	$6 = ($2 + [28])
	$5 = ($2 + [36])
	$1 = ($2 + [40])
	$9 = ($2 + [44])
	
.LOOP $label$7:
	*($2 + [8]) = $0
	*($2 + [16]) = $3
	*($7) = ($3 + [48])
	*($6) = ($3 + [56])
	*((($2 + [16]) + [16])) = ($3 + [64])
	*($5) = ($3 + [72])
	*($1) = ($3 + [88])
	*($9) = ($3 + [96])
	*($2 + [20]) = ($3 + [16])
	CALL $312(($2 + [16]), ($2 + [8]))
	$3 = ($3 + [112])
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$7 }
	
.LABEL $label$3
	$global$0 = ($2 + [48])
	return $0
}

int_32 .FUNC $342 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($3 <= *($5)) ){ goto $label$2 }
	CALL eosio_assert([0], [19219])
	$3 = *($6)
	
.LABEL $label$2
	$8 = *($3)
	$3 = ($3 + [1])
	*($6) = $3
	$7 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $7)))
	$7 = ($7 + [7])
	$3 = $3
	if ( ($8 & [128]) ){ goto $label$1 }
	$7 = (CASTING uint_32)(uint_64 $4)
	$3 = *($1)
	$8 = *($1 + [4])
	$6 = ((int_32)($8 - $3) / (int_32)[112])
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$5 }
	CALL $347($1, ($7 - $6))
	$8 = *(($1 + [4]))
	$3 = *($1)
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$6 }
	$8 = ($3 + ((int_32)$7 * (int_32)[112]))
	*(($1 + [4])) = $8
	
.LABEL $label$6
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = ($2 + [24])
	$6 = ($2 + [28])
	$5 = ($2 + [36])
	$1 = ($2 + [40])
	$9 = ($2 + [44])
	
.LOOP $label$7:
	*($2 + [8]) = $0
	*($2 + [16]) = $3
	*($7) = ($3 + [48])
	*($6) = ($3 + [56])
	*((($2 + [16]) + [16])) = ($3 + [64])
	*($5) = ($3 + [72])
	*($1) = ($3 + [88])
	*($9) = ($3 + [96])
	*($2 + [20]) = ($3 + [16])
	CALL $309(($2 + [16]), ($2 + [8]))
	$3 = ($3 + [112])
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$7 }
	
.LABEL $label$3
	$global$0 = ($2 + [48])
	return $0
}

int_32 .FUNC $341 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [19219])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$6 = *($1)
	$5 = *($1 + [4])
	$7 = int_32(($5 - $6) >> [4])
	if ( ((uint_32)$7 >= (uint_32)$2) ){ goto $label$5 }
	CALL $346($1, ($2 - $7))
	$5 = *(($1 + [4]))
	$2 = *($1)
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$7 <= (uint_32)$2) ){ goto $label$6 }
	$6 = ($6 + ($2 << [4]))
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = ($5 + [-16])
	$7 = *(($5 + [-12]))
	if ( ($7 == 0) ){ goto $label$9 }
	*(($5 + [-8])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$9
	$5 = $2
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$8 }
	
.LABEL $label$7
	*(($1 + [4])) = $6
	$5 = $6
	
.LABEL $label$6
	$2 = *($1)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = ($0 + [4])
	$4 = ($0 + [8])
	
.LOOP $label$10:
	$6 = *($7)
	if ( ((int_32)*($4) != (int_32)$6) ){ goto $label$11 }
	CALL eosio_assert([0], [19214])
	$6 = *($7)
	
.LABEL $label$11
	CALL memcpy($2, $6, [1])
	*($7) = (*($7) + [1])
	CALL $291($0, ($2 + [4]))
	$2 = ($2 + [16])
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$10 }
	
.LABEL $label$3
	return $0
}

int_32 .FUNC $340 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [19219])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$4 = *($1 + [4])
	$6 = int_32(($4 - $7) >> [1])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $345($1, ($2 - $6))
	$4 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$4 = ($7 + ($2 << [1]))
	*(($1 + [4])) = $4
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = ($0 + [4])
	$6 = *($2)
	$5 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((int_32)*($5) != (int_32)$6) ){ goto $label$8 }
	CALL eosio_assert([0], [19214])
	$6 = *($2)
	
.LABEL $label$8
	CALL memcpy($7, $6, [1])
	$6 = (*($2) + [1])
	*($2) = $6
	if ( ((int_32)*($5) != (int_32)$6) ){ goto $label$9 }
	CALL eosio_assert([0], [19214])
	$6 = *($2)
	
.LABEL $label$9
	CALL memcpy(($7 + [1]), $6, [1])
	$6 = (*($2) + [1])
	*($2) = $6
	$7 = ($7 + [2])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $38 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	$6 = *(*(($3 + [12])))
	$7 = *(*(($3 + [8])))
	$8 = *($1)
	*($5 + [16]) = *(*($3))
	$9 = *($7 + [16])
	*($5 + [32]) = $9
	$10 = *($7 + [8])
	$6 = (int_64)
	*($5 + [24]) = $6(( ( $10 ? $6 : ((uint_64)$10 > (uint_64)$6) ) ? $10 : ((int_64))((int_64)0 - $6) < (int_64)0) ) - $6))
	$12 = ($7 + [24])
	$11 = ($1 + [8])
	$3 = (*($11) - $12)
	$13 = ((int_32)$3 / (int_32)[24])
	if ( ($3 == 0) ){ goto $label$3 }
	CALL memmove($7, $12, $3)
	
.LABEL $label$3
	$7 = ($7 + ((int_32)$13 * (int_32)[24]))
	*($11) = $7
	if ( (int_64)(((int_64)$6 | (int_64)$9) == 0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)*(($1 + [12]))) ){ goto $label$5 }
	*($7) = *($5 + [16])
	*(($7 + [16])) = *((($5 + [16]) + [16]))
	*(($7 + [8])) = *((($5 + [16]) + [8]))
	*(($7 = ($1 + [8]))) = (*($7) + [24])
	goto $label$4 
	
.LABEL $label$5
	CALL $294(($1 + [4]), ($5 + [16]))
	
.LABEL $label$4
	$6 = (CASTING uint_64)(uint_32 $8)
	if ( ((int_32)($8 & [255]) == (int_32)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [19669])
	
.LABEL $label$6
	$10 = ((int_64)$6 & (int_64)255)
	$8 = *($1 + [4])
	$3 = *($1 + [8])
	$11 = ($3 - $8)
	$6 = (CASTING uint_64)(uint_32 ((int_32)$11 / (int_32)[24]))
	$7 = [25]
	
.LOOP $label$7:
	$7 = ($7 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$11 }
	$11 = (((int_32)((uint_32)($11 + [-24]) / (uint_32)[24]) * (int_32)[24]) + $7)
	if ( ($11 <= [513]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$11 = ($7 + [-24])
	if ( ((uint_32)$11 >= (uint_32)[513]) ){ goto $label$9 }
	
.LABEL $label$10
	$4 = ($4 - (($11 + [15]) & [-16]))
	$global$0 = $4
	goto $label$8 
	
.LABEL $label$9
	$4 = CALL $397($11)
	
.LABEL $label$8
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $11)
	$7 = $4
	if ( ((int_32)$11 > (int_32)[0]) ){ goto $label$12 }
	CALL eosio_assert([0], [18965])
	$7 = *($5 + [4])
	
.LABEL $label$12
	CALL memcpy($7, $1, [1])
	$7 = ($7 + [1])
	*($5 + [4]) = $7
	$6 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [8])) - *(($1 + [4]))) / (int_32)[24]))
	
.LOOP $label$13:
	$3 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$8 = ((int_64)$6) != (int_64)0
	*($5 + [16]) = (($8) << [7]) | ($3 & [127]))
	if ( ((int_32)(*(($5 + [8])) - $7) > (int_32)[0]) ){ goto $label$14 }
	CALL eosio_assert([0], [18965])
	$7 = *($5 + [4])
	
.LABEL $label$14
	CALL memcpy($7, ($5 + [16]), [1])
	$7 = ($7 + [1])
	*($5 + [4]) = $7
	if ( $8 ){ goto $label$13 }
	$3 = *(($1 + [8]))
	$7 = *(($1 + [4]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$15 }
	
.LOOP $label$16:
	*($5 + [40]) = $5
	*($5 + [16]) = $7
	*((($5 + [16]) + [8])) = ($7 + [16])
	*($5 + [20]) = ($7 + [8])
	CALL $295(($5 + [16]), ($5 + [40]))
	$7 = ($7 + [24])
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$16 }
	
.LABEL $label$15
	CALL db_update_i64(*(($1 + [20])), $2, $4, $11)
	if ( ((uint_32)$11 >= (uint_32)[513]) ){ goto $label$19 }
	if ( ((uint_64)*($0 + [16]) <= (uint_64)$10) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL $400($4)
	if ( ((uint_64)*($0 + [16]) > (uint_64)$10) ){ goto $label$17 }
	
.LABEL $label$18
	*(($0 + [16])) = ((int_64)$10 + (int_64)1)
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$17
	$global$0 = ($5 + [48])
}

int_32 .FUNC $283 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [18965])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [18965])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $36 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	$6 = ($1 + [40])
	*($5 + [16]) = *($6)
	$7 = ($1 + [64])
	*($5 + [24]) = *($7)
	$8 = ($1 + [72])
	*($5 + [32]) = *($8)
	*($7) = *(*($3))
	$9 = *($1)
	$3 = $4
	$4 = ($3 + [-80])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-9])
	*($5 + [40]) = $5
	*($5 + [52]) = ($1 + [8])
	*($5 + [48]) = $1
	*($5 + [56]) = ($1 + [16])
	*($5 + [60]) = ($1 + [24])
	*($5 + [64]) = ($1 + [32])
	*($5 + [68]) = $6
	*($5 + [72]) = ($1 + [48])
	*($5 + [76]) = ($1 + [56])
	*($5 + [80]) = $7
	*($5 + [84]) = $8
	*($5 + [88]) = ($1 + [80])
	*($5 + [92]) = ($1 + [81])
	*($5 + [96]) = ($1 + [82])
	*($5 + [100]) = ($1 + [83])
	*($5 + [104]) = ($1 + [84])
	CALL $87(($5 + [48]), ($5 + [40]))
	CALL db_update_i64(*($1 + [92]), $2, $4, [71])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$4 = (($5 + [16]) + [8])
	*($5 + [48]) = *($6)
	if ( (CALL $392(($5 + [16]), ($5 + [48]), [8]) == 0) ){ goto $label$4 }
	$3 = ($1 + [96])
	$6 = *($3)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$5 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728576, ($5 + [40]), $9)
	*($3) = $6
	
.LABEL $label$5
	CALL db_idx64_update($6, $2, ($5 + [48]))
	
.LABEL $label$4
	$6 = (($5 + [16]) + [16])
	*($5 + [48]) = *($7)
	if ( (CALL $392($4, ($5 + [48]), [8]) == 0) ){ goto $label$6 }
	$4 = ($1 + [100])
	$7 = *($4)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$7 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728575, ($5 + [40]), $9)
	*($4) = $7
	
.LABEL $label$7
	CALL db_idx64_update($7, $2, ($5 + [48]))
	
.LABEL $label$6
	*($5 + [48]) = *($8)
	if ( (CALL $392($6, ($5 + [48]), [8]) == 0) ){ goto $label$8 }
	$7 = ($1 + [104])
	$1 = *($7)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$9 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728574, ($5 + [40]), $9)
	*($7) = $1
	
.LABEL $label$9
	CALL db_idx64_update($1, $2, ($5 + [48]))
	
.LABEL $label$8
	$global$0 = ($5 + [112])
}

void .FUNC $37 (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_64 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$6 = ($global$0 - [128])
	$global$0 = $6
	*($6 + [112]) = $4
	*($6 + [120]) = $3
	*(($6 + [104])) = [0]
	*($6 + [88]) = (int_64)-1
	*($6 + [96]) = (int_64)0
	$3 = *($0)
	*($6 + [72]) = $3
	*($6 + [80]) = $1
	$7 = [0]
	$4 = (CASTING uint_64)(uint_32 $2)
	$8 = CALL db_find_i64($3, $1, (int_64)-3020377498459275264, $4)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $23(($6 + [72]), $8)
	if ( ((int_32)*($7 + [16]) == (int_32)($6 + [72])) ){ goto $label$1 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$1
	*(($6 + [64])) = [0]
	*($6 + [56]) = (int_64)0
	$8 = CALL $393([8692])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$4 }
	$9 = ((int_32)$7 != (int_32)[0])
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$7 }
	*($6 + [56]) = ($8 << [1])
	$10 = (($6 + [56]) | [1])
	if ( $8 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$11 = (($8 + [16]) & [-16])
	$10 = CALL _Znwj($11)
	*($6 + [56]) = ($11 | [1])
	*($6 + [64]) = $10
	*($6 + [60]) = $8
	
.LABEL $label$6
	CALL memcpy($10, [8692], $8)
	
.LABEL $label$5
	*(($10 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($6, [110], ($6 + [56])))
	if ( ((*($6 + [56]) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*($6 + [64]))
	
.LABEL $label$8
	$10 = *(($7 + [8]))
	$8 = *($7 + [4])
	if ( ((int_32)$8 == (int_32)$10) ){ goto $label$9 }
	$1 = *($6 + [120])
	
.LOOP $label$10:
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$9 }
	$8 = ($8 + [24])
	if ( ((int_32)$10 != (int_32)$8) ){ goto $label$10 }
	$8 = $10
	
.LABEL $label$9
	*((($6 + [32]) + [8])) = [0]
	*($6 + [32]) = (int_64)0
	*($6 + [48]) = $8
	$9 = CALL $393([8713])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$3 }
	$10 = ((int_32)$8 != (int_32)$10)
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$13 }
	*($6 + [32]) = ($9 << [1])
	$8 = (($6 + [32]) | [1])
	if ( $9 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$11 = (($9 + [16]) & [-16])
	$8 = CALL _Znwj($11)
	*($6 + [32]) = ($11 | [1])
	*($6 + [40]) = $8
	*($6 + [36]) = $9
	
.LABEL $label$12
	CALL memcpy($8, [8713], $9)
	
.LABEL $label$11
	*(($8 + $9)) = [0]
	CALL eosio_assert($10, CALL $5($6, [111], ($6 + [32])))
	if ( ((*($6 + [32]) & [1]) == 0) ){ goto $label$14 }
	CALL _ZdlPv(*($6 + [40]))
	
.LABEL $label$14
	$1 = *(*($6 + [48]) + [8])
	*(($6 + [24])) = [0]
	*($6 + [16]) = (int_64)0
	$3 = *($6 + [112])
	$8 = CALL $393([8748])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$2 }
	$9 = ((uint_64)$1 >= (uint_64)((int_64)$3 + (int_64)(CASTING uint_64)(uint_32 $5)))
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$17 }
	*($6 + [16]) = ($8 << [1])
	$10 = (($6 + [16]) | [1])
	if ( $8 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$5 = (($8 + [16]) & [-16])
	$10 = CALL _Znwj($5)
	*($6 + [16]) = ($5 | [1])
	*($6 + [24]) = $10
	*($6 + [20]) = $8
	
.LABEL $label$16
	CALL memcpy($10, [8748], $8)
	
.LABEL $label$15
	*(($10 + $8)) = [0]
	CALL eosio_assert($9, CALL $5($6, [112], ($6 + [16])))
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$18 }
	CALL _ZdlPv(*($6 + [24]))
	
.LABEL $label$18
	$1 = *($0)
	*($6 + [4]) = $0
	*($6) = ($6 + [120])
	*($6 + [8]) = ($6 + [48])
	*($6 + [12]) = ($6 + [112])
	if ( $7 ){ goto $label$19 }
	CALL eosio_assert([0], [19537])
	
.LABEL $label$19
	CALL $38(($6 + [72]), $7, $1, $6)
	$10 = *(($6 + [100]))
	$9 = *(($6 + [96]))
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$21 }
	
.LOOP $label$23:
	$8 = ($10 + [-24])
	$7 = *($8)
	if ( ((int_32)*($7) == (int_32)$2) ){ goto $label$22 }
	$10 = $8
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$21 }
	if ( ((int_32)*($7 + [16]) == (int_32)($6 + [72])) ){ goto $label$20 }
	CALL eosio_assert([0], [19486])
	goto $label$20 
	
.LABEL $label$21
	$7 = [0]
	$8 = CALL db_find_i64(*($6 + [72]), *(($6 + [80])), (int_64)-3020377498459275264, $4)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$20 }
	$7 = CALL $23(($6 + [72]), $8)
	if ( ((int_32)*($7 + [16]) == (int_32)($6 + [72])) ){ goto $label$20 }
	CALL eosio_assert([0], [19486])
	
.LABEL $label$20
	if ( ((int_32)*(($7 + [8])) != (int_32)*($7 + [4])) ){ goto $label$24 }
	if ( $7 ){ goto $label$25 }
	CALL eosio_assert([0], [19223])
	CALL eosio_assert([0], [19257])
	
.LABEL $label$25
	$8 = CALL db_next_i64(*($7 + [20]), $6)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$26 }
	CALL $23(($6 + [72]), $8)
	
.LABEL $label$26
	CALL $39(($6 + [72]), $7)
	
.LABEL $label$24
	$2 = *($6 + [96])
	if ( ($2 == 0) ){ goto $label$27 }
	$9 = ($6 + [100])
	$8 = *($9)
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$29 }
	
.LOOP $label$30:
	$8 = ($8 + [-24])
	$10 = *($8)
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$31 }
	$7 = *($10 + [4])
	if ( ($7 == 0) ){ goto $label$32 }
	*(($10 + [8])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$32
	CALL _ZdlPv($10)
	
.LABEL $label$31
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$30 }
	$8 = *(($6 + [96]))
	goto $label$28 
	
.LABEL $label$29
	$8 = $2
	
.LABEL $label$28
	*($9) = $2
	CALL _ZdlPv($8)
	
.LABEL $label$27
	$global$0 = ($6 + [128])
	return (unreachable)
	
.LABEL $label$4
	CALL $359(($6 + [56]))
	
.LABEL $label$3
	CALL $359(($6 + [32]))
	
.LABEL $label$2
	CALL $359(($6 + [16]))
	(unreachable)
	(unreachable)
}

void .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-7297964030780506112, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $32($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $313(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [19728])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [20]) = *(*($5 + [4]))
	$6 = [8]
	$8 = ($1 + [8])
	$9 = ($1 + [20])
	$10 = *($1 + [8])
	$5 = *(($1 + [12]))
	$11 = ($5 - $10)
	$7 = (CASTING uint_64)(uint_32 int_32($11 >> [1]))
	
.LOOP $label$5:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$6 }
	$6 = (($11 & [-2]) + $6)
	
.LABEL $label$6
	$5 = ($6 + [1])
	if ( ($5 <= [513]) ){ goto $label$8 }
	$6 = CALL $397($5)
	goto $label$7 
	
.LABEL $label$8
	$6 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$7
	*($3 + [12]) = $6
	*($3 + [8]) = $6
	*($3 + [16]) = ($6 + $5)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $8
	*($3 + [32]) = $1
	*($3 + [40]) = $9
	CALL $315(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($4 + [8]), (int_64)-7297964030780506112, *(*($0 + [8])), $7, $6, $5)
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$11 }
	if ( ((uint_64)$7 >= (uint_64)*($4 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $400($6)
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$9 }
	
.LABEL $label$10
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$9
	$global$0 = ($3 + [48])
}

void .FUNC $35 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $377($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [8])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [12])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL _ZdlPv($4)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [48])
	$global$0 = $2
	*(($3 = $2) + [44]) = $1
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	$2 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [19191])
	
.LABEL $label$5
	$5 = CALL $397($4)
	$2 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $5, $4)
	*($3 + [36]) = $5
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + $4)
	*($3 + [12]) = ($3 + [32])
	*($3 + [16]) = ($3 + [44])
	*($3 + [8]) = $0
	$1 = CALL _Znwj([40])
	$6 = CALL $296($1, $0, ($3 + [8]))
	*($3 + [24]) = $1
	$7 = *($1)
	*($3 + [8]) = $7
	$8 = *($1 + [28])
	*($3 + [4]) = $8
	$9 = ($0 + [28])
	$4 = *($9)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $7
	*($4 + [16]) = $8
	*($3 + [24]) = [0]
	*($4) = $1
	*($9) = ($4 + [24])
	if ( $2 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $35(($0 + [24]), ($3 + [24]), ($3 + [8]), ($3 + [4]))
	if ( ($2 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $400($5)
	
.LABEL $label$7
	$5 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$10 }
	$1 = *($5 + [8])
	if ( ($1 == 0) ){ goto $label$11 }
	*(($5 + [12])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$11
	CALL _ZdlPv($5)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $6
}

void .FUNC $280 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [128])
	$global$0 = $2
	$3 = *($1)
	$4 = CALL $350($2, ($1 + [8]))
	$0 = *($0 + [4])
	$5 = *($0 + [4])
	$1 = (*($0) + int_32($5 >> [1]))
	$0 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($1) + $0))
	
.LABEL $label$1
	$6 = CALL $350(($2 + [64]), $4)
	CALL void $1((int_32 $3), (int_64 $6), (int_32 $0))
	$0 = *($6 + [48])
	if ( ($0 == 0) ){ goto $label$2 }
	*(($6 + [52])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$2
	$0 = *($6 + [36])
	if ( ($0 == 0) ){ goto $label$3 }
	*(($6 + [40])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$3
	$0 = *($6 + [24])
	if ( ($0 == 0) ){ goto $label$4 }
	*(($6 + [28])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$4
	$7 = *($6 + [12])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = $7
	$8 = ($6 + [16])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$1 = ($0 + [-16])
	$5 = *(($0 + [-12]))
	if ( ($5 == 0) ){ goto $label$8 }
	*(($0 + [-8])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$8
	$0 = $1
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$7 }
	$1 = *(($6 + [12]))
	
.LABEL $label$6
	*($8) = $7
	CALL _ZdlPv($1)
	
.LABEL $label$5
	$0 = *($6)
	if ( ($0 == 0) ){ goto $label$9 }
	*($6 + [4]) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$9
	$0 = *($4 + [48])
	if ( ($0 == 0) ){ goto $label$10 }
	*(($4 + [52])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$10
	$0 = *($4 + [36])
	if ( ($0 == 0) ){ goto $label$11 }
	*(($4 + [40])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$11
	$0 = *($4 + [24])
	if ( ($0 == 0) ){ goto $label$12 }
	*(($4 + [28])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$12
	$7 = *($4 + [12])
	if ( ($7 == 0) ){ goto $label$13 }
	$1 = $7
	$6 = ($4 + [16])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = ($0 + [-16])
	$5 = *(($0 + [-12]))
	if ( ($5 == 0) ){ goto $label$16 }
	*(($0 + [-8])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$16
	$0 = $1
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$15 }
	$1 = *(($4 + [12]))
	
.LABEL $label$14
	*($6) = $7
	CALL _ZdlPv($1)
	
.LABEL $label$13
	$0 = *($4)
	if ( ($0 == 0) ){ goto $label$17 }
	*($4 + [4]) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$17
	$global$0 = ($2 + [128])
}

void .FUNC $30 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [19572])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [19618])
	
.LABEL $label$2
	$6 = ($1 + [40])
	*($5 + [16]) = *($6)
	$7 = ($1 + [64])
	*($5 + [24]) = *($7)
	$8 = ($1 + [72])
	*($5 + [32]) = *($8)
	*($1 + [8]) = *(*($3))
	*($1 + [16]) = *(*(($3 + [4])))
	*($1 + [24]) = *(*(($3 + [8])))
	$9 = *($1)
	$4 = $4
	$3 = ($4 + [-80])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-9])
	*($5 + [40]) = $5
	*($5 + [52]) = ($1 + [8])
	*($5 + [48]) = $1
	*($5 + [56]) = ($1 + [16])
	*($5 + [60]) = ($1 + [24])
	*($5 + [64]) = ($1 + [32])
	*($5 + [68]) = $6
	*($5 + [72]) = ($1 + [48])
	*($5 + [76]) = ($1 + [56])
	*($5 + [80]) = $7
	*($5 + [84]) = $8
	*($5 + [88]) = ($1 + [80])
	*($5 + [92]) = ($1 + [81])
	*($5 + [96]) = ($1 + [82])
	*($5 + [100]) = ($1 + [83])
	*($5 + [104]) = ($1 + [84])
	CALL $87(($5 + [48]), ($5 + [40]))
	CALL db_update_i64(*($1 + [92]), $2, $3, [71])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = (($5 + [16]) + [8])
	*($5 + [48]) = *($6)
	if ( (CALL $392(($5 + [16]), ($5 + [48]), [8]) == 0) ){ goto $label$4 }
	$6 = ($1 + [96])
	$4 = *($6)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$5 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728576, ($5 + [40]), $9)
	*($6) = $4
	
.LABEL $label$5
	CALL db_idx64_update($4, $2, ($5 + [48]))
	
.LABEL $label$4
	$4 = (($5 + [16]) + [16])
	*($5 + [48]) = *($7)
	if ( (CALL $392($3, ($5 + [48]), [8]) == 0) ){ goto $label$6 }
	$6 = ($1 + [100])
	$3 = *($6)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$7 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728575, ($5 + [40]), $9)
	*($6) = $3
	
.LABEL $label$7
	CALL db_idx64_update($3, $2, ($5 + [48]))
	
.LABEL $label$6
	*($5 + [48]) = *($8)
	if ( (CALL $392($4, ($5 + [48]), [8]) == 0) ){ goto $label$8 }
	$3 = ($1 + [104])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$9 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371566920728574, ($5 + [40]), $9)
	*($3) = $1
	
.LABEL $label$9
	CALL db_idx64_update($1, $2, ($5 + [48]))
	
.LABEL $label$8
	$global$0 = ($5 + [112])
}

void .FUNC $31 (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	float_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$5 = ($global$0 - [16])
	$global$0 = $5
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$11 }
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$12 }
	if ( ((int_32)$2 != (int_32)[3]) ){ goto $label$10 }
	$6 = (float_64)0
	$2 = ($4 + [-1])
	if ( ((uint_32)$2 > (uint_32)[2]) ){ goto $label$13 }
	$6 = *((($2 << [3]) + [20016]))
	
.LABEL $label$13
	$6 = (float_64)
	if ( (((float_64)$6((float_64)3e3 - $6)) < (float_64)(float_64)18446744073709551615) & ((float_64)$6 >= (float_64)(float_64)0)) ){ goto $label$9 }
	$7 = (int_64)0
	goto $label$8 
	
.LABEL $label$12
	$8 = (int_64)35400
	$9 = (int_64)100000
	$7 = (int_64)95400
	goto $label$4 
	
.LABEL $label$11
	$9 = (int_64)100000
	$10 = (int_64)0
	$7 = (int_64)100000
	$11 = ((uint_64)$3 % (uint_64)(int_64)100000)
	if ( (uint_64)($11 <= (int_64)65798) ){ goto $label$1 }
	$10 = (int_64)20
	if ( (uint_64)($11 <= (int_64)96798) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$10
	*(($5 + [8])) = [0]
	*($5) = (int_64)0
	$2 = CALL $393([8681])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$7 }
	*($5) = ($2 << [1])
	$4 = ($5 | [1])
	if ( $2 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$9
	$7 = (Rounds 0)($6)
	
.LABEL $label$8
	$6 = ((float_64)(Rounds 0)($6) + (float_64)(float_64)94e3)
	if ( (((float_64)$6 < (float_64)(float_64)18446744073709551615) & ((float_64)$6 >= (float_64)(float_64)0)) ){ goto $label$14 }
	$9 = (int_64)0
	$8 = (int_64)0
	goto $label$4 
	
.LABEL $label$14
	$9 = (Rounds 0)($6)
	$8 = (int_64)0
	goto $label$4 
	
.LABEL $label$7
	$12 = (($2 + [16]) & [-16])
	$4 = CALL _Znwj($12)
	*($5) = ($12 | [1])
	*($5 + [8]) = $4
	*($5 + [4]) = $2
	
.LABEL $label$6
	CALL memcpy($4, [8681], $2)
	
.LABEL $label$5
	*(($4 + $2)) = [0]
	CALL eosio_assert([0], CALL $5($5, [106], $5))
	$9 = (int_64)0
	if ( ((*($5) & [1]) == 0) ){ goto $label$15 }
	CALL _ZdlPv(*($5 + [8]))
	
.LABEL $label$15
	
.LABEL $label$4
	$10 = (int_64)20
	$11 = ((uint_64)$3 % (uint_64)(int_64)100000)
	if ( ((uint_64)$11 >= (uint_64)$8) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $359($5)
	
.LABEL $label$2
	$10 = (int_64)40
	if ( (uint_64)($11 <= $7) ){ goto $label$1 }
	$10 = ( (int_64)60 ? (int_64)80 : (uint_64)($11 <= $9) )
	
.LABEL $label$1
	CALL $20($0, $1, ((CASTING uint_32)(uint_64 ((int_64)((int_64)((uint_64)$3 % (uint_64)(int_64)20) + (int_64)$10) + (int_64)1)) & [255]))
	$global$0 = ($5 + [16])
	(unreachable)
}

void .FUNC $281 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [19214])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	$2 = ($3 + [8])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [19214])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [2])
	*(($0 = ($0 + [4]))) = (*($0) + [2])
	$2 = ($3 + [10])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[1]) ){ goto $label$3 }
	CALL eosio_assert([0], [19214])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [2])
	*(($0 = ($0 + [4]))) = (*($0) + [2])
	$2 = ($3 + [12])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [19214])
	$4 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [2])
	*(($0 = ($0 + [4]))) = (*($0) + [2])
	$0 = ($3 + [16])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [19214])
	$3 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $3, [4])
	*(($1 = ($1 + [4]))) = (*($1) + [4])
}