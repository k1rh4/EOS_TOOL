(data (i32.const 8220) "failed to allocate pages\00transfer\00")
(data (i32.const 8254) "eosio.token\00")
(data (i32.const 8266) "EOS\00")
(data (i32.const 8270) "we only surpport EOS\00")
(data (i32.const 8291) "invalid quantity\00")
(data (i32.const 8308) "must transfer positive quantity\00")
(data (i32.const 8340) "number should in [1, 3]\00")
(data (i32.const 8364) "game not found\00")
(data (i32.const 8379) " tie\00")
(data (i32.const 8384) " win\00")
(data (i32.const 8389) "player mismatch\00")
(data (i32.const 8405) "amount mismatch\00")
(data (i32.const 8421) "number mismatch\00")
(data (i32.const 8437) "roll mismatch\00")
(data (i32.const 8451) "payout mismatch\00")
(data (i32.const 8467) "unable to find key\00")
(data (i32.const 8486) "string is too long to be a valid name\00")
(data (i32.const 8524) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 8591) "character is not in allowed character set for names\00")
(data (i32.const 8643) "string is too long to be a valid symbol_code\00")
(data (i32.const 8688) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 8741) "invalid symbol name\00")
(data (i32.const 8764) "@\"\00\00")
(data (i32.const 8768) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 8801) "write\00")
(data (i32.const 8807) "read\00")
(data (i32.const 8812) "get\00")
(data (i32.const 8816) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 8867) "error reading iterator\00")
(data (i32.const 8890) "cannot create objects in table of another contract\00")
(data (i32.const 8941) "cannot pass end iterator to modify\00")
(data (i32.const 8976) "object passed to modify is not in multi_index\00")
(data (i32.const 9022) "cannot modify objects in table of another contract\00")
(data (i32.const 9073) "cannot pass end iterator to erase\00")
(data (i32.const 9107) "cannot increment end iterator\00")
(data (i32.const 9137) "object passed to erase is not in multi_index\00")
(data (i32.const 9182) "cannot erase objects in table of another contract\00")
(data (i32.const 9232) "attempt to remove object that was not in multi_index\00")
(data (i32.const 0) "H$\00\00")
(import "env" "eosio_assert" (func $fimport$0 (param i32 i32)))
(import "env" "memset" (func $fimport$1 (param i32 i32 i32) (result i32)))
(import "env" "action_data_size" (func $fimport$2 (result i32)))
(import "env" "read_action_data" (func $fimport$3 (param i32 i32) (result i32)))
(import "env" "abort" (func $fimport$4))
(import "env" "db_find_i64" (func $fimport$5 (param i64 i64 i64 i64) (result i32)))
(import "env" "current_receiver" (func $fimport$6 (result i64)))
(import "env" "db_store_i64" (func $fimport$7 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "current_time" (func $fimport$8 (result i64)))
(import "env" "sha256" (func $fimport$9 (param i32 i32 i32)))
(import "env" "memcpy" (func $fimport$10 (param i32 i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$11 (param i64)))
(import "env" "memmove" (func $fimport$12 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$13 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$14 (param i32 i32)))
(import "env" "__multf3" (func $fimport$15 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$16 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$17 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$18 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$19 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$20 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$21 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$22 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$23 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$24 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$25 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$26 (param i64 i64) (result f32)))
(import "env" "prints_l" (func $fimport$27 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$28 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$29 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$30 (param i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$31 (param i32 i32) (result i32)))
(import "env" "send_inline" (func $fimport$32 (param i32 i32)))
(import "env" "eosio_assert_code" (func $fimport$33 (param i32 i64)))
(import "env" "db_get_i64" (func $fimport$34 (param i32 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$35 (param i32 i64 i32 i32)))
(import "env" "db_remove_i64" (func $fimport$36 (param i32)))
(export "apply" (func $23))
(table $0 5 5 anyfunc)
(elem (i32.const 1) $25 $27 $29 $31)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 9285))
(global $global$2 i32 (i32.const 9285))


int_32 .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $9($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $63($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $9($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $20($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $20($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $17($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $11($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $19 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $9($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $11($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8807])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [16])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[31]) ){ goto $label$2 }
	CALL eosio_assert([0], [8807])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [32])
	$3 = (*($2) + [32])
	*($2) = $3
	$2 = ($1 + [48])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[31]) ){ goto $label$3 }
	CALL eosio_assert([0], [8807])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $3, [32])
	*(($2 = ($0 + [4]))) = (*($2) + [32])
	return $0
}

int_32 .FUNC $65 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8807])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8807])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [16])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8807])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $3, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$1 = ($1 + [24])
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8807])
	$3 = *($2)
	
.LABEL $label$4
	CALL memcpy($1, $3, [8])
	*($2) = (*($2) + [8])
	return $0
}

int_32 .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8801])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [16])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $3) > (int_32)[31]) ){ goto $label$2 }
	CALL eosio_assert([0], [8801])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [32])
	$3 = (*($2) + [32])
	*($2) = $3
	$2 = ($1 + [48])
	if ( ((int_32)(*($5) - $3) > (int_32)[31]) ){ goto $label$3 }
	CALL eosio_assert([0], [8801])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $2, [32])
	*(($2 = ($0 + [4]))) = (*($2) + [32])
	return $0
}

int_32 .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [8801])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [8801])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $29 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5, int_32 $6, int_64 $7, int_64 $8)
{
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$9 = ($global$0 - [48])
	$global$0 = $9
	CALL require_auth(*($0))
	*(($9 + [32])) = [0]
	*($9 + [16]) = (int_64)-1
	*($9 + [24]) = (int_64)0
	$10 = *($0)
	*($9) = $10
	*($9 + [8]) = $10
	$0 = [0]
	$11 = CALL db_find_i64($10, $10, (int_64)-5003315193367756800, $1)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $52($9, $11)
	if ( ((int_32)*($0 + [112]) == (int_32)$9) ){ goto $label$1 }
	CALL eosio_assert([0], [8816])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [8364])
	CALL eosio_assert(((int_64)*($0 + [8]) == (int_64)$2), [8389])
	CALL eosio_assert(((int_64)*($0 + [16]) == (int_64)$3), [8405])
	CALL eosio_assert(((int_64)*($0 + [24]) == (int_64)$4), [8421])
	CALL eosio_assert(((int_64)*($0 + [96]) == (int_64)$7), [8437])
	CALL eosio_assert(((int_64)*($0 + [104]) == (int_64)$8), [8451])
	if ( $0 ){ goto $label$2 }
	CALL eosio_assert([0], [9073])
	CALL eosio_assert([0], [9107])
	
.LABEL $label$2
	$11 = CALL db_next_i64(*($0 + [116]), ($9 + [40]))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$3 }
	CALL $52($9, $11)
	
.LABEL $label$3
	CALL $53($9, $0)
	$12 = *($9 + [24])
	if ( ($12 == 0) ){ goto $label$4 }
	$13 = ($9 + [28])
	$0 = *($13)
	if ( ((int_32)$0 == (int_32)$12) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$11 = *($0)
	*($0) = [0]
	if ( ($11 == 0) ){ goto $label$8 }
	CALL $11($11)
	
.LABEL $label$8
	if ( ((int_32)$12 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($9 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $12
	
.LABEL $label$5
	*($13) = $12
	CALL $11($0)
	
.LABEL $label$4
	$global$0 = ($9 + [48])
}

int_32 .FUNC $28 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [160])
	$global$0 = $3
	*(($4 = $3) + [120]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [72]) + [24])) = (int_64)0
	*(($4 + [112])) = [0]
	*($4 + [80]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [60]) = $2
	*($4 + [56]) = $2
	*($4 + [64]) = ($2 + $5)
	*($4 + [144]) = ($4 + [56])
	*($4 + [24]) = ($4 + [72])
	CALL $33(($4 + [24]), ($4 + [144]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [64])
	*($4 + [8]) = *($4 + [56])
	*(($6 = (($4 + [128]) + [8]))) = *($3)
	*($4 + [128]) = *($4 + [8])
	$3 = *($6)
	*((($4 + [144]) + [8])) = $3
	*((($4 + [24]) + [24])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$0 = *($4 + [128])
	*($4 + [40]) = $0
	*($4 + [144]) = $0
	*($4 + [148]) = ($4 + [120])
	*($4 + [144]) = ($4 + [24])
	CALL $34(($4 + [144]), ($4 + [72]))
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = [1]
	if ( (*($4 + [104]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $3($2)
	$2 = [1]
	if ( ((*($4 + [104]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $11(*(($4 + [112])))
	$global$0 = ($4 + [160])
	return $2
	
.LABEL $label$4
	$global$0 = ($4 + [160])
	return $2
}

int_32 .FUNC $21 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $19($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

void .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $9(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $11($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [144])
	$global$0 = $3
	CALL $0()
	$4 = [0]
	[0]
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$3 }
	*($3 + [128]) = [8245]
	*($3 + [132]) = CALL $1([8245])
	*($3 + [56]) = *($3 + [128])
	CALL $24(($3 + [136]), ($3 + [56]))
	[1]
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$2 }
	
.LABEL $label$3
	*($3 + [112]) = [8254]
	*($3 + [116]) = CALL $1([8254])
	*($3 + [48]) = *($3 + [112])
	CALL $24(($3 + [120]), ($3 + [48]))
	if ( ((int_64)$1 != (int_64)6138663591592764928) ){ goto $label$4 }
	*($3 + [96]) = [8245]
	*($3 + [100]) = CALL $1([8245])
	*($3 + [40]) = *($3 + [96])
	$4 = ((int_64)$2 == (int_64)-3617168760277827584)
	CALL $24(($3 + [104]), ($3 + [40]))
	
.LABEL $label$4
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ((int_64)$2 > (int_64)-3617168760277827585) ){ goto $label$7 }
	if ( ((int_64)$2 == (int_64)-5003315193367756800) ){ goto $label$6 }
	if ( ((int_64)$2 != (int_64)-4992623624440512512) ){ goto $label$1 }
	*($3 + [84]) = [0]
	*($3 + [80]) = [1]
	*($3 + [16]) = *($3 + [80])
	CALL $26($0, $1, ($3 + [16]))
	goto $label$1 
	
.LABEL $label$7
	if ( ((int_64)$2 == (int_64)8421045207927095296) ){ goto $label$5 }
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$1 }
	*($3 + [92]) = [0]
	*($3 + [88]) = [2]
	*($3 + [8]) = *($3 + [88])
	CALL $28($0, $1, ($3 + [8]))
	goto $label$1 
	
.LABEL $label$6
	*($3 + [76]) = [0]
	*($3 + [72]) = [3]
	*($3 + [24]) = *($3 + [72])
	CALL $30($0, $1, ($3 + [24]))
	goto $label$1 
	
.LABEL $label$5
	*($3 + [68]) = [0]
	*($3 + [64]) = [4]
	*($3 + [32]) = *($3 + [64])
	CALL $32($0, $1, ($3 + [32]))
	
.LABEL $label$1
	CALL $5([0])
	$global$0 = ($3 + [144])
}

void .FUNC $22 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $25 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_32 $16
	$3 = ($global$0 - [336])
	$global$0 = $3
	CALL require_auth(*($0))
	$4 = [0]
	*((($3 + [152]) + [32])) = [0]
	*($3 + [168]) = (int_64)-1
	*($3 + [176]) = (int_64)0
	$5 = *($0)
	*($3 + [152]) = $5
	*($3 + [160]) = $5
	$6 = [0]
	$7 = CALL db_find_i64($5, $5, (int_64)3617214763094933504, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $41(($3 + [152]), $7)
	if ( ((int_32)*($6 + [32]) == (int_32)($3 + [152])) ){ goto $label$1 }
	CALL eosio_assert([0], [8816])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [8364])
	*((($3 + [112]) + [32])) = [0]
	*($3 + [128]) = (int_64)-1
	*($3 + [136]) = (int_64)0
	$5 = *($0)
	*($3 + [112]) = $5
	*($3 + [120]) = $5
	$7 = CALL db_find_i64($5, $5, (int_64)-4425754204123955200, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $42(($3 + [112]), $7)
	if ( ((int_32)*($4 + [80]) == (int_32)($3 + [112])) ){ goto $label$2 }
	CALL eosio_assert([0], [8816])
	
.LABEL $label$2
	$5 = *($0)
	*($3 + [208]) = $2
	if ( $4 ){ goto $label$3 }
	CALL eosio_assert([0], [8941])
	
.LABEL $label$3
	CALL $43(($3 + [112]), $4, $5, ($3 + [208]))
	$2 = ($4 + [48])
	$8 = *($6 + [24])
	$9 = *($6 + [8])
	$10 = *($6 + [16])
	$5 = (int_64)0
	$7 = [0]
	
.LOOP $label$4:
	$5 = ((int_64)$5 ^ (int_64)(CASTING int_64)(int_32 (((int_32)*($2) ^ (int_32)*(($2 + [-32]))) << ($7 & [56]))))
	$2 = ($2 + [1])
	$7 = ($7 + [8])
	if ( ((int_32)$7 != (int_32)[256]) ){ goto $label$4 }
	$11 = ((uint_64)$5 % (uint_64)(int_64)99)
	$12 = ((uint_64)$11 / (uint_64)(int_64)33)
	$2 = CALL $1([8266])
	if ( ($2 <= [8]) ){ goto $label$8 }
	CALL eosio_assert([0], [8643])
	goto $label$7 
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$5 = (int_64)0
	
.LOOP $label$9:
	$7 = *(($2 + [8265]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$10 }
	CALL eosio_assert([0], [8688])
	
.LABEL $label$10
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$9 }
	$13 = ((int_64)$5 << (int_64)8)
	goto $label$5 
	
.LABEL $label$6
	$13 = (int_64)0
	
.LABEL $label$5
	$12 = ((int_64)$12 + (int_64)1)
	$5 = (uint_64)$13 >> (uint_64)(int_64)8)
	$14 = ((int_64)$13 | (int_64)4)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$13 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$5 = $13
	$7 = $2
	$2 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$14
	$5 = $13
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$7 = ((int_32)$2 < (int_32)[6])
	$15 = ($2 + [1])
	$2 = $15
	if ( $7 ){ goto $label$15 }
	$2 = ($15 + [1])
	if ( ((int_32)$15 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	CALL eosio_assert([0], [8741])
	
.LABEL $label$11
	*(($3 + [104])) = [0]
	*($3 + [88]) = (int_64)-1
	$5 = *($0)
	*($3 + [72]) = $5
	*($3 + [80]) = $5
	*($3 + [96]) = (int_64)0
	$2 = CALL db_find_i64($5, $5, (int_64)7235159537265672192, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$16 }
	if ( ((int_32)*(CALL $35(($3 + [72]), $2) + [16]) == (int_32)($3 + [72])) ){ goto $label$16 }
	CALL eosio_assert([0], [8816])
	
.LABEL $label$16
	if ( ((int_64)$12 != (int_64)$8) ){ goto $label$32 }
	$13 = *($0)
	if ( ((int_64)$9 == (int_64)0) ){ goto $label$31 }
	$7 = [0]
	$15 = *([0] + [8764])
	$5 = $9
	
.LOOP $label$34:
	*((($3 + [208]) + ($2 = $7))) = *(($15 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$5 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$2 == (int_32)[12]) )))))
	$7 = ($2 + [1])
	if ( ((uint_32)$2 > (uint_32)[11]) ){ goto $label$33 }
	$5 = ((int_64)$5 << (int_64)5)
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$34 }
	
.LABEL $label$33
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$29 }
	*($3 + [16]) = ($7 << [1])
	$15 = (($3 + [16]) | [1])
	goto $label$28 
	
.LABEL $label$32
	if ( ((int_64)$8 != (int_64)1) ){ goto $label$36 }
	if ( ((int_64)$12 == (int_64)2) ){ goto $label$35 }
	
.LABEL $label$36
	if ( ((int_64)$8 != (int_64)2) ){ goto $label$37 }
	if ( ((int_64)$12 == (int_64)3) ){ goto $label$35 }
	
.LABEL $label$37
	$13 = (int_64)0
	if ( ((int_64)$8 != (int_64)3) ){ goto $label$17 }
	if ( ((uint_64)$11 > (uint_64)(int_64)32) ){ goto $label$17 }
	
.LABEL $label$35
	$13 = ((uint_64)((int_64)$10 * (int_64)97) / (uint_64)(int_64)100)
	$11 = *($0)
	if ( ((int_64)$9 == (int_64)0) ){ goto $label$30 }
	$7 = [0]
	$15 = *([0] + [8764])
	$5 = $9
	
.LOOP $label$39:
	*((($3 + [208]) + ($2 = $7))) = *(($15 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$5 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$2 == (int_32)[12]) )))))
	$7 = ($2 + [1])
	if ( ((uint_32)$2 > (uint_32)[11]) ){ goto $label$38 }
	$5 = ((int_64)$5 << (int_64)5)
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$39 }
	
.LABEL $label$38
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$26 }
	*($3 + [16]) = ($7 << [1])
	$15 = (($3 + [16]) | [1])
	goto $label$25 
	
.LABEL $label$31
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	*($3 + [16]) = [0]
	$2 = (($3 + [16]) | [1])
	goto $label$27 
	
.LABEL $label$30
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	*($3 + [16]) = [0]
	$2 = (($3 + [16]) | [1])
	goto $label$24 
	
.LABEL $label$29
	$16 = (($7 + [16]) & [-16])
	$15 = CALL $9($16)
	*($3 + [16]) = ($16 | [1])
	*($3 + [24]) = $15
	*($3 + [20]) = $7
	
.LABEL $label$28
	$16 = ($2 + [1])
	$2 = [0]
	
.LOOP $label$40:
	*(($15 + $2)) = *((($3 + [208]) + $2))
	$2 = ($2 + [1])
	if ( ((int_32)$16 != (int_32)$2) ){ goto $label$40 }
	$2 = ($15 + $7)
	
.LABEL $label$27
	*($2) = [0]
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	$2 = CALL $1([8379])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$23 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$43 }
	*($3) = ($2 << [1])
	$15 = ($3 | [1])
	$7 = $15
	if ( $2 ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$43
	$15 = (($2 + [16]) & [-16])
	$7 = CALL $9($15)
	*($3) = ($15 | [1])
	*($3 + [8]) = $7
	*($3 + [4]) = $2
	$15 = ($3 | [1])
	
.LABEL $label$42
	CALL memcpy($7, [8379], $2)
	
.LABEL $label$41
	*(($7 + $2)) = [0]
	$2 = *($3)
	$7 = ($2 & [1])
	$2 = CALL $21(($3 + [16]), ( *($3 + [8]) ? $15 : $7 ), ( *($3 + [4]) ? uint_32($2 >> [1]) : $7 ))
	$5 = *($2)
	*($2) = [0]
	$7 = *($2 + [8])
	*($2 + [4 align=4]) = (int_64)0
	*(($15 = (($3 + [32]) + [24]))) = [0]
	*((($3 + [208]) + [24])) = $14
	*(($3 + [248])) = $7
	*($3 + [48]) = (int_64)0
	*($3 + [216]) = $9
	*($3 + [224]) = $10
	*($3 + [240]) = $5
	*($3 + [32]) = (int_64)6138663591592764928
	*($3 + [40]) = (int_64)-3617168760277827584
	*($3 + [208]) = *($0)
	*(($2 = CALL $9([16]))) = $13
	*($2 + [8]) = (int_64)3617214756542218240
	*((($3 + [32]) + [36])) = [0]
	$7 = ($2 + [16])
	*($15) = $7
	*(($3 + [52])) = $7
	*($3 + [48]) = $2
	*($3 + [60 align=4]) = (int_64)0
	$2 = *($3 + [240])
	$7 = ( *((($3 + [208]) + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($7 + [32])
	$5 = (CASTING uint_64)(uint_32 $7)
	$7 = ($3 + [60])
	
.LOOP $label$44:
	$2 = ($2 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$44 }
	if ( ($2 == 0) ){ goto $label$46 }
	CALL $44($7, $2)
	$7 = *(($3 + [64]))
	$2 = *(($3 + [60]))
	goto $label$45 
	
.LABEL $label$46
	$7 = [0]
	$2 = [0]
	
.LABEL $label$45
	*($3 + [324]) = $2
	*($3 + [320]) = $2
	*($3 + [328]) = $7
	*($3 + [192]) = ($3 + [320])
	*($3 + [200]) = ($3 + [208])
	CALL $45(($3 + [200]), ($3 + [192]))
	CALL $46(($3 + [32]))
	$2 = *($3 + [60])
	if ( ($2 == 0) ){ goto $label$47 }
	*(($3 + [64])) = $2
	CALL $11($2)
	
.LABEL $label$47
	$2 = *($3 + [48])
	if ( ($2 == 0) ){ goto $label$48 }
	*(($3 + [52])) = $2
	CALL $11($2)
	
.LABEL $label$48
	if ( (*($3 + [240]) & [1]) ){ goto $label$50 }
	if ( (*($3) & [1]) ){ goto $label$49 }
	goto $label$20 
	
.LABEL $label$50
	CALL $11(*(($3 + [248])))
	if ( ((*($3) & [1]) == 0) ){ goto $label$20 }
	
.LABEL $label$49
	CALL $11(*(($3 + [8])))
	if ( (*($3 + [16]) & [1]) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$26
	$16 = (($7 + [16]) & [-16])
	$15 = CALL $9($16)
	*($3 + [16]) = ($16 | [1])
	*($3 + [24]) = $15
	*($3 + [20]) = $7
	
.LABEL $label$25
	$16 = ($2 + [1])
	$2 = [0]
	
.LOOP $label$51:
	*(($15 + $2)) = *((($3 + [208]) + $2))
	$2 = ($2 + [1])
	if ( ((int_32)$16 != (int_32)$2) ){ goto $label$51 }
	$2 = ($15 + $7)
	
.LABEL $label$24
	*($2) = [0]
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	$2 = CALL $1([8384])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$23 }
	$13 = ((int_64)$13 + (int_64)$10)
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$54 }
	*($3) = ($2 << [1])
	$15 = ($3 | [1])
	$7 = $15
	if ( $2 ){ goto $label$53 }
	goto $label$52 
	
.LABEL $label$54
	$15 = (($2 + [16]) & [-16])
	$7 = CALL $9($15)
	*($3) = ($15 | [1])
	*($3 + [8]) = $7
	*($3 + [4]) = $2
	$15 = ($3 | [1])
	
.LABEL $label$53
	CALL memcpy($7, [8384], $2)
	
.LABEL $label$52
	*(($7 + $2)) = [0]
	$2 = *($3)
	$7 = ($2 & [1])
	$2 = CALL $21(($3 + [16]), ( *($3 + [8]) ? $15 : $7 ), ( *($3 + [4]) ? uint_32($2 >> [1]) : $7 ))
	$5 = *($2)
	*($2) = [0]
	$7 = *($2 + [8])
	*($2 + [4 align=4]) = (int_64)0
	*(($15 = (($3 + [32]) + [24]))) = [0]
	*((($3 + [208]) + [24])) = $14
	*(($3 + [248])) = $7
	*($3 + [48]) = (int_64)0
	*($3 + [216]) = $9
	*($3 + [224]) = $13
	*($3 + [240]) = $5
	*($3 + [32]) = (int_64)6138663591592764928
	*($3 + [40]) = (int_64)-3617168760277827584
	*($3 + [208]) = *($0)
	*(($2 = CALL $9([16]))) = $11
	*($2 + [8]) = (int_64)3617214756542218240
	*((($3 + [32]) + [36])) = [0]
	$7 = ($2 + [16])
	*($15) = $7
	*(($3 + [52])) = $7
	*($3 + [48]) = $2
	*($3 + [60 align=4]) = (int_64)0
	$2 = *($3 + [240])
	$7 = ( *((($3 + [208]) + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($7 + [32])
	$5 = (CASTING uint_64)(uint_32 $7)
	$7 = ($3 + [60])
	
.LOOP $label$55:
	$2 = ($2 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$55 }
	if ( ($2 == 0) ){ goto $label$57 }
	CALL $44($7, $2)
	$7 = *(($3 + [64]))
	$2 = *(($3 + [60]))
	goto $label$56 
	
.LABEL $label$57
	$7 = [0]
	$2 = [0]
	
.LABEL $label$56
	*($3 + [324]) = $2
	*($3 + [320]) = $2
	*($3 + [328]) = $7
	*($3 + [192]) = ($3 + [320])
	*($3 + [200]) = ($3 + [208])
	CALL $45(($3 + [200]), ($3 + [192]))
	CALL $46(($3 + [32]))
	$2 = *($3 + [60])
	if ( ($2 == 0) ){ goto $label$58 }
	*(($3 + [64])) = $2
	CALL $11($2)
	
.LABEL $label$58
	$2 = *($3 + [48])
	if ( ($2 == 0) ){ goto $label$59 }
	*(($3 + [52])) = $2
	CALL $11($2)
	
.LABEL $label$59
	if ( (*($3 + [240]) & [1]) ){ goto $label$61 }
	if ( (*($3) & [1]) ){ goto $label$60 }
	goto $label$22 
	
.LABEL $label$61
	CALL $11(*(($3 + [248])))
	if ( ((*($3) & [1]) == 0) ){ goto $label$22 }
	
.LABEL $label$60
	CALL $11(*(($3 + [8])))
	if ( (*($3 + [16]) & [1]) ){ goto $label$21 }
	goto $label$17 
	
.LABEL $label$23
	CALL $17($3)
	
.LABEL $label$22
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$17 }
	
.LABEL $label$21
	CALL $11(*($3 + [24]))
	goto $label$17 
	
.LABEL $label$20
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$18 }
	
.LABEL $label$19
	CALL $11(*($3 + [24]))
	
.LABEL $label$18
	$13 = $10
	
.LABEL $label$17
	*((($3 + [32]) + [32])) = [0]
	*($3 + [48]) = (int_64)-1
	*($3 + [56]) = (int_64)0
	$5 = *($0)
	*($3 + [32]) = $5
	*($3 + [40]) = $5
	if ( ((int_64)$5 == (int_64)CALL current_receiver()) ){ goto $label$62 }
	CALL eosio_assert([0], [8890])
	
.LABEL $label$62
	*(($2 = CALL $9([128])) + [112]) = ($3 + [32])
	*($2 + [16]) = $10
	*($2) = $1
	*($2 + [8]) = $9
	*($2 + [24]) = $8
	*(($2 + [56])) = *(($4 + [40]))
	*(($2 + [48])) = *(($4 + [32]))
	*(($2 + [40])) = *(($4 + [24]))
	*($2 + [32]) = *($4 + [16])
	$9 = *(($4 + [56]))
	$1 = *(($4 + [64]))
	$8 = *(($4 + [72]))
	$10 = *($4 + [48])
	*($2 + [96]) = $12
	*(($2 + [88])) = $8
	*(($2 + [80])) = $1
	*(($2 + [72])) = $9
	*($2 + [64]) = $10
	*($2 + [104]) = $13
	*($3 + [328]) = (($3 + [208]) + [112])
	*($3 + [324]) = ($3 + [208])
	*($3 + [320]) = ($3 + [208])
	CALL $47(($3 + [320]), $2)
	$13 = *($2)
	$15 = CALL db_store_i64(*(($3 + [40])), (int_64)-5003315193367756800, $5, $13, ($3 + [208]), [112])
	*($2 + [116]) = $15
	$7 = ($3 + [48])
	if ( (uint_64)($13 <= *($7)) ){ goto $label$63 }
	*($7) = ( (int_64)-2 ? ((int_64)$13 + (int_64)1) : ((uint_64)$13 > (uint_64)(int_64)-3) )
	
.LABEL $label$63
	*($3 + [320]) = $2
	$5 = *($2)
	*($3 + [208]) = $5
	*($3 + [16]) = $15
	$16 = ($3 + [60])
	$7 = *($16)
	if ( ((uint_32)$7 >= (uint_32)*(($3 + [64]))) ){ goto $label$66 }
	*($7 + [8]) = $5
	*($7 + [16]) = $15
	*($3 + [320]) = [0]
	*($7) = $2
	*($16) = ($7 + [24])
	$2 = *($3 + [320])
	*($3 + [320]) = [0]
	if ( $2 ){ goto $label$65 }
	goto $label$64 
	
.LABEL $label$66
	CALL $48(($3 + [56]), ($3 + [320]), ($3 + [208]), ($3 + [16]))
	$2 = *($3 + [320])
	*($3 + [320]) = [0]
	if ( ($2 == 0) ){ goto $label$64 }
	
.LABEL $label$65
	CALL $11($2)
	
.LABEL $label$64
	if ( $6 ){ goto $label$67 }
	CALL eosio_assert([0], [9073])
	CALL eosio_assert([0], [9107])
	
.LABEL $label$67
	$2 = CALL db_next_i64(*($6 + [36]), ($3 + [208]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$68 }
	CALL $41(($3 + [152]), $2)
	
.LABEL $label$68
	CALL $49(($3 + [152]), $6)
	if ( $4 ){ goto $label$69 }
	CALL eosio_assert([0], [9073])
	CALL eosio_assert([0], [9107])
	
.LABEL $label$69
	$2 = CALL db_next_i64(*($4 + [84]), ($3 + [208]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$70 }
	CALL $42(($3 + [112]), $2)
	
.LABEL $label$70
	CALL $50(($3 + [112]), $4)
	$15 = *($3 + [56])
	if ( ($15 == 0) ){ goto $label$71 }
	$4 = ($3 + [60])
	$2 = *($4)
	if ( ((int_32)$2 == (int_32)$15) ){ goto $label$73 }
	
.LOOP $label$74:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$75 }
	CALL $11($7)
	
.LABEL $label$75
	if ( ((int_32)$15 != (int_32)$2) ){ goto $label$74 }
	$2 = *(($3 + [56]))
	goto $label$72 
	
.LABEL $label$73
	$2 = $15
	
.LABEL $label$72
	*($4) = $15
	CALL $11($2)
	
.LABEL $label$71
	$15 = *($3 + [96])
	if ( ($15 == 0) ){ goto $label$76 }
	$4 = ($3 + [100])
	$2 = *($4)
	if ( ((int_32)$2 == (int_32)$15) ){ goto $label$78 }
	
.LOOP $label$79:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$80 }
	CALL $11($7)
	
.LABEL $label$80
	if ( ((int_32)$15 != (int_32)$2) ){ goto $label$79 }
	$2 = *(($3 + [96]))
	goto $label$77 
	
.LABEL $label$78
	$2 = $15
	
.LABEL $label$77
	*($4) = $15
	CALL $11($2)
	
.LABEL $label$76
	$15 = *($3 + [136])
	if ( ($15 == 0) ){ goto $label$81 }
	$4 = ($3 + [140])
	$2 = *($4)
	if ( ((int_32)$2 == (int_32)$15) ){ goto $label$83 }
	
.LOOP $label$84:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$85 }
	CALL $11($7)
	
.LABEL $label$85
	if ( ((int_32)$15 != (int_32)$2) ){ goto $label$84 }
	$2 = *(($3 + [136]))
	goto $label$82 
	
.LABEL $label$83
	$2 = $15
	
.LABEL $label$82
	*($4) = $15
	CALL $11($2)
	
.LABEL $label$81
	$15 = *($3 + [176])
	if ( ($15 == 0) ){ goto $label$86 }
	$4 = ($3 + [180])
	$2 = *($4)
	if ( ((int_32)$2 == (int_32)$15) ){ goto $label$88 }
	
.LOOP $label$89:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$90 }
	CALL $11($7)
	
.LABEL $label$90
	if ( ((int_32)$15 != (int_32)$2) ){ goto $label$89 }
	$2 = *(($3 + [176]))
	goto $label$87 
	
.LABEL $label$88
	$2 = $15
	
.LABEL $label$87
	*($4) = $15
	CALL $11($2)
	
.LABEL $label$86
	$global$0 = ($3 + [336])
	(unreachable)
}

int_32 .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$5 }
	CALL eosio_assert([0], [8486])
	$3 = [12]
	goto $label$4 
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$6:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$8 }
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$9 }
	$7 = ($7 + [-48])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [-91])
	goto $label$7 
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert([0], [8591])
	$4 = *($0)
	
.LABEL $label$7
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$2
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [8524])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [8591])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$1
	return $0
}

void .FUNC $27 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_64 $12
	$5 = ($global$0 - [272])
	$global$0 = $5
	$6 = CALL $1([8266])
	if ( ($6 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [8643])
	goto $label$3 
	
.LABEL $label$4
	if ( ($6 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$7 = (int_64)0
	
.LOOP $label$5:
	$8 = *(($6 + [8265]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [8688])
	
.LABEL $label$6
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$5 }
	$7 = ((int_64)$7 << (int_64)8)
	goto $label$1 
	
.LABEL $label$2
	$7 = (int_64)0
	
.LABEL $label$1
	$9 = *($3 + [8])
	CALL eosio_assert(((int_64)$9 == (int_64)((int_64)$7 | (int_64)4)), [8270])
	$10 = [0]
	$8 = [0]
	$11 = *($3)
	if ( ((uint_64)((int_64)$11 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$7 }
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$9 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$7 = $9
	$8 = [1]
	$3 = $6
	$6 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$7 = $9
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$3 = ($6 + [1])
	$6 = $3
	if ( $8 ){ goto $label$11 }
	$8 = [1]
	$6 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$8 = [0]
	
.LABEL $label$7
	CALL eosio_assert($8, [8291])
	CALL eosio_assert(((int_64)$11 > (int_64)0), [8308])
	*(($5 + [160])) = [0]
	*($5 + [144]) = (int_64)-1
	*($5 + [152]) = (int_64)0
	$7 = *($0)
	*($5 + [128]) = $7
	*($5 + [136]) = $7
	$6 = CALL db_find_i64($7, $7, (int_64)7235159537265672192, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$12 }
	$10 = CALL $35(($5 + [128]), $6)
	if ( ((int_32)*($10 + [16]) == (int_32)($5 + [128])) ){ goto $label$12 }
	CALL eosio_assert([0], [8816])
	
.LABEL $label$12
	if ( ((int_64)*($0) == (int_64)$1) ){ goto $label$13 }
	$8 = *($4)
	$6 = ($8 & [1])
	if ( $6 ){ goto $label$15 }
	if ( (uint_32($8 >> [1]) == 0) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$15
	if ( (*($4 + [4]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	if ( $6 ){ goto $label$18 }
	$9 = (int_64)0
	$7 = (int_64)0
	$8 = uint_32($8 >> [1])
	if ( ($8 == 0) ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$18
	$9 = (int_64)0
	$7 = (int_64)0
	$8 = *($4 + [4])
	if ( ($8 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	if ( $6 ){ goto $label$19 }
	$4 = ($4 + [1])
	$7 = (int_64)0
	$6 = [0]
	
.LOOP $label$20:
	$3 = *(($4 + $6))
	if ( ((uint_32)(($3 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$13 }
	$7 = ((int_64)((int_64)((int_64)$7 * (int_64)10) + (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)) + (int_64)-48)
	$6 = ($6 + [1])
	if ( ($6 <= $8) ){ goto $label$20 }
	goto $label$16 
	
.LABEL $label$19
	$4 = *($4 + [8])
	$7 = (int_64)0
	$6 = [0]
	
.LOOP $label$21:
	$3 = *(($4 + $6))
	if ( ((uint_32)(($3 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$13 }
	$7 = ((int_64)((int_64)((int_64)$7 * (int_64)10) + (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)) + (int_64)-48)
	$6 = ($6 + [1])
	if ( ($6 <= $8) ){ goto $label$21 }
	
.LABEL $label$16
	CALL eosio_assert((uint_64)(((int_64)$7 + (int_64)-1) <= (int_64)3), [8340])
	$12 = *($10 + [8])
	*((($5 + [88]) + [32])) = [0]
	*($5 + [104]) = (int_64)-1
	*($5 + [112]) = $9
	$9 = *($0)
	*($5 + [88]) = $9
	*($5 + [96]) = $9
	if ( ((int_64)$9 == (int_64)CALL current_receiver()) ){ goto $label$22 }
	CALL eosio_assert([0], [8890])
	
.LABEL $label$22
	*(($6 = CALL $9([48])) + [32]) = ($5 + [88])
	*($6 + [8]) = $1
	*($6) = $12
	*($6 + [16]) = $11
	*($6 + [24]) = $7
	*($5 + [16]) = (($5 + [176]) + [32])
	*($5 + [12]) = ($5 + [176])
	*($5 + [8]) = ($5 + [176])
	CALL $36(($5 + [8]), $6)
	$7 = *($6)
	$3 = CALL db_store_i64(*(($5 + [96])), (int_64)3617214763094933504, $9, $7, ($5 + [176]), [32])
	*($6 + [36]) = $3
	$8 = ($5 + [104])
	if ( (uint_64)($7 <= *($8)) ){ goto $label$23 }
	*($8) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$23
	*($5 + [8]) = $6
	$7 = *($6)
	*($5 + [176]) = $7
	*($5 + [48]) = $3
	$4 = ($5 + [116])
	$8 = *($4)
	if ( ((uint_32)$8 >= (uint_32)*(($5 + [120]))) ){ goto $label$26 }
	*($8 + [8]) = $7
	*($8 + [16]) = $3
	*($5 + [8]) = [0]
	*($8) = $6
	*($4) = ($8 + [24])
	$6 = *($5 + [8])
	*($5 + [8]) = [0]
	if ( $6 ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	CALL $37(($5 + [112]), ($5 + [8]), ($5 + [176]), ($5 + [48]))
	$6 = *($5 + [8])
	*($5 + [8]) = [0]
	if ( ($6 == 0) ){ goto $label$24 }
	
.LABEL $label$25
	CALL $11($6)
	
.LABEL $label$24
	$7 = *($0)
	if ( $10 ){ goto $label$27 }
	CALL eosio_assert([0], [8941])
	
.LABEL $label$27
	CALL $38(($5 + [128]), $10, $7)
	*($5 + [176]) = ((int_64)CALL current_time() + (int_64)$1)
	CALL sha256(($5 + [176]), [8], ($5 + [48]))
	*((($5 + [8]) + [32])) = [0]
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	$7 = *($0)
	*($5 + [8]) = $7
	*($5 + [16]) = $7
	if ( ((int_64)$7 == (int_64)CALL current_receiver()) ){ goto $label$28 }
	CALL eosio_assert([0], [8890])
	
.LABEL $label$28
	*(($6 = CALL $9([96])) + [80]) = ($5 + [8])
	*($6) = $12
	*($6 + [16]) = *($5 + [48])
	*(($6 + [24])) = *($5 + [56])
	*(($6 + [32])) = *((($5 + [48]) + [16]))
	*(($6 + [40])) = *((($5 + [48]) + [24]))
	*($5 + [264]) = (($5 + [176]) + [72])
	*($5 + [260]) = ($5 + [176])
	*($5 + [256]) = ($5 + [176])
	CALL $39(($5 + [256]), $6)
	$9 = *($6)
	$3 = CALL db_store_i64(*((($5 + [8]) + [8])), (int_64)-4425754204123955200, $7, $9, ($5 + [176]), [72])
	*($6 + [84]) = $3
	$8 = (($5 + [8]) + [16])
	if ( (uint_64)($9 <= *($8)) ){ goto $label$29 }
	*($8) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$29
	*($5 + [256]) = $6
	$7 = *($6)
	*($5 + [176]) = $7
	*($5 + [172]) = $3
	$0 = ($5 + [36])
	$8 = *($0)
	if ( ((uint_32)$8 >= (uint_32)*(($5 + [40]))) ){ goto $label$32 }
	*($8 + [8]) = $7
	*($8 + [16]) = $3
	*($5 + [256]) = [0]
	*($8) = $6
	*($0) = ($8 + [24])
	$6 = *($5 + [256])
	*($5 + [256]) = [0]
	if ( $6 ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	CALL $40(($5 + [32]), ($5 + [256]), ($5 + [176]), ($5 + [172]))
	$6 = *($5 + [256])
	*($5 + [256]) = [0]
	if ( ($6 == 0) ){ goto $label$30 }
	
.LABEL $label$31
	CALL $11($6)
	
.LABEL $label$30
	$3 = *($5 + [32])
	if ( ($3 == 0) ){ goto $label$33 }
	$0 = ($5 + [36])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$35 }
	
.LOOP $label$36:
	$6 = ($6 + [-24])
	$8 = *($6)
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$37 }
	CALL $11($8)
	
.LABEL $label$37
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$36 }
	$6 = *(($5 + [32]))
	goto $label$34 
	
.LABEL $label$35
	$6 = $3
	
.LABEL $label$34
	*($0) = $3
	CALL $11($6)
	
.LABEL $label$33
	$3 = *($5 + [112])
	if ( ($3 == 0) ){ goto $label$13 }
	$0 = ($5 + [116])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$39 }
	
.LOOP $label$40:
	$6 = ($6 + [-24])
	$8 = *($6)
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$41 }
	CALL $11($8)
	
.LABEL $label$41
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$40 }
	$6 = *(($5 + [112]))
	goto $label$38 
	
.LABEL $label$39
	$6 = $3
	
.LABEL $label$38
	*($0) = $3
	CALL $11($6)
	
.LABEL $label$13
	$3 = *($5 + [152])
	if ( ($3 == 0) ){ goto $label$42 }
	$0 = ($5 + [156])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$44 }
	
.LOOP $label$45:
	$6 = ($6 + [-24])
	$8 = *($6)
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$46 }
	CALL $11($8)
	
.LABEL $label$46
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$45 }
	$6 = *(($5 + [152]))
	goto $label$43 
	
.LABEL $label$44
	$6 = $3
	
.LABEL $label$43
	*($0) = $3
	CALL $11($6)
	
.LABEL $label$42
	$global$0 = ($5 + [272])
}

int_32 .FUNC $26 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$3 = ($global$0 - [208])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [104])) = (int_64)0
	*(($4 + [96])) = (int_64)0
	*(($4 + [88])) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [64]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8807])
	
.LABEL $label$5
	$8 = ($2 + $7)
	$3 = ($4 + [80])
	CALL memcpy(($4 + [64]), $2, [8])
	$9 = ($2 + [8])
	if ( ((uint_32)($7 + [-8]) > (uint_32)[31]) ){ goto $label$6 }
	CALL eosio_assert([0], [8807])
	
.LABEL $label$6
	CALL memcpy($3, $9, [32])
	*((($4 + [32]) + [24])) = $8
	*($4 + [48]) = $2
	*(($4 + [52])) = ($2 + [40])
	*($4 + [40]) = $1
	*($4 + [32]) = $0
	*(($8 = (($4 + [112]) + [16]))) = *(($3 + [16]))
	*(($9 = (($4 + [112]) + [24]))) = *(($3 + [24]))
	*($4 + [112]) = *($3)
	*($4 + [120]) = *(($3 + [8]))
	$0 = *($4 + [64])
	*((($4 + [144]) + [24])) = *($9)
	*((($4 + [144]) + [16])) = *($8)
	*($4 + [152]) = *($4 + [120])
	*($4 + [144]) = *($4 + [112])
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	$1 = *((($4 + [144]) + [24]))
	*((($4 + [176]) + [24])) = $1
	$10 = *((($4 + [144]) + [16]))
	*((($4 + [176]) + [16])) = $10
	*(($4 + [16])) = $10
	*(($4 + [24])) = $1
	$1 = *($4 + [152])
	*($4 + [184]) = $1
	$10 = *($4 + [144])
	*($4) = $10
	*($4 + [176]) = $10
	*($4 + [8]) = $1
	CALL void $3((int_32 $0), (int_64 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $3($2)
	
.LABEL $label$8
	$global$0 = ($4 + [208])
	return [1]
}

void .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9182])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [9232])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $11($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $11($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [36]))
}

void .FUNC $48 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $22($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $69 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $22($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8807])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8807])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [16])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8807])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $3, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [24])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8807])
	$3 = *($2)
	
.LABEL $label$4
	CALL memcpy($4, $3, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [32])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[31]) ){ goto $label$5 }
	CALL eosio_assert([0], [8807])
	$3 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $3, [32])
	$3 = (*($2) + [32])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [64])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[31]) ){ goto $label$6 }
	CALL eosio_assert([0], [8807])
	$3 = *($2)
	
.LABEL $label$6
	CALL memcpy($4, $3, [32])
	$3 = (*($2) + [32])
	*($2) = $3
	$2 = ($1 + [96])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [8807])
	$3 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($2, $3, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$1 = ($1 + [104])
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [8807])
	$3 = *($2)
	
.LABEL $label$8
	CALL memcpy($1, $3, [8])
	*($2) = (*($2) + [8])
	return $0
}

void .FUNC $43 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8976])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9022])
	
.LABEL $label$2
	$3 = *($3)
	*($1 + [48]) = *($3)
	*(($1 + [56])) = *(($3 + [8]))
	*(($1 + [64])) = *(($3 + [16]))
	*(($1 + [72])) = *(($3 + [24]))
	$6 = *($1)
	$4 = $4
	$3 = ($4 + [-80])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-8])
	CALL $39($5, $1)
	CALL db_update_i64(*($1 + [84]), $2, $3, [72])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [16])
}

int_32 .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8867])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $9([96])) + [80]) = $0
	CALL $66(($3 + [32]), $5)
	*($5 + [84]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $40(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8867])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $9([48])) + [32]) = $0
	*($5 + [8]) = (int_64)0
	CALL $65(($3 + [32]), $5)
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $37(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $40 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $22($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8801])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8801])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [16])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8801])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [24])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8801])
	$3 = *($2)
	
.LABEL $label$4
	CALL memcpy($3, $4, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [32])
	if ( ((int_32)(*($5) - $3) > (int_32)[31]) ){ goto $label$5 }
	CALL eosio_assert([0], [8801])
	$3 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $2, [32])
	$3 = (*($2) + [32])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [64])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $3) > (int_32)[31]) ){ goto $label$6 }
	CALL eosio_assert([0], [8801])
	$3 = *($2)
	
.LABEL $label$6
	CALL memcpy($3, $4, [32])
	$3 = (*($2) + [32])
	*($2) = $3
	$2 = ($1 + [96])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [8801])
	$3 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$1 = ($1 + [104])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [8801])
	$3 = *($2)
	
.LABEL $label$8
	CALL memcpy($3, $1, [8])
	*($2) = (*($2) + [8])
	return $0
}

void .FUNC $46 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $44($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $56(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL $11($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

void .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8801])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8801])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8801])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8801])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $67(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $9($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $22($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $11($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8807])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8807])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8807])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8807])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2 + [8]) = $4
	CALL $64(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

int_32 .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [8801])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [8801])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [8801])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $8 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $6())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $7($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $9 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $2($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $2($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $6 ()
{
	return [8208]
}

int_32 .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $2($1)
	
.LABEL $label$2
	*(CALL $6()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $2(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $3($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC $4 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

void .FUNC $5 (int_32 $0)
{
}

int_32 .FUNC $2 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8220])
	return $3
	
.LABEL $label$1
	return $3
}

void .FUNC $3 (int_32 $0)
{
}

void .FUNC $0 ()
{
	CALL $4()
}

int_32 .FUNC $1 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $14 (int_32 $0, int_32 $1)
{
	return CALL $13($0, $1)
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $3($0)
	
.LABEL $label$1
}

void .FUNC $16 (int_32 $0, int_32 $1)
{
	CALL $15($0, $1)
}

void .FUNC $17 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $10 (int_32 $0)
{
	return CALL $9($0)
}

void .FUNC $11 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $3($0)
	
.LABEL $label$1
}

void .FUNC $12 (int_32 $0)
{
	CALL $11($0)
}

int_32 .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $8(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $8(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8801])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8801])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [16])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8801])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$1 = ($1 + [24])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8801])
	$3 = *($2)
	
.LABEL $label$4
	CALL memcpy($3, $1, [8])
	*($2) = (*($2) + [8])
	return $0
}

void .FUNC $37 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $22($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [24]))
	*($2 + [32]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $18(($2 + [16]), ($1 + [32]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$3 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$6 = CALL $18(($2 + [64]), $1)
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $5), (int_64 $4), (int_64 $2), (int_32 $6), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

int_32 .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8867])
	
.LABEL $label$5
	$2 = CALL $2($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $9([32])) + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [8807])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	$7 = ($5 + [8])
	$8 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [8807])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $55(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $3($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $11($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

int_32 .FUNC $32 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [32])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [20])) = $2
	*(($4 + [24])) = ($2 + $7)
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $2
	$3 = ($4 + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $3($2)
	
.LABEL $label$6
	$global$0 = ($4 + [32])
	return [1]
}

void .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8807])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8807])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8807])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $0, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8807])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($5 + [24])) = *($2 + [8])
	*($0) = (*($0) + [8])
	CALL $62(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $30 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_64 $20
	$3 = ($global$0 - [432])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $2($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = ($4 + [184]))) = (int_64)0
	*(($8 = ($4 + [176]))) = (int_64)0
	*(($9 = ($4 + [168]))) = (int_64)0
	*(($10 = ($4 + [216]))) = (int_64)0
	*(($11 = ($4 + [208]))) = (int_64)0
	*(($12 = ($4 + [200]))) = (int_64)0
	*($4 + [136]) = (int_64)0
	*($4 + [128]) = (int_64)0
	*($4 + [144]) = (int_64)0
	*($4 + [152]) = (int_64)0
	*($4 + [160]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [224]) = (int_64)0
	*($4 + [232]) = (int_64)0
	*($4 + [116]) = $2
	*($4 + [112]) = $2
	*($4 + [120]) = ($2 + $7)
	*($4 + [368]) = ($4 + [112])
	*($4 + [400]) = ($4 + [128])
	CALL $51(($4 + [400]), ($4 + [368]))
	*(($13 = (($4 + [64]) + [8]))) = *($4 + [120])
	*($4 + [64]) = *($4 + [112])
	*(($14 = (($4 + [368]) + [8]))) = *($13)
	*($4 + [368]) = *($4 + [64])
	$13 = *($14)
	*((($4 + [400]) + [8])) = $13
	*((($4 + [80]) + [24])) = $13
	*($4 + [80]) = $0
	*($4 + [88]) = $1
	$0 = *($4 + [368])
	*($4 + [96]) = $0
	*($4 + [400]) = $0
	*(($13 = (($4 + [272]) + [16]))) = *($8)
	*(($8 = (($4 + [272]) + [24]))) = *($3)
	*(($3 = (($4 + [240]) + [16]))) = *($11)
	*(($11 = (($4 + [240]) + [24]))) = *($10)
	*($4 + [272]) = *($4 + [160])
	*($4 + [280]) = *($9)
	*($4 + [240]) = *($4 + [192])
	*($4 + [248]) = *($12)
	$0 = *($4 + [152])
	$1 = *($4 + [144])
	$15 = *($4 + [136])
	$16 = *($4 + [128])
	$17 = *($4 + [232])
	$18 = *($4 + [224])
	*((($4 + [336]) + [24])) = *($11)
	*((($4 + [336]) + [16])) = *($3)
	*((($4 + [304]) + [16])) = *($13)
	*((($4 + [304]) + [24])) = *($8)
	*($4 + [344]) = *($4 + [248])
	*($4 + [336]) = *($4 + [240])
	*($4 + [304]) = *($4 + [272])
	*($4 + [312]) = *($4 + [280])
	$3 = (($4 + [80]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$19 = *((($4 + [304]) + [24]))
	*((($4 + [400]) + [24])) = $19
	$20 = *((($4 + [304]) + [16]))
	*((($4 + [400]) + [16])) = $20
	*(($5 = (($4 + [368]) + [16]))) = *((($4 + [336]) + [16]))
	*(($8 = (($4 + [368]) + [24]))) = *((($4 + [336]) + [24]))
	*((($4 + [32]) + [16])) = $20
	*((($4 + [32]) + [24])) = $19
	$19 = *($4 + [312])
	*($4 + [408]) = $19
	$20 = *($4 + [304])
	*($4 + [400]) = $20
	*($4 + [368]) = *($4 + [336])
	*($4 + [376]) = *($4 + [344])
	*($4 + [32]) = $20
	*($4 + [40]) = $19
	*(($4 + [24])) = *($8)
	*(($4 + [16])) = *($5)
	*($4 + [8]) = *($4 + [376])
	*($4) = *($4 + [368])
	CALL void $3((int_32 $16), (int_64 $15), (int_64 $1), (int_64 $0), (int_64 ($4 + [32])), (int_32 $4), (int_32 $18), (int_64 $17), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $3($2)
	
.LABEL $label$6
	$global$0 = ($4 + [432])
	return [1]
}

void .FUNC $31 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$1 = ($global$0 - [112])
	$global$0 = $1
	CALL require_auth(*($0))
	*((($1 + [40]) + [32])) = [0]
	*($1 + [56]) = (int_64)-1
	$2 = *($0)
	*($1 + [40]) = $2
	*($1 + [48]) = $2
	*($1 + [64]) = (int_64)0
	$3 = [0]
	$4 = CALL db_find_i64($2, $2, (int_64)7235159537265672192, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $35(($1 + [40]), $4)
	if ( ((int_32)*($3 + [16]) == (int_32)($1 + [40])) ){ goto $label$1 }
	CALL eosio_assert([0], [8816])
	
.LABEL $label$1
	*(($1 + [32])) = [0]
	*($1) = (int_64)6138663591592764928
	*($1 + [16]) = (int_64)-1
	*($1 + [24]) = (int_64)0
	*($1 + [8]) = *($0)
	$4 = CALL $1([8266])
	if ( ($4 <= [8]) ){ goto $label$5 }
	CALL eosio_assert([0], [8643])
	goto $label$4 
	
.LABEL $label$5
	if ( ($4 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = (int_64)0
	
.LOOP $label$6:
	$5 = *(($4 + [8265]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [8688])
	
.LABEL $label$7
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$6 }
	$2 = ((int_64)$2 & (int_64)72057594037927935)
	goto $label$2 
	
.LABEL $label$3
	$2 = (int_64)0
	
.LABEL $label$2
	$5 = *(($1 + [28]))
	$6 = *(($1 + [24]))
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$12 }
	
.LOOP $label$14:
	$4 = ($5 + [-24])
	$7 = *($4)
	if ( ((int_64)*($7 + [8]) == (int_64)$2) ){ goto $label$13 }
	$5 = $4
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$12 }
	if ( ((int_32)*($7 + [16]) == (int_32)$1) ){ goto $label$11 }
	CALL eosio_assert([0], [8816])
	if ( $3 ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$12
	$4 = CALL db_find_i64(*($1), *(($1 + [8])), (int_64)3607749779137757184, $2)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$10 }
	if ( ((int_32)*(CALL $54($1, $4) + [16]) == (int_32)$1) ){ goto $label$11 }
	CALL eosio_assert([0], [8816])
	
.LABEL $label$11
	if ( $3 ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	CALL eosio_assert([0], [8467])
	if ( $3 ){ goto $label$8 }
	
.LABEL $label$9
	$8 = *($0)
	if ( ((int_64)*($1 + [40]) == (int_64)CALL current_receiver()) ){ goto $label$15 }
	CALL eosio_assert([0], [8890])
	
.LABEL $label$15
	*(($4 = CALL $9([32])) + [16]) = ($1 + [40])
	*($4) = (int_64)0
	CALL memcpy(($1 + [96]), $4, [8])
	CALL memcpy((($1 + [96]) | [8]), ($4 + [8]), [8])
	$2 = *($4)
	$6 = CALL db_store_i64(*((($1 + [40]) + [8])), (int_64)7235159537265672192, $8, $2, ($1 + [96]), [16])
	*($4 + [20]) = $6
	$5 = (($1 + [40]) + [16])
	if ( (uint_64)($2 <= *($5)) ){ goto $label$16 }
	*($5) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	*($1 + [88]) = $4
	$2 = *($4)
	*($1 + [96]) = $2
	*($1 + [84]) = $6
	$7 = ($1 + [68])
	$5 = *($7)
	if ( ((uint_32)$5 >= (uint_32)*((($1 + [40]) + [32]))) ){ goto $label$18 }
	*($5 + [8]) = $2
	*($5 + [16]) = $6
	*($1 + [88]) = [0]
	*($5) = $4
	*($7) = ($5 + [24])
	$4 = *($1 + [88])
	*($1 + [88]) = [0]
	if ( $4 ){ goto $label$17 }
	goto $label$8 
	
.LABEL $label$18
	CALL $55(($1 + [64]), ($1 + [88]), ($1 + [96]), ($1 + [84]))
	$4 = *($1 + [88])
	*($1 + [88]) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	
.LABEL $label$17
	CALL $11($4)
	
.LABEL $label$8
	$6 = *($1 + [24])
	if ( ($6 == 0) ){ goto $label$19 }
	$7 = ($1 + [28])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$21 }
	
.LOOP $label$22:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$23 }
	CALL $11($5)
	
.LABEL $label$23
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$22 }
	$4 = *(($1 + [24]))
	goto $label$20 
	
.LABEL $label$21
	$4 = $6
	
.LABEL $label$20
	*($7) = $6
	CALL $11($4)
	
.LABEL $label$19
	$6 = *($1 + [64])
	if ( ($6 == 0) ){ goto $label$24 }
	$7 = ($1 + [68])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$26 }
	
.LOOP $label$27:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$28 }
	CALL $11($5)
	
.LABEL $label$28
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$27 }
	$4 = *(($1 + [64]))
	goto $label$25 
	
.LABEL $label$26
	$4 = $6
	
.LABEL $label$25
	*($7) = $6
	CALL $11($4)
	
.LABEL $label$24
	$global$0 = ($1 + [112])
}

void .FUNC $58 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$2 = ($global$0 - [272])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [264])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [264])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8807])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*($3 + [256]) = (int_64)0
	$7 = ($2 + [8])
	$5 = ($4 & [-8])
	if ( ((int_32)$5 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [8807])
	
.LABEL $label$6
	CALL memcpy(($3 + [256]), $7, [8])
	$7 = ($2 + [16])
	if ( ((int_32)$5 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [8807])
	
.LABEL $label$7
	CALL memcpy(($3 + [248]), $7, [8])
	$7 = ($2 + [24])
	if ( ((int_32)$5 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [8807])
	
.LABEL $label$8
	CALL memcpy(($3 + [240]), $7, [8])
	$7 = ($2 + [32])
	$4 = ($4 & [-32])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [8807])
	
.LABEL $label$9
	CALL memcpy(($3 + [208]), $7, [32])
	$7 = ($2 + [64])
	if ( ((int_32)$4 != (int_32)[64]) ){ goto $label$10 }
	CALL eosio_assert([0], [8807])
	
.LABEL $label$10
	CALL memcpy(($3 + [176]), $7, [32])
	$4 = ($2 + [96])
	if ( ((int_32)$5 != (int_32)[96]) ){ goto $label$11 }
	CALL eosio_assert([0], [8807])
	
.LABEL $label$11
	CALL memcpy(($3 + [168]), $4, [8])
	$4 = ($2 + [104])
	if ( ((int_32)$5 != (int_32)[104]) ){ goto $label$12 }
	CALL eosio_assert([0], [8807])
	
.LABEL $label$12
	CALL memcpy(($3 + [160]), $4, [8])
	*((($3 + [128]) + [24])) = $6
	*(($4 = (($3 + [96]) + [16]))) = *((($3 + [208]) + [16]))
	*(($5 = (($3 + [96]) + [24]))) = *((($3 + [208]) + [24]))
	*(($6 = (($3 + [64]) + [16]))) = *((($3 + [176]) + [16]))
	*(($7 = (($3 + [64]) + [24]))) = *((($3 + [176]) + [24]))
	*($3 + [144]) = $2
	*(($3 + [148])) = ($2 + [112])
	*($3 + [136]) = $1
	*($3 + [128]) = $0
	*($3 + [96]) = *($3 + [208])
	*($3 + [104]) = *($3 + [216])
	*($3 + [64]) = *($3 + [176])
	*($3 + [72]) = *($3 + [184])
	$0 = *($3 + [264])
	$1 = *($3 + [256])
	$8 = *($3 + [248])
	$9 = *($3 + [240])
	*((($3 + [32]) + [24])) = *($5)
	*((($3 + [32]) + [16])) = *($4)
	*(($3 + [24])) = *($7)
	*(($3 + [16])) = *($6)
	*($3 + [40]) = *($3 + [104])
	*($3 + [32]) = *($3 + [96])
	*($3 + [8]) = *($3 + [72])
	*($3) = *($3 + [64])
	CALL $29(($3 + [128]), $0, $1, $8, $9, ($3 + [32]), $3, *($3 + [168]), *($3 + [160]))
	$global$0 = ($3 + [272])
}

void .FUNC $59 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*(($3 + [20])) = $2
	*(($3 + [24])) = ($2 + $4)
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	CALL $31($3)
	$global$0 = ($3 + [32])
}

int_32 .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [8801])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [8801])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [8812])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $44($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [8807])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = (*($0) + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[31]) ){ goto $label$1 }
	CALL eosio_assert([0], [8807])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	$0 = *($0)
	$2 = ($0 + [64])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[31]) ){ goto $label$2 }
	CALL eosio_assert([0], [8807])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	$2 = ($0 + [96])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [8807])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($0 + [104])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [8807])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9182])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [9232])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $11($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $11($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [84]))
}

void .FUNC $38 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = $global$0
	$4 = $3
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [8976])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9022])
	
.LABEL $label$2
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)1)
	$5 = *($1)
	$6 = $3
	$3 = ($6 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	CALL memcpy(($6 + [-8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $3, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = $4
}

int_32 .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8867])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $9([128])) + [112]) = $0
	*($5 + [8]) = (int_64)0
	CALL $68(($3 + [32]), $5)
	*($5 + [116]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $48(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [112]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [9182])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [9232])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $11($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $11($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [116]))
}

int_32 .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [8867])
	
.LABEL $label$5
	$2 = CALL $2($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $9([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [8807])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [8807])
	
.LABEL $label$8
	CALL memcpy(($3 + [24]), $7, [8])
	$8 = *($3 + [24])
	*(($5 + [8])) = $8
	*($5 + [20]) = $1
	*($3 + [16]) = $5
	*($3 + [24]) = $8
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $8
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $69(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $3($2)
	
.LABEL $label$9
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $11($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $55 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $22($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $61(CALL $60($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [8801])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [8801])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $57 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$2 = ($global$0 - [144])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $2($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [136])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [136])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8807])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	$5 = ($2 + [8])
	if ( ((uint_32)($4 + [-8]) > (uint_32)[31]) ){ goto $label$6 }
	CALL eosio_assert([0], [8807])
	
.LABEL $label$6
	CALL memcpy(($3 + [96]), $5, [32])
	*((($3 + [64]) + [24])) = $6
	$7 = *((($3 + [96]) + [16]))
	*((($3 + [32]) + [16])) = $7
	$8 = *((($3 + [96]) + [24]))
	*((($3 + [32]) + [24])) = $8
	*(($3 + [16])) = $7
	*(($3 + [24])) = $8
	*($3 + [80]) = $2
	*(($3 + [84])) = ($2 + [40])
	*($3 + [72]) = $1
	*($3 + [64]) = $0
	$0 = *($3 + [96])
	*($3 + [32]) = $0
	$1 = *($3 + [104])
	*($3 + [40]) = $1
	*($3) = $0
	*($3 + [8]) = $1
	CALL $25(($3 + [64]), *($3 + [136]), $3)
	$global$0 = ($3 + [144])
}