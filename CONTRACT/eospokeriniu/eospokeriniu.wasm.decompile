(data (i32.const 4) "P}\00\00")
(data (i32.const 16) "fengwei12321\00")
(data (i32.const 32) "fengwei12322\00")
(data (i32.const 48) "fengwei12323\00")
(data (i32.const 64) "fengwei12324\00")
(data (i32.const 80) "fengwei12325\00")
(data (i32.const 96) "5125haoi4311\00")
(data (i32.const 112) "15qwer123452\00")
(data (i32.const 128) "tiantian4231\00")
(data (i32.const 144) "tgyd12341234\00")
(data (i32.const 160) "awesomesjack\00")
(data (i32.const 176) "chengguangch\00")
(data (i32.const 192) "eospokerbnk1\00")
(data (i32.const 208) "-\00")
(data (i32.const 240) ".\00")
(data (i32.const 256) " \00")
(data (i32.const 272) "\00\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00\01\00\00\00\03\00\00\00\00\00\00\00\01\00\00\00\04\00\00\00\00\00\00\00\02\00\00\00\03\00\00\00\00\00\00\00\02\00\00\00\04\00\00\00\00\00\00\00\03\00\00\00\04\00\00\00\01\00\00\00\02\00\00\00\03\00\00\00\01\00\00\00\02\00\00\00\04\00\00\00\01\00\00\00\03\00\00\00\04\00\00\00\02\00\00\00\03\00\00\00\04\00\00\00")
(data (i32.const 400) "\03\00\00\00\04\00\00\00\02\00\00\00\04\00\00\00\02\00\00\00\03\00\00\00\01\00\00\00\04\00\00\00\01\00\00\00\03\00\00\00\01\00\00\00\02\00\00\00\00\00\00\00\04\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\01\00\00\00")
(data (i32.const 480) "_self=\00")
(data (i32.const 496) "niuniu.cpp,\00")
(data (i32.const 512) ",receiver=\00")
(data (i32.const 528) ",code=\00")
(data (i32.const 544) ",action=\00")
(data (i32.const 560) "\0d\n\00")
(data (i32.const 576) "onerror\00")
(data (i32.const 592) "eosio\00")
(data (i32.const 608) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 672) "transfer\00")
(data (i32.const 688) "eosio.token\00")
(data (i32.const 704) "mycontract | use eosio.token\00")
(data (i32.const 736) "cleargamehis invalid account\00")
(data (i32.const 768) "cannot pass end iterator to erase\00")
(data (i32.const 816) "cannot increment end iterator\00")
(data (i32.const 848) "object passed to erase is not in multi_index\00")
(data (i32.const 896) "cannot erase objects in table of another contract\00")
(data (i32.const 960) "attempt to remove object that was not in multi_index\00")
(data (i32.const 1024) "error reading iterator\00")
(data (i32.const 1056) "read\00")
(data (i32.const 1072) "eclearconfinfo invalid account\00")
(data (i32.const 1104) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 1168) "unlock stake, \00")
(data (i32.const 1184) "lock stake, \00")
(data (i32.const 1200) "to account does not exist\00")
(data (i32.const 1232) "cannot create objects in table of another contract\00")
(data (i32.const 1296) "write\00")
(data (i32.const 1312) "cleargamectx invalid account\00")
(data (i32.const 1344) "playing\00")
(data (i32.const 1360) "wait\00")
(data (i32.const 1376) "end\00")
(data (i32.const 1392) "waitstart\00")
(data (i32.const 1408) "\e6\95\b0\e6\8d\ae\e9\94\99\e8\af\af\00")
(data (i32.const 1424) "active\00")
(data (i32.const 1440) "opengameloop\00")
(data (i32.const 1456) "firewall.x\00")
(data (i32.const 1472) "cannot pass end iterator to modify\00")
(data (i32.const 1520) "object passed to modify is not in multi_index\00")
(data (i32.const 1568) "cannot modify objects in table of another contract\00")
(data (i32.const 1632) "updater cannot change primary key when modifying an object\00")
(data (i32.const 1696) "singleton does not exist\00")
(data (i32.const 1728) "genid=\00")
(data (i32.const 1744) "block=\00")
(data (i32.const 1760) "\e4\b8\8b\e5\ba\84\e8\bf\94\e8\bf\98\00")
(data (i32.const 1776) "\00\07\00\00")
(data (i32.const 1792) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 1840) "invalid symbol name\00")
(data (i32.const 1872) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 1936) "clearbetinfo\00")
(data (i32.const 1952) "clearbetinfo for:\00")
(data (i32.const 1984) "result\00")
(data (i32.const 2000) "unable to find key\00")
(data (i32.const 2032) "\01\00\00\00\01\00\00\00\01\00\00\00\01\00\00\00\01\00\00\00\01\00\00\00\01\00\00\00\02\00\00\00\02\00\00\00\02\00\00\00\03\00\00\00")
(data (i32.const 2080) "zhuang tian time=\00")
(data (i32.const 2112) "tian time=\00")
(data (i32.const 2128) ">>>>>>>>trace:\00")
(data (i32.const 2144) "tian res\00")
(data (i32.const 2160) " rs.fenhong=\00")
(data (i32.const 2176) ",res.lirun=\00")
(data (i32.const 2192) "di res\00")
(data (i32.const 2208) "xuan res\00")
(data (i32.const 2224) "huang res\00")
(data (i32.const 2240) "\e6\b8\b8\e6\88\8f\e7\bb\93\e7\ae\97\00")
(data (i32.const 2256) "zhuang res\00")
(data (i32.const 2272) "on cal lirun:\00")
(data (i32.const 2288) "lirun=\00")
(data (i32.const 2304) "eospokerteam\00")
(data (i32.const 2320) "lirun\00")
(data (i32.const 2336) "on cal fenhong:\00")
(data (i32.const 2352) "fenhong=\00")
(data (i32.const 2368) "eospokeridiv\00")
(data (i32.const 2384) "fenhong\00")
(data (i32.const 2400) "lirun zhuan zhang\0d\n\00")
(data (i32.const 2432) "on cal result:\00")
(data (i32.const 2448) "s=\00")
(data (i32.const 2464) "total=\00")
(data (i32.const 2480) "get\00")
(data (i32.const 2488) "mN\c6A90\00\00\00\00\00\00\00\00\00\00")
(data (i32.const 2512) " I am here \00")
(data (i32.const 2528) "send cards---------------\00")
(data (i32.const 2560) ", index=\00")
(data (i32.const 2576) "downbanker\00")
(data (i32.const 2592) "stop\00")
(data (i32.const 2608) "infixing\00")
(data (i32.const 2624) "chconfig, \00")
(data (i32.const 2640) ",field=\00")
(data (i32.const 2656) ",val=\00")
(data (i32.const 2672) "poolpercent\00")
(data (i32.const 2688) "lowamount\00")
(data (i32.const 2704) "fixing invalid account\00")
(data (i32.const 2736) "on function:\00")
(data (i32.const 2752) "name=\00")
(data (i32.const 2768) ",symbol=\00")
(data (i32.const 2784) "memo=\00")
(data (i32.const 2800) "EOS\00")
(data (i32.const 2816) "tobebanker\00")
(data (i32.const 2832) "\e6\b8\b8\e6\88\8f\e7\bb\b4\e6\8a\a4\e4\b8\ad\e4\b8\8d\e8\83\bd\e4\b8\8a\e5\ba\84\00")
(data (i32.const 2864) "\e4\b8\8b\e6\b3\a8\e9\87\91\e9\a2\9d\e4\b8\8d\e8\b6\b3\00")
(data (i32.const 2896) "\e5\b7\b2\e7\bb\8f\e4\b8\8a\e5\ba\84\00")
(data (i32.const 2912) "bet|tian\00")
(data (i32.const 2928) "bet|di\00")
(data (i32.const 2944) "bet|xuan\00")
(data (i32.const 2960) "bet|huang\00")
(data (i32.const 2976) "\e6\b8\b8\e6\88\8f\e7\bb\b4\e6\8a\a4\e4\b8\ad\e4\b8\8d\e8\83\bd\e4\b8\8b\e6\b3\a8\00")
(data (i32.const 3008) "\e6\b8\b8\e6\88\8f\e6\b2\a1\e6\9c\89\e5\bc\80\e5\a7\8b\e4\b8\8d\e8\83\bd\e4\b8\8b\e6\b3\a8\00")
(data (i32.const 3040) "tian\00")
(data (i32.const 3056) "di\00")
(data (i32.const 3072) "xuan\00")
(data (i32.const 3088) "huang\00")
(data (i32.const 3104) "\e4\b8\8b\e6\b3\a8\e5\a4\b1\e8\b4\a5\e9\80\80\e8\bf\98\00")
(data (i32.const 3136) "bet function:\00")
(data (i32.const 3152) ",men=\00")
(data (i32.const 3168) "\e4\b8\8b\e6\b3\a8\e8\bf\87\e5\a4\a7\e6\9f\a5\e8\bf\87\e5\ba\84\e5\ae\b6\e4\b8\8a\e9\99\90\00")
(data (i32.const 3200) "bet function \e4\b8\8b\e6\b3\a8\e8\b5\a0\e9\80\81:\00")
(data (i32.const 3232) ",line=\00")
(data (i32.const 3248) ",amount=\00")
(data (i32.const 3264) "\e4\b8\8b\e6\b3\a8\e8\b5\a0\e9\80\81\00")
(data (i32.const 3280) ",tian=\00")
(data (i32.const 3296) "fanli eos\00")
(data (i32.const 3312) "iter->to=\00")
(data (i32.const 3328) ",am=\00")
(data (i32.const 3344) "amount=\00")
(data (i32.const 3360) " fanli member=\00")
(data (i32.const 3376) "\e4\b8\8b\e7\ba\a7\00")
(data (i32.const 3392) "next primary key in table is at autoincrement limit\00")
(data (i32.const 3456) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 3520) "cannot decrement iterator at beginning of table\00")
(data (i32.const 3568) "eospokerikbt\00")
(data (i32.const 3584) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 3648) ",\00")
(data (i32.const 3664) "read_transaction failed\00")
(data (i32.const 3696) ",tbn=\00")
(data (i32.const 3712) ",tbp=\00")
(data (i32.const 3728) "DApp not exist in firewall, please register first!\00")
(data (i32.const 3792) "Sorry, DApp is under maintenance\00")
(data (i32.const 3840) "unexpected error in fixed_key constructor\00")
(data (i32.const 3884) "\16\00\00\00\17\00\00\00")
(data (i32.const 3904) "T = \00")
(data (i32.const 3920) "static const char *boost::detail::ctti<boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> > >::n() [T = boost::algorithm::detail::token_finderF<boost::algorithm::detail::is_any_ofF<char> >]\00")
(data (i32.const 4144) "inllog\00")
(data (i32.const 4160) "inlstat\00")
(data (i32.const 4176) "\e4\ba\94\e5\b0\8f\e7\89\9b\e5\a5\96\e6\b1\a0\e4\b8\ad\e5\a5\96\00")
(data (i32.const 4208) "\e5\a5\96\e6\b1\a0\e5\a5\96\e5\8a\b1\00")
(data (i32.const 12624) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 12720) "%llu\00")
(data (i32.const 12736) "\19\00\n\00\19\19\19\00\00\00\00\05\00\00\00\00\00\00\t\00\00\00\00\0b\00\00\00\00\00\00\00\00\19\00\11\n\19\19\19\03\n\07\00\01\1b\t\0b\18\00\00\t\06\0b\00\00\0b\00\06\19\00\00\00\19\19\19\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\00\00\00\00\00\19\00\n\0d\19\19\19\00\0d\00\00\02\00\t\0e\00\00\00\t\00\0e\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\00\13\00\00\00\00\t\0c\00\00\00\00\00\0c\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\04\0f\00\00\00\00\t\10\00\00\00\00\00\10\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\11\00\00\00\00\t\12\00\00\00\00\00\12\00\00\12\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\00\17\00\00\00\00\t\14\00\00\00\00\00\14\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\00\15\00\00\00\00\t\16\00\00\00\00\00\16\00\00\16\00\00")
(data (i32.const 13200) "0123456789ABCDEF")
(data (i32.const 13216) "-+   0X0x\00")
(data (i32.const 13232) "(null)\00")
(data (i32.const 13248) "-0X+0X 0X-0x+0x 0x\00")
(data (i32.const 13280) "inf\00")
(data (i32.const 13296) "INF\00")
(data (i32.const 13312) "nan\00")
(data (i32.const 13328) "NAN\00")
(data (i32.const 13344) ".\00")
(data (i32.const 13360) "T!\"\19\0d\01\02\03\11K\1c\0c\10\04\0b\1d\12\1e\'hnopqb \05\06\0f\13\14\15\1a\08\16\07($\17\18\t\n\0e\1b\1f%#\83\82}&*+<=>?CGJMXYZ[\\]^_`acdefgijklrstyz{|\00")
(data (i32.const 13456) "Illegal byte sequence\00Domain error\00Result not representable\00Not a tty\00Permission denied\00Operation not permitted\00No such file or directory\00No such process\00File exists\00Value too large for data type\00No space left on device\00Out of memory\00Resource busy\00Interrupted system call\00Resource temporarily unavailable\00Invalid seek\00Cross-device link\00Read-only file system\00Directory not empty\00Connection reset by peer\00Operation timed out\00Connection refused\00Host is down\00Host is unreachable\00Address in use\00Broken pipe\00I/O error\00No such device or address\00Block device required\00No such device\00Not a directory\00Is a directory\00Text file busy\00Exec format error\00Invalid argument\00Argument list too long\00Symbolic link loop\00Filename too long\00Too many open files in system\00No file descriptors available\00Bad file descriptor\00No child process\00Bad address\00File too large\00Too many links\00No locks available\00Resource deadlock would occur\00State not recoverable\00Previous owner died\00Operation canceled\00Function not implemented\00No message of desired type\00Identifier removed\00Device not a stream\00No data available\00Device timeout\00Out of streams resources\00Link has been severed\00Protocol error\00Bad message\00File descriptor in bad state\00Not a socket\00Destination address required\00Message too large\00Protocol wrong type for socket\00Protocol not available\00Protocol not supported\00Socket type not supported\00Not supported\00Protocol family not supported\00Address family not supported by protocol\00Address not available\00Network is down\00Network unreachable\00Connection reset by network\00Connection aborted\00No buffer space available\00Socket is connected\00Socket not connected\00Cannot send after socket shutdown\00Operation already in progress\00Operation in progress\00Stale file handle\00Remote I/O error\00Quota exceeded\00No medium found\00Wrong medium type\00No error information\00\00")
(data (i32.const 15280) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\01\02\03\04\05\06\07\08\t\ff\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
(data (i32.const 15552) "\00\01\02\04\07\03\06\05\00")
(data (i32.const 15616) "UTC\00")
(data (i32.const 15632) "\1f\1e\1f\1e\1f\1f\1e\1f\1e\1f\1f\1d")
(data (i32.const 15648) "\00\00\00\00\80\de(\00\80\c8M\00\00\a7v\00\004\9e\00\80\12\c7\00\80\9f\ee\00\00~\17\01\80\\@\01\80\e9g\01\00\c8\90\01\00U\b8\01")
(import "env" "__addtf3" (func $fimport$0 (param i32 i64 i64 i64 i64)))
(import "env" "__eqtf2" (func $fimport$1 (param i64 i64 i64 i64) (result i32)))
(import "env" "__extenddftf2" (func $fimport$2 (param i32 f64)))
(import "env" "__fixtfsi" (func $fimport$3 (param i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$4 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$5 (param i32 i32)))
(import "env" "__floatunsitf" (func $fimport$6 (param i32 i32)))
(import "env" "__multf3" (func $fimport$7 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$8 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$9 (param i32 i64 i64 i64 i64)))
(import "env" "__unordtf2" (func $fimport$10 (param i64 i64 i64 i64) (result i32)))
(import "env" "abort" (func $fimport$11))
(import "env" "action_data_size" (func $fimport$12 (result i32)))
(import "env" "current_receiver" (func $fimport$13 (result i64)))
(import "env" "current_time" (func $fimport$14 (result i64)))
(import "env" "db_end_i64" (func $fimport$15 (param i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$16 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$17 (param i32 i32 i32) (result i32)))
(import "env" "db_idx256_lowerbound" (func $fimport$18 (param i64 i64 i64 i32 i32 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$19 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$20 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$21 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$22 (param i32)))
(import "env" "db_store_i64" (func $fimport$23 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$24 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$25 (param i32 i32)))
(import "env" "eosio_exit" (func $fimport$26 (param i32)))
(import "env" "is_account" (func $fimport$27 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$28 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$29 (param i32 i32 i32) (result i32)))
(import "env" "memset" (func $fimport$30 (param i32 i32 i32) (result i32)))
(import "env" "printhex" (func $fimport$31 (param i32 i32)))
(import "env" "printi" (func $fimport$32 (param i64)))
(import "env" "printn" (func $fimport$33 (param i64)))
(import "env" "prints" (func $fimport$34 (param i32)))
(import "env" "prints_l" (func $fimport$35 (param i32 i32)))
(import "env" "printui" (func $fimport$36 (param i64)))
(import "env" "read_action_data" (func $fimport$37 (param i32 i32) (result i32)))
(import "env" "read_transaction" (func $fimport$38 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$39 (param i64)))
(import "env" "require_auth2" (func $fimport$40 (param i64 i64)))
(import "env" "send_deferred" (func $fimport$41 (param i32 i64 i32 i32 i32)))
(import "env" "send_inline" (func $fimport$42 (param i32 i32)))
(import "env" "sha256" (func $fimport$43 (param i32 i32 i32)))
(import "env" "tapos_block_num" (func $fimport$44 (result i32)))
(import "env" "tapos_block_prefix" (func $fimport$45 (result i32)))
(import "env" "transaction_size" (func $fimport$46 (result i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_Z13getmonthbegini" (func $5))
(export "_Z11getdaybegini" (func $6))
(export "_Z12getweekbegini" (func $7))
(export "_Z16symbol_to_stringRKN5eosio5assetE" (func $8))
(export "_Z9get_sheetv" (func $9))
(export "_Z15asset_to_stringRKN5eosio5assetE" (func $12))
(export "_Z11myfunction2RK8_tmp_betS1_" (func $14))
(export "_Z11myfunction3RKNSt3__15arrayIiLj5EEES3_" (func $15))
(export "apply" (func $21))
(export "_ZN6NiuNiu2onERKN5eosio8currency8transferE" (func $24))
(export "_ZN6NiuNiu4testEy" (func $25))
(export "_ZN6NiuNiu12cleargamectxEy" (func $27))
(export "_ZN6NiuNiu6fixingEy" (func $28))
(export "_ZN6NiuNiu8chconfigEyNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES6_" (func $29))
(export "_ZN6NiuNiu12cleargamehisEy" (func $31))
(export "_ZN6NiuNiu5resetEy" (func $32))
(export "_ZN6NiuNiu11clearbklistEy" (func $33))
(export "_ZN6NiuNiu10downbankerEy" (func $34))
(export "_ZN6NiuNiu10keepbankerEy" (func $35))
(export "_ZN6NiuNiu12opengameloopEyy" (func $36))
(export "_ZN6NiuNiu10clearginfoEy" (func $38))
(export "_ZN6NiuNiu4bindEyy" (func $39))
(export "_ZN6NiuNiu9lockstakeEy" (func $40))
(export "_ZN6NiuNiu11unlockstakeEy" (func $41))
(export "_ZN6NiuNiu12clearconfinfEy" (func $42))
(export "_ZN6NiuNiu11clearreshisEy" (func $43))
(export "_ZN6NiuNiu16_clearconfiginfoEv" (func $49))
(export "_ZN6NiuNiu5_bindEyy" (func $54))
(export "_ZN6NiuNiu16_clearglobalinfoEv" (func $57))
(export "_ZN6NiuNiu11_getgamectxEv" (func $63))
(export "_ZN6NiuNiu10_onplayingEv" (func $64))
(export "_ZN6NiuNiu7_onwaitEv" (func $65))
(export "_ZN6NiuNiu6_onendEv" (func $66))
(export "_ZN6NiuNiu12_onwaitstartEv" (func $67))
(export "_ZN6NiuNiu6_genidEv" (func $68))
(export "_ZN6NiuNiu11_starttimerEyy" (func $70))
(export "_ZN6NiuNiu13_getglobalcntEv" (func $72))
(export "_ZN6NiuNiu14_getglobalinfoEv" (func $96))
(export "_ZN6NiuNiu13_clearbetinfoEv" (func $101))
(export "_ZN6NiuNiu14_simplebackeosEyyRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE" (func $102))
(export "_ZN6NiuNiu13_cleargamectxEv" (func $103))
(export "_ZN6NiuNiu14_autosetbankerEv" (func $104))
(export "_ZN6NiuNiu12_clearbetlogEv" (func $113))
(export "_ZN6NiuNiu24_removegameresulthistoryEi" (func $121))
(export "_ZN6NiuNiu12_getmaxstyleERK10_cardstyleS2_S2_S2_S2_" (func $126))
(export "_ZN6NiuNiu13_cleargameresEv" (func $127))
(export "_ZN6NiuNiu16_updateplayerwinEyy" (func $128))
(export "_ZN6NiuNiu17_updateplayerloseEyy" (func $129))
(export "_ZN6NiuNiu21_addgameresulthistoryEyyllll" (func $131))
(export "_ZN6NiuNiu15_addgamehistoryEyR10_cardstyleS1_S1_S1_S1_" (func $132))
(export "_ZN6NiuNiu18_removegamehistoryEi" (func $133))
(export "_Z10myfunctionii" (func $135))
(export "_Z11myfunction1R9_maxstyleS0_" (func $160))
(export "_ZN6NiuNiu16_clearbankerlistEv" (func $189))
(export "_ZN6NiuNiu13_cleargamehisEv" (func $190))
(export "_ZN6NiuNiu14_getconfiginfoEv" (func $192))
(export "_ZN6NiuNiu14_transactionidEv" (func $197))
(export "_ZN6NiuNiu8_backeosEyRKN5eosio5assetERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE" (func $198))
(export "_ZN6NiuNiu15_isinbankerlistEy" (func $199))
(export "_ZN6NiuNiu10_addbankerEyRKN5eosio5assetE" (func $200))
(export "_ZN6NiuNiu10_setbankerEyRKN5eosio5assetE" (func $201))
(export "_ZN6NiuNiu4_betEyRKN5eosio5assetERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE" (func $202))
(export "_ZN6NiuNiu11_getbetinfoEy" (func $203))
(export "_ZN6NiuNiu12_backmytokenEyRKN5eosio5assetERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE" (func $204))
(export "_ZN6NiuNiu10_addbetlogEymm" (func $205))
(export "_ZN6NiuNiu10_bindfanliEym" (func $206))
(export "_ZN6NiuNiu14_updatebetinfoERK7betinfo" (func $207))
(export "_Z7mytracei" (func $260))
(export "_ZN6NiuNiu17_updateconfiginfoERK14_st_configinfo" (func $261))
(export "_ZN6NiuNiu15_isgamectxexistEv" (func $262))
(export "_ZN6NiuNiu14_updategamectxERK11_st_gamectx" (func $263))
(export "_ZN6NiuNiu17_updateglobalinfoERK14_st_globalinfo" (func $264))
(export "_ZN6NiuNiu16_updateglobalcntERK13_st_globalcnt" (func $265))
(export "_ZN6NiuNiu14_simplebackkbtEyyRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE" (func $266))
(export "_ZN6NiuNiu7_getwinEm" (func $267))
(export "_ZN6NiuNiu14_sendbonuspoolER9_maxstyleR14_st_globalinfoRN5eosio11multi_indexILy4229699935735382016E7betinfoJEEER11_st_gamectx" (func $268))
(export "_ZN6NiuNiu13_setselftimerENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm" (func $270))
(export "_ZN6NiuNiu9_settimerENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm" (func $272))
(export "malloc" (func $273))
(export "free" (func $276))
(export "_ZNSt3__19to_stringEy" (func $296))
(export "floor" (func $302))
(export "snprintf" (func $303))
(export "vsnprintf" (func $304))
(export "__errno_location" (func $306))
(export "vfprintf" (func $307))
(export "__lockfile" (func $309))
(export "__unlockfile" (func $310))
(export "__fwritex" (func $311))
(export "strerror" (func $313))
(export "strnlen" (func $314))
(export "wctomb" (func $315))
(export "__signbitl" (func $316))
(export "__fpclassifyl" (func $317))
(export "frexpl" (func $318))
(export "wcrtomb" (func $319))
(export "memchr" (func $320))
(export "__lctrans" (func $321))
(export "__lctrans_impl" (func $322))
(export "__mo_lookup" (func $323))
(export "strcmp" (func $324))
(export "__towrite" (func $325))
(export "llabs" (func $326))
(export "abs" (func $327))
(export "strtoul" (func $328))
(export "__shlim" (func $329))
(export "__intscan" (func $330))
(export "__shgetc" (func $331))
(export "__uflow" (func $332))
(export "__toread" (func $333))
(export "memcmp" (func $334))
(export "strlen" (func $335))
(export "gmtime" (func $336))
(export "__gmtime_r" (func $337))
(export "__secs_to_tm" (func $338))
(export "timegm" (func $339))
(export "__tm_to_secs" (func $340))
(export "__year_to_secs" (func $341))
(export "__month_to_secs" (func $342))
(table $0 24 24 anyfunc)
(elem (i32.const 0) $343 $40 $42 $41 $43 $32 $31 $29 $28 $35 $33 $38 $36 $27 $39 $34 $25 $135 $14 $15 $160 $305 $240 $241)



void .FUNC _ZN6NiuNiu24_removegameresulthistoryEi (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [64])
	*([0] + [4]) = $11
	*($11 + [48]) = [0]
	*($11 + [40]) = (int_64)0
	*(($11 + [32])) = [0]
	*($11 + [16]) = (int_64)-1
	*($11 + [24]) = (int_64)0
	$2 = *($0)
	*($11) = $2
	*($11 + [8]) = $2
	$0 = CALL db_lowerbound_i64($2, $2, (int_64)-4994255165667180544, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $45($11, $0)
	$10 = (($11 + [40]) + [8])
	
.LOOP $label$2:
	$4 = *($11 + [44])
	if ( ((int_32)$4 == (int_32)*($10)) ){ goto $label$4 }
	*($4) = *($0)
	*($11 + [44]) = ($4 + [8])
	goto $label$3 
	
.LABEL $label$4
	CALL $137(($11 + [40]), $0)
	
.LABEL $label$3
	CALL eosio_assert([1], [816])
	$0 = CALL db_next_i64(*($0 + [40]), ($11 + [56]))
	if ( ((int_32)$0 <= (int_32)[-1]) ){ goto $label$1 }
	$0 = CALL $45($11, $0)
	goto $label$2 
	
.LABEL $label$1
	$0 = *($11 + [44])
	$4 = *($11 + [40])
	*($11 + [56]) = [17]
	CALL $136($4, $0, ($11 + [56]))
	$9 = *($11 + [40])
	$0 = *($11 + [44])
	if ( ((uint_32)int_32(($0 - $9) >> [3]) <= (uint_32)$1) ){ goto $label$5 }
	if ( ((int_32)$9 == (int_32)($0 - ($1 << [3]))) ){ goto $label$5 }
	$5 = ($11 + [24])
	$6 = ($11 + [28])
	$7 = ($11 + [8])
	$8 = (([0] - $1) << [3])
	
.LOOP $label$6:
	$2 = *($9)
	$3 = *($5)
	$10 = *($6)
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$7 }
	$0 = ($10 + [-24])
	$1 = ([0] - $3)
	
.LOOP $label$8:
	if ( ((int_64)*(*($0)) == (int_64)$2) ){ goto $label$7 }
	$10 = $0
	$4 = ($0 + [-24])
	$0 = $4
	if ( ((int_32)($4 + $1) != (int_32)[-24]) ){ goto $label$8 }
	
.LABEL $label$7
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$11 }
	$0 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($0 + [36]) == (int_32)$11), [1104])
	if ( $0 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$0 = CALL db_find_i64(*($11), *($7), (int_64)-4994255165667180544, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$9 }
	$0 = CALL $45($11, $0)
	CALL eosio_assert(((int_32)*($0 + [36]) == (int_32)$11), [1104])
	
.LABEL $label$10
	CALL eosio_assert([1], [768])
	CALL eosio_assert([1], [816])
	$4 = CALL db_next_i64(*($0 + [40]), ($11 + [56]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$12 }
	CALL $45($11, $4)
	
.LABEL $label$12
	CALL $46($11, $0)
	
.LABEL $label$9
	$9 = ($9 + [8])
	if ( ((int_32)$9 != (int_32)(*($11 + [44]) + $8)) ){ goto $label$6 }
	
.LABEL $label$5
	$10 = *($11 + [24])
	if ( ($10 == 0) ){ goto $label$13 }
	$1 = ($11 + [28])
	$0 = *($1)
	if ( ((int_32)$0 == (int_32)$10) ){ goto $label$15 }
	
.LOOP $label$16:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$17 }
	CALL $282($4)
	
.LABEL $label$17
	if ( ((int_32)$10 != (int_32)$0) ){ goto $label$16 }
	$0 = *(($11 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$0 = $10
	
.LABEL $label$14
	*($1) = $10
	CALL $282($0)
	
.LABEL $label$13
	$0 = *($11 + [40])
	if ( ($0 == 0) ){ goto $label$18 }
	*($11 + [44]) = $0
	CALL $282($0)
	
.LABEL $label$18
	*([0] + [4]) = ($11 + [64])
}

void .FUNC $120 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $280(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $298($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $282($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $282($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN6NiuNiu12_getmaxstyleERK10_cardstyleS2_S2_S2_S2_ (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [80])
	*([0] + [4]) = $12
	*($12 + [72]) = [0]
	*($12 + [64]) = (int_64)0
	*(($12 + [36])) = *(($2 + [24]))
	*((($12 + [8]) + [24])) = *(($2 + [20]))
	*((($12 + [8]) + [20])) = *(($2 + [16]))
	*((($12 + [8]) + [16])) = *(($2 + [12]))
	*((($12 + [8]) + [12])) = *(($2 + [8]))
	*((($12 + [8]) + [8])) = *(($2 + [4]))
	*($12 + [8]) = [0]
	*($12 + [12]) = *($2)
	*(($7 = (($12 + [8]) + [32]))) = [0]
	*(($12 + [44])) = [0]
	*(($12 + [48])) = [0]
	$9 = (*(($2 + [32])) - *($2 + [28]))
	$8 = int_32($9 >> [3])
	if ( ($8 == 0) ){ goto $label$7 }
	if ( ((uint_32)$8 >= (uint_32)[536870912]) ){ goto $label$6 }
	$9 = CALL $280($9)
	*((($12 + [8]) + [32])) = $9
	*(($11 = ($12 + [44]))) = $9
	*(($12 + [48])) = ($9 + ($8 << [3]))
	$10 = *(($2 + [28]))
	$8 = (*(($2 + [32])) - $10)
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($9, $10, $8)
	*($11) = ($9 + $8)
	
.LABEL $label$7
	*(($12 + [52])) = *($2 + [40 align=4])
	CALL $159(($12 + [64]), ($12 + [8]))
	$2 = *($7)
	if ( ($2 == 0) ){ goto $label$8 }
	*(($12 + [44])) = $2
	CALL $282($2)
	
.LABEL $label$8
	*(($12 + [36])) = *(($3 + [24]))
	*((($12 + [8]) + [24])) = *(($3 + [20]))
	*((($12 + [8]) + [20])) = *(($3 + [16]))
	*((($12 + [8]) + [16])) = *(($3 + [12]))
	*((($12 + [8]) + [12])) = *(($3 + [8]))
	*((($12 + [8]) + [8])) = *(($3 + [4]))
	*($12 + [8]) = [1]
	*($12 + [12]) = *($3)
	*(($8 = (($12 + [8]) + [32]))) = [0]
	*(($12 + [44])) = [0]
	*(($12 + [48])) = [0]
	$2 = (*(($3 + [32])) - *($3 + [28]))
	$9 = int_32($2 >> [3])
	if ( ($9 == 0) ){ goto $label$9 }
	if ( ((uint_32)$9 >= (uint_32)[536870912]) ){ goto $label$5 }
	$2 = CALL $280($2)
	*((($12 + [8]) + [32])) = $2
	*(($8 = ($12 + [44]))) = $2
	*(($12 + [48])) = ($2 + ($9 << [3]))
	$7 = *(($3 + [28]))
	$9 = (*(($3 + [32])) - $7)
	if ( ((int_32)$9 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $7, $9)
	*($8) = (*($8) + $9)
	
.LABEL $label$9
	*(($9 = (($12 + [8]) + [44]))) = *($3 + [40 align=4])
	$2 = *($12 + [68])
	if ( ((uint_32)$2 >= (uint_32)*((($12 + [64]) + [8]))) ){ goto $label$11 }
	*($2) = *($12 + [8])
	$3 = (($12 + [8]) | [4])
	*(($2 + [24])) = *(($3 + [20]))
	*(($2 + [16])) = *(($3 + [12]))
	*(($2 + [8])) = *(($3 + [4]))
	*($2 + [4]) = *($3)
	*(($3 = ($2 + [32]))) = [0]
	*(($8 = ($2 + [36]))) = [0]
	*(($7 = ($2 + [40]))) = [0]
	$11 = (($12 + [8]) + [32])
	*($3) = *($11)
	$3 = (($12 + [8]) + [36])
	*($8) = *($3)
	$8 = (($12 + [8]) + [40])
	*($7) = *($8)
	*($11) = [0]
	*($3) = [0]
	*($8) = [0]
	*(($2 + [44])) = *($9)
	*($12 + [68]) = ($2 + [52])
	goto $label$10 
	
.LABEL $label$11
	CALL $159(($12 + [64]), ($12 + [8]))
	$2 = *(($12 + [40]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($12 + [44])) = $2
	CALL $282($2)
	
.LABEL $label$10
	*(($12 + [36])) = *(($4 + [24]))
	*((($12 + [8]) + [24])) = *(($4 + [20]))
	*((($12 + [8]) + [20])) = *(($4 + [16]))
	*((($12 + [8]) + [16])) = *(($4 + [12]))
	*((($12 + [8]) + [12])) = *(($4 + [8]))
	*((($12 + [8]) + [8])) = *(($4 + [4]))
	*($12 + [8]) = [2]
	*($12 + [12]) = *($4)
	*(($9 = (($12 + [8]) + [32]))) = [0]
	*(($12 + [44])) = [0]
	*(($12 + [48])) = [0]
	$2 = (*(($4 + [32])) - *($4 + [28]))
	$3 = int_32($2 >> [3])
	if ( ($3 == 0) ){ goto $label$12 }
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$4 }
	$2 = CALL $280($2)
	*((($12 + [8]) + [32])) = $2
	*(($9 = ($12 + [44]))) = $2
	*(($12 + [48])) = ($2 + ($3 << [3]))
	$8 = *(($4 + [28]))
	$3 = (*(($4 + [32])) - $8)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$12 }
	CALL memcpy($2, $8, $3)
	*($9) = (*($9) + $3)
	
.LABEL $label$12
	*(($9 = (($12 + [8]) + [44]))) = *($4 + [40 align=4])
	$2 = *($12 + [68])
	if ( ((uint_32)$2 >= (uint_32)*((($12 + [64]) + [8]))) ){ goto $label$14 }
	*($2) = *($12 + [8])
	$3 = (($12 + [8]) | [4])
	*(($2 + [24])) = *(($3 + [20]))
	*(($2 + [16])) = *(($3 + [12]))
	*(($2 + [8])) = *(($3 + [4]))
	*($2 + [4]) = *($3)
	*(($3 = ($2 + [32]))) = [0]
	*(($4 = ($2 + [36]))) = [0]
	*(($8 = ($2 + [40]))) = [0]
	$7 = (($12 + [8]) + [32])
	*($3) = *($7)
	$3 = (($12 + [8]) + [36])
	*($4) = *($3)
	$4 = (($12 + [8]) + [40])
	*($8) = *($4)
	*($7) = [0]
	*($3) = [0]
	*($4) = [0]
	*(($2 + [44])) = *($9)
	*($12 + [68]) = ($2 + [52])
	goto $label$13 
	
.LABEL $label$14
	CALL $159(($12 + [64]), ($12 + [8]))
	$2 = *(($12 + [40]))
	if ( ($2 == 0) ){ goto $label$13 }
	*(($12 + [44])) = $2
	CALL $282($2)
	
.LABEL $label$13
	*(($12 + [36])) = *(($5 + [24]))
	*((($12 + [8]) + [24])) = *(($5 + [20]))
	*((($12 + [8]) + [20])) = *(($5 + [16]))
	*((($12 + [8]) + [16])) = *(($5 + [12]))
	*((($12 + [8]) + [12])) = *(($5 + [8]))
	*((($12 + [8]) + [8])) = *(($5 + [4]))
	*($12 + [12]) = *($5)
	*($12 + [8]) = [3]
	*(($4 = (($12 + [8]) + [32]))) = [0]
	*(($12 + [44])) = [0]
	*(($12 + [48])) = [0]
	$2 = (*(($5 + [32])) - *($5 + [28]))
	$3 = int_32($2 >> [3])
	if ( ($3 == 0) ){ goto $label$15 }
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$3 }
	$2 = CALL $280($2)
	*((($12 + [8]) + [32])) = $2
	*(($4 = ($12 + [44]))) = $2
	*(($12 + [48])) = ($2 + ($3 << [3]))
	$9 = *(($5 + [28]))
	$3 = (*(($5 + [32])) - $9)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$15 }
	CALL memcpy($2, $9, $3)
	*($4) = (*($4) + $3)
	
.LABEL $label$15
	*(($4 = (($12 + [8]) + [44]))) = *($5 + [40 align=4])
	$2 = *($12 + [68])
	if ( ((uint_32)$2 >= (uint_32)*((($12 + [64]) + [8]))) ){ goto $label$17 }
	*($2) = *($12 + [8])
	$3 = (($12 + [8]) | [4])
	*(($2 + [24])) = *(($3 + [20]))
	*(($2 + [16])) = *(($3 + [12]))
	*(($2 + [8])) = *(($3 + [4]))
	*($2 + [4]) = *($3)
	*(($3 = ($2 + [32]))) = [0]
	*(($5 = ($2 + [36]))) = [0]
	*(($9 = ($2 + [40]))) = [0]
	$8 = (($12 + [8]) + [32])
	*($3) = *($8)
	$3 = (($12 + [8]) + [36])
	*($5) = *($3)
	$5 = (($12 + [8]) + [40])
	*($9) = *($5)
	*($8) = [0]
	*($3) = [0]
	*($5) = [0]
	*(($2 + [44])) = *($4)
	*($12 + [68]) = ($2 + [52])
	goto $label$16 
	
.LABEL $label$17
	CALL $159(($12 + [64]), ($12 + [8]))
	$2 = *(($12 + [40]))
	if ( ($2 == 0) ){ goto $label$16 }
	*(($12 + [44])) = $2
	CALL $282($2)
	
.LABEL $label$16
	*(($12 + [36])) = *(($6 + [24]))
	*((($12 + [8]) + [24])) = *(($6 + [20]))
	*((($12 + [8]) + [20])) = *(($6 + [16]))
	*((($12 + [8]) + [16])) = *(($6 + [12]))
	*((($12 + [8]) + [12])) = *(($6 + [8]))
	*($12 + [8]) = [4]
	*((($12 + [8]) + [8])) = *(($6 + [4]))
	*($12 + [12]) = *($6)
	*(($4 = (($12 + [8]) + [32]))) = [0]
	*(($12 + [44])) = [0]
	*(($12 + [48])) = [0]
	$2 = (*(($6 + [32])) - *($6 + [28]))
	$3 = int_32($2 >> [3])
	if ( ($3 == 0) ){ goto $label$18 }
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$2 }
	$2 = CALL $280($2)
	*((($12 + [8]) + [32])) = $2
	*(($4 = ($12 + [44]))) = $2
	*(($12 + [48])) = ($2 + ($3 << [3]))
	$5 = *(($6 + [28]))
	$3 = (*(($6 + [32])) - $5)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$18 }
	CALL memcpy($2, $5, $3)
	*($4) = (*($4) + $3)
	
.LABEL $label$18
	*(($4 = (($12 + [8]) + [44]))) = *($6 + [40 align=4])
	$2 = *($12 + [68])
	if ( ((uint_32)$2 >= (uint_32)*((($12 + [64]) + [8]))) ){ goto $label$20 }
	*($2) = *($12 + [8])
	$3 = (($12 + [8]) | [4])
	*(($2 + [24])) = *(($3 + [20]))
	*(($2 + [16])) = *(($3 + [12]))
	*(($2 + [8])) = *(($3 + [4]))
	*($2 + [4]) = *($3)
	*(($3 = ($2 + [32]))) = [0]
	*(($5 = ($2 + [36]))) = [0]
	*(($6 = ($2 + [40]))) = [0]
	$9 = (($12 + [8]) + [32])
	*($3) = *($9)
	$3 = (($12 + [8]) + [36])
	*($5) = *($3)
	$5 = (($12 + [8]) + [40])
	*($6) = *($5)
	*($9) = [0]
	*($3) = [0]
	*($5) = [0]
	*(($2 + [44])) = *($4)
	*($12 + [68]) = ($2 + [52])
	goto $label$19 
	
.LABEL $label$20
	CALL $159(($12 + [64]), ($12 + [8]))
	$2 = *(($12 + [40]))
	if ( ($2 == 0) ){ goto $label$19 }
	*(($12 + [44])) = $2
	CALL $282($2)
	
.LABEL $label$19
	$2 = *($12 + [68])
	$3 = *($12 + [64])
	*($12 + [8]) = [20]
	CALL $161($3, $2, ($12 + [8]))
	$2 = *($12 + [64])
	if ( ((int_32)*($12 + [68]) == (int_32)$2) ){ goto $label$21 }
	*($0) = *($2)
	*(($0 + [28])) = *(($2 + [28]))
	*(($0 + [24])) = *(($2 + [24]))
	*(($0 + [20])) = *(($2 + [20]))
	*(($0 + [16])) = *(($2 + [16]))
	*(($0 + [12])) = *(($2 + [12]))
	*(($0 + [8])) = *(($2 + [8]))
	*($0 + [4]) = *($2 + [4])
	*(($5 = ($0 + [32]))) = [0]
	*(($0 + [36])) = [0]
	*(($0 + [40])) = [0]
	$3 = (*(($2 + [36])) - *(($2 + [32])))
	$4 = int_32($3 >> [3])
	if ( ($4 == 0) ){ goto $label$22 }
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$1 }
	$3 = CALL $280($3)
	*(($0 + [32])) = $3
	*(($0 + [40])) = ($3 + ($4 << [3]))
	*(($4 = ($0 + [36]))) = $3
	$6 = *(($2 + [32]))
	$5 = (*(($2 + [36])) - $6)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$22 }
	CALL memcpy($3, $6, $5)
	*($4) = (*($4) + $5)
	
.LABEL $label$22
	*(($0 + [44])) = *(($2 + [44]))
	$4 = *($12 + [64])
	if ( ($4 == 0) ){ goto $label$23 }
	$0 = *($12 + [68])
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$25 }
	$3 = ([0] - $4)
	$0 = ($0 + [-20])
	
.LOOP $label$26:
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$27 }
	*(($0 + [4])) = $2
	CALL $282($2)
	
.LABEL $label$27
	$0 = ($0 + [-52])
	if ( ((int_32)($0 + $3) != (int_32)[-20]) ){ goto $label$26 }
	$0 = *($12 + [64])
	goto $label$24 
	
.LABEL $label$25
	$0 = $4
	
.LABEL $label$24
	*($12 + [68]) = $4
	CALL $282($0)
	
.LABEL $label$23
	*([0] + [4]) = ($12 + [80])
	return (unreachable)
	
.LABEL $label$21
	CALL $299(($12 + [64]))
	
.LABEL $label$6
	CALL $298($7)
	
.LABEL $label$5
	CALL $298($8)
	
.LABEL $label$4
	CALL $298($9)
	
.LABEL $label$3
	CALL $298($4)
	
.LABEL $label$2
	CALL $298($4)
	
.LABEL $label$1
	CALL $298($5)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC _ZN6NiuNiu16_clearbankerlistEv (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	*(($5 + [32])) = [0]
	*($5 + [16]) = (int_64)-1
	$2 = *($0)
	*($5) = $2
	*($5 + [8]) = $2
	*($5 + [24]) = (int_64)0
	$0 = CALL db_lowerbound_i64($2, $2, (int_64)4154295083342381056, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $105($5, $0)
	
.LOOP $label$2:
	CALL eosio_assert([1], [768])
	CALL eosio_assert([1], [816])
	$0 = [0]
	$1 = CALL db_next_i64(*($4 + [24]), ($5 + [40]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $105($5, $1)
	
.LABEL $label$3
	CALL $107($5, $4)
	$4 = $0
	if ( $0 ){ goto $label$2 }
	
.LABEL $label$1
	$1 = *($5 + [24])
	if ( ($1 == 0) ){ goto $label$4 }
	$3 = ($5 + [28])
	$0 = *($3)
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $282($4)
	
.LABEL $label$8
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($5 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $1
	
.LABEL $label$5
	*($3) = $1
	CALL $282($0)
	
.LABEL $label$4
	*([0] + [4]) = ($5 + [48])
}

int_32 .FUNC $188 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [2480])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $77($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [1056])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

void .FUNC _ZN6NiuNiu16_clearconfiginfoEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	$1 = ($0 + [128])
	$2 = *(($0 + [156]))
	if ( ((int_32)$2 == (int_32)*(($0 + [152]))) ){ goto $label$3 }
	$2 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [48]) == (int_32)$1), [1104])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$2 = CALL db_find_i64(*($1), *(($0 + [136])), (int_64)4982871462359400448, (int_64)4982871462359400448)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*(CALL $50($1, $2) + [48]) == (int_32)$1), [1104])
	
.LABEL $label$2
	$2 = *(($0 + [156]))
	if ( ((int_32)$2 == (int_32)*(($0 + [152]))) ){ goto $label$5 }
	$0 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($0 + [48]) == (int_32)$1), [1104])
	if ( $0 ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$5
	$0 = CALL db_find_i64(*(($0 + [128])), *(($0 + [136])), (int_64)4982871462359400448, (int_64)4982871462359400448)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $50($1, $0)
	CALL eosio_assert(((int_32)*($0 + [48]) == (int_32)$1), [1104])
	
.LABEL $label$4
	CALL eosio_assert([1], [768])
	CALL eosio_assert([1], [816])
	$2 = CALL db_next_i64(*($0 + [52]), ($3 + [8]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$6 }
	CALL $50($1, $2)
	
.LABEL $label$6
	CALL $51($1, $0)
	
.LABEL $label$1
	*([0] + [4]) = ($3 + [16])
}

void .FUNC $48 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $280(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $298($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $282($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $282($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN6NiuNiu17_updateglobalinfoERK14_st_globalinfo (int_32 $0, int_32 $1)
{
	CALL $97(($0 + [48]), $1, *($0))
}

void .FUNC _ZN6NiuNiu16_updateglobalcntERK13_st_globalcnt (int_32 $0, int_32 $1)
{
	CALL $73(($0 + [88]), $1, *($0))
}

void .FUNC _ZN6NiuNiu14_simplebackkbtEyyRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [272])
	*([0] + [4]) = $14
	CALL _ZN6NiuNiu14_getconfiginfoEv(($14 + [184]), $0)
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1872])
	$9 = [0]
	$11 = (int_64)4935504
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [1840])
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [3568]
	$12 = (int_64)0
	
.LOOP $label$6:
	$13 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$7 }
	$4 = *($9)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$4 = ($4 + [165])
	goto $label$8 
	
.LABEL $label$9
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$7
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$6 }
	*(($14 + [176])) = [0]
	*($14 + [160]) = (int_64)-1
	*($14 + [168]) = (int_64)0
	$11 = *($0)
	*($14 + [152]) = $11
	*($14 + [144]) = $12
	$10 = (uint_64)(int_64)1263489024 >> (uint_64)(int_64)8
	$9 = CALL db_find_i64($12, $11, (int_64)3607749779137757184, $10)
	if ( ((int_32)$9) < (int_32)[0]) ){ goto $label$11 }
	CALL eosio_assert(((int_32)*(CALL $123(($14 + [144]), $9) + [16]) == (int_32)($14 + [144])), [1104])
	$9 = CALL $124(($14 + [144]), $10, [2000])
	if ( ((int_64)*($14 + [216]) != (int_64)1) ){ goto $label$11 }
	if ( (uint_64)(*($9) <= $2) ){ goto $label$11 }
	$11 = CALL current_time()
	*(($14 + [108])) = [0]
	*(($14 + [112])) = [0]
	*($14 + [92]) = [0]
	*($14 + [96]) = [0]
	*($14 + [100]) = [0]
	*($14 + [104]) = [0]
	*($14 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$11 / (uint_64)(int_64)1000000)) + [60])
	*($14 + [116]) = [0]
	*(($14 + [120])) = [0]
	*(($14 + [124])) = [0]
	*($14 + [128]) = [0]
	*(($14 + [132])) = [0]
	*(($14 + [136])) = [0]
	$6 = ($14 + [116])
	$5 = *($0)
	$11 = (int_64)0
	$13 = (int_64)59
	$9 = [1424]
	$12 = (int_64)0
	
.LOOP $label$12:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$17 }
	$4 = *($9)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$16 }
	$4 = ($4 + [165])
	goto $label$15 
	
.LABEL $label$17
	$10 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$15
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$14
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$13
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$10 | (int_64)$12)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$12 }
	*($14 + [72]) = $12
	*($14 + [64]) = $5
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [3568]
	$12 = (int_64)0
	
.LOOP $label$18:
	$13 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$19 }
	$4 = *($9)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$4 = ($4 + [165])
	goto $label$20 
	
.LABEL $label$21
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$19
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$18 }
	*($14 + [56]) = $12
	$11 = (int_64)0
	$13 = (int_64)59
	$9 = [672]
	$12 = (int_64)0
	
.LOOP $label$22:
	if ( ((uint_64)$11 > (uint_64)(int_64)7) ){ goto $label$27 }
	$4 = *($9)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$4 = ($4 + [165])
	goto $label$25 
	
.LABEL $label$27
	$10 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$26
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$24
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$23
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$10 | (int_64)$12)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$22 }
	*($14 + [48]) = $12
	*(($14 + [24])) = (int_64)1263489028
	*($14 + [8]) = $1
	*($14) = $5
	*($14 + [16]) = $2
	$9 = *($3 + [8])
	$4 = *($3)
	*(($14 + [40])) = [0]
	*($14 + [32]) = (int_64)0
	$7 = ($14 + [32])
	$3 = ( $9 ? ($3 + [1]) : ($4 & [1]) )
	$9 = CALL strlen($3)
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$10 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$30 }
	*(($14 + [32])) = ($9 << [1])
	$4 = ($7 + [1])
	if ( $9 ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	$8 = (($9 + [16]) & [-16])
	$4 = CALL $280($8)
	*(($14 + [32])) = ($8 | [1])
	*(($14 + [40])) = $4
	*(($14 + [36])) = $9
	
.LABEL $label$29
	CALL memcpy($4, $3, $9)
	
.LABEL $label$28
	*(($4 + $9)) = [0]
	$4 = *(($14 + [120]))
	if ( ((uint_32)$4 >= (uint_32)*(($14 + [124]))) ){ goto $label$34 }
	$3 = ($14 + [8])
	*($4 + [8]) = *($14 + [48])
	*($4) = *($14 + [56])
	*($4 + [16 align=4]) = (int_64)0
	*(($6 = ($4 + [24]))) = [0]
	$9 = CALL $280([16])
	*($4 + [16]) = $9
	$8 = ($9 + [16])
	*($6) = $8
	*(($9 + [8])) = *((($14 + [64]) + [8]))
	*($9) = *($14 + [64])
	*(($4 + [20])) = $8
	*($4 + [28]) = [0]
	*(($4 + [32])) = [0]
	*(($4 + [36])) = [0]
	$9 = *(($14 + [32]))
	$6 = ( *(($14 + [36])) ? uint_32($9 >> [1]) : ($9 & [1]) )
	$9 = ($6 + [32])
	$11 = (CASTING uint_64)(uint_32 $6)
	$6 = ($4 + [28])
	
.LOOP $label$35:
	$9 = ($9 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$35 }
	if ( ($9 == 0) ){ goto $label$33 }
	CALL $77($6, $9)
	$6 = *(($4 + [32]))
	$9 = *(($4 + [28]))
	goto $label$32 
	
.LABEL $label$34
	CALL $111($6, ($14 + [64]), ($14 + [56]), ($14 + [48]), $14)
	goto $label$31 
	
.LABEL $label$33
	$6 = [0]
	$9 = [0]
	
.LABEL $label$32
	*($14 + [236]) = $9
	*($14 + [232]) = $9
	*($14 + [240]) = $6
	*($14 + [248]) = ($14 + [232])
	*($14 + [260]) = $3
	*($14 + [264]) = ($14 + [16])
	*($14 + [268]) = $7
	*($14 + [256]) = $14
	CALL $110(($14 + [256]), ($14 + [248]))
	*(($9 = (($14 + [80]) + [40]))) = (*($9) + [40])
	
.LABEL $label$31
	if ( ((*(($14 + [32])) & [1]) == 0) ){ goto $label$36 }
	CALL $282(*(($14 + [40])))
	
.LABEL $label$36
	*(($14 + [100])) = [0]
	$2 = CALL _ZN6NiuNiu13_getglobalcntEv($0)
	*($14) = $2
	$11 = (int_64)0
	$13 = (int_64)59
	$9 = [1456]
	$12 = (int_64)0
	
.LOOP $label$37:
	if ( ((uint_64)$11 > (uint_64)(int_64)9) ){ goto $label$42 }
	$4 = *($9)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$41 }
	$4 = ($4 + [165])
	goto $label$40 
	
.LABEL $label$42
	$10 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$41
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$40
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$39
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$38
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$10 | (int_64)$12)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$37 }
	*($14) = ((int_64)( $12 ? (int_64)1 : (int_64)($2 == 0) ) + (int_64)$2)
	CALL $73(($0 + [88]), $14, *($0))
	$11 = *($14)
	*($14 + [8]) = (int_64)0
	*($14) = $11
	$11 = *($0)
	CALL $74(($14 + [256]), ($14 + [80]))
	$9 = *($14 + [256])
	CALL send_deferred($14, $11, $9, (*($14 + [260]) - $9), [0])
	$9 = *($14 + [256])
	if ( ($9 == 0) ){ goto $label$43 }
	*($14 + [260]) = $9
	CALL $282($9)
	
.LABEL $label$43
	CALL $75(($14 + [80]))
	
.LABEL $label$11
	$0 = *($14 + [168])
	if ( ($0 == 0) ){ goto $label$44 }
	$3 = ($14 + [172])
	$9 = *($3)
	if ( ((int_32)$9 == (int_32)$0) ){ goto $label$46 }
	
.LOOP $label$47:
	$9 = ($9 + [-24])
	$4 = *($9)
	*($9) = [0]
	if ( ($4 == 0) ){ goto $label$48 }
	CALL $282($4)
	
.LABEL $label$48
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$47 }
	$9 = *(($14 + [168]))
	goto $label$45 
	
.LABEL $label$46
	$9 = $0
	
.LABEL $label$45
	*($3) = $0
	CALL $282($9)
	
.LABEL $label$44
	*([0] + [4]) = ($14 + [272])
	return (unreachable)
	
.LABEL $label$10
	CALL $284($7)
}

void .FUNC _ZN6NiuNiu7_getwinEm (int_32 $0, int_32 $1, int_32 $2)
{
	float_64 $3
	float_64 $4
	int_32 $5
	int_32 $6
	$3 = (CASTING float_64)(uint_32 ((uint_32)($2 << [1]) / (uint_32)[100]))
	$4 = CALL floor($3)
	$3 = CALL floor($3)
	$5 = (CASTING uint_32)(float_64 $4)
	*($0 + [8]) = $5
	*($0 + [12]) = [0]
	$6 = (CASTING uint_32)(float_64 $3)
	*($0 + [4]) = $6
	*($0) = (($2 - $5) - $6)
}

void .FUNC _ZN6NiuNiu11clearreshisEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL require_auth($1)
	CALL eosio_assert(((int_64)*($0) == (int_64)$1), [736])
	*(($5 + [32])) = [0]
	*($5 + [16]) = (int_64)-1
	$1 = *($0)
	*($5) = $1
	*($5 + [8]) = $1
	*($5 + [24]) = (int_64)0
	$0 = CALL db_lowerbound_i64($1, $1, (int_64)-4994255165667180544, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $45($5, $0)
	
.LOOP $label$2:
	CALL eosio_assert([1], [768])
	CALL eosio_assert([1], [816])
	$0 = [0]
	$2 = CALL db_next_i64(*($4 + [40]), ($5 + [40]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $45($5, $2)
	
.LABEL $label$3
	CALL $46($5, $4)
	$4 = $0
	if ( $0 ){ goto $label$2 }
	
.LABEL $label$1
	$2 = *($5 + [24])
	if ( ($2 == 0) ){ goto $label$4 }
	$3 = ($5 + [28])
	$0 = *($3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $282($4)
	
.LABEL $label$8
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($5 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $2
	
.LABEL $label$5
	*($3) = $2
	CALL $282($0)
	
.LABEL $label$4
	*([0] + [4]) = ($5 + [48])
}

void .FUNC _ZN6NiuNiu12clearconfinfEy (int_32 $0, int_64 $1)
{
	CALL require_auth($1)
	CALL eosio_assert(((int_64)*($0) == (int_64)$1), [1072])
	CALL _ZN6NiuNiu16_clearconfiginfoEv($0)
}

void .FUNC _ZN6NiuNiu11unlockstakeEy (int_32 $0, int_64 $1)
{
	CALL require_auth($1)
	CALL eosio_assert(((int_64)*($0) == (int_64)$1), [736])
	CALL prints([1168])
	CALL printn($1)
	CALL prints([560])
}

void .FUNC _ZN6NiuNiu9lockstakeEy (int_32 $0, int_64 $1)
{
	CALL require_auth($1)
	CALL eosio_assert(((int_64)*($0) == (int_64)$1), [736])
	CALL prints([1184])
	CALL printn($1)
	CALL prints([560])
}

void .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1056])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1056])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1056])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1056])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$2 = *($0 + [24])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [1056])
	CALL memcpy($2, *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [36]) == (int_32)$0), [848])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [896])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [960])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $282($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $282($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [40]))
}

int_32 .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1024])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $280([48])) + [16]) = (int_64)0
	*($6 + [24]) = (int_64)0
	*($6 + [32]) = [0]
	*($6 + [36]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [8])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [16])
	*($8 + [44]) = ($6 + [20])
	*($8 + [48]) = ($6 + [24])
	*($8 + [52]) = ($6 + [28])
	*($8 + [56]) = ($6 + [32])
	CALL $47(($8 + [32]), ($8 + [24]))
	*($6 + [40]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [40])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $48(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $282($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [64])
	return $6
}

int_32 .FUNC $44 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *(($0 + [152]))
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = ($0 + [156])
	$2 = *($3)
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL $282($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$4 }
	$2 = *(($0 + [152]))
	goto $label$2 
	
.LABEL $label$3
	$2 = $1
	
.LABEL $label$2
	*($3) = $1
	CALL $282($2)
	
.LABEL $label$1
	$1 = *(($0 + [112]))
	if ( ($1 == 0) ){ goto $label$6 }
	$3 = ($0 + [116])
	$2 = *($3)
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $282($4)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($0 + [112]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $1
	
.LABEL $label$7
	*($3) = $1
	CALL $282($2)
	
.LABEL $label$6
	$1 = *(($0 + [72]))
	if ( ($1 == 0) ){ goto $label$11 }
	$3 = ($0 + [76])
	$2 = *($3)
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$15 }
	CALL $282($4)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$14 }
	$2 = *(($0 + [72]))
	goto $label$12 
	
.LABEL $label$13
	$2 = $1
	
.LABEL $label$12
	*($3) = $1
	CALL $282($2)
	
.LABEL $label$11
	$1 = *(($0 + [32]))
	if ( ($1 == 0) ){ goto $label$16 }
	$3 = ($0 + [36])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$18 }
	
.LOOP $label$19:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$20 }
	if ( ((*($2 + [40]) & [1]) == 0) ){ goto $label$21 }
	CALL $282(*(($2 + [48])))
	
.LABEL $label$21
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$22 }
	CALL $282(*(($2 + [36])))
	
.LABEL $label$22
	CALL $282($2)
	
.LABEL $label$20
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$19 }
	$2 = *(($0 + [32]))
	goto $label$17 
	
.LABEL $label$18
	$2 = $1
	
.LABEL $label$17
	*($3) = $1
	CALL $282($2)
	
.LABEL $label$16
	return $0
}

void .FUNC $167 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$3 = int_32(($6 - $5) >> [2])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[1073741824]) ){ goto $label$3 }
	$4 = [1073741823]
	$2 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($2 >> [2]) > (uint_32)[536870910]) ){ goto $label$5 }
	$4 = int_32($2 >> [1])
	$4 = ( $7 ? $4 : ($4 <= $7) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[1073741824]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $280(($4 << [2]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $298($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($3 << [2])))) = *($1)
	$6 = ($6 - $5)
	$1 = ($3 - $6)
	$4 = ($7 + ($4 << [2]))
	$7 = ($3 + [4])
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $5, $6)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $282($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

int_32 .FUNC $166 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	$34 = (*([0] + [4]) - [64])
	*([0] + [4]) = $34
	$31 = ((int_32)($1 - $0) / (int_32)[52])
	if ( ((uint_32)$31 > (uint_32)[5]) ){ goto $label$7 }
	$6 = [1]
	goto $label$1 
	
.LABEL $label$8
	$30 = ($1 + [-52])
	if ( (CALL int_32 $30((int_32 $0), (int_32 *($2))) == 0) ){ goto $label$1 }
	$31 = ($0 + [28])
	*((($34 + [8]) + [24])) = *($31)
	*(($2 = (($34 + [8]) + [20]))) = *(($0 + [24]))
	$32 = ($0 + [20])
	*((($34 + [8]) + [16])) = *($32)
	*(($5 = (($34 + [8]) + [12]))) = *(($0 + [16]))
	$18 = ($0 + [12])
	*((($34 + [8]) + [8])) = *($18)
	*($34 + [8]) = *($0 + [4])
	*($34 + [12]) = *(($0 + [8]))
	$19 = *($0)
	$7 = ($0 + [40])
	$20 = *($7)
	$26 = ($0 + [36])
	$21 = *($26)
	$33 = ($0 + [32])
	$22 = *($33)
	*($7) = [0]
	*($26) = [0]
	*($33) = [0]
	$23 = ($0 + [44])
	$3 = *($23)
	*($0) = *($30)
	*($31) = *(($1 + [-24]))
	*($32) = *(($1 + [-32]))
	*($18) = *(($1 + [-40]))
	$18 = ($1 + [-48])
	*($0 + [4 align=4]) = *($18)
	$32 = ($1 + [-16])
	$0 = *($32)
	$31 = ($1 + [-20])
	*($33) = *($31)
	*($26) = $0
	$26 = ($1 + [-12])
	*($7) = *($26)
	*($26) = [0]
	*($31) = (int_64)0
	$7 = ($1 + [-8])
	*($23) = *($7)
	*($30) = $19
	*(($1 + [-28])) = *($2)
	*(($1 + [-36])) = *($5)
	*(($1 + [-44])) = *($34 + [12 align=4])
	*($18) = *($34 + [8])
	$30 = *($31)
	if ( ($30 == 0) ){ goto $label$9 }
	*($32) = $30
	CALL $282($30)
	*($32) = [0]
	*($26) = [0]
	*($31) = [0]
	
.LABEL $label$9
	*($32) = $21
	*($31) = $22
	*($26) = $20
	*($7) = $3
	goto $label$1 
	
.LABEL $label$7
	$30 = ($0 + [104])
	CALL $162($0, ($0 + [52]), $30, $2)
	$6 = ($0 + [156])
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$10 }
	$4 = (($34 + [8]) | [4])
	$28 = [0]
	$29 = [0]
	
.LOOP $label$11:
	$5 = $6
	if ( (CALL int_32 $5((int_32 $30), (int_32 *($2))) == 0) ){ goto $label$12 }
	*($4) = *($5 + [4])
	*(($8 = ($4 + [24]))) = *(($5 + [28]))
	*(($9 = ($4 + [20]))) = *(($5 + [24]))
	*(($10 = ($4 + [16]))) = *(($5 + [20]))
	*(($11 = ($4 + [12]))) = *(($5 + [16]))
	*(($12 = ($4 + [8]))) = *(($5 + [12]))
	*(($13 = ($4 + [4]))) = *(($5 + [8]))
	*($34 + [8]) = *($5)
	*(($14 = (($34 + [8]) + [40]))) = [0]
	$6 = ($5 + [32])
	*(($15 = (($34 + [8]) + [32]))) = *($6)
	$31 = ($5 + [36])
	*(($16 = (($34 + [8]) + [36]))) = *($31)
	$26 = ($5 + [40])
	*($14) = *($26)
	*($6) = [0]
	*($31) = [0]
	*($26) = [0]
	*(($17 = (($34 + [8]) + [44]))) = *(($5 + [44]))
	$31 = $28
	$32 = $5
	
.LOOP $label$13:
	$18 = ($6 + [104])
	*((($6 = ($0 + $31)) + [156])) = *($18)
	$19 = ($6 + [132])
	*(($6 + [184])) = *($19)
	$20 = ($6 + [128])
	*(($6 + [180])) = *($20)
	$21 = ($6 + [124])
	*(($6 + [176])) = *($21)
	$22 = ($6 + [120])
	*(($6 + [172])) = *($22)
	$23 = ($6 + [116])
	*(($6 + [168])) = *($23)
	$24 = ($6 + [112])
	*(($6 + [164])) = *($24)
	$25 = ($6 + [108])
	*(($6 + [160])) = *($25)
	$26 = ($6 + [188])
	$7 = *($26)
	if ( ($7 == 0) ){ goto $label$15 }
	*(($33 = ($6 + [192]))) = $7
	CALL $282($7)
	*($26) = [0]
	*($33) = (int_64)0
	$33 = ($32 + [40])
	$32 = ($32 + [36])
	goto $label$14 
	
.LABEL $label$15
	$33 = ($6 + [196])
	$32 = ($6 + [192])
	
.LABEL $label$14
	$27 = ($6 + [140])
	*($32) = *($27)
	$7 = ($6 + [136])
	*($26) = *($7)
	$26 = ($6 + [144])
	*($33) = *($26)
	*($26) = [0]
	*($7) = (int_64)0
	$33 = ($6 + [148])
	*(($6 + [200])) = *($33)
	if ( ((int_32)$31 == (int_32)[-104]) ){ goto $label$16 }
	$31 = ($31 + [-52])
	$32 = $30
	$30 = ($30 + [-52])
	if ( CALL int_32 ($34 + [8])((int_32 ($6 + [52])), (int_32 *($2))) ){ goto $label$13 }
	
.LABEL $label$16
	*($18) = *($34 + [8])
	*($19) = *($8)
	*($20) = *($9)
	*($21) = *($10)
	*($22) = *($11)
	*($23) = *($12)
	*($24) = *($13)
	*($25) = *($4)
	$6 = *($7)
	if ( ($6 == 0) ){ goto $label$17 }
	*($27) = $6
	CALL $282($6)
	*($26) = [0]
	*($7) = (int_64)0
	
.LABEL $label$17
	*($7) = *($15)
	$31 = [0]
	*($16) = [0]
	$6 = *($14)
	*($14) = [0]
	*($26) = $6
	*($15) = [0]
	*($33) = *($17)
	$29 = ($29 + [1])
	if ( ((int_32)$29 == (int_32)[8]) ){ goto $label$3 }
	
.LABEL $label$12
	$28 = ($28 + [52])
	$30 = $5
	$6 = ($5 + [52])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$11 }
	
.LABEL $label$10
	$31 = [1]
	goto $label$2 
	
.LABEL $label$6
	CALL $162($0, ($0 + [52]), ($1 + [-52]), $2)
	goto $label$1 
	
.LABEL $label$5
	CALL $164($0, ($0 + [52]), ($0 + [104]), ($0 + [156]), ($1 + [-52]), $2)
	goto $label$1 
	
.LABEL $label$4
	CALL $163($0, ($0 + [52]), ($0 + [104]), ($1 + [-52]), $2)
	goto $label$1 
	
.LABEL $label$3
	$6 = ((int_32)($5 + [52]) == (int_32)$1)
	
.LABEL $label$2
	$6 = ($6 | $31)
	
.LABEL $label$1
	*([0] + [4]) = ($34 + [64])
	$31
	return ($6 & [1])
}

void .FUNC $165 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	$32 = (*([0] + [4]) - [64])
	*([0] + [4]) = $32
	$30 = ($0 + [104])
	CALL $162($0, ($0 + [52]), $30, $2)
	$5 = ($0 + [156])
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$1 }
	$3 = (($32 + [8]) | [4])
	$27 = [0]
	
.LOOP $label$2:
	$4 = $5
	if ( (CALL int_32 $4((int_32 $30), (int_32 *($2))) == 0) ){ goto $label$3 }
	*($3) = *($4 + [4])
	*(($7 = ($3 + [24]))) = *(($4 + [28]))
	*(($8 = ($3 + [20]))) = *(($4 + [24]))
	*(($9 = ($3 + [16]))) = *(($4 + [20]))
	*(($10 = ($3 + [12]))) = *(($4 + [16]))
	*(($11 = ($3 + [8]))) = *(($4 + [12]))
	*(($12 = ($3 + [4]))) = *(($4 + [8]))
	*($32 + [8]) = *($4)
	*(($13 = (($32 + [8]) + [40]))) = [0]
	$5 = ($4 + [32])
	*(($14 = (($32 + [8]) + [32]))) = *($5)
	$28 = ($4 + [36])
	*(($15 = (($32 + [8]) + [36]))) = *($28)
	$25 = ($4 + [40])
	*($13) = *($25)
	*($5) = [0]
	*($28) = [0]
	*($25) = [0]
	*(($16 = (($32 + [8]) + [44]))) = *(($4 + [44]))
	$28 = $27
	$29 = $4
	
.LOOP $label$4:
	$17 = ($5 + [104])
	*((($5 = ($0 + $28)) + [156])) = *($17)
	$18 = ($5 + [132])
	*(($5 + [184])) = *($18)
	$19 = ($5 + [128])
	*(($5 + [180])) = *($19)
	$20 = ($5 + [124])
	*(($5 + [176])) = *($20)
	$21 = ($5 + [120])
	*(($5 + [172])) = *($21)
	$22 = ($5 + [116])
	*(($5 + [168])) = *($22)
	$23 = ($5 + [112])
	*(($5 + [164])) = *($23)
	$24 = ($5 + [108])
	*(($5 + [160])) = *($24)
	$25 = ($5 + [188])
	$6 = *($25)
	if ( ($6 == 0) ){ goto $label$6 }
	*(($31 = ($5 + [192]))) = $6
	CALL $282($6)
	*($25) = [0]
	*($31) = (int_64)0
	$31 = ($29 + [40])
	$29 = ($29 + [36])
	goto $label$5 
	
.LABEL $label$6
	$31 = ($5 + [196])
	$29 = ($5 + [192])
	
.LABEL $label$5
	$26 = ($5 + [140])
	*($29) = *($26)
	$6 = ($5 + [136])
	*($25) = *($6)
	$25 = ($5 + [144])
	*($31) = *($25)
	*($25) = [0]
	*($6) = (int_64)0
	$31 = ($5 + [148])
	*(($5 + [200])) = *($31)
	if ( ((int_32)$28 == (int_32)[-104]) ){ goto $label$7 }
	$28 = ($28 + [-52])
	$29 = $30
	$30 = ($30 + [-52])
	if ( CALL int_32 ($32 + [8])((int_32 ($5 + [52])), (int_32 *($2))) ){ goto $label$4 }
	
.LABEL $label$7
	*($17) = *($32 + [8])
	*($18) = *($7)
	*($19) = *($8)
	*($20) = *($9)
	*($21) = *($10)
	*($22) = *($11)
	*($23) = *($12)
	*($24) = *($3)
	$5 = *($6)
	if ( ($5 == 0) ){ goto $label$8 }
	*($26) = $5
	CALL $282($5)
	*($25) = [0]
	*($6) = (int_64)0
	
.LABEL $label$8
	*($6) = *($14)
	*($15) = [0]
	$5 = *($13)
	*($13) = [0]
	*($25) = $5
	*($14) = [0]
	*($31) = *($16)
	
.LABEL $label$3
	$27 = ($27 + [52])
	$30 = $4
	$5 = ($4 + [52])
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$2 }
	
.LABEL $label$1
	*([0] + [4]) = ($32 + [64])
}

int_32 .FUNC $164 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	$27 = (*([0] + [4]) - [32])
	*([0] + [4]) = $27
	$26 = CALL $163($0, $1, $2, $3, $5)
	if ( (CALL int_32 $4((int_32 $3), (int_32 *($5))) == 0) ){ goto $label$1 }
	$24 = ($3 + [28])
	*(($10 = ($27 + [24]))) = *($24)
	*(($11 = ($27 + [20]))) = *(($3 + [24]))
	$23 = ($3 + [20])
	*(($12 = ($27 + [16]))) = *($23)
	*(($13 = ($27 + [12]))) = *(($3 + [16]))
	$14 = ($3 + [12])
	*(($15 = ($27 + [8]))) = *($14)
	*($27) = *($3 + [4])
	*($27 + [4]) = *(($3 + [8]))
	$17 = *($3)
	$16 = ($3 + [40])
	$8 = *($16)
	$25 = ($3 + [36])
	$7 = *($25)
	$18 = ($3 + [32])
	$6 = *($18)
	*($16) = [0]
	*($25) = [0]
	*($18) = [0]
	$19 = ($3 + [44])
	$9 = *($19)
	*($3) = *($4)
	$20 = ($4 + [28])
	*($24) = *($20)
	$21 = ($4 + [20])
	*($23) = *($21)
	$22 = ($4 + [12])
	*($14) = *($22)
	*($3 + [4 align=4]) = *($4 + [4 align=4])
	$23 = ($4 + [36])
	$14 = *($23)
	$24 = ($4 + [32])
	*($18) = *($24)
	*($25) = $14
	$25 = ($4 + [40])
	*($16) = *($25)
	*($25) = [0]
	*($24) = (int_64)0
	$16 = ($4 + [44])
	*($19) = *($16)
	*($4) = $17
	*($20) = *($10)
	*(($4 + [24])) = *($11)
	*($21) = *($12)
	*(($4 + [16])) = *($13)
	*($22) = *($15)
	*(($4 + [8])) = *($27 + [4])
	*($4 + [4]) = *($27)
	$4 = *($24)
	if ( ($4 == 0) ){ goto $label$2 }
	*($23) = $4
	CALL $282($4)
	*($25) = [0]
	*($24) = (int_64)0
	
.LABEL $label$2
	*($23) = $7
	*($24) = $6
	*($25) = $8
	*($16) = $9
	if ( (CALL int_32 $3((int_32 $2), (int_32 *($5))) == 0) ){ goto $label$5 }
	$24 = ($2 + [28])
	*(($27 + [24])) = *($24)
	*(($10 = ($27 + [20]))) = *(($2 + [24]))
	$23 = ($2 + [20])
	*(($27 + [16])) = *($23)
	*(($11 = ($27 + [12]))) = *(($2 + [16]))
	$12 = ($2 + [12])
	*(($27 + [8])) = *($12)
	*($27) = *($2 + [4])
	*($27 + [4]) = *(($2 + [8]))
	$13 = *($2)
	$16 = ($2 + [40])
	$15 = *($16)
	$25 = ($2 + [36])
	$14 = *($25)
	$18 = ($2 + [32])
	$17 = *($18)
	*($16) = [0]
	*($25) = [0]
	*($18) = [0]
	$8 = ($2 + [44])
	$9 = *($8)
	*($2) = *($3)
	$4 = ($3 + [4])
	*($24) = *(($4 + [24]))
	*($23) = *(($4 + [16]))
	*($12) = *(($4 + [8]))
	*($2 + [4 align=4]) = *($4)
	$23 = ($3 + [36])
	$12 = *($23)
	$24 = ($3 + [32])
	*($18) = *($24)
	*($25) = $12
	$25 = ($3 + [40])
	*($16) = *($25)
	*($25) = [0]
	*($24) = (int_64)0
	$16 = ($3 + [44])
	*($8) = *($16)
	*($3) = $13
	*(($4 + [20])) = *($10)
	*(($4 + [12])) = *($11)
	*(($4 + [4])) = *($27 + [4 align=4])
	*($4) = *($27)
	$3 = *($24)
	if ( ($3 == 0) ){ goto $label$6 }
	*($23) = $3
	CALL $282($3)
	*($25) = [0]
	*($24) = (int_64)0
	
.LABEL $label$6
	*($23) = $14
	*($24) = $17
	*($25) = $15
	*($16) = $9
	if ( (CALL int_32 $2((int_32 $1), (int_32 *($5))) == 0) ){ goto $label$4 }
	$4 = ($1 + [28])
	*(($27 + [24])) = *($4)
	*(($23 = ($27 + [20]))) = *(($1 + [24]))
	$18 = ($1 + [20])
	*(($27 + [16])) = *($18)
	*(($10 = ($27 + [12]))) = *(($1 + [16]))
	$11 = ($1 + [12])
	*(($27 + [8])) = *($11)
	*($27) = *($1 + [4])
	*($27 + [4]) = *(($1 + [8]))
	$12 = *($1)
	$25 = ($1 + [40])
	$13 = *($25)
	$24 = ($1 + [36])
	$15 = *($24)
	$16 = ($1 + [32])
	$14 = *($16)
	*($25) = [0]
	*($24) = [0]
	*($16) = [0]
	$17 = ($1 + [44])
	$9 = *($17)
	*($1) = *($2)
	$3 = ($2 + [4])
	*($4) = *(($3 + [24]))
	*($18) = *(($3 + [16]))
	*($11) = *(($3 + [8]))
	*($1 + [4 align=4]) = *($3)
	$18 = ($2 + [36])
	$11 = *($18)
	$4 = ($2 + [32])
	*($16) = *($4)
	*($24) = $11
	$24 = ($2 + [40])
	*($25) = *($24)
	*($24) = [0]
	*($4) = (int_64)0
	$25 = ($2 + [44])
	*($17) = *($25)
	*($2) = $12
	*(($3 + [20])) = *($23)
	*(($3 + [12])) = *($10)
	*(($3 + [4])) = *($27 + [4 align=4])
	*($3) = *($27)
	$3 = *($4)
	if ( ($3 == 0) ){ goto $label$7 }
	*($18) = $3
	CALL $282($3)
	*($24) = [0]
	*($4) = (int_64)0
	
.LABEL $label$7
	*($18) = $15
	*($4) = $14
	*($24) = $13
	*($25) = $9
	if ( (CALL int_32 $1((int_32 $0), (int_32 *($5))) == 0) ){ goto $label$3 }
	$4 = ($0 + [28])
	*(($27 + [24])) = *($4)
	*(($25 = ($27 + [20]))) = *(($0 + [24]))
	$16 = ($0 + [20])
	*(($27 + [16])) = *($16)
	*(($18 = ($27 + [12]))) = *(($0 + [16]))
	$23 = ($0 + [12])
	*(($27 + [8])) = *($23)
	*($27) = *($0 + [4])
	*($27 + [4]) = *(($0 + [8]))
	$10 = *($0)
	$5 = ($0 + [40])
	$11 = *($5)
	$2 = ($0 + [36])
	$12 = *($2)
	$24 = ($0 + [32])
	$13 = *($24)
	*($5) = [0]
	*($2) = [0]
	*($24) = [0]
	$15 = ($0 + [44])
	$9 = *($15)
	*($0) = *($1)
	$3 = ($1 + [4])
	*($4) = *(($3 + [24]))
	*($16) = *(($3 + [16]))
	*($23) = *(($3 + [8]))
	*($0 + [4 align=4]) = *($3)
	$0 = ($1 + [36])
	$16 = *($0)
	$4 = ($1 + [32])
	*($24) = *($4)
	*($2) = $16
	$2 = ($1 + [40])
	*($5) = *($2)
	*($2) = [0]
	*($4) = (int_64)0
	$5 = ($1 + [44])
	*($15) = *($5)
	*($1) = $10
	*(($3 + [20])) = *($25)
	*(($3 + [12])) = *($18)
	*(($3 + [4])) = *($27 + [4 align=4])
	*($3) = *($27)
	$3 = *($4)
	if ( ($3 == 0) ){ goto $label$8 }
	*($0) = $3
	CALL $282($3)
	*($2) = [0]
	*($4) = (int_64)0
	
.LABEL $label$8
	*($0) = $12
	*($4) = $13
	*($2) = $11
	*($5) = $9
	$26 = ($26 + [4])
	goto $label$1 
	
.LABEL $label$5
	$26 = ($26 + [1])
	goto $label$1 
	
.LABEL $label$4
	$26 = ($26 + [2])
	goto $label$1 
	
.LABEL $label$3
	$26 = ($26 + [3])
	
.LABEL $label$1
	*([0] + [4]) = ($27 + [32])
	return $26
}

int_32 .FUNC $163 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	$26 = (*([0] + [4]) - [32])
	*([0] + [4]) = $26
	$25 = CALL $162($0, $1, $2, $4)
	if ( (CALL int_32 $3((int_32 $2), (int_32 *($4))) == 0) ){ goto $label$1 }
	$23 = ($2 + [28])
	*(($9 = ($26 + [24]))) = *($23)
	*(($10 = ($26 + [20]))) = *(($2 + [24]))
	$22 = ($2 + [20])
	*(($11 = ($26 + [16]))) = *($22)
	*(($12 = ($26 + [12]))) = *(($2 + [16]))
	$13 = ($2 + [12])
	*(($14 = ($26 + [8]))) = *($13)
	*($26) = *($2 + [4])
	*($26 + [4]) = *(($2 + [8]))
	$16 = *($2)
	$15 = ($2 + [40])
	$7 = *($15)
	$24 = ($2 + [36])
	$6 = *($24)
	$17 = ($2 + [32])
	$5 = *($17)
	*($15) = [0]
	*($24) = [0]
	*($17) = [0]
	$18 = ($2 + [44])
	$8 = *($18)
	*($2) = *($3)
	$19 = ($3 + [28])
	*($23) = *($19)
	$20 = ($3 + [20])
	*($22) = *($20)
	$21 = ($3 + [12])
	*($13) = *($21)
	*($2 + [4 align=4]) = *($3 + [4 align=4])
	$22 = ($3 + [36])
	$13 = *($22)
	$23 = ($3 + [32])
	*($17) = *($23)
	*($24) = $13
	$24 = ($3 + [40])
	*($15) = *($24)
	*($24) = [0]
	*($23) = (int_64)0
	$15 = ($3 + [44])
	*($18) = *($15)
	*($3) = $16
	*($19) = *($9)
	*(($3 + [24])) = *($10)
	*($20) = *($11)
	*(($3 + [16])) = *($12)
	*($21) = *($14)
	*(($3 + [8])) = *($26 + [4])
	*($3 + [4]) = *($26)
	$3 = *($23)
	if ( ($3 == 0) ){ goto $label$2 }
	*($22) = $3
	CALL $282($3)
	*($24) = [0]
	*($23) = (int_64)0
	
.LABEL $label$2
	*($22) = $6
	*($23) = $5
	*($24) = $7
	*($15) = $8
	if ( (CALL int_32 $2((int_32 $1), (int_32 *($4))) == 0) ){ goto $label$4 }
	$23 = ($1 + [28])
	*(($26 + [24])) = *($23)
	*(($9 = ($26 + [20]))) = *(($1 + [24]))
	$22 = ($1 + [20])
	*(($26 + [16])) = *($22)
	*(($10 = ($26 + [12]))) = *(($1 + [16]))
	$11 = ($1 + [12])
	*(($26 + [8])) = *($11)
	*($26) = *($1 + [4])
	*($26 + [4]) = *(($1 + [8]))
	$12 = *($1)
	$15 = ($1 + [40])
	$14 = *($15)
	$24 = ($1 + [36])
	$13 = *($24)
	$17 = ($1 + [32])
	$16 = *($17)
	*($15) = [0]
	*($24) = [0]
	*($17) = [0]
	$7 = ($1 + [44])
	$8 = *($7)
	*($1) = *($2)
	$3 = ($2 + [4])
	*($23) = *(($3 + [24]))
	*($22) = *(($3 + [16]))
	*($11) = *(($3 + [8]))
	*($1 + [4 align=4]) = *($3)
	$22 = ($2 + [36])
	$11 = *($22)
	$23 = ($2 + [32])
	*($17) = *($23)
	*($24) = $11
	$24 = ($2 + [40])
	*($15) = *($24)
	*($24) = [0]
	*($23) = (int_64)0
	$15 = ($2 + [44])
	*($7) = *($15)
	*($2) = $12
	*(($3 + [20])) = *($9)
	*(($3 + [12])) = *($10)
	*(($3 + [4])) = *($26 + [4 align=4])
	*($3) = *($26)
	$2 = *($23)
	if ( ($2 == 0) ){ goto $label$5 }
	*($22) = $2
	CALL $282($2)
	*($24) = [0]
	*($23) = (int_64)0
	
.LABEL $label$5
	*($22) = $13
	*($23) = $16
	*($24) = $14
	*($15) = $8
	if ( (CALL int_32 $1((int_32 $0), (int_32 *($4))) == 0) ){ goto $label$3 }
	$3 = ($0 + [28])
	*(($26 + [24])) = *($3)
	*(($17 = ($26 + [20]))) = *(($0 + [24]))
	$15 = ($0 + [20])
	*(($26 + [16])) = *($15)
	*(($22 = ($26 + [12]))) = *(($0 + [16]))
	$9 = ($0 + [12])
	*(($26 + [8])) = *($9)
	*($26) = *($0 + [4])
	*($26 + [4]) = *(($0 + [8]))
	$10 = *($0)
	$4 = ($0 + [40])
	$11 = *($4)
	$23 = ($0 + [36])
	$12 = *($23)
	$24 = ($0 + [32])
	$14 = *($24)
	*($4) = [0]
	*($23) = [0]
	*($24) = [0]
	$13 = ($0 + [44])
	$8 = *($13)
	*($0) = *($1)
	$2 = ($1 + [4])
	*($3) = *(($2 + [24]))
	*($15) = *(($2 + [16]))
	*($9) = *(($2 + [8]))
	*($0 + [4 align=4]) = *($2)
	$15 = ($1 + [36])
	$0 = *($15)
	$3 = ($1 + [32])
	*($24) = *($3)
	*($23) = $0
	$0 = ($1 + [40])
	*($4) = *($0)
	*($0) = [0]
	*($3) = (int_64)0
	$4 = ($1 + [44])
	*($13) = *($4)
	*($1) = $10
	*(($2 + [20])) = *($17)
	*(($2 + [12])) = *($22)
	*(($2 + [4])) = *($26 + [4 align=4])
	*($2) = *($26)
	$2 = *($3)
	if ( ($2 == 0) ){ goto $label$6 }
	*($15) = $2
	CALL $282($2)
	*($0) = [0]
	*($3) = (int_64)0
	
.LABEL $label$6
	*($15) = $12
	*($3) = $14
	*($0) = $11
	*($4) = $8
	$25 = ($25 + [3])
	goto $label$1 
	
.LABEL $label$4
	$25 = ($25 + [1])
	goto $label$1 
	
.LABEL $label$3
	$25 = ($25 + [2])
	
.LABEL $label$1
	*([0] + [4]) = ($26 + [32])
	return $25
}

int_32 .FUNC $162 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	$24 = (*([0] + [4]) - [32])
	*([0] + [4]) = $24
	$23 = CALL int_32 $1((int_32 $0), (int_32 *($3)))
	$4 = CALL int_32 $2((int_32 $1), (int_32 *($3)))
	if ( ($23 == 0) ){ goto $label$4 }
	if ( ($4 == 0) ){ goto $label$3 }
	$1 = ($0 + [28])
	*(($10 = ($24 + [24]))) = *($1)
	*(($13 = ($24 + [20]))) = *(($0 + [24]))
	$9 = ($0 + [20])
	*(($14 = ($24 + [16]))) = *($9)
	*(($15 = ($24 + [12]))) = *(($0 + [16]))
	$16 = ($0 + [12])
	*(($17 = ($24 + [8]))) = *($16)
	*($24) = *($0 + [4])
	*($24 + [4]) = *(($0 + [8]))
	$18 = *($0)
	$3 = ($0 + [40])
	$7 = *($3)
	$23 = ($0 + [36])
	$6 = *($23)
	$4 = ($0 + [32])
	$5 = *($4)
	*($3) = [0]
	*($23) = [0]
	*($4) = [0]
	$19 = ($0 + [44])
	$8 = *($19)
	*($0) = *($2)
	$20 = ($2 + [28])
	*($1) = *($20)
	$21 = ($2 + [20])
	*($9) = *($21)
	$22 = ($2 + [12])
	*($16) = *($22)
	*($0 + [4 align=4]) = *($2 + [4 align=4])
	$9 = ($2 + [36])
	$0 = *($9)
	$1 = ($2 + [32])
	*($4) = *($1)
	*($23) = $0
	$0 = ($2 + [40])
	*($3) = *($0)
	*($0) = [0]
	*($1) = (int_64)0
	$3 = ($2 + [44])
	*($19) = *($3)
	*($2) = $18
	*($20) = *($10)
	*(($2 + [24])) = *($13)
	*($21) = *($14)
	*(($2 + [16])) = *($15)
	*($22) = *($17)
	*(($2 + [8])) = *($24 + [4])
	*($2 + [4]) = *($24)
	$2 = *($1)
	if ( ($2 == 0) ){ goto $label$5 }
	*($9) = $2
	CALL $282($2)
	*($0) = [0]
	*($1) = (int_64)0
	
.LABEL $label$5
	*($9) = $6
	*($1) = $5
	*($0) = $7
	*($3) = $8
	$23 = [1]
	goto $label$1 
	
.LABEL $label$4
	$23 = [0]
	if ( ($4 == 0) ){ goto $label$1 }
	$23 = ($1 + [28])
	*(($14 = ($24 + [24]))) = *($23)
	*(($15 = ($24 + [20]))) = *(($1 + [24]))
	$13 = ($1 + [20])
	*(($17 = ($24 + [16]))) = *($13)
	*(($16 = ($24 + [12]))) = *(($1 + [16]))
	$7 = ($1 + [12])
	*(($18 = ($24 + [8]))) = *($7)
	*($24) = *($1 + [4])
	*($24 + [4]) = *(($1 + [8]))
	$6 = *($1)
	$9 = ($1 + [40])
	$5 = *($9)
	$4 = ($1 + [36])
	$19 = *($4)
	$10 = ($1 + [32])
	$20 = *($10)
	*($9) = [0]
	*($4) = [0]
	*($10) = [0]
	$21 = ($1 + [44])
	$8 = *($21)
	*($1) = *($2)
	$22 = ($2 + [28])
	*($23) = *($22)
	$11 = ($2 + [20])
	*($13) = *($11)
	$12 = ($2 + [12])
	*($7) = *($12)
	*($1 + [4 align=4]) = *($2 + [4 align=4])
	$13 = ($2 + [36])
	$7 = *($13)
	$23 = ($2 + [32])
	*($10) = *($23)
	*($4) = $7
	$4 = ($2 + [40])
	*($9) = *($4)
	*($4) = [0]
	*($23) = (int_64)0
	$9 = ($2 + [44])
	*($21) = *($9)
	*($2) = $6
	*($22) = *($14)
	*(($2 + [24])) = *($15)
	*($11) = *($17)
	*(($2 + [16])) = *($16)
	*($12) = *($18)
	*(($2 + [8])) = *($24 + [4])
	*($2 + [4]) = *($24)
	$2 = *($23)
	if ( ($2 == 0) ){ goto $label$6 }
	*($13) = $2
	CALL $282($2)
	*($4) = [0]
	*($23) = (int_64)0
	
.LABEL $label$6
	*($13) = $19
	*($23) = $20
	*($4) = $5
	*($9) = $8
	$23 = [1]
	if ( (CALL int_32 $1((int_32 $0), (int_32 *($3))) == 0) ){ goto $label$1 }
	$9 = ($0 + [28])
	*(($24 + [24])) = *($9)
	*(($10 = ($24 + [20]))) = *(($0 + [24]))
	$13 = ($0 + [20])
	*(($24 + [16])) = *($13)
	*(($14 = ($24 + [12]))) = *(($0 + [16]))
	$15 = ($0 + [12])
	*(($24 + [8])) = *($15)
	*($24) = *($0 + [4])
	*($24 + [4]) = *(($0 + [8]))
	$17 = *($0)
	$23 = ($0 + [40])
	$16 = *($23)
	$3 = ($0 + [36])
	$18 = *($3)
	$4 = ($0 + [32])
	$7 = *($4)
	*($23) = [0]
	*($3) = [0]
	*($4) = [0]
	$6 = ($0 + [44])
	$8 = *($6)
	*($0) = *($1)
	$2 = ($1 + [4])
	*($9) = *(($2 + [24]))
	*($13) = *(($2 + [16]))
	*($15) = *(($2 + [8]))
	*($0 + [4 align=4]) = *($2)
	$9 = ($1 + [36])
	$13 = *($9)
	$0 = ($1 + [32])
	*($4) = *($0)
	*($3) = $13
	$3 = ($1 + [40])
	*($23) = *($3)
	*($3) = [0]
	*($0) = (int_64)0
	$23 = ($1 + [44])
	*($6) = *($23)
	*($1) = $17
	*(($2 + [20])) = *($10)
	*(($2 + [12])) = *($14)
	*(($2 + [4])) = *($24 + [4 align=4])
	*($2) = *($24)
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$7 }
	*($9) = $1
	CALL $282($1)
	*($3) = [0]
	*($0) = (int_64)0
	
.LABEL $label$7
	*($9) = $18
	*($0) = $7
	*($3) = $16
	*($23) = $8
	goto $label$2 
	
.LABEL $label$3
	$10 = ($0 + [28])
	*(($13 = ($24 + [24]))) = *($10)
	*(($14 = ($24 + [20]))) = *(($0 + [24]))
	$17 = ($0 + [20])
	*(($15 = ($24 + [16]))) = *($17)
	*(($16 = ($24 + [12]))) = *(($0 + [16]))
	$7 = ($0 + [12])
	*(($18 = ($24 + [8]))) = *($7)
	*($24) = *($0 + [4])
	*($24 + [4]) = *(($0 + [8]))
	$6 = *($0)
	$4 = ($0 + [40])
	$5 = *($4)
	$23 = ($0 + [36])
	$19 = *($23)
	$9 = ($0 + [32])
	$20 = *($9)
	*($4) = [0]
	*($23) = [0]
	*($9) = [0]
	$21 = ($0 + [44])
	$8 = *($21)
	*($0) = *($1)
	$22 = ($1 + [28])
	*($10) = *($22)
	$11 = ($1 + [20])
	*($17) = *($11)
	$17 = ($1 + [12])
	*($7) = *($17)
	*($0 + [4 align=4]) = *($1 + [4 align=4])
	$10 = ($1 + [36])
	$7 = *($10)
	$0 = ($1 + [32])
	*($9) = *($0)
	*($23) = $7
	$23 = ($1 + [40])
	*($4) = *($23)
	*($23) = [0]
	*($0) = (int_64)0
	$9 = ($1 + [44])
	*($21) = *($9)
	*($1) = $6
	*($22) = *($13)
	*(($1 + [24])) = *($14)
	*($11) = *($15)
	*(($1 + [16])) = *($16)
	*($17) = *($18)
	*(($1 + [8])) = *($24 + [4])
	*($1 + [4]) = *($24)
	$4 = *($0)
	if ( ($4 == 0) ){ goto $label$8 }
	*($10) = $4
	CALL $282($4)
	*($23) = [0]
	*($0) = (int_64)0
	
.LABEL $label$8
	*($10) = $19
	*($0) = $20
	*($23) = $5
	*($9) = $8
	$23 = [1]
	if ( (CALL int_32 $2((int_32 $1), (int_32 *($3))) == 0) ){ goto $label$1 }
	$0 = ($1 + [4])
	$9 = ($0 + [24])
	*(($10 = ($24 + [24]))) = *($9)
	*(($13 = ($24 + [20]))) = *(($0 + [20]))
	$15 = ($0 + [16])
	*(($14 = ($24 + [16]))) = *($15)
	*(($17 = ($24 + [12]))) = *(($0 + [12]))
	$18 = ($0 + [8])
	*(($16 = ($24 + [8]))) = *($18)
	*($24) = *($0)
	*($24 + [4]) = *(($0 + [4]))
	$7 = *($1)
	$3 = ($1 + [40])
	$6 = *($3)
	$23 = ($1 + [36])
	$5 = *($23)
	$4 = ($1 + [32])
	$19 = *($4)
	*($3) = [0]
	*($23) = [0]
	*($4) = [0]
	$20 = ($1 + [44])
	$8 = *($20)
	*($1) = *($2)
	$21 = ($2 + [28])
	*($9) = *($21)
	$22 = ($2 + [20])
	*($15) = *($22)
	$15 = ($2 + [12])
	*($18) = *($15)
	*($0) = *($2 + [4 align=4])
	$9 = ($2 + [36])
	$0 = *($9)
	$1 = ($2 + [32])
	*($4) = *($1)
	*($23) = $0
	$0 = ($2 + [40])
	*($3) = *($0)
	*($0) = [0]
	*($1) = (int_64)0
	$3 = ($2 + [44])
	*($20) = *($3)
	*($2) = $7
	*($21) = *($10)
	*(($2 + [24])) = *($13)
	*($22) = *($14)
	*(($2 + [16])) = *($17)
	*($15) = *($16)
	*(($2 + [8])) = *($24 + [4])
	*($2 + [4]) = *($24)
	$2 = *($1)
	if ( ($2 == 0) ){ goto $label$9 }
	*($9) = $2
	CALL $282($2)
	*($0) = [0]
	*($1) = (int_64)0
	
.LABEL $label$9
	*($9) = $5
	*($1) = $19
	*($0) = $6
	*($3) = $8
	
.LABEL $label$2
	$23 = [2]
	
.LABEL $label$1
	*([0] + [4]) = ($24 + [32])
	return $23
}

void .FUNC $161 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_32 $35
	$35 = (*([0] + [4]) - [32])
	*([0] + [4]) = $35
	$26 = ($35 + [24])
	$27 = ($35 + [16])
	$28 = ($35 + [8])
	
.LOOP $label$1:
	$9 = ([104] - $1)
	$8 = ($1 + [-8])
	$7 = ($1 + [-12])
	$6 = ($1 + [-16])
	$5 = ($1 + [-20])
	$4 = ($1 + [-48])
	$3 = ($1 + [-52])
	
.LOOP $label$2:
	$10 = $0
	
.LOOP $label$4:
	$0 = ($1 - $10)
	$34 = ((int_32)$0 / (int_32)[52])
	if ( ((uint_32)$34 <= (uint_32)[5]) ){ goto $label$12 }
	if ( ((int_32)$0 <= (int_32)[363]) ){ goto $label$11 }
	$15 = ($10 + ((int_32)((uint_32)$0 / (uint_32)[104]) * (int_32)[52]))
	if ( ((int_32)$0 < (int_32)[51949]) ){ goto $label$14 }
	$0 = ((int_32)((uint_32)$0 / (uint_32)[208]) * (int_32)[52])
	$12 = CALL $164($10, ($10 + $0), $15, ($15 + $0), $3, $2)
	goto $label$13 
	
.LABEL $label$14
	$12 = CALL $162($10, $15, $3, $2)
	
.LABEL $label$13
	if ( CALL int_32 $10((int_32 $15), (int_32 *($2))) ){ goto $label$15 }
	$0 = ([0] - $10)
	$25 = $3
	
.LOOP $label$18:
	if ( ((int_32)($25 + $0) == (int_32)[52]) ){ goto $label$17 }
	$25 = ($25 + [-52])
	if ( (CALL int_32 $25((int_32 $15), (int_32 *($2))) == 0) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$33 = ($10 + [52])
	if ( CALL int_32 $10((int_32 $3), (int_32 *($2))) ){ goto $label$19 }
	if ( ((int_32)$33 == (int_32)$3) ){ goto $label$6 }
	$25 = ($10 + $9)
	$0 = [0]
	
.LOOP $label$21:
	$34 = ($10 + $0)
	$15 = ($34 + [52])
	if ( CALL int_32 $10((int_32 $15), (int_32 *($2))) ){ goto $label$20 }
	$0 = ($0 + [52])
	if ( ($25 + $0) ){ goto $label$21 }
	goto $label$6 
	
.LABEL $label$20
	$20 = *($15)
	$21 = ($34 + [80])
	*($26) = *($21)
	$33 = ($34 + [72])
	*($27) = *($33)
	$29 = ($34 + [64])
	*($28) = *($29)
	$11 = ($34 + [56])
	*($35) = *($11)
	$0 = ($34 + [92])
	$12 = *($0)
	$25 = ($34 + [88])
	$16 = *($25)
	$14 = ($34 + [84])
	$17 = *($14)
	*($0) = [0]
	*($25) = [0]
	*($14) = [0]
	$18 = ($34 + [96])
	$13 = *($18)
	*($15) = *($3)
	*($21) = *(($4 + [24]))
	*($33) = *(($4 + [16]))
	*($29) = *(($4 + [8]))
	*($11) = *($4)
	$15 = *($6)
	*($14) = *($5)
	*($25) = $15
	*($0) = *($7)
	*($6) = [0]
	*($7) = [0]
	*($5) = [0]
	*($18) = *($8)
	*($3) = $20
	*(($4 + [20])) = *(($35 + [20]))
	*(($4 + [12])) = *(($35 + [12]))
	*(($4 + [4])) = *($35 + [4 align=4])
	*($4) = *($35)
	$0 = *($5)
	if ( ($0 == 0) ){ goto $label$22 }
	*($6) = $0
	CALL $282($0)
	*($6) = [0]
	*($7) = [0]
	*($5) = [0]
	
.LABEL $label$22
	*($6) = $16
	*($5) = $17
	*($7) = $12
	*($8) = $13
	$33 = ($34 + [104])
	
.LABEL $label$19
	if ( ((int_32)$33 == (int_32)$3) ){ goto $label$6 }
	$15 = $3
	
.LOOP $label$23:
	$34 = ($33 + [-52])
	
.LOOP $label$24:
	$34 = ($34 + [52])
	if ( (CALL int_32 $10((int_32 $34), (int_32 *($2))) == 0) ){ goto $label$24 }
	$0 = ($15 + [44])
	$33 = ($34 + [52])
	
.LOOP $label$25:
	$15 = ($0 + [-96])
	$0 = ($0 + [-52])
	if ( CALL int_32 $10((int_32 $15), (int_32 *($2))) ){ goto $label$25 }
	$15 = ($0 + [-44])
	if ( ((uint_32)$34 >= (uint_32)$15) ){ goto $label$5 }
	$16 = *($34)
	$14 = ($34 + [28])
	*($26) = *($14)
	$17 = ($34 + [20])
	*($27) = *($17)
	$18 = ($34 + [12])
	*($28) = *($18)
	$19 = ($34 + [4])
	*($35) = *($19)
	$20 = ($34 + [40])
	$12 = *($20)
	$25 = ($34 + [36])
	$11 = *($25)
	$21 = ($34 + [32])
	$29 = *($21)
	*($20) = [0]
	*($25) = [0]
	*($21) = [0]
	$22 = ($34 + [44])
	$13 = *($22)
	*($34) = *($15)
	$23 = ($0 + [-16])
	*($14) = *($23)
	$24 = ($0 + [-24])
	*($17) = *($24)
	$17 = ($0 + [-32])
	*($18) = *($17)
	$18 = ($0 + [-40])
	*($19) = *($18)
	$14 = ($0 + [-8])
	$19 = *($14)
	$34 = ($0 + [-12])
	*($21) = *($34)
	*($25) = $19
	$25 = ($0 + [-4])
	*($20) = *($25)
	*($25) = [0]
	*($34) = (int_64)0
	*($22) = *($0)
	*($15) = $16
	*($23) = *($26)
	*(($0 + [-20])) = *(($35 + [20]))
	*($24) = *($27)
	*(($0 + [-28])) = *(($35 + [12]))
	*($17) = *($28)
	*(($0 + [-36])) = *($35 + [4])
	*($18) = *($35)
	$20 = *($34)
	if ( ($20 == 0) ){ goto $label$26 }
	*($14) = $20
	CALL $282($20)
	*($14) = [0]
	*($25) = [0]
	*($34) = [0]
	
.LABEL $label$26
	*($14) = $11
	*($34) = $29
	*($25) = $12
	*($0) = $13
	goto $label$23 
	
.LABEL $label$16
	$33 = *($10)
	$0 = ($10 + [28])
	*($26) = *($0)
	$21 = ($10 + [20])
	*($27) = *($21)
	$29 = ($10 + [12])
	*($28) = *($29)
	*($35) = *($10 + [4 align=4])
	$14 = ($10 + [40])
	$11 = *($14)
	$34 = ($10 + [36])
	$16 = *($34)
	$20 = ($10 + [32])
	$17 = *($20)
	*($14) = [0]
	*($34) = [0]
	*($20) = [0]
	$18 = ($10 + [44])
	$13 = *($18)
	*($10) = *($25)
	$19 = ($25 + [28])
	*($0) = *($19)
	$22 = ($25 + [20])
	*($21) = *($22)
	$23 = ($25 + [12])
	*($29) = *($23)
	$29 = ($25 + [4])
	*($10 + [4 align=4]) = *($29)
	$21 = ($25 + [36])
	$24 = *($21)
	$0 = ($25 + [32])
	*($20) = *($0)
	*($34) = $24
	$34 = ($25 + [40])
	*($14) = *($34)
	*($34) = [0]
	*($0) = (int_64)0
	$20 = ($25 + [44])
	*($18) = *($20)
	*($25) = $33
	*($19) = *($26)
	*(($25 + [24])) = *(($35 + [20]))
	*($22) = *($27)
	*(($25 + [16])) = *(($35 + [12]))
	*($23) = *($28)
	*(($25 + [8])) = *($35 + [4])
	*($29) = *($35)
	$14 = *($0)
	if ( ($14 == 0) ){ goto $label$27 }
	*($21) = $14
	CALL $282($14)
	*($34) = [0]
	*($0) = (int_64)0
	
.LABEL $label$27
	*($21) = $16
	*($0) = $17
	*($34) = $11
	*($20) = $13
	$12 = ($12 + [1])
	goto $label$7 
	
.LABEL $label$15
	$25 = $3
	goto $label$7 
	
.LABEL $label$12
	goto $label$6 
	
.LABEL $label$28
	if ( (CALL int_32 $3((int_32 $10), (int_32 *($2))) == 0) ){ goto $label$6 }
	$15 = *($10)
	$25 = ($10 + [28])
	*(($35 + [24])) = *($25)
	$26 = ($10 + [20])
	*(($35 + [16])) = *($26)
	$27 = ($10 + [12])
	*(($35 + [8])) = *($27)
	*($35) = *($10 + [4 align=4])
	$2 = ($10 + [40])
	$28 = *($2)
	$0 = ($10 + [36])
	$14 = *($0)
	$34 = ($10 + [32])
	$20 = *($34)
	*($2) = [0]
	*($0) = [0]
	*($34) = [0]
	$21 = ($10 + [44])
	$13 = *($21)
	*($10) = *($3)
	*($25) = *(($4 + [24]))
	*($26) = *(($4 + [16]))
	*($27) = *(($4 + [8]))
	*($10 + [4 align=4]) = *($4)
	$10 = *($6)
	*($34) = *($5)
	*($0) = $10
	*($2) = *($7)
	*($5) = [0]
	*($6) = [0]
	*($7) = [0]
	*($21) = *($8)
	*($3) = $15
	*(($4 + [20])) = *(($35 + [20]))
	*(($4 + [12])) = *(($35 + [12]))
	*(($4 + [4])) = *($35 + [4 align=4])
	*($4) = *($35)
	$2 = *($5)
	if ( ($2 == 0) ){ goto $label$29 }
	*($6) = $2
	CALL $282($2)
	*($6) = [0]
	*($7) = [0]
	*($5) = [0]
	
.LABEL $label$29
	*($6) = $14
	*($5) = $20
	*($7) = $28
	*($8) = $13
	goto $label$6 
	
.LABEL $label$11
	CALL $165($10, $1, $2)
	goto $label$6 
	
.LABEL $label$10
	CALL $162($10, ($10 + [52]), $3, $2)
	goto $label$6 
	
.LABEL $label$9
	CALL $163($10, ($10 + [52]), ($10 + [104]), $3, $2)
	goto $label$6 
	
.LABEL $label$8
	CALL $164($10, ($10 + [52]), ($10 + [104]), ($10 + [156]), $3, $2)
	goto $label$6 
	
.LABEL $label$7
	$11 = ($10 + [52])
	if ( ((uint_32)$11 >= (uint_32)$25) ){ goto $label$30 }
	
.LOOP $label$31:
	$34 = ($11 + [-52])
	
.LOOP $label$32:
	$34 = ($34 + [52])
	if ( CALL int_32 $34((int_32 $15), (int_32 *($2))) ){ goto $label$32 }
	$0 = ($25 + [44])
	$11 = ($34 + [52])
	
.LOOP $label$33:
	$25 = ($0 + [-96])
	$0 = ($0 + [-52])
	if ( (CALL int_32 $25((int_32 $15), (int_32 *($2))) == 0) ){ goto $label$33 }
	$25 = ($0 + [-44])
	if ( ((uint_32)$34 > (uint_32)$25) ){ goto $label$34 }
	$19 = *($34)
	$14 = ($34 + [28])
	*($26) = *($14)
	$21 = ($34 + [20])
	*($27) = *($21)
	$22 = ($34 + [12])
	*($28) = *($22)
	$23 = ($34 + [4])
	*($35) = *($23)
	$33 = ($34 + [40])
	$18 = *($33)
	$20 = ($34 + [36])
	$17 = *($20)
	$29 = ($34 + [32])
	$16 = *($29)
	*($33) = [0]
	*($20) = [0]
	*($29) = [0]
	$24 = ($34 + [44])
	$13 = *($24)
	*($34) = *($25)
	$30 = ($0 + [-16])
	*($14) = *($30)
	$31 = ($0 + [-24])
	*($21) = *($31)
	$32 = ($0 + [-32])
	*($22) = *($32)
	$22 = ($0 + [-40])
	*($23) = *($22)
	$21 = ($0 + [-8])
	$23 = *($21)
	$14 = ($0 + [-12])
	*($29) = *($14)
	*($20) = $23
	$20 = ($0 + [-4])
	*($33) = *($20)
	*($20) = [0]
	*($14) = (int_64)0
	*($24) = *($0)
	*($25) = $19
	*($30) = *($26)
	*(($0 + [-20])) = *(($35 + [20]))
	*($31) = *($27)
	*(($0 + [-28])) = *(($35 + [12]))
	*($32) = *($28)
	*(($0 + [-36])) = *($35 + [4])
	*($22) = *($35)
	$33 = *($14)
	if ( ($33 == 0) ){ goto $label$35 }
	*($21) = $33
	CALL $282($33)
	*($21) = [0]
	*($20) = [0]
	*($14) = [0]
	
.LABEL $label$35
	*($21) = $17
	*($14) = $16
	*($20) = $18
	*($0) = $13
	$15 = ( $25 ? $15 : ((int_32)$15 == (int_32)$34) )
	$12 = ($12 + [1])
	goto $label$31 
	
.LABEL $label$34
	$11 = $34
	
.LABEL $label$30
	if ( ((int_32)$11 == (int_32)$15) ){ goto $label$36 }
	if ( (CALL int_32 $15((int_32 $11), (int_32 *($2))) == 0) ){ goto $label$36 }
	$21 = *($11)
	$0 = ($11 + [28])
	*($26) = *($0)
	$20 = ($11 + [20])
	*($27) = *($20)
	$33 = ($11 + [12])
	*($28) = *($33)
	*($35) = *($11 + [4 align=4])
	$25 = ($11 + [40])
	$29 = *($25)
	$34 = ($11 + [36])
	$16 = *($34)
	$14 = ($11 + [32])
	$17 = *($14)
	*($25) = [0]
	*($34) = [0]
	*($14) = [0]
	$18 = ($11 + [44])
	$13 = *($18)
	*($11) = *($15)
	$19 = ($15 + [28])
	*($0) = *($19)
	$22 = ($15 + [20])
	*($20) = *($22)
	$23 = ($15 + [12])
	*($33) = *($23)
	*($11 + [4 align=4]) = *($15 + [4 align=4])
	$20 = ($15 + [36])
	$33 = *($20)
	$0 = ($15 + [32])
	*($14) = *($0)
	*($34) = $33
	$34 = ($15 + [40])
	*($25) = *($34)
	*($34) = [0]
	*($0) = (int_64)0
	$25 = ($15 + [44])
	*($18) = *($25)
	*($15) = $21
	*($19) = *($26)
	*(($15 + [24])) = *(($35 + [20]))
	*($22) = *($27)
	*(($15 + [16])) = *(($35 + [12]))
	*($23) = *($28)
	*(($15 + [8])) = *($35 + [4])
	*($15 + [4]) = *($35)
	$15 = *($0)
	if ( ($15 == 0) ){ goto $label$37 }
	*($20) = $15
	CALL $282($15)
	*($34) = [0]
	*($0) = (int_64)0
	
.LABEL $label$37
	*($20) = $16
	*($0) = $17
	*($34) = $29
	*($25) = $13
	$12 = ($12 + [1])
	
.LABEL $label$36
	if ( $12 ){ goto $label$39 }
	$34 = CALL $166($10, $11, $2)
	$0 = ($11 + [52])
	if ( CALL $166($0, $1, $2) ){ goto $label$38 }
	if ( $34 ){ goto $label$2 }
	
.LABEL $label$39
	if ( ((int_32)($11 - $10) >= (int_32)($1 - $11)) ){ goto $label$3 }
	CALL $161($10, $11, $2)
	$0 = ($11 + [52])
	goto $label$2 
	
.LABEL $label$38
	$1 = $11
	$0 = $10
	if ( ($34 == 0) ){ goto $label$1 }
	
.LABEL $label$6
	*([0] + [4]) = ($35 + [32])
	return 
	
.LABEL $label$5
	$10 = $34
	goto $label$4 
	
.LABEL $label$3
	CALL $161(($11 + [52]), $1, $2)
	$1 = $11
	$0 = $10
	goto $label$1 
	$34
}

int_32 .FUNC _Z11myfunction1R9_maxstyleS0_ (int_32 $0, int_32 $1)
{
	return ((int_32)((((int_32)*(($0 + [8])) * (int_32)[10000]) + ((int_32)*($0 + [4]) * (int_32)[10000000])) + *(($0 + [44]))) > (int_32)((((int_32)*(($1 + [8])) * (int_32)[10000]) + ((int_32)*($1 + [4]) * (int_32)[10000000])) + *(($1 + [44]))))
}

void .FUNC _ZN6NiuNiu12_onwaitstartEv (int_32 $0)
{
	int_64 $1
	int_32 $2
	$2 = (*([0] + [4]) - [96])
	*([0] + [4]) = $2
	CALL _ZN6NiuNiu11_getgamectxEv($2, $0)
	*($2 + [64]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($2 + [56]) = ((int_64)*($2 + [56]) + (int_64)1)
	CALL $288(($2 + [40]), [1344])
	*($2 + [72]) = ((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) + (int_64)43) & (int_64)4294967295)
	$1 = CALL current_time()
	*($2 + [8]) = [0]
	*($2 + [16]) = [0]
	*($2 + [20]) = [0]
	*($2 + [24]) = [0]
	*($2 + [80]) = ((int_64)((uint_64)$1 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($2 + [88]) = CALL _ZN6NiuNiu6_genidEv($0)
	CALL eosio_assert(((int_64)*($2) != (int_64)0), [1408])
	CALL $69(($0 + [8]), $2, *($0))
	CALL _ZN6NiuNiu11_starttimerEyy($0, *($2 + [80]), (int_64)43)
	if ( ((*($2 + [40]) & [1]) == 0) ){ goto $label$1 }
	CALL $282(*(($2 + [48])))
	
.LABEL $label$1
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$2 }
	CALL $282(*(($2 + [36])))
	
.LABEL $label$2
	*([0] + [4]) = ($2 + [96])
}

int_32 .FUNC $169 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$2 = ($0 + [4])
	$6 = *($0 + [4])
	if ( ($6 == 0) ){ goto $label$2 }
	$3 = ($1 + [1])
	$10 = ($1 + [4])
	$11 = ($1 + [8])
	$0 = $2
	
.LOOP $label$4:
	$4 = $0
	$0 = $6
	
.LOOP $label$7:
	$7 = ($8 & [1])
	$8 = *($0 + [16])
	$8 = ( *(($0 + [20])) ? uint_32($8 >> [1]) : $7 )
	$5 = ($6 & [1])
	$6 = *($1)
	$6 = ( *($10) ? uint_32($6 >> [1]) : $5 )
	$9 = ( $6 ? $8 : ($6 <= $8) )
	if ( ($9 == 0) ){ goto $label$9 }
	$5 = CALL memcmp(( *(($0 + [24])) ? (($0 + [16]) + [1]) : $7 ), ( *($11) ? $3 : $5 ), $9)
	if ( ($5 == 0) ){ goto $label$9 }
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	if ( ((uint_32)$8 >= (uint_32)$6) ){ goto $label$6 }
	
.LABEL $label$8
	$0 = *($0 + [4])
	if ( $0 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$6 = *($0)
	if ( $6 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$0 = $4
	
.LABEL $label$3
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$2 }
	$7 = ($8 & [1])
	$8 = *($1)
	$8 = ( *(($1 + [4])) ? uint_32($8 >> [1]) : $7 )
	$5 = ($6 & [1])
	$6 = *($0 + [16])
	$6 = ( *($0 + [20]) ? uint_32($6 >> [1]) : $5 )
	$9 = ( $6 ? $8 : ($6 <= $8) )
	if ( ($9 == 0) ){ goto $label$10 }
	$5 = CALL memcmp(( *(($1 + [8])) ? $3 : $7 ), ( *($0 + [24]) ? (($0 + [16]) + [1]) : $5 ), $9)
	if ( ($5 == 0) ){ goto $label$10 }
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$10
	if ( ((uint_32)$8 >= (uint_32)$6) ){ goto $label$1 }
	
.LABEL $label$2
	$0 = $2
	
.LABEL $label$1
	return $0
}

void .FUNC $168 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$3 = int_32(($6 - $5) >> [2])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[1073741824]) ){ goto $label$3 }
	$4 = [1073741823]
	$2 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($2 >> [2]) > (uint_32)[536870910]) ){ goto $label$5 }
	$4 = int_32($2 >> [1])
	$4 = ( $7 ? $4 : ($4 <= $7) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[1073741824]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $280(($4 << [2]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $298($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($3 << [2])))) = *($1)
	$6 = ($6 - $5)
	$1 = ($3 - $6)
	$4 = ($7 + ($4 << [2]))
	$7 = ($3 + [4])
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $5, $6)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $282($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC _ZN6NiuNiu6_onendEv (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [112])
	*([0] + [4]) = $6
	CALL _ZN6NiuNiu13_clearbetinfoEv($0)
	CALL _ZN6NiuNiu11_getgamectxEv(($6 + [16]), $0)
	$1 = *($6 + [28])
	if ( ((uint_32)$1 >= (uint_32)[1001]) ){ goto $label$6 }
	if ( $1 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$2 = *($6 + [72])
	if ( ((uint_64)$2 <= (uint_64)(int_64)14) ){ goto $label$3 }
	
.LABEL $label$5
	$2 = *($6 + [16])
	*(($6 + [8])) = [0]
	*($6) = (int_64)0
	$4 = CALL strlen([1760])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = (CASTING uint_64)(uint_32 $1)
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$9 }
	*($6) = ($4 << [1])
	$1 = ($6 | [1])
	if ( $4 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$5 = (($4 + [16]) & [-16])
	$1 = CALL $280($5)
	*($6) = ($5 | [1])
	*($6 + [8]) = $1
	*($6 + [4]) = $4
	
.LABEL $label$8
	CALL memcpy($1, [1760], $4)
	
.LABEL $label$7
	*(($1 + $4)) = [0]
	CALL _ZN6NiuNiu14_simplebackeosEyyRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0, $2, $3, $6)
	if ( ((*($6) & [1]) == 0) ){ goto $label$4 }
	CALL $282(*($6 + [8]))
	
.LABEL $label$4
	CALL _ZN6NiuNiu13_cleargamectxEv($0)
	CALL _ZN6NiuNiu14_autosetbankerEv($0)
	$4 = ($6 + [56])
	goto $label$1 
	
.LABEL $label$3
	$3 = ((uint_64)$2 % (uint_64)(int_64)3)
	$4 = ($6 + [56])
	if ( (int_64)($2 == 0) ){ goto $label$10 }
	if ( ((int_64)$3 != (int_64)0) ){ goto $label$10 }
	CALL $288($4, [1360])
	*($6 + [80]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($6 + [88]) = ((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) + (int_64)20) & (int_64)4294967295)
	CALL eosio_assert(((int_64)*($6 + [16]) != (int_64)0), [1408])
	CALL $69(($0 + [8]), ($6 + [16]), *($0))
	CALL _ZN6NiuNiu11_starttimerEyy($0, *($6 + [96]), (int_64)20)
	goto $label$1 
	
.LABEL $label$10
	CALL $288($4, [1344])
	*(($1 = ($6 + [72]))) = ((int_64)*($1) + (int_64)1)
	*($6 + [24]) = [0]
	*($6 + [32]) = [0]
	*($6 + [36]) = [0]
	*($6 + [40]) = [0]
	*($6 + [80]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($6 + [88]) = ((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) + (int_64)43) & (int_64)4294967295)
	*($6 + [96]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($6 + [104]) = CALL _ZN6NiuNiu6_genidEv($0)
	CALL eosio_assert(((int_64)*($6 + [16]) != (int_64)0), [1408])
	CALL $69(($0 + [8]), ($6 + [16]), *($0))
	CALL _ZN6NiuNiu11_starttimerEyy($0, *($6 + [96]), (int_64)43)
	goto $label$1 
	
.LABEL $label$2
	CALL $284($6)
	
.LABEL $label$1
	if ( ((*($4) & [1]) == 0) ){ goto $label$11 }
	CALL $282(*(($6 + [64])))
	
.LABEL $label$11
	if ( ((*($6 + [44]) & [1]) == 0) ){ goto $label$12 }
	CALL $282(*(($6 + [52])))
	
.LABEL $label$12
	*([0] + [4]) = ($6 + [112])
	(unreachable)
}

void .FUNC $61 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $280(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $298($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $282($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $282($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [16])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy($2, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC _ZN6NiuNiu11_getgamectxEv (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [96])
	*([0] + [4]) = $7
	$0 = CALL $90($0)
	$2 = ($1 + [8])
	$3 = *(($1 + [36]))
	if ( ((int_32)$3 == (int_32)*(($1 + [32]))) ){ goto $label$11 }
	$1 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [96]) == (int_32)$2), [1104])
	if ( $1 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$1 = CALL db_find_i64(*($2), *(($1 + [16])), (int_64)7035929282832498688, (int_64)7035929282832498688)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$9 }
	CALL eosio_assert(((int_32)*(CALL $62($2, $1) + [96]) == (int_32)$2), [1104])
	
.LABEL $label$10
	CALL $185($7, $2)
	*(($0 + [24])) = *(($7 + [24]))
	*(($0 + [16])) = *(($7 + [16]))
	*(($0 + [8])) = *(($7 + [8]))
	*($0) = *($7)
	$1 = ($0 + [28])
	$2 = ($7 + [28])
	if ( (*($0 + [28]) & [1]) ){ goto $label$8 }
	*($1) = [0]
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [36])) = [0]
	*($7) = (int_64)0
	*($7 + [8]) = (int_64)0
	*($7 + [16]) = (int_64)0
	*($7 + [24]) = [0]
	*($7 + [28 align=4]) = (int_64)0
	$2 = ($7 + [28])
	$1 = CALL strlen([224])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$6 }
	*(($7 + [28])) = ($1 << [1])
	$3 = ($2 + [1])
	if ( $1 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*(($0 + [36]))) = [0]
	*(($0 + [32])) = [0]
	
.LABEL $label$7
	CALL $287($1, [0])
	$3 = *(($2 + [8]))
	$4 = *($2)
	*(($7 + [28])) = [0]
	*(($1 + [8])) = $3
	*($1) = $4
	*(($7 + [32])) = [0]
	*(($7 + [36])) = [0]
	$1 = ($0 + [40])
	$2 = ($7 + [40])
	if ( (*($0 + [40]) & [1]) ){ goto $label$13 }
	*($1) = [0]
	goto $label$12 
	
.LABEL $label$13
	*(*(($0 + [48]))) = [0]
	*(($0 + [44])) = [0]
	
.LABEL $label$12
	CALL $287($1, [0])
	$3 = *(($2 + [8]))
	$4 = *($2)
	*(($7 + [40])) = [0]
	*(($1 + [8])) = $3
	*($1) = $4
	*(($7 + [44])) = [0]
	*(($7 + [48])) = [0]
	CALL memcpy(($0 + [56]), ($7 + [56]), [40])
	if ( ((*(($7 + [28])) & [1]) == 0) ){ goto $label$3 }
	CALL $282(*(($7 + [36])))
	goto $label$3 
	
.LABEL $label$6
	$6 = (($1 + [16]) & [-16])
	$3 = CALL $280($6)
	*(($7 + [28])) = ($6 | [1])
	*(($7 + [36])) = $3
	*(($7 + [32])) = $1
	
.LABEL $label$5
	CALL memcpy($3, [224], $1)
	
.LABEL $label$4
	*(($3 + $1)) = [0]
	*(($7 + [48])) = [0]
	*($7 + [40]) = (int_64)0
	$3 = ($7 + [40])
	$1 = CALL strlen([224])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$16 }
	*(($7 + [40])) = ($1 << [1])
	$6 = ($3 + [1])
	if ( $1 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$5 = (($1 + [16]) & [-16])
	$6 = CALL $280($5)
	*(($7 + [40])) = ($5 | [1])
	*(($7 + [48])) = $6
	*(($7 + [44])) = $1
	
.LABEL $label$15
	CALL memcpy($6, [224], $1)
	
.LABEL $label$14
	*(($6 + $1)) = [0]
	*(($0 + [24])) = *(($7 + [24]))
	*(($0 + [20])) = *(($7 + [20]))
	*(($0 + [16])) = *(($7 + [16]))
	*(($0 + [12])) = *(($7 + [12]))
	*(($0 + [8])) = *(($7 + [8]))
	*(($0 + [4])) = *($7 + [4])
	*($0) = *($7)
	*($7 + [64]) = (int_64)0
	*($7 + [56]) = (int_64)0
	*($7 + [72]) = (int_64)0
	*($7 + [80]) = (int_64)0
	*($7 + [88]) = (int_64)0
	$1 = ($0 + [28])
	if ( (*($0 + [28]) & [1]) ){ goto $label$18 }
	*($1) = [0]
	goto $label$17 
	
.LABEL $label$18
	*(*(($0 + [36]))) = [0]
	*(($0 + [32])) = [0]
	
.LABEL $label$17
	$6 = ($7 + [56])
	CALL $287($1, [0])
	$5 = *(($2 + [8]))
	$4 = *($2)
	*(($7 + [28])) = [0]
	*(($1 + [8])) = $5
	*($1) = $4
	*(($7 + [32])) = [0]
	*(($7 + [36])) = [0]
	$1 = ($0 + [40])
	if ( (*($0 + [40]) & [1]) ){ goto $label$20 }
	*($1) = [0]
	goto $label$19 
	
.LABEL $label$20
	*(*(($0 + [48]))) = [0]
	*(($0 + [44])) = [0]
	
.LABEL $label$19
	CALL $287($1, [0])
	$2 = *(($3 + [8]))
	$4 = *($3)
	*(($7 + [40])) = [0]
	*(($1 + [8])) = $2
	*($1) = $4
	*(($7 + [44])) = [0]
	*(($7 + [48])) = [0]
	CALL memcpy(($0 + [56]), $6, [40])
	if ( ((*(($7 + [28])) & [1]) == 0) ){ goto $label$3 }
	CALL $282(*(($7 + [36])))
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [96])
	return (unreachable)
	
.LABEL $label$2
	CALL $284($2)
	
.LABEL $label$1
	CALL $284($3)
	(unreachable)
}

void .FUNC $241 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	CALL $242($0, *($1), $2, $3)
}

int_64 .FUNC $87 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = *(($0 + [28]))
	if ( ((int_32)$2 == (int_32)*($0 + [24])) ){ goto $label$2 }
	$2 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [8]) == (int_32)$0), [1104])
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	$1 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)7235159541892513792, (int_64)7235159541892513792)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$2 = CALL $83($0, $1)
	CALL eosio_assert(((int_32)*($2 + [8]) == (int_32)$0), [1104])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [1696])
	return *($2)
}

void .FUNC $69 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [96]) == (int_32)$0), [1104])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)7035929282832498688, (int_64)7035929282832498688)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $62($0, $3)
	CALL eosio_assert(((int_32)*($3 + [96]) == (int_32)$0), [1104])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [1472])
	CALL $88($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $89($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

int_64 .FUNC _ZN6NiuNiu6_genidEv (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [48])
	*([0] + [4]) = $4
	CALL _ZN6NiuNiu14_getglobalinfoEv(($4 + [8]), $0)
	if ( ((int_64)*($4 + [24]) != (int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) ){ goto $label$2 }
	*(($1 = ($4 + [16]))) = ((int_64)*($1) + (int_64)1)
	goto $label$1 
	
.LABEL $label$2
	*(($4 + [16])) = (int_64)1
	*(($4 + [24])) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	
.LABEL $label$1
	CALL $97(($0 + [48]), ($4 + [8]), *($0))
	$2 = *(($4 + [16]))
	$0 = ($4 + [24])
	$3 = *($0)
	CALL prints([1728])
	$2 = ((int_64)$2 + (int_64)((int_64)$3 * (int_64)10000))
	CALL printui($2)
	CALL prints([1744])
	CALL printui(*($0))
	CALL prints([560])
	*([0] + [4]) = ($4 + [48])
	return $2
}

void .FUNC $248 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $280(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $298($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $282($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $282($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $249 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [48])
	*([0] + [4]) = $10
	*($10 + [40]) = (int_64)0
	*(($10 + [24])) = *(($2 + [24]))
	*(($10 + [16])) = *(($2 + [16]))
	*($10 + [8]) = *(($2 + [8]))
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx256_lowerbound(*($8), *($8 + [8]), (int_64)-7952543051627364352, $10, [2], ($10 + [40]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [40])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [48]) == (int_32)$4), [1104])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $250($4, CALL $fimport$16(*($4), *($4 + [8]), (int_64)-7952543051627364352, $5))
	CALL eosio_assert(((int_32)*($2 + [48]) == (int_32)$4), [1104])
	
.LABEL $label$4
	*(($2 + [56])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [48])
}

void .FUNC $246 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $77($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [1296])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [1296])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $81(CALL $82($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

int_32 .FUNC $247 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [1024])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $280([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [1056])
	CALL memcpy($6, $7, [8])
	*($6 + [12]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [12])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $248(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $282($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $244 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [1024])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $280([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [1056])
	CALL memcpy($6, $7, [8])
	*($6 + [12]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [12])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $245(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $282($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $245 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $280(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $298($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $282($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $282($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $242 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [16])
	*([0] + [4]) = $12
	*($12) = [0]
	$8 = *($1 + [8])
	*($12 + [8]) = $8
	if ( ((uint_32)$8 > (uint_32)[8]) ){ goto $label$2 }
	$11 = $12
	$10 = $1
	goto $label$1 
	
.LABEL $label$2
	$11 = CALL $281($8)
	*($12) = $11
	$10 = *($1)
	
.LABEL $label$1
	CALL memcpy($11, $10, $8)
	$4 = *(($12 + [8]))
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[8]) ){ goto $label$5 }
	$5 = ($12 + $4)
	
.LOOP $label$6:
	$7 = *($2)
	$10 = $12
	$8 = $4
	if ( ($8 == 0) ){ goto $label$7 }
	
.LOOP $label$8:
	$11 = ((int_32)$8 / (int_32)[2])
	$9 = ($10 + $11)
	if ( ((int_32)*($9) >= (int_32)$7) ){ goto $label$9 }
	$10 = ($9 + [1])
	$11 = (($8 + [-1]) - $11)
	
.LABEL $label$9
	$8 = $11
	if ( $8 ){ goto $label$8 }
	
.LABEL $label$7
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$10 }
	if ( ((int_32)*($10) <= (int_32)$7) ){ goto $label$3 }
	
.LABEL $label$10
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$5 = *($12)
	$6 = ($5 + $4)
	
.LOOP $label$11:
	$7 = *($2)
	$10 = $5
	$8 = $4
	if ( ($8 == 0) ){ goto $label$12 }
	
.LOOP $label$13:
	$11 = ((int_32)$8 / (int_32)[2])
	$9 = ($10 + $11)
	if ( ((int_32)*($9) >= (int_32)$7) ){ goto $label$14 }
	$10 = ($9 + [1])
	$11 = (($8 + [-1]) - $11)
	
.LABEL $label$14
	$8 = $11
	if ( $8 ){ goto $label$13 }
	
.LABEL $label$12
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$15 }
	if ( ((int_32)*($10) <= (int_32)$7) ){ goto $label$3 }
	
.LABEL $label$15
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$11 }
	
.LABEL $label$4
	$2 = $3
	
.LABEL $label$3
	if ( ($4 <= [9]) ){ goto $label$16 }
	$8 = *($12)
	if ( ($8 == 0) ){ goto $label$16 }
	CALL $283($8)
	
.LABEL $label$16
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$19 }
	if ( (*($1 + [12]) == 0) ){ goto $label$18 }
	$4 = ($2 + [1])
	goto $label$17 
	
.LABEL $label$19
	$2 = $3
	$4 = $3
	goto $label$17 
	
.LABEL $label$18
	$5 = *(($1 + [8]))
	if ( ((uint_32)$5 >= (uint_32)[9]) ){ goto $label$20 }
	$6 = ($1 + $5)
	$4 = $2
	
.LOOP $label$21:
	$7 = *($4)
	$10 = $1
	$8 = $5
	if ( ($8 == 0) ){ goto $label$22 }
	
.LOOP $label$23:
	$11 = ((int_32)$8 / (int_32)[2])
	$9 = ($10 + $11)
	if ( ((int_32)*($9) >= (int_32)$7) ){ goto $label$24 }
	$10 = ($9 + [1])
	$11 = (($8 + [-1]) - $11)
	
.LABEL $label$24
	$8 = $11
	if ( $8 ){ goto $label$23 }
	
.LABEL $label$22
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$17 }
	if ( ((int_32)*($10) > (int_32)$7) ){ goto $label$17 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$21 }
	goto $label$17 
	
.LABEL $label$20
	$6 = *($1)
	$1 = ($6 + $5)
	$4 = $2
	
.LOOP $label$25:
	$7 = *($4)
	$10 = $6
	$8 = $5
	if ( ($8 == 0) ){ goto $label$26 }
	
.LOOP $label$27:
	$11 = ((int_32)$8 / (int_32)[2])
	$9 = ($10 + $11)
	if ( ((int_32)*($9) >= (int_32)$7) ){ goto $label$28 }
	$10 = ($9 + [1])
	$11 = (($8 + [-1]) - $11)
	
.LABEL $label$28
	$8 = $11
	if ( $8 ){ goto $label$27 }
	
.LABEL $label$26
	if ( ((int_32)$10 == (int_32)$1) ){ goto $label$17 }
	if ( ((int_32)*($10) > (int_32)$7) ){ goto $label$17 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$25 }
	
.LABEL $label$17
	*($0 + [4]) = $4
	*($0) = $2
	*([0] + [4]) = ($12 + [16])
}

void .FUNC $243 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ((uint_32)$2 > (uint_32)[3]) ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$13
	$3 = *($0)
	*(($2 = CALL $280([16]))) = [0]
	$5 = *($3 + [8])
	*($2 + [8]) = $5
	if ( ((uint_32)$5 > (uint_32)[8]) ){ goto $label$8 }
	$0 = $3
	$4 = $2
	goto $label$7 
	
.LABEL $label$12
	$3 = [0]
	
.LOOP $label$14:
	$2 = [-3]
	
.LOOP $label$16:
	if ( ((int_32)*((($3 + $2) + [3962])) != (int_32)*(($2 + [3907]))) ){ goto $label$15 }
	if ( ($2 == 0) ){ goto $label$6 }
	$2 = ($2 + [1])
	if ( ((int_32)($3 + $2) != (int_32)[180]) ){ goto $label$16 }
	goto $label$4 
	
.LABEL $label$15
	$2 = [183]
	$3 = ($3 + [1])
	if ( ((int_32)$3 != (int_32)[183]) ){ goto $label$14 }
	goto $label$3 
	
.LABEL $label$11
	*($1) = *($0)
	*($0) = [0]
	return 
	
.LABEL $label$10
	$2 = *($1)
	if ( ($2 == 0) ){ goto $label$17 }
	if ( (*($2 + [8]) <= [9]) ){ goto $label$18 }
	$3 = *($2)
	if ( ($3 == 0) ){ goto $label$18 }
	CALL $283($3)
	
.LABEL $label$18
	CALL $282($2)
	
.LABEL $label$17
	*($1) = [0]
	return 
	
.LABEL $label$9
	$5 = *($1)
	$3 = [0]
	
.LOOP $label$19:
	$2 = [-3]
	
.LOOP $label$21:
	if ( ((int_32)*((($3 + $2) + [3962])) != (int_32)*(($2 + [3907]))) ){ goto $label$20 }
	if ( ($2 == 0) ){ goto $label$5 }
	$2 = ($2 + [1])
	if ( ((int_32)($3 + $2) != (int_32)[180]) ){ goto $label$21 }
	goto $label$2 
	
.LABEL $label$20
	$2 = [183]
	$3 = ($3 + [1])
	if ( ((int_32)$3 != (int_32)[183]) ){ goto $label$19 }
	goto $label$1 
	
.LABEL $label$8
	$4 = CALL $281($5)
	*($2) = $4
	$5 = *(($2 + [8]))
	$0 = *($3)
	
.LABEL $label$7
	CALL memcpy($4, $0, $5)
	*($1) = $2
	*($2 + [12]) = *($3 + [12])
	return 
	
.LABEL $label$6
	$2 = $3
	goto $label$3 
	
.LABEL $label$5
	$2 = $3
	goto $label$1 
	
.LABEL $label$4
	$2 = [183]
	
.LABEL $label$3
	*($1 + [4]) = [0]
	*($1) = ( [3959] ? ($2 + [3963]) : ((int_32)$2 == (int_32)[183]) )
	return 
	
.LABEL $label$2
	$2 = [183]
	
.LABEL $label$1
	$3 = ( [3959] ? ($2 + [3963]) : ((int_32)$2 == (int_32)[183]) )
	$2 = *($5)
	if ( ($2 == 0) ){ goto $label$23 }
	$5 = ($5 + [1])
	
.LOOP $label$24:
	if ( ((int_32)($2 & [255]) != (int_32)*($3)) ){ goto $label$22 }
	$3 = ($3 + [1])
	$2 = *($5)
	$5 = ($5 + [1])
	if ( $2 ){ goto $label$24 }
	
.LABEL $label$23
	$2 = [0]
	
.LABEL $label$22
	*($1) = ( *($0) ? [0] : ((int_32)($2 & [255]) == (int_32)*($3)) )
	$2
}

void .FUNC $240 (int_32 $0, int_32 $1, int_32 $2)
{
	if ( ((int_32)$2 != (int_32)[4]) ){ goto $label$4 }
	$0 = [0]
	
.LOOP $label$5:
	$2 = [-3]
	
.LOOP $label$7:
	if ( ((int_32)*((($0 + $2) + [3962])) != (int_32)*(($2 + [3907]))) ){ goto $label$6 }
	if ( ($2 == 0) ){ goto $label$3 }
	$2 = ($2 + [1])
	if ( ((int_32)($0 + $2) != (int_32)[180]) ){ goto $label$7 }
	goto $label$2 
	
.LABEL $label$6
	$2 = [183]
	$0 = ($0 + [1])
	if ( ((int_32)$0 != (int_32)[183]) ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$4
	CALL $243($0, $1, $2)
	return 
	
.LABEL $label$3
	$2 = $0
	goto $label$1 
	
.LABEL $label$2
	$2 = [183]
	
.LABEL $label$1
	*($1 + [4]) = [0]
	*($1) = ( [3959] ? ($2 + [3963]) : ((int_32)$2 == (int_32)[183]) )
}

int_32 .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [96])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [1024])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($8 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($7 + [20]) = $4
	*($7 + [16]) = $4
	*($7 + [24]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$5 = CALL $280([112])
	CALL $90($5)
	*($5 + [96]) = $0
	*($7 + [32]) = ($7 + [16])
	*($7 + [44]) = ($5 + [8])
	*($7 + [40]) = $5
	*($7 + [48]) = ($5 + [12])
	*($7 + [52]) = ($5 + [16])
	*($7 + [56]) = ($5 + [20])
	*($7 + [60]) = ($5 + [24])
	*($7 + [64]) = ($5 + [28])
	*($7 + [68]) = ($5 + [40])
	*($7 + [72]) = ($5 + [56])
	*($7 + [76]) = ($5 + [64])
	*($7 + [80]) = ($5 + [72])
	*($7 + [84]) = ($5 + [80])
	*($7 + [88]) = ($5 + [88])
	CALL $186(($7 + [40]), ($7 + [32]))
	*($5 + [100]) = $1
	*($7 + [32]) = $5
	*($7 + [40]) = (int_64)7035929282832498688
	$6 = *($5 + [100])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = (int_64)7035929282832498688
	*($4 + [16]) = $6
	*($7 + [32]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $92(($0 + [24]), ($7 + [32]), ($7 + [40]), ($7 + [12]))
	
.LABEL $label$8
	$4 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((*($4 + [40]) & [1]) == 0) ){ goto $label$10 }
	CALL $282(*(($4 + [48])))
	
.LABEL $label$10
	if ( ((*($4 + [28]) & [1]) == 0) ){ goto $label$11 }
	CALL $282(*(($4 + [36])))
	
.LABEL $label$11
	CALL $282($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [96])
	return $5
}

void .FUNC $84 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [1520])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [1568])
	*($1) = *(*($3))
	CALL eosio_assert([1], [1632])
	CALL eosio_assert([1], [1296])
	CALL memcpy($4, $1, [8])
	CALL db_update_i64(*($1 + [12]), $2, $4, [8])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)7235159541892513792) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)7235159541892513793
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC _ZN6NiuNiu15_isinbankerlistEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	$6 = [0]
	*(($7 + [32])) = [0]
	*($7 + [16]) = (int_64)-1
	$4 = *($0)
	*($7) = $4
	*($7 + [8]) = $4
	*($7 + [24]) = (int_64)0
	$0 = CALL db_lowerbound_i64($4, $4, (int_64)4154295083342381056, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	$6 = [1]
	$0 = CALL $105($7, $0)
	if ( ((int_64)*($0) == (int_64)$1) ){ goto $label$3 }
	
.LOOP $label$5:
	CALL eosio_assert([1], [816])
	$0 = CALL db_next_i64(*($0 + [24]), ($7 + [40]))
	if ( ((int_32)$0 <= (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL $105($7, $0)
	if ( ((int_64)*($0) != (int_64)$1) ){ goto $label$5 }
	$6 = [1]
	$2 = *($7 + [24])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	
.LABEL $label$3
	$2 = *($7 + [24])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$5 = ($7 + [28])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$7 }
	
.LOOP $label$8:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$9 }
	CALL $282($3)
	
.LABEL $label$9
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$8 }
	$0 = *(($7 + [24]))
	goto $label$6 
	
.LABEL $label$7
	$0 = $2
	
.LABEL $label$6
	*($5) = $2
	CALL $282($0)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [48])
	return $6
}

int_32 .FUNC $83 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [1024])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$6 = CALL malloc($4)
	CALL db_get_i64($1, $6, $4)
	CALL free($6)
	goto $label$5 
	
.LABEL $label$6
	$6 = ($8 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $6
	CALL db_get_i64($1, $6, $4)
	
.LABEL $label$5
	*(($5 = CALL $280([24])) + [8]) = $0
	*($5) = (int_64)0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [1056])
	CALL memcpy($5, $6, [8])
	*($5 + [12]) = $1
	*($7 + [24]) = $5
	*($7 + [16]) = (int_64)7235159541892513792
	$6 = *($5 + [12])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = (int_64)7235159541892513792
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $86(($0 + [24]), ($7 + [24]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$7
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $282($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [32])
	return $5
}

int_32 .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [1296])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [1296])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [1296])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $149 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = *($0)
	$8 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [3])
	if ( ((uint_32)$4 <= (uint_32)int_32(($8 - $5) >> [3])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $282($5)
	$8 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$1 }
	$5 = [536870911]
	if ( ((uint_32)int_32($8 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$5 = $4
	$2 = int_32($8 >> [2])
	if ( ($2 <= $4) ){ goto $label$6 }
	$5 = $2
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($5 << [3])
	$5 = CALL $280($4)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($5, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	return 
	
.LABEL $label$4
	$3 = int_32($3 >> [3])
	$3 = (*($0 + [4]) - $5)
	$8 = ( ($1 + $3) ? $2 : ((uint_32)$4 > (uint_32)$3) )
	$6 = ($8 - $1)
	$7 = int_32($6 >> [3])
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memmove($5, $1, $6)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$3) ){ goto $label$2 }
	$1 = ($2 - $8)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $8, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + ($7 << [3]))
	return (unreachable)
	
.LABEL $label$1
	CALL $298($0)
}

int_32 .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [1296])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [1296])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $145 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	$9 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $9) / (int_32)[24])
	$8 = ($4 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$2 }
	$5 = ($0 + [8])
	$9 = ((int_32)(*($0 + [8]) - $9) / (int_32)[24])
	if ( ((uint_32)$9 >= (uint_32)[89478485]) ){ goto $label$5 }
	*(($10 + [24])) = $5
	$5 = [0]
	*($10 + [20]) = [0]
	$7 = ($10 + [20])
	$9 = ($9 << [1])
	$9 = ( $8 ? $9 : ($9 <= $8) )
	if ( ($9 == 0) ){ goto $label$3 }
	$5 = $9
	goto $label$4 
	
.LABEL $label$5
	*(($10 + [24])) = $5
	*($10 + [20]) = [0]
	$7 = ($10 + [20])
	$5 = [178956970]
	
.LABEL $label$4
	$8 = CALL $280(((int_32)$5 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $298($0)
	
.LABEL $label$1
	*($10 + [8]) = $8
	$9 = ($8 + ((int_32)$4 * (int_32)[24]))
	*($10 + [12]) = $9
	$5 = ($8 + ((int_32)$5 * (int_32)[24]))
	*($7) = $5
	$8 = *($1)
	*($1) = [0]
	$1 = *($3)
	$6 = *($2)
	*($9) = $8
	*($9 + [8]) = $6
	*($9 + [16]) = $1
	$1 = ($9 + [24])
	*($10 + [16]) = $1
	$2 = *($0)
	$8 = *(($0 + [4]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$5 = ($8 + [-24])
	$1 = *($5)
	*($5) = [0]
	*(($9 + [-24])) = $1
	*(($9 + [-8])) = *(($8 + [-8]))
	*(($9 + [-12])) = *(($8 + [-12]))
	*(($9 + [-16])) = *(($8 + [-16]))
	$9 = (*($10 + [12]) + [-24])
	*($10 + [12]) = $9
	$8 = $5
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$7 }
	$8 = *(($0 + [4]))
	$5 = *($7)
	$2 = *($0)
	$1 = *(($10 + [16]))
	
.LABEL $label$6
	*($0) = $9
	*(($0 + [4])) = $1
	*((($10 + [8]) + [8])) = $8
	$9 = ($0 + [8])
	$8 = *($9)
	*($9) = $5
	*($10 + [12]) = $2
	*($7) = $8
	*($10 + [8]) = $2
	CALL $146(($10 + [8]))
	*([0] + [4]) = ($10 + [32])
	(unreachable)
}

void .FUNC _ZN6NiuNiu10_onplayingEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	float_64 $19
	float_64 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_64 $30
	int_64 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_32 $35
	int_32 $36
	int_64 $37
	int_64 $38
	int_64 $39
	int_64 $40
	int_32 $41
	$41 = (*([0] + [4]) - [880])
	*([0] + [4]) = $41
	*($41 + [832]) = *($0)
	CALL $106(($41 + [816]), ($41 + [832]))
	CALL _ZN6NiuNiu24_removegameresulthistoryEi($0, [30])
	CALL _ZN6NiuNiu11_getgamectxEv(($41 + [720]), $0)
	CALL _ZN6NiuNiu14_getglobalinfoEv(($41 + [680]), $0)
	$1 = ($41 + [760])
	CALL $288($1, [1984])
	$38 = (int_64)0
	CALL eosio_assert(((int_64)*($41 + [720]) != (int_64)0), [1408])
	$2 = ($0 + [8])
	CALL $69($2, ($41 + [720]), *($0))
	CALL $122(($41 + [664]), *($41 + [720]), *($41 + [800]), *($41 + [732]))
	$37 = (int_64)59
	$36 = [688]
	$39 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$38 > (uint_64)(int_64)10) ){ goto $label$6 }
	$13 = *($36)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$13 = ($13 + [165])
	goto $label$4 
	
.LABEL $label$6
	$40 = (int_64)0
	if ( ((int_64)$38 == (int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$40 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$40 = ((int_64)((int_64)$40 & (int_64)31) << (int_64)((int_64)$37 & (int_64)4294967295))
	
.LABEL $label$2
	$36 = ($36 + [1])
	$37 = ((int_64)$37 + (int_64)-5)
	$39 = ((int_64)$40 | (int_64)$39)
	$38 = ((int_64)$38 + (int_64)1)
	if ( ((int_64)$38 != (int_64)13) ){ goto $label$1 }
	*(($41 + [552])) = [0]
	*($41 + [536]) = (int_64)-1
	*($41 + [544]) = (int_64)0
	$38 = *($0)
	*($41 + [528]) = $38
	*($41 + [520]) = $39
	$40 = (uint_64)(int_64)1397703936 >> (uint_64)(int_64)8
	$36 = CALL db_find_i64($39, $38, (int_64)3607749779137757184, $40)
	if ( ((int_32)$36) < (int_32)[0]) ){ goto $label$10 }
	CALL eosio_assert(((int_32)*(CALL $123(($41 + [520]), $36) + [16]) == (int_32)($41 + [520])), [1104])
	$36 = CALL $124(($41 + [520]), $40, [2000])
	CALL $125(($41 + [560]), ($41 + [664]), *($41 + [720]), *((($41 + [720]) + [80])), *(($41 + [732])), ($41 + [720]), *($36))
	CALL $16(($41 + [472]), ($41 + [560]))
	CALL $16(($41 + [424]), ($41 + [580]))
	CALL $16(($41 + [376]), ($41 + [600]))
	CALL $16(($41 + [328]), ($41 + [620]))
	CALL $16(($41 + [280]), (($41 + [560]) + [80]))
	CALL _ZN6NiuNiu12_getmaxstyleERK10_cardstyleS2_S2_S2_S2_(($41 + [224]), $36, ($41 + [472]), ($41 + [424]), ($41 + [376]), ($41 + [328]), ($41 + [280]))
	$14 = ((int_32)*($41 + [280]) * (int_32)[10000000])
	$10 = ((int_32)*($41 + [284]) * (int_32)[10000])
	$11 = *($41 + [320])
	$26 = (((int_32)*($41 + [332]) * (int_32)[10000]) + ((int_32)*($41 + [328]) * (int_32)[10000000]))
	$27 = *($41 + [368])
	$28 = ((((int_32)*($41 + [380]) * (int_32)[10000]) + ((int_32)*($41 + [376]) * (int_32)[10000000])) + *($41 + [416]))
	$9 = *($41 + [424])
	$17 = *($41 + [428])
	$13 = *($41 + [472])
	$25 = *($41 + [476])
	$36 = ((((int_32)$25 * (int_32)[10000]) + ((int_32)$13 * (int_32)[10000000])) + *($41 + [512]))
	if ( ((int_32)$36 <= (int_32)((((int_32)$17 * (int_32)[10000]) + ((int_32)$9 * (int_32)[10000000])) + *($41 + [464]))) ){ goto $label$20 }
	$9 = [1]
	if ( ((uint_32)$13 > (uint_32)[6]) ){ goto $label$15 }
	goto $label$21 
	
.LABEL $label$21
	if ( ((uint_32)$25 >= (uint_32)[11]) ){ goto $label$15 }
	$9 = *((($25 << [2]) + [2032]))
	goto $label$15 
	
.LABEL $label$20
	$25 = [1]
	if ( ((uint_32)$9 > (uint_32)[6]) ){ goto $label$12 }
	goto $label$22 
	
.LABEL $label$22
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$12 }
	$25 = *((($17 << [2]) + [2032]))
	goto $label$12 
	
.LABEL $label$19
	$9 = $13
	goto $label$15 
	
.LABEL $label$18
	$25 = $9
	goto $label$12 
	
.LABEL $label$17
	$9 = [4]
	goto $label$15 
	
.LABEL $label$16
	$9 = [5]
	
.LABEL $label$15
	CALL prints([2080])
	CALL printi((CASTING int_64)(int_32 $9))
	CALL prints([560])
	$25 = ([0] - $9)
	goto $label$11 
	
.LABEL $label$14
	$25 = [4]
	goto $label$12 
	
.LABEL $label$13
	$25 = [5]
	
.LABEL $label$12
	CALL prints([2112])
	CALL printi((CASTING int_64)(int_32 $25))
	CALL prints([560])
	
.LABEL $label$11
	$13 = ($10 + $14)
	$9 = ($26 + $27)
	if ( ((int_32)$36 <= (int_32)$28) ){ goto $label$31 }
	$14 = [1]
	$10 = *($41 + [472])
	if ( ((uint_32)$10 > (uint_32)[6]) ){ goto $label$26 }
	goto $label$32 
	
.LABEL $label$32
	$10 = *($41 + [476])
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$26 }
	$14 = *((($10 << [2]) + [2032]))
	goto $label$26 
	
.LABEL $label$31
	$26 = [1]
	$14 = *($41 + [376])
	if ( ((uint_32)$14 > (uint_32)[6]) ){ goto $label$23 }
	goto $label$33 
	
.LABEL $label$33
	$14 = *($41 + [380])
	if ( ((uint_32)$14 >= (uint_32)[11]) ){ goto $label$23 }
	$26 = *((($14 << [2]) + [2032]))
	goto $label$23 
	
.LABEL $label$30
	$14 = $10
	goto $label$26 
	
.LABEL $label$29
	$26 = $14
	goto $label$23 
	
.LABEL $label$28
	$14 = [4]
	goto $label$26 
	
.LABEL $label$27
	$14 = [5]
	
.LABEL $label$26
	$26 = ([0] - $14)
	goto $label$23 
	
.LABEL $label$25
	$26 = [4]
	goto $label$23 
	
.LABEL $label$24
	$26 = [5]
	
.LABEL $label$23
	$13 = ($13 + $11)
	if ( ((int_32)$36 <= (int_32)$9) ){ goto $label$45 }
	$9 = [1]
	$14 = *($41 + [472])
	if ( ((uint_32)$14 > (uint_32)[6]) ){ goto $label$40 }
	goto $label$46 
	
.LABEL $label$46
	$14 = *($41 + [476])
	if ( ((uint_32)$14 >= (uint_32)[11]) ){ goto $label$40 }
	$9 = *((($14 << [2]) + [2032]))
	goto $label$40 
	
.LABEL $label$45
	$27 = [1]
	$9 = *($41 + [328])
	if ( ((uint_32)$9 > (uint_32)[6]) ){ goto $label$39 }
	goto $label$47 
	
.LABEL $label$47
	$9 = *($41 + [332])
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$39 }
	$27 = *((($9 << [2]) + [2032]))
	if ( ((int_32)$36 > (int_32)$13) ){ goto $label$35 }
	goto $label$36 
	
.LABEL $label$44
	$9 = $14
	goto $label$40 
	
.LABEL $label$43
	$27 = $9
	if ( ((int_32)$36 > (int_32)$13) ){ goto $label$35 }
	goto $label$36 
	
.LABEL $label$42
	$9 = [4]
	goto $label$40 
	
.LABEL $label$41
	$9 = [5]
	
.LABEL $label$40
	$27 = ([0] - $9)
	
.LABEL $label$39
	if ( ((int_32)$36 <= (int_32)$13) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$38
	$27 = [4]
	if ( ((int_32)$36 > (int_32)$13) ){ goto $label$35 }
	goto $label$36 
	
.LABEL $label$37
	$27 = [5]
	if ( ((int_32)$36 > (int_32)$13) ){ goto $label$35 }
	
.LABEL $label$36
	$28 = [1]
	$36 = *($41 + [280])
	if ( ((uint_32)$36 > (uint_32)[6]) ){ goto $label$34 }
	goto $label$51 
	
.LABEL $label$51
	$36 = *($41 + [284])
	if ( ((uint_32)$36 >= (uint_32)[11]) ){ goto $label$34 }
	$28 = *((($36 << [2]) + [2032]))
	goto $label$34 
	
.LABEL $label$50
	$28 = $36
	goto $label$34 
	
.LABEL $label$49
	$28 = [4]
	goto $label$34 
	
.LABEL $label$48
	$28 = [5]
	goto $label$34 
	
.LABEL $label$35
	$36 = [1]
	$13 = *($41 + [472])
	if ( ((uint_32)$13 > (uint_32)[6]) ){ goto $label$52 }
	goto $label$56 
	
.LABEL $label$56
	$13 = *($41 + [476])
	if ( ((uint_32)$13 >= (uint_32)[11]) ){ goto $label$52 }
	$36 = *((($13 << [2]) + [2032]))
	goto $label$52 
	
.LABEL $label$55
	$36 = $13
	goto $label$52 
	
.LABEL $label$54
	$36 = [4]
	goto $label$52 
	
.LABEL $label$53
	$36 = [5]
	
.LABEL $label$52
	$28 = ([0] - $36)
	
.LABEL $label$34
	CALL _ZN6NiuNiu13_cleargameresEv($0)
	*((($41 + [184]) + [32])) = [0]
	$38 = *($0)
	*($41 + [192]) = $38
	*($41 + [200]) = (int_64)-1
	$30 = (int_64)0
	*($41 + [208]) = (int_64)0
	*($41 + [184]) = $38
	$14 = (($41 + [720]) + [12])
	$3 = *($14)
	CALL prints([2128])
	CALL printi((int_64)1736)
	CALL prints([560])
	*(($15 = (($41 + [144]) + [32]))) = [0]
	*($41 + [160]) = (int_64)-1
	*($41 + [168]) = (int_64)0
	$38 = *($0)
	*($41 + [144]) = $38
	*($41 + [152]) = $38
	CALL prints([2128])
	CALL printi((int_64)1739)
	CALL prints([560])
	$38 = CALL current_time()
	*((($41 + [80]) + [28])) = [0]
	*((($41 + [80]) + [32])) = [0]
	*($41 + [92]) = [0]
	*($41 + [96]) = [0]
	*($41 + [100]) = [0]
	*($41 + [104]) = [0]
	*($41 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$38 / (uint_64)(int_64)1000000)) + [60])
	*($41 + [116]) = [0]
	*((($41 + [80]) + [40])) = [0]
	*(($41 + [124])) = [0]
	*($41 + [128]) = [0]
	*(($41 + [132])) = [0]
	*(($41 + [136])) = [0]
	$31 = (int_64)0
	$36 = CALL db_lowerbound_i64(*($41 + [184]), *($41 + [192]), (int_64)4229699935735382016, (int_64)0)
	if ( ((int_32)$36 < (int_32)[0]) ){ goto $label$57 }
	$6 = ($0 + [88])
	$8 = (($41 + [144]) + [24])
	$7 = ($41 | [1])
	$5 = ($41 + [16])
	$4 = ($41 | [8])
	$9 = CALL $112(($41 + [184]), $36)
	$23 = ($41 + [800])
	$24 = (($41 + [144]) + [28])
	$31 = (int_64)0
	$30 = (int_64)0
	
.LOOP $label$58:
	$11 = *($9 + [12])
	$17 = *($9 + [16])
	$18 = *($9 + [20])
	$16 = *($9 + [8])
	$36 = (CASTING int_32)(float_64 CALL floor((CASTING float_64)(uint_32 ((uint_32)$16 / (uint_32)[5]))))
	if ( ((int_32)$25 < (int_32)[1]) ){ goto $label$60 }
	$10 = ((int_32)$36 * (int_32)$25)
	*($14) = (*($14) - $10)
	$19 = (CASTING float_64)(uint_32 ((uint_32)($10 << [1]) / (uint_32)[100]))
	$20 = CALL floor($19)
	$19 = CALL floor($19)
	CALL prints([2144])
	CALL prints([2160])
	$29 = (CASTING uint_32)(float_64 $19)
	$38 = (CASTING uint_64)(uint_32 $29)
	CALL printui($38)
	CALL prints([2176])
	$32 = (CASTING uint_32)(float_64 $20)
	$40 = (CASTING uint_64)(uint_32 $32)
	CALL printui($40)
	CALL prints([560])
	$31 = ((int_64)$38 + (int_64)$31)
	$30 = ((int_64)$40 + (int_64)$30)
	$13 = [0]
	$29 = (($10 - $32) - $29)
	$36 = ($29 + $36)
	$32 = $36
	goto $label$59 
	
.LABEL $label$60
	$13 = ((int_32)CALL abs($25) * (int_32)$36)
	*($14) = (*($14) + $13)
	$36 = [0]
	$29 = ([0] - $13)
	$32 = $29
	
.LABEL $label$59
	$10 = (CASTING int_32)(float_64 CALL floor((CASTING float_64)(uint_32 ((uint_32)*(($9 + [12])) / (uint_32)[5]))))
	if ( ((int_32)$26 < (int_32)[1]) ){ goto $label$62 }
	$33 = ((int_32)$10 * (int_32)$26)
	*($14) = (*($14) - $33)
	$19 = (CASTING float_64)(uint_32 ((uint_32)($33 << [1]) / (uint_32)[100]))
	$20 = CALL floor($19)
	$19 = CALL floor($19)
	CALL prints([2192])
	CALL prints([2160])
	$34 = (CASTING uint_32)(float_64 $19)
	$38 = (CASTING uint_64)(uint_32 $34)
	CALL printui($38)
	CALL prints([2176])
	$35 = (CASTING uint_32)(float_64 $20)
	$40 = (CASTING uint_64)(uint_32 $35)
	CALL printui($40)
	CALL prints([560])
	$34 = (($33 - $35) - $34)
	$33 = ($34 + $10)
	$36 = (($10 + $36) + $34)
	$29 = ($34 + $29)
	$31 = ((int_64)$38 + (int_64)$31)
	$30 = ((int_64)$40 + (int_64)$30)
	goto $label$61 
	
.LABEL $label$62
	$10 = ((int_32)CALL abs($26) * (int_32)$10)
	*($14) = (*($14) + $10)
	$33 = ([0] - $10)
	$29 = ($29 - $10)
	$13 = ($10 + $13)
	
.LABEL $label$61
	$10 = (CASTING int_32)(float_64 CALL floor((CASTING float_64)(uint_32 ((uint_32)*(($9 + [16])) / (uint_32)[5]))))
	if ( ((int_32)$27 < (int_32)[1]) ){ goto $label$64 }
	$34 = ((int_32)$10 * (int_32)$27)
	*($14) = (*($14) - $34)
	$19 = (CASTING float_64)(uint_32 ((uint_32)($34 << [1]) / (uint_32)[100]))
	$20 = CALL floor($19)
	$19 = CALL floor($19)
	CALL prints([2208])
	CALL prints([2160])
	$35 = (CASTING uint_32)(float_64 $19)
	$38 = (CASTING uint_64)(uint_32 $35)
	CALL printui($38)
	CALL prints([2176])
	$22 = (CASTING uint_32)(float_64 $20)
	$40 = (CASTING uint_64)(uint_32 $22)
	CALL printui($40)
	CALL prints([560])
	$35 = (($34 - $22) - $35)
	$34 = ($35 + $10)
	$36 = (($10 + $36) + $35)
	$29 = ($35 + $29)
	$31 = ((int_64)$38 + (int_64)$31)
	$30 = ((int_64)$40 + (int_64)$30)
	goto $label$63 
	
.LABEL $label$64
	$10 = ((int_32)CALL abs($27) * (int_32)$10)
	*($14) = (*($14) + $10)
	$34 = ([0] - $10)
	$29 = ($29 - $10)
	$13 = ($10 + $13)
	
.LABEL $label$63
	$10 = (CASTING int_32)(float_64 CALL floor((CASTING float_64)(uint_32 ((uint_32)*(($9 + [20])) / (uint_32)[5]))))
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$66 }
	$35 = ((int_32)$10 * (int_32)$28)
	*($14) = (*($14) - $35)
	$19 = (CASTING float_64)(uint_32 ((uint_32)($35 << [1]) / (uint_32)[100]))
	$20 = CALL floor($19)
	$19 = CALL floor($19)
	CALL prints([2224])
	CALL prints([2160])
	$22 = (CASTING uint_32)(float_64 $19)
	$38 = (CASTING uint_64)(uint_32 $22)
	CALL printui($38)
	CALL prints([2176])
	$21 = (CASTING uint_32)(float_64 $20)
	$40 = (CASTING uint_64)(uint_32 $21)
	CALL printui($40)
	CALL prints([560])
	$22 = (($35 - $21) - $22)
	$35 = ($22 + $10)
	$36 = (($10 + $36) + $22)
	$10 = ($22 + $29)
	$31 = ((int_64)$38 + (int_64)$31)
	$30 = ((int_64)$40 + (int_64)$30)
	goto $label$65 
	
.LABEL $label$66
	$22 = ((int_32)CALL abs($28) * (int_32)$10)
	*($14) = (*($14) + $22)
	$35 = ([0] - $22)
	$10 = ($29 - $22)
	$13 = ($22 + $13)
	
.LABEL $label$65
	$16 = ($16 + $11)
	CALL prints([2128])
	CALL printi((int_64)1863)
	CALL prints([560])
	$38 = (CASTING int_64)(int_32 $36)
	CALL _ZN6NiuNiu16_updateplayerwinEyy($0, *($9), $38)
	CALL _ZN6NiuNiu17_updateplayerloseEyy($0, *($9), (CASTING int_64)(int_32 $13))
	$40 = *($0)
	CALL eosio_assert(((int_64)*($41 + [144]) == (int_64)CALL $fimport$13()), [1232])
	*(($36 = CALL $280([40])) + [24]) = ($41 + [144])
	*($36 + [16]) = $38
	*($36) = *($9)
	*($36 + [8]) = *($23)
	CALL eosio_assert([1], [1296])
	CALL memcpy($41, $36, [8])
	CALL eosio_assert([1], [1296])
	CALL memcpy($4, ($36 + [8]), [8])
	CALL eosio_assert([1], [1296])
	CALL memcpy($5, ($36 + [16]), [8])
	$38 = *($36)
	$11 = CALL db_store_i64(*((($41 + [144]) + [8])), (int_64)-4994024806730104832, $40, $38, $41, [24])
	*($36 + [28]) = $11
	$13 = (($41 + [144]) + [16])
	if ( (uint_64)($38 <= *($13)) ){ goto $label$67 }
	*($13) = ( (int_64)-2 ? ((int_64)$38 + (int_64)1) : ((uint_64)$38 > (uint_64)(int_64)-3) )
	
.LABEL $label$67
	$17 = ($16 + $17)
	*($41 + [864]) = $36
	$38 = *($36)
	*($41) = $38
	*($41 + [64]) = $11
	$13 = *($24)
	if ( ((uint_32)$13 >= (uint_32)*($15)) ){ goto $label$69 }
	*($13 + [8]) = $38
	*($13 + [16]) = $11
	*($41 + [864]) = [0]
	*($13) = $36
	*($24) = ($13 + [24])
	goto $label$68 
	
.LABEL $label$69
	CALL $130($8, ($41 + [864]), $41, ($41 + [64]))
	
.LABEL $label$68
	$13 = ($17 + $18)
	$36 = *($41 + [864])
	*($41 + [864]) = [0]
	if ( ($36 == 0) ){ goto $label$70 }
	CALL $282($36)
	
.LABEL $label$70
	$11 = ($13 + $10)
	CALL prints([2128])
	CALL printi((int_64)1872)
	CALL prints([560])
	$12 = CALL _ZN6NiuNiu13_getglobalcntEv($0)
	*($41) = $12
	$38 = (int_64)0
	$37 = (int_64)59
	$36 = [1456]
	$39 = (int_64)0
	
.LOOP $label$71:
	if ( ((uint_64)$38 > (uint_64)(int_64)9) ){ goto $label$76 }
	$13 = *($36)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$75 }
	$13 = ($13 + [165])
	goto $label$74 
	
.LABEL $label$76
	$40 = (int_64)0
	if ( ((uint_64)$38 <= (uint_64)(int_64)11) ){ goto $label$73 }
	goto $label$72 
	
.LABEL $label$75
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$74
	$40 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$73
	$40 = ((int_64)((int_64)$40 & (int_64)31) << (int_64)((int_64)$37 & (int_64)4294967295))
	
.LABEL $label$72
	$36 = ($36 + [1])
	$38 = ((int_64)$38 + (int_64)1)
	$39 = ((int_64)$40 | (int_64)$39)
	$37 = ((int_64)$37 + (int_64)-5)
	if ( ((int_64)$37 != (int_64)-6) ){ goto $label$71 }
	*($41) = ((int_64)( $39 ? (int_64)1 : (int_64)($12 == 0) ) + (int_64)$12)
	CALL $73($6, $41, *($0))
	CALL _ZN6NiuNiu21_addgameresulthistoryEyyllll($0, *($41), *($9), $32, $33, $34, $35)
	if ( ($11 == 0) ){ goto $label$77 }
	CALL prints([2432])
	CALL prints([2448])
	CALL printi((CASTING int_64)(int_32 $10))
	CALL prints([2464])
	$40 = (CASTING uint_64)(uint_32 $11)
	CALL printui($40)
	CALL prints([560])
	CALL eosio_assert([1], [1872])
	$38 = (int_64)5459781
	$36 = [0]
	
.LOOP $label$80:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $38) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$79 }
	$38 = (uint_64)$38 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$38) & (int_64)255) != (int_64)0) ){ goto $label$81 }
	
.LOOP $label$82:
	$38 = (uint_64)$38 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$38) & (int_64)255) != (int_64)0) ){ goto $label$79 }
	$36 = ($36 + [1])
	if ( ((int_32)$36 < (int_32)[7]) ){ goto $label$82 }
	
.LABEL $label$81
	$13 = [1]
	$36 = ($36 + [1])
	if ( ((int_32)$36 < (int_32)[7]) ){ goto $label$80 }
	goto $label$78 
	
.LABEL $label$79
	$13 = [0]
	
.LABEL $label$78
	CALL eosio_assert($13, [1840])
	$38 = *($9)
	*(($10 = ($41 + [8]))) = [0]
	*($41) = (int_64)0
	$36 = CALL strlen([2240])
	if ( ((uint_32)$36 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$36 >= (uint_32)[11]) ){ goto $label$85 }
	*($41) = ($36 << [1])
	$13 = $7
	if ( $36 ){ goto $label$84 }
	goto $label$83 
	
.LABEL $label$85
	$11 = (($36 + [16]) & [-16])
	$13 = CALL $280($11)
	*($10) = $13
	*($41) = ($11 | [1])
	*($41 + [4]) = $36
	
.LABEL $label$84
	CALL memcpy($13, [2240], $36)
	
.LABEL $label$83
	*(($13 + $36)) = [0]
	CALL _ZN6NiuNiu14_simplebackeosEyyRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0, $38, $40, $41)
	if ( ((*($41) & [1]) == 0) ){ goto $label$77 }
	CALL $282(*($10))
	
.LABEL $label$77
	CALL eosio_assert([1], [816])
	$36 = CALL db_next_i64(*($9 + [28]), $41)
	if ( ((int_32)$36 <= (int_32)[-1]) ){ goto $label$57 }
	$9 = CALL $112(($41 + [184]), $36)
	goto $label$58 
	
.LABEL $label$57
	$36 = *($14)
	if ( ((uint_32)$36 <= (uint_32)$3) ){ goto $label$86 }
	$19 = (CASTING float_64)(uint_32 ((uint_32)(($36 - $3) << [1]) / (uint_32)[100]))
	$20 = CALL floor($19)
	$19 = CALL floor($19)
	CALL prints([2256])
	CALL prints([2160])
	$36 = (CASTING uint_32)(float_64 $19)
	$38 = (CASTING uint_64)(uint_32 $36)
	CALL printui($38)
	CALL prints([2176])
	$13 = (CASTING uint_32)(float_64 $20)
	$40 = (CASTING uint_64)(uint_32 $13)
	CALL printui($40)
	CALL prints([560])
	$36 = (*($9) - ($36 + $13))
	*(($9 = ($41 + [732]))) = $36
	$31 = ((int_64)$38 + (int_64)$31)
	$30 = ((int_64)$40 + (int_64)$30)
	
.LABEL $label$86
	$38 = (CASTING uint_64)(uint_32 $3)
	$40 = (CASTING uint_64)(uint_32 $36)
	if ( ((uint_32)$36 <= (uint_32)$3) ){ goto $label$88 }
	CALL _ZN6NiuNiu16_updateplayerwinEyy($0, *($41 + [720]), (int_64))($40 - $38))
	goto $label$87 
	
.LABEL $label$88
	if ( ((uint_32)$36 >= (uint_32)$3) ){ goto $label$87 }
	CALL _ZN6NiuNiu17_updateplayerloseEyy($0, *($41 + [720]), (int_64))($38 - $40))
	
.LABEL $label$87
	CALL prints([2128])
	CALL printi((int_64)1896)
	CALL prints([560])
	$40 = *($0)
	CALL eosio_assert(((int_64)*($41 + [144]) == (int_64)CALL $fimport$13()), [1232])
	*(($36 = CALL $280([40])) + [24]) = ($41 + [144])
	*($36) = *($41 + [720])
	*($36 + [8]) = *(($41 + [800]))
	*($36 + [16]) = (int_64))(*(($41 + [732])) - $38)
	CALL eosio_assert([1], [1296])
	CALL memcpy($41, $36, [8])
	CALL eosio_assert([1], [1296])
	CALL memcpy(($41 | [8]), ($36 + [8]), [8])
	CALL eosio_assert([1], [1296])
	CALL memcpy(($41 + [16]), ($36 + [16]), [8])
	$38 = *($36)
	$9 = CALL db_store_i64(*((($41 + [144]) + [8])), (int_64)-4994024806730104832, $40, $38, $41, [24])
	*($36 + [28]) = $9
	$13 = (($41 + [144]) + [16])
	if ( (uint_64)($38 <= *($13)) ){ goto $label$89 }
	*($13) = ( (int_64)-2 ? ((int_64)$38 + (int_64)1) : ((uint_64)$38 > (uint_64)(int_64)-3) )
	
.LABEL $label$89
	*($41 + [864]) = $36
	$38 = *($36)
	*($41) = $38
	*($41 + [64]) = $9
	$14 = ($41 + [172])
	$13 = *($14)
	if ( ((uint_32)$13 >= (uint_32)*(($41 + [176]))) ){ goto $label$91 }
	*($13 + [8]) = $38
	*($13 + [16]) = $9
	*($41 + [864]) = [0]
	*($13) = $36
	*($14) = ($13 + [24])
	goto $label$90 
	
.LABEL $label$91
	CALL $130(($41 + [168]), ($41 + [864]), $41, ($41 + [64]))
	
.LABEL $label$90
	$13 = *($41 + [864])
	$36 = [0]
	*($41 + [864]) = [0]
	if ( ($13 == 0) ){ goto $label$92 }
	CALL $282($13)
	
.LABEL $label$92
	CALL prints([2128])
	CALL printi((int_64)1903)
	CALL prints([560])
	CALL prints([2272])
	CALL prints([2288])
	CALL printui($30)
	CALL prints([560])
	if ( (int_64)($30 == 0) ){ goto $label$93 }
	CALL eosio_assert((uint_64)(((int_64)$30 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1872])
	$38 = (int_64)5459781
	$36 = [0]
	
.LOOP $label$96:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $38) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$95 }
	$38 = (uint_64)$38 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$38) & (int_64)255) != (int_64)0) ){ goto $label$97 }
	
.LOOP $label$98:
	$38 = (uint_64)$38 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$38) & (int_64)255) != (int_64)0) ){ goto $label$95 }
	$36 = ($36 + [1])
	if ( ((int_32)$36 < (int_32)[7]) ){ goto $label$98 }
	
.LABEL $label$97
	$13 = [1]
	$36 = ($36 + [1])
	if ( ((int_32)$36 < (int_32)[7]) ){ goto $label$96 }
	goto $label$94 
	
.LABEL $label$95
	$13 = [0]
	
.LABEL $label$94
	CALL eosio_assert($13, [1840])
	$14 = ($41 + [116])
	$12 = *($0)
	$38 = (int_64)0
	$37 = (int_64)59
	$36 = [1424]
	$39 = (int_64)0
	
.LOOP $label$99:
	if ( ((uint_64)$38 > (uint_64)(int_64)5) ){ goto $label$104 }
	$13 = *($36)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$103 }
	$13 = ($13 + [165])
	goto $label$102 
	
.LABEL $label$104
	$40 = (int_64)0
	if ( ((uint_64)$38 <= (uint_64)(int_64)11) ){ goto $label$101 }
	goto $label$100 
	
.LABEL $label$103
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$102
	$40 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$101
	$40 = ((int_64)((int_64)$40 & (int_64)31) << (int_64)((int_64)$37 & (int_64)4294967295))
	
.LABEL $label$100
	$36 = ($36 + [1])
	$38 = ((int_64)$38 + (int_64)1)
	$39 = ((int_64)$40 | (int_64)$39)
	$37 = ((int_64)$37 + (int_64)-5)
	if ( ((int_64)$37 != (int_64)-6) ){ goto $label$99 }
	*($41 + [72]) = $39
	*($41 + [64]) = $12
	$38 = (int_64)0
	$37 = (int_64)59
	$36 = [688]
	$39 = (int_64)0
	
.LOOP $label$105:
	if ( ((uint_64)$38 > (uint_64)(int_64)10) ){ goto $label$110 }
	$13 = *($36)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$109 }
	$13 = ($13 + [165])
	goto $label$108 
	
.LABEL $label$110
	$40 = (int_64)0
	if ( ((int_64)$38 == (int_64)11) ){ goto $label$107 }
	goto $label$106 
	
.LABEL $label$109
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$108
	$40 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$107
	$40 = ((int_64)((int_64)$40 & (int_64)31) << (int_64)((int_64)$37 & (int_64)4294967295))
	
.LABEL $label$106
	$36 = ($36 + [1])
	$37 = ((int_64)$37 + (int_64)-5)
	$39 = ((int_64)$40 | (int_64)$39)
	$38 = ((int_64)$38 + (int_64)1)
	if ( ((int_64)$38 != (int_64)13) ){ goto $label$105 }
	*($41 + [56]) = $39
	$38 = (int_64)0
	$37 = (int_64)59
	$36 = [672]
	$39 = (int_64)0
	
.LOOP $label$111:
	if ( ((uint_64)$38 > (uint_64)(int_64)7) ){ goto $label$116 }
	$13 = *($36)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$115 }
	$13 = ($13 + [165])
	goto $label$114 
	
.LABEL $label$116
	$40 = (int_64)0
	if ( ((uint_64)$38 <= (uint_64)(int_64)11) ){ goto $label$113 }
	goto $label$112 
	
.LABEL $label$115
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$114
	$40 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$113
	$40 = ((int_64)((int_64)$40 & (int_64)31) << (int_64)((int_64)$37 & (int_64)4294967295))
	
.LABEL $label$112
	$36 = ($36 + [1])
	$38 = ((int_64)$38 + (int_64)1)
	$39 = ((int_64)$40 | (int_64)$39)
	$37 = ((int_64)$37 + (int_64)-5)
	if ( ((int_64)$37 != (int_64)-6) ){ goto $label$111 }
	*($41 + [48]) = $39
	*($41) = $12
	$10 = ($41 + [8])
	$38 = (int_64)0
	$40 = (int_64)59
	$36 = [2304]
	$39 = (int_64)0
	
.LOOP $label$117:
	$37 = (int_64)0
	if ( ((uint_64)$38 > (uint_64)(int_64)11) ){ goto $label$118 }
	$13 = *($36)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$120 }
	$13 = ($13 + [165])
	goto $label$119 
	
.LABEL $label$120
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$119
	$37 = ((int_64)(CASTING uint_64)(uint_32 ($13 & [31])) << (int_64)((int_64)$40 & (int_64)4294967295))
	
.LABEL $label$118
	$36 = ($36 + [1])
	$38 = ((int_64)$38 + (int_64)1)
	$39 = ((int_64)$37 | (int_64)$39)
	$40 = ((int_64)$40 + (int_64)-5)
	if ( ((int_64)$40 != (int_64)-6) ){ goto $label$117 }
	*(($41 + [8])) = $39
	*(($41 + [24])) = (int_64)1397703940
	*(($41 + [36])) = (int_64)0
	*($41 + [16]) = $30
	*($41 + [32]) = [0]
	$9 = ($41 + [32])
	$36 = CALL strlen([2320])
	if ( ((uint_32)$36 >= (uint_32)[-16]) ){ goto $label$8 }
	if ( ((uint_32)$36 >= (uint_32)[11]) ){ goto $label$123 }
	*(($41 + [32])) = ($36 << [1])
	$13 = ($9 + [1])
	if ( $36 ){ goto $label$122 }
	goto $label$121 
	
.LABEL $label$123
	$11 = (($36 + [16]) & [-16])
	$13 = CALL $280($11)
	*(($41 + [32])) = ($11 | [1])
	*(($41 + [40])) = $13
	*(($41 + [36])) = $36
	
.LABEL $label$122
	CALL memcpy($13, [2320], $36)
	
.LABEL $label$121
	*(($13 + $36)) = [0]
	$13 = *(($41 + [120]))
	if ( ((uint_32)$13 >= (uint_32)*(($41 + [124]))) ){ goto $label$127 }
	*($13 + [8]) = *($41 + [48])
	*($13) = *($41 + [56])
	*($13 + [16 align=4]) = (int_64)0
	*(($14 = ($13 + [24]))) = [0]
	$36 = CALL $280([16])
	*($13 + [16]) = $36
	$11 = ($36 + [16])
	*($14) = $11
	*(($36 + [8])) = *((($41 + [64]) + [8]))
	*($36) = *($41 + [64])
	*(($13 + [20])) = $11
	*($13 + [28]) = [0]
	*(($13 + [32])) = [0]
	*(($13 + [36])) = [0]
	$36 = *(($41 + [32]))
	$14 = ( *(($41 + [36])) ? uint_32($36 >> [1]) : ($36 & [1]) )
	$36 = ($14 + [32])
	$38 = (CASTING uint_64)(uint_32 $14)
	$14 = ($13 + [28])
	
.LOOP $label$128:
	$36 = ($36 + [1])
	$38 = (uint_64)$38 >> (uint_64)(int_64)7
	if ( ((int_64)$38) != (int_64)0) ){ goto $label$128 }
	if ( ($36 == 0) ){ goto $label$126 }
	CALL $77($14, $36)
	$14 = *(($13 + [32]))
	$36 = *(($13 + [28]))
	goto $label$125 
	
.LABEL $label$127
	CALL $111($14, ($41 + [64]), ($41 + [56]), ($41 + [48]), $41)
	goto $label$124 
	
.LABEL $label$126
	$14 = [0]
	$36 = [0]
	
.LABEL $label$125
	*($41 + [844]) = $36
	*($41 + [840]) = $36
	*($41 + [848]) = $14
	*($41 + [856]) = ($41 + [840])
	*($41 + [868]) = $10
	*($41 + [872]) = ($41 + [16])
	*($41 + [876]) = $9
	*($41 + [864]) = $41
	CALL $110(($41 + [864]), ($41 + [856]))
	*(($36 = (($41 + [80]) + [40]))) = (*($36) + [40])
	
.LABEL $label$124
	$36 = [1]
	if ( ((*(($41 + [32])) & [1]) == 0) ){ goto $label$93 }
	CALL $282(*(($41 + [40])))
	
.LABEL $label$93
	CALL prints([2336])
	CALL prints([2352])
	CALL printui($31)
	CALL prints([560])
	if ( (int_64)($31 == 0) ){ goto $label$129 }
	CALL eosio_assert((uint_64)(((int_64)$31 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1872])
	$38 = (int_64)5459781
	$36 = [0]
	
.LOOP $label$132:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $38) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$131 }
	$38 = (uint_64)$38 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$38) & (int_64)255) != (int_64)0) ){ goto $label$133 }
	
.LOOP $label$134:
	$38 = (uint_64)$38 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$38) & (int_64)255) != (int_64)0) ){ goto $label$131 }
	$36 = ($36 + [1])
	if ( ((int_32)$36 < (int_32)[7]) ){ goto $label$134 }
	
.LABEL $label$133
	$13 = [1]
	$36 = ($36 + [1])
	if ( ((int_32)$36 < (int_32)[7]) ){ goto $label$132 }
	goto $label$130 
	
.LABEL $label$131
	$13 = [0]
	
.LABEL $label$130
	CALL eosio_assert($13, [1840])
	$14 = ($41 + [116])
	$30 = *($0)
	$38 = (int_64)0
	$37 = (int_64)59
	$36 = [1424]
	$39 = (int_64)0
	
.LOOP $label$135:
	if ( ((uint_64)$38 > (uint_64)(int_64)5) ){ goto $label$140 }
	$13 = *($36)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$139 }
	$13 = ($13 + [165])
	goto $label$138 
	
.LABEL $label$140
	$40 = (int_64)0
	if ( ((uint_64)$38 <= (uint_64)(int_64)11) ){ goto $label$137 }
	goto $label$136 
	
.LABEL $label$139
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$138
	$40 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$137
	$40 = ((int_64)((int_64)$40 & (int_64)31) << (int_64)((int_64)$37 & (int_64)4294967295))
	
.LABEL $label$136
	$36 = ($36 + [1])
	$38 = ((int_64)$38 + (int_64)1)
	$39 = ((int_64)$40 | (int_64)$39)
	$37 = ((int_64)$37 + (int_64)-5)
	if ( ((int_64)$37 != (int_64)-6) ){ goto $label$135 }
	*($41 + [72]) = $39
	*($41 + [64]) = $30
	$38 = (int_64)0
	$37 = (int_64)59
	$36 = [688]
	$39 = (int_64)0
	
.LOOP $label$141:
	if ( ((uint_64)$38 > (uint_64)(int_64)10) ){ goto $label$146 }
	$13 = *($36)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$145 }
	$13 = ($13 + [165])
	goto $label$144 
	
.LABEL $label$146
	$40 = (int_64)0
	if ( ((int_64)$38 == (int_64)11) ){ goto $label$143 }
	goto $label$142 
	
.LABEL $label$145
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$144
	$40 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$143
	$40 = ((int_64)((int_64)$40 & (int_64)31) << (int_64)((int_64)$37 & (int_64)4294967295))
	
.LABEL $label$142
	$36 = ($36 + [1])
	$37 = ((int_64)$37 + (int_64)-5)
	$39 = ((int_64)$40 | (int_64)$39)
	$38 = ((int_64)$38 + (int_64)1)
	if ( ((int_64)$38 != (int_64)13) ){ goto $label$141 }
	*($41 + [56]) = $39
	$38 = (int_64)0
	$37 = (int_64)59
	$36 = [672]
	$39 = (int_64)0
	
.LOOP $label$147:
	if ( ((uint_64)$38 > (uint_64)(int_64)7) ){ goto $label$152 }
	$13 = *($36)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$151 }
	$13 = ($13 + [165])
	goto $label$150 
	
.LABEL $label$152
	$40 = (int_64)0
	if ( ((uint_64)$38 <= (uint_64)(int_64)11) ){ goto $label$149 }
	goto $label$148 
	
.LABEL $label$151
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$150
	$40 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$149
	$40 = ((int_64)((int_64)$40 & (int_64)31) << (int_64)((int_64)$37 & (int_64)4294967295))
	
.LABEL $label$148
	$36 = ($36 + [1])
	$38 = ((int_64)$38 + (int_64)1)
	$39 = ((int_64)$40 | (int_64)$39)
	$37 = ((int_64)$37 + (int_64)-5)
	if ( ((int_64)$37 != (int_64)-6) ){ goto $label$147 }
	*($41 + [48]) = $39
	*($41) = $30
	$10 = ($41 + [8])
	$38 = (int_64)0
	$40 = (int_64)59
	$36 = [2368]
	$39 = (int_64)0
	
.LOOP $label$153:
	$37 = (int_64)0
	if ( ((uint_64)$38 > (uint_64)(int_64)11) ){ goto $label$154 }
	$13 = *($36)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$156 }
	$13 = ($13 + [165])
	goto $label$155 
	
.LABEL $label$156
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$155
	$37 = ((int_64)(CASTING uint_64)(uint_32 ($13 & [31])) << (int_64)((int_64)$40 & (int_64)4294967295))
	
.LABEL $label$154
	$36 = ($36 + [1])
	$38 = ((int_64)$38 + (int_64)1)
	$39 = ((int_64)$37 | (int_64)$39)
	$40 = ((int_64)$40 + (int_64)-5)
	if ( ((int_64)$40 != (int_64)-6) ){ goto $label$153 }
	*(($41 + [8])) = $39
	*(($41 + [24])) = (int_64)1397703940
	*(($41 + [36])) = (int_64)0
	*($41 + [16]) = $31
	*($41 + [32]) = [0]
	$9 = ($41 + [32])
	$36 = CALL strlen([2384])
	if ( ((uint_32)$36 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$36 >= (uint_32)[11]) ){ goto $label$159 }
	*(($41 + [32])) = ($36 << [1])
	$13 = ($9 + [1])
	if ( $36 ){ goto $label$158 }
	goto $label$157 
	
.LABEL $label$159
	$11 = (($36 + [16]) & [-16])
	$13 = CALL $280($11)
	*(($41 + [32])) = ($11 | [1])
	*(($41 + [40])) = $13
	*(($41 + [36])) = $36
	
.LABEL $label$158
	CALL memcpy($13, [2384], $36)
	
.LABEL $label$157
	*(($13 + $36)) = [0]
	$13 = *(($41 + [120]))
	if ( ((uint_32)$13 >= (uint_32)*(($41 + [124]))) ){ goto $label$163 }
	*($13 + [8]) = *($41 + [48])
	*($13) = *($41 + [56])
	*($13 + [16 align=4]) = (int_64)0
	*(($14 = ($13 + [24]))) = [0]
	$36 = CALL $280([16])
	*($13 + [16]) = $36
	$11 = ($36 + [16])
	*($14) = $11
	*(($36 + [8])) = *((($41 + [64]) + [8]))
	*($36) = *($41 + [64])
	*(($13 + [20])) = $11
	*($13 + [28]) = [0]
	*(($13 + [32])) = [0]
	*(($13 + [36])) = [0]
	$36 = *(($41 + [32]))
	$14 = ( *(($41 + [36])) ? uint_32($36 >> [1]) : ($36 & [1]) )
	$36 = ($14 + [32])
	$38 = (CASTING uint_64)(uint_32 $14)
	$14 = ($13 + [28])
	
.LOOP $label$164:
	$36 = ($36 + [1])
	$38 = (uint_64)$38 >> (uint_64)(int_64)7
	if ( ((int_64)$38) != (int_64)0) ){ goto $label$164 }
	if ( ($36 == 0) ){ goto $label$162 }
	CALL $77($14, $36)
	$14 = *(($13 + [32]))
	$36 = *(($13 + [28]))
	goto $label$161 
	
.LABEL $label$163
	CALL $111($14, ($41 + [64]), ($41 + [56]), ($41 + [48]), $41)
	goto $label$160 
	
.LABEL $label$162
	$14 = [0]
	$36 = [0]
	
.LABEL $label$161
	*($41 + [844]) = $36
	*($41 + [840]) = $36
	*($41 + [848]) = $14
	*($41 + [856]) = ($41 + [840])
	*($41 + [868]) = $10
	*($41 + [872]) = ($41 + [16])
	*($41 + [876]) = $9
	*($41 + [864]) = $41
	CALL $110(($41 + [864]), ($41 + [856]))
	*(($36 = (($41 + [80]) + [40]))) = (*($36) + [40])
	
.LABEL $label$160
	$36 = [1]
	if ( ((*(($41 + [32])) & [1]) == 0) ){ goto $label$129 }
	CALL $282(*(($41 + [40])))
	
.LABEL $label$129
	CALL prints([2128])
	CALL printi((int_64)1938)
	CALL prints([560])
	$13 = ($0 + [48])
	CALL $97($13, ($41 + [680]), *($0))
	CALL prints([2128])
	CALL printi((int_64)1941)
	CALL prints([560])
	$9 = ($41 + [800])
	CALL _ZN6NiuNiu15_addgamehistoryEyR10_cardstyleS1_S1_S1_S1_($0, *($9), ($41 + [472]), ($41 + [424]), ($41 + [376]), ($41 + [328]), ($41 + [280]))
	CALL prints([2128])
	CALL printi((int_64)1944)
	CALL prints([560])
	CALL _ZN6NiuNiu18_removegamehistoryEi($0, [30])
	CALL prints([2128])
	CALL printi((int_64)1947)
	CALL prints([560])
	*($41 + [784]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($41 + [792]) = ((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) + (int_64)17) & (int_64)4294967295)
	CALL _ZN6NiuNiu11_starttimerEyy($0, *($9), (int_64)17)
	CALL $288($1, [1376])
	CALL eosio_assert(((int_64)*($41 + [720]) != (int_64)0), [1408])
	CALL $69($2, ($41 + [720]), *($0))
	CALL prints([2128])
	CALL printi((int_64)1955)
	CALL prints([560])
	CALL $97($13, ($41 + [680]), *($0))
	CALL prints([2128])
	CALL printi((int_64)1958)
	CALL prints([560])
	if ( ($36 == 0) ){ goto $label$165 }
	CALL prints([2400])
	*(($41 + [100])) = [1]
	CALL prints([2128])
	CALL printi((int_64)1966)
	CALL prints([560])
	$38 = CALL _ZN6NiuNiu6_genidEv($0)
	*($41 + [8]) = (int_64)0
	*($41) = $38
	$38 = *($0)
	CALL $74(($41 + [864]), ($41 + [80]))
	$36 = *($41 + [864])
	CALL send_deferred($41, $38, $36, (*($41 + [868]) - $36), [0])
	$36 = *($41 + [864])
	if ( ($36 == 0) ){ goto $label$165 }
	*($41 + [868]) = $36
	CALL $282($36)
	
.LABEL $label$165
	CALL prints([2128])
	CALL printi((int_64)1969)
	CALL prints([560])
	CALL $75(($41 + [80]))
	$9 = *($41 + [168])
	if ( ($9 == 0) ){ goto $label$166 }
	$14 = ($41 + [172])
	$36 = *($14)
	if ( ((int_32)$36 == (int_32)$9) ){ goto $label$168 }
	
.LOOP $label$169:
	$36 = ($36 + [-24])
	$13 = *($36)
	*($36) = [0]
	if ( ($13 == 0) ){ goto $label$170 }
	CALL $282($13)
	
.LABEL $label$170
	if ( ((int_32)$9 != (int_32)$36) ){ goto $label$169 }
	$36 = *(($41 + [168]))
	goto $label$167 
	
.LABEL $label$168
	$36 = $9
	
.LABEL $label$167
	*($14) = $9
	CALL $282($36)
	
.LABEL $label$166
	$9 = *($41 + [208])
	if ( ($9 == 0) ){ goto $label$171 }
	$14 = ($41 + [212])
	$36 = *($14)
	if ( ((int_32)$36 == (int_32)$9) ){ goto $label$173 }
	
.LOOP $label$174:
	$36 = ($36 + [-24])
	$13 = *($36)
	*($36) = [0]
	if ( ($13 == 0) ){ goto $label$175 }
	CALL $282($13)
	
.LABEL $label$175
	if ( ((int_32)$9 != (int_32)$36) ){ goto $label$174 }
	$36 = *(($41 + [208]))
	goto $label$172 
	
.LABEL $label$173
	$36 = $9
	
.LABEL $label$172
	*($14) = $9
	CALL $282($36)
	
.LABEL $label$171
	$36 = *(($41 + [256]))
	if ( ($36 == 0) ){ goto $label$176 }
	*(($41 + [260])) = $36
	CALL $282($36)
	
.LABEL $label$176
	$36 = *($41 + [308])
	if ( ($36 == 0) ){ goto $label$177 }
	*(($41 + [312])) = $36
	CALL $282($36)
	
.LABEL $label$177
	$36 = *($41 + [356])
	if ( ($36 == 0) ){ goto $label$178 }
	*(($41 + [360])) = $36
	CALL $282($36)
	
.LABEL $label$178
	$36 = *($41 + [404])
	if ( ($36 == 0) ){ goto $label$179 }
	*(($41 + [408])) = $36
	CALL $282($36)
	
.LABEL $label$179
	$36 = *($41 + [452])
	if ( ($36 == 0) ){ goto $label$180 }
	*(($41 + [456])) = $36
	CALL $282($36)
	
.LABEL $label$180
	$36 = *($41 + [500])
	if ( ($36 == 0) ){ goto $label$10 }
	*(($41 + [504])) = $36
	CALL $282($36)
	
.LABEL $label$10
	$9 = *($41 + [544])
	if ( ($9 == 0) ){ goto $label$181 }
	$14 = ($41 + [548])
	$36 = *($14)
	if ( ((int_32)$36 == (int_32)$9) ){ goto $label$183 }
	
.LOOP $label$184:
	$36 = ($36 + [-24])
	$13 = *($36)
	*($36) = [0]
	if ( ($13 == 0) ){ goto $label$185 }
	CALL $282($13)
	
.LABEL $label$185
	if ( ((int_32)$9 != (int_32)$36) ){ goto $label$184 }
	$36 = *(($41 + [544]))
	goto $label$182 
	
.LABEL $label$183
	$36 = $9
	
.LABEL $label$182
	*($14) = $9
	CALL $282($36)
	
.LABEL $label$181
	$36 = *($41 + [664])
	if ( ($36 == 0) ){ goto $label$186 }
	*($41 + [668]) = $36
	CALL $282($36)
	
.LABEL $label$186
	if ( ((*(($41 + [760])) & [1]) == 0) ){ goto $label$187 }
	CALL $282(*(($41 + [768])))
	
.LABEL $label$187
	if ( ((*($41 + [748]) & [1]) == 0) ){ goto $label$188 }
	CALL $282(*(($41 + [756])))
	
.LABEL $label$188
	if ( ((*($41 + [816]) & [1]) == 0) ){ goto $label$189 }
	CALL $282(*($41 + [824]))
	
.LABEL $label$189
	*([0] + [4]) = ($41 + [880])
	return (unreachable)
	
.LABEL $label$9
	CALL $284($41)
	
.LABEL $label$8
	CALL $284($9)
	
.LABEL $label$7
	CALL $284($9)
	$13
	$9
	$10
	$14
	$14
	$9
	$36
	$13
	(unreachable)
	(unreachable)
}

int_32 .FUNC $147 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [2480])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$3 = *($1 + [4])
	$7 = int_32(($3 - $4) >> [3])
	$5 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$5 <= (uint_32)$7) ){ goto $label$4 }
	CALL $148($1, ($5 - $7))
	$3 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$5 >= (uint_32)$7) ){ goto $label$5 }
	$3 = ($4 + ($5 << [3]))
	*(($1 + [4])) = $3
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = ($0 + [4])
	$7 = *($5)
	
.LOOP $label$6:
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $7) > (uint_32)[7]), [1056])
	CALL memcpy($4, *($5), [8])
	$7 = (*($5) + [8])
	*($5) = $7
	$4 = ($4 + [8])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

int_32 .FUNC $146 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$1 }
	$4 = ($0 + [8])
	
.LOOP $label$2:
	$3 = ($2 + [-24])
	*($4) = $3
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = *($2 + [104])
	if ( ($3 == 0) ){ goto $label$4 }
	*(($2 + [108])) = $3
	CALL $282($3)
	
.LABEL $label$4
	$3 = *($2 + [80])
	if ( ($3 == 0) ){ goto $label$5 }
	*(($2 + [84])) = $3
	CALL $282($3)
	
.LABEL $label$5
	$3 = *($2 + [56])
	if ( ($3 == 0) ){ goto $label$6 }
	*(($2 + [60])) = $3
	CALL $282($3)
	
.LABEL $label$6
	$3 = *($2 + [32])
	if ( ($3 == 0) ){ goto $label$7 }
	*(($2 + [36])) = $3
	CALL $282($3)
	
.LABEL $label$7
	$3 = *($2 + [8])
	if ( ($3 == 0) ){ goto $label$8 }
	*(($2 + [12])) = $3
	CALL $282($3)
	
.LABEL $label$8
	CALL $282($2)
	
.LABEL $label$3
	$2 = *($4)
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$2 }
	
.LABEL $label$1
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$9 }
	CALL $282($2)
	
.LABEL $label$9
	return $0
}

int_32 .FUNC $141 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_64 $6
	int_32 $7
	$7 = CALL $140($0, $1, $2, $3, $5)
	if ( (CALL int_32 *($4)((int_32 *($3)), (int_32 *($5))) == 0) ){ goto $label$4 }
	$6 = *($3)
	*($3) = *($4)
	*($4) = $6
	if ( (CALL int_32 *($3)((int_32 *($2)), (int_32 *($5))) == 0) ){ goto $label$3 }
	$6 = *($2)
	*($2) = *($3)
	*($3) = $6
	if ( (CALL int_32 *($2)((int_32 *($1)), (int_32 *($5))) == 0) ){ goto $label$2 }
	$6 = *($1)
	*($1) = *($2)
	*($2) = $6
	if ( (CALL int_32 *($1)((int_32 *($0)), (int_32 *($5))) == 0) ){ goto $label$1 }
	$6 = *($0)
	*($0) = *($1)
	*($1) = $6
	$7 = ($7 + [4])
	
.LABEL $label$4
	return $7
	
.LABEL $label$3
	return ($7 + [1])
	
.LABEL $label$2
	return ($7 + [2])
	
.LABEL $label$1
	return ($7 + [3])
}

int_32 .FUNC $140 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = CALL int_32 *($1)((int_32 *($0)), (int_32 *($4)))
	$5 = CALL int_32 *($2)((int_32 *($1)), (int_32 *($4)))
	if ( ($7 == 0) ){ goto $label$4 }
	$6 = *($0)
	if ( ($5 == 0) ){ goto $label$3 }
	*($0) = *($2)
	*($2) = $6
	$7 = [1]
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$1 }
	$6 = *($1)
	*($1) = *($2)
	*($2) = $6
	$7 = [1]
	if ( (CALL int_32 *($1)((int_32 *($0)), (int_32 *($4))) == 0) ){ goto $label$1 }
	$6 = *($0)
	*($0) = *($1)
	*($1) = $6
	goto $label$2 
	
.LABEL $label$3
	*($0) = *($1)
	*($1) = $6
	$7 = [1]
	if ( (CALL int_32 *($2)((int_32 (CASTING uint_32)(uint_64 $6)), (int_32 *($4))) == 0) ){ goto $label$1 }
	$6 = *($1)
	*($1) = *($2)
	*($2) = $6
	
.LABEL $label$2
	$7 = [2]
	
.LABEL $label$1
	if ( (CALL int_32 *($3)((int_32 *($2)), (int_32 *($4))) == 0) ){ goto $label$7 }
	$6 = *($2)
	*($2) = *($3)
	*($3) = $6
	if ( (CALL int_32 *($2)((int_32 *($1)), (int_32 *($4))) == 0) ){ goto $label$6 }
	$6 = *($1)
	*($1) = *($2)
	*($2) = $6
	if ( (CALL int_32 *($1)((int_32 *($0)), (int_32 *($4))) == 0) ){ goto $label$5 }
	$6 = *($0)
	*($0) = *($1)
	*($1) = $6
	$7 = ($7 + [3])
	
.LABEL $label$7
	return $7
	
.LABEL $label$6
	return ($7 + [1])
	
.LABEL $label$5
	return ($7 + [2])
}

int_32 .FUNC $143 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$7 = int_32(($1 - $0) >> [3])
	if ( ((uint_32)$7 > (uint_32)[5]) ){ goto $label$8 }
	$10 = [1]
	goto $label$1 
	
.LABEL $label$11
	$7 = ($1 + [-8])
	if ( (CALL int_32 *($7)((int_32 *($0)), (int_32 *($2))) == 0) ){ goto $label$1 }
	$4 = *($0)
	*($0) = *($7)
	*($7) = $4
	goto $label$1 
	
.LABEL $label$10
	$5 = CALL int_32 *($0 + [8])((int_32 *($0)), (int_32 *($2)))
	$7 = ($1 + [-8])
	$3 = CALL int_32 *($7)((int_32 *($0 + [8])), (int_32 *($2)))
	if ( ($5 == 0) ){ goto $label$6 }
	$4 = *($0)
	if ( ($3 == 0) ){ goto $label$4 }
	*($0) = *($7)
	*($7) = $4
	goto $label$1 
	
.LABEL $label$9
	CALL $141($0, ($0 + [8]), ($0 + [16]), ($0 + [24]), ($1 + [-8]), $2)
	goto $label$1 
	
.LABEL $label$8
	$10 = CALL int_32 *($0 + [8])((int_32 *($0)), (int_32 *($2)))
	$7 = CALL int_32 *($0 + [16])((int_32 *($0 + [8])), (int_32 *($2)))
	if ( ($10 == 0) ){ goto $label$5 }
	$4 = *($0)
	if ( ($7 == 0) ){ goto $label$3 }
	$10 = ($0 + [16])
	*($0) = *($10)
	*($10) = $4
	goto $label$2 
	
.LABEL $label$7
	CALL $140($0, ($0 + [8]), ($0 + [16]), ($1 + [-8]), $2)
	goto $label$1 
	
.LABEL $label$6
	if ( ($3 == 0) ){ goto $label$1 }
	$5 = ($0 + [8])
	$4 = *($5)
	*($5) = *($7)
	*($7) = $4
	if ( (CALL int_32 *($5)((int_32 *($0)), (int_32 *($2))) == 0) ){ goto $label$1 }
	$4 = *($0)
	*($0) = *($5)
	*($5) = $4
	goto $label$1 
	
.LABEL $label$5
	if ( ($7 == 0) ){ goto $label$2 }
	$10 = ($0 + [8])
	$4 = *($10)
	$7 = ($0 + [16])
	$6 = *($7)
	*($10) = $6
	*($7) = $4
	if ( (CALL int_32 (CASTING uint_32)(uint_64 $6)((int_32 *($0)), (int_32 *($2))) == 0) ){ goto $label$2 }
	$4 = *($0)
	*($0) = *($10)
	*($10) = $4
	goto $label$2 
	
.LABEL $label$4
	$5 = ($0 + [8])
	*($0) = *($5)
	*($5) = $4
	if ( (CALL int_32 *($7)((int_32 (CASTING uint_32)(uint_64 $4)), (int_32 *($2))) == 0) ){ goto $label$1 }
	$4 = *($5)
	*($5) = *($7)
	*($7) = $4
	goto $label$1 
	
.LABEL $label$3
	$10 = ($0 + [8])
	*($0) = *($10)
	*($10) = $4
	$7 = ($0 + [16])
	if ( (CALL int_32 *($7)((int_32 (CASTING uint_32)(uint_64 $4)), (int_32 *($2))) == 0) ){ goto $label$2 }
	$4 = *($10)
	*($10) = *($7)
	*($7) = $4
	
.LABEL $label$2
	$10 = ($0 + [24])
	if ( ((int_32)$10 == (int_32)$1) ){ goto $label$14 }
	$7 = ($0 + [16])
	$8 = [0]
	$9 = [0]
	
.LOOP $label$15:
	$3 = $10
	if ( (CALL int_32 *($3)((int_32 *($7)), (int_32 *($2))) == 0) ){ goto $label$16 }
	$4 = *($3)
	$5 = (CASTING uint_32)(uint_64 $4)
	$10 = $8
	
.LOOP $label$19:
	*((($7 = ($0 + $10)) + [24])) = *(($7 + [16]))
	if ( ((int_32)$10 == (int_32)[-16]) ){ goto $label$18 }
	$10 = ($10 + [-8])
	if ( CALL int_32 $5((int_32 *(($7 + [8]))), (int_32 *($2))) ){ goto $label$19 }
	$10 = (($0 + $10) + [24])
	goto $label$17 
	
.LABEL $label$18
	$10 = $0
	
.LABEL $label$17
	*($10) = $4
	$9 = ($9 + [1])
	if ( ((int_32)$9 == (int_32)[8]) ){ goto $label$13 }
	
.LABEL $label$16
	$8 = ($8 + [8])
	$7 = $3
	$10 = ($3 + [8])
	if ( ((int_32)$10 != (int_32)$1) ){ goto $label$15 }
	
.LABEL $label$14
	$10 = [1]
	goto $label$12 
	
.LABEL $label$13
	$7 = ((int_32)($3 + [8]) == (int_32)$1)
	$10 = [0]
	
.LABEL $label$12
	$10 = ($7 | $10)
	
.LABEL $label$1
	$7
	return ($10 & [1])
}

void .FUNC $142 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = CALL int_32 *($0 + [8])((int_32 *($0)), (int_32 *($2)))
	$7 = CALL int_32 *($0 + [16])((int_32 *($0 + [8])), (int_32 *($2)))
	if ( ($9 == 0) ){ goto $label$3 }
	$4 = *($0)
	if ( ($7 == 0) ){ goto $label$2 }
	$9 = ($0 + [16])
	*($0) = *($9)
	*($9) = $4
	goto $label$1 
	
.LABEL $label$3
	if ( ($7 == 0) ){ goto $label$1 }
	$9 = ($0 + [8])
	$4 = *($9)
	$7 = ($0 + [16])
	$6 = *($7)
	*($9) = $6
	*($7) = $4
	if ( (CALL int_32 (CASTING uint_32)(uint_64 $6)((int_32 *($0)), (int_32 *($2))) == 0) ){ goto $label$1 }
	$4 = *($0)
	*($0) = *($9)
	*($9) = $4
	goto $label$1 
	
.LABEL $label$2
	$9 = ($0 + [8])
	*($0) = *($9)
	*($9) = $4
	$7 = ($0 + [16])
	if ( (CALL int_32 *($7)((int_32 (CASTING uint_32)(uint_64 $4)), (int_32 *($2))) == 0) ){ goto $label$1 }
	$4 = *($9)
	*($9) = *($7)
	*($7) = $4
	
.LABEL $label$1
	$9 = ($0 + [24])
	if ( ((int_32)$9 == (int_32)$1) ){ goto $label$4 }
	$7 = ($0 + [16])
	$8 = [0]
	
.LOOP $label$5:
	$3 = $9
	if ( (CALL int_32 *($3)((int_32 *($7)), (int_32 *($2))) == 0) ){ goto $label$6 }
	$4 = *($3)
	$5 = (CASTING uint_32)(uint_64 $4)
	$9 = $8
	
.LOOP $label$9:
	*((($7 = ($0 + $9)) + [24])) = *(($7 + [16]))
	if ( ((int_32)$9 == (int_32)[-16]) ){ goto $label$8 }
	$9 = ($9 + [-8])
	if ( CALL int_32 $5((int_32 *(($7 + [8]))), (int_32 *($2))) ){ goto $label$9 }
	$9 = (($0 + $9) + [24])
	goto $label$7 
	
.LABEL $label$8
	$9 = $0
	
.LABEL $label$7
	*($9) = $4
	
.LABEL $label$6
	$8 = ($8 + [8])
	$7 = $3
	$9 = ($3 + [8])
	if ( ((int_32)$9 != (int_32)$1) ){ goto $label$5 }
	
.LABEL $label$4
}

int_32 .FUNC $278 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = *($2)
	$6 = *($0)
	$8 = *($1)
	if ( ((int_32)$8 >= (int_32)$6) ){ goto $label$5 }
	if ( ((int_32)$7 >= (int_32)$8) ){ goto $label$4 }
	*($0) = $7
	*($2) = $6
	$9 = [1]
	goto $label$3 
	
.LABEL $label$5
	$9 = [0]
	if ( ((int_32)$7 >= (int_32)$8) ){ goto $label$2 }
	*($1) = $7
	*($2) = $8
	$9 = [1]
	$6 = *($0)
	$7 = *($1)
	if ( ((int_32)$7 >= (int_32)$6) ){ goto $label$1 }
	*($0) = $7
	*($1) = $6
	$8 = *($2)
	$9 = [2]
	goto $label$1 
	
.LABEL $label$4
	*($0) = $8
	*($1) = $6
	$9 = [1]
	$8 = *($2)
	if ( ((int_32)$8 >= (int_32)$6) ){ goto $label$1 }
	*($1) = $8
	*($2) = $6
	$9 = [2]
	
.LABEL $label$3
	$8 = $6
	goto $label$1 
	
.LABEL $label$2
	$8 = $7
	
.LABEL $label$1
	$7 = *($3)
	if ( ((int_32)$7 >= (int_32)int_32(($8 << [24]) >> [24])) ){ goto $label$6 }
	*($2) = $7
	*($3) = $8
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 >= (int_32)$7) ){ goto $label$8 }
	*($1) = $8
	*($2) = $7
	$7 = *($0)
	$8 = *($1)
	if ( ((int_32)$8 >= (int_32)$7) ){ goto $label$7 }
	*($0) = $8
	*($1) = $7
	$9 = ($9 + [3])
	goto $label$6 
	
.LABEL $label$8
	$9 = ($9 + [1])
	goto $label$6 
	
.LABEL $label$7
	$9 = ($9 + [2])
	
.LABEL $label$6
	$7 = *($3)
	$8 = *($4)
	if ( ((int_32)$8 >= (int_32)$7) ){ goto $label$12 }
	*($3) = $8
	*($4) = $7
	$7 = *($2)
	$8 = *($3)
	if ( ((int_32)$8 >= (int_32)$7) ){ goto $label$11 }
	*($2) = $8
	*($3) = $7
	$3 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 >= (int_32)$3) ){ goto $label$10 }
	*($1) = $8
	*($2) = $3
	$8 = *($0)
	$2 = *($1)
	if ( ((int_32)$2 >= (int_32)$8) ){ goto $label$9 }
	*($0) = $2
	*($1) = $8
	$9 = ($9 + [4])
	
.LABEL $label$12
	return $9
	
.LABEL $label$11
	return ($9 + [1])
	
.LABEL $label$10
	return ($9 + [2])
	
.LABEL $label$9
	return ($9 + [3])
}

void .FUNC $148 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$7 = *($0 + [8])
	if ( ((uint_32)int_32(($7 - $2) >> [3]) >= (uint_32)$1) ){ goto $label$5 }
	$3 = *($0)
	$4 = int_32(($2 - $3) >> [3])
	$2 = ($4 + $1)
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$7 = ($7 - $3)
	if ( ((uint_32)int_32($7 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$6 = int_32($7 >> [2])
	$6 = ( $2 ? $6 : ($6 <= $2) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$6
	$7 = CALL $280(($6 << [3]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $2
	$7 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$7 }
	*(($0 + [4])) = ($2 + ($1 << [3]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $298($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$3 = ($7 + ($6 << [3]))
	$2 = ($7 + ($4 << [3]))
	$6 = $2
	$7 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$8 }
	$4 = ($2 + ($1 << [3]))
	$6 = *($0)
	$5 = ($0 + [4])
	$7 = (*($5) - $6)
	$1 = ($2 - $7)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $7)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($5) = $4
	*(($0 + [8])) = $3
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $282($6)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC $98 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [1520])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [1568])
	CALL memcpy($1, *($3), [40])
	CALL eosio_assert([1], [1632])
	*($4 + [56]) = ($4 + [40])
	*($4 + [52]) = $4
	*($4 + [48]) = $4
	*($4 + [64]) = ($4 + [48])
	*($4 + [76]) = ($1 + [8])
	*($4 + [72]) = $1
	*($4 + [80]) = ($1 + [16])
	*($4 + [84]) = ($1 + [24])
	*($4 + [88]) = ($1 + [32])
	CALL $100(($4 + [72]), ($4 + [64]))
	CALL db_update_i64(*($1 + [44]), $2, $4, [40])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)7235159545106726912) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)7235159545106726913
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [96])
}

void .FUNC $99 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [96])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$13()), [1232])
	*(($4 = CALL $280([56])) + [8]) = (int_64)0
	*($4) = (int_64)0
	*($4 + [16]) = (int_64)0
	*($4 + [24]) = (int_64)0
	*($4 + [32]) = (int_64)0
	*($4 + [40]) = $1
	CALL memcpy($4, *($3), [40])
	*($7 + [56]) = ($7 + [40])
	*($7 + [52]) = $7
	*($7 + [48]) = $7
	*($7 + [64]) = ($7 + [48])
	*($7 + [76]) = ($4 + [8])
	*($7 + [72]) = $4
	*($7 + [80]) = ($4 + [16])
	*($7 + [84]) = ($4 + [24])
	*($7 + [88]) = ($4 + [32])
	CALL $100(($7 + [72]), ($7 + [64]))
	*($4 + [44]) = CALL db_store_i64(*($1 + [8]), (int_64)7235159545106726912, $2, (int_64)7235159545106726912, $7, [40])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)7235159545106726912) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)7235159545106726913
	
.LABEL $label$1
	*($7 + [72]) = $4
	*($7) = (int_64)7235159545106726912
	$5 = *($4 + [44])
	*($7 + [48]) = $5
	$6 = ($1 + [28])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = (int_64)7235159545106726912
	*($3 + [16]) = $5
	*($7 + [72]) = [0]
	*($3) = $4
	*($6) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $61(($1 + [24]), ($7 + [72]), $7, ($7 + [48]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$4 = *($7 + [72])
	*($7 + [72]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $282($4)
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [96])
}

int_32 .FUNC $239 (int_32 $0)
{
	return [0]
}

int_32 .FUNC $238 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($6) = $1
	$5 = [0]
	if ( CALL $239($6) ){ goto $label$1 }
	*($6 + [16]) = [0]
	$5 = *($1 + [8])
	*($6 + [24]) = $5
	if ( ((uint_32)$5 > (uint_32)[8]) ){ goto $label$3 }
	$4 = ($6 + [16])
	$3 = $1
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $281($5)
	*($6 + [16]) = $4
	$3 = *($1)
	
.LABEL $label$2
	CALL memcpy($4, $3, $5)
	*($6 + [28]) = *($1 + [12])
	*(($1 = CALL $280([16]))) = [0]
	$5 = *((($6 + [16]) + [8]))
	*($1 + [8]) = $5
	if ( ((uint_32)$5 > (uint_32)[8]) ){ goto $label$5 }
	$4 = ($6 + [16])
	$3 = $1
	goto $label$4 
	
.LABEL $label$5
	$3 = CALL $281($5)
	*($1) = $3
	$5 = *(($1 + [8]))
	$4 = *($6 + [16])
	
.LABEL $label$4
	CALL memcpy($3, $4, $5)
	*($2) = $1
	*($1 + [12]) = *(($6 + [28]))
	$5 = [1]
	if ( (*(($6 + [24])) <= [9]) ){ goto $label$1 }
	$1 = *($6 + [16])
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $283($1)
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [32])
	return $5
}

void .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1296])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1296])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1296])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1296])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1296])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	CALL $95(*($1), *($0 + [24]))
	CALL $95(*($1), *($0 + [28]))
	$3 = *($0 + [32])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [36])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [40])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [44])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [48])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($0 + [4]), $2, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $236 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($6) = [0]
	$3 = *($1 + [8])
	*($6 + [8]) = $3
	if ( ((uint_32)$3 > (uint_32)[8]) ){ goto $label$2 }
	$5 = $6
	$4 = $1
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL $281($3)
	*($6) = $5
	$4 = *($1)
	
.LABEL $label$1
	CALL memcpy($5, $4, $3)
	*($6 + [12]) = *($1 + [12])
	*($0) = [0]
	*($6 + [16]) = [0]
	$1 = *(($6 + [8]))
	*($6 + [24]) = $1
	if ( ((uint_32)$1 > (uint_32)[8]) ){ goto $label$4 }
	$3 = $6
	$5 = ($6 + [16])
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL $281($1)
	*($6 + [16]) = $5
	$3 = *($6)
	
.LABEL $label$3
	CALL memcpy($5, $3, $1)
	*($6 + [28]) = *(($6 + [12]))
	CALL $237($0, ($6 + [16]))
	if ( (*((($6 + [16]) + [8])) <= [9]) ){ goto $label$5 }
	$1 = *($6 + [16])
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $283($1)
	
.LABEL $label$5
	if ( (*(($6 + [8])) <= [9]) ){ goto $label$6 }
	$1 = *($6)
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $283($1)
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [32])
	return $0
}

void .FUNC _ZN6NiuNiu14_getglobalinfoEv (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [48])
	*([0] + [4]) = $4
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*($0 + [24]) = (int_64)0
	*($0 + [32]) = (int_64)0
	$2 = ($1 + [48])
	$3 = *(($1 + [76]))
	if ( ((int_32)$3 == (int_32)*(($1 + [72]))) ){ goto $label$6 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [40]) == (int_32)$2), [1104])
	if ( $3 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = CALL db_find_i64(*($2), *(($1 + [56])), (int_64)7235159545106726912, (int_64)7235159545106726912)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert(((int_32)*(CALL $58($2, $3) + [40]) == (int_32)$2), [1104])
	
.LABEL $label$5
	$3 = *(($1 + [76]))
	if ( ((int_32)$3 == (int_32)*(($1 + [72]))) ){ goto $label$3 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [40]) == (int_32)$2), [1104])
	goto $label$2 
	
.LABEL $label$4
	*($0) = (int_64)0
	*(($0 + [8])) = (int_64)0
	*(($0 + [16])) = (int_64)0
	*(($0 + [24])) = (int_64)0
	*(($0 + [32])) = (int_64)0
	CALL $97($2, $0, *($1))
	goto $label$1 
	
.LABEL $label$3
	$3 = [0]
	$1 = CALL db_find_i64(*(($1 + [48])), *(($1 + [56])), (int_64)7235159545106726912, (int_64)7235159545106726912)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $58($2, $1)
	CALL eosio_assert(((int_32)*($3 + [40]) == (int_32)$2), [1104])
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [1696])
	CALL memcpy(($4 + [8]), $3, [40])
	CALL memcpy($0, ($4 + [8]), [40])
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [48])
}

int_32 .FUNC $234 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [16])
	*([0] + [4]) = $16
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = ($1 + [4])
	$3 = ($16 | [1])
	$5 = ($1 + [20])
	$6 = ($1 + [16])
	$7 = ($16 + [8])
	$8 = ($1 + [28])
	$9 = ($1 + [32])
	$10 = ($1 + [24])
	
.LOOP $label$1:
	$13 = [1]
	if ( (*($1) == 0) ){ goto $label$2 }
	$13 = ((int_32)*($9) != (int_32)[0])
	
.LABEL $label$2
	if ( (*($2) == 0) ){ goto $label$10 }
	$15 = ((int_32)*(($2 + [32])) != (int_32)[0])
	if ( ((int_32)($13 | $15) == (int_32)[1]) ){ goto $label$9 }
	$15 = *(($2 + [16]))
	$13 = *($6)
	$12 = *($5)
	if ( ((int_32)($12 - $13) != (int_32)(*(($2 + [20])) - $15)) ){ goto $label$7 }
	if ( ((int_32)$13 == (int_32)$12) ){ goto $label$11 }
	$11 = $13
	
.LOOP $label$12:
	if ( ((int_32)*($11) != (int_32)*($15)) ){ goto $label$7 }
	$15 = ($15 + [1])
	$11 = ($11 + [1])
	if ( ((int_32)$12 != (int_32)$11) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ((int_32)*($10) != (int_32)*(($2 + [24]))) ){ goto $label$7 }
	if ( ((int_32)*($8) != (int_32)*(($2 + [28]))) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$10
	$15 = [1]
	
.LABEL $label$9
	if ( ((int_32)$13 == (int_32)$15) ){ goto $label$6 }
	
.LABEL $label$8
	$12 = *($5)
	$13 = *($6)
	
.LABEL $label$7
	*($7) = [0]
	*($16) = (int_64)0
	$11 = ($12 - $13)
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$11 > (uint_32)[10]) ){ goto $label$15 }
	*($16) = ($11 << [1])
	$14 = $3
	if ( ((int_32)$13 != (int_32)$12) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$15 = (($11 + [16]) & [-16])
	$14 = CALL $280($15)
	*($7) = $14
	*($16) = ($15 | [1])
	*($16 + [4]) = $11
	if ( ((int_32)$13 == (int_32)$12) ){ goto $label$13 }
	
.LABEL $label$14
	$15 = $14
	
.LOOP $label$16:
	*($15) = *($13)
	$15 = ($15 + [1])
	$13 = ($13 + [1])
	if ( ((int_32)$12 != (int_32)$13) ){ goto $label$16 }
	$14 = ($14 + $11)
	
.LABEL $label$13
	*($14) = [0]
	$13 = ($0 + [4])
	$15 = *($13)
	if ( ((uint_32)$15 >= (uint_32)*(($0 + [8]))) ){ goto $label$18 }
	*($15) = *($16)
	*(($15 + [8])) = *($7)
	*($7) = [0]
	*($16) = [0]
	*($16 + [4]) = [0]
	*($13) = (*($13) + [12])
	goto $label$17 
	
.LABEL $label$18
	CALL $235($0, $16)
	if ( ((*($16) & [1]) == 0) ){ goto $label$17 }
	CALL $282(*($7))
	
.LABEL $label$17
	$13 = *($8)
	$15 = *($1)
	if ( ($15 == 0) ){ goto $label$20 }
	CALL void $16((int_32 $4), (int_32 *($10)), (int_32 $13), (int_32 *(($15 & [-2]) + [4])))
	$15 = *($16)
	if ( ((int_32)$15 == (int_32)*($8)) ){ goto $label$19 }
	$13 = *($16 + [4])
	goto $label$3 
	
.LABEL $label$20
	*($16 + [4]) = $13
	*($16) = $13
	$15 = $13
	goto $label$4 
	
.LABEL $label$19
	$13 = *($16 + [4])
	if ( ((int_32)$13 != (int_32)$15) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$6
	*([0] + [4]) = ($16 + [16])
	return $0
	
.LABEL $label$5
	CALL $284($16)
	
.LABEL $label$4
	if ( ((int_32)*($5) != (int_32)$15) ){ goto $label$3 }
	*($9) = [1]
	
.LABEL $label$3
	*($5) = $15
	*($6) = *($10)
	*($10) = $13
	goto $label$1 
	return (unreachable)
}

int_32 .FUNC $233 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [8]) = [0]
	$4 = *($3 + [8])
	*($7 + [16]) = $4
	if ( ((uint_32)$4 > (uint_32)[8]) ){ goto $label$2 }
	$6 = ($7 + [8])
	$5 = $3
	goto $label$1 
	
.LABEL $label$2
	$6 = CALL $281($4)
	*($7 + [8]) = $6
	$5 = *($3)
	
.LABEL $label$1
	CALL memcpy($6, $5, $4)
	*($7 + [20]) = *($3 + [12])
	CALL $236($0, ($7 + [8]), [0])
	if ( (*(($7 + [16])) <= [9]) ){ goto $label$3 }
	$3 = *($7 + [8])
	if ( ($3 == 0) ){ goto $label$3 }
	CALL $283($3)
	
.LABEL $label$3
	*($0 + [16]) = $1
	*($0 + [24]) = $1
	*($0 + [28]) = $2
	*($0 + [32]) = [0]
	*(($0 + [20])) = $1
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$4 }
	$3 = *($0)
	if ( ($3 == 0) ){ goto $label$8 }
	CALL void ($7 + [24])((int_32 ($0 + [4])), (int_32 $1), (int_32 $2), (int_32 *(($3 & [-2]) + [4])))
	$1 = *($7 + [24])
	if ( ((int_32)$1 == (int_32)*($0 + [28])) ){ goto $label$7 }
	$2 = *($7 + [28])
	goto $label$5 
	
.LABEL $label$8
	*($7 + [28]) = $2
	*($7 + [24]) = $2
	$1 = $2
	goto $label$6 
	
.LABEL $label$7
	$2 = *($7 + [28])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$5 }
	
.LABEL $label$6
	if ( ((int_32)*(($0 + [20])) != (int_32)$2) ){ goto $label$5 }
	*(($0 + [32])) = [1]
	
.LABEL $label$5
	*(($0 + [20])) = $1
	$1 = ($0 + [24])
	*(($0 + [16])) = *($1)
	*($1) = $2
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [32])
	return $0
}

void .FUNC $91 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$16 = (*([0] + [4]) - [80])
	*([0] + [4]) = $16
	$3 = *($0)
	$17 = *(*($0 + [4]))
	*($1) = *($17)
	*(($10 = ($1 + [24]))) = *(($17 + [24]))
	*(($8 = ($1 + [16]))) = *(($17 + [16]))
	*(($6 = ($1 + [8]))) = *(($17 + [8]))
	$4 = ($1 + [28])
	CALL $285($4, ($17 + [28]))
	$5 = ($1 + [40])
	CALL $285($5, ($17 + [40]))
	$2 = CALL memcpy(($1 + [56]), ($17 + [56]), [40])
	*(($17 = $16) + [16]) = [0]
	*($17) = ($17 + [16])
	*($17 + [28]) = $6
	*($17 + [24]) = $1
	$7 = ($1 + [12])
	*($17 + [32]) = $7
	*($17 + [36]) = $8
	$9 = ($1 + [20])
	*($17 + [40]) = $9
	*($17 + [44]) = $10
	*($17 + [48]) = $4
	*($17 + [52]) = $5
	*($17 + [56]) = $2
	$11 = ($1 + [64])
	*($17 + [60]) = $11
	$12 = ($1 + [72])
	*($17 + [64]) = $12
	$13 = ($1 + [80])
	*($17 + [68]) = $13
	$14 = ($1 + [88])
	*($17 + [72]) = $14
	CALL $93(($17 + [24]), $17)
	$15 = *($17 + [16])
	if ( ($15 <= [513]) ){ goto $label$2 }
	$16 = CALL malloc($15)
	goto $label$1 
	
.LABEL $label$2
	$16 = ($16 - (($15 + [15]) & [-16]))
	*([0] + [4]) = $16
	
.LABEL $label$1
	*($17 + [4]) = $16
	*($17) = $16
	*($17 + [8]) = ($16 + $15)
	*($17 + [16]) = $17
	*($17 + [28]) = $6
	*($17 + [24]) = $1
	*($17 + [32]) = $7
	*($17 + [36]) = $8
	*($17 + [40]) = $9
	*($17 + [44]) = $10
	*($17 + [48]) = $4
	*($17 + [52]) = $5
	*($17 + [56]) = $2
	*($17 + [60]) = $11
	*($17 + [64]) = $12
	*($17 + [68]) = $13
	*($17 + [72]) = $14
	CALL $94(($17 + [24]), ($17 + [16]))
	*($1 + [100]) = CALL db_store_i64(*($3 + [8]), (int_64)7035929282832498688, *(*($0 + [8])), (int_64)7035929282832498688, $16, $15)
	if ( ($15 <= [513]) ){ goto $label$3 }
	CALL free($16)
	
.LABEL $label$3
	if ( ((uint_64)*($3 + [16]) > (uint_64)(int_64)7035929282832498688) ){ goto $label$4 }
	*(($3 + [16])) = (int_64)7035929282832498689
	
.LABEL $label$4
	*([0] + [4]) = ($17 + [80])
}

void .FUNC $92 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $280(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $298($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [40]) & [1]) == 0) ){ goto $label$11 }
	CALL $282(*(($1 + [48])))
	
.LABEL $label$11
	if ( ((*($1 + [28]) & [1]) == 0) ){ goto $label$12 }
	CALL $282(*(($1 + [36])))
	
.LABEL $label$12
	CALL $282($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $282($6)
	
.LABEL $label$13
	(unreachable)
}

int_32 .FUNC $230 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [1024])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $280([64])) + [48]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [1056])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((uint_32)($4 + [-8]) > (uint_32)[31]), [1056])
	CALL memcpy(($6 + [16]), ($7 + [8]), [32])
	*($6 + [56]) = [-1]
	*($6 + [52]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [52])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $231(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $282($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $144 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [4])
	$3 = *($1)
	CALL $147($3, $2)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy(($2 + [16]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [8])
	$3 = *($1)
	CALL $147($3, $2)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy(($2 + [16]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [12])
	$3 = *($1)
	CALL $147($3, $2)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy(($2 + [16]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [16])
	$3 = *($1)
	CALL $147($3, $2)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy(($2 + [16]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0 + [20])
	$1 = *($1)
	CALL $147($1, $0)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy(($0 + [16]), *($1 + [4]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
}

void .FUNC _ZN6NiuNiu14_getconfiginfoEv (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [48])
	*([0] + [4]) = $4
	*($0 + [8]) = (int_64)50
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)10000
	*($0 + [24]) = (int_64)1
	*($0 + [32]) = (int_64)1
	*($0 + [40]) = (int_64)4
	$2 = ($1 + [128])
	$3 = *(($1 + [156]))
	if ( ((int_32)$3 == (int_32)*(($1 + [152]))) ){ goto $label$6 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [48]) == (int_32)$2), [1104])
	if ( $3 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = CALL db_find_i64(*($2), *(($1 + [136])), (int_64)4982871462359400448, (int_64)4982871462359400448)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert(((int_32)*(CALL $50($2, $3) + [48]) == (int_32)$2), [1104])
	
.LABEL $label$5
	$3 = *(($1 + [156]))
	if ( ((int_32)$3 == (int_32)*(($1 + [152]))) ){ goto $label$3 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [48]) == (int_32)$2), [1104])
	goto $label$2 
	
.LABEL $label$4
	*($0) = (int_64)0
	*(($0 + [8])) = (int_64)50
	*(($0 + [16])) = (int_64)10000
	*(($0 + [24])) = (int_64)1
	*(($0 + [32])) = (int_64)1
	*(($0 + [40])) = (int_64)4
	CALL $193($2, $0, *($1))
	goto $label$1 
	
.LABEL $label$3
	$3 = [0]
	$1 = CALL db_find_i64(*(($1 + [128])), *(($1 + [136])), (int_64)4982871462359400448, (int_64)4982871462359400448)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $50($2, $1)
	CALL eosio_assert(((int_32)*($3 + [48]) == (int_32)$2), [1104])
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [1696])
	CALL memcpy($0, CALL memcpy($4, $3, [48]), [48])
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [48])
}

void .FUNC _Z7mytracei (int_32 $0)
{
	CALL prints([2128])
	CALL printi((CASTING int_64)(int_32 $0))
	CALL prints([560])
}

void .FUNC _ZN6NiuNiu17_updateconfiginfoERK14_st_configinfo (int_32 $0, int_32 $1)
{
	CALL $193(($0 + [128]), $1, *($0))
}

int_32 .FUNC _ZN6NiuNiu15_isgamectxexistEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($0 + [8])
	$2 = *(($0 + [36]))
	if ( ((int_32)$2 == (int_32)*(($0 + [32]))) ){ goto $label$2 }
	$2 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [96]) == (int_32)$1), [1104])
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	$0 = CALL db_find_i64(*($1), *(($0 + [16])), (int_64)7035929282832498688, (int_64)7035929282832498688)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$2 = CALL $62($1, $0)
	CALL eosio_assert(((int_32)*($2 + [96]) == (int_32)$1), [1104])
	
.LABEL $label$1
	return ((int_32)$2 != (int_32)[0])
}

int_32 .FUNC snprintf (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	*($4 + [12]) = $3
	$3 = CALL vsnprintf($0, $1, $2, $3)
	*([0] + [4]) = ($4 + [16])
	return $3
}

int_64 .FUNC floor (float_64 $0)
{
	int_64 $1
	int_32 $2
	float_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	if ( ((float_64)$0 == (float_64)(float_64)0) ){ goto $label$1 }
	$1 = (CASTING int_64)(float_64 $0)
	$2 = ((CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)52)) & [2047]
	if ( ((uint_32)$2) > (uint_32)[1074]) ){ goto $label$1 }
	$4 = ((int_64)$1 < (int_64)0)
	$3 = (float_64))(((float_64)( (float_64)4503599627370496 ? (float_64)-4503599627370496 : $4 ) + (float_64)((float_64)( (float_64)-4503599627370496 ? (float_64)4503599627370496 : $4 ) + (float_64)$0)) - $0)
	if ( ((uint_32)$2 > (uint_32)[1022]) ){ goto $label$2 }
	*($5 + [8]) = $3
	return (CASTING float_64)(int_32 (CASTING uint_32)(uint_64 (int_64)$1 >> (int_64)63)))
	
.LABEL $label$2
	$0 = ((float_64)$3 + (float_64)$0)
	if ( (((float_64)$3 <= (float_64)(float_64)0) | ((float_64)$3 != (float_64)$3)) ){ goto $label$1 }
	$0 = ((float_64)$0 + (float_64)(float_64)-1)
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $301 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = ($8 & [1])
	$8 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($8 >> [1]) : $5 )
	if ( ($8 <= $2) ){ goto $label$1 }
	$8 = ($8 - $2)
	$3 = ( $8 ? $3 : ($8 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($3 + [16]) & [-16])
	$8 = CALL $280($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($8, (( $6 ? ($1 + [1]) : $5 ) + $2), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC _ZN6NiuNiu14_updategamectxERK11_st_gamectx (int_32 $0, int_32 $1)
{
	CALL eosio_assert(((int_64)*($1) != (int_64)0), [1408])
	CALL $69(($0 + [8]), $1, *($0))
}

int_32 .FUNC vfprintf (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [288])
	*([0] + [4]) = $7
	*($7 + [284]) = $2
	$6 = [0]
	CALL memset(($7 + [240]), [0], [40])
	*($7 + [280]) = *($7 + [284])
	$2 = [-1]
	if ( ((int_32)CALL $308([0], $1, ($7 + [280]), ($7 + [80]), ($7 + [240])) <= (int_32)[-1]) ){ goto $label$1 }
	if ( ((int_32)*($0 + [76]) < (int_32)[0]) ){ goto $label$2 }
	$6 = CALL __lockfile($0)
	
.LABEL $label$2
	$2 = *($0)
	if ( ((int_32)*($0 + [74]) > (int_32)[0]) ){ goto $label$3 }
	*($0) = ($2 & [-33])
	
.LABEL $label$3
	$3 = ($2 & [32])
	if ( (*($0 + [48]) == 0) ){ goto $label$5 }
	$2 = CALL $308($0, $1, ($7 + [280]), ($7 + [80]), ($7 + [240]))
	goto $label$4 
	
.LABEL $label$5
	*(($5 = ($0 + [48]))) = [80]
	*($0 + [16]) = ($7 + [80])
	*($0 + [28]) = $7
	*($0 + [20]) = $7
	$4 = *($0 + [44])
	*($0 + [44]) = $7
	$2 = CALL $308($0, $1, ($7 + [280]), ($7 + [80]), ($7 + [240]))
	if ( ($4 == 0) ){ goto $label$4 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	*(($0 + [44])) = $4
	*($5) = [0]
	*(($0 + [16])) = [0]
	*(($0 + [28])) = [0]
	$1 = ($0 + [20])
	$4 = *($1)
	*($1) = [0]
	$2 = ( $2 ? [-1] : $4 )
	
.LABEL $label$4
	$1 = *($0)
	*($0) = ($1 | $3)
	$1 = ($1 & [32])
	if ( ($6 == 0) ){ goto $label$6 }
	CALL __unlockfile($0)
	
.LABEL $label$6
	$2 = ( [-1] ? $2 : $1 )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [288])
	return $2
}

int_32 .FUNC __errno_location ()
{
	return [15260]
}

int_32 .FUNC $305 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *($0 + [28])
	$6 = (*($0 + [20]) - $4)
	$3 = *($0 + [84])
	$5 = *($3 + [4])
	$6 = ( $5 ? $6 : ($5 <= $6) )
	if ( ($6 == 0) ){ goto $label$1 }
	CALL memcpy(*($3), $4, $6)
	*($3) = (*($3) + $6)
	$5 = (*($5) - $6)
	*(($5 = ($3 + [4]))) = $5
	
.LABEL $label$1
	$6 = *($3)
	$5 = ( $5 ? $2 : ($5 <= $2) )
	if ( ($5 == 0) ){ goto $label$2 }
	CALL memcpy($6, $1, $5)
	$6 = (*($3) + $5)
	*($3) = $6
	*(($3 = ($3 + [4]))) = (*($3) - $5)
	
.LABEL $label$2
	*($6) = [0]
	$3 = *($0 + [44])
	*(($0 + [28])) = $3
	*(($0 + [20])) = $3
	return $2
}

int_32 .FUNC vsnprintf (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [160])
	*([0] + [4]) = $4
	$5 = [-1]
	*($4 + [148]) = ( ($1 + [-1]) ? [0] : $1 )
	$0 = ( $0 ? ($4 + [158]) : $1 )
	*($4 + [144]) = $0
	*(($4 = CALL memset($4, [0], [144])) + [36]) = [21]
	*($4 + [75]) = [255]
	*($4 + [76]) = [-1]
	*($4 + [44]) = ($4 + [159])
	*($4 + [84]) = ($4 + [144])
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$2 }
	*($0) = [0]
	$5 = CALL vfprintf($4, $2, $3)
	goto $label$1 
	
.LABEL $label$2
	*(CALL __errno_location()) = [75]
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [160])
	return $5
}

int_32 .FUNC __lockfile (int_32 $0)
{
	int_32 $1
	return $1
}

int_32 .FUNC $308 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_64 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_64 $33
	int_64 $34
	int_64 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	$39 = (*([0] + [4]) - [8128])
	*([0] + [4]) = $39
	$12 = (($39 + [692]) + [11])
	$11 = (($39 + [704]) | [8])
	$10 = (($39 + [704]) | [9])
	$9 = ($39 + [7664])
	$8 = ([-2] - ($39 + [704]))
	$7 = (($39 + [692]) + [12])
	$6 = (($39 + [352]) + [54])
	$5 = (($39 + [352]) + [55])
	$30 = [0]
	$38 = [0]
	$32 = [0]
	
.LOOP $label$17:
	$38 = ($30 + $38)
	$37 = $1
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$16 }
	$1 = $37
	$30 = ($30 & [255])
	if ( ($30 == 0) ){ goto $label$20 }
	
.LOOP $label$21:
	if ( ((int_32)$30 == (int_32)[37]) ){ goto $label$19 }
	$1 = ($1 + [1])
	$30 = (*($1) & [255])
	if ( $30 ){ goto $label$21 }
	
.LABEL $label$20
	$30 = $1
	goto $label$18 
	
.LABEL $label$19
	$30 = $1
	
.LOOP $label$22:
	if ( ((int_32)*(($1 + [1])) != (int_32)[37]) ){ goto $label$18 }
	$30 = ($30 + [1])
	$1 = ($1 + [2])
	if ( ((int_32)*($1) == (int_32)[37]) ){ goto $label$22 }
	
.LABEL $label$18
	$13 = ([2147483647] - $38)
	$30 = ($30 - $37)
	if ( ((int_32)$30 > (int_32)$13) ){ goto $label$15 }
	if ( ($0 == 0) ){ goto $label$23 }
	if ( (*($0) & [32]) ){ goto $label$23 }
	CALL __fwritex($37, $30, $0)
	
.LABEL $label$23
	if ( $30 ){ goto $label$24 }
	$36 = ($1 + [1])
	$27 = [-1]
	$30 = *($1 + [1])
	$17 = ($30 + [-48])
	if ( ((uint_32)$17 > (uint_32)[9]) ){ goto $label$25 }
	$1 = ((int_32)*($1 + [2]) == (int_32)[36])
	$36 = ( ($1 + [3]) ? $36 : $1 )
	$30 = *($36)
	$27 = ( $17 ? [-1] : $1 )
	$32 = ( [1] ? $32 : $1 )
	
.LABEL $label$25
	$14 = [0]
	$1 = (int_32(($30 << [24]) >> [24]) + [-32])
	if ( ((uint_32)$1 > (uint_32)[31]) ){ goto $label$26 }
	$14 = [0]
	
.LOOP $label$27:
	if ( ((([1] << $1) & [75913]) == 0) ){ goto $label$26 }
	$14 = (([1] << (int_32(($30 << [24]) >> [24]) + [-32])) | $14)
	$36 = ($36 + [1])
	$30 = *($36)
	$1 = ($30 + [-32])
	if ( ($1 <= [32]) ){ goto $label$27 }
	
.LABEL $label$26
	if ( ((int_32)($30 & [255]) != (int_32)[42]) ){ goto $label$33 }
	$1 = (*($36 + [1]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$32 }
	if ( ((int_32)*($36 + [2]) != (int_32)[36]) ){ goto $label$32 }
	*(($4 + ($1 << [2]))) = [10]
	$17 = ($36 + [3])
	$32 = [1]
	$15 = *((($3 + (*(($36 + [1])) << [4])) + [-768]))
	if ( ((int_32)$15 > (int_32)[-1]) ){ goto $label$28 }
	goto $label$31 
	
.LABEL $label$33
	$15 = [0]
	$30 = (int_32(($30 << [24]) >> [24]) + [-48])
	if ( ((uint_32)$30 > (uint_32)[9]) ){ goto $label$30 }
	$1 = [0]
	$17 = $36
	
.LOOP $label$34:
	$15 = [-1]
	if ( ((uint_32)$1 > (uint_32)[214748364]) ){ goto $label$35 }
	$1 = ((int_32)$1 * (int_32)[10])
	$15 = ( [-1] ? ($1 + $30) : ((int_32)$30 > (int_32)([2147483647] - $1)) )
	
.LABEL $label$35
	$1 = $15
	$17 = ($17 + [1])
	$30 = (*($17) + [-48])
	if ( ($30 <= [10]) ){ goto $label$34 }
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$28 }
	goto $label$15 
	
.LABEL $label$32
	if ( $32 ){ goto $label$3 }
	$17 = ($36 + [1])
	if ( ($0 == 0) ){ goto $label$29 }
	$1 = *($2)
	*($2) = ($1 + [4])
	$32 = [0]
	$15 = *($1)
	if ( ((int_32)$15 > (int_32)[-1]) ){ goto $label$28 }
	
.LABEL $label$31
	$15 = ([0] - $15)
	$14 = ($14 | [8192])
	goto $label$28 
	
.LABEL $label$30
	$17 = $36
	goto $label$28 
	
.LABEL $label$29
	$32 = [0]
	$15 = [0]
	
.LABEL $label$28
	$30 = [0]
	$36 = [-1]
	if ( ((int_32)*($17) != (int_32)[46]) ){ goto $label$42 }
	$36 = *($17 + [1])
	if ( ((int_32)$36 != (int_32)[42]) ){ goto $label$41 }
	$1 = (*($17 + [2]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$40 }
	if ( ((int_32)*($17 + [3]) != (int_32)[36]) ){ goto $label$40 }
	*(($4 + ($1 << [2]))) = [10]
	$1 = ($17 + [4])
	$36 = *((($3 + (*(($17 + [2])) << [4])) + [-768]))
	goto $label$37 
	
.LABEL $label$42
	$1 = $17
	$16 = [0]
	goto $label$36 
	
.LABEL $label$41
	$1 = ($17 + [1])
	$31 = ($36 + [-48])
	if ( ((uint_32)$31 > (uint_32)[9]) ){ goto $label$39 }
	$17 = [0]
	
.LOOP $label$43:
	$36 = [-1]
	if ( ((uint_32)$17 > (uint_32)[214748364]) ){ goto $label$44 }
	$17 = ((int_32)$17 * (int_32)[10])
	$36 = ( [-1] ? ($17 + $31) : ((int_32)$31 > (int_32)([2147483647] - $17)) )
	
.LABEL $label$44
	$16 = [1]
	$17 = $36
	$1 = ($1 + [1])
	$31 = (*($1) + [-48])
	if ( ($31 <= [10]) ){ goto $label$43 }
	goto $label$36 
	
.LABEL $label$40
	if ( $32 ){ goto $label$3 }
	$1 = ($17 + [2])
	if ( ($0 == 0) ){ goto $label$38 }
	$17 = *($2)
	*($2) = ($17 + [4])
	$36 = *($17)
	goto $label$37 
	
.LABEL $label$39
	$16 = [1]
	$36 = [0]
	goto $label$36 
	
.LABEL $label$38
	$36 = [0]
	
.LABEL $label$37
	$16 = ((int_32)uint_32($36 >> [31]) ^ (int_32)[1])
	
.LABEL $label$36
	
.LOOP $label$45:
	$17 = $30
	$30 = (*($1) + [-65])
	if ( ((uint_32)$30 > (uint_32)[57]) ){ goto $label$3 }
	$1 = ($1 + [1])
	$30 = *(((((int_32)$17 * (int_32)[58]) + $30) + [12736]))
	if ( (($30 + [-1]) <= [8]) ){ goto $label$45 }
	if ( ($30 == 0) ){ goto $label$3 }
	if ( ((int_32)$30 != (int_32)[27]) ){ goto $label$49 }
	if ( ((int_32)$27 <= (int_32)[-1]) ){ goto $label$48 }
	goto $label$3 
	
.LABEL $label$49
	if ( ((int_32)$27 < (int_32)[0]) ){ goto $label$47 }
	*(($4 + ($27 << [2]))) = $30
	$30 = ($3 + ($27 << [4]))
	*($39 + [428]) = *(($30 + [12]))
	*($39 + [424]) = *(($30 + [8]))
	*($39 + [420]) = *(($30 + [4]))
	*($39 + [416]) = *($30)
	
.LABEL $label$48
	if ( $0 ){ goto $label$46 }
	$30 = [0]
	goto $label$24 
	
.LABEL $label$47
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $312(($39 + [416]), $30, $2)
	
.LABEL $label$46
	$31 = ($14 & [-65537])
	$18 = ( $31 ? $14 : ($14 & [8192]) )
	$26 = [0]
	$24 = [13216]
	$30 = *(($1 + [-1]))
	$29 = ( ( ($30 & [-33]) ? $30 : ((int_32)($30 & [15]) == (int_32)[3]) ) ? $30 : $17 )
	$30 = ($29 + [-65])
	if ( ((uint_32)$30 > (uint_32)[55]) ){ goto $label$80 }
	$14 = $5
	goto $label$111 
	
.LABEL $label$111
	if ( ((int_32)$36 > (int_32)[-1]) ){ goto $label$112 }
	if ( $16 ){ goto $label$15 }
	
.LABEL $label$112
	$35 = *($39 + [424])
	$23 = *($39 + [416])
	*($39 + [748]) = [0]
	if ( (CALL __signbitl($23, $35) == 0) ){ goto $label$113 }
	$35 = ((int_64)$35 ^ (int_64)-9223372036854775808)
	$20 = [1]
	$19 = [13248]
	goto $label$108 
	
.LABEL $label$113
	if ( ($18 & [2048]) ){ goto $label$109 }
	$20 = ($18 & [1])
	$19 = ( [13254] ? [13249] : $20 )
	goto $label$108 
	
.LABEL $label$110
	$35 = *($39 + [416])
	if ( ((int_64)$35 <= (int_64)-1) ){ goto $label$92 }
	if ( ($18 & [2048]) ){ goto $label$88 }
	$26 = ($18 & [1])
	$24 = ( [13218] ? [13216] : $26 )
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$109
	$20 = [1]
	$19 = [13251]
	
.LABEL $label$108
	if ( ((int_32)CALL __fpclassifyl($23, $35) <= (int_32)[1]) ){ goto $label$115 }
	CALL frexpl(($39 + [320]), $23, $35, ($39 + [748]))
	$23 = *($39 + [328])
	$35 = *($39 + [320])
	CALL __addtf3(($39 + [304]), $35, $23, $35, $23)
	$23 = *((($39 + [304]) + [8]))
	$35 = *($39 + [304])
	if ( (CALL __eqtf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$116 }
	*($39 + [748]) = (*($39 + [748]) + [-1])
	
.LABEL $label$116
	$21 = ($29 | [32])
	if ( ((int_32)$21 != (int_32)[97]) ){ goto $label$114 }
	$37 = ($29 & [32])
	$24 = ( ($19 + [9]) ? $19 : $37 )
	if ( ((uint_32)$36 > (uint_32)[26]) ){ goto $label$77 }
	if ( (([27] - $36) == 0) ){ goto $label$77 }
	$30 = ($36 + [-27])
	$34 = (int_64)4612248968380809216
	$33 = (int_64)0
	
.LOOP $label$117:
	CALL __multf3(($39 + [208]), $33, $34, (int_64)0, (int_64)4612530443357519872)
	$34 = *((($39 + [208]) + [8]))
	$33 = *($39 + [208])
	$30 = ($30 + [1])
	if ( $30 ){ goto $label$117 }
	if ( ((int_32)*($24) != (int_32)[45]) ){ goto $label$78 }
	CALL __subtf3(($39 + [160]), $35, ((int_64)$23 ^ (int_64)-9223372036854775808), $33, $34)
	CALL __addtf3(($39 + [144]), $33, $34, *($39 + [160]), *((($39 + [160]) + [8])))
	$23 = ((int_64)*((($39 + [144]) + [8])) ^ (int_64)-9223372036854775808)
	$35 = *($39 + [144])
	goto $label$77 
	
.LABEL $label$115
	$16 = CALL __unordtf2($23, $35, $23, $35)
	$37 = ($20 + [3])
	if ( ($18 & [8192]) ){ goto $label$93 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$93 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$95 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$118:
	if ( (($30 & [1]) == 0) ){ goto $label$119 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$119
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$118 }
	if ( $14 ){ goto $label$93 }
	$31 = ($31 & [255])
	goto $label$94 
	
.LABEL $label$114
	$30 = ((int_32)$36 < (int_32)[0])
	if ( (CALL __netf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$90 }
	CALL __multf3(($39 + [288]), $35, $23, (int_64)0, (int_64)4619285842798575616)
	$31 = (*($39 + [748]) + [-28])
	*($39 + [748]) = $31
	$23 = *((($39 + [288]) + [8]))
	$35 = *($39 + [288])
	goto $label$89 
	
.LABEL $label$107
	$35 = *($39 + [416])
	*((($39 + [344]) + [4])) = [0]
	*($39 + [344]) = $35
	*($39 + [416]) = ($39 + [344])
	$36 = [-1]
	$37 = ($39 + [344])
	goto $label$105 
	
.LABEL $label$106
	$37 = *($39 + [416])
	if ( ($36 == 0) ){ goto $label$74 }
	
.LABEL $label$105
	$30 = [0]
	$14 = $37
	$17 = [0]
	
.LOOP $label$121:
	$31 = *($14)
	if ( ($31 == 0) ){ goto $label$120 }
	$17 = CALL wctomb(($39 + [340]), $31)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$120 }
	if ( ((uint_32)$17 > (uint_32)($36 - $30)) ){ goto $label$120 }
	$14 = ($14 + [4])
	$30 = ($17 + $30)
	if ( ((uint_32)$36 > (uint_32)$30) ){ goto $label$121 }
	
.LABEL $label$120
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$2 }
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$15 }
	$16 = ($18 & [73728])
	if ( $16 ){ goto $label$72 }
	goto $label$73 
	
.LABEL $label$104
	*((($39 + [352]) + [54])) = *($39 + [416])
	$36 = [1]
	$37 = $6
	$14 = $5
	$18 = $31
	goto $label$79 
	
.LABEL $label$103
	$37 = CALL strerror(*(CALL $306()))
	goto $label$97 
	
.LABEL $label$102
	$30 = ($17 & [255])
	if ( ((uint_32)$30 > (uint_32)[7]) ){ goto $label$56 }
	goto $label$122 
	
.LABEL $label$122
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$101
	$37 = $5
	$35 = *($39 + [416])
	if ( (int_64)($35 == 0) ){ goto $label$123 }
	$37 = $5
	
.LOOP $label$124:
	*(($37 = ($37 + [-1]))) = ((int_64)((int_64)$35 & (int_64)7) | (int_64)48)
	$35 = (uint_64)$35 >> (uint_64)(int_64)3
	if ( ((int_64)$35) != (int_64)0) ){ goto $label$124 }
	
.LABEL $label$123
	if ( ($18 & [8]) ){ goto $label$84 }
	$26 = [0]
	$24 = [13216]
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$100
	$36 = ( $36 ? [8] : ((uint_32)$36 > (uint_32)[8]) )
	$18 = ($18 | [8])
	$29 = [120]
	
.LABEL $label$99
	$26 = [0]
	$24 = [13216]
	$35 = *($39 + [416])
	if ( (int_64)($35 == 0) ){ goto $label$125 }
	$30 = ($29 & [32])
	$37 = $5
	
.LOOP $label$126:
	*(($37 = ($37 + [-1]))) = (*((((CASTING uint_32)(uint_64 $35) & [15]) + [13200])) | $30)
	$35 = (uint_64)$35 >> (uint_64)(int_64)4
	if ( ((int_64)$35) != (int_64)0) ){ goto $label$126 }
	if ( (($18 & [8]) == 0) ){ goto $label$83 }
	if ( (int_64)(*($39 + [416]) == 0) ){ goto $label$83 }
	$24 = (int_32($29 >> [4]) + [13216])
	$26 = [2]
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$125
	$37 = $5
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$98
	$30 = *($39 + [416])
	$37 = ( $30 ? [13232] : $30 )
	
.LABEL $label$97
	$26 = [0]
	$30 = CALL strnlen($37, ( [2147483647] ? $36 : ((int_32)$36 < (int_32)[0]) ))
	$14 = ($37 + $30)
	if ( ((int_32)$36 <= (int_32)[-1]) ){ goto $label$91 }
	$18 = $31
	$36 = $30
	goto $label$79 
	
.LABEL $label$96
	$26 = [0]
	$24 = [13216]
	$35 = *($39 + [416])
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$95
	if ( $17 ){ goto $label$93 }
	
.LABEL $label$94
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$93
	$30 = *($0)
	if ( ($30 & [32]) ){ goto $label$127 }
	CALL __fwritex($19, $20, $0)
	$30 = *($0)
	
.LABEL $label$127
	if ( ($30 & [32]) ){ goto $label$128 }
	$30 = uint_32(($29 & [32]) >> [5])
	CALL __fwritex(( ( [13312] ? [13328] : $30 ) ? ( [13280] ? [13296] : $30 ) : $16 ), [3], $0)
	
.LABEL $label$128
	if ( ((int_32)($18 & [73728]) != (int_32)[8192]) ){ goto $label$129 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$129 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$131 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$132:
	if ( (($30 & [1]) == 0) ){ goto $label$133 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$133
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$132 }
	if ( $14 ){ goto $label$129 }
	$31 = ($31 & [255])
	goto $label$130 
	
.LABEL $label$131
	if ( $17 ){ goto $label$129 }
	
.LABEL $label$130
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$129
	$30 = ( $15 ? $37 : ((int_32)$15 > (int_32)$37) )
	goto $label$50 
	
.LABEL $label$92
	$35 = (int_64)
	*($39 + [416]) = $35((int_64)0 - $35))
	$26 = [1]
	$24 = [13216]
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$91
	$18 = $31
	$36 = $30
	if ( (*($14) == 0) ){ goto $label$79 }
	goto $label$15 
	
.LABEL $label$90
	$31 = *($39 + [748])
	
.LABEL $label$89
	$28 = ( [6] ? $36 : $30 )
	$22 = ( ($39 + [752]) ? $9 : ((int_32)$31 < (int_32)[0]) )
	$36 = $22
	
.LOOP $label$134:
	$30 = CALL __fixunstfsi($35, $23)
	CALL __floatunsitf(($39 + [272]), $30)
	CALL __subtf3(($39 + [256]), $35, $23, *($39 + [272]), *((($39 + [272]) + [8])))
	CALL __multf3(($39 + [240]), *($39 + [256]), *((($39 + [256]) + [8])), (int_64)0, (int_64)4619810130798575616)
	*($36) = $30
	$36 = ($36 + [4])
	$23 = *((($39 + [240]) + [8]))
	$35 = *($39 + [240])
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$134 }
	if ( ((int_32)$31 < (int_32)[1]) ){ goto $label$137 }
	$17 = $22
	
.LOOP $label$138:
	$14 = ( $31 ? [29] : ((int_32)$31 < (int_32)[29]) )
	$30 = ($36 + [-4])
	if ( ($30 <= $17) ){ goto $label$139 }
	$23 = (CASTING uint_64)(uint_32 $14)
	$35 = (int_64)0
	
.LOOP $label$140:
	$35 = ((int_64)((int_64)*($30) << (int_64)$23) + (int_64)((int_64)$35 & (int_64)4294967295))
	*($30) = ((uint_64)$35 % (uint_64)(int_64)1000000000)
	$35 = ((uint_64)$35 / (uint_64)(int_64)1000000000)
	$30 = ($30 + [-4])
	if ( ((uint_32)$30 >= (uint_32)$17) ){ goto $label$140 }
	$30 = (CASTING uint_32)(uint_64 $35)
	if ( ($30 == 0) ){ goto $label$139 }
	*(($17 = ($17 + [-4]))) = $30
	
.LABEL $label$139
	
.LOOP $label$142:
	$30 = $36
	if ( ((uint_32)$30 <= (uint_32)$17) ){ goto $label$141 }
	$36 = ($30 + [-4])
	if ( (*($36) == 0) ){ goto $label$142 }
	
.LABEL $label$141
	$36 = $30
	$31 = ($31 - $14)
	if ( ((int_32)$31 > (int_32)[0]) ){ goto $label$138 }
	*($39 + [748]) = $31
	if ( ((int_32)$31 > (int_32)[-1]) ){ goto $label$135 }
	goto $label$136 
	
.LABEL $label$137
	$30 = $36
	$17 = $22
	if ( ((int_32)$31 > (int_32)[-1]) ){ goto $label$135 }
	
.LABEL $label$136
	$24 = (((uint_32)($28 + [45]) / (uint_32)[9]) + [1])
	if ( ((int_32)$21 != (int_32)[102]) ){ goto $label$144 }
	$25 = ($22 + ($24 << [2]))
	
.LOOP $label$145:
	$36 = ([0] - $31)
	$16 = ( $36 ? [9] : ((int_32)$36 < (int_32)[9]) )
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$147 }
	$27 = uint_32([1000000000] >> $16)
	$26 = (([1] << $16) + [-1])
	$14 = [0]
	$36 = $17
	
.LOOP $label$148:
	$37 = *($36)
	*($36) = (uint_32($37 >> $16) + $14)
	$14 = ((int_32)($37 & $26) * (int_32)$27)
	$36 = ($36 + [4])
	if ( ($36 <= $30) ){ goto $label$148 }
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	if ( ($14 == 0) ){ goto $label$146 }
	*($30) = $14
	$30 = ($30 + [4])
	goto $label$146 
	
.LABEL $label$147
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	
.LABEL $label$146
	$30 = ( $25 ? $30 : ((int_32)int_32(($30 - $22) >> [2]) > (int_32)$24) )
	$31 = ($16 + $31)
	if ( ((int_32)$31 < (int_32)[0]) ){ goto $label$145 }
	goto $label$143 
	
.LABEL $label$144
	
.LOOP $label$149:
	$36 = ([0] - $31)
	$16 = ( $36 ? [9] : ((int_32)$36 < (int_32)[9]) )
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$151 }
	$27 = uint_32([1000000000] >> $16)
	$26 = (([1] << $16) + [-1])
	$14 = [0]
	$36 = $17
	
.LOOP $label$152:
	$37 = *($36)
	*($36) = (uint_32($37 >> $16) + $14)
	$14 = ((int_32)($37 & $26) * (int_32)$27)
	$36 = ($36 + [4])
	if ( ($36 <= $30) ){ goto $label$152 }
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	if ( ($14 == 0) ){ goto $label$150 }
	*($30) = $14
	$30 = ($30 + [4])
	goto $label$150 
	
.LABEL $label$151
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	
.LABEL $label$150
	$30 = ( ($17 + ($24 << [2])) ? $30 : ((int_32)int_32(($30 - $17) >> [2]) > (int_32)$24) )
	$31 = ($16 + $31)
	if ( ((int_32)$31 < (int_32)[0]) ){ goto $label$149 }
	
.LABEL $label$143
	*($39 + [748]) = $31
	
.LABEL $label$135
	$36 = [0]
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$153 }
	$36 = ((int_32)int_32(($22 - $17) >> [2]) * (int_32)[9])
	$37 = *($17)
	if ( ($37 <= [10]) ){ goto $label$153 }
	$14 = [10]
	
.LOOP $label$154:
	$36 = ($36 + [1])
	$14 = ((int_32)$14 * (int_32)[10])
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$154 }
	
.LABEL $label$153
	$16 = ((int_32)$21 == (int_32)[103])
	$14 = (($28 - ( $36 ? [0] : ((int_32)$21 != (int_32)[102]) )) - (((int_32)$28 != (int_32)[0]) & $16))
	if ( ((int_32)$14 >= (int_32)(((int_32)int_32(($30 - $22) >> [2]) * (int_32)[9]) + [-9])) ){ goto $label$155 }
	$37 = ($14 + [147456])
	$24 = ($22 + (((int_32)$37 / (int_32)[9]) << [2]))
	$31 = ($24 + [-65532])
	$14 = [10]
	$37 = ((int_32)$37 % (int_32)[9])
	if ( ((int_32)($37 + [1]) > (int_32)[8]) ){ goto $label$156 }
	$37 = ([8] - $37)
	$14 = [10]
	
.LOOP $label$157:
	$14 = ((int_32)$14 * (int_32)[10])
	$37 = ($37 + [-1])
	if ( $37 ){ goto $label$157 }
	
.LABEL $label$156
	$27 = *($31)
	$37 = ((uint_32)$27 % (uint_32)$14)
	$26 = ($31 + [4])
	if ( ((int_32)$26 != (int_32)$30) ){ goto $label$159 }
	if ( ($37 == 0) ){ goto $label$158 }
	
.LABEL $label$159
	if ( (((uint_32)$27 / (uint_32)$14) & [1]) ){ goto $label$161 }
	$35 = (int_64)4643211215818981376
	$23 = (int_64)0
	if ( ((uint_32)$31 <= (uint_32)$17) ){ goto $label$160 }
	if ( ((int_32)$14 != (int_32)[1000000000]) ){ goto $label$160 }
	if ( ((*(($31 + [-4])) & [1]) == 0) ){ goto $label$160 }
	
.LABEL $label$161
	$35 = (int_64)4643211215818981376
	$23 = (int_64)1
	
.LABEL $label$160
	$34 = (int_64)4611123068473966592
	$25 = ((int_32)$14 / (int_32)[2])
	if ( ($37 <= $25) ){ goto $label$162 }
	$34 = ( ( (int_64)4611404543450677248 ? (int_64)4611545280939032576 : ((int_32)$37 == (int_32)$25) ) ? (int_64)4611545280939032576 : ((int_32)$26 == (int_32)$30) )
	
.LABEL $label$162
	if ( ($20 == 0) ){ goto $label$163 }
	if ( ((int_32)*($19) != (int_32)[45]) ){ goto $label$163 }
	$34 = ((int_64)$34 ^ (int_64)-9223372036854775808)
	$35 = ((int_64)$35 ^ (int_64)-9223372036854775808)
	
.LABEL $label$163
	CALL __addtf3(($39 + [224]), $23, $35, (int_64)0, $34)
	$37 = ($27 - $37)
	*($31) = $37
	if ( (CALL __eqtf2(*($39 + [224]), *((($39 + [224]) + [8])), $23, $35) == 0) ){ goto $label$158 }
	$36 = ($37 + $14)
	*($31) = $36
	if ( ($36 <= [1000000000]) ){ goto $label$164 }
	$36 = ($24 + [-65536])
	
.LOOP $label$165:
	*(($36 + [4])) = [0]
	if ( ((uint_32)$36 >= (uint_32)$17) ){ goto $label$166 }
	*(($17 = ($17 + [-4]))) = [0]
	
.LABEL $label$166
	$14 = (*($36) + [1])
	*($36) = $14
	$36 = ($36 + [-4])
	if ( ((uint_32)$14 > (uint_32)[999999999]) ){ goto $label$165 }
	$31 = ($36 + [4])
	
.LABEL $label$164
	$36 = ((int_32)int_32(($22 - $17) >> [2]) * (int_32)[9])
	$37 = *($17)
	if ( ($37 <= [10]) ){ goto $label$158 }
	$14 = [10]
	
.LOOP $label$167:
	$36 = ($36 + [1])
	$14 = ((int_32)$14 * (int_32)[10])
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$167 }
	
.LABEL $label$158
	$14 = ($31 + [4])
	$30 = ( $14 ? $30 : ((uint_32)$30 > (uint_32)$14) )
	
.LABEL $label$155
	$31 = ([0] - $36)
	
.LOOP $label$171:
	$14 = $30
	if ( ((uint_32)$14 <= (uint_32)$17) ){ goto $label$170 }
	$30 = ($14 + [-4])
	if ( (*($30) == 0) ){ goto $label$171 }
	$27 = [1]
	if ( $16 ){ goto $label$169 }
	goto $label$168 
	
.LABEL $label$170
	$27 = [0]
	if ( ($16 == 0) ){ goto $label$168 }
	
.LABEL $label$169
	$30 = (($28 == 0) + $28)
	if ( ((int_32)$30 <= (int_32)$36) ){ goto $label$76 }
	if ( ((int_32)$36 < (int_32)[-4]) ){ goto $label$76 }
	$29 = ($29 + [-1])
	$28 = (($30 + [-1]) - $36)
	$16 = ($18 & [8])
	if ( ($16 == 0) ){ goto $label$75 }
	goto $label$68 
	
.LABEL $label$168
	$16 = ($18 & [8])
	goto $label$68 
	
.LABEL $label$88
	$26 = [1]
	$24 = [13217]
	if ( (uint_64)($35 <= (int_64)4294967296) ){ goto $label$86 }
	
.LABEL $label$87
	$37 = $5
	
.LOOP $label$172:
	*(($37 = ($37 + [-1]))) = ((int_64)((uint_64)$35 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ((uint_64)$35 > (uint_64)(int_64)42949672959)
	$23 = ((uint_64)$35 / (uint_64)(int_64)10)
	$35 = $23
	if ( $30 ){ goto $label$172 }
	goto $label$85 
	
.LABEL $label$86
	$23 = $35
	$37 = $5
	
.LABEL $label$85
	$30 = (CASTING uint_32)(uint_64 $23)
	if ( ($30 == 0) ){ goto $label$83 }
	
.LOOP $label$173:
	*(($37 = ($37 + [-1]))) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$17 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $17 ){ goto $label$173 }
	goto $label$83 
	
.LABEL $label$84
	$30 = ($5 - $37)
	$24 = ( [13216] ? [13221] : ((int_32)$36 > (int_32)$30) )
	$26 = ((int_32)$36 <= (int_32)$30)
	
.LABEL $label$83
	if ( ($16 == 0) ){ goto $label$81 }
	
.LABEL $label$82
	if ( ((int_32)$36 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$81
	$18 = ( ($18 & [-65537]) ? $18 : ((int_32)$36 > (int_32)[-1]) )
	$35 = *($39 + [416])
	if ( $36 ){ goto $label$174 }
	if ( ((int_64)($35 == 0) == 0) ){ goto $label$174 }
	$37 = $5
	$14 = $5
	$36 = [0]
	goto $label$79 
	
.LABEL $label$174
	$30 = ((int_64)($35 == 0) + ($5 - $37))
	$36 = ( $36 ? $30 : ((int_32)$36 > (int_32)$30) )
	
.LABEL $label$80
	$14 = $5
	
.LABEL $label$79
	$29 = ($14 - $37)
	$28 = ( $29 ? $36 : ((int_32)$36 < (int_32)$29) )
	if ( ((int_32)$28 > (int_32)([2147483647] - $26)) ){ goto $label$15 }
	$27 = ($26 + $28)
	$30 = ( $27 ? $15 : ((int_32)$15 < (int_32)$27) )
	if ( ((int_32)$30 > (int_32)$13) ){ goto $label$15 }
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$175 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$175 }
	$17 = ($22 <= [256])
	$22 = ($30 - $27)
	CALL memset(($39 + [432]), [32], ( $22 ? [256] : $17 ))
	$31 = *($0)
	$14 = ($31 & [32])
	if ( $17 ){ goto $label$177 }
	$17 = ($14 == 0)
	$14 = $22
	
.LOOP $label$178:
	if ( (($17 & [1]) == 0) ){ goto $label$179 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$31 = *($0)
	
.LABEL $label$179
	$16 = ($31 & [32])
	$17 = ($16 == 0)
	$14 = ($14 + [-256])
	if ( ((uint_32)$14 > (uint_32)[255]) ){ goto $label$178 }
	if ( $16 ){ goto $label$175 }
	$22 = ($22 & [255])
	goto $label$176 
	
.LABEL $label$177
	if ( $14 ){ goto $label$175 }
	
.LABEL $label$176
	CALL __fwritex(($39 + [432]), $22, $0)
	
.LABEL $label$175
	if ( (*($0) & [32]) ){ goto $label$180 }
	CALL __fwritex($24, $26, $0)
	
.LABEL $label$180
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$181 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$181 }
	$17 = ($26 <= [256])
	$26 = ($30 - $27)
	CALL memset(($39 + [432]), [48], ( $26 ? [256] : $17 ))
	$31 = *($0)
	$14 = ($31 & [32])
	if ( $17 ){ goto $label$183 }
	$17 = ($14 == 0)
	$14 = $26
	
.LOOP $label$184:
	if ( (($17 & [1]) == 0) ){ goto $label$185 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$31 = *($0)
	
.LABEL $label$185
	$16 = ($31 & [32])
	$17 = ($16 == 0)
	$14 = ($14 + [-256])
	if ( ((uint_32)$14 > (uint_32)[255]) ){ goto $label$184 }
	if ( $16 ){ goto $label$181 }
	$26 = ($26 & [255])
	goto $label$182 
	
.LABEL $label$183
	if ( $14 ){ goto $label$181 }
	
.LABEL $label$182
	CALL __fwritex(($39 + [432]), $26, $0)
	
.LABEL $label$181
	if ( ((int_32)$29 >= (int_32)$36) ){ goto $label$186 }
	$17 = ($16 <= [256])
	$16 = ($28 - $29)
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$188 }
	$17 = ($36 == 0)
	$36 = $16
	
.LOOP $label$189:
	if ( (($17 & [1]) == 0) ){ goto $label$190 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$190
	$31 = ($14 & [32])
	$17 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$189 }
	if ( $31 ){ goto $label$186 }
	$16 = ($16 & [255])
	goto $label$187 
	
.LABEL $label$188
	if ( $36 ){ goto $label$186 }
	
.LABEL $label$187
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$186
	if ( (*($0) & [32]) ){ goto $label$191 }
	CALL __fwritex($37, $29, $0)
	
.LABEL $label$191
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$24 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$24 }
	$17 = ($37 <= [256])
	$37 = ($30 - $27)
	CALL memset(($39 + [432]), [32], ( $37 ? [256] : $17 ))
	$36 = *($0)
	$15 = ($36 & [32])
	if ( $17 ){ goto $label$193 }
	$17 = ($15 == 0)
	$15 = $37
	
.LOOP $label$194:
	if ( (($17 & [1]) == 0) ){ goto $label$195 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$195
	$14 = ($36 & [32])
	$17 = ($14 == 0)
	$15 = ($15 + [-256])
	if ( ((uint_32)$15 > (uint_32)[255]) ){ goto $label$194 }
	if ( $14 ){ goto $label$24 }
	$37 = ($37 & [255])
	goto $label$192 
	
.LABEL $label$193
	if ( $15 ){ goto $label$24 }
	
.LABEL $label$192
	CALL __fwritex(($39 + [432]), $37, $0)
	goto $label$24 
	
.LABEL $label$78
	CALL __addtf3(($39 + [192]), $35, $23, $33, $34)
	CALL __subtf3(($39 + [176]), *($39 + [192]), *((($39 + [192]) + [8])), $33, $34)
	$23 = *((($39 + [176]) + [8]))
	$35 = *($39 + [176])
	
.LABEL $label$77
	$30 = int_32($31 >> [31])
	$31 = *($39 + [748])
	$17 = ((int_32)($31 + $30) ^ (int_32)$30)
	$34 = (CASTING int_64)(int_32 $17)
	$30 = [0]
	if ( ((int_32)$17 <= (int_32)[-1]) ){ goto $label$198 }
	$17 = (CASTING uint_32)(uint_64 $34)
	if ( $17 ){ goto $label$197 }
	goto $label$196 
	
.LABEL $label$198
	$30 = [0]
	
.LOOP $label$199:
	*(($12 + $30)) = ((int_64)((uint_64)$34 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ($30 + [-1])
	$17 = ((uint_64)$34 > (uint_64)(int_64)42949672959)
	$33 = ((uint_64)$34 / (uint_64)(int_64)10)
	$34 = $33
	if ( $17 ){ goto $label$199 }
	$17 = (CASTING uint_32)(uint_64 $33)
	if ( ($17 == 0) ){ goto $label$196 }
	
.LABEL $label$197
	
.LOOP $label$200:
	*(((($39 + [692]) + $30) + [11])) = (((uint_32)$17 % (uint_32)[10]) | [48])
	$30 = ($30 + [-1])
	$14 = ((uint_32)$17 > (uint_32)[9])
	$17 = ((uint_32)$17 / (uint_32)[10])
	if ( $14 ){ goto $label$200 }
	
.LABEL $label$196
	$17 = ($7 + $30)
	if ( $30 ){ goto $label$201 }
	*(($17 = ($17 + [-1]))) = [48]
	
.LABEL $label$201
	$16 = ($20 | [2])
	*(($27 = ($17 + [-2]))) = ($29 + [15])
	*(($17 + [-1])) = ((uint_32($31 >> [30]) & [2]) + [43])
	if ( ($18 & [8]) ){ goto $label$202 }
	if ( ((int_32)$36 < (int_32)[1]) ){ goto $label$71 }
	$30 = ($39 + [704])
	
.LOOP $label$203:
	$17 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [80]), $17)
	CALL __subtf3(($39 + [64]), $35, $23, *($39 + [80]), *((($39 + [80]) + [8])))
	CALL __multf3(($39 + [48]), *($39 + [64]), *((($39 + [64]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($30) = (*(($17 + [13200])) | $37)
	$23 = *((($39 + [48]) + [8]))
	$35 = *($39 + [48])
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$204 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$204
	$30 = $17
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$203 }
	goto $label$70 
	
.LABEL $label$202
	$30 = ($39 + [704])
	
.LOOP $label$205:
	$17 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [128]), $17)
	CALL __subtf3(($39 + [112]), $35, $23, *($39 + [128]), *((($39 + [128]) + [8])))
	CALL __multf3(($39 + [96]), *($39 + [112]), *((($39 + [112]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($30) = (*(($17 + [13200])) | $37)
	$23 = *((($39 + [96]) + [8]))
	$35 = *($39 + [96])
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$206 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$206
	$30 = $17
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$205 }
	goto $label$70 
	
.LABEL $label$76
	$28 = ($30 + [-1])
	$29 = ($29 + [-2])
	$16 = ($18 & [8])
	if ( $16 ){ goto $label$68 }
	
.LABEL $label$75
	$30 = [9]
	if ( ($27 == 0) ){ goto $label$207 }
	$16 = *(($14 + [-4]))
	if ( ($16 == 0) ){ goto $label$207 }
	$30 = [0]
	if ( ((uint_32)$16 % (uint_32)[10]) ){ goto $label$207 }
	$37 = [10]
	$30 = [0]
	
.LOOP $label$208:
	$30 = ($30 + [1])
	$37 = ((int_32)$37 * (int_32)[10])
	if ( (((uint_32)$16 % (uint_32)$37) == 0) ){ goto $label$208 }
	
.LABEL $label$207
	$37 = (((int_32)int_32(($14 - $22) >> [2]) * (int_32)[9]) + [-9])
	if ( ((int_32)($29 | [32]) != (int_32)[102]) ){ goto $label$69 }
	$16 = [0]
	$30 = ($37 - $30)
	$30 = ( $30 ? [0] : ((int_32)$30 > (int_32)[0]) )
	$28 = ( $28 ? $30 : ((int_32)$28 < (int_32)$30) )
	goto $label$68 
	
.LABEL $label$74
	$30 = [0]
	$16 = ($18 & [73728])
	if ( $16 ){ goto $label$72 }
	
.LABEL $label$73
	if ( ((int_32)$15 <= (int_32)$30) ){ goto $label$72 }
	$17 = ($27 <= [256])
	$27 = ($15 - $30)
	CALL memset(($39 + [432]), [32], ( $27 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$210 }
	$17 = ($36 == 0)
	$36 = $27
	
.LOOP $label$211:
	if ( (($17 & [1]) == 0) ){ goto $label$212 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$212
	$31 = ($14 & [32])
	$17 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$211 }
	if ( $31 ){ goto $label$72 }
	$27 = ($27 & [255])
	goto $label$209 
	
.LABEL $label$210
	if ( $36 ){ goto $label$72 }
	
.LABEL $label$209
	CALL __fwritex(($39 + [432]), $27, $0)
	
.LABEL $label$72
	if ( ($30 == 0) ){ goto $label$213 }
	$17 = [0]
	
.LOOP $label$214:
	$36 = *($37)
	if ( ($36 == 0) ){ goto $label$213 }
	$36 = CALL wctomb(($39 + [340]), $36)
	$17 = ($36 + $17)
	if ( ((uint_32)$17 > (uint_32)$30) ){ goto $label$213 }
	if ( (*($0) & [32]) ){ goto $label$215 }
	CALL __fwritex(($39 + [340]), $36, $0)
	
.LABEL $label$215
	$37 = ($37 + [4])
	if ( ($17 <= $30) ){ goto $label$214 }
	
.LABEL $label$213
	if ( ((int_32)$16 != (int_32)[8192]) ){ goto $label$216 }
	if ( ((int_32)$15 <= (int_32)$30) ){ goto $label$216 }
	$17 = ($31 <= [256])
	$31 = ($15 - $30)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$218 }
	$17 = ($36 == 0)
	$36 = $31
	
.LOOP $label$219:
	if ( (($17 & [1]) == 0) ){ goto $label$220 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$220
	$37 = ($14 & [32])
	$17 = ($37 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$219 }
	if ( $37 ){ goto $label$216 }
	$31 = ($31 & [255])
	goto $label$217 
	
.LABEL $label$218
	if ( $36 ){ goto $label$216 }
	
.LABEL $label$217
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$216
	$30 = ( $15 ? $30 : ((int_32)$15 > (int_32)$30) )
	goto $label$24 
	
.LABEL $label$71
	$17 = ($39 + [704])
	
.LOOP $label$221:
	$14 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [32]), $14)
	CALL __subtf3(($39 + [16]), $35, $23, *($39 + [32]), *((($39 + [32]) + [8])))
	CALL __multf3($39, *($39 + [16]), *((($39 + [16]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*(($30 = $17)) = (*(($14 + [13200])) | $37)
	$23 = *(($39 + [8]))
	$35 = *($39)
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$222 }
	if ( (CALL __eqtf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$222 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$222
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$221 }
	
.LABEL $label$70
	$30 = [-1]
	$31 = ($7 - $27)
	if ( ((int_32)(([2147483645] - $16) - $31) < (int_32)$36) ){ goto $label$50 }
	$26 = ($17 - ($39 + [704]))
	$29 = ( ( ($36 + [2]) ? $26 : ((int_32)($8 + $17) < (int_32)$36) ) ? $26 : $36 )
	$37 = (($31 + $16) + $29)
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$65 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$65 }
	$30 = ($28 <= [256])
	$28 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $28 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$67 }
	$30 = ($17 == 0)
	$17 = $28
	
.LOOP $label$223:
	if ( (($30 & [1]) == 0) ){ goto $label$224 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$224
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$223 }
	if ( $14 ){ goto $label$65 }
	$28 = ($28 & [255])
	goto $label$66 
	
.LABEL $label$69
	$16 = [0]
	$30 = (($37 + $36) - $30)
	$30 = ( $30 ? [0] : ((int_32)$30 > (int_32)[0]) )
	$28 = ( $28 ? $30 : ((int_32)$28 < (int_32)$30) )
	
.LABEL $label$68
	$30 = [-1]
	$24 = ($28 | $16)
	$37 = ((int_32)$24 != (int_32)[0])
	if ( ((int_32)$28 > (int_32)([2147483646] - $37)) ){ goto $label$50 }
	$26 = (($28 + $37) + [1])
	$21 = ((int_32)($29 | [32]) != (int_32)[102])
	if ( $21 ){ goto $label$225 }
	if ( ((int_32)$36 > (int_32)([2147483647] - $26)) ){ goto $label$50 }
	$36 = ( $36 ? [0] : ((int_32)$36 > (int_32)[0]) )
	goto $label$61 
	
.LABEL $label$225
	$30 = ( $31 ? $36 : ((int_32)$36 < (int_32)[0]) )
	$35 = (CASTING int_64)(int_32 $30)
	if ( ((int_32)$30 <= (int_32)[-1]) ){ goto $label$64 }
	$37 = $7
	$30 = (CASTING uint_32)(uint_64 $35)
	if ( $30 ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$67
	if ( $17 ){ goto $label$65 }
	
.LABEL $label$66
	CALL __fwritex(($39 + [432]), $28, $0)
	
.LABEL $label$65
	if ( (*($0) & [32]) ){ goto $label$226 }
	CALL __fwritex($24, $16, $0)
	
.LABEL $label$226
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$227 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$227 }
	$30 = ($16 <= [256])
	$16 = ($15 - $37)
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$229 }
	$30 = ($17 == 0)
	$17 = $16
	
.LOOP $label$230:
	if ( (($30 & [1]) == 0) ){ goto $label$231 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$231
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$230 }
	if ( $14 ){ goto $label$227 }
	$16 = ($16 & [255])
	goto $label$228 
	
.LABEL $label$229
	if ( $17 ){ goto $label$227 }
	
.LABEL $label$228
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$227
	if ( (*($0) & [32]) ){ goto $label$232 }
	CALL __fwritex(($39 + [704]), $26, $0)
	
.LABEL $label$232
	$16 = ($29 - $26)
	if ( ((int_32)$16 < (int_32)[1]) ){ goto $label$233 }
	$30 = ($16 <= [256])
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$235 }
	$30 = ($17 == 0)
	$17 = $16
	
.LOOP $label$236:
	if ( (($30 & [1]) == 0) ){ goto $label$237 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$237
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$236 }
	if ( $14 ){ goto $label$233 }
	$16 = ($16 & [255])
	goto $label$234 
	
.LABEL $label$235
	if ( $17 ){ goto $label$233 }
	
.LABEL $label$234
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$233
	if ( (*($0) & [32]) ){ goto $label$238 }
	CALL __fwritex($27, $31, $0)
	
.LABEL $label$238
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$239 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$239 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$241 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$242:
	if ( (($30 & [1]) == 0) ){ goto $label$243 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$243
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$242 }
	if ( $14 ){ goto $label$239 }
	$31 = ($31 & [255])
	goto $label$240 
	
.LABEL $label$241
	if ( $17 ){ goto $label$239 }
	
.LABEL $label$240
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$239
	$30 = ( $15 ? $37 : ((int_32)$15 > (int_32)$37) )
	goto $label$50 
	
.LABEL $label$64
	$37 = $7
	
.LOOP $label$244:
	*(($37 = ($37 + [-1]))) = ((int_64)((uint_64)$35 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ((uint_64)$35 > (uint_64)(int_64)42949672959)
	$23 = ((uint_64)$35 / (uint_64)(int_64)10)
	$35 = $23
	if ( $30 ){ goto $label$244 }
	$30 = (CASTING uint_32)(uint_64 $23)
	if ( ($30 == 0) ){ goto $label$62 }
	
.LABEL $label$63
	
.LOOP $label$245:
	*(($37 = ($37 + [-1]))) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$31 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $31 ){ goto $label$245 }
	
.LABEL $label$62
	if ( ((int_32)($7 - $37) > (int_32)[1]) ){ goto $label$246 }
	$30 = ($37 + [-1])
	
.LOOP $label$247:
	*($30) = [48]
	$37 = ($7 - $30)
	$31 = ($30 + [-1])
	$30 = $31
	if ( ((int_32)$37 < (int_32)[2]) ){ goto $label$247 }
	$37 = ($31 + [1])
	
.LABEL $label$246
	*(($25 = ($37 + [-2]))) = $29
	$30 = [-1]
	*(($37 + [-1])) = ((uint_32($36 >> [30]) & [2]) + [43])
	$36 = ($7 - $25)
	if ( ((int_32)$36 > (int_32)([2147483647] - $26)) ){ goto $label$50 }
	
.LABEL $label$61
	$30 = [-1]
	$36 = ($36 + $26)
	if ( ((int_32)$36 > (int_32)((int_32)$20 ^ (int_32)[2147483647])) ){ goto $label$50 }
	$26 = ($36 + $20)
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$51 }
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$51 }
	$30 = ($29 <= [256])
	$29 = ($15 - $26)
	CALL memset(($39 + [432]), [32], ( $29 ? [256] : $30 ))
	$37 = *($0)
	$36 = ($37 & [32])
	if ( $30 ){ goto $label$53 }
	$30 = ($36 == 0)
	$36 = $29
	
.LOOP $label$248:
	if ( (($30 & [1]) == 0) ){ goto $label$249 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$37 = *($0)
	
.LABEL $label$249
	$31 = ($37 & [32])
	$30 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$248 }
	if ( $31 ){ goto $label$51 }
	$29 = ($29 & [255])
	goto $label$52 
	
.LABEL $label$60
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$59
	*(*($39 + [416])) = (CASTING int_64)(int_32 $38)
	$30 = [0]
	goto $label$24 
	
.LABEL $label$58
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$57
	*(*($39 + [416])) = $38
	
.LABEL $label$56
	$30 = [0]
	goto $label$24 
	
.LABEL $label$55
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$54
	*(*($39 + [416])) = (CASTING int_64)(int_32 $38)
	$30 = [0]
	goto $label$24 
	
.LABEL $label$53
	if ( $36 ){ goto $label$51 }
	
.LABEL $label$52
	CALL __fwritex(($39 + [432]), $29, $0)
	
.LABEL $label$51
	if ( (*($0) & [32]) ){ goto $label$250 }
	CALL __fwritex($19, $20, $0)
	
.LABEL $label$250
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$251 }
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$251 }
	$30 = ($29 <= [256])
	$29 = ($15 - $26)
	CALL memset(($39 + [432]), [48], ( $29 ? [256] : $30 ))
	$37 = *($0)
	$36 = ($37 & [32])
	if ( $30 ){ goto $label$253 }
	$30 = ($36 == 0)
	$36 = $29
	
.LOOP $label$254:
	if ( (($30 & [1]) == 0) ){ goto $label$255 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$37 = *($0)
	
.LABEL $label$255
	$31 = ($37 & [32])
	$30 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$254 }
	if ( $31 ){ goto $label$251 }
	$29 = ($29 & [255])
	goto $label$252 
	
.LABEL $label$253
	if ( $36 ){ goto $label$251 }
	
.LABEL $label$252
	CALL __fwritex(($39 + [432]), $29, $0)
	
.LABEL $label$251
	if ( $21 ){ goto $label$266 }
	$31 = ( $22 ? $17 : ((uint_32)$17 > (uint_32)$22) )
	$37 = $31
	
.LOOP $label$267:
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$269 }
	$17 = [0]
	
.LOOP $label$270:
	*(($11 + $17)) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$17 = ($17 + [-1])
	$36 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $36 ){ goto $label$270 }
	goto $label$268 
	
.LABEL $label$269
	$17 = [0]
	
.LABEL $label$268
	$30 = ($10 + $17)
	if ( ((int_32)$37 == (int_32)$31) ){ goto $label$272 }
	if ( ((uint_32)$30 <= (uint_32)($39 + [704])) ){ goto $label$271 }
	
.LOOP $label$273:
	*(($30 = ($30 + [-1]))) = [48]
	if ( ((uint_32)$30 > (uint_32)($39 + [704])) ){ goto $label$273 }
	$30 = ($39 + [704])
	goto $label$271 
	
.LABEL $label$272
	if ( $17 ){ goto $label$271 }
	*(($30 = ($30 + [-1]))) = [48]
	
.LABEL $label$271
	if ( (*($0) & [32]) ){ goto $label$274 }
	CALL __fwritex($30, ($10 - $30), $0)
	
.LABEL $label$274
	$37 = ($37 + [4])
	if ( ((uint_32)$37 <= (uint_32)$22) ){ goto $label$267 }
	if ( ($24 == 0) ){ goto $label$275 }
	if ( (*($0) & [32]) ){ goto $label$275 }
	CALL __fwritex([13344], [1], $0)
	
.LABEL $label$275
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$265 }
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$264 }
	
.LOOP $label$276:
	$30 = $10
	$17 = *($37)
	if ( ($17 == 0) ){ goto $label$278 }
	$30 = $10
	
.LOOP $label$279:
	*(($30 = ($30 + [-1]))) = (((uint_32)$17 % (uint_32)[10]) | [48])
	$36 = ((uint_32)$17 > (uint_32)[9])
	$17 = ((uint_32)$17 / (uint_32)[10])
	if ( $36 ){ goto $label$279 }
	if ( ((uint_32)$30 <= (uint_32)($39 + [704])) ){ goto $label$277 }
	
.LABEL $label$278
	
.LOOP $label$280:
	*(($30 = ($30 + [-1]))) = [48]
	if ( ((uint_32)$30 > (uint_32)($39 + [704])) ){ goto $label$280 }
	
.LABEL $label$277
	if ( (*($0) & [32]) ){ goto $label$281 }
	CALL __fwritex($30, ( $28 ? [9] : ((int_32)$28 < (int_32)[9]) ), $0)
	
.LABEL $label$281
	$30 = ($28 + [-9])
	if ( ((int_32)$28 < (int_32)[10]) ){ goto $label$263 }
	$28 = $30
	$37 = ($37 + [4])
	if ( ($37 <= $14) ){ goto $label$276 }
	goto $label$263 
	
.LABEL $label$266
	if ( ((int_32)$28 <= (int_32)[-1]) ){ goto $label$259 }
	$31 = ( $14 ? ($17 + [4]) : $27 )
	if ( ($16 == 0) ){ goto $label$261 }
	$37 = $17
	
.LOOP $label$282:
	$14 = $10
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$284 }
	$36 = [0]
	
.LOOP $label$285:
	*(((($39 + [704]) + $36) + [8])) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$36 = ($36 + [-1])
	$14 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $14 ){ goto $label$285 }
	$14 = ((($39 + [704]) + $36) + [9])
	if ( $36 ){ goto $label$283 }
	
.LABEL $label$284
	*(($14 = ($14 + [-1]))) = [48]
	
.LABEL $label$283
	if ( ((int_32)$37 == (int_32)$17) ){ goto $label$287 }
	if ( ((uint_32)$14 <= (uint_32)($39 + [704])) ){ goto $label$286 }
	
.LOOP $label$288:
	*(($14 = ($14 + [-1]))) = [48]
	if ( ((uint_32)$14 > (uint_32)($39 + [704])) ){ goto $label$288 }
	goto $label$286 
	
.LABEL $label$287
	$30 = *($0)
	if ( ($30 & [32]) ){ goto $label$289 }
	CALL __fwritex($14, [1], $0)
	$30 = *($0)
	
.LABEL $label$289
	$14 = ($14 + [1])
	if ( ($30 & [32]) ){ goto $label$286 }
	CALL __fwritex([13344], [1], $0)
	
.LABEL $label$286
	$30 = ($10 - $14)
	if ( (*($0) & [32]) ){ goto $label$290 }
	CALL __fwritex($14, ( $30 ? $28 : ((int_32)$28 > (int_32)$30) ), $0)
	
.LABEL $label$290
	$28 = ($28 - $30)
	$37 = ($37 + [4])
	if ( ((uint_32)$37 >= (uint_32)$31) ){ goto $label$260 }
	if ( ((int_32)$28 > (int_32)[-1]) ){ goto $label$282 }
	goto $label$260 
	
.LABEL $label$265
	$30 = $28
	if ( ((int_32)$30 >= (int_32)[1]) ){ goto $label$262 }
	goto $label$258 
	
.LABEL $label$264
	$30 = $28
	
.LABEL $label$263
	if ( ((int_32)$30 < (int_32)[1]) ){ goto $label$258 }
	
.LABEL $label$262
	$17 = ($30 <= [256])
	CALL memset(($39 + [432]), [48], ( $30 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$292 }
	$17 = ($36 == 0)
	$36 = $30
	
.LOOP $label$293:
	if ( (($17 & [1]) == 0) ){ goto $label$294 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$294
	$37 = ($14 & [32])
	$17 = ($37 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$293 }
	if ( $37 ){ goto $label$258 }
	$30 = ($30 & [255])
	goto $label$291 
	
.LABEL $label$292
	if ( $36 ){ goto $label$258 }
	
.LABEL $label$291
	CALL __fwritex(($39 + [432]), $30, $0)
	if ( ((int_32)$18 == (int_32)[8192]) ){ goto $label$257 }
	goto $label$256 
	
.LABEL $label$261
	$37 = $17
	
.LOOP $label$295:
	$14 = $10
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$297 }
	$36 = [0]
	
.LOOP $label$298:
	*(((($39 + [704]) + $36) + [8])) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$36 = ($36 + [-1])
	$14 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $14 ){ goto $label$298 }
	$14 = ((($39 + [704]) + $36) + [9])
	if ( $36 ){ goto $label$296 }
	
.LABEL $label$297
	*(($14 = ($14 + [-1]))) = [48]
	
.LABEL $label$296
	if ( ((int_32)$37 == (int_32)$17) ){ goto $label$300 }
	if ( ((uint_32)$14 <= (uint_32)($39 + [704])) ){ goto $label$299 }
	
.LOOP $label$301:
	*(($14 = ($14 + [-1]))) = [48]
	if ( ((uint_32)$14 > (uint_32)($39 + [704])) ){ goto $label$301 }
	goto $label$299 
	
.LABEL $label$300
	if ( (*($0) & [32]) ){ goto $label$302 }
	CALL __fwritex($14, [1], $0)
	
.LABEL $label$302
	$14 = ($14 + [1])
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$299 }
	if ( (*($0) & [32]) ){ goto $label$299 }
	CALL __fwritex([13344], [1], $0)
	
.LABEL $label$299
	$30 = ($10 - $14)
	if ( (*($0) & [32]) ){ goto $label$303 }
	CALL __fwritex($14, ( $30 ? $28 : ((int_32)$28 > (int_32)$30) ), $0)
	
.LABEL $label$303
	$28 = ($28 - $30)
	$37 = ($37 + [4])
	if ( ((uint_32)$37 >= (uint_32)$31) ){ goto $label$260 }
	if ( ((int_32)$28 > (int_32)[-1]) ){ goto $label$295 }
	
.LABEL $label$260
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$259 }
	$30 = ($28 <= [256])
	CALL memset(($39 + [432]), [48], ( $28 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$305 }
	$30 = ($17 == 0)
	$17 = $28
	
.LOOP $label$306:
	if ( (($30 & [1]) == 0) ){ goto $label$307 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$307
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$306 }
	if ( $14 ){ goto $label$259 }
	$28 = ($28 & [255])
	goto $label$304 
	
.LABEL $label$305
	if ( $17 ){ goto $label$259 }
	
.LABEL $label$304
	CALL __fwritex(($39 + [432]), $28, $0)
	
.LABEL $label$259
	if ( (*($0) & [32]) ){ goto $label$258 }
	CALL __fwritex($25, ($7 - $25), $0)
	
.LABEL $label$258
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$256 }
	
.LABEL $label$257
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$256 }
	$30 = ($37 <= [256])
	$37 = ($15 - $26)
	CALL memset(($39 + [432]), [32], ( $37 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$309 }
	$30 = ($17 == 0)
	$17 = $37
	
.LOOP $label$310:
	if ( (($30 & [1]) == 0) ){ goto $label$311 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$311
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$310 }
	if ( $14 ){ goto $label$256 }
	$37 = ($37 & [255])
	goto $label$308 
	
.LABEL $label$309
	if ( $17 ){ goto $label$256 }
	
.LABEL $label$308
	CALL __fwritex(($39 + [432]), $37, $0)
	
.LABEL $label$256
	$30 = ( $15 ? $26 : ((int_32)$15 > (int_32)$26) )
	
.LABEL $label$50
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$24
	if ( ((int_32)$30 <= (int_32)$13) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( $0 ){ goto $label$1 }
	if ( ($32 == 0) ){ goto $label$14 }
	$30 = [1]
	$1 = *($4 + [4])
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $312(($3 + [16]), $1, $2)
	$1 = *($4 + [8])
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $312(($3 + [32]), $1, $2)
	$1 = *($4 + [12])
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $312(($3 + [48]), $1, $2)
	$1 = *($4 + [16])
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $312(($3 + [64]), $1, $2)
	$1 = *($4 + [20])
	if ( ($1 == 0) ){ goto $label$9 }
	CALL $312(($3 + [80]), $1, $2)
	$1 = *($4 + [24])
	if ( ($1 == 0) ){ goto $label$8 }
	CALL $312(($3 + [96]), $1, $2)
	$1 = *($4 + [28])
	if ( ($1 == 0) ){ goto $label$7 }
	CALL $312(($3 + [112]), $1, $2)
	$1 = *($4 + [32])
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $312(($3 + [128]), $1, $2)
	$1 = *($4 + [36])
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $312(($3 + [144]), $1, $2)
	$38 = [1]
	goto $label$1 
	
.LABEL $label$15
	*(CALL __errno_location()) = [75]
	goto $label$2 
	
.LABEL $label$14
	$38 = [0]
	goto $label$1 
	
.LABEL $label$13
	$30 = [2]
	goto $label$4 
	
.LABEL $label$12
	$30 = [3]
	goto $label$4 
	
.LABEL $label$11
	$38 = [0]
	goto $label$1 
	
.LABEL $label$10
	$30 = [4]
	goto $label$4 
	
.LABEL $label$9
	$30 = [5]
	goto $label$4 
	
.LABEL $label$8
	$30 = [6]
	goto $label$4 
	
.LABEL $label$7
	$30 = [7]
	goto $label$4 
	
.LABEL $label$6
	$30 = [8]
	goto $label$4 
	
.LABEL $label$5
	$30 = [9]
	
.LABEL $label$4
	$1 = ($4 + ($30 << [2]))
	
.LOOP $label$312:
	if ( *($1) ){ goto $label$3 }
	$1 = ($1 + [4])
	$38 = [1]
	$30 = ($30 + [1])
	if ( ((uint_32)$30 <= (uint_32)[9]) ){ goto $label$312 }
	goto $label$1 
	
.LABEL $label$3
	*(CALL __errno_location()) = [22]
	
.LABEL $label$2
	$38 = [-1]
	
.LABEL $label$1
	*([0] + [4]) = ($39 + [8128])
	$30
	$30
	return $38
}

void .FUNC $282 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

void .FUNC _ZN6NiuNiu14_sendbonuspoolER9_maxstyleR14_st_globalinfoRN5eosio11multi_indexILy4229699935735382016E7betinfoJEEER11_st_gamectx (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [80])
	*([0] + [4]) = $10
	CALL _ZN6NiuNiu14_getconfiginfoEv(($10 + [32]), $0)
	$5 = (CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_64 ((uint_64)((int_64)*($10 + [40]) * (int_64)*($2 + [32])) / (uint_64)(int_64)100))))
	$1 = *($1)
	if ( ((uint_32)$1 > (uint_32)[4]) ){ goto $label$3 }
	goto $label$11 
	
.LABEL $label$11
	$6 = *($4)
	*(($10 + [24])) = [0]
	*($10 + [16]) = (int_64)0
	$3 = CALL strlen([4176])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = (CASTING uint_64)(uint_32 $5)
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$6 }
	*($10 + [16]) = ($3 << [1])
	$1 = (($10 + [16]) | [1])
	if ( $3 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$10
	*($10 + [24]) = [0]
	*($10 + [16]) = (int_64)0
	$1 = CALL db_lowerbound_i64(*($3), *($3 + [8]), (int_64)4229699935735382016, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$12 }
	$1 = CALL $112($3, $1)
	$4 = ($10 + [48])
	$8 = (($10 + [16]) + [8])
	
.LOOP $label$13:
	if ( (uint_64)(*($1 + [12]) <= *($4)) ){ goto $label$14 }
	$7 = *($1)
	*($10) = $7
	$9 = *($10 + [20])
	if ( ((uint_32)$9 >= (uint_32)*($8)) ){ goto $label$15 }
	*($9) = $7
	*($10 + [20]) = ($9 + [8])
	goto $label$14 
	
.LABEL $label$15
	CALL $269(($10 + [16]), $10)
	
.LABEL $label$14
	CALL eosio_assert([1], [816])
	$1 = CALL db_next_i64(*($1 + [28]), $10)
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$12 }
	$1 = CALL $112($3, $1)
	goto $label$13 
	
.LABEL $label$12
	$1 = *($10 + [16])
	$3 = *($10 + [20])
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$16 }
	*(($4 = ($2 + [32]))) = (int_64))(*($4) - (CASTING uint_64)(uint_32 $5))
	$6 = (Rounds 0)(CALL floor((CASTING float_64)(uint_32 ((uint_32)$5 / (uint_32)int_32(($3 - $1) >> [3])))))
	$2 = *($10 + [20])
	$1 = *($10 + [16])
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$16 }
	$8 = ($10 | [1])
	$9 = ($10 + [8])
	
.LOOP $label$17:
	$7 = *($1)
	*($9) = [0]
	*($10) = (int_64)0
	$3 = CALL strlen([4208])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$20 }
	*($10) = ($3 << [1])
	$4 = $8
	if ( $3 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	$5 = (($3 + [16]) & [-16])
	$4 = CALL $280($5)
	*($9) = $4
	*($10) = ($5 | [1])
	*($10 + [4]) = $3
	
.LABEL $label$19
	CALL memcpy($4, [4208], $3)
	
.LABEL $label$18
	*(($4 + $3)) = [0]
	CALL _ZN6NiuNiu14_simplebackeosEyyRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0, $7, $6, $10)
	if ( ((*($10) & [1]) == 0) ){ goto $label$21 }
	CALL $282(*($9))
	
.LABEL $label$21
	$1 = ($1 + [8])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$17 }
	$1 = *($10 + [16])
	
.LABEL $label$16
	if ( ($1 == 0) ){ goto $label$3 }
	*($10 + [20]) = $1
	CALL $282($1)
	goto $label$3 
	
.LABEL $label$9
	*($10 + [24]) = [0]
	*($10 + [16]) = (int_64)0
	$1 = CALL db_lowerbound_i64(*($3), *($3 + [8]), (int_64)4229699935735382016, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$22 }
	$1 = CALL $112($3, $1)
	$4 = ($10 + [48])
	$8 = (($10 + [16]) + [8])
	
.LOOP $label$23:
	if ( (uint_64)(*($1 + [16]) <= *($4)) ){ goto $label$24 }
	$7 = *($1)
	*($10) = $7
	$9 = *($10 + [20])
	if ( ((uint_32)$9 >= (uint_32)*($8)) ){ goto $label$25 }
	*($9) = $7
	*($10 + [20]) = ($9 + [8])
	goto $label$24 
	
.LABEL $label$25
	CALL $269(($10 + [16]), $10)
	
.LABEL $label$24
	CALL eosio_assert([1], [816])
	$1 = CALL db_next_i64(*($1 + [28]), $10)
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$22 }
	$1 = CALL $112($3, $1)
	goto $label$23 
	
.LABEL $label$22
	$1 = *($10 + [16])
	$3 = *($10 + [20])
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$26 }
	*(($4 = ($2 + [32]))) = (int_64))(*($4) - (CASTING uint_64)(uint_32 $5))
	$6 = (Rounds 0)(CALL floor((CASTING float_64)(uint_32 ((uint_32)$5 / (uint_32)int_32(($3 - $1) >> [3])))))
	$2 = *($10 + [20])
	$1 = *($10 + [16])
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$26 }
	$8 = ($10 | [1])
	$9 = ($10 + [8])
	
.LOOP $label$27:
	$7 = *($1)
	*($9) = [0]
	*($10) = (int_64)0
	$3 = CALL strlen([4208])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$30 }
	*($10) = ($3 << [1])
	$4 = $8
	if ( $3 ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	$5 = (($3 + [16]) & [-16])
	$4 = CALL $280($5)
	*($9) = $4
	*($10) = ($5 | [1])
	*($10 + [4]) = $3
	
.LABEL $label$29
	CALL memcpy($4, [4208], $3)
	
.LABEL $label$28
	*(($4 + $3)) = [0]
	CALL _ZN6NiuNiu14_simplebackeosEyyRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0, $7, $6, $10)
	if ( ((*($10) & [1]) == 0) ){ goto $label$31 }
	CALL $282(*($9))
	
.LABEL $label$31
	$1 = ($1 + [8])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$27 }
	$1 = *($10 + [16])
	
.LABEL $label$26
	if ( ($1 == 0) ){ goto $label$3 }
	*($10 + [20]) = $1
	CALL $282($1)
	goto $label$3 
	
.LABEL $label$8
	*($10 + [24]) = [0]
	*($10 + [16]) = (int_64)0
	$1 = CALL db_lowerbound_i64(*($3), *($3 + [8]), (int_64)4229699935735382016, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$32 }
	$1 = CALL $112($3, $1)
	$4 = ($10 + [48])
	$8 = (($10 + [16]) + [8])
	
.LOOP $label$33:
	if ( (uint_64)(*($1 + [20]) <= *($4)) ){ goto $label$34 }
	$7 = *($1)
	*($10) = $7
	$9 = *($10 + [20])
	if ( ((uint_32)$9 >= (uint_32)*($8)) ){ goto $label$35 }
	*($9) = $7
	*($10 + [20]) = ($9 + [8])
	goto $label$34 
	
.LABEL $label$35
	CALL $269(($10 + [16]), $10)
	
.LABEL $label$34
	CALL eosio_assert([1], [816])
	$1 = CALL db_next_i64(*($1 + [28]), $10)
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$32 }
	$1 = CALL $112($3, $1)
	goto $label$33 
	
.LABEL $label$32
	$1 = *($10 + [16])
	$3 = *($10 + [20])
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$36 }
	*(($4 = ($2 + [32]))) = (int_64))(*($4) - (CASTING uint_64)(uint_32 $5))
	$6 = (Rounds 0)(CALL floor((CASTING float_64)(uint_32 ((uint_32)$5 / (uint_32)int_32(($3 - $1) >> [3])))))
	$2 = *($10 + [20])
	$1 = *($10 + [16])
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$36 }
	$8 = ($10 | [1])
	$9 = ($10 + [8])
	
.LOOP $label$37:
	$7 = *($1)
	*($9) = [0]
	*($10) = (int_64)0
	$3 = CALL strlen([4208])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$40 }
	*($10) = ($3 << [1])
	$4 = $8
	if ( $3 ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$40
	$5 = (($3 + [16]) & [-16])
	$4 = CALL $280($5)
	*($9) = $4
	*($10) = ($5 | [1])
	*($10 + [4]) = $3
	
.LABEL $label$39
	CALL memcpy($4, [4208], $3)
	
.LABEL $label$38
	*(($4 + $3)) = [0]
	CALL _ZN6NiuNiu14_simplebackeosEyyRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0, $7, $6, $10)
	if ( ((*($10) & [1]) == 0) ){ goto $label$41 }
	CALL $282(*($9))
	
.LABEL $label$41
	$1 = ($1 + [8])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$37 }
	$1 = *($10 + [16])
	
.LABEL $label$36
	if ( ($1 == 0) ){ goto $label$3 }
	*($10 + [20]) = $1
	CALL $282($1)
	goto $label$3 
	
.LABEL $label$7
	*($10 + [24]) = [0]
	*($10 + [16]) = (int_64)0
	$1 = CALL db_lowerbound_i64(*($3), *($3 + [8]), (int_64)4229699935735382016, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$42 }
	$1 = CALL $112($3, $1)
	$4 = ($10 + [48])
	$8 = (($10 + [16]) + [8])
	
.LOOP $label$43:
	if ( (uint_64)(*($1 + [8]) <= *($4)) ){ goto $label$44 }
	$7 = *($1)
	*($10) = $7
	$9 = *($10 + [20])
	if ( ((uint_32)$9 >= (uint_32)*($8)) ){ goto $label$45 }
	*($9) = $7
	*($10 + [20]) = ($9 + [8])
	goto $label$44 
	
.LABEL $label$45
	CALL $269(($10 + [16]), $10)
	
.LABEL $label$44
	CALL eosio_assert([1], [816])
	$1 = CALL db_next_i64(*($1 + [28]), $10)
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$42 }
	$1 = CALL $112($3, $1)
	goto $label$43 
	
.LABEL $label$42
	$1 = *($10 + [16])
	$3 = *($10 + [20])
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$46 }
	*(($4 = ($2 + [32]))) = (int_64))(*($4) - (CASTING uint_64)(uint_32 $5))
	$6 = (Rounds 0)(CALL floor((CASTING float_64)(uint_32 ((uint_32)$5 / (uint_32)int_32(($3 - $1) >> [3])))))
	$2 = *($10 + [20])
	$1 = *($10 + [16])
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$46 }
	$8 = ($10 | [1])
	$9 = ($10 + [8])
	
.LOOP $label$47:
	$7 = *($1)
	*($9) = [0]
	*($10) = (int_64)0
	$3 = CALL strlen([4208])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$50 }
	*($10) = ($3 << [1])
	$4 = $8
	if ( $3 ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$50
	$5 = (($3 + [16]) & [-16])
	$4 = CALL $280($5)
	*($9) = $4
	*($10) = ($5 | [1])
	*($10 + [4]) = $3
	
.LABEL $label$49
	CALL memcpy($4, [4208], $3)
	
.LABEL $label$48
	*(($4 + $3)) = [0]
	CALL _ZN6NiuNiu14_simplebackeosEyyRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0, $7, $6, $10)
	if ( ((*($10) & [1]) == 0) ){ goto $label$51 }
	CALL $282(*($9))
	
.LABEL $label$51
	$1 = ($1 + [8])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$47 }
	$1 = *($10 + [16])
	
.LABEL $label$46
	if ( ($1 == 0) ){ goto $label$3 }
	*($10 + [20]) = $1
	CALL $282($1)
	goto $label$3 
	
.LABEL $label$6
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $280($4)
	*($10 + [16]) = ($4 | [1])
	*($10 + [24]) = $1
	*($10 + [20]) = $3
	
.LABEL $label$5
	CALL memcpy($1, [4176], $3)
	
.LABEL $label$4
	*(($1 + $3)) = [0]
	CALL _ZN6NiuNiu14_simplebackeosEyyRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0, $6, $7, ($10 + [16]))
	if ( ((*($10 + [16]) & [1]) == 0) ){ goto $label$52 }
	CALL $282(*($10 + [24]))
	
.LABEL $label$52
	*(($3 = ($2 + [32]))) = (int_64))(*($3) - $7)
	
.LABEL $label$3
	*([0] + [4]) = ($10 + [80])
	return (unreachable)
	
.LABEL $label$2
	CALL $284($10)
	
.LABEL $label$1
	CALL $284(($10 + [16]))
	$1
	(unreachable)
}

void .FUNC _ZN6NiuNiu17_updateplayerloseEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [96])
	*([0] + [4]) = $8
	*(($8 + [40])) = [0]
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	$4 = *($0)
	*($8 + [8]) = $4
	*($8 + [16]) = $4
	$7 = CALL db_find_i64($4, $4, (int_64)-6030912133304795136, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$4 }
	$7 = CALL $155(($8 + [8]), $7)
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)($8 + [8])), [1104])
	$1 = *($0)
	CALL eosio_assert([1], [1472])
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)($8 + [8])), [1520])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)CALL $fimport$13()), [1568])
	*($7 + [16]) = ((int_64)*($7 + [16]) + (int_64)$2)
	$4 = *($7)
	CALL eosio_assert([1], [1632])
	CALL eosio_assert([1], [1296])
	CALL memcpy(($8 + [64]), $7, [8])
	CALL eosio_assert([1], [1296])
	CALL memcpy((($8 + [64]) | [8]), ($7 + [8]), [8])
	CALL eosio_assert([1], [1296])
	CALL memcpy((($8 + [64]) + [16]), ($7 + [16]), [8])
	CALL db_update_i64(*($7 + [28]), $1, ($8 + [64]), [24])
	$7 = (($8 + [8]) + [16])
	if ( (uint_64)($4 <= *($7)) ){ goto $label$3 }
	*($7) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	$3 = *($8 + [32])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$5 = *($0)
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)CALL $fimport$13()), [1232])
	*(($7 = CALL $280([40])) + [24]) = ($8 + [8])
	*($7 + [16]) = $2
	*($7) = $1
	CALL eosio_assert([1], [1296])
	CALL memcpy(($8 + [64]), $7, [8])
	CALL eosio_assert([1], [1296])
	CALL memcpy((($8 + [64]) | [8]), ($7 + [8]), [8])
	CALL eosio_assert([1], [1296])
	CALL memcpy((($8 + [64]) + [16]), ($7 + [16]), [8])
	$4 = *($7)
	$3 = CALL db_store_i64(*((($8 + [8]) + [8])), (int_64)-6030912133304795136, $5, $4, ($8 + [64]), [24])
	*($7 + [28]) = $3
	$0 = (($8 + [8]) + [16])
	if ( (uint_64)($4 <= *($0)) ){ goto $label$5 }
	*($0) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($8 + [56]) = $7
	$4 = *($7)
	*($8 + [64]) = $4
	*($8 + [52]) = $3
	$6 = ($8 + [36])
	$0 = *($6)
	if ( ((uint_32)$0 >= (uint_32)*(($8 + [40]))) ){ goto $label$7 }
	*($0 + [8]) = $4
	*($0 + [16]) = $3
	*($8 + [56]) = [0]
	*($0) = $7
	*($6) = ($0 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $156(($8 + [32]), ($8 + [56]), ($8 + [64]), ($8 + [52]))
	
.LABEL $label$6
	$7 = *($8 + [56])
	*($8 + [56]) = [0]
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $282($7)
	
.LABEL $label$3
	$3 = *($8 + [32])
	if ( ($3 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($8 + [36])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$9 }
	
.LOOP $label$10:
	$7 = ($7 + [-24])
	$0 = *($7)
	*($7) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $282($0)
	
.LABEL $label$11
	if ( ((int_32)$3 != (int_32)$7) ){ goto $label$10 }
	$7 = *(($8 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$7 = $3
	
.LABEL $label$8
	*($6) = $3
	CALL $282($7)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [96])
}

void .FUNC _ZN6NiuNiu16_updateplayerwinEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [96])
	*([0] + [4]) = $8
	*(($8 + [40])) = [0]
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	$4 = *($0)
	*($8 + [8]) = $4
	*($8 + [16]) = $4
	$7 = CALL db_find_i64($4, $4, (int_64)-6030912133304795136, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$4 }
	$7 = CALL $155(($8 + [8]), $7)
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)($8 + [8])), [1104])
	$1 = *($0)
	CALL eosio_assert([1], [1472])
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)($8 + [8])), [1520])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)CALL $fimport$13()), [1568])
	*($7 + [8]) = ((int_64)*($7 + [8]) + (int_64)$2)
	$4 = *($7)
	CALL eosio_assert([1], [1632])
	CALL eosio_assert([1], [1296])
	CALL memcpy(($8 + [64]), $7, [8])
	CALL eosio_assert([1], [1296])
	CALL memcpy((($8 + [64]) | [8]), ($7 + [8]), [8])
	CALL eosio_assert([1], [1296])
	CALL memcpy((($8 + [64]) + [16]), ($7 + [16]), [8])
	CALL db_update_i64(*($7 + [28]), $1, ($8 + [64]), [24])
	$7 = (($8 + [8]) + [16])
	if ( (uint_64)($4 <= *($7)) ){ goto $label$3 }
	*($7) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	$3 = *($8 + [32])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$5 = *($0)
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)CALL $fimport$13()), [1232])
	*(($7 = CALL $280([40])) + [24]) = ($8 + [8])
	*($7 + [8]) = $2
	*($7) = $1
	CALL eosio_assert([1], [1296])
	CALL memcpy(($8 + [64]), $7, [8])
	CALL eosio_assert([1], [1296])
	CALL memcpy((($8 + [64]) | [8]), ($7 + [8]), [8])
	CALL eosio_assert([1], [1296])
	CALL memcpy((($8 + [64]) + [16]), ($7 + [16]), [8])
	$4 = *($7)
	$3 = CALL db_store_i64(*((($8 + [8]) + [8])), (int_64)-6030912133304795136, $5, $4, ($8 + [64]), [24])
	*($7 + [28]) = $3
	$0 = (($8 + [8]) + [16])
	if ( (uint_64)($4 <= *($0)) ){ goto $label$5 }
	*($0) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($8 + [56]) = $7
	$4 = *($7)
	*($8 + [64]) = $4
	*($8 + [52]) = $3
	$6 = ($8 + [36])
	$0 = *($6)
	if ( ((uint_32)$0 >= (uint_32)*(($8 + [40]))) ){ goto $label$7 }
	*($0 + [8]) = $4
	*($0 + [16]) = $3
	*($8 + [56]) = [0]
	*($0) = $7
	*($6) = ($0 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $156(($8 + [32]), ($8 + [56]), ($8 + [64]), ($8 + [52]))
	
.LABEL $label$6
	$7 = *($8 + [56])
	*($8 + [56]) = [0]
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $282($7)
	
.LABEL $label$3
	$3 = *($8 + [32])
	if ( ($3 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($8 + [36])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$9 }
	
.LOOP $label$10:
	$7 = ($7 + [-24])
	$0 = *($7)
	*($7) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $282($0)
	
.LABEL $label$11
	if ( ((int_32)$3 != (int_32)$7) ){ goto $label$10 }
	$7 = *(($8 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$7 = $3
	
.LABEL $label$8
	*($6) = $3
	CALL $282($7)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [96])
}

void .FUNC $286 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$9 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [8])
	
.LABEL $label$2
	$10 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$10 = [11]
	$2 = ($2 + $1)
	$8 = ($1 << [1])
	$2 = ( $8 ? $2 : ($2 <= $8) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$10 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $280($10)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $9, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($9 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $282($9)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($10 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $287 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $280(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $282($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $284 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $285 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$4 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $4 )
	$5 = ($1 + [1])
	$6 = *($1 + [8])
	$1 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$5 }
	$3 = *($0)
	$1 = (($3 & [-2]) + [-1])
	
.LABEL $label$5
	$5 = ( $6 ? $5 : $4 )
	$4 = ($3 & [1])
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $4 ){ goto $label$7 }
	$3 = uint_32(($3 & [254]) >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $4 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$3 = *($0 + [4])
	
.LABEL $label$6
	CALL $286($0, $1, ($2 - $1), $3, [0], $3, $2, $5)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $5, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

int_32 .FUNC $123 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1024])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $280([32])
	$6 = CALL $183($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	*($8 + [8]) = $5)
	$1 = *($4 + [20])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $184(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $282($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $122 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$12 = (*([0] + [4]) - [112])
	*([0] + [4]) = $12
	if ( ((int_64)*([0] + [2496]) != (int_64)0) ){ goto $label$1 }
	*([0] + [2496]) = ((int_64)((int_64)((int_64)$2 + (int_64)$1) + (int_64)$3) + (int_64)CALL current_time())
	
.LABEL $label$1
	*((($12 + [64]) + [8])) = *([0] + [2496])
	*($12 + [64]) = *([0] + [2488])
	*($12 + [56]) = [0]
	*($12 + [48]) = (int_64)0
	*($12 + [40]) = [0]
	*($12 + [32]) = (int_64)0
	*($12 + [24]) = [0]
	*($12 + [16]) = (int_64)0
	*($12 + [8]) = [0]
	*($12) = (int_64)0
	*($12 + [80]) = [1]
	$4 = [0]
	$10 = [1]
	if ( ((int_32)[0] != (int_32)[0]) ){ goto $label$3 }
	$13 = [46]
	goto $label$2 
	
.LABEL $label$3
	$13 = [0]
	
.LABEL $label$2
	
.LOOP $label$4:
	goto $label$77 
	
.LABEL $label$78
	$4 = *($12 + [52])
	if ( ((int_32)$4 == (int_32)*((($12 + [48]) + [8]))) ){ goto $label$31 }
	$13 = [0]
	goto $label$4 
	
.LABEL $label$77
	*($4) = $10
	*($12 + [52]) = ($4 + [4])
	goto $label$30 
	
.LABEL $label$76
	CALL $168(($12 + [48]), ($12 + [80]))
	$13 = [1]
	goto $label$4 
	
.LABEL $label$75
	$10 = (*($12 + [80]) + [1])
	*($12 + [80]) = $10
	if ( ((int_32)$10 <= (int_32)[4]) ){ goto $label$29 }
	$13 = [2]
	goto $label$4 
	
.LABEL $label$74
	*($12 + [80]) = [1]
	$11 = ($12 + [24])
	$10 = [1]
	$13 = [3]
	goto $label$4 
	
.LABEL $label$73
	$4 = *($12 + [20])
	if ( ((int_32)$4 == (int_32)*($11)) ){ goto $label$27 }
	$13 = [4]
	goto $label$4 
	
.LABEL $label$72
	*($4) = $10
	*($12 + [20]) = ($4 + [4])
	goto $label$26 
	
.LABEL $label$71
	CALL $168(($12 + [16]), ($12 + [80]))
	$13 = [5]
	goto $label$4 
	
.LABEL $label$70
	$10 = (*($12 + [80]) + [1])
	*($12 + [80]) = $10
	if ( ((int_32)$10 < (int_32)[14]) ){ goto $label$28 }
	$13 = [6]
	goto $label$4 
	
.LABEL $label$69
	$4 = (($12 + [64]) + [8])
	$11 = *($12 + [52])
	$5 = [4]
	$13 = [7]
	goto $label$4 
	
.LABEL $label$68
	$6 = *($12 + [48])
	CALL sha256($4, [8], ($12 + [80]))
	$1 = ((int_64)*($12 + [80]) | (int_64)((int_64)*($12 + [81]) << (int_64)32))
	*($4) = $1
	$6 = ((CASTING uint_32)(uint_64 ((uint_64)$1 % (uint_64)(CASTING uint_64)(uint_32 int_32(($11 - $6) >> [2])))) << [2])
	$10 = *($12 + [48])
	$7 = ($10 + $6)
	$11 = *($12 + [36])
	if ( ((int_32)$11 == (int_32)*((($12 + [32]) + [8]))) ){ goto $label$24 }
	$13 = [8]
	goto $label$4 
	
.LABEL $label$67
	*($11) = *($7)
	*($12 + [36]) = ($11 + [4])
	goto $label$23 
	
.LABEL $label$66
	CALL $168(($12 + [32]), $7)
	$10 = *($12 + [48])
	$13 = [9]
	goto $label$4 
	
.LABEL $label$65
	$10 = ($10 + $6)
	$6 = ($10 + [4])
	$7 = (*($12 + [52]) - $6)
	$11 = int_32($7 >> [2])
	if ( ($11 == 0) ){ goto $label$22 }
	$13 = [10]
	goto $label$4 
	
.LABEL $label$64
	CALL memmove($10, $6, $7)
	$13 = [11]
	goto $label$4 
	
.LABEL $label$63
	$11 = ($10 + ($11 << [2]))
	*($12 + [52]) = $11
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$25 }
	$13 = [12]
	goto $label$4 
	
.LABEL $label$62
	$5 = [13]
	$11 = *($12 + [20])
	$13 = [13]
	goto $label$4 
	
.LABEL $label$61
	$6 = *($12 + [16])
	CALL sha256($4, [8], ($12 + [80]))
	$1 = ((int_64)*($12 + [80]) | (int_64)((int_64)*($12 + [81]) << (int_64)32))
	*((($12 + [64]) + [8])) = $1
	$6 = ((CASTING uint_32)(uint_64 ((uint_64)$1 % (uint_64)(CASTING uint_64)(uint_32 int_32(($11 - $6) >> [2])))) << [2])
	$10 = *($12 + [16])
	$7 = ($10 + $6)
	$11 = *($12 + [4])
	if ( ((int_32)$11 == (int_32)*(($12 + [8]))) ){ goto $label$20 }
	$13 = [14]
	goto $label$4 
	
.LABEL $label$60
	*($11) = *($7)
	*($12 + [4]) = ($11 + [4])
	goto $label$19 
	
.LABEL $label$59
	CALL $168($12, $7)
	$10 = *($12 + [16])
	$13 = [15]
	goto $label$4 
	
.LABEL $label$58
	$10 = ($10 + $6)
	$6 = ($10 + [4])
	$7 = (*($12 + [20]) - $6)
	$11 = int_32($7 >> [2])
	if ( ($11 == 0) ){ goto $label$18 }
	$13 = [16]
	goto $label$4 
	
.LABEL $label$57
	CALL memmove($10, $6, $7)
	$13 = [17]
	goto $label$4 
	
.LABEL $label$56
	$11 = ($10 + ($11 << [2]))
	*($12 + [20]) = $11
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$21 }
	$13 = [18]
	goto $label$4 
	
.LABEL $label$55
	$8 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$10 = *($12 + [32])
	$5 = *($12 + [36])
	if ( ((int_32)$5 != (int_32)$10) ){ goto $label$17 }
	$13 = [41]
	goto $label$4 
	
.LABEL $label$54
	$10 = [0]
	$5 = [0]
	goto $label$12 
	
.LABEL $label$53
	$11 = *($12)
	$6 = *($12 + [4])
	$13 = [20]
	goto $label$4 
	
.LABEL $label$52
	if ( ((int_32)$6 != (int_32)$11) ){ goto $label$15 }
	$13 = [40]
	goto $label$4 
	
.LABEL $label$51
	$6 = $11
	goto $label$13 
	
.LABEL $label$50
	$7 = ((int_32)*(($10 + ($8 << [2]))) * (int_32)[100])
	$10 = [0]
	$5 = [0]
	$13 = [22]
	goto $label$4 
	
.LABEL $label$49
	$6 = *(($0 + [4]))
	*($12 + [80]) = (*(($11 + $10)) + $7)
	CALL $172($0, $6, ($12 + [80]))
	$10 = ($10 + [4])
	$11 = *($12)
	$6 = *($12 + [4])
	$5 = ($5 + [1])
	if ( ($5 <= int_32(($6 - $11) >> [2])) ){ goto $label$14 }
	$13 = [23]
	goto $label$4 
	
.LABEL $label$48
	$10 = *($12 + [32])
	$5 = *($12 + [36])
	$13 = [24]
	goto $label$4 
	
.LABEL $label$47
	$8 = ($8 + [1])
	if ( ($8 <= int_32(($5 - $10) >> [2])) ){ goto $label$16 }
	$13 = [25]
	goto $label$4 
	
.LABEL $label$46
	$5 = *(($0 + [4]))
	$10 = *($0)
	$13 = [26]
	goto $label$4 
	
.LABEL $label$45
	$1 = (CASTING uint_64)(uint_32 int_32(($5 - $10) >> [2]))
	$9 = [0]
	$8 = ($0 + [4])
	$13 = [27]
	goto $label$4 
	
.LABEL $label$44
	$11 = ((int_32)$5 == (int_32)$10)
	$5 = $10
	if ( $11 ){ goto $label$10 }
	$13 = [28]
	goto $label$4 
	
.LABEL $label$43
	$11 = [0]
	$13 = [29]
	goto $label$4 
	
.LABEL $label$42
	CALL sha256($4, [8], ($12 + [80]))
	$2 = ((int_64)*($12 + [80]) | (int_64)((int_64)*($12 + [81]) << (int_64)32))
	*(($10 = (($12 + [64]) + [8]))) = $2
	CALL sha256($4, [8], ($12 + [80]))
	$3 = ((int_64)*($12 + [80]) | (int_64)((int_64)*($12 + [81]) << (int_64)32))
	*($10) = $3
	$10 = *($0)
	$5 = ($10 + ((CASTING uint_32)(uint_64 ((uint_64)$2 % (uint_64)$1)) << [2]))
	$6 = *($5)
	$7 = ($10 + ((CASTING uint_32)(uint_64 ((uint_64)$3 % (uint_64)$1)) << [2]))
	*($5) = *($7)
	*($7) = $6
	$5 = *($8)
	$11 = ($11 + [1])
	if ( ($11 <= int_32(($5 - $10) >> [2])) ){ goto $label$9 }
	$13 = [30]
	goto $label$4 
	
.LABEL $label$41
	$9 = ($9 + [1])
	if ( ((int_32)$9 != (int_32)[7]) ){ goto $label$11 }
	$13 = [31]
	goto $label$4 
	
.LABEL $label$40
	$10 = *($12)
	if ( ($10 == 0) ){ goto $label$8 }
	$13 = [32]
	goto $label$4 
	
.LABEL $label$39
	*($12 + [4]) = $10
	CALL $282($10)
	$13 = [33]
	goto $label$4 
	
.LABEL $label$38
	$10 = *($12 + [16])
	if ( ($10 == 0) ){ goto $label$7 }
	$13 = [34]
	goto $label$4 
	
.LABEL $label$37
	*($12 + [20]) = $10
	CALL $282($10)
	$13 = [35]
	goto $label$4 
	
.LABEL $label$36
	$10 = *($12 + [32])
	if ( ($10 == 0) ){ goto $label$6 }
	$13 = [36]
	goto $label$4 
	
.LABEL $label$35
	*($12 + [36]) = $10
	CALL $282($10)
	$13 = [37]
	goto $label$4 
	
.LABEL $label$34
	$10 = *($12 + [48])
	if ( ($10 == 0) ){ goto $label$5 }
	$13 = [38]
	goto $label$4 
	
.LABEL $label$33
	*($12 + [52]) = $10
	CALL $282($10)
	$13 = [39]
	goto $label$4 
	
.LABEL $label$32
	*([0] + [4]) = ($12 + [112])
	return 
	
.LABEL $label$31
	$13 = [46]
	goto $label$4 
	
.LABEL $label$30
	$13 = [1]
	goto $label$4 
	
.LABEL $label$29
	$13 = [45]
	goto $label$4 
	
.LABEL $label$28
	$13 = [3]
	goto $label$4 
	
.LABEL $label$27
	$13 = [44]
	goto $label$4 
	
.LABEL $label$26
	$13 = [5]
	goto $label$4 
	
.LABEL $label$25
	$13 = [7]
	goto $label$4 
	
.LABEL $label$24
	$13 = [43]
	goto $label$4 
	
.LABEL $label$23
	$13 = [9]
	goto $label$4 
	
.LABEL $label$22
	$13 = [11]
	goto $label$4 
	
.LABEL $label$21
	$13 = [13]
	goto $label$4 
	
.LABEL $label$20
	$13 = [42]
	goto $label$4 
	
.LABEL $label$19
	$13 = [15]
	goto $label$4 
	
.LABEL $label$18
	$13 = [17]
	goto $label$4 
	
.LABEL $label$17
	$13 = [19]
	goto $label$4 
	
.LABEL $label$16
	$13 = [20]
	goto $label$4 
	
.LABEL $label$15
	$13 = [21]
	goto $label$4 
	
.LABEL $label$14
	$13 = [22]
	goto $label$4 
	
.LABEL $label$13
	$13 = [24]
	goto $label$4 
	
.LABEL $label$12
	$13 = [26]
	goto $label$4 
	
.LABEL $label$11
	$13 = [27]
	goto $label$4 
	
.LABEL $label$10
	$13 = [30]
	goto $label$4 
	
.LABEL $label$9
	$13 = [29]
	goto $label$4 
	
.LABEL $label$8
	$13 = [33]
	goto $label$4 
	
.LABEL $label$7
	$13 = [35]
	goto $label$4 
	
.LABEL $label$6
	$13 = [37]
	goto $label$4 
	
.LABEL $label$5
	$13 = [39]
	goto $label$4 
	$13
}

int_32 .FUNC $288 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL strlen($1)
	$5 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$3 = *($0)
	$5 = (($3 & [-2]) + [-1])
	
.LABEL $label$1
	$4 = ($3 & [1])
	if ( ((uint_32)$2 <= (uint_32)$5) ){ goto $label$7 }
	if ( $4 ){ goto $label$6 }
	$3 = uint_32(($3 & [254]) >> [1])
	goto $label$5 
	
.LABEL $label$7
	if ( $4 ){ goto $label$4 }
	$5 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$3 = *($0 + [4])
	
.LABEL $label$5
	CALL $286($0, $5, ($2 - $5), $3, [0], $3, $2, $1)
	return $0
	
.LABEL $label$4
	$5 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memmove($5, $1, $2)
	
.LABEL $label$2
	*(($5 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$8 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$8
	*($0 + [4]) = $2
	return $0
}

int_32 .FUNC $289 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$3 = *($0)
	$4 = (($3 & [-2]) + [-1])
	
.LABEL $label$1
	if ( ($3 & [1]) ){ goto $label$3 }
	$5 = uint_32(($3 & [254]) >> [1])
	goto $label$2 
	
.LABEL $label$3
	$5 = *($0 + [4])
	
.LABEL $label$2
	if ( ((uint_32)($4 - $5) >= (uint_32)$2) ){ goto $label$4 }
	CALL $286($0, $4, (($2 - $4) + $5), $5, $5, [0], $2, $1)
	return $0
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$7 }
	if ( ($3 & [1]) ){ goto $label$6 }
	$4 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$7
	return $0
	
.LABEL $label$6
	$4 = *($0 + [8])
	
.LABEL $label$5
	CALL memcpy(($4 + $5), $1, $2)
	$2 = ($5 + $2)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($4 + $2)) = [0]
	return $0
}

void .FUNC _ZN6NiuNiu13_cleargameresEv (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	*(($5 + [32])) = [0]
	*($5 + [16]) = (int_64)-1
	$2 = *($0)
	*($5) = $2
	*($5 + [8]) = $2
	*($5 + [24]) = (int_64)0
	$0 = CALL db_lowerbound_i64($2, $2, (int_64)-4994024806730104832, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $157($5, $0)
	
.LOOP $label$2:
	CALL eosio_assert([1], [768])
	CALL eosio_assert([1], [816])
	$0 = [0]
	$1 = CALL db_next_i64(*($4 + [28]), ($5 + [40]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $157($5, $1)
	
.LABEL $label$3
	CALL $158($5, $4)
	$4 = $0
	if ( $0 ){ goto $label$2 }
	
.LABEL $label$1
	$1 = *($5 + [24])
	if ( ($1 == 0) ){ goto $label$4 }
	$3 = ($5 + [28])
	$0 = *($3)
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $282($4)
	
.LABEL $label$8
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($5 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $1
	
.LABEL $label$5
	*($3) = $1
	CALL $282($0)
	
.LABEL $label$4
	*([0] + [4]) = ($5 + [48])
}

int_32 .FUNC $183 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [1872])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [1840])
	*($0 + [16]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [1056])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [20]) = *(*($2 + [8]))
	return $0
}

void .FUNC $125 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5, int_64 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [192])
	*([0] + [4]) = $14
	*($14 + [152]) = [0]
	*($14 + [144]) = (int_64)0
	*($14 + [136]) = [0]
	*($14 + [128]) = (int_64)0
	*($14 + [160]) = [0]
	CALL $167(($14 + [144]), ($14 + [160]))
	$13 = *($14 + [152])
	$8 = *($14 + [148])
	*($14 + [160]) = [1]
	if ( ((uint_32)$8 >= (uint_32)$13) ){ goto $label$2 }
	*($8) = [1]
	$8 = ($8 + [4])
	*($14 + [148]) = $8
	goto $label$1 
	
.LABEL $label$2
	CALL $167(($14 + [144]), ($14 + [160]))
	$13 = *(($14 + [152]))
	$8 = *($14 + [148])
	
.LABEL $label$1
	*($14 + [160]) = [2]
	if ( ((uint_32)$8 >= (uint_32)$13) ){ goto $label$4 }
	*($8) = [2]
	$8 = ($8 + [4])
	*($14 + [148]) = $8
	goto $label$3 
	
.LABEL $label$4
	CALL $167(($14 + [144]), ($14 + [160]))
	$13 = *(($14 + [152]))
	$8 = *($14 + [148])
	
.LABEL $label$3
	*($14 + [160]) = [3]
	if ( ((uint_32)$8 >= (uint_32)$13) ){ goto $label$6 }
	*($8) = [3]
	$8 = ($8 + [4])
	*($14 + [148]) = $8
	goto $label$5 
	
.LABEL $label$6
	CALL $167(($14 + [144]), ($14 + [160]))
	$13 = *(($14 + [152]))
	$8 = *($14 + [148])
	
.LABEL $label$5
	*($14 + [160]) = [4]
	if ( ((uint_32)$8 >= (uint_32)$13) ){ goto $label$8 }
	*($8) = [4]
	*($14 + [148]) = ($8 + [4])
	goto $label$7 
	
.LABEL $label$8
	CALL $167(($14 + [144]), ($14 + [160]))
	
.LABEL $label$7
	CALL _Z9get_sheetv(($14 + [112]))
	*($14 + [104]) = $2
	CALL $106(($14 + [88]), ($14 + [104]))
	if ( ((int_64)*([0] + [2496]) != (int_64)0) ){ goto $label$9 }
	*([0] + [2496]) = ((int_64)((int_64)((int_64)$3 + (int_64)$2) + (int_64)$4) + (int_64)CALL current_time())
	
.LABEL $label$9
	*(($7 = (($14 + [72]) + [8]))) = *([0] + [2496])
	*($14 + [72]) = *([0] + [2488])
	$9 = [5]
	$8 = *($14 + [148])
	
.LOOP $label$10:
	$11 = *($14 + [144])
	CALL sha256($7, [8], ($14 + [160]))
	$2 = ((int_64)*($14 + [160]) | (int_64)((int_64)*($14 + [161]) << (int_64)32))
	*($7) = $2
	$8 = int_32(($8 - $11) >> [2])
	$11 = (((uint_32)(CASTING uint_32)(uint_64 ((uint_64)$2 % (uint_64)(CASTING uint_64)(uint_32 $8))) % (uint_32)$8) << [2])
	$13 = *($14 + [144])
	$10 = ($13 + $11)
	$8 = *($14 + [132])
	if ( ((int_32)$8 == (int_32)*((($14 + [128]) + [8]))) ){ goto $label$12 }
	*($8) = *($10)
	*($14 + [132]) = ($8 + [4])
	goto $label$11 
	
.LABEL $label$12
	CALL $168(($14 + [128]), $10)
	$13 = *($14 + [144])
	
.LABEL $label$11
	$13 = ($13 + $11)
	$11 = ($13 + [4])
	$10 = (*($14 + [148]) - $11)
	$8 = int_32($10 >> [2])
	if ( ($8 == 0) ){ goto $label$13 }
	CALL memmove($13, $11, $10)
	
.LABEL $label$13
	$8 = ($13 + ($8 << [2]))
	*($14 + [148]) = $8
	$9 = ($9 + [-1])
	if ( $9 ){ goto $label$10 }
	*(($8 = CALL $280([100]))) = (int_64)0
	*(($8 + [8])) = (int_64)0
	$12 = [0]
	*(($8 + [36])) = [0]
	*(($8 + [32])) = [0]
	*(($8 + [28])) = [0]
	*(($8 + [24])) = [0]
	*(($8 + [16])) = (int_64)0
	*(($8 + [56])) = [0]
	*(($8 + [48])) = (int_64)0
	*($8 + [40 align=4]) = (int_64)0
	*(($8 + [76])) = [0]
	*(($8 + [68])) = (int_64)0
	*($8 + [60 align=4]) = (int_64)0
	*(($8 + [96])) = [0]
	*(($8 + [88])) = (int_64)0
	*($8 + [80 align=4]) = (int_64)0
	$11 = *($14 + [128])
	$13 = *($14 + [132])
	if ( ((int_32)$13 == (int_32)$11) ){ goto $label$14 }
	$9 = int_32(($13 - $11) >> [2])
	$13 = *(($1 + [4]))
	$10 = $11
	
.LOOP $label$15:
	$13 = ($13 + [-4])
	*(($8 + ((int_32)*($10) * (int_32)[20]))) = *($13)
	$10 = ($10 + [4])
	$12 = ($12 + [1])
	if ( ($12 <= $9) ){ goto $label$15 }
	*(($1 + [4])) = $13
	$12 = [0]
	$10 = $11
	
.LOOP $label$16:
	$13 = ($13 + [-4])
	*(($8 + ((int_32)*($10) * (int_32)[20])) + [4]) = *($13)
	$10 = ($10 + [4])
	$12 = ($12 + [1])
	if ( ($12 <= $9) ){ goto $label$16 }
	*(($1 + [4])) = $13
	$12 = [0]
	$10 = $11
	
.LOOP $label$17:
	$13 = ($13 + [-4])
	*(($8 + ((int_32)*($10) * (int_32)[20])) + [8]) = *($13)
	$10 = ($10 + [4])
	$12 = ($12 + [1])
	if ( ($12 <= $9) ){ goto $label$17 }
	*(($1 + [4])) = $13
	$12 = [0]
	$10 = $11
	
.LOOP $label$18:
	$13 = ($13 + [-4])
	*(($8 + ((int_32)*($10) * (int_32)[20])) + [12]) = *($13)
	$10 = ($10 + [4])
	$12 = ($12 + [1])
	if ( ($12 <= $9) ){ goto $label$18 }
	*(($1 + [4])) = $13
	$10 = [0]
	
.LOOP $label$19:
	$13 = ($13 + [-4])
	*(($8 + ((int_32)*($11) * (int_32)[20])) + [16]) = *($13)
	$11 = ($11 + [4])
	$10 = ($10 + [1])
	if ( ($10 <= $9) ){ goto $label$19 }
	*(($1 + [4])) = $13
	
.LABEL $label$14
	*($14 + [64]) = [0]
	*($14 + [56]) = (int_64)0
	*(($13 = CALL $280([20]))) = (int_64)0
	*($13 + [8 align=4]) = (int_64)0
	*($13 + [16]) = [0]
	*($14 + [40]) = $13
	$9 = ($13 + [20])
	*($14 + [48]) = $9
	*($14 + [44]) = $9
	if ( ((int_32)CALL $169(($14 + [112]), ($14 + [88])) == (int_32)(($14 + [112]) | [4])) ){ goto $label$37 }
	if ( ((uint_64)((int_64)$6 + (int_64)$4) > (uint_64)(int_64)2199999) ){ goto $label$37 }
	if ( ((int_32)((*($5 + [16]) + *($5 + [8])) + *($5 + [20])) == (int_32)([0] - *($5 + [24]))) ){ goto $label$37 }
	*($14 + [32]) = [0]
	*($14 + [24]) = (int_64)0
	*($14 + [16]) = [0]
	*($14 + [8]) = (int_64)0
	CALL sha256($7, [8], ($14 + [160]))
	$9 = *($14 + [160])
	*(($13 = (($14 + [72]) + [8]))) = ((int_64)(CASTING uint_64)(uint_32 $9) | (int_64)((int_64)*($14 + [161]) << (int_64)32))
	CALL sha256($7, [8], ($14 + [160]))
	$2 = ((int_64)*($14 + [160]) | (int_64)((int_64)*($14 + [161]) << (int_64)32))
	*($13) = $2
	$4 = *(($5 + [8]))
	*($14 + [160]) = [1]
	*($14 + [168]) = (Rounds 0)(CALL floor((CASTING float_64)(uint_64 ((uint_64)((int_64)$4 * (int_64)((int_64)((uint_64)$2 % (uint_64)(int_64)21) + (int_64)90)) / (uint_64)(int_64)100))))
	$13 = *($14 + [12])
	if ( ((uint_32)$13 >= (uint_32)*($14 + [16])) ){ goto $label$36 }
	*($13) = *($14 + [160])
	*(($13 + [8])) = *((($14 + [160]) + [8]))
	*($14 + [12]) = ($13 + [16])
	goto $label$35 
	
.LABEL $label$37
	*($14 + [44]) = $13
	*($14 + [160]) = [0]
	$11 = ($14 + [64])
	$13 = *($11)
	$9 = *($14 + [60])
	if ( ((uint_32)$9 >= (uint_32)$13) ){ goto $label$34 }
	*($9) = [0]
	$9 = ($9 + [4])
	*($14 + [60]) = $9
	goto $label$33 
	
.LABEL $label$36
	CALL $170(($14 + [8]), ($14 + [160]))
	
.LABEL $label$35
	CALL sha256($7, [8], ($14 + [160]))
	$2 = ((int_64)*($14 + [160]) | (int_64)((int_64)*($14 + [161]) << (int_64)32))
	*((($14 + [72]) + [8])) = $2
	*($14 + [160]) = [2]
	*($14 + [168]) = (Rounds 0)(CALL floor((CASTING float_64)(uint_64 ((uint_64)((int_64)*(($5 + [16])) * (int_64)((int_64)((uint_64)$2 % (uint_64)(int_64)21) + (int_64)90)) / (uint_64)(int_64)100))))
	$13 = *($14 + [12])
	if ( ((uint_32)$13 >= (uint_32)*((($14 + [8]) + [8]))) ){ goto $label$32 }
	*($13) = *($14 + [160])
	*(($13 + [8])) = *((($14 + [160]) + [8]))
	*($14 + [12]) = ($13 + [16])
	goto $label$31 
	
.LABEL $label$34
	CALL $167(($14 + [56]), ($14 + [160]))
	$13 = *($11)
	$9 = *($14 + [60])
	
.LABEL $label$33
	*($14 + [160]) = [1]
	if ( ((uint_32)$9 >= (uint_32)$13) ){ goto $label$30 }
	*($9) = [1]
	$9 = ($9 + [4])
	*($14 + [60]) = $9
	goto $label$29 
	
.LABEL $label$32
	CALL $170(($14 + [8]), ($14 + [160]))
	
.LABEL $label$31
	CALL sha256($7, [8], ($14 + [160]))
	$2 = ((int_64)*($14 + [160]) | (int_64)((int_64)*($14 + [161]) << (int_64)32))
	*((($14 + [72]) + [8])) = $2
	*($14 + [160]) = [3]
	*($14 + [168]) = (Rounds 0)(CALL floor((CASTING float_64)(uint_64 ((uint_64)((int_64)*(($5 + [20])) * (int_64)((int_64)((uint_64)$2 % (uint_64)(int_64)21) + (int_64)90)) / (uint_64)(int_64)100))))
	$13 = *($14 + [12])
	if ( ((uint_32)$13 >= (uint_32)*((($14 + [8]) + [8]))) ){ goto $label$28 }
	*($13) = *($14 + [160])
	*(($13 + [8])) = *((($14 + [160]) + [8]))
	*($14 + [12]) = ($13 + [16])
	goto $label$27 
	
.LABEL $label$30
	CALL $167(($14 + [56]), ($14 + [160]))
	$13 = *(($14 + [64]))
	$9 = *($14 + [60])
	
.LABEL $label$29
	*($14 + [160]) = [2]
	if ( ((uint_32)$9 >= (uint_32)$13) ){ goto $label$26 }
	*($9) = [2]
	$9 = ($9 + [4])
	*($14 + [60]) = $9
	goto $label$25 
	
.LABEL $label$28
	CALL $170(($14 + [8]), ($14 + [160]))
	
.LABEL $label$27
	$9 = ($9 & [1])
	CALL sha256($7, [8], ($14 + [160]))
	$2 = ((int_64)*($14 + [160]) | (int_64)((int_64)*($14 + [161]) << (int_64)32))
	*((($14 + [72]) + [8])) = $2
	*($14 + [160]) = [4]
	*($14 + [168]) = (Rounds 0)(CALL floor((CASTING float_64)(uint_64 ((uint_64)((int_64)*(($5 + [24])) * (int_64)((int_64)((uint_64)$2 % (uint_64)(int_64)21) + (int_64)90)) / (uint_64)(int_64)100))))
	$13 = *($14 + [12])
	if ( ((uint_32)$13 >= (uint_32)*((($14 + [8]) + [8]))) ){ goto $label$24 }
	*($13) = *($14 + [160])
	*(($13 + [8])) = *((($14 + [160]) + [8]))
	$13 = ($13 + [16])
	*($14 + [12]) = $13
	goto $label$23 
	
.LABEL $label$26
	CALL $167(($14 + [56]), ($14 + [160]))
	$13 = *(($14 + [64]))
	$9 = *($14 + [60])
	
.LABEL $label$25
	*($14 + [160]) = [3]
	if ( ((uint_32)$9 >= (uint_32)$13) ){ goto $label$22 }
	*($9) = [3]
	$9 = ($9 + [4])
	*($14 + [60]) = $9
	goto $label$21 
	
.LABEL $label$24
	CALL $170(($14 + [8]), ($14 + [160]))
	$13 = *($14 + [12])
	
.LABEL $label$23
	$10 = ($9 | [2])
	$7 = *($14 + [8])
	*($14 + [160]) = [18]
	CALL $171($7, $13, ($14 + [160]))
	$9 = *($14 + [12])
	$13 = *($14 + [8])
	if ( ((uint_32)$13 >= (uint_32)$9) ){ goto $label$38 }
	$11 = ($14 + [32])
	
.LOOP $label$39:
	$7 = *($14 + [28])
	if ( ((int_32)$7 == (int_32)*($11)) ){ goto $label$41 }
	*($7) = *($13)
	*($14 + [28]) = ($7 + [4])
	goto $label$40 
	
.LABEL $label$41
	CALL $168(($14 + [24]), $13)
	$9 = *($14 + [12])
	
.LABEL $label$40
	$13 = ($13 + [16])
	if ( ($13 <= $9) ){ goto $label$39 }
	
.LABEL $label$38
	$9 = ($8 + [100])
	$13 = *($14 + [24])
	$7 = [0]
	*($14 + [160]) = [0]
	CALL $172(($14 + [24]), ($13 + ($10 << [2])), ($14 + [160]))
	$13 = *($14 + [24])
	if ( ((int_32)$13 == (int_32)*($14 + [28])) ){ goto $label$42 }
	$2 = (int_64)0
	
.LOOP $label$43:
	CALL prints([2528])
	CALL printi(*($13))
	CALL prints([2560])
	CALL printi($2)
	CALL prints([560])
	*((*($14 + [40]) + (*($13) << [2]))) = $7
	$7 = ($7 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$13 = ($13 + [4])
	if ( ((int_32)$13 != (int_32)*($14 + [28])) ){ goto $label$43 }
	
.LABEL $label$42
	CALL prints([2512])
	CALL printi((int_64)496)
	CALL prints([560])
	*($14 + [160]) = [19]
	CALL $173($8, $9, ($14 + [160]))
	$13 = *($14 + [8])
	if ( ($13 == 0) ){ goto $label$44 }
	*($14 + [12]) = $13
	CALL $282($13)
	
.LABEL $label$44
	$13 = *($14 + [24])
	if ( ($13 == 0) ){ goto $label$20 }
	*($14 + [28]) = $13
	CALL $282($13)
	goto $label$20 
	
.LABEL $label$22
	CALL $167(($14 + [56]), ($14 + [160]))
	$13 = *(($14 + [64]))
	$9 = *($14 + [60])
	
.LABEL $label$21
	*($14 + [160]) = [4]
	if ( ((uint_32)$9 >= (uint_32)$13) ){ goto $label$46 }
	*($9) = [4]
	$9 = ($9 + [4])
	*($14 + [60]) = $9
	goto $label$45 
	
.LABEL $label$46
	CALL $167(($14 + [56]), ($14 + [160]))
	$9 = *($14 + [60])
	
.LABEL $label$45
	$11 = [5]
	
.LOOP $label$47:
	$10 = *($14 + [56])
	CALL sha256($7, [8], ($14 + [160]))
	$2 = ((int_64)*($14 + [160]) | (int_64)((int_64)*($14 + [161]) << (int_64)32))
	*((($14 + [72]) + [8])) = $2
	$9 = int_32(($9 - $10) >> [2])
	$10 = (((uint_32)(CASTING uint_32)(uint_64 ((uint_64)$2 % (uint_64)(CASTING uint_64)(uint_32 $9))) % (uint_32)$9) << [2])
	$13 = *($14 + [56])
	$12 = ($13 + $10)
	$9 = *($14 + [44])
	if ( ((int_32)$9 == (int_32)*((($14 + [40]) + [8]))) ){ goto $label$49 }
	*($9) = *($12)
	*($14 + [44]) = ($9 + [4])
	goto $label$48 
	
.LABEL $label$49
	CALL $168(($14 + [40]), $12)
	$13 = *($14 + [56])
	
.LABEL $label$48
	$13 = ($13 + $10)
	$10 = ($13 + [4])
	$12 = (*($14 + [60]) - $10)
	$9 = int_32($12 >> [2])
	if ( ($9 == 0) ){ goto $label$50 }
	CALL memmove($13, $10, $12)
	
.LABEL $label$50
	$9 = ($13 + ($9 << [2]))
	*($14 + [60]) = $9
	$11 = ($11 + [-1])
	if ( $11 ){ goto $label$47 }
	
.LABEL $label$20
	CALL prints([2512])
	CALL printi((int_64)518)
	CALL prints([560])
	$13 = ($8 + ((int_32)*(*($14 + [40])) * (int_32)[20]))
	*($0) = *($13)
	*(($0 + [16])) = *(($13 + [16]))
	*(($0 + [12])) = *(($13 + [12]))
	*(($0 + [8])) = *(($13 + [8]))
	*(($0 + [4])) = *(($13 + [4]))
	CALL prints([2512])
	CALL printi((int_64)520)
	CALL prints([560])
	$13 = ($8 + ((int_32)*(*($14 + [40]) + [4]) * (int_32)[20]))
	*($0 + [20]) = *($13)
	*(($0 + [36])) = *(($13 + [16]))
	*(($0 + [32])) = *(($13 + [12]))
	*(($0 + [28])) = *(($13 + [8]))
	*(($0 + [24])) = *(($13 + [4]))
	CALL prints([2512])
	CALL printi((int_64)522)
	CALL prints([560])
	$13 = ($8 + ((int_32)*(*($14 + [40]) + [8]) * (int_32)[20]))
	*($0 + [40]) = *($13)
	*(($0 + [56])) = *(($13 + [16]))
	*(($0 + [52])) = *(($13 + [12]))
	*(($0 + [48])) = *(($13 + [8]))
	*(($0 + [44])) = *(($13 + [4]))
	CALL prints([2512])
	CALL printi((int_64)524)
	CALL prints([560])
	$13 = ($8 + ((int_32)*(*($14 + [40]) + [12]) * (int_32)[20]))
	*($0 + [60]) = *($13)
	*(($0 + [76])) = *(($13 + [16]))
	*(($0 + [72])) = *(($13 + [12]))
	*(($0 + [68])) = *(($13 + [8]))
	*(($0 + [64])) = *(($13 + [4]))
	CALL prints([2512])
	CALL printi((int_64)526)
	CALL prints([560])
	$13 = ($8 + ((int_32)*(*($14 + [40]) + [16]) * (int_32)[20]))
	*($0 + [80]) = *($13)
	*(($0 + [96])) = *(($13 + [16]))
	*(($0 + [92])) = *(($13 + [12]))
	*(($0 + [88])) = *(($13 + [8]))
	*(($0 + [84])) = *(($13 + [4]))
	CALL prints([2512])
	CALL printi((int_64)528)
	CALL prints([560])
	$13 = *($14 + [40])
	if ( ($13 == 0) ){ goto $label$51 }
	*($14 + [44]) = $13
	CALL $282($13)
	
.LABEL $label$51
	$13 = *($14 + [56])
	if ( ($13 == 0) ){ goto $label$52 }
	*($14 + [60]) = $13
	CALL $282($13)
	
.LABEL $label$52
	if ( ($8 == 0) ){ goto $label$53 }
	CALL $282($8)
	
.LABEL $label$53
	if ( ((*($14 + [88]) & [1]) == 0) ){ goto $label$54 }
	CALL $282(*($14 + [96]))
	
.LABEL $label$54
	CALL $174(($14 + [112]), *($14 + [116]))
	$13 = *($14 + [128])
	if ( ($13 == 0) ){ goto $label$55 }
	*($14 + [132]) = $13
	CALL $282($13)
	
.LABEL $label$55
	$13 = *($14 + [144])
	if ( ($13 == 0) ){ goto $label$56 }
	*($14 + [148]) = $13
	CALL $282($13)
	
.LABEL $label$56
	*([0] + [4]) = ($14 + [192])
}

int_32 .FUNC $124 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)(uint_64)*(*($6) + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [1104])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3607749779137757184, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $123($0, $5)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [1104])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

int_32 .FUNC $182 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [16])
	*([0] + [4]) = $12
	$11 = int_32(($1 - $0) >> [4])
	if ( ((uint_32)$11 > (uint_32)[5]) ){ goto $label$9 }
	$6 = [1]
	goto $label$1 
	
.LABEL $label$11
	$11 = ($1 + [-16])
	if ( (CALL int_32 $11((int_32 $0), (int_32 *($2))) == 0) ){ goto $label$1 }
	$7 = ($0 + [8])
	*(($2 = ($12 + [8]))) = *($7)
	$4 = *($0)
	*($0) = *($11)
	$0 = ($11 + [8])
	*($7) = *($0)
	*($12) = $4
	*($0) = *($2)
	*($11) = *($12)
	goto $label$1 
	
.LABEL $label$10
	$11 = ($0 + [16])
	$8 = CALL int_32 $11((int_32 $0), (int_32 *($2)))
	$7 = ($1 + [-16])
	$3 = CALL int_32 $7((int_32 $11), (int_32 *($2)))
	if ( ($8 == 0) ){ goto $label$6 }
	if ( ($3 == 0) ){ goto $label$4 }
	$2 = ($0 + [8])
	*(($11 = ($12 + [8]))) = *($2)
	$4 = *($0)
	*($0) = *($7)
	$0 = ($7 + [8])
	*($2) = *($0)
	*($12) = $4
	*($0) = *($11)
	*($7) = *($12)
	goto $label$1 
	
.LABEL $label$9
	$11 = ($0 + [16])
	$7 = CALL int_32 $11((int_32 $0), (int_32 *($2)))
	$6 = ($0 + [32])
	$8 = CALL int_32 $6((int_32 $11), (int_32 *($2)))
	if ( ($7 == 0) ){ goto $label$5 }
	if ( ($8 == 0) ){ goto $label$3 }
	$7 = ($0 + [8])
	*(($11 = ($12 + [8]))) = *($7)
	$4 = *($0)
	*($0) = *($6)
	$8 = ($6 + [8])
	*($7) = *($8)
	*($12) = $4
	*($8) = *($11)
	*($6) = *($12)
	goto $label$2 
	
.LABEL $label$8
	CALL $180($0, ($0 + [16]), ($0 + [32]), ($1 + [-16]), $2)
	goto $label$1 
	
.LABEL $label$7
	$11 = ($0 + [48])
	$7 = ($0 + [32])
	$3 = ($0 + [16])
	CALL $180($0, $3, $7, $11, $2)
	$8 = ($1 + [-16])
	if ( (CALL int_32 $8((int_32 $11), (int_32 *($2))) == 0) ){ goto $label$1 }
	$4 = *($11)
	*($11) = *($8)
	$1 = ($11 + [8])
	*(($9 = ($12 + [8]))) = *($1)
	$10 = ($8 + [8])
	*($1) = *($10)
	*($12) = $4
	*($10) = *($9)
	*($8) = *($12)
	if ( (CALL int_32 $11((int_32 $7), (int_32 *($2))) == 0) ){ goto $label$1 }
	$4 = *($7)
	*($7) = *($11)
	$8 = ($7 + [8])
	*($9) = *($8)
	*($8) = *($1)
	*($12) = $4
	*($1) = *($9)
	*($11) = *($12)
	if ( (CALL int_32 $7((int_32 $3), (int_32 *($2))) == 0) ){ goto $label$1 }
	$4 = *($3)
	*($3) = *($7)
	$8 = ($3 + [8])
	*(($11 = ($12 + [8]))) = *($8)
	$9 = ($7 + [8])
	*($8) = *($9)
	*($12) = $4
	*($9) = *($11)
	*($7) = *($12)
	if ( (CALL int_32 $3((int_32 $0), (int_32 *($2))) == 0) ){ goto $label$1 }
	$2 = ($0 + [8])
	*($11) = *($2)
	$4 = *($0)
	*($0) = *($3)
	*($2) = *($8)
	*($12) = $4
	*($8) = *($11)
	*($3) = *($12)
	goto $label$1 
	
.LABEL $label$6
	if ( ($3 == 0) ){ goto $label$1 }
	$4 = *($11)
	*($11) = *($7)
	$3 = ($11 + [8])
	*(($8 = ($12 + [8]))) = *($3)
	$9 = ($7 + [8])
	*($3) = *($9)
	*($12) = $4
	*($9) = *($8)
	*($7) = *($12)
	if ( (CALL int_32 $11((int_32 $0), (int_32 *($2))) == 0) ){ goto $label$1 }
	$2 = ($0 + [8])
	*($8) = *($2)
	$4 = *($0)
	*($0) = *($11)
	*($2) = *($3)
	*($12) = $4
	*($3) = *($8)
	*($11) = *($12)
	goto $label$1 
	
.LABEL $label$5
	if ( ($8 == 0) ){ goto $label$2 }
	$4 = *($11)
	*($11) = *($6)
	$8 = ($11 + [8])
	*(($7 = ($12 + [8]))) = *($8)
	$3 = ($6 + [8])
	*($8) = *($3)
	*($12) = $4
	*($3) = *($7)
	*($6) = *($12)
	if ( (CALL int_32 $11((int_32 $0), (int_32 *($2))) == 0) ){ goto $label$2 }
	$3 = ($0 + [8])
	*($7) = *($3)
	$4 = *($0)
	*($0) = *($11)
	*($3) = *($8)
	*($12) = $4
	*($8) = *($7)
	*($11) = *($12)
	goto $label$2 
	
.LABEL $label$4
	$4 = *($0)
	*($0) = *($11)
	$3 = ($0 + [8])
	*(($8 = ($12 + [8]))) = *($3)
	$0 = ($11 + [8])
	*($3) = *($0)
	*($12) = $4
	*($0) = *($8)
	*($11) = *($12)
	if ( (CALL int_32 $7((int_32 $11), (int_32 *($2))) == 0) ){ goto $label$1 }
	*($8) = *($0)
	$4 = *($11)
	*($11) = *($7)
	$11 = ($7 + [8])
	*($0) = *($11)
	*($12) = $4
	*($11) = *($8)
	*($7) = *($12)
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0)
	*($0) = *($11)
	$3 = ($0 + [8])
	*(($7 = ($12 + [8]))) = *($3)
	$8 = ($11 + [8])
	*($3) = *($8)
	*($12) = $4
	*($8) = *($7)
	*($11) = *($12)
	if ( (CALL int_32 $6((int_32 $11), (int_32 *($2))) == 0) ){ goto $label$2 }
	*($7) = *($8)
	$4 = *($11)
	*($11) = *($6)
	$11 = ($6 + [8])
	*($8) = *($11)
	*($12) = $4
	*($11) = *($7)
	*($6) = *($12)
	
.LABEL $label$2
	$11 = ($0 + [48])
	if ( ((int_32)$11 == (int_32)$1) ){ goto $label$14 }
	$9 = [0]
	$10 = [0]
	
.LOOP $label$15:
	$3 = $11
	if ( (CALL int_32 $3((int_32 $6), (int_32 *($2))) == 0) ){ goto $label$16 }
	*(($5 = ($12 + [8]))) = *(($3 + [8]))
	*($12) = *($3)
	$11 = $9
	
.LOOP $label$18:
	$7 = ($6 + [40])
	*((($6 = ($0 + $11)) + [56])) = *($7)
	$8 = ($6 + [32])
	*(($6 + [48])) = *($8)
	if ( ((int_32)$11 == (int_32)[-32]) ){ goto $label$17 }
	$11 = ($11 + [-16])
	if ( CALL int_32 $12((int_32 ($6 + [16])), (int_32 *($2))) ){ goto $label$18 }
	
.LABEL $label$17
	*($7) = *($5)
	*($8) = *($12)
	$10 = ($10 + [1])
	if ( ((int_32)$10 == (int_32)[8]) ){ goto $label$13 }
	
.LABEL $label$16
	$9 = ($9 + [16])
	$6 = $3
	$11 = ($3 + [16])
	if ( ((int_32)$11 != (int_32)$1) ){ goto $label$15 }
	
.LABEL $label$14
	$6 = [1]
	goto $label$12 
	
.LABEL $label$13
	$11 = ((int_32)($3 + [16]) == (int_32)$1)
	$6 = [0]
	
.LABEL $label$12
	$6 = ($11 | $6)
	
.LABEL $label$1
	*([0] + [4]) = ($12 + [16])
	$11
	return ($6 & [1])
}

void .FUNC $185 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *(($1 + [28]))
	if ( ((int_32)$3 == (int_32)*($1 + [24])) ){ goto $label$2 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [96]) == (int_32)$1), [1104])
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	$2 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)7035929282832498688, (int_64)7035929282832498688)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $62($1, $2)
	CALL eosio_assert(((int_32)*($3 + [96]) == (int_32)$1), [1104])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [1696])
	*(($0 + [24])) = *(($3 + [24]))
	*(($0 + [16])) = *(($3 + [16]))
	*(($0 + [8])) = *(($3 + [8]))
	*($0) = *($3)
	CALL $300(($0 + [28]), ($3 + [28]))
	CALL $300(($0 + [40]), ($3 + [40]))
	CALL memcpy(($0 + [56]), ($3 + [56]), [40])
}

void .FUNC $184 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $280(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $298($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $282($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $282($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $187 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $188($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $287($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $280($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $287($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $282($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $284($7)
	return (unreachable)
}

void .FUNC $186 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1056])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1056])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1056])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1056])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1056])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	CALL $187(*($1), *($0 + [24]))
	CALL $187(*($1), *($0 + [28]))
	$3 = *($0 + [32])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [36])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [40])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [44])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [48])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy($2, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC _ZN6NiuNiu8chconfigEyNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES6_ (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [64])
	*([0] + [4]) = $7
	CALL require_auth($1)
	CALL eosio_assert(((int_64)*($0) == (int_64)$1), [1312])
	CALL _ZN6NiuNiu14_getconfiginfoEv(($7 + [16]), $0)
	$6 = *($2)
	$4 = CALL strlen([2608])
	if ( ((int_32)$4 != (int_32)( *($2 + [4]) ? uint_32($6 >> [1]) : ($6 & [1]) )) ){ goto $label$4 }
	if ( (CALL $294($2, [0], [-1], [2608], $4) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = *($2)
	$4 = ($2 + [4])
	$5 = CALL strlen([2672])
	if ( ((int_32)$5 != (int_32)( *($4) ? uint_32($6 >> [1]) : ($6 & [1]) )) ){ goto $label$5 }
	if ( (CALL $294($2, [0], [-1], [2672], $5) == 0) ){ goto $label$2 }
	
.LABEL $label$5
	$6 = *($2)
	$5 = CALL strlen([2688])
	if ( ((int_32)$5 != (int_32)( *($4) ? uint_32($6 >> [1]) : ($6 & [1]) )) ){ goto $label$1 }
	if ( CALL $294($2, [0], [-1], [2688], $5) ){ goto $label$1 }
	CALL prints([2624])
	CALL printn($1)
	CALL prints([2640])
	$6 = *($2)
	$4 = ($6 & [1])
	CALL prints_l(( *($2 + [8]) ? ($2 + [1]) : $4 ), ( *(($2 + [4])) ? uint_32($6 >> [1]) : $4 ))
	CALL prints([2656])
	$6 = *($3)
	$4 = ($6 & [1])
	$2 = ($3 + [1])
	CALL prints_l(( *($3 + [8]) ? $2 : $4 ), ( *($3 + [4]) ? uint_32($6 >> [1]) : $4 ))
	CALL prints([560])
	if ( ((*($3) & [1]) == 0) ){ goto $label$6 }
	$2 = *(($3 + [8]))
	
.LABEL $label$6
	*($7 + [32]) = (CASTING uint_64)(uint_32 CALL strtoul($2, ($7 + [12]), [10]))
	goto $label$1 
	
.LABEL $label$3
	CALL prints([2624])
	CALL printn($1)
	CALL prints([2640])
	$6 = *($2)
	$4 = ($6 & [1])
	CALL prints_l(( *($2 + [8]) ? ($2 + [1]) : $4 ), ( *(($2 + [4])) ? uint_32($6 >> [1]) : $4 ))
	CALL prints([2656])
	$6 = *($3)
	$4 = ($6 & [1])
	$2 = ($3 + [1])
	CALL prints_l(( *($3 + [8]) ? $2 : $4 ), ( *($3 + [4]) ? uint_32($6 >> [1]) : $4 ))
	CALL prints([560])
	if ( ((*($3) & [1]) == 0) ){ goto $label$7 }
	$2 = *(($3 + [8]))
	
.LABEL $label$7
	*($7 + [16]) = (CASTING uint_64)(uint_32 CALL strtoul($2, ($7 + [12]), [10]))
	goto $label$1 
	
.LABEL $label$2
	CALL prints([2624])
	CALL printn($1)
	CALL prints([2640])
	$6 = *($2)
	$4 = ($6 & [1])
	CALL prints_l(( *($2 + [8]) ? ($2 + [1]) : $4 ), ( *(($2 + [4])) ? uint_32($6 >> [1]) : $4 ))
	CALL prints([2656])
	$6 = *($3)
	$4 = ($6 & [1])
	$2 = ($3 + [1])
	CALL prints_l(( *($3 + [8]) ? $2 : $4 ), ( *($3 + [4]) ? uint_32($6 >> [1]) : $4 ))
	CALL prints([560])
	if ( ((*($3) & [1]) == 0) ){ goto $label$8 }
	$2 = *(($3 + [8]))
	
.LABEL $label$8
	*($7 + [24]) = (CASTING uint_64)(uint_32 CALL strtoul($2, ($7 + [12]), [10]))
	
.LABEL $label$1
	CALL $193(($0 + [128]), ($7 + [16]), *($0))
	*([0] + [4]) = ($7 + [64])
}

void .FUNC __unlockfile (int_32 $0)
{
}

int_32 .FUNC __fwritex (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = *($2 + [16])
	if ( $6 ){ goto $label$2 }
	$6 = [0]
	if ( CALL __towrite($2) ){ goto $label$1 }
	$6 = *(($2 + [16]))
	
.LABEL $label$2
	$7 = *($2 + [20])
	if ( ((uint_32)($6 - $7) >= (uint_32)$1) ){ goto $label$3 }
	return CALL int_32 $2((int_32 $0), (int_32 $1), (int_32 *($2 + [36])))
	
.LABEL $label$3
	$8 = [0]
	if ( ((int_32)*($2 + [75]) < (int_32)[0]) ){ goto $label$4 }
	$3 = ($0 + $1)
	$8 = [0]
	$6 = [0]
	
.LOOP $label$5:
	if ( (($1 + $6) == 0) ){ goto $label$4 }
	$5 = ($3 + $6)
	$4 = ($6 + [-1])
	$6 = $4
	if ( ((int_32)*(($5 + [-1])) != (int_32)[10]) ){ goto $label$5 }
	$8 = (($1 + $4) + [1])
	$6 = CALL int_32 $2((int_32 $0), (int_32 $8), (int_32 *($2 + [36])))
	if ( ($6 <= $8) ){ goto $label$1 }
	$1 = ((int_32)$4 ^ (int_32)[-1])
	$0 = (($3 + $4) + [1])
	$7 = *(($2 + [20]))
	
.LABEL $label$4
	CALL memcpy($7, $0, $1)
	*(($6 = ($2 + [20]))) = (*($6) + $1)
	return ($8 + $1)
	
.LABEL $label$1
	return $6
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [480])
	*([0] + [4]) = $9
	CALL prints([480])
	CALL prints([496])
	CALL prints([512])
	CALL printn($0)
	CALL prints([528])
	CALL printn($1)
	CALL prints([544])
	CALL prints([544])
	CALL printn($2)
	CALL prints([560])
	*($9 + [304]) = $0
	if ( ((int_32)CALL $22(($9 + [304])) == (int_32)[99999]) ){ goto $label$1 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [576]
	$7 = (int_64)0
	
.LOOP $label$2:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$7 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$3 = ($3 + [165])
	goto $label$5 
	
.LABEL $label$7
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$4
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$3
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$2 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$8 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [592]
	$7 = (int_64)0
	
.LOOP $label$9:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$14 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$3 = ($3 + [165])
	goto $label$12 
	
.LABEL $label$14
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$13
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$11
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$10
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$9 }
	CALL eosio_assert(((int_64)$7 == (int_64)$1), [608])
	
.LABEL $label$8
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$17 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [672]
	$7 = (int_64)0
	
.LOOP $label$18:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$23 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$22 }
	$3 = ($3 + [165])
	goto $label$21 
	
.LABEL $label$23
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$22
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$21
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$20
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$19
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$18 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$16 }
	
.LABEL $label$17
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [688]
	$7 = (int_64)0
	
.LOOP $label$24:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$29 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$3 = ($3 + [165])
	goto $label$27 
	
.LABEL $label$29
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$28
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$26
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$25
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$24 }
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$16 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [576]
	$7 = (int_64)0
	
.LOOP $label$30:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$35 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$3 = ($3 + [165])
	goto $label$33 
	
.LABEL $label$35
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$34
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$32
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$31
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$30 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$15 }
	
.LABEL $label$16
	*(($9 + [320])) = $0
	*(($9 + [328])) = (int_64)-1
	*(($9 + [336])) = (int_64)0
	*(($9 + [344])) = [0]
	*($9 + [312]) = $0
	*($9 + [304]) = $0
	*($9 + [352]) = $0
	*(($9 + [360])) = $0
	*(($9 + [368])) = (int_64)-1
	*(($9 + [376])) = [0]
	*(($9 + [380])) = [0]
	*(($9 + [384])) = [0]
	*($9 + [392]) = $0
	*(($9 + [400])) = $0
	*(($9 + [408])) = (int_64)-1
	*(($9 + [416])) = [0]
	*(($9 + [420])) = [0]
	*(($9 + [424])) = [0]
	*($9 + [432]) = $0
	*(($9 + [440])) = $0
	*(($9 + [448])) = (int_64)-1
	*(($9 + [456])) = [0]
	*(($9 + [460])) = [0]
	*(($9 + [464])) = [0]
	if ( ((int_64)$2 > (int_64)4923678619264758271) ){ goto $label$52 }
	if ( ((int_64)$2 > (int_64)-3617168760277827585) ){ goto $label$51 }
	if ( ((int_64)$2 > (int_64)-6533256197883221681) ){ goto $label$49 }
	if ( ((int_64)$2 == (int_64)-9037225154474295296) ){ goto $label$45 }
	if ( ((int_64)$2 != (int_64)-8281824612626464768) ){ goto $label$37 }
	*($9 + [156]) = [0]
	*($9 + [152]) = [1]
	*($9 + [104 align=4]) = *($9 + [152])
	CALL $26(($9 + [304]), ($9 + [104]))
	goto $label$36 
	
.LABEL $label$52
	if ( ((int_64)$2 > (int_64)4923678704122265599) ){ goto $label$50 }
	if ( ((int_64)$2 > (int_64)4923678699809813455) ){ goto $label$48 }
	if ( ((int_64)$2 == (int_64)4923678619264758272) ){ goto $label$44 }
	if ( ((int_64)$2 != (int_64)4923678638623925936) ){ goto $label$37 }
	*($9 + [140]) = [0]
	*($9 + [136]) = [2]
	*($9 + [120 align=4]) = *($9 + [136])
	CALL $26(($9 + [304]), ($9 + [120]))
	goto $label$36 
	
.LABEL $label$51
	if ( ((int_64)$2 > (int_64)4298281224046116863) ){ goto $label$47 }
	if ( ((int_64)$2 == (int_64)-3617168760277827584) ){ goto $label$43 }
	if ( ((int_64)$2 != (int_64)-3106564262979169280) ){ goto $label$37 }
	*($9 + [148]) = [0]
	*($9 + [144]) = [3]
	*($9 + [112 align=4]) = *($9 + [144])
	CALL $26(($9 + [304]), ($9 + [112]))
	goto $label$36 
	
.LABEL $label$50
	if ( ((int_64)$2 > (int_64)5564535552995606527) ){ goto $label$46 }
	if ( ((int_64)$2 == (int_64)4923678704122265600) ){ goto $label$42 }
	if ( ((int_64)$2 != (int_64)4923678891038191616) ){ goto $label$37 }
	*($9 + [132]) = [0]
	*($9 + [128]) = [4]
	*($9 + [8 align=4]) = *($9 + [128])
	CALL $26(($9 + [304]), ($9 + [8]))
	goto $label$36 
	
.LABEL $label$49
	if ( ((int_64)$2 == (int_64)-6533256197883221680) ){ goto $label$41 }
	if ( ((int_64)$2 != (int_64)-4994302320998088704) ){ goto $label$37 }
	*($9 + [212]) = [0]
	*($9 + [208]) = [5]
	*($9 + [48 align=4]) = *($9 + [208])
	CALL $26(($9 + [304]), ($9 + [48]))
	goto $label$36 
	
.LABEL $label$48
	if ( ((int_64)$2 == (int_64)4923678699809813456) ){ goto $label$40 }
	if ( ((int_64)$2 != (int_64)4923678699809889664) ){ goto $label$37 }
	*($9 + [220]) = [0]
	*($9 + [216]) = [6]
	*($9 + [40 align=4]) = *($9 + [216])
	CALL $26(($9 + [304]), ($9 + [40]))
	goto $label$36 
	
.LABEL $label$47
	if ( ((int_64)$2 == (int_64)4298281224046116864) ){ goto $label$39 }
	if ( ((int_64)$2 != (int_64)4850739284455456768) ){ goto $label$37 }
	*($9 + [228]) = [0]
	*($9 + [224]) = [7]
	*($9 + [32 align=4]) = *($9 + [224])
	CALL $30(($9 + [304]), ($9 + [32]))
	goto $label$36 
	
.LABEL $label$46
	if ( ((int_64)$2 == (int_64)5564535552995606528) ){ goto $label$38 }
	if ( ((int_64)$2 != (int_64)6609852345243140096) ){ goto $label$37 }
	*($9 + [236]) = [0]
	*($9 + [232]) = [8]
	*($9 + [24 align=4]) = *($9 + [232])
	CALL $26(($9 + [304]), ($9 + [24]))
	goto $label$36 
	
.LABEL $label$45
	*($9 + [188]) = [0]
	*($9 + [184]) = [9]
	*($9 + [72 align=4]) = *($9 + [184])
	CALL $26(($9 + [304]), ($9 + [72]))
	goto $label$36 
	
.LABEL $label$44
	*($9 + [204]) = [0]
	*($9 + [200]) = [10]
	*($9 + [56 align=4]) = *($9 + [200])
	CALL $26(($9 + [304]), ($9 + [56]))
	goto $label$36 
	
.LABEL $label$43
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [688]
	$7 = (int_64)0
	
.LOOP $label$53:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$58 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$57 }
	$3 = ($3 + [165])
	goto $label$56 
	
.LABEL $label$58
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$57
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$56
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$55
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$54
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$53 }
	CALL eosio_assert(((int_64)$7 == (int_64)$1), [704])
	CALL $23(($9 + [256]))
	CALL _ZN6NiuNiu2onERKN5eosio8currency8transferE(($9 + [304]), ($9 + [256]))
	if ( ((*($9 + [288]) & [1]) == 0) ){ goto $label$36 }
	CALL $282(*(($9 + [296])))
	goto $label$36 
	
.LABEL $label$42
	*($9 + [172]) = [0]
	*($9 + [168]) = [11]
	*($9 + [88 align=4]) = *($9 + [168])
	CALL $26(($9 + [304]), ($9 + [88]))
	goto $label$36 
	
.LABEL $label$41
	*($9 + [180]) = [0]
	*($9 + [176]) = [12]
	*($9 + [80 align=4]) = *($9 + [176])
	CALL $37(($9 + [304]), ($9 + [80]))
	goto $label$36 
	
.LABEL $label$40
	*($9 + [244]) = [0]
	*($9 + [240]) = [13]
	*($9 + [16 align=4]) = *($9 + [240])
	CALL $26(($9 + [304]), ($9 + [16]))
	goto $label$36 
	
.LABEL $label$39
	*($9 + [164]) = [0]
	*($9 + [160]) = [14]
	*($9 + [96 align=4]) = *($9 + [160])
	CALL $37(($9 + [304]), ($9 + [96]))
	goto $label$36 
	
.LABEL $label$38
	*($9 + [196]) = [0]
	*($9 + [192]) = [15]
	*($9 + [64 align=4]) = *($9 + [192])
	CALL $26(($9 + [304]), ($9 + [64]))
	goto $label$36 
	
.LABEL $label$37
	*($9 + [252]) = [0]
	*($9 + [248]) = [16]
	*($9) = *($9 + [248])
	CALL $26(($9 + [304]), $9)
	
.LABEL $label$36
	CALL $44(($9 + [304]))
	
.LABEL $label$15
	*([0] + [4]) = ($9 + [480])
	return (unreachable)
	
.LABEL $label$1
	CALL eosio_exit([0])
}

void .FUNC $20 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $20($0, *($1))
	CALL $20($0, *($1 + [4]))
	CALL $282($1)
	
.LABEL $label$1
}

void .FUNC $23 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	*(($0 + [24])) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [1872])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	
.LABEL $label$3
	CALL eosio_assert($5, [1840])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	*($6 + [4]) = $2
	*($6) = $2
	*($6 + [8]) = ($2 + $1)
	CALL $214($6, $0)
	if ( ($1 <= [513]) ){ goto $label$8 }
	CALL free($2)
	
.LABEL $label$8
	*([0] + [4]) = ($6 + [16])
}

int_32 .FUNC $22 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [176])
	*([0] + [4]) = $13
	$2 = CALL transaction_size()
	$6 = ($13 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $6
	$4 = CALL read_transaction($6, $2)
	$8 = CALL current_time()
	*((($13 = $13) + [140])) = [0]
	*(($13 + [144])) = [0]
	*($13 + [124]) = [0]
	*($13 + [128]) = [0]
	*($13 + [132]) = [0]
	*($13 + [136]) = [0]
	*($13 + [112]) = ((CASTING uint_32)(uint_64 ((uint_64)$8 / (uint_64)(int_64)1000000)) + [60])
	*($13 + [148]) = [0]
	*(($13 + [152])) = [0]
	*(($13 + [156])) = [0]
	*($13 + [160]) = [0]
	*(($13 + [164])) = [0]
	*(($13 + [168])) = [0]
	*($13 + [76]) = $6
	*($13 + [72]) = $6
	*($13 + [80]) = ($6 + $2)
	CALL $215(($13 + [72]), ($13 + [112]))
	CALL $217(CALL $216(CALL $216(($13 + [72]), ($13 + [136])), ($13 + [148])), ($13 + [160]))
	$1 = *(*(*($13 + [148]) + [16]))
	CALL sha256($6, $4, ($0 + [16]))
	$4 = [10000]
	if ( ((int_64)$1 == (int_64)*($0)) ){ goto $label$1 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [592]
	$9 = (int_64)0
	
.LOOP $label$2:
	if ( ((uint_64)$8 > (uint_64)(int_64)4) ){ goto $label$7 }
	$2 = *($6)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$2 = ($2 + [165])
	goto $label$5 
	
.LABEL $label$7
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$4
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$3
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$2 }
	if ( ((int_64)$1 == (int_64)$9) ){ goto $label$1 }
	CALL $218($0)
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [1456]
	$9 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$8 > (uint_64)(int_64)9) ){ goto $label$13 }
	$2 = *($6)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$2 = ($2 + [165])
	goto $label$11 
	
.LABEL $label$13
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$9
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$8 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [1456]
	$11 = (int_64)0
	
.LOOP $label$14:
	if ( ((uint_64)$8 > (uint_64)(int_64)9) ){ goto $label$19 }
	$2 = *($6)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$18 }
	$2 = ($2 + [165])
	goto $label$17 
	
.LABEL $label$19
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$17
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$16
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$15
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$14 }
	*(($13 + [104])) = [0]
	*($13 + [88]) = (int_64)-1
	*($13 + [96]) = (int_64)0
	*($13 + [80]) = $11
	*($13 + [72]) = $9
	$6 = [0]
	$2 = CALL db_find_i64($9, $11, (int_64)-7880044409994084352, *($0))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$20 }
	$6 = CALL $219(($13 + [72]), $2)
	CALL eosio_assert(((int_32)*($6 + [64]) == (int_32)($13 + [72])), [1104])
	
.LABEL $label$20
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [3728])
	CALL eosio_assert(((int_32)*($6 + [40]) ^ (int_32)[1]), [3792])
	$12 = [10001]
	if ( CALL $220($0, $1) ){ goto $label$28 }
	if ( CALL $221($0, $1) ){ goto $label$28 }
	$12 = [10003]
	if ( CALL $222($0, $1) ){ goto $label$28 }
	if ( (CALL $223($0, $1) == 0) ){ goto $label$29 }
	if ( *($6 + [41]) ){ goto $label$27 }
	$12 = [10004]
	goto $label$28 
	
.LABEL $label$29
	if ( (CALL $224($0, $1) == 0) ){ goto $label$30 }
	if ( *($6 + [43]) ){ goto $label$27 }
	$12 = [10005]
	goto $label$28 
	
.LABEL $label$30
	$2 = CALL $226($0, $1)
	$12 = ( [10002] ? [10000] : $2 )
	if ( ($2 == 0) ){ goto $label$28 }
	if ( (*($6 + [42]) & [255]) ){ goto $label$27 }
	
.LABEL $label$28
	$2 = *($6 + [44])
	if ( ($2 & [1]) ){ goto $label$33 }
	if ( uint_32($2 >> [1]) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$33
	if ( (*(($6 + [48])) == 0) ){ goto $label$31 }
	
.LABEL $label$32
	$3 = ($6 + [44])
	$4 = [0]
	*($13 + [64]) = [0]
	*($13 + [56]) = (int_64)0
	$6 = CALL strlen([3648])
	*($13 + [48]) = $6
	*($13 + [40]) = [0]
	if ( ((uint_32)$6 >= (uint_32)[9]) ){ goto $label$26 }
	$2 = ($13 + [40])
	if ( $6 ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$31
	if ( ((int_32)$12 != (int_32)[10003]) ){ goto $label$23 }
	
.LABEL $label$27
	CALL $225($0)
	$4 = [99999]
	$0 = *($13 + [96])
	if ( $0 ){ goto $label$21 }
	goto $label$1 
	
.LABEL $label$26
	$2 = CALL $281($6)
	*($13 + [40]) = $2
	
.LABEL $label$25
	CALL memmove($2, [3648], $6)
	$4 = *(($13 + [48]))
	
.LABEL $label$24
	CALL $277($2, ($2 + $4), ($13 + [24]))
	$5 = [1]
	CALL $227(($13 + [56]), $3, ($13 + [40]), [1])
	if ( (*(($13 + [48])) <= [9]) ){ goto $label$34 }
	$6 = *($13 + [40])
	if ( ($6 == 0) ){ goto $label$34 }
	CALL $283($6)
	
.LABEL $label$34
	$3 = *($13 + [60])
	$2 = *($13 + [56])
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$35 }
	$5 = (($13 + [24]) + [8])
	
.LOOP $label$38:
	CALL $300(($13 + [24]), $2)
	CALL $300(($13 + [8]), ($13 + [24]))
	$4 = CALL $228($0, $1, ($13 + [8]))
	if ( ((*($13 + [8]) & [1]) == 0) ){ goto $label$39 }
	CALL $282(*((($13 + [8]) + [8])))
	
.LABEL $label$39
	$6 = [0]
	if ( ($4 == 0) ){ goto $label$40 }
	CALL $225($0)
	$6 = [1]
	
.LABEL $label$40
	if ( ((*($13 + [24]) & [1]) == 0) ){ goto $label$41 }
	CALL $282(*($5))
	
.LABEL $label$41
	if ( $6 ){ goto $label$37 }
	$2 = ($2 + [12])
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$38 }
	$5 = [1]
	goto $label$36 
	
.LABEL $label$37
	$5 = [0]
	
.LABEL $label$36
	$2 = *($13 + [56])
	
.LABEL $label$35
	if ( ($2 == 0) ){ goto $label$42 }
	$6 = *($13 + [60])
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$44 }
	$0 = ([0] - $2)
	$6 = ($6 + [-12])
	
.LOOP $label$45:
	if ( ((*($6) & [1]) == 0) ){ goto $label$46 }
	CALL $282(*(($6 + [8])))
	
.LABEL $label$46
	$6 = ($6 + [-12])
	if ( ((int_32)($6 + $0) != (int_32)[-12]) ){ goto $label$45 }
	$6 = *($13 + [56])
	goto $label$43 
	
.LABEL $label$44
	$6 = $2
	
.LABEL $label$43
	*($13 + [60]) = $2
	CALL $282($6)
	
.LABEL $label$42
	$4 = [99999]
	if ( ($5 == 0) ){ goto $label$22 }
	
.LABEL $label$23
	$4 = $12
	
.LABEL $label$22
	$0 = *($13 + [96])
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$21
	$3 = ($13 + [100])
	$6 = *($3)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$48 }
	
.LOOP $label$49:
	$6 = ($6 + [-24])
	$2 = *($6)
	*($6) = [0]
	if ( ($2 == 0) ){ goto $label$50 }
	if ( ((*($2 + [44]) & [1]) == 0) ){ goto $label$51 }
	CALL $282(*(($2 + [52])))
	
.LABEL $label$51
	CALL $282($2)
	
.LABEL $label$50
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$49 }
	$6 = *(($13 + [96]))
	goto $label$47 
	
.LABEL $label$48
	$6 = $0
	
.LABEL $label$47
	*($3) = $0
	CALL $282($6)
	
.LABEL $label$1
	CALL $75(($13 + [112]))
	*([0] + [4]) = ($13 + [176])
	return $4
}

void .FUNC _ZN6NiuNiu4testEy (int_32 $0, int_64 $1)
{
}

void .FUNC _ZN6NiuNiu2onERKN5eosio8currency8transferE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [176])
	*([0] + [4]) = $10
	*($10 + [160]) = (int_64)0
	*($10 + [168]) = [0]
	$9 = (uint_64)*(($1 + [24])) >> (uint_64)(int_64)8
	if ( (int_64)($9) == 0) ){ goto $label$1 }
	
.LOOP $label$2:
	CALL $291(($10 + [160]), int_32(((CASTING uint_32)(uint_64 $9) << [24]) >> [24]))
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	
.LABEL $label$1
	$9 = *($1)
	CALL prints([2736])
	CALL prints([2752])
	CALL printn($9)
	CALL prints([2768])
	$5 = *($10 + [160])
	$6 = ($5 & [1])
	CALL prints_l(( *(($10 + [168])) ? (($10 + [160]) | [1]) : $6 ), ( *($10 + [164]) ? uint_32($5 >> [1]) : $6 ))
	CALL prints([2784])
	$5 = *($1 + [32])
	$6 = ($5 & [1])
	CALL prints_l(( *(($1 + [40])) ? ($1 + [33]) : $6 ), ( *(($1 + [36])) ? uint_32($5 >> [1]) : $6 ))
	CALL prints([560])
	CALL _ZN6NiuNiu14_transactionidEv($10)
	$5 = *($10 + [160])
	$6 = CALL strlen([2800])
	if ( ((int_32)$6 != (int_32)( *($10 + [164]) ? uint_32($5 >> [1]) : ($5 & [1]) )) ){ goto $label$3 }
	if ( CALL $294(($10 + [160]), [0], [-1], [2800], $6) ){ goto $label$3 }
	if ( ((int_64)*($1 + [8]) != (int_64)*($0)) ){ goto $label$3 }
	$2 = ($1 + [16])
	$5 = ($1 + [32])
	CALL _ZN6NiuNiu14_getconfiginfoEv(($10 + [112]), $0)
	$7 = ($1 + [32])
	$6 = *($7)
	$8 = ($1 + [36])
	$3 = CALL strlen([2816])
	if ( ((int_32)$3 != (int_32)( *($8) ? uint_32($6 >> [1]) : ($6 & [1]) )) ){ goto $label$56 }
	if ( (CALL $294($5, [0], [-1], [2816], $3) == 0) ){ goto $label$55 }
	
.LABEL $label$56
	$6 = *($7)
	$3 = CALL strlen([2912])
	if ( ((int_32)$3 != (int_32)( *($8) ? uint_32($6 >> [1]) : ($6 & [1]) )) ){ goto $label$58 }
	if ( (CALL $294($5, [0], [-1], [2912], $3) == 0) ){ goto $label$57 }
	
.LABEL $label$58
	$7 = ($1 + [32])
	$6 = *($7)
	$8 = ($1 + [36])
	$3 = CALL strlen([2928])
	if ( ((int_32)$3 != (int_32)( *($8) ? uint_32($6 >> [1]) : ($6 & [1]) )) ){ goto $label$59 }
	if ( (CALL $294($5, [0], [-1], [2928], $3) == 0) ){ goto $label$57 }
	
.LABEL $label$59
	$6 = *($7)
	$3 = CALL strlen([2944])
	if ( ((int_32)$3 != (int_32)( *($8) ? uint_32($6 >> [1]) : ($6 & [1]) )) ){ goto $label$60 }
	if ( (CALL $294($5, [0], [-1], [2944], $3) == 0) ){ goto $label$57 }
	
.LABEL $label$60
	$6 = *(($1 + [32]))
	$8 = CALL strlen([2960])
	if ( ((int_32)$8 != (int_32)( *(($1 + [36])) ? uint_32($6 >> [1]) : ($6 & [1]) )) ){ goto $label$3 }
	if ( CALL $294($5, [0], [-1], [2960], $8) ){ goto $label$3 }
	
.LABEL $label$57
	if ( ((int_64)*($10 + [112]) != (int_64)1) ){ goto $label$61 }
	$9 = *($1)
	*(($10 + [24])) = [0]
	*($10 + [16]) = (int_64)0
	$1 = CALL strlen([2976])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$10 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$54 }
	*($10 + [16]) = ($1 << [1])
	$5 = (($10 + [16]) | [1])
	if ( $1 ){ goto $label$53 }
	goto $label$52 
	
.LABEL $label$61
	$6 = ($0 + [8])
	$8 = *(($0 + [36]))
	if ( ((int_32)$8 == (int_32)*(($0 + [32]))) ){ goto $label$50 }
	$8 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [96]) == (int_32)$6), [1104])
	if ( $8 ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$55
	if ( ((int_64)*($10 + [112]) != (int_64)1) ){ goto $label$51 }
	$9 = *($1)
	*(($10 + [24])) = [0]
	*($10 + [16]) = (int_64)0
	$1 = CALL strlen([2832])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$8 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$43 }
	*($10 + [16]) = ($1 << [1])
	$5 = (($10 + [16]) | [1])
	if ( $1 ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$54
	$6 = (($1 + [16]) & [-16])
	$5 = CALL $280($6)
	*($10 + [16]) = ($6 | [1])
	*($10 + [24]) = $5
	*($10 + [20]) = $1
	
.LABEL $label$53
	CALL memcpy($5, [2976], $1)
	
.LABEL $label$52
	*(($5 + $1)) = [0]
	CALL _ZN6NiuNiu8_backeosEyRKN5eosio5assetERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($0, $9, $2, ($10 + [16]))
	if ( ((*($10 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $282(*($10 + [24]))
	goto $label$3 
	
.LABEL $label$51
	if ( ((int_64)*($2) > (int_64)499999) ){ goto $label$44 }
	$9 = *($1)
	*(($10 + [24])) = [0]
	*($10 + [16]) = (int_64)0
	$1 = CALL strlen([2864])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$36 }
	*($10 + [16]) = ($1 << [1])
	$5 = (($10 + [16]) | [1])
	if ( $1 ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$50
	$8 = CALL db_find_i64(*($6), *(($0 + [16])), (int_64)7035929282832498688, (int_64)7035929282832498688)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$48 }
	CALL eosio_assert(((int_32)*(CALL $62($6, $8) + [96]) == (int_32)$6), [1104])
	
.LABEL $label$49
	CALL _ZN6NiuNiu11_getgamectxEv(($10 + [16]), $0)
	$6 = *($10 + [56])
	$8 = CALL strlen([1344])
	if ( ((int_32)$8 != (int_32)( *(($10 + [60])) ? uint_32($6 >> [1]) : ($6 & [1]) )) ){ goto $label$62 }
	if ( (CALL $294(($10 + [56]), [0], [-1], [1344], $8) == 0) ){ goto $label$37 }
	
.LABEL $label$62
	$9 = *($1)
	*(($10 + [8])) = [0]
	*($10) = (int_64)0
	$1 = CALL strlen([3008])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$47 }
	*($10) = ($1 << [1])
	$5 = ($10 | [1])
	if ( $1 ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$48
	$9 = *($1)
	*(($10 + [24])) = [0]
	*($10 + [16]) = (int_64)0
	$1 = CALL strlen([3104])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$40 }
	*($10 + [16]) = ($1 << [1])
	$5 = (($10 + [16]) | [1])
	if ( $1 ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$47
	$6 = (($1 + [16]) & [-16])
	$5 = CALL $280($6)
	*($10) = ($6 | [1])
	*($10 + [8]) = $5
	*($10 + [4]) = $1
	
.LABEL $label$46
	CALL memcpy($5, [3008], $1)
	
.LABEL $label$45
	*(($5 + $1)) = [0]
	CALL _ZN6NiuNiu8_backeosEyRKN5eosio5assetERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($0, $9, $2, $10)
	if ( ((*($10) & [1]) == 0) ){ goto $label$4 }
	CALL $282(*($10 + [8]))
	goto $label$4 
	
.LABEL $label$44
	CALL prints([2128])
	CALL printi((int_64)699)
	CALL prints([560])
	$5 = ($0 + [8])
	$6 = *(($0 + [36]))
	if ( ((int_32)$6 == (int_32)*(($0 + [32]))) ){ goto $label$33 }
	$6 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [96]) == (int_32)$5), [1104])
	if ( $6 ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$43
	$6 = (($1 + [16]) & [-16])
	$5 = CALL $280($6)
	*($10 + [16]) = ($6 | [1])
	*($10 + [24]) = $5
	*($10 + [20]) = $1
	
.LABEL $label$42
	CALL memcpy($5, [2832], $1)
	
.LABEL $label$41
	*(($5 + $1)) = [0]
	CALL _ZN6NiuNiu8_backeosEyRKN5eosio5assetERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($0, $9, $2, ($10 + [16]))
	if ( ((*($10 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $282(*($10 + [24]))
	goto $label$3 
	
.LABEL $label$40
	$6 = (($1 + [16]) & [-16])
	$5 = CALL $280($6)
	*($10 + [16]) = ($6 | [1])
	*($10 + [24]) = $5
	*($10 + [20]) = $1
	
.LABEL $label$39
	CALL memcpy($5, [3104], $1)
	
.LABEL $label$38
	*(($5 + $1)) = [0]
	CALL _ZN6NiuNiu8_backeosEyRKN5eosio5assetERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($0, $9, $2, ($10 + [16]))
	if ( ((*($10 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $282(*($10 + [24]))
	goto $label$3 
	
.LABEL $label$37
	$7 = ($1 + [32])
	$6 = *($7)
	$8 = ($1 + [36])
	$3 = CALL strlen([2912])
	if ( ((int_32)$3 != (int_32)( *($8) ? uint_32($6 >> [1]) : ($6 & [1]) )) ){ goto $label$63 }
	if ( (CALL $294($5, [0], [-1], [2912], $3) == 0) ){ goto $label$25 }
	
.LABEL $label$63
	$6 = *($7)
	$3 = CALL strlen([2928])
	if ( ((int_32)$3 != (int_32)( *($8) ? uint_32($6 >> [1]) : ($6 & [1]) )) ){ goto $label$64 }
	if ( (CALL $294($5, [0], [-1], [2928], $3) == 0) ){ goto $label$24 }
	
.LABEL $label$64
	$7 = ($1 + [32])
	$6 = *($7)
	$8 = ($1 + [36])
	$3 = CALL strlen([2944])
	if ( ((int_32)$3 != (int_32)( *($8) ? uint_32($6 >> [1]) : ($6 & [1]) )) ){ goto $label$65 }
	if ( (CALL $294($5, [0], [-1], [2944], $3) == 0) ){ goto $label$23 }
	
.LABEL $label$65
	$6 = *($7)
	$3 = CALL strlen([2960])
	if ( ((int_32)$3 != (int_32)( *($8) ? uint_32($6 >> [1]) : ($6 & [1]) )) ){ goto $label$4 }
	if ( CALL $294($5, [0], [-1], [2960], $3) ){ goto $label$4 }
	$9 = *($1)
	*(($10 + [8])) = [0]
	*($10) = (int_64)0
	$1 = CALL strlen([3088])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$13 }
	*($10) = ($1 << [1])
	$5 = ($10 | [1])
	if ( $1 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$36
	$6 = (($1 + [16]) & [-16])
	$5 = CALL $280($6)
	*($10 + [16]) = ($6 | [1])
	*($10 + [24]) = $5
	*($10 + [20]) = $1
	
.LABEL $label$35
	CALL memcpy($5, [2864], $1)
	
.LABEL $label$34
	*(($5 + $1)) = [0]
	CALL _ZN6NiuNiu8_backeosEyRKN5eosio5assetERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($0, $9, $2, ($10 + [16]))
	if ( ((*($10 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $282(*($10 + [24]))
	goto $label$3 
	
.LABEL $label$33
	$6 = CALL db_find_i64(*($5), *(($0 + [16])), (int_64)7035929282832498688, (int_64)7035929282832498688)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$31 }
	CALL eosio_assert(((int_32)*(CALL $62($5, $6) + [96]) == (int_32)$5), [1104])
	
.LABEL $label$32
	CALL _ZN6NiuNiu11_getgamectxEv(($10 + [16]), $0)
	if ( (CALL _ZN6NiuNiu15_isinbankerlistEy($0, *($1)) == 0) ){ goto $label$30 }
	$9 = *($1)
	goto $label$29 
	
.LABEL $label$31
	CALL prints([2128])
	CALL printi((int_64)710)
	CALL prints([560])
	CALL _ZN6NiuNiu10_setbankerEyRKN5eosio5assetE($0, *($1), $2)
	goto $label$26 
	
.LABEL $label$30
	$4 = *($1)
	$9 = *($10 + [16])
	if ( ((int_64)$9 != (int_64)$4) ){ goto $label$28 }
	
.LABEL $label$29
	*(($10 + [8])) = [0]
	*($10) = (int_64)0
	$1 = CALL strlen([2896])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$68 }
	*($10) = ($1 << [1])
	$5 = ($10 | [1])
	if ( $1 ){ goto $label$67 }
	goto $label$66 
	
.LABEL $label$68
	$6 = (($1 + [16]) & [-16])
	$5 = CALL $280($6)
	*($10) = ($6 | [1])
	*($10 + [8]) = $5
	*($10 + [4]) = $1
	
.LABEL $label$67
	CALL memcpy($5, [2896], $1)
	
.LABEL $label$66
	*(($5 + $1)) = [0]
	CALL _ZN6NiuNiu8_backeosEyRKN5eosio5assetERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($0, $9, $2, $10)
	if ( ((*($10) & [1]) == 0) ){ goto $label$27 }
	CALL $282(*($10 + [8]))
	goto $label$27 
	
.LABEL $label$28
	CALL _ZN6NiuNiu10_addbankerEyRKN5eosio5assetE($0, $4, $2)
	
.LABEL $label$27
	if ( ((*($10 + [56]) & [1]) == 0) ){ goto $label$69 }
	CALL $282(*(($10 + [64])))
	
.LABEL $label$69
	if ( ((*($10 + [44]) & [1]) == 0) ){ goto $label$26 }
	CALL $282(*(($10 + [52])))
	
.LABEL $label$26
	CALL prints([2128])
	CALL printi((int_64)713)
	CALL prints([560])
	goto $label$3 
	
.LABEL $label$25
	$9 = *($1)
	*(($10 + [8])) = [0]
	*($10) = (int_64)0
	$1 = CALL strlen([3040])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$22 }
	*($10) = ($1 << [1])
	$5 = ($10 | [1])
	if ( $1 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$24
	$9 = *($1)
	*(($10 + [8])) = [0]
	*($10) = (int_64)0
	$1 = CALL strlen([3056])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$19 }
	*($10) = ($1 << [1])
	$5 = ($10 | [1])
	if ( $1 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$23
	$9 = *($1)
	*(($10 + [8])) = [0]
	*($10) = (int_64)0
	$1 = CALL strlen([3072])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$16 }
	*($10) = ($1 << [1])
	$5 = ($10 | [1])
	if ( $1 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$22
	$6 = (($1 + [16]) & [-16])
	$5 = CALL $280($6)
	*($10) = ($6 | [1])
	*($10 + [8]) = $5
	*($10 + [4]) = $1
	
.LABEL $label$21
	CALL memcpy($5, [3040], $1)
	
.LABEL $label$20
	*(($5 + $1)) = [0]
	CALL _ZN6NiuNiu4_betEyRKN5eosio5assetERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($0, $9, $2, $10)
	if ( ((*($10) & [1]) == 0) ){ goto $label$4 }
	CALL $282(*($10 + [8]))
	goto $label$4 
	
.LABEL $label$19
	$6 = (($1 + [16]) & [-16])
	$5 = CALL $280($6)
	*($10) = ($6 | [1])
	*($10 + [8]) = $5
	*($10 + [4]) = $1
	
.LABEL $label$18
	CALL memcpy($5, [3056], $1)
	
.LABEL $label$17
	*(($5 + $1)) = [0]
	CALL _ZN6NiuNiu4_betEyRKN5eosio5assetERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($0, $9, $2, $10)
	if ( ((*($10) & [1]) == 0) ){ goto $label$4 }
	CALL $282(*($10 + [8]))
	goto $label$4 
	
.LABEL $label$16
	$6 = (($1 + [16]) & [-16])
	$5 = CALL $280($6)
	*($10) = ($6 | [1])
	*($10 + [8]) = $5
	*($10 + [4]) = $1
	
.LABEL $label$15
	CALL memcpy($5, [3072], $1)
	
.LABEL $label$14
	*(($5 + $1)) = [0]
	CALL _ZN6NiuNiu4_betEyRKN5eosio5assetERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($0, $9, $2, $10)
	if ( ((*($10) & [1]) == 0) ){ goto $label$4 }
	CALL $282(*($10 + [8]))
	goto $label$4 
	
.LABEL $label$13
	$6 = (($1 + [16]) & [-16])
	$5 = CALL $280($6)
	*($10) = ($6 | [1])
	*($10 + [8]) = $5
	*($10 + [4]) = $1
	
.LABEL $label$12
	CALL memcpy($5, [3088], $1)
	
.LABEL $label$11
	*(($5 + $1)) = [0]
	CALL _ZN6NiuNiu4_betEyRKN5eosio5assetERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($0, $9, $2, $10)
	if ( ((*($10) & [1]) == 0) ){ goto $label$4 }
	CALL $282(*($10 + [8]))
	goto $label$4 
	
.LABEL $label$10
	CALL $284(($10 + [16]))
	
.LABEL $label$9
	CALL $284($10)
	
.LABEL $label$8
	CALL $284(($10 + [16]))
	
.LABEL $label$7
	CALL $284(($10 + [16]))
	
.LABEL $label$6
	CALL $284(($10 + [16]))
	
.LABEL $label$5
	CALL $284($10)
	
.LABEL $label$4
	if ( ((*(($10 + [56])) & [1]) == 0) ){ goto $label$70 }
	CALL $282(*(($10 + [64])))
	
.LABEL $label$70
	if ( ((*($10 + [44]) & [1]) == 0) ){ goto $label$3 }
	CALL $282(*(($10 + [52])))
	
.LABEL $label$3
	if ( ((*($10 + [160]) & [1]) == 0) ){ goto $label$71 }
	CALL $282(*(($10 + [168])))
	
.LABEL $label$71
	*([0] + [4]) = ($10 + [176])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC _ZN6NiuNiu12cleargamectxEy (int_32 $0, int_64 $1)
{
	CALL require_auth($1)
	CALL eosio_assert(((int_64)*($0) == (int_64)$1), [1312])
	CALL _ZN6NiuNiu13_cleargamectxEv($0)
}

int_32 .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [1056])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

void .FUNC __shlim (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	*($0 + [112]) = $1
	$2 = *($0 + [4])
	$3 = *($0 + [8])
	$4 = (CASTING int_64)(int_32 ($3 - $2))
	*($0 + [120]) = $4
	*($0 + [104]) = ( ( ($2 + (CASTING uint_32)(uint_64 $1)) ? $3 : ((int_64)$4 > (int_64)$1) ) ? $3 : ((int_64)$1 != (int_64)0) )
}

int_32 .FUNC strtoul (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [144])
	*([0] + [4]) = $4
	*($4 + [4]) = $0
	*($4 + [44]) = $0
	*($4) = [0]
	*($4 + [76]) = [-1]
	*($4 + [8]) = ( [-1] ? ($0 + [2147483647]) : ((int_32)$0 < (int_32)[0]) )
	CALL __shlim($4, (int_64)0)
	$3 = CALL __intscan($4, $2, [1], (int_64)4294967295)
	if ( ($1 == 0) ){ goto $label$1 }
	*($1) = ($0 + (CASTING uint_32)(uint_64 ((int_64)(CASTING uint_64)(uint_32 (*($4 + [4]) - *(($4 + [8])))) + (int_64)*($4 + [120]))))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [144])
	return (CASTING uint_32)(uint_64 $3)
}

void .FUNC $193 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [48]) == (int_32)$0), [1104])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)4982871462359400448, (int_64)4982871462359400448)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $50($0, $3)
	CALL eosio_assert(((int_32)*($3 + [48]) == (int_32)$0), [1104])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [1472])
	CALL $194($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $195($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC __lctrans (int_32 $0, int_32 $1)
{
	return CALL __lctrans_impl($0, $1)
}

int_32 .FUNC memchr (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = [0]
	$4 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$7:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$3 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$4 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	$5 = $2
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = $2
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)($1 & [255])) ){ goto $label$8 }
	if ( ($5 <= [4]) ){ goto $label$10 }
	$4 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$4)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$8 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$8
	$6 = $5
	
.LABEL $label$1
	return ( $0 ? [0] : $6 )
}

int_32 .FUNC __mo_lookup (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = *($0)
	$10 = ((int_32)$3 == (int_32)[-1794895138])
	$9 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	$4 = *($0 + [8])
	$5 = ( $4 ? $9 : $10 )
	if ( ((uint_32)$5 >= (uint_32)uint_32($1 >> [2])) ){ goto $label$4 }
	$12 = ($1 - ($5 << [2]))
	$11 = *($0 + [12])
	$6 = ( $11 ? ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24]))) : $10 )
	if ( ((uint_32)$6 >= (uint_32)$12) ){ goto $label$3 }
	$11 = *($0 + [16])
	$10 = ( $11 ? ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24]))) : $10 )
	if ( ((uint_32)$10 >= (uint_32)$12) ){ goto $label$2 }
	if ( ((($10 | $6) & [3]) == 0) ){ goto $label$1 }
	return [0]
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	return [0]
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	$12 = uint_32($6 >> [2])
	if ( ((int_32)$3 != (int_32)[-1794895138]) ){ goto $label$16 }
	$5 = uint_32($5 >> [1])
	$6 = ($5 << [1])
	$9 = ($0 + (($6 + $12) << [2]))
	$11 = *(($9 + [4]))
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$15 }
	$8 = *($9)
	if ( ((uint_32)$8 >= (uint_32)($1 - $11)) ){ goto $label$14 }
	$9 = $5
	$7 = [0]
	
.LOOP $label$17:
	if ( *(($0 + ($11 + $8))) ){ goto $label$9 }
	$11 = CALL strcmp($2, ($0 + $11))
	if ( ($11 == 0) ){ goto $label$11 }
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$7 }
	$13 = [0]
	$4 = ( $9 ? ($4 - $9) : $11 )
	$9 = uint_32($4 >> [1])
	$11 = ((int_32)$11 < (int_32)[0])
	$7 = ( $7 ? $5 : $11 )
	$5 = ($7 + $9)
	$6 = ($5 << [1])
	$8 = ($0 + (($6 + $12) << [2]))
	$11 = *(($8 + [4]))
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$10 }
	$8 = *($8)
	if ( ($8 <= ($1 - $11)) ){ goto $label$17 }
	goto $label$10 
	
.LABEL $label$16
	$8 = uint_32($9 >> [1])
	$6 = ($8 << [1])
	$11 = ($0 + (($6 + $12) << [2]))
	$4 = *(($11 + [4]))
	$4 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$13 }
	$11 = *($11)
	$11 = ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24])))
	if ( ((uint_32)$11 >= (uint_32)($1 - $4)) ){ goto $label$12 }
	$5 = $8
	$7 = [0]
	
.LOOP $label$18:
	if ( *(($0 + ($4 + $11))) ){ goto $label$8 }
	$4 = CALL strcmp($2, ($0 + $4))
	if ( ($4 == 0) ){ goto $label$11 }
	if ( ((int_32)$9 == (int_32)[1]) ){ goto $label$6 }
	$13 = [0]
	$9 = ( $5 ? ($9 - $5) : $4 )
	$5 = uint_32($9 >> [1])
	$4 = ((int_32)$4 < (int_32)[0])
	$7 = ( $7 ? $8 : $4 )
	$8 = ($7 + $5)
	$6 = ($8 << [1])
	$11 = ($0 + (($6 + $12) << [2]))
	$4 = *(($11 + [4]))
	$4 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$10 }
	$11 = *($11)
	$11 = ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24])))
	if ( ($11 <= ($1 - $4)) ){ goto $label$18 }
	goto $label$10 
	
.LABEL $label$15
	return [0]
	
.LABEL $label$14
	return [0]
	
.LABEL $label$13
	return [0]
	
.LABEL $label$12
	return [0]
	
.LABEL $label$11
	$9 = ((int_32)$3 == (int_32)[-1794895138])
	$10 = ($0 + (($6 + uint_32($10 >> [2])) << [2]))
	$4 = *(($10 + [4]))
	$11 = ( $4 ? ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24]))) : $9 )
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$5 }
	$13 = [0]
	$4 = *($10)
	$4 = ( $4 ? ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24]))) : $9 )
	if ( ((uint_32)$4 >= (uint_32)($1 - $11)) ){ goto $label$10 }
	return ( [0] ? ($0 + $11) : *(($0 + ($11 + $4))) )
	
.LABEL $label$10
	return $13
	
.LABEL $label$9
	return [0]
	
.LABEL $label$8
	return [0]
	
.LABEL $label$7
	return [0]
	
.LABEL $label$6
	return [0]
	
.LABEL $label$5
	return [0]
}

int_32 .FUNC __lctrans_impl (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	$1 = CALL __mo_lookup(*($1), *($1 + [4]), $0)
	return ( $1 ? $0 : $1 )
	
.LABEL $label$1
	return ( [0] ? $0 : [0] )
}

int_32 .FUNC __towrite (int_32 $0)
{
	int_32 $1
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [255]) | $1)
	$1 = *($0)
	if ( ($1 & [8]) ){ goto $label$1 }
	*($0 + [4 align=4]) = (int_64)0
	$1 = *($0 + [44])
	*($0 + [28]) = $1
	*($0 + [20]) = $1
	*($0 + [16]) = ($1 + *($0 + [48]))
	return [0]
	
.LABEL $label$1
	*($0) = ($1 | [32])
	return [-1]
}

int_32 .FUNC strcmp (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($1)
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ((int_32)$2 != (int_32)($3 & [255])) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	
.LOOP $label$2:
	$3 = *($1)
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	if ( ((int_32)$2 == (int_32)($3 & [255])) ){ goto $label$2 }
	
.LABEL $label$1
	return ($2 - ($3 & [255]))
}

int_32 .FUNC abs (int_32 $0)
{
	int_32 $1
	$1 = int_32($0 >> [31])
	return ((int_32)($0 + $1) ^ (int_32)$1)
}

int_64 .FUNC llabs (int_64 $0)
{
	int_64 $1
	$1 = (int_64)$0 >> (int_64)63
	return ((int_64)((int_64)$0 + (int_64)$1)) ^ (int_64)$1)
}

void .FUNC _ZN6NiuNiu13_clearbetinfoEv (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL prints([1936])
	CALL prints([560])
	*(($5 + [32])) = [0]
	*($5 + [16]) = (int_64)-1
	$2 = *($0)
	*($5) = $2
	*($5 + [8]) = $2
	*($5 + [24]) = (int_64)0
	$3 = CALL db_lowerbound_i64($2, $2, (int_64)4229699935735382016, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $112($5, $3)
	
.LOOP $label$2:
	CALL prints([1952])
	CALL printui(*($3 + [8]))
	CALL prints([560])
	CALL eosio_assert([1], [768])
	CALL eosio_assert([1], [816])
	$4 = [0]
	$1 = CALL db_next_i64(*($3 + [28]), ($5 + [40]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $112($5, $1)
	
.LABEL $label$3
	CALL $114($5, $3)
	$3 = $4
	if ( $4 ){ goto $label$2 }
	
.LABEL $label$1
	CALL _ZN6NiuNiu12_clearbetlogEv($0)
	$1 = *($5 + [24])
	if ( ($1 == 0) ){ goto $label$4 }
	$0 = ($5 + [28])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $282($4)
	
.LABEL $label$8
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$7 }
	$3 = *(($5 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$3 = $1
	
.LABEL $label$5
	*($0) = $1
	CALL $282($3)
	
.LABEL $label$4
	*([0] + [4]) = ($5 + [48])
}

void .FUNC $100 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [16])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($0 + [4]), $2, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC _ZN6NiuNiu13_cleargamectxEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	$1 = ($0 + [8])
	$2 = *(($0 + [36]))
	if ( ((int_32)$2 == (int_32)*(($0 + [32]))) ){ goto $label$3 }
	$2 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [96]) == (int_32)$1), [1104])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$2 = CALL db_find_i64(*($1), *(($0 + [16])), (int_64)7035929282832498688, (int_64)7035929282832498688)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*(CALL $62($1, $2) + [96]) == (int_32)$1), [1104])
	
.LABEL $label$2
	$2 = *(($0 + [36]))
	if ( ((int_32)$2 == (int_32)*(($0 + [32]))) ){ goto $label$5 }
	$0 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($0 + [96]) == (int_32)$1), [1104])
	if ( $0 ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$5
	$0 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)7035929282832498688, (int_64)7035929282832498688)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $62($1, $0)
	CALL eosio_assert(((int_32)*($0 + [96]) == (int_32)$1), [1104])
	
.LABEL $label$4
	CALL eosio_assert([1], [768])
	CALL eosio_assert([1], [816])
	$2 = CALL db_next_i64(*($0 + [100]), ($3 + [8]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$6 }
	CALL $62($1, $2)
	
.LABEL $label$6
	CALL $109($1, $0)
	
.LABEL $label$1
	*([0] + [4]) = ($3 + [16])
}

void .FUNC _ZN6NiuNiu14_simplebackeosEyyRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [192])
	*([0] + [4]) = $14
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1872])
	$9 = [0]
	$11 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [1840])
	$11 = CALL current_time()
	*(($14 + [116])) = [0]
	*(($14 + [120])) = [0]
	*($14 + [100]) = [0]
	*($14 + [104]) = [0]
	*($14 + [108]) = [0]
	*($14 + [112]) = [0]
	*($14 + [88]) = ((CASTING uint_32)(uint_64 ((uint_64)$11 / (uint_64)(int_64)1000000)) + [60])
	*($14 + [124]) = [0]
	*(($14 + [128])) = [0]
	*(($14 + [132])) = [0]
	*($14 + [136]) = [0]
	*(($14 + [140])) = [0]
	*(($14 + [144])) = [0]
	$5 = ($14 + [124])
	$4 = *($0)
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [1424]
	$12 = (int_64)0
	
.LOOP $label$6:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$11 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$6 = ($6 + [165])
	goto $label$9 
	
.LABEL $label$11
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$10
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$8
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$7
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$6 }
	*($14 + [80]) = $12
	*($14 + [72]) = $4
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [688]
	$12 = (int_64)0
	
.LOOP $label$12:
	if ( ((uint_64)$11 > (uint_64)(int_64)10) ){ goto $label$17 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$16 }
	$6 = ($6 + [165])
	goto $label$15 
	
.LABEL $label$17
	$13 = (int_64)0
	if ( ((int_64)$11 == (int_64)11) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$15
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$14
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$13
	$9 = ($9 + [1])
	$10 = ((int_64)$10 + (int_64)-5)
	$12 = ((int_64)$13 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)1)
	if ( ((int_64)$11 != (int_64)13) ){ goto $label$12 }
	*($14 + [64]) = $12
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [672]
	$12 = (int_64)0
	
.LOOP $label$18:
	if ( ((uint_64)$11 > (uint_64)(int_64)7) ){ goto $label$23 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$22 }
	$6 = ($6 + [165])
	goto $label$21 
	
.LABEL $label$23
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$22
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$21
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$20
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$19
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$18 }
	*($14 + [56]) = $12
	*(($14 + [24])) = (int_64)1397703940
	*($14 + [8]) = $1
	*($14) = $4
	*($14 + [16]) = $2
	$9 = *($3 + [8])
	$6 = *($3)
	*(($14 + [40])) = [0]
	*($14 + [32]) = (int_64)0
	$7 = ($14 + [32])
	$3 = ( $9 ? ($3 + [1]) : ($6 & [1]) )
	$9 = CALL strlen($3)
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$24 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$27 }
	*(($14 + [32])) = ($9 << [1])
	$6 = ($7 + [1])
	if ( $9 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$8 = (($9 + [16]) & [-16])
	$6 = CALL $280($8)
	*(($14 + [32])) = ($8 | [1])
	*(($14 + [40])) = $6
	*(($14 + [36])) = $9
	
.LABEL $label$26
	CALL memcpy($6, $3, $9)
	
.LABEL $label$25
	*(($6 + $9)) = [0]
	$6 = *(($14 + [128]))
	if ( ((uint_32)$6 >= (uint_32)*(($14 + [132]))) ){ goto $label$31 }
	$3 = ($14 + [8])
	*($6 + [8]) = *($14 + [56])
	*($6) = *($14 + [64])
	*($6 + [16 align=4]) = (int_64)0
	*(($5 = ($6 + [24]))) = [0]
	$9 = CALL $280([16])
	*($6 + [16]) = $9
	$8 = ($9 + [16])
	*($5) = $8
	*(($9 + [8])) = *((($14 + [72]) + [8]))
	*($9) = *($14 + [72])
	*(($6 + [20])) = $8
	*($6 + [28]) = [0]
	*(($6 + [32])) = [0]
	*(($6 + [36])) = [0]
	$9 = *(($14 + [32]))
	$5 = ( *(($14 + [36])) ? uint_32($9 >> [1]) : ($9 & [1]) )
	$9 = ($5 + [32])
	$11 = (CASTING uint_64)(uint_32 $5)
	$5 = ($6 + [28])
	
.LOOP $label$32:
	$9 = ($9 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$32 }
	if ( ($9 == 0) ){ goto $label$30 }
	CALL $77($5, $9)
	$5 = *(($6 + [32]))
	$9 = *(($6 + [28]))
	goto $label$29 
	
.LABEL $label$31
	CALL $111($5, ($14 + [72]), ($14 + [64]), ($14 + [56]), $14)
	goto $label$28 
	
.LABEL $label$30
	$5 = [0]
	$9 = [0]
	
.LABEL $label$29
	*($14 + [156]) = $9
	*($14 + [152]) = $9
	*($14 + [160]) = $5
	*($14 + [168]) = ($14 + [152])
	*($14 + [180]) = $3
	*($14 + [184]) = ($14 + [16])
	*($14 + [188]) = $7
	*($14 + [176]) = $14
	CALL $110(($14 + [176]), ($14 + [168]))
	*(($9 = (($14 + [88]) + [40]))) = (*($9) + [40])
	
.LABEL $label$28
	if ( ((*(($14 + [32])) & [1]) == 0) ){ goto $label$33 }
	CALL $282(*(($14 + [40])))
	
.LABEL $label$33
	*(($14 + [108])) = [0]
	$2 = CALL _ZN6NiuNiu13_getglobalcntEv($0)
	*($14) = $2
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [1456]
	$12 = (int_64)0
	
.LOOP $label$34:
	if ( ((uint_64)$11 > (uint_64)(int_64)9) ){ goto $label$39 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$38 }
	$6 = ($6 + [165])
	goto $label$37 
	
.LABEL $label$39
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$38
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$37
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$36
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$35
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$34 }
	*($14) = ((int_64)( $12 ? (int_64)1 : (int_64)($2 == 0) ) + (int_64)$2)
	CALL $73(($0 + [88]), $14, *($0))
	$11 = *($14)
	*($14 + [8]) = (int_64)0
	*($14) = $11
	$11 = *($0)
	CALL $74(($14 + [176]), ($14 + [88]))
	$9 = *($14 + [176])
	CALL send_deferred($14, $11, $9, (*($14 + [180]) - $9), [0])
	$9 = *($14 + [176])
	if ( ($9 == 0) ){ goto $label$40 }
	*($14 + [180]) = $9
	CALL $282($9)
	
.LABEL $label$40
	CALL $75(($14 + [88]))
	*([0] + [4]) = ($14 + [192])
	return (unreachable)
	
.LABEL $label$24
	CALL $284($7)
}

int_32 .FUNC $105 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [1024])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $280([32])) + [16]) = [0]
	*($6 + [8]) = (int_64)0
	*($6 + [20]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [1056])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [1056])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[16]), [1056])
	CALL memcpy(($6 + [16]), ($7 + [16]), [4])
	*($6 + [24]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [24])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $108(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $282($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC _ZN6NiuNiu14_autosetbankerEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [160])
	*([0] + [4]) = $9
	*(($9 + [152])) = [0]
	*($9 + [136]) = (int_64)-1
	$5 = *($0)
	*($9 + [120]) = $5
	*($9 + [128]) = $5
	$8 = (int_64)0
	*($9 + [144]) = (int_64)0
	$7 = CALL db_lowerbound_i64($5, $5, (int_64)4154295083342381056, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $105(($9 + [120]), $7)
	
.LOOP $label$4:
	if ( ((uint_64)*($7 + [8]) <= (uint_64)$8) ){ goto $label$5 }
	$8 = *($7)
	
.LABEL $label$5
	CALL eosio_assert([1], [816])
	$7 = CALL db_next_i64(*($7 + [24]), ($9 + [16]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$6 }
	$7 = CALL $105(($9 + [120]), $7)
	goto $label$4 
	
.LABEL $label$6
	if ( (int_64)($8 == 0) ){ goto $label$3 }
	$1 = *(($9 + [144]))
	$3 = *(($9 + [148]))
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$7 }
	$7 = ($3 + [-24])
	$2 = ([0] - $1)
	
.LOOP $label$8:
	if ( ((int_64)*(*($7)) == (int_64)$8) ){ goto $label$7 }
	$3 = $7
	$4 = ($7 + [-24])
	$7 = $4
	if ( ((int_32)($4 + $2) != (int_32)[-24]) ){ goto $label$8 }
	
.LABEL $label$7
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$10 }
	$7 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [20]) == (int_32)($9 + [120])), [1104])
	if ( $7 ){ goto $label$9 }
	goto $label$3 
	
.LABEL $label$10
	$7 = CALL db_find_i64(*($9 + [120]), *(($9 + [128])), (int_64)4154295083342381056, $8)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $105(($9 + [120]), $7)
	CALL eosio_assert(((int_32)*($7 + [20]) == (int_32)($9 + [120])), [1104])
	
.LABEL $label$9
	*($9 + [112]) = *($7)
	*(($9 + [52])) = [0]
	*($9 + [16]) = (int_64)0
	*($9 + [24]) = (int_64)0
	*($9 + [32]) = (int_64)0
	*($9 + [40]) = [0]
	*($9 + [44 align=4]) = (int_64)0
	$3 = ($9 + [44])
	$4 = CALL strlen([224])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$13 }
	*(($9 + [44])) = ($4 << [1])
	$2 = ($3 + [1])
	if ( $4 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$1 = (($4 + [16]) & [-16])
	$2 = CALL $280($1)
	*(($9 + [44])) = ($1 | [1])
	*(($9 + [52])) = $2
	*(($9 + [48])) = $4
	
.LABEL $label$12
	CALL memcpy($2, [224], $4)
	
.LABEL $label$11
	*(($2 + $4)) = [0]
	*(($9 + [64])) = [0]
	*($9 + [56]) = (int_64)0
	$1 = ($9 + [56])
	$4 = CALL strlen([224])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$16 }
	*(($9 + [56])) = ($4 << [1])
	$2 = ($1 + [1])
	if ( $4 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$6 = (($4 + [16]) & [-16])
	$2 = CALL $280($6)
	*(($9 + [56])) = ($6 | [1])
	*(($9 + [64])) = $2
	*(($9 + [60])) = $4
	
.LABEL $label$15
	CALL memcpy($2, [224], $4)
	
.LABEL $label$14
	*(($2 + $4)) = [0]
	*($9 + [80]) = (int_64)0
	*($9 + [72]) = (int_64)0
	*($9 + [88]) = (int_64)0
	*($9 + [96]) = (int_64)0
	*($9 + [104]) = (int_64)0
	*($9 + [16]) = *($7)
	CALL $106($9, ($9 + [112]))
	$4 = ($9 + [44])
	if ( (*($4) & [1]) ){ goto $label$18 }
	*($4) = [0]
	goto $label$17 
	
.LABEL $label$18
	*(*(($9 + [52]))) = [0]
	*(($9 + [48])) = [0]
	
.LABEL $label$17
	CALL $287($3, [0])
	*(($3 + [8])) = *(($9 + [8]))
	*($3) = *($9)
	*(($9 + [28])) = *($7 + [16])
	*(($9 + [80])) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL $288($1, [1344])
	*(($9 + [32])) = [0]
	*((($9 + [16]) + [8])) = [0]
	*(($9 + [36])) = [0]
	*(($9 + [40])) = [0]
	*(($9 + [72])) = (int_64)1
	*(($9 + [88])) = ((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) + (int_64)43) & (int_64)4294967295)
	*(($4 = ($9 + [96]))) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*(($9 + [104])) = CALL _ZN6NiuNiu6_genidEv($0)
	CALL _ZN6NiuNiu11_starttimerEyy($0, *($4), (int_64)43)
	CALL eosio_assert(((int_64)*($9 + [16]) != (int_64)0), [1408])
	CALL $69(($0 + [8]), ($9 + [16]), *($0))
	CALL eosio_assert([1], [768])
	CALL eosio_assert([1], [816])
	$4 = CALL db_next_i64(*($7 + [24]), $9)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$19 }
	CALL $105(($9 + [120]), $4)
	
.LABEL $label$19
	CALL $107(($9 + [120]), $7)
	if ( ((*(($9 + [56])) & [1]) == 0) ){ goto $label$20 }
	CALL $282(*(($9 + [64])))
	
.LABEL $label$20
	if ( ((*(($9 + [44])) & [1]) == 0) ){ goto $label$3 }
	CALL $282(*(($9 + [52])))
	
.LABEL $label$3
	$3 = *($9 + [144])
	if ( ($3 == 0) ){ goto $label$21 }
	$2 = ($9 + [148])
	$7 = *($2)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$23 }
	
.LOOP $label$24:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$25 }
	CALL $282($4)
	
.LABEL $label$25
	if ( ((int_32)$3 != (int_32)$7) ){ goto $label$24 }
	$7 = *(($9 + [144]))
	goto $label$22 
	
.LABEL $label$23
	$7 = $3
	
.LABEL $label$22
	*($2) = $3
	CALL $282($7)
	
.LABEL $label$21
	*([0] + [4]) = ($9 + [160])
	return (unreachable)
	
.LABEL $label$2
	CALL $284($3)
	
.LABEL $label$1
	CALL $284($1)
	(unreachable)
}

void .FUNC $107 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [848])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [896])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [960])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $282($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $282($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [24]))
}

void .FUNC _ZN6NiuNiu6fixingEy (int_32 $0, int_64 $1)
{
	int_32 $2
	$2 = (*([0] + [4]) - [48])
	*([0] + [4]) = $2
	CALL require_auth($1)
	CALL eosio_assert(((int_64)*($0) == (int_64)$1), [2704])
	CALL _ZN6NiuNiu14_getconfiginfoEv($2, $0)
	*([0] + [4]) = ($2 + [48])
}

void .FUNC $109 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	CALL eosio_assert(((int_32)*($1 + [96]) == (int_32)$0), [848])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [896])
	$6 = ($0 + [28])
	$5 = *($6)
	CALL eosio_assert(((int_32)$5 != (int_32)*($0 + [24])), [960])
	$4 = ($5 + [-24])
	$6 = *($6)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	$2 = ([0] - $6)
	
.LOOP $label$4:
	$6 = ($4 + [24])
	$3 = *($6)
	*($6) = [0]
	$5 = *($4)
	*($4) = $3
	if ( ($5 == 0) ){ goto $label$5 }
	if ( ((*($5 + [40]) & [1]) == 0) ){ goto $label$6 }
	CALL $282(*(($5 + [48])))
	
.LABEL $label$6
	if ( ((*($5 + [28]) & [1]) == 0) ){ goto $label$7 }
	CALL $282(*(($5 + [36])))
	
.LABEL $label$7
	CALL $282($5)
	
.LABEL $label$5
	*(($4 + [16])) = *(($4 + [40]))
	*(($4 + [8])) = *(($4 + [32]))
	$4 = $6
	if ( ((int_32)($6 + $2) != (int_32)[-24]) ){ goto $label$4 }
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$6 = $4
	
.LABEL $label$2
	
.LOOP $label$8:
	$5 = ($5 + [-24])
	$4 = *($5)
	*($5) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	if ( ((*($4 + [40]) & [1]) == 0) ){ goto $label$10 }
	CALL $282(*(($4 + [48])))
	
.LABEL $label$10
	if ( ((*($4 + [28]) & [1]) == 0) ){ goto $label$11 }
	CALL $282(*(($4 + [36])))
	
.LABEL $label$11
	CALL $282($4)
	
.LABEL $label$9
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$8 }
	
.LABEL $label$1
	*(($0 + [28])) = $6
	CALL db_remove_i64(*($1 + [100]))
}

void .FUNC $108 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $280(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $298($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $282($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $282($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC frexpl (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$4 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	$5 = ($4) & [32767]
	if ( ((int_32)$5) == (int_32)[32767]) ){ goto $label$1 }
	if ( $5 ){ goto $label$4 }
	if ( (CALL __eqtf2($1, $2, (int_64)0, (int_64)0) == 0) ){ goto $label$3 }
	CALL __multf3($6, $1, $2, (int_64)0, (int_64)4645181540655955968)
	CALL frexpl(($6 + [16]), *($6), *(($6 + [8])), $3)
	$4 = (*($3) + [-120])
	$2 = *($6 + [24])
	$1 = *($6 + [16])
	goto $label$2 
	
.LABEL $label$4
	*($3) = (($4 & [32767]) + [-16382])
	$2 = ((int_64)((int_64)(CASTING uint_64)(uint_32 (($4 & [32768]) | [16382])) << (int_64)48) | (int_64)((int_64)$2 & (int_64)281474976710655))
	goto $label$1 
	
.LABEL $label$3
	$4 = [0]
	
.LABEL $label$2
	*($3) = $4
	
.LABEL $label$1
	*($0) = $1
	*(($0 + [8])) = $2
	*([0] + [4]) = ($6 + [32])
}

int_32 .FUNC wcrtomb (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = [1]
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ((uint_32)$1 > (uint_32)[127]) ){ goto $label$2 }
	*($0) = $1
	return [1]
	
.LABEL $label$2
	if ( (*([0]) == 0) ){ goto $label$8 }
	if ( ((uint_32)$1 > (uint_32)[2047]) ){ goto $label$7 }
	*($0 + [1]) = (($1 & [63]) | [128])
	*($0) = (uint_32($1 >> [6]) | [192])
	return [2]
	
.LABEL $label$8
	if ( ((int_32)($1 & [-128]) != (int_32)[57216]) ){ goto $label$6 }
	*($0) = $1
	return [1]
	
.LABEL $label$7
	if ( ($1 <= [55296]) ){ goto $label$5 }
	if ( ((int_32)($1 & [-8192]) == (int_32)[57344]) ){ goto $label$5 }
	if ( ((uint_32)($1 + [-65536]) > (uint_32)[1048575]) ){ goto $label$4 }
	*($0) = (uint_32($1 >> [18]) | [240])
	*($0 + [3]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [12]) & [63]) | [128])
	*($0 + [2]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [4]
	
.LABEL $label$6
	*(CALL __errno_location()) = [84]
	goto $label$3 
	
.LABEL $label$5
	*($0) = (uint_32($1 >> [12]) | [224])
	*($0 + [2]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [3]
	
.LABEL $label$4
	*(CALL __errno_location()) = [84]
	
.LABEL $label$3
	$3 = [-1]
	
.LABEL $label$1
	return $3
}

int_32 .FUNC $215 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [1056])
	CALL memcpy($1, *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [1056])
	CALL memcpy(($1 + [4]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [1056])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	$6 = [0]
	$5 = (int_64)0
	
.LOOP $label$1:
	CALL eosio_assert(($4 <= *(($0 + [8]))), [2480])
	$7 = ($0 + [4])
	$4 = *($7)
	$2 = *($4)
	$4 = ($4 + [1])
	*($7) = $4
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($2 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($2 >> [7]) ){ goto $label$1 }
	*($1 + [12]) = $5
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)*($3) != (int_32)$4), [1056])
	$4 = ($0 + [4])
	CALL memcpy(($1 + [16]), *($4), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	$7 = [0]
	$5 = (int_64)0
	
.LOOP $label$2:
	CALL eosio_assert(($6 <= *($3)), [2480])
	$6 = *($4)
	$2 = *($6)
	$6 = ($6 + [1])
	*($4) = $6
	$7 = ($7 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($2 & [127]) << $7)) | (int_64)$5)
	$7 = ($7 + [7])
	if ( uint_32($2 >> [7]) ){ goto $label$2 }
	*($1 + [20]) = $5
	return $0
}

int_32 .FUNC $214 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $187($0, ($1 + [32]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1056])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1056])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1056])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $217 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [2480])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$3 = *($1)
	$7 = *($1 + [4])
	$5 = int_32(($7 - $3) >> [4])
	$4 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$3 }
	CALL $256($1, ($4 - $5))
	$7 = *(($1 + [4]))
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$4 >= (uint_32)$5) ){ goto $label$2 }
	$4 = ($4 << [4])
	$2 = ($3 + $4)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$3 = (([0] - $3) - $4)
	$4 = ($7 + [-12])
	
.LOOP $label$5:
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	*(($4 + [4])) = $5
	CALL $282($5)
	
.LABEL $label$6
	$4 = ($4 + [-16])
	if ( ((int_32)($4 + $3) != (int_32)[-12]) ){ goto $label$5 }
	
.LABEL $label$4
	*(($1 + [4])) = $2
	$7 = $2
	
.LABEL $label$2
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$7 }
	$3 = ($0 + [8])
	
.LOOP $label$8:
	$5 = ($0 + [4])
	CALL eosio_assert(((uint_32)(*($3) - *($5)) > (uint_32)[1]), [1056])
	CALL memcpy($4, *($5), [2])
	*($5) = (*($5) + [2])
	CALL $188($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$7
	return $0
}

int_32 .FUNC $216 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [2480])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$6 = *($1)
	$2 = *($1 + [4])
	$7 = ((int_32)($2 - $6) / (int_32)[40])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$7) ){ goto $label$3 }
	CALL $257($1, ($4 - $7))
	$2 = *(($1 + [4]))
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$4 >= (uint_32)$7) ){ goto $label$2 }
	$4 = ((int_32)$4 * (int_32)[40])
	$3 = ($6 + $4)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$4 }
	$6 = (([0] - $6) - $4)
	$4 = ($2 + [-24])
	
.LOOP $label$5:
	$7 = *(($4 + [12]))
	if ( ($7 == 0) ){ goto $label$6 }
	*(($4 + [16])) = $7
	CALL $282($7)
	
.LABEL $label$6
	$7 = *($4)
	if ( ($7 == 0) ){ goto $label$7 }
	*(($4 + [4])) = $7
	CALL $282($7)
	
.LABEL $label$7
	$4 = ($4 + [-40])
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$5 }
	
.LABEL $label$4
	*(($1 + [4])) = $3
	$2 = $3
	
.LABEL $label$2
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	$4 = ($0 + [4])
	
.LOOP $label$9:
	$6 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($6) - *($4)) > (uint_32)[7]), [1056])
	CALL memcpy($7, *($4), [8])
	$3 = (*($4) + [8])
	*($4) = $3
	CALL eosio_assert(((uint_32)(*($6) - $3) > (uint_32)[7]), [1056])
	CALL memcpy(($7 + [8]), *($4), [8])
	*($4) = (*($4) + [8])
	CALL $188(CALL $258($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$9 }
	
.LABEL $label$8
	return $0
}

void .FUNC $211 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1296])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1296])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1296])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$2 = *($0 + [16])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($0 + [4]), $2, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $210 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [36]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [3520])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)4229753268491780096)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [3456])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [3456])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $115(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $213 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	if ( ($1 == 0) ){ goto $label$1 }
	CALL printui(*($0))
	CALL prints([3648])
	
.LABEL $label$1
	$2 = *($0)
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)8)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)16)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)24)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)40)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)56)
	*($3 + [15]) = $0)
	if ( ($0 == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	
.LABEL $label$2
	*([0] + [4]) = ($3 + [16])
}

int_32 .FUNC $223 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [144])
	*([0] + [4]) = $11
	*($11 + [128]) = $1
	CALL $106(($11 + [112]), ($11 + [128]))
	$5 = *($11 + [112])
	$2 = ($5 & [1])
	CALL sha256(( *($11 + [120]) ? (($11 + [112]) | [1]) : $2 ), ( *($11 + [116]) ? uint_32($5 >> [1]) : $2 ), ($11 + [80]))
	$1 = (int_64)0
	$6 = (int_64)59
	$5 = [1456]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$1 > (uint_64)(int_64)9) ){ goto $label$6 }
	$2 = *($5)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$2 = ($2 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$2
	$5 = ($5 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$1 }
	$1 = (int_64)0
	$6 = (int_64)59
	$5 = [1456]
	$9 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$1 > (uint_64)(int_64)9) ){ goto $label$12 }
	$2 = *($5)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$2 = ($2 + [165])
	goto $label$10 
	
.LABEL $label$12
	$8 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$8
	$5 = ($5 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$9 = ((int_64)$8 | (int_64)$9)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$7 }
	$10 = [0]
	*((($11 + [40]) + [32])) = [0]
	*($11 + [48]) = $9
	*($11 + [40]) = $7
	*($11 + [56]) = (int_64)-1
	*($11 + [64]) = (int_64)0
	*($11 + [76]) = [0]
	*($11 + [32]) = ($11 + [40])
	$1 = *($11 + [104])
	$8 = *($11 + [96])
	$6 = *($11 + [88])
	$7 = *($11 + [80])
	CALL eosio_assert([1], [3840])
	*($11 + [8]) = $7
	*($11) = $6
	CALL eosio_assert([1], [3840])
	*(($11 + [24])) = $8
	*($11 + [16]) = $1
	CALL $249(($11 + [136]), ($11 + [32]), $11)
	$5 = *($11 + [140])
	if ( ($5 == 0) ){ goto $label$13 }
	$6 = *(($5 + [40]))
	$7 = *(($5 + [32]))
	$1 = *(($5 + [24]))
	$8 = *($5 + [16])
	CALL eosio_assert([1], [3840])
	CALL eosio_assert([1], [3840])
	if ( ((int_64)((int_64)((int_64)$1 ^ (int_64)*($11)) | (int_64)((int_64)$8 ^ (int_64)*($11 + [8]))) != (int_64)0) ){ goto $label$13 }
	if ( ((int_64)((int_64)((int_64)*(($11 + [16])) ^ (int_64)$6) | (int_64)((int_64)*(($11 + [24])) ^ (int_64)$7)) != (int_64)0) ){ goto $label$13 }
	$10 = ((int_32)*($11 + [140]) != (int_32)[0])
	
.LABEL $label$13
	$3 = *($11 + [64])
	if ( ($3 == 0) ){ goto $label$14 }
	$4 = ($11 + [68])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$16 }
	
.LOOP $label$17:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$18 }
	CALL $282($2)
	
.LABEL $label$18
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$17 }
	$5 = *(($11 + [64]))
	goto $label$15 
	
.LABEL $label$16
	$5 = $3
	
.LABEL $label$15
	*($4) = $3
	CALL $282($5)
	
.LABEL $label$14
	if ( ((*($11 + [112]) & [1]) == 0) ){ goto $label$19 }
	CALL $282(*(($11 + [120])))
	
.LABEL $label$19
	*([0] + [4]) = ($11 + [144])
	return $10
}

void .FUNC $196 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [20])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($0 + [4]), $2, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC _ZN6NiuNiu14_transactionidEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$1 = CALL tapos_block_num()
	$2 = CALL tapos_block_prefix()
	$3 = CALL transaction_size()
	$4 = ($6 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $4
	$5 = CALL read_transaction($4, $3)
	CALL eosio_assert(((int_32)$3 == (int_32)$5), [3664])
	$3 = $6
	CALL sha256($4, $5, $3)
	CALL printhex($3, [32])
	CALL prints([3696])
	CALL printi((CASTING int_64)(int_32 $1))
	CALL prints([3712])
	CALL printi((CASTING int_64)(int_32 $2))
	CALL prints([560])
	$6
	*([0] + [4]) = ($3 + [32])
}

void .FUNC $194 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [1520])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [1568])
	CALL memcpy($1, *($3), [48])
	CALL eosio_assert([1], [1632])
	*($4 + [56]) = ($4 + [48])
	*($4 + [52]) = $4
	*($4 + [48]) = $4
	*($4 + [64]) = ($4 + [48])
	*($4 + [76]) = ($1 + [8])
	*($4 + [72]) = $1
	*($4 + [80]) = ($1 + [16])
	*($4 + [84]) = ($1 + [24])
	*($4 + [88]) = ($1 + [32])
	*($4 + [92]) = ($1 + [40])
	CALL $196(($4 + [72]), ($4 + [64]))
	CALL db_update_i64(*($1 + [52]), $2, $4, [48])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)4982871462359400448) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)4982871462359400449
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [96])
}

void .FUNC $195 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [96])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$13()), [1232])
	*(($4 = CALL $280([64])) + [8]) = (int_64)50
	*($4) = (int_64)0
	*($4 + [16]) = (int_64)10000
	*($4 + [24]) = (int_64)1
	*($4 + [32]) = (int_64)1
	*($4 + [40]) = (int_64)4
	*($4 + [48]) = $1
	CALL memcpy($4, *($3), [48])
	*($7 + [56]) = ($7 + [48])
	*($7 + [52]) = $7
	*($7 + [48]) = $7
	*($7 + [64]) = ($7 + [48])
	*($7 + [76]) = ($4 + [8])
	*($7 + [72]) = $4
	*($7 + [80]) = ($4 + [16])
	*($7 + [84]) = ($4 + [24])
	*($7 + [88]) = ($4 + [32])
	*($7 + [92]) = ($4 + [40])
	CALL $196(($7 + [72]), ($7 + [64]))
	*($4 + [52]) = CALL db_store_i64(*($1 + [8]), (int_64)4982871462359400448, $2, (int_64)4982871462359400448, $7, [48])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)4982871462359400448) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)4982871462359400449
	
.LABEL $label$1
	*($7 + [72]) = $4
	*($7) = (int_64)4982871462359400448
	$5 = *($4 + [52])
	*($7 + [48]) = $5
	$6 = ($1 + [28])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = (int_64)4982871462359400448
	*($3 + [16]) = $5
	*($7 + [72]) = [0]
	*($3) = $4
	*($6) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $53(($1 + [24]), ($7 + [72]), $7, ($7 + [48]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$4 = *($7 + [72])
	*($7 + [72]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $282($4)
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [96])
}

int_32 .FUNC $219 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [1024])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $280([80])) + [24]) = (int_64)1398362884
	*($4 + [16]) = (int_64)0
	CALL eosio_assert([1], [1872])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [1840])
	*($4 + [52]) = [0]
	*($4 + [44 align=4]) = (int_64)0
	*($4 + [64]) = $0
	CALL $254(($8 + [32]), $4)
	*($4 + [68]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [68])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $255($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	if ( ((*($5 + [44]) & [1]) == 0) ){ goto $label$15 }
	CALL $282(*(($5 + [52])))
	
.LABEL $label$15
	CALL $282($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $218 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [64])
	*([0] + [4]) = $10
	$1 = *($0)
	$5 = (int_64)0
	$4 = (int_64)59
	$0 = [1424]
	$6 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$5 > (uint_64)(int_64)5) ){ goto $label$6 }
	$2 = *($0)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$2 = ($2 + [165])
	goto $label$4 
	
.LABEL $label$6
	$7 = (int_64)0
	if ( ((uint_64)$5 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$2
	$0 = ($0 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$1 }
	$5 = (int_64)0
	$4 = (int_64)59
	$0 = [1456]
	$8 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$5 > (uint_64)(int_64)9) ){ goto $label$12 }
	$2 = *($0)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$2 = ($2 + [165])
	goto $label$10 
	
.LABEL $label$12
	$7 = (int_64)0
	if ( ((uint_64)$5 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$8
	$0 = ($0 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$8 = ((int_64)$7 | (int_64)$8)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$7 }
	$5 = (int_64)0
	$4 = (int_64)59
	$0 = [4160]
	$9 = (int_64)0
	
.LOOP $label$13:
	if ( ((uint_64)$5 > (uint_64)(int_64)6) ){ goto $label$18 }
	$2 = *($0)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$2 = ($2 + [165])
	goto $label$16 
	
.LABEL $label$18
	$7 = (int_64)0
	if ( ((uint_64)$5 <= (uint_64)(int_64)11) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$14
	$0 = ($0 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$9 = ((int_64)$7 | (int_64)$9)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$13 }
	*($10) = $1
	*($10 + [16]) = $9
	*($10 + [8]) = $8
	*(($0 = CALL $280([16]))) = $1
	*($0 + [8]) = $6
	*(($2 = ($10 + [40]))) = [0]
	$3 = ($0 + [16])
	*(($10 + [32])) = $3
	*(($10 + [28])) = $3
	*($10 + [24]) = $0
	*($10 + [36]) = [0]
	*(($10 + [44])) = [0]
	CALL $77(($10 + [36]), [8])
	$0 = *($10 + [36])
	CALL eosio_assert(((int_32)(*($2) - $0) > (int_32)[7]), [1296])
	CALL memcpy($0, $10, [8])
	CALL $246(($10 + [48]), ($10 + [8]))
	$0 = *($10 + [48])
	CALL send_inline($0, (*($10 + [52]) - $0))
	$0 = *($10 + [48])
	if ( ($0 == 0) ){ goto $label$19 }
	*($10 + [52]) = $0
	CALL $282($0)
	
.LABEL $label$19
	$0 = *($10 + [36])
	if ( ($0 == 0) ){ goto $label$20 }
	*(($10 + [40])) = $0
	CALL $282($0)
	
.LABEL $label$20
	$0 = *($10 + [24])
	if ( ($0 == 0) ){ goto $label$21 }
	*(($10 + [28])) = $0
	CALL $282($0)
	
.LABEL $label$21
	*([0] + [4]) = ($10 + [64])
}

void .FUNC _ZN6NiuNiu13_cleargamehisEv (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [48])
	*([0] + [4]) = $4
	*(($4 + [32])) = [0]
	*($4 + [16]) = (int_64)-1
	$2 = *($0)
	*($4) = $2
	*($4 + [8]) = $2
	*($4 + [24]) = (int_64)0
	$0 = CALL db_lowerbound_i64($2, $2, (int_64)7035931840378960896, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $134($4, $0)
	
.LOOP $label$2:
	CALL eosio_assert([1], [768])
	CALL eosio_assert([1], [816])
	$0 = [0]
	$1 = CALL db_next_i64(*($3 + [132]), ($4 + [40]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $134($4, $1)
	
.LABEL $label$3
	CALL $138($4, $3)
	$3 = $0
	if ( $0 ){ goto $label$2 }
	
.LABEL $label$1
	CALL $139(($4 + [24]))
	*([0] + [4]) = ($4 + [48])
}

void .FUNC $191 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [64])
	*([0] + [4]) = $4
	$2 = *($1)
	CALL $300(($4 + [16]), ($1 + [8]))
	CALL $300($4, ($1 + [20]))
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*(*($0)) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	CALL $300(($4 + [48]), ($4 + [16]))
	CALL $300(($4 + [32]), $4)
	CALL void $0((int_32 $2), (int_64 ($4 + [48])), (int_32 ($4 + [32])), (int_32 $1))
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$2 }
	CALL $282(*($4 + [40]))
	
.LABEL $label$2
	if ( ((*($4 + [48]) & [1]) == 0) ){ goto $label$3 }
	CALL $282(*($4 + [56]))
	
.LABEL $label$3
	if ( ((*($4) & [1]) == 0) ){ goto $label$4 }
	CALL $282(*($4 + [8]))
	
.LABEL $label$4
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $282(*($4 + [24]))
	
.LABEL $label$5
	*([0] + [4]) = ($4 + [64])
}

void .FUNC $174 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $174($0, *($1))
	CALL $174($0, *($1 + [4]))
	if ( ((*($1 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $282(*(($1 + [24])))
	
.LABEL $label$2
	CALL $282($1)
	
.LABEL $label$1
}

int_32 .FUNC $175 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$5 = CALL int_32 $1((int_32 $0), (int_32 *($3)))
	$4 = CALL int_32 $2((int_32 $1), (int_32 *($3)))
	if ( ($5 == 0) ){ goto $label$4 }
	if ( ($4 == 0) ){ goto $label$3 }
	$1 = *($0)
	*($0) = *($2)
	*($2) = $1
	$1 = *($0 + [4])
	*($0 + [4]) = *($2 + [4])
	*($2 + [4]) = $1
	$1 = *($0 + [8])
	*($0 + [8]) = *($2 + [8])
	*($2 + [8]) = $1
	$1 = *($0 + [12])
	*($0 + [12]) = *($2 + [12])
	*($2 + [12]) = $1
	$1 = *($0 + [16])
	*($0 + [16]) = *($2 + [16])
	*($2 + [16]) = $1
	return [1]
	
.LABEL $label$4
	$5 = [0]
	if ( ($4 == 0) ){ goto $label$1 }
	$5 = *($1)
	*($1) = *($2)
	*($2) = $5
	$5 = *($1 + [4])
	*($1 + [4]) = *($2 + [4])
	*($2 + [4]) = $5
	$5 = *($1 + [8])
	*($1 + [8]) = *($2 + [8])
	*($2 + [8]) = $5
	$5 = *($1 + [12])
	*($1 + [12]) = *($2 + [12])
	*($2 + [12]) = $5
	$5 = *($1 + [16])
	*($1 + [16]) = *($2 + [16])
	*($2 + [16]) = $5
	$5 = [1]
	if ( (CALL int_32 $1((int_32 $0), (int_32 *($3))) == 0) ){ goto $label$1 }
	$2 = *($0)
	*($0) = *($1)
	*($1) = $2
	$2 = *($0 + [4])
	$3 = ($1 + [4])
	*($0 + [4]) = *($3)
	*($3) = $2
	$2 = *($0 + [8])
	$3 = ($1 + [8])
	*($0 + [8]) = *($3)
	*($3) = $2
	$2 = *($0 + [12])
	$3 = ($1 + [12])
	*($0 + [12]) = *($3)
	*($3) = $2
	$2 = *($0 + [16])
	$1 = ($1 + [16])
	*($0 + [16]) = *($1)
	*($1) = $2
	goto $label$2 
	
.LABEL $label$3
	$5 = *($0)
	*($0) = *($1)
	*($1) = $5
	$5 = *($0 + [4])
	*($0 + [4]) = *($1 + [4])
	*($1 + [4]) = $5
	$5 = *($0 + [8])
	*($0 + [8]) = *($1 + [8])
	*($1 + [8]) = $5
	$5 = *($0 + [12])
	*($0 + [12]) = *($1 + [12])
	*($1 + [12]) = $5
	$5 = *($0 + [16])
	*($0 + [16]) = *($1 + [16])
	*($1 + [16]) = $5
	$5 = [1]
	if ( (CALL int_32 $2((int_32 $1), (int_32 *($3))) == 0) ){ goto $label$1 }
	$0 = *($1)
	*($1) = *($2)
	*($2) = $0
	$0 = ($1 + [4])
	$3 = *($0)
	*($0) = *($2 + [4])
	*($2 + [4]) = $3
	$0 = ($1 + [8])
	$3 = *($0)
	*($0) = *($2 + [8])
	*($2 + [8]) = $3
	$0 = ($1 + [12])
	$3 = *($0)
	*($0) = *($2 + [12])
	*($2 + [12]) = $3
	$1 = ($1 + [16])
	$0 = *($1)
	*($1) = *($2 + [16])
	*($2 + [16]) = $0
	
.LABEL $label$2
	$5 = [2]
	
.LABEL $label$1
	return $5
}

int_32 .FUNC $176 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$6 = CALL $175($0, $1, $2, $4)
	if ( (CALL int_32 $3((int_32 $2), (int_32 *($4))) == 0) ){ goto $label$3 }
	$5 = *($2)
	*($2) = *($3)
	*($3) = $5
	$5 = *($2 + [4])
	*($2 + [4]) = *($3 + [4])
	*($3 + [4]) = $5
	$5 = *($2 + [8])
	*($2 + [8]) = *($3 + [8])
	*($3 + [8]) = $5
	$5 = *($2 + [12])
	*($2 + [12]) = *($3 + [12])
	*($3 + [12]) = $5
	$5 = *($2 + [16])
	*($2 + [16]) = *($3 + [16])
	*($3 + [16]) = $5
	if ( (CALL int_32 $2((int_32 $1), (int_32 *($4))) == 0) ){ goto $label$2 }
	$3 = *($1)
	*($1) = *($2)
	*($2) = $3
	$3 = *($1 + [4])
	$5 = ($2 + [4])
	*($1 + [4]) = *($5)
	*($5) = $3
	$3 = *($1 + [8])
	$5 = ($2 + [8])
	*($1 + [8]) = *($5)
	*($5) = $3
	$3 = *($1 + [12])
	$5 = ($2 + [12])
	*($1 + [12]) = *($5)
	*($5) = $3
	$3 = *($1 + [16])
	$2 = ($2 + [16])
	*($1 + [16]) = *($2)
	*($2) = $3
	if ( (CALL int_32 $1((int_32 $0), (int_32 *($4))) == 0) ){ goto $label$1 }
	$2 = *($0)
	*($0) = *($1)
	*($1) = $2
	$2 = *($0 + [4])
	$3 = ($1 + [4])
	*($0 + [4]) = *($3)
	*($3) = $2
	$2 = *($0 + [8])
	$3 = ($1 + [8])
	*($0 + [8]) = *($3)
	*($3) = $2
	$2 = *($0 + [12])
	$3 = ($1 + [12])
	*($0 + [12]) = *($3)
	*($3) = $2
	$2 = *($0 + [16])
	$3 = ($1 + [16])
	*($0 + [16]) = *($3)
	*($3) = $2
	$6 = ($6 + [3])
	
.LABEL $label$3
	return $6
	
.LABEL $label$2
	return ($6 + [1])
	
.LABEL $label$1
	return ($6 + [2])
}

int_32 .FUNC $177 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	$7 = CALL $176($0, $1, $2, $3, $5)
	if ( (CALL int_32 $4((int_32 $3), (int_32 *($5))) == 0) ){ goto $label$4 }
	$6 = *($3)
	*($3) = *($4)
	*($4) = $6
	$6 = *($3 + [4])
	*($3 + [4]) = *($4 + [4])
	*($4 + [4]) = $6
	$6 = *($3 + [8])
	*($3 + [8]) = *($4 + [8])
	*($4 + [8]) = $6
	$6 = *($3 + [12])
	*($3 + [12]) = *($4 + [12])
	*($4 + [12]) = $6
	$6 = *($3 + [16])
	*($3 + [16]) = *($4 + [16])
	*($4 + [16]) = $6
	if ( (CALL int_32 $3((int_32 $2), (int_32 *($5))) == 0) ){ goto $label$3 }
	$4 = *($2)
	*($2) = *($3)
	*($3) = $4
	$4 = *($2 + [4])
	$6 = ($3 + [4])
	*($2 + [4]) = *($6)
	*($6) = $4
	$4 = *($2 + [8])
	$6 = ($3 + [8])
	*($2 + [8]) = *($6)
	*($6) = $4
	$4 = *($2 + [12])
	$6 = ($3 + [12])
	*($2 + [12]) = *($6)
	*($6) = $4
	$4 = *($2 + [16])
	$3 = ($3 + [16])
	*($2 + [16]) = *($3)
	*($3) = $4
	if ( (CALL int_32 $2((int_32 $1), (int_32 *($5))) == 0) ){ goto $label$2 }
	$3 = *($1)
	*($1) = *($2)
	*($2) = $3
	$3 = *($1 + [4])
	$4 = ($2 + [4])
	*($1 + [4]) = *($4)
	*($4) = $3
	$3 = *($1 + [8])
	$4 = ($2 + [8])
	*($1 + [8]) = *($4)
	*($4) = $3
	$3 = *($1 + [12])
	$4 = ($2 + [12])
	*($1 + [12]) = *($4)
	*($4) = $3
	$3 = *($1 + [16])
	$4 = ($2 + [16])
	*($1 + [16]) = *($4)
	*($4) = $3
	if ( (CALL int_32 $1((int_32 $0), (int_32 *($5))) == 0) ){ goto $label$1 }
	$3 = *($0)
	*($0) = *($1)
	*($1) = $3
	$3 = *($0 + [4])
	$4 = ($1 + [4])
	*($0 + [4]) = *($4)
	*($4) = $3
	$3 = *($0 + [8])
	$4 = ($1 + [8])
	*($0 + [8]) = *($4)
	*($4) = $3
	$3 = *($0 + [12])
	$4 = ($1 + [12])
	*($0 + [12]) = *($4)
	*($4) = $3
	$3 = *($0 + [16])
	$4 = ($1 + [16])
	*($0 + [16]) = *($4)
	*($4) = $3
	$7 = ($7 + [4])
	
.LABEL $label$4
	return $7
	
.LABEL $label$3
	return ($7 + [1])
	
.LABEL $label$2
	return ($7 + [2])
	
.LABEL $label$1
	return ($7 + [3])
}

void .FUNC $170 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$2 = int_32(($6 - $5) >> [4])
	$3 = ($2 + [1])
	if ( ((uint_32)$3 >= (uint_32)[268435456]) ){ goto $label$3 }
	$4 = [268435455]
	$7 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($7 >> [4]) > (uint_32)[134217726]) ){ goto $label$5 }
	$4 = int_32($7 >> [3])
	$4 = ( $3 ? $4 : ($4 <= $3) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $280(($4 << [4]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $298($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($2 << [4])))) = *($1)
	*(($3 + [8])) = *(($1 + [8]))
	$1 = ($6 - $5)
	$6 = ($3 - $1)
	$4 = ($7 + ($4 << [4]))
	$3 = ($3 + [16])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($6, $5, $1)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $6
	*(($0 + [4])) = $3
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $282($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $171 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [16])
	*([0] + [4]) = $16
	
.LOOP $label$1:
	$4 = ($1 + [-32])
	$3 = ($1 + [-16])
	
.LOOP $label$2:
	$5 = $0
	
.LOOP $label$4:
	$0 = ($1 - $5)
	$15 = int_32($0 >> [4])
	if ( ((uint_32)$15 <= (uint_32)[5]) ){ goto $label$14 }
	if ( ((int_32)$0 <= (int_32)[495]) ){ goto $label$13 }
	$9 = ($5 + (((int_32)$15 / (int_32)[2]) << [4]))
	if ( ((int_32)$0 < (int_32)[15985]) ){ goto $label$21 }
	$0 = ($9 + $0)
	$0 = (((int_32)$15 / (int_32)[4]) << [4])
	$15 = ($5 + $0)
	$11 = CALL $180($5, $15, $9, $0, $2)
	if ( (CALL int_32 $3((int_32 $0), (int_32 *($2))) == 0) ){ goto $label$15 }
	$13 = ($0 + [8])
	*(($10 = ($16 + [8]))) = *($13)
	*($16) = *($0)
	*(($14 = ($0 + [12]))) = *(($3 + [12]))
	$12 = ($3 + [8])
	*($13) = *($12)
	*(($7 = ($0 + [4]))) = *(($3 + [4]))
	*($0) = *($3)
	*($3) = *($16)
	*($12) = *($10)
	if ( (CALL int_32 $0((int_32 $9), (int_32 *($2))) == 0) ){ goto $label$20 }
	$12 = ($9 + [8])
	*($10) = *($12)
	*($16) = *($9)
	*(($8 = ($9 + [12]))) = *($14)
	*($12) = *($13)
	*(($14 = ($9 + [4]))) = *($7)
	*($9) = *($0)
	*($0) = *($16)
	*($13) = *($10)
	if ( (CALL int_32 $9((int_32 $15), (int_32 *($2))) == 0) ){ goto $label$17 }
	$0 = ($15 + [8])
	*($10) = *($0)
	*($16) = *($15)
	*(($13 = ($15 + [12]))) = *($8)
	*($0) = *($12)
	*(($7 = ($15 + [4]))) = *($14)
	*($15) = *($9)
	*($9) = *($16)
	*($12) = *($10)
	if ( (CALL int_32 $15((int_32 $5), (int_32 *($2))) == 0) ){ goto $label$16 }
	$12 = ($5 + [8])
	*($10) = *($12)
	*($16) = *($5)
	*(($5 + [12])) = *($13)
	*($12) = *($0)
	*(($5 + [4])) = *($7)
	*($5) = *($15)
	*($15) = *($16)
	*($0) = *($10)
	$11 = ($11 + [4])
	goto $label$15 
	
.LABEL $label$21
	$0 = CALL int_32 $9((int_32 $5), (int_32 *($2)))
	$15 = CALL int_32 $3((int_32 $9), (int_32 *($2)))
	if ( ($0 == 0) ){ goto $label$22 }
	if ( ($15 == 0) ){ goto $label$19 }
	$15 = ($5 + [8])
	*(($0 = ($16 + [8]))) = *($15)
	*($16) = *($5)
	*(($5 + [12])) = *(($3 + [12]))
	$10 = ($3 + [8])
	*($15) = *($10)
	*(($5 + [4])) = *(($3 + [4]))
	*($5) = *($3)
	*($3) = *($16)
	*($10) = *($0)
	$11 = [1]
	goto $label$15 
	
.LABEL $label$22
	$11 = [0]
	if ( ($15 == 0) ){ goto $label$15 }
	$15 = ($9 + [8])
	*(($0 = ($16 + [8]))) = *($15)
	*($16) = *($9)
	*(($13 = ($9 + [12]))) = *(($3 + [12]))
	$10 = ($3 + [8])
	*($15) = *($10)
	*(($12 = ($9 + [4]))) = *(($3 + [4]))
	*($9) = *($3)
	*($3) = *($16)
	*($10) = *($0)
	$11 = [1]
	if ( (CALL int_32 $9((int_32 $5), (int_32 *($2))) == 0) ){ goto $label$15 }
	$10 = ($5 + [8])
	*($0) = *($10)
	*($16) = *($5)
	*(($5 + [12])) = *($13)
	*($10) = *($15)
	*(($5 + [4])) = *($12)
	*($5) = *($9)
	*($9) = *($16)
	*($15) = *($0)
	goto $label$18 
	
.LABEL $label$20
	$11 = ($11 + [1])
	goto $label$15 
	
.LABEL $label$19
	$10 = ($5 + [8])
	*(($0 = ($16 + [8]))) = *($10)
	*($16) = *($5)
	$13 = ($9 + [12])
	*(($5 + [12])) = *($13)
	$15 = ($9 + [8])
	*($10) = *($15)
	$10 = ($9 + [4])
	*(($5 + [4])) = *($10)
	*($5) = *($9)
	*($9) = *($16)
	*($15) = *($0)
	$11 = [1]
	if ( (CALL int_32 $3((int_32 $9), (int_32 *($2))) == 0) ){ goto $label$15 }
	*($0) = *($15)
	*($16) = *($9)
	*($13) = *(($3 + [12]))
	$11 = ($3 + [8])
	*($15) = *($11)
	*($10) = *(($3 + [4]))
	*($9) = *($3)
	*($3) = *($16)
	*($11) = *($0)
	
.LABEL $label$18
	$11 = [2]
	goto $label$15 
	
.LABEL $label$17
	$11 = ($11 + [2])
	goto $label$15 
	
.LABEL $label$16
	$11 = ($11 + [3])
	
.LABEL $label$15
	if ( CALL int_32 $5((int_32 $9), (int_32 *($2))) ){ goto $label$23 }
	$0 = $4
	
.LOOP $label$25:
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$24 }
	$15 = CALL int_32 $0((int_32 $9), (int_32 *($2)))
	$0 = ($0 + [-16])
	if ( ($15 == 0) ){ goto $label$25 }
	$15 = ($5 + [8])
	*(($10 = ($16 + [8]))) = *($15)
	*($16) = *($5)
	$13 = ($0 + [24])
	*($15) = *($13)
	*(($5 + [4])) = *(($0 + [20]))
	$15 = ($0 + [16])
	*($5) = *($15)
	*($13) = *($10)
	*($15) = *($16)
	$11 = ($11 + [1])
	goto $label$7 
	
.LABEL $label$24
	$0 = ($5 + [16])
	if ( CALL int_32 $5((int_32 $3), (int_32 *($2))) ){ goto $label$26 }
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$6 }
	$0 = ($5 + [32])
	
.LOOP $label$28:
	$15 = ($0 + [-16])
	if ( CALL int_32 $5((int_32 $15), (int_32 *($2))) ){ goto $label$27 }
	$0 = ($0 + [16])
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$28 }
	goto $label$6 
	
.LABEL $label$27
	$10 = ($0 + [-8])
	*(($9 = ($16 + [8]))) = *($10)
	*($16) = *($15)
	*($15) = *($3)
	$15 = ($3 + [8])
	*($10) = *($15)
	*(($0 + [-12])) = *(($3 + [4]))
	*($3) = *($16)
	*($15) = *($9)
	
.LABEL $label$26
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$6 }
	$15 = $3
	
.LOOP $label$29:
	$9 = CALL int_32 $5((int_32 $0), (int_32 *($2)))
	$0 = ($0 + [16])
	if ( ($9 == 0) ){ goto $label$29 }
	$9 = ($0 + [-16])
	
.LOOP $label$30:
	$15 = ($15 + [-16])
	if ( CALL int_32 $5((int_32 $15), (int_32 *($2))) ){ goto $label$30 }
	if ( ((uint_32)$9 >= (uint_32)$15) ){ goto $label$5 }
	$10 = ($0 + [-8])
	*(($9 = ($16 + [8]))) = *($10)
	$11 = ($0 + [-16])
	*($16) = *($11)
	*($11) = *($15)
	$11 = ($15 + [8])
	*($10) = *($11)
	*(($0 + [-12])) = *(($15 + [4]))
	*($15) = *($16)
	*($11) = *($9)
	goto $label$29 
	
.LABEL $label$23
	$15 = $3
	goto $label$7 
	
.LABEL $label$14
	goto $label$6 
	
.LABEL $label$31
	if ( (CALL int_32 $3((int_32 $5), (int_32 *($2))) == 0) ){ goto $label$6 }
	$0 = ($5 + [8])
	*(($2 = ($16 + [8]))) = *($0)
	*($16) = *($5)
	*(($5 + [12])) = *(($3 + [12]))
	$15 = ($3 + [8])
	*($0) = *($15)
	*(($5 + [4])) = *(($3 + [4]))
	*($5) = *($3)
	*($3) = *($16)
	*($15) = *($2)
	goto $label$6 
	
.LABEL $label$13
	CALL $181($5, $1, $2)
	goto $label$6 
	
.LABEL $label$12
	$0 = ($5 + [16])
	$15 = CALL int_32 $0((int_32 $5), (int_32 *($2)))
	$9 = CALL int_32 $3((int_32 $0), (int_32 *($2)))
	if ( ($15 == 0) ){ goto $label$9 }
	if ( ($9 == 0) ){ goto $label$8 }
	$0 = ($5 + [8])
	*(($2 = ($16 + [8]))) = *($0)
	*($16) = *($5)
	*(($5 + [12])) = *(($3 + [12]))
	$15 = ($3 + [8])
	*($0) = *($15)
	*(($5 + [4])) = *(($3 + [4]))
	*($5) = *($3)
	*($3) = *($16)
	*($15) = *($2)
	goto $label$6 
	
.LABEL $label$11
	CALL $180($5, ($5 + [16]), ($5 + [32]), $3, $2)
	goto $label$6 
	
.LABEL $label$10
	$0 = ($5 + [48])
	$15 = ($5 + [32])
	$9 = ($5 + [16])
	CALL $180($5, $9, $15, $0, $2)
	if ( (CALL int_32 $3((int_32 $0), (int_32 *($2))) == 0) ){ goto $label$6 }
	$11 = ($0 + [8])
	*(($10 = ($16 + [8]))) = *($11)
	*($16) = *($0)
	$13 = ($3 + [8])
	*($11) = *($13)
	*($0) = *($3)
	*($13) = *($10)
	*($3) = *($16)
	if ( (CALL int_32 $0((int_32 $15), (int_32 *($2))) == 0) ){ goto $label$6 }
	$6 = *($15)
	*($15) = *($0)
	$13 = ($15 + [8])
	*($10) = *($13)
	*($13) = *($11)
	*($16) = $6
	*($11) = *($10)
	*($0) = *($16)
	if ( (CALL int_32 $15((int_32 $9), (int_32 *($2))) == 0) ){ goto $label$6 }
	$6 = *($9)
	*($9) = *($15)
	$10 = ($9 + [8])
	*(($0 = ($16 + [8]))) = *($10)
	$11 = ($15 + [8])
	*($10) = *($11)
	*($16) = $6
	*($11) = *($0)
	*($15) = *($16)
	if ( (CALL int_32 $9((int_32 $5), (int_32 *($2))) == 0) ){ goto $label$6 }
	$2 = ($5 + [8])
	*($0) = *($2)
	*($16) = *($5)
	*(($5 + [12])) = *(($9 + [12]))
	*($2) = *($10)
	*(($5 + [4])) = *(($9 + [4]))
	*($5) = *($9)
	*($10) = *($0)
	*($9) = *($16)
	goto $label$6 
	
.LABEL $label$9
	if ( ($9 == 0) ){ goto $label$6 }
	$9 = ($0 + [8])
	*(($15 = ($16 + [8]))) = *($9)
	*($16) = *($0)
	$10 = ($3 + [8])
	*($9) = *($10)
	*($0) = *($3)
	*($10) = *($15)
	*($3) = *($16)
	if ( (CALL int_32 $0((int_32 $5), (int_32 *($2))) == 0) ){ goto $label$6 }
	$2 = ($5 + [8])
	*($15) = *($2)
	*($16) = *($5)
	*(($5 + [12])) = *(($0 + [12]))
	*($2) = *($9)
	*(($5 + [4])) = *(($0 + [4]))
	*($5) = *($0)
	*($9) = *($15)
	*($0) = *($16)
	goto $label$6 
	
.LABEL $label$8
	$10 = ($5 + [8])
	*(($15 = ($16 + [8]))) = *($10)
	*($16) = *($5)
	*(($5 + [12])) = *(($0 + [12]))
	$9 = ($0 + [8])
	*($10) = *($9)
	*(($5 + [4])) = *(($0 + [4]))
	*($5) = *($0)
	*($9) = *($15)
	*($0) = *($16)
	if ( (CALL int_32 $3((int_32 $0), (int_32 *($2))) == 0) ){ goto $label$6 }
	*($15) = *($9)
	*($16) = *($0)
	$2 = ($3 + [8])
	*($9) = *($2)
	*($0) = *($3)
	*($2) = *($15)
	*($3) = *($16)
	goto $label$6 
	
.LABEL $label$7
	$10 = ($5 + [16])
	if ( ((uint_32)$10 >= (uint_32)$15) ){ goto $label$32 }
	
.LOOP $label$33:
	$0 = ($10 + [-16])
	
.LOOP $label$34:
	$0 = ($0 + [16])
	if ( CALL int_32 $0((int_32 $9), (int_32 *($2))) ){ goto $label$34 }
	$10 = ($0 + [16])
	
.LOOP $label$35:
	$15 = ($15 + [-16])
	if ( (CALL int_32 $15((int_32 $9), (int_32 *($2))) == 0) ){ goto $label$35 }
	if ( ((uint_32)$0 > (uint_32)$15) ){ goto $label$36 }
	$12 = ($0 + [8])
	*(($13 = ($16 + [8]))) = *($12)
	*($16) = *($0)
	*(($0 + [12])) = *(($15 + [12]))
	$14 = ($15 + [8])
	*($12) = *($14)
	*(($0 + [4])) = *(($15 + [4]))
	*($0) = *($15)
	*($15) = *($16)
	*($14) = *($13)
	$9 = ( $15 ? $9 : ((int_32)$9 == (int_32)$0) )
	$11 = ($11 + [1])
	goto $label$33 
	
.LABEL $label$36
	$10 = $0
	
.LABEL $label$32
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$37 }
	if ( (CALL int_32 $9((int_32 $10), (int_32 *($2))) == 0) ){ goto $label$37 }
	$15 = ($10 + [8])
	*(($0 = ($16 + [8]))) = *($15)
	*($16) = *($10)
	*(($10 + [12])) = *(($9 + [12]))
	$13 = ($9 + [8])
	*($15) = *($13)
	*(($10 + [4])) = *(($9 + [4]))
	*($10) = *($9)
	*($9) = *($16)
	*($13) = *($0)
	$11 = ($11 + [1])
	
.LABEL $label$37
	if ( $11 ){ goto $label$39 }
	$15 = CALL $182($5, $10, $2)
	$0 = ($10 + [16])
	if ( CALL $182($0, $1, $2) ){ goto $label$38 }
	if ( $15 ){ goto $label$2 }
	
.LABEL $label$39
	if ( ((int_32)($10 - $5) >= (int_32)($1 - $10)) ){ goto $label$3 }
	CALL $171($5, $10, $2)
	$5 = ($10 + [16])
	goto $label$4 
	
.LABEL $label$38
	$1 = $10
	$0 = $5
	if ( ($15 == 0) ){ goto $label$1 }
	
.LABEL $label$6
	*([0] + [4]) = ($16 + [16])
	return 
	
.LABEL $label$5
	$5 = $9
	goto $label$4 
	
.LABEL $label$3
	CALL $171(($10 + [16]), $1, $2)
	$1 = $10
	$0 = $5
	goto $label$1 
	$15
}

int_32 .FUNC $172 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	$7 = *($0 + [8])
	$3 = *($0 + [4])
	if ( ((uint_32)$3 >= (uint_32)$7) ){ goto $label$7 }
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$6 }
	$5 = ($3 - ($1 + [4]))
	$6 = int_32($5 >> [2])
	$8 = ($3 + [-4])
	if ( ((uint_32)$8 >= (uint_32)$3) ){ goto $label$8 }
	$4 = uint_32((($3 - ($6 << [2])) + ((int_32)$1 ^ (int_32)[-1])) >> [2])
	$7 = $3
	
.LOOP $label$9:
	*($7) = *($8)
	$7 = ($7 + [4])
	$8 = ($8 + [4])
	if ( ($8 <= $3) ){ goto $label$9 }
	*(($0 + [4])) = (($3 + ($4 << [2])) + [4])
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$10 }
	CALL memmove(($3 - ($6 << [2])), $1, $5)
	
.LABEL $label$10
	*($1) = *($2)
	goto $label$3 
	
.LABEL $label$7
	$6 = *($0)
	$3 = (int_32(($3 - $6) >> [2]) + [1])
	if ( ((uint_32)$3 >= (uint_32)[1073741824]) ){ goto $label$2 }
	$5 = ($0 + [8])
	$8 = [1073741823]
	$7 = ($7 - $6)
	if ( ((uint_32)int_32($7 >> [2]) > (uint_32)[536870910]) ){ goto $label$11 }
	$8 = int_32($7 >> [1])
	$8 = ( $3 ? $8 : ($8 <= $3) )
	
.LABEL $label$11
	*(($9 + [24])) = $5
	$7 = [0]
	*($9 + [20]) = [0]
	if ( ($8 == 0) ){ goto $label$12 }
	if ( ((uint_32)$8 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$7 = CALL $280(($8 << [2]))
	
.LABEL $label$12
	*($9 + [8]) = $7
	*(($9 + [20])) = ($7 + ($8 << [2]))
	$8 = ($7 + (int_32(($1 - $6) >> [2]) << [2]))
	*($9 + [16]) = $8
	*($9 + [12]) = $8
	CALL $179(($9 + [8]), $2)
	$7 = *($0)
	$8 = ($1 - $7)
	$3 = *($9 + [12])
	$2 = ($3 - $8)
	*($9 + [12]) = $2
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$13 }
	CALL memcpy($2, $7, $8)
	
.LABEL $label$13
	$2 = ($0 + [4])
	$7 = *($2)
	$8 = ($7 - $1)
	if ( ((int_32)$8 <= (int_32)[0]) ){ goto $label$5 }
	$7 = ($9 + [16])
	CALL memcpy(*($7), $1, $8)
	$1 = (*($7) + $8)
	*($7) = $1
	$7 = *($2)
	goto $label$4 
	
.LABEL $label$6
	*(($0 + [4])) = ($1 + [4])
	*($1) = *($2)
	goto $label$3 
	
.LABEL $label$5
	$1 = *(($9 + [16]))
	
.LABEL $label$4
	$8 = *($0)
	*($0) = *($9 + [12])
	*(($0 + [4])) = $1
	*(($6 = (($9 + [8]) + [8]))) = $7
	*($9 + [12]) = $8
	$0 = ($0 + [8])
	$1 = *($0)
	$2 = ($9 + [20])
	*($0) = *($2)
	*($2) = $1
	*($9 + [8]) = $8
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$14 }
	*($6) = ($7 + (((int_32)(($7 + [-4]) - $8) ^ (int_32)[-1]) & [-4]))
	
.LABEL $label$14
	if ( ($8 == 0) ){ goto $label$15 }
	CALL $282($8)
	
.LABEL $label$15
	$1 = $3
	
.LABEL $label$3
	*([0] + [4]) = ($9 + [32])
	return $1
	
.LABEL $label$2
	CALL $298($0)
	
.LABEL $label$1
	CALL abort()
	(unreachable)
	return (unreachable)
}

void .FUNC $173 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$19 = (*([0] + [4]) - [32])
	*([0] + [4]) = $19
	
.LOOP $label$1:
	$9 = ([40] - $1)
	$8 = ($1 + [-40])
	$7 = ($1 + [-4])
	$6 = ($1 + [-8])
	$5 = ($1 + [-12])
	$4 = ($1 + [-16])
	$3 = ($1 + [-20])
	
.LOOP $label$2:
	$10 = $0
	
.LOOP $label$4:
	$0 = ($1 - $10)
	$18 = ((int_32)$0 / (int_32)[20])
	if ( ((uint_32)$18 <= (uint_32)[5]) ){ goto $label$12 }
	if ( ((int_32)$0 <= (int_32)[619]) ){ goto $label$11 }
	$11 = ($10 + ((int_32)((uint_32)$0 / (uint_32)[40]) * (int_32)[20]))
	if ( ((int_32)$0 < (int_32)[19981]) ){ goto $label$14 }
	$0 = ((int_32)((uint_32)$0 / (uint_32)[80]) * (int_32)[20])
	$13 = CALL $177($10, ($10 + $0), $11, ($11 + $0), $3, $2)
	goto $label$13 
	
.LABEL $label$14
	$13 = CALL $175($10, $11, $3, $2)
	
.LABEL $label$13
	if ( CALL int_32 $10((int_32 $11), (int_32 *($2))) ){ goto $label$15 }
	$0 = $8
	
.LOOP $label$18:
	if ( ((int_32)$10 == (int_32)$0) ){ goto $label$17 }
	$18 = CALL int_32 $0((int_32 $11), (int_32 *($2)))
	$0 = ($0 + [-20])
	if ( ($18 == 0) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$15 = ($10 + [20])
	if ( CALL int_32 $10((int_32 $3), (int_32 *($2))) ){ goto $label$19 }
	if ( ((int_32)$15 == (int_32)$3) ){ goto $label$6 }
	$15 = ($10 + $9)
	$0 = [0]
	
.LOOP $label$21:
	$18 = ($10 + $0)
	$11 = ($18 + [20])
	if ( CALL int_32 $10((int_32 $11), (int_32 *($2))) ){ goto $label$20 }
	$0 = ($0 + [20])
	if ( ($15 + $0) ){ goto $label$21 }
	goto $label$6 
	
.LABEL $label$20
	$0 = *($11)
	*($11) = *($3)
	*($3) = $0
	$0 = ($18 + [24])
	$11 = *($0)
	*($0) = *($4)
	*($4) = $11
	$0 = ($18 + [28])
	$11 = *($0)
	*($0) = *($5)
	*($5) = $11
	$0 = ($18 + [32])
	$11 = *($0)
	*($0) = *($6)
	*($6) = $11
	$0 = ($18 + [36])
	$11 = *($0)
	*($0) = *($7)
	*($7) = $11
	$15 = ($18 + [40])
	
.LABEL $label$19
	if ( ((int_32)$15 == (int_32)$3) ){ goto $label$6 }
	$11 = $3
	
.LOOP $label$22:
	$18 = ($15 + [-20])
	
.LOOP $label$23:
	$18 = ($18 + [20])
	if ( (CALL int_32 $10((int_32 $18), (int_32 *($2))) == 0) ){ goto $label$23 }
	$0 = ($11 + [16])
	$15 = ($18 + [20])
	
.LOOP $label$24:
	$11 = ($0 + [-36])
	$0 = ($0 + [-20])
	if ( CALL int_32 $10((int_32 $11), (int_32 *($2))) ){ goto $label$24 }
	$11 = ($0 + [-16])
	if ( ((uint_32)$18 >= (uint_32)$11) ){ goto $label$5 }
	$12 = *($18)
	*($18) = *($11)
	*($11) = $12
	$12 = ($18 + [4])
	$13 = *($12)
	$14 = ($0 + [-12])
	*($12) = *($14)
	*($14) = $13
	$12 = ($18 + [8])
	$13 = *($12)
	$14 = ($0 + [-8])
	*($12) = *($14)
	*($14) = $13
	$12 = ($18 + [12])
	$13 = *($12)
	$14 = ($0 + [-4])
	*($12) = *($14)
	*($14) = $13
	$18 = ($18 + [16])
	$12 = *($18)
	*($18) = *($0)
	*($0) = $12
	goto $label$22 
	
.LABEL $label$16
	$18 = *($10)
	$15 = ($0 + [20])
	*($10) = *($15)
	*($15) = $18
	$18 = *($10 + [4])
	$12 = ($0 + [24])
	*($10 + [4]) = *($12)
	*($12) = $18
	$18 = *($10 + [8])
	$12 = ($0 + [28])
	*($10 + [8]) = *($12)
	*($12) = $18
	$18 = *($10 + [12])
	$12 = ($0 + [32])
	*($10 + [12]) = *($12)
	*($12) = $18
	$18 = *($10 + [16])
	$0 = ($0 + [36])
	*($10 + [16]) = *($0)
	*($0) = $18
	$13 = ($13 + [1])
	goto $label$7 
	
.LABEL $label$15
	$15 = $3
	goto $label$7 
	
.LABEL $label$12
	goto $label$6 
	
.LABEL $label$25
	if ( (CALL int_32 $3((int_32 $10), (int_32 *($2))) == 0) ){ goto $label$6 }
	$2 = *($10)
	*($10) = *($3)
	*($3) = $2
	$2 = *($10 + [4])
	*($10 + [4]) = *($4)
	*($4) = $2
	$2 = *($10 + [8])
	*($10 + [8]) = *($5)
	*($5) = $2
	$2 = *($10 + [12])
	*($10 + [12]) = *($6)
	*($6) = $2
	$2 = *($10 + [16])
	*($10 + [16]) = *($7)
	*($7) = $2
	goto $label$6 
	
.LABEL $label$11
	$0 = ($10 + [40])
	CALL $175($10, ($10 + [20]), $0, $2)
	$18 = ($10 + [60])
	if ( ((int_32)$18 == (int_32)$1) ){ goto $label$6 }
	$14 = [0]
	
.LOOP $label$26:
	$13 = $18
	if ( (CALL int_32 $13((int_32 $0), (int_32 *($2))) == 0) ){ goto $label$27 }
	*(($16 = (($19 + [8]) + [16]))) = *(($13 + [16]))
	*(($17 = (($19 + [8]) + [8]))) = *(($13 + [8]))
	*($19 + [8]) = *($13)
	$18 = $14
	
.LOOP $label$29:
	$11 = ($0 + [56])
	*((($0 = ($10 + $18)) + [76])) = *($11)
	$15 = ($0 + [48])
	*(($0 + [68])) = *($15)
	$12 = ($0 + [40])
	*(($0 + [60])) = *($12)
	if ( ((int_32)$18 == (int_32)[-40]) ){ goto $label$28 }
	$18 = ($18 + [-20])
	if ( CALL int_32 ($19 + [8])((int_32 ($0 + [20])), (int_32 *($2))) ){ goto $label$29 }
	
.LABEL $label$28
	*($11) = *($16)
	*($15) = *($17)
	*($12) = *($19 + [8])
	
.LABEL $label$27
	$14 = ($14 + [20])
	$0 = $13
	$18 = ($13 + [20])
	if ( ((int_32)$18 != (int_32)$1) ){ goto $label$26 }
	goto $label$6 
	
.LABEL $label$10
	CALL $175($10, ($10 + [20]), $3, $2)
	goto $label$6 
	
.LABEL $label$9
	CALL $176($10, ($10 + [20]), ($10 + [40]), $3, $2)
	goto $label$6 
	
.LABEL $label$8
	CALL $177($10, ($10 + [20]), ($10 + [40]), ($10 + [60]), $3, $2)
	goto $label$6 
	
.LABEL $label$7
	$12 = ($10 + [20])
	if ( ((uint_32)$12 >= (uint_32)$15) ){ goto $label$30 }
	
.LOOP $label$31:
	$18 = ($12 + [-20])
	
.LOOP $label$32:
	$18 = ($18 + [20])
	if ( CALL int_32 $18((int_32 $11), (int_32 *($2))) ){ goto $label$32 }
	$0 = ($15 + [16])
	$12 = ($18 + [20])
	
.LOOP $label$33:
	$15 = ($0 + [-36])
	$0 = ($0 + [-20])
	if ( (CALL int_32 $15((int_32 $11), (int_32 *($2))) == 0) ){ goto $label$33 }
	$15 = ($0 + [-16])
	if ( ((uint_32)$18 > (uint_32)$15) ){ goto $label$34 }
	$14 = *($18)
	*($18) = *($15)
	*($15) = $14
	$14 = ($18 + [4])
	$16 = *($14)
	$17 = ($0 + [-12])
	*($14) = *($17)
	*($17) = $16
	$14 = ($18 + [8])
	$16 = *($14)
	$17 = ($0 + [-8])
	*($14) = *($17)
	*($17) = $16
	$14 = ($18 + [12])
	$16 = *($14)
	$17 = ($0 + [-4])
	*($14) = *($17)
	*($17) = $16
	$14 = ($18 + [16])
	$16 = *($14)
	*($14) = *($0)
	*($0) = $16
	$11 = ( $15 ? $11 : ((int_32)$11 == (int_32)$18) )
	$13 = ($13 + [1])
	goto $label$31 
	
.LABEL $label$34
	$12 = $18
	
.LABEL $label$30
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$35 }
	if ( (CALL int_32 $11((int_32 $12), (int_32 *($2))) == 0) ){ goto $label$35 }
	$0 = *($12)
	*($12) = *($11)
	*($11) = $0
	$0 = *($12 + [4])
	*($12 + [4]) = *($11 + [4])
	*($11 + [4]) = $0
	$0 = *($12 + [8])
	*($12 + [8]) = *($11 + [8])
	*($11 + [8]) = $0
	$0 = *($12 + [12])
	*($12 + [12]) = *($11 + [12])
	*($11 + [12]) = $0
	$0 = *($12 + [16])
	*($12 + [16]) = *($11 + [16])
	*($11 + [16]) = $0
	$13 = ($13 + [1])
	
.LABEL $label$35
	if ( $13 ){ goto $label$37 }
	$18 = CALL $178($10, $12, $2)
	$0 = ($12 + [20])
	if ( CALL $178($0, $1, $2) ){ goto $label$36 }
	if ( $18 ){ goto $label$2 }
	
.LABEL $label$37
	if ( ((int_32)($12 - $10) >= (int_32)($1 - $12)) ){ goto $label$3 }
	CALL $173($10, $12, $2)
	$0 = ($12 + [20])
	goto $label$2 
	
.LABEL $label$36
	$1 = $12
	$0 = $10
	if ( ($18 == 0) ){ goto $label$1 }
	
.LABEL $label$6
	*([0] + [4]) = ($19 + [32])
	return 
	
.LABEL $label$5
	$10 = $18
	goto $label$4 
	
.LABEL $label$3
	CALL $173(($12 + [20]), $1, $2)
	$1 = $12
	$0 = $10
	goto $label$1 
	$18
}

int_32 .FUNC $178 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$12 = ((int_32)($1 - $0) / (int_32)[20])
	if ( ((uint_32)$12 > (uint_32)[5]) ){ goto $label$7 }
	$6 = [1]
	goto $label$1 
	
.LABEL $label$8
	$12 = ($1 + [-20])
	if ( (CALL int_32 $12((int_32 $0), (int_32 *($2))) == 0) ){ goto $label$1 }
	$2 = *($0)
	*($0) = *($12)
	*($12) = $2
	$12 = *($0 + [4])
	$2 = ($1 + [-16])
	*($0 + [4]) = *($2)
	*($2) = $12
	$12 = *($0 + [8])
	$2 = ($1 + [-12])
	*($0 + [8]) = *($2)
	*($2) = $12
	$12 = *($0 + [12])
	$2 = ($1 + [-8])
	*($0 + [12]) = *($2)
	*($2) = $12
	$12 = *($0 + [16])
	$2 = ($1 + [-4])
	*($0 + [16]) = *($2)
	*($2) = $12
	goto $label$1 
	
.LABEL $label$7
	$6 = ($0 + [40])
	CALL $175($0, ($0 + [20]), $6, $2)
	$12 = ($0 + [60])
	if ( ((int_32)$12 == (int_32)$1) ){ goto $label$9 }
	$10 = [0]
	$11 = [0]
	
.LOOP $label$10:
	$3 = $12
	if ( (CALL int_32 $3((int_32 $6), (int_32 *($2))) == 0) ){ goto $label$11 }
	*(($4 = (($13 + [8]) + [16]))) = *(($3 + [16]))
	*(($5 = (($13 + [8]) + [8]))) = *(($3 + [8]))
	*($13 + [8]) = *($3)
	$12 = $10
	
.LOOP $label$13:
	$7 = ($6 + [56])
	*((($6 = ($0 + $12)) + [76])) = *($7)
	$8 = ($6 + [48])
	*(($6 + [68])) = *($8)
	$9 = ($6 + [40])
	*(($6 + [60])) = *($9)
	if ( ((int_32)$12 == (int_32)[-40]) ){ goto $label$12 }
	$12 = ($12 + [-20])
	if ( CALL int_32 ($13 + [8])((int_32 ($6 + [20])), (int_32 *($2))) ){ goto $label$13 }
	
.LABEL $label$12
	*($7) = *($4)
	*($8) = *($5)
	*($9) = *($13 + [8])
	$11 = ($11 + [1])
	if ( ((int_32)$11 == (int_32)[8]) ){ goto $label$3 }
	
.LABEL $label$11
	$10 = ($10 + [20])
	$6 = $3
	$12 = ($3 + [20])
	if ( ((int_32)$12 != (int_32)$1) ){ goto $label$10 }
	
.LABEL $label$9
	$6 = [1]
	goto $label$2 
	
.LABEL $label$6
	CALL $175($0, ($0 + [20]), ($1 + [-20]), $2)
	goto $label$1 
	
.LABEL $label$5
	CALL $177($0, ($0 + [20]), ($0 + [40]), ($0 + [60]), ($1 + [-20]), $2)
	goto $label$1 
	
.LABEL $label$4
	CALL $176($0, ($0 + [20]), ($0 + [40]), ($1 + [-20]), $2)
	goto $label$1 
	
.LABEL $label$3
	$12 = ((int_32)($3 + [20]) == (int_32)$1)
	$6 = [0]
	
.LABEL $label$2
	$6 = ($12 | $6)
	
.LABEL $label$1
	*([0] + [4]) = ($13 + [32])
	$12
	return ($6 & [1])
}

void .FUNC $179 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$5 = *($0 + [12])
	$10 = *($0 + [8])
	if ( ((int_32)$10 != (int_32)$5) ){ goto $label$2 }
	$2 = *($0)
	$9 = *($0 + [4])
	if ( ((uint_32)$9 <= (uint_32)$2) ){ goto $label$3 }
	$2 = (((int_32)(int_32(($9 - $2) >> [2]) + [1]) / (int_32)[-2]) << [2])
	$5 = ($9 + $2)
	$3 = ($10 - $9)
	$10 = int_32($3 >> [2])
	if ( ($10 == 0) ){ goto $label$4 }
	CALL memmove($5, $9, $3)
	$9 = *(($0 + [4]))
	
.LABEL $label$4
	*(($0 + [4])) = ($9 + $2)
	$10 = ($5 + ($10 << [2]))
	*(($0 + [8])) = $10
	goto $label$2 
	
.LABEL $label$3
	$10 = int_32(($5 - $2) >> [1])
	$10 = ( $10 ? [1] : $10 )
	if ( ((uint_32)$10 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$9 = ($10 << [2])
	$3 = CALL $280($9)
	$4 = ($3 + $9)
	$2 = ($3 + ($10 & [-4]))
	$7 = ($0 + [8])
	$5 = *($7)
	$8 = ($0 + [4])
	$10 = *($8)
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$6 }
	$6 = uint_32((($5 + [-4]) - $10) >> [2])
	$9 = $2
	
.LOOP $label$7:
	*($9) = *($10)
	$9 = ($9 + [4])
	$10 = ($10 + [4])
	if ( ((int_32)$5 != (int_32)$10) ){ goto $label$7 }
	$10 = (($2 + ($6 << [2])) + [4])
	goto $label$5 
	
.LABEL $label$6
	$10 = $2
	
.LABEL $label$5
	*($8) = $2
	$9 = *($0)
	*($0) = $3
	*($7) = $10
	*(($0 + [12])) = $4
	if ( ($9 == 0) ){ goto $label$2 }
	CALL $282($9)
	$10 = *(($0 + [8]))
	
.LABEL $label$2
	*(($0 + [8])) = ($10 + [4])
	*($10) = *($1)
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $237 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	*($5) = [0]
	$2 = *($1 + [8])
	*($5 + [8]) = $2
	if ( ((uint_32)$2 > (uint_32)[8]) ){ goto $label$2 }
	$4 = $5
	$3 = $1
	goto $label$1 
	
.LABEL $label$2
	$4 = CALL $281($2)
	*($5) = $4
	$3 = *($1)
	
.LABEL $label$1
	CALL memcpy($4, $3, $2)
	*($5 + [12]) = *($1 + [12])
	*($5 + [16]) = [0]
	$1 = *(($5 + [8]))
	*($5 + [24]) = $1
	$2 = ($0 + [4])
	if ( ((uint_32)$1 > (uint_32)[8]) ){ goto $label$4 }
	$4 = $5
	$3 = ($5 + [16])
	goto $label$3 
	
.LABEL $label$4
	$3 = CALL $281($1)
	*($5 + [16]) = $3
	$4 = *($5)
	
.LABEL $label$3
	CALL memcpy($3, $4, $1)
	*($5 + [28]) = *(($5 + [12]))
	$1 = CALL $238([3884], ($5 + [16]), $2)
	if ( (*((($5 + [16]) + [8])) <= [9]) ){ goto $label$5 }
	$2 = *($5 + [16])
	if ( ($2 == 0) ){ goto $label$5 }
	CALL $283($2)
	
.LABEL $label$5
	if ( (*(($5 + [8])) <= [9]) ){ goto $label$6 }
	$2 = *($5)
	if ( ($2 == 0) ){ goto $label$6 }
	CALL $283($2)
	
.LABEL $label$6
	*($0) = ( [3884] ? [0] : $1 )
	*([0] + [4]) = ($5 + [32])
}

int_32 .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [1296])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [1296])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $235 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$7 = *($0 + [4])
	$8 = ((int_32)($7 - $4) / (int_32)[12])
	$6 = ($8 + [1])
	if ( ((uint_32)$6 >= (uint_32)[357913942]) ){ goto $label$2 }
	$5 = [357913941]
	$3 = ((int_32)(*($0 + [8]) - $4) / (int_32)[12])
	if ( ((uint_32)$3 > (uint_32)[178956969]) ){ goto $label$4 }
	$5 = ($3 << [1])
	$5 = ( $6 ? $5 : ($5 <= $6) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $280(((int_32)$5 * (int_32)[12]))
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $298($0)
	
.LABEL $label$1
	$2 = *($1)
	*($1) = (int_64)0
	*(($8 = ($6 + ((int_32)$8 * (int_32)[12])))) = $2
	$1 = ($1 + [8])
	$3 = *($1)
	*($1) = [0]
	*(($8 + [8])) = $3
	$5 = ($6 + ((int_32)$5 * (int_32)[12]))
	$6 = ($8 + [12])
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$6 }
	$1 = ([0] - $4)
	$7 = ($7 + [-12])
	
.LOOP $label$7:
	*(($8 + [-12])) = *($7)
	$4 = ($7 + [8])
	*(($8 + [-4])) = *($4)
	*($7) = [0]
	*(($7 + [4])) = [0]
	*($4) = [0]
	$8 = ($8 + [-12])
	$7 = ($7 + [-12])
	if ( ((int_32)($7 + $1) != (int_32)[-12]) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	$8 = ([0] - $4)
	$7 = ($7 + [-12])
	
.LOOP $label$9:
	if ( ((*($7) & [1]) == 0) ){ goto $label$10 }
	CALL $282(*(($7 + [8])))
	
.LABEL $label$10
	$7 = ($7 + [-12])
	if ( ((int_32)($7 + $8) != (int_32)[-12]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $282($4)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $97 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [40]) == (int_32)$0), [1104])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)7235159545106726912, (int_64)7235159545106726912)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $58($0, $3)
	CALL eosio_assert(((int_32)*($3 + [40]) == (int_32)$0), [1104])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [1472])
	CALL $98($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $99($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $90 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	*($0) = (int_64)0
	*($0 + [8]) = (int_64)0
	*($0 + [16]) = (int_64)0
	*($0 + [24]) = [0]
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$3 = ($0 + [28])
	$1 = CALL strlen([224])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$5 }
	*($3) = ($1 << [1])
	$3 = ($3 + [1])
	if ( $1 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$2 = (($1 + [16]) & [-16])
	$3 = CALL $280($2)
	*(($0 + [28])) = ($2 | [1])
	*(($0 + [36])) = $3
	*(($0 + [32])) = $1
	
.LABEL $label$4
	CALL memcpy($3, [224], $1)
	
.LABEL $label$3
	*(($3 + $1)) = [0]
	*(($0 + [48])) = [0]
	*($0 + [40 align=4]) = (int_64)0
	$3 = ($0 + [40])
	$1 = CALL strlen([224])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$8 }
	*($3) = ($1 << [1])
	$3 = ($3 + [1])
	if ( $1 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$2 = (($1 + [16]) & [-16])
	$3 = CALL $280($2)
	*(($0 + [40])) = ($2 | [1])
	*(($0 + [48])) = $3
	*(($0 + [44])) = $1
	
.LABEL $label$7
	CALL memcpy($3, [224], $1)
	
.LABEL $label$6
	*(($3 + $1)) = [0]
	*($0 + [64]) = (int_64)0
	*($0 + [56]) = (int_64)0
	*($0 + [72]) = (int_64)0
	*($0 + [80]) = (int_64)0
	*($0 + [88]) = (int_64)0
	return $0
	
.LABEL $label$2
	CALL $284($3)
	
.LABEL $label$1
	CALL $284($3)
	(unreachable)
	return (unreachable)
}

void .FUNC $86 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $280(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $298($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $282($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $282($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $232 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [272])
	*([0] + [4]) = $7
	$5 = *($1 + [8])
	$6 = *($1 + [4])
	$4 = *($1)
	*($7 + [176]) = [0]
	$3 = *($2 + [8])
	*($7 + [184]) = $3
	$1 = ($4 & [1])
	$5 = ( $5 ? ($1 + [1]) : $1 )
	$1 = ($5 + ( $6 ? uint_32($4 >> [1]) : $1 ))
	if ( ((uint_32)$3 > (uint_32)[8]) ){ goto $label$2 }
	$4 = ($7 + [176])
	$6 = $2
	goto $label$1 
	
.LABEL $label$2
	$4 = CALL $281($3)
	*($7 + [176]) = $4
	$6 = *($2)
	
.LABEL $label$1
	CALL memcpy($4, $6, $3)
	*($7 + [188]) = *($2 + [12])
	$1 = CALL $233(($7 + [192]), $5, $1, ($7 + [176]))
	$2 = [0]
	*($7 + [232]) = [0]
	$3 = *($1)
	if ( ($3 == 0) ){ goto $label$3 }
	*($7 + [232]) = $3
	if ( ($3 & [1]) ){ goto $label$4 }
	CALL void ($1 + [4])((int_32 (($7 + [232]) | [4])), (int_32 [0]), (int_32 *(($3 & [-2]))))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	*((($7 + [232]) + [12])) = *(($1 + [12]))
	*($7 + [236 align=4]) = *($1 + [4 align=4])
	$2 = $3
	
.LABEL $label$3
	*($7 + [248]) = *($1 + [16 align=4])
	*($7 + [256]) = *($1 + [24])
	*($7 + [260]) = *($1 + [28])
	*($7 + [264]) = *($1 + [32])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( ($2 & [1]) ){ goto $label$6 }
	$2 = *(($2 & [-2]))
	if ( ($2 == 0) ){ goto $label$6 }
	$3 = ($1 + [4])
	CALL void $3((int_32 $3), (int_32 [2]), (int_32 $2))
	
.LABEL $label$6
	*($1) = [0]
	
.LABEL $label$5
	if ( (*(($7 + [184])) <= [9]) ){ goto $label$7 }
	$1 = *($7 + [176])
	if ( ($1 == 0) ){ goto $label$7 }
	CALL $283($1)
	
.LABEL $label$7
	*(($7 + [116])) = [0]
	*($7 + [96]) = [0]
	*($7 + [124]) = [0]
	*($7 + [120]) = [0]
	*($7 + [112]) = [0]
	*($7 + [128]) = [1]
	*($7 + [136]) = [0]
	*($7 + [164]) = [0]
	*($7 + [160]) = [0]
	*($7 + [168]) = [1]
	*($7 + [152]) = *($7 + [112])
	*($7 + [40]) = [0]
	$1 = [0]
	$2 = *($7 + [232])
	if ( ($2 == 0) ){ goto $label$8 }
	*($7 + [40]) = $2
	if ( ($2 & [1]) ){ goto $label$9 }
	CALL void (($7 + [232]) | [4])((int_32 (($7 + [40]) | [4])), (int_32 [0]), (int_32 *(($2 & [-2]))))
	$1 = *($7 + [136])
	goto $label$8 
	
.LABEL $label$9
	*((($7 + [40]) + [12])) = *((($7 + [232]) + [12]))
	*($7 + [44 align=4]) = *($7 + [236 align=4])
	$1 = [0]
	
.LABEL $label$8
	*($7 + [56]) = *((($7 + [232]) + [16]))
	*($7 + [64]) = *((($7 + [232]) + [24]))
	*($7 + [68]) = *((($7 + [232]) + [28]))
	*($7 + [72]) = *((($7 + [232]) + [32]))
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	*($7) = $1
	if ( ($1 & [1]) ){ goto $label$11 }
	CALL void (($7 + [136]) | [4])((int_32 ($7 | [4])), (int_32 [0]), (int_32 *(($1 & [-2]))))
	goto $label$10 
	
.LABEL $label$11
	*(($7 + [12])) = *((($7 + [136]) + [12]))
	*($7 + [4 align=4]) = *($7 + [140 align=4])
	
.LABEL $label$10
	*($7 + [16]) = *((($7 + [136]) + [16]))
	*($7 + [24]) = *((($7 + [136]) + [24]))
	*($7 + [28]) = *((($7 + [136]) + [28]))
	*($7 + [32]) = *((($7 + [136]) + [32]))
	$3 = CALL $234(($7 + [80]), ($7 + [40]), $7)
	$1 = *($7)
	if ( ($1 == 0) ){ goto $label$12 }
	if ( ($1 & [1]) ){ goto $label$13 }
	$1 = *(($1 & [-2]))
	if ( ($1 == 0) ){ goto $label$13 }
	$2 = ($7 | [4])
	CALL void $2((int_32 $2), (int_32 [2]), (int_32 $1))
	
.LABEL $label$13
	*($7) = [0]
	
.LABEL $label$12
	$1 = *($7 + [40])
	if ( ($1 == 0) ){ goto $label$14 }
	if ( ($1 & [1]) ){ goto $label$15 }
	$1 = *(($1 & [-2]))
	if ( ($1 == 0) ){ goto $label$15 }
	$2 = (($7 + [40]) | [4])
	CALL void $2((int_32 $2), (int_32 [2]), (int_32 $1))
	
.LABEL $label$15
	*($7 + [40]) = [0]
	
.LABEL $label$14
	$4 = *($0)
	*($0) = *($3)
	*($3) = $4
	$1 = *($0 + [4])
	*($0 + [4]) = *($3 + [4])
	*($3 + [4]) = $1
	$2 = *($0 + [8])
	*($0 + [8]) = *($3 + [8])
	*($3 + [8]) = $2
	if ( ($4 == 0) ){ goto $label$16 }
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$18 }
	$2 = ([0] - $4)
	$1 = ($1 + [-12])
	
.LOOP $label$19:
	if ( ((*($1) & [1]) == 0) ){ goto $label$20 }
	CALL $282(*(($1 + [8])))
	
.LABEL $label$20
	$1 = ($1 + [-12])
	if ( ((int_32)($1 + $2) != (int_32)[-12]) ){ goto $label$19 }
	$1 = *($3)
	goto $label$17 
	
.LABEL $label$18
	$1 = $4
	
.LABEL $label$17
	*(($3 + [4])) = $4
	CALL $282($1)
	
.LABEL $label$16
	$1 = *($7 + [136])
	if ( ($1 == 0) ){ goto $label$21 }
	if ( ($1 & [1]) ){ goto $label$22 }
	$1 = *(($1 & [-2]))
	if ( ($1 == 0) ){ goto $label$22 }
	$2 = (($7 + [136]) | [4])
	CALL void $2((int_32 $2), (int_32 [2]), (int_32 $1))
	
.LABEL $label$22
	*($7 + [136]) = [0]
	
.LABEL $label$21
	$1 = *($7 + [232])
	if ( ($1 == 0) ){ goto $label$23 }
	if ( ($1 & [1]) ){ goto $label$24 }
	$1 = *(($1 & [-2]))
	if ( ($1 == 0) ){ goto $label$24 }
	$2 = (($7 + [232]) | [4])
	CALL void $2((int_32 $2), (int_32 [2]), (int_32 $1))
	
.LABEL $label$24
	*($7 + [232]) = [0]
	
.LABEL $label$23
	*([0] + [4]) = ($7 + [272])
	return $0
}

void .FUNC $231 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $280(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $298($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $282($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $282($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	*(($4 = *($1))) = (*($4) + [8])
	*(($4 = *($1))) = (*($4) + [4])
	*(($4 = *($1))) = (*($4) + [4])
	*(($4 = *($1))) = (*($4) + [4])
	*(($4 = *($1))) = (*($4) + [4])
	*(($4 = *($1))) = (*($4) + [4])
	$4 = *($2)
	$2 = *($0 + [24])
	$5 = (CASTING uint_64)(uint_32 ( *($2 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	$3 = *($1)
	$4 = *($3)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	*($3) = $4
	$2 = *($2)
	$2 = ( *(($2 + [4])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	if ( ($2 == 0) ){ goto $label$2 }
	*($3) = ($2 + $4)
	
.LABEL $label$2
	$4 = *($2)
	$2 = *($0 + [28])
	$5 = (CASTING uint_64)(uint_32 ( *($2 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	$0 = *($1)
	$4 = *($0)
	
.LOOP $label$3:
	$4 = ($4 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	*($0) = $4
	$2 = *($2)
	$2 = ( *(($2 + [4])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	if ( ($2 == 0) ){ goto $label$4 }
	*($0) = ($2 + $4)
	
.LABEL $label$4
	*(($4 = *($1))) = (*($4) + [8])
	*(($4 = *($1))) = (*($4) + [8])
	*(($4 = *($1))) = (*($4) + [8])
	*(($4 = *($1))) = (*($4) + [8])
	*(($4 = *($1))) = (*($4) + [8])
}

void .FUNC _ZN6NiuNiu7_onwaitEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [112])
	*([0] + [4]) = $7
	CALL _ZN6NiuNiu11_getgamectxEv(($7 + [16]), $0)
	$1 = ($7 + [56])
	$5 = *($7 + [56])
	$2 = CALL strlen([1360])
	if ( ((int_32)$2 != (int_32)( *(($7 + [60])) ? uint_32($5 >> [1]) : ($5 & [1]) )) ){ goto $label$2 }
	if ( CALL $294($1, [0], [-1], [1360], $2) ){ goto $label$2 }
	if ( ((uint_64)*($7 + [88]) > (uint_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) ){ goto $label$2 }
	$2 = *($7 + [28])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = *($7 + [16])
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$5 = CALL strlen([1760])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	$4 = (CASTING uint_64)(uint_32 $2)
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($5 << [1])
	$2 = ($7 | [1])
	if ( $5 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$6 = (($5 + [16]) & [-16])
	$2 = CALL $280($6)
	*($7) = ($6 | [1])
	*($7 + [8]) = $2
	*($7 + [4]) = $5
	
.LABEL $label$5
	CALL memcpy($2, [1760], $5)
	
.LABEL $label$4
	*(($2 + $5)) = [0]
	CALL _ZN6NiuNiu14_simplebackeosEyyRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0, $3, $4, $7)
	if ( ((*($7) & [1]) == 0) ){ goto $label$3 }
	CALL $282(*($7 + [8]))
	
.LABEL $label$3
	CALL _ZN6NiuNiu13_cleargamectxEv($0)
	CALL _ZN6NiuNiu14_autosetbankerEv($0)
	
.LABEL $label$2
	if ( ((*($1) & [1]) == 0) ){ goto $label$7 }
	CALL $282(*(($7 + [64])))
	
.LABEL $label$7
	if ( ((*($7 + [44]) & [1]) == 0) ){ goto $label$8 }
	CALL $282(*(($7 + [52])))
	
.LABEL $label$8
	*([0] + [4]) = ($7 + [112])
	return (unreachable)
	
.LABEL $label$1
	CALL $284($7)
}

void .FUNC $85 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$13()), [1232])
	*(($4 = CALL $280([24])) + [8]) = $1
	*($4) = (int_64)0
	*($4) = *(*($3))
	CALL eosio_assert([1], [1296])
	CALL memcpy(($7 + [16]), $4, [8])
	*($4 + [12]) = CALL db_store_i64(*($1 + [8]), (int_64)7235159541892513792, $2, (int_64)7235159541892513792, ($7 + [16]), [8])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)7235159541892513792) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)7235159541892513793
	
.LABEL $label$1
	*($7 + [8]) = $4
	*($7 + [16]) = (int_64)7235159541892513792
	$5 = *($4 + [12])
	*($7 + [4]) = $5
	$6 = ($1 + [28])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = (int_64)7235159541892513792
	*($3 + [16]) = $5
	*($7 + [8]) = [0]
	*($3) = $4
	*($6) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $86(($1 + [24]), ($7 + [8]), ($7 + [16]), ($7 + [4]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$1 = *($7 + [8])
	*($7 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $282($1)
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [32])
}

int_32 .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [64])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [1024])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($8 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($7 + [20]) = $4
	*($7 + [16]) = $4
	*($7 + [24]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($5 = CALL $280([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = $0
	*($7 + [32]) = ($7 + [16])
	*($7 + [44]) = ($5 + [8])
	*($7 + [40]) = $5
	*($7 + [48]) = ($5 + [16])
	*($7 + [52]) = ($5 + [24])
	*($7 + [56]) = ($5 + [32])
	CALL $60(($7 + [40]), ($7 + [32]))
	*($5 + [44]) = $1
	*($7 + [32]) = $5
	*($7 + [40]) = (int_64)7235159545106726912
	$6 = *($5 + [44])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = (int_64)7235159545106726912
	*($4 + [16]) = $6
	*($7 + [32]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $61(($0 + [24]), ($7 + [32]), ($7 + [40]), ($7 + [12]))
	
.LABEL $label$8
	$4 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $282($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [64])
	return $5
}

void .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [848])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [896])
	$6 = ($0 + [28])
	$5 = *($6)
	CALL eosio_assert(((int_32)$5 != (int_32)*($0 + [24])), [960])
	$4 = ($5 + [-24])
	$6 = *($6)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	$2 = ([0] - $6)
	
.LOOP $label$4:
	$6 = ($4 + [24])
	$3 = *($6)
	*($6) = [0]
	$5 = *($4)
	*($4) = $3
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $282($5)
	
.LABEL $label$5
	*(($4 + [16])) = *(($4 + [40]))
	*(($4 + [8])) = *(($4 + [32]))
	$4 = $6
	if ( ((int_32)($6 + $2) != (int_32)[-24]) ){ goto $label$4 }
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$6 = $4
	
.LABEL $label$2
	
.LOOP $label$6:
	$5 = ($5 + [-24])
	$4 = *($5)
	*($5) = [0]
	if ( ($4 == 0) ){ goto $label$7 }
	CALL $282($4)
	
.LABEL $label$7
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$6 }
	
.LABEL $label$1
	*(($0 + [28])) = $6
	CALL db_remove_i64(*($1 + [44]))
}

void .FUNC $271 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$7 = ($5 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$6 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $280(((int_32)$6 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $298($0)
	
.LABEL $label$1
	*(($8 = ($7 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($8 + [8]) = *($3)
	*($8 + [16 align=4]) = (int_64)0
	*(($3 = ($8 + [24]))) = [0]
	$2 = CALL $280([16])
	*($8 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($8 + [20])) = $5
	*($8 + [28]) = [0]
	*(($2 = ($8 + [32]))) = [0]
	*(($8 + [36])) = [0]
	CALL $77(($8 + [28]), [8])
	$2 = *($8 + [28])
	CALL eosio_assert(((int_32)(*($2) - $2) > (int_32)[7]), [1296])
	CALL memcpy($2, $4, [8])
	$4 = ($7 + ((int_32)$6 * (int_32)[40]))
	$5 = ($8 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$3 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($2 + [-12]))
	*(($8 + [-40])) = *(($2 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($6 = ($8 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($8 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($6) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($6 = ($8 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($8 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($6) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $3) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	$1 = ([0] - $6)
	$8 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($8 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $2
	CALL $282($2)
	
.LABEL $label$10
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $2
	CALL $282($2)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $282($6)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC _ZN6NiuNiu13_setselftimerENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [112])
	*([0] + [4]) = $13
	$12 = CALL current_time()
	*(($13 + [60])) = [0]
	*(($13 + [64])) = [0]
	*($13 + [44]) = [0]
	*($13 + [48]) = [0]
	*($13 + [52]) = [0]
	*($13 + [56]) = [0]
	*($13 + [32]) = ((CASTING uint_32)(uint_64 ((uint_64)$12 / (uint_64)(int_64)1000000)) + [60])
	*($13 + [68]) = [0]
	*(($13 + [72])) = [0]
	*(($13 + [76])) = [0]
	*($13 + [80]) = [0]
	*(($13 + [84])) = [0]
	*(($13 + [88])) = [0]
	$4 = ($13 + [68])
	$3 = *($0)
	$12 = (int_64)0
	$7 = (int_64)59
	$11 = [1424]
	$8 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$6 }
	$10 = *($11)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$10 = ($10 + [165])
	goto $label$4 
	
.LABEL $label$6
	$9 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$11 = ($11 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	*($13 + [24]) = $8
	*($13 + [16]) = $3
	if ( (*($1) & [1]) ){ goto $label$8 }
	$11 = ($1 + [1])
	goto $label$7 
	
.LABEL $label$8
	$11 = *($1 + [8])
	
.LABEL $label$7
	$10 = [-1]
	
.LOOP $label$9:
	$1 = ($11 + $10)
	$5 = ($10 + [1])
	$10 = $5
	if ( *(($1 + [1])) ){ goto $label$9 }
	$6 = (CASTING uint_64)(uint_32 $5)
	$12 = (int_64)0
	$9 = (int_64)59
	$8 = (int_64)0
	
.LOOP $label$10:
	$7 = (int_64)0
	if ( ((uint_64)$12 >= (uint_64)$6) ){ goto $label$11 }
	$10 = *($11)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$10 = ($10 + [165])
	goto $label$12 
	
.LABEL $label$13
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$11
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$15 }
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	goto $label$14 
	
.LABEL $label$15
	$7 = ((int_64)$7 & (int_64)15)
	
.LABEL $label$14
	$11 = ($11 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$8 = ((int_64)$7 | (int_64)$8)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$10 }
	*($13 + [96]) = $8
	*($13 + [8]) = $3
	CALL $271($4, ($13 + [16]), $0, ($13 + [96]), ($13 + [8]))
	*(($13 + [52])) = $2
	$6 = CALL _ZN6NiuNiu13_getglobalcntEv($0)
	*($13 + [16]) = $6
	$12 = (int_64)0
	$7 = (int_64)59
	$11 = [1456]
	$8 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$12 > (uint_64)(int_64)9) ){ goto $label$21 }
	$10 = *($11)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$10 = ($10 + [165])
	goto $label$19 
	
.LABEL $label$21
	$9 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$17
	$11 = ($11 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$16 }
	*($13 + [16]) = ((int_64)( $8 ? (int_64)1 : (int_64)($6 == 0) ) + (int_64)$6)
	CALL $73(($0 + [88]), ($13 + [16]), *($0))
	$12 = *($13 + [16])
	*($13 + [24]) = (int_64)0
	*($13 + [16]) = $12
	$12 = *($0)
	CALL $74(($13 + [96]), ($13 + [32]))
	$11 = *($13 + [96])
	CALL send_deferred(($13 + [16]), $12, $11, (*($13 + [100]) - $11), [0])
	$11 = *($13 + [96])
	if ( ($11 == 0) ){ goto $label$22 }
	*($13 + [100]) = $11
	CALL $282($11)
	
.LABEL $label$22
	CALL $75(($13 + [32]))
	*([0] + [4]) = ($13 + [112])
}

void .FUNC $277 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	
.LOOP $label$1:
	$4 = ($1 + [-2])
	$3 = ($1 + [-1])
	
.LOOP $label$2:
	$5 = $0
	
.LOOP $label$4:
	$0 = ($1 - $5)
	if ( ((uint_32)$0 <= (uint_32)[5]) ){ goto $label$12 }
	if ( ((int_32)$0 <= (int_32)[30]) ){ goto $label$11 }
	$12 = ($5 + uint_32($0 >> [1]))
	if ( ((int_32)$0 < (int_32)[1000]) ){ goto $label$13 }
	$0 = uint_32($0 >> [2])
	$10 = CALL $278($5, ($5 + $0), $12, ($12 + $0), $3, $2)
	goto $label$7 
	
.LABEL $label$13
	$0 = *($3)
	$6 = *($5)
	$11 = *($12)
	if ( ((int_32)$11 >= (int_32)$6) ){ goto $label$16 }
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$15 }
	*($5) = $0
	*($3) = $6
	$10 = [1]
	goto $label$7 
	
.LABEL $label$16
	$10 = [0]
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$7 }
	*($12) = $0
	*($3) = $11
	$10 = [1]
	$11 = *($5)
	$0 = *($12)
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$7 }
	*($5) = $0
	*($12) = $11
	goto $label$14 
	
.LABEL $label$15
	*($5) = $11
	*($12) = $6
	$10 = [1]
	$0 = *($3)
	if ( ((int_32)$0 >= (int_32)$6) ){ goto $label$7 }
	*($12) = $0
	*($3) = $6
	
.LABEL $label$14
	$10 = [2]
	goto $label$7 
	
.LABEL $label$12
	goto $label$6 
	
.LABEL $label$17
	$11 = *($5)
	$0 = *($3)
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$6 }
	*($5) = $0
	*($3) = $11
	return 
	
.LABEL $label$11
	$0 = *($5 + [2])
	$6 = *($5)
	$11 = *($5 + [1])
	if ( ((int_32)$11 >= (int_32)$6) ){ goto $label$22 }
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$21 }
	*($5) = $0
	*(($5 + [2])) = $6
	goto $label$20 
	
.LABEL $label$22
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$19 }
	*(($5 + [2])) = $11
	*(($7 = ($5 + [1]))) = $0
	if ( ((int_32)$0 >= (int_32)$6) ){ goto $label$18 }
	*($5) = $0
	*($7) = $6
	goto $label$18 
	
.LABEL $label$21
	*($5) = $11
	*(($11 = ($5 + [1]))) = $6
	if ( ((int_32)$0 >= (int_32)$6) ){ goto $label$19 }
	*(($5 + [2])) = $6
	*($11) = $0
	
.LABEL $label$20
	$11 = $6
	goto $label$18 
	
.LABEL $label$19
	$11 = $0
	
.LABEL $label$18
	$8 = ($5 + [3])
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$6 }
	$12 = [0]
	
.LOOP $label$23:
	$7 = *($8)
	if ( ((int_32)$7 >= (int_32)int_32(($11 << [24]) >> [24])) ){ goto $label$24 }
	$0 = $12
	
.LOOP $label$28:
	*((($6 = ($5 + $0)) + [3])) = $11
	if ( ((int_32)$0 == (int_32)[-2]) ){ goto $label$27 }
	$0 = ($0 + [-1])
	$11 = *(($6 + [1]))
	if ( ((int_32)$7 < (int_32)$11) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$0 = $5
	goto $label$25 
	
.LABEL $label$26
	$0 = (($5 + $0) + [3])
	
.LABEL $label$25
	*($0) = $7
	
.LABEL $label$24
	$0 = ($8 + [1])
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$6 }
	$12 = ($12 + [1])
	$11 = *($8)
	$8 = $0
	goto $label$23 
	
.LABEL $label$10
	$11 = *($5 + [2])
	$6 = *($5)
	$0 = *($5 + [1])
	if ( ((int_32)$0 >= (int_32)$6) ){ goto $label$33 }
	if ( ((int_32)$11 >= (int_32)$0) ){ goto $label$32 }
	*($5) = $11
	*(($5 + [2])) = $6
	goto $label$31 
	
.LABEL $label$33
	if ( ((int_32)$11 >= (int_32)$0) ){ goto $label$30 }
	*(($5 + [2])) = $0
	*(($7 = ($5 + [1]))) = $11
	if ( ((int_32)$11 >= (int_32)$6) ){ goto $label$29 }
	*($5) = $11
	*($7) = $6
	goto $label$29 
	
.LABEL $label$32
	*($5) = $0
	*(($0 = ($5 + [1]))) = $6
	if ( ((int_32)$11 >= (int_32)$6) ){ goto $label$30 }
	*(($5 + [2])) = $6
	*($0) = $11
	
.LABEL $label$31
	$0 = $6
	goto $label$29 
	
.LABEL $label$30
	$0 = $11
	
.LABEL $label$29
	$11 = *($3)
	if ( ((int_32)$11 >= (int_32)$0) ){ goto $label$6 }
	*(($6 = ($5 + [2]))) = $11
	*($3) = $0
	$11 = ($5 + [1])
	$7 = *($11)
	$0 = *($6)
	if ( ((int_32)$0 >= (int_32)$7) ){ goto $label$6 }
	*($6) = $7
	*($11) = $0
	$11 = *($5)
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$6 }
	*($5) = $0
	*(($5 + [1])) = $11
	return 
	
.LABEL $label$9
	CALL $278($5, ($5 + [1]), ($5 + [2]), ($5 + [3]), $3, $2)
	return 
	
.LABEL $label$8
	$0 = *($3)
	$6 = *($5)
	$11 = *($5 + [1])
	if ( ((int_32)$11 >= (int_32)$6) ){ goto $label$35 }
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$34 }
	*($5) = $0
	*($3) = $6
	return 
	
.LABEL $label$35
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$6 }
	*(($6 = ($5 + [1]))) = $0
	*($3) = $11
	$11 = *($5)
	$0 = *($6)
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$6 }
	*($5) = $0
	*($6) = $11
	return 
	
.LABEL $label$34
	*($5) = $11
	*(($0 = ($5 + [1]))) = $6
	$11 = *($3)
	if ( ((int_32)$11 >= (int_32)$6) ){ goto $label$6 }
	*($0) = $11
	*($3) = $6
	return 
	
.LABEL $label$7
	$6 = *($12)
	$8 = *($5)
	if ( ((int_32)$8 < (int_32)$6) ){ goto $label$37 }
	$0 = $4
	
.LOOP $label$40:
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$39 }
	$11 = *($0)
	$7 = ($0 + [-1])
	$0 = $7
	if ( ((int_32)$11 >= (int_32)$6) ){ goto $label$40 }
	goto $label$38 
	
.LABEL $label$39
	$12 = ($5 + [1])
	$6 = *($3)
	if ( ((int_32)$8 < (int_32)$6) ){ goto $label$41 }
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$6 }
	$12 = ($5 + [2])
	
.LOOP $label$43:
	$0 = ($12 + [-1])
	$11 = *($0)
	if ( ((int_32)$8 < (int_32)$11) ){ goto $label$42 }
	$12 = ($12 + [1])
	if ( ((int_32)$1 != (int_32)$12) ){ goto $label$43 }
	goto $label$6 
	
.LABEL $label$42
	*($0) = $6
	*($3) = $11
	
.LABEL $label$41
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$6 }
	$11 = $3
	
.LOOP $label$44:
	$0 = ($12 + [-1])
	$6 = *($5)
	
.LOOP $label$45:
	$0 = ($0 + [1])
	$7 = *($0)
	if ( ((int_32)$6 >= (int_32)$7) ){ goto $label$45 }
	$12 = ($0 + [1])
	
.LOOP $label$46:
	$11 = ($11 + [-1])
	$8 = *($11)
	if ( ((int_32)$6 < (int_32)$8) ){ goto $label$46 }
	if ( ((uint_32)$0 >= (uint_32)$11) ){ goto $label$5 }
	*($0) = $8
	*($11) = $7
	goto $label$44 
	
.LABEL $label$38
	*($5) = $11
	*(($11 = ($7 + [1]))) = $8
	$10 = ($10 + [1])
	goto $label$36 
	
.LABEL $label$37
	$11 = $3
	
.LABEL $label$36
	$9 = ($5 + [1])
	if ( ((uint_32)$9 >= (uint_32)$11) ){ goto $label$47 }
	
.LOOP $label$48:
	$0 = ($9 + [-1])
	$6 = *($12)
	
.LOOP $label$49:
	$0 = ($0 + [1])
	$7 = *($0)
	if ( ((int_32)$7 < (int_32)$6) ){ goto $label$49 }
	$9 = ($0 + [1])
	
.LOOP $label$50:
	$11 = ($11 + [-1])
	$8 = *($11)
	if ( ((int_32)$8 >= (int_32)$6) ){ goto $label$50 }
	if ( ((uint_32)$0 > (uint_32)$11) ){ goto $label$51 }
	*($0) = $8
	*($11) = $7
	$12 = ( $11 ? $12 : ((int_32)$12 == (int_32)$0) )
	$10 = ($10 + [1])
	goto $label$48 
	
.LABEL $label$51
	$9 = $0
	
.LABEL $label$47
	if ( ((int_32)$9 == (int_32)$12) ){ goto $label$52 }
	$11 = *($9)
	$0 = *($12)
	if ( ((int_32)$0 >= (int_32)$11) ){ goto $label$52 }
	*($9) = $0
	*($12) = $11
	$10 = ($10 + [1])
	
.LABEL $label$52
	if ( $10 ){ goto $label$54 }
	$11 = CALL $279($5, $9, $2)
	$0 = ($9 + [1])
	if ( CALL $279($0, $1, $2) ){ goto $label$53 }
	if ( $11 ){ goto $label$2 }
	
.LABEL $label$54
	if ( ((int_32)($9 - $5) >= (int_32)($1 - $9)) ){ goto $label$3 }
	CALL $277($5, $9, $2)
	$0 = ($9 + [1])
	goto $label$2 
	
.LABEL $label$53
	$1 = $9
	$0 = $5
	if ( ($11 == 0) ){ goto $label$1 }
	
.LABEL $label$6
	return 
	
.LABEL $label$5
	$5 = $0
	goto $label$4 
	
.LABEL $label$3
	CALL $277(($9 + [1]), $1, $2)
	$1 = $9
	$0 = $5
	goto $label$1 
	$0
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [12608])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [12416]
	$1 = (((int_32)$2 * (int_32)[12]) + [12416])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_32 .FUNC $275 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [12710]) == 0) ){ goto $label$2 }
	$7 = *([0] + [12712])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [12710]) = [1]
	$7 = ($7 << [16])
	*([0] + [12712]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [12712])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [12712]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [12710]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [12710]) = [1]
	$3 = ($3 << [16])
	*([0] + [12712]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [12712])
	
.LABEL $label$8
	*([0] + [12712]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

int_32 .FUNC $274 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $275($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [12624])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [64])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [1024])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($8 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($7 + [20]) = $4
	*($7 + [16]) = $4
	*($7 + [24]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($5 = CALL $280([64])) + [8]) = (int_64)50
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)10000
	*($5 + [24]) = (int_64)1
	*($5 + [32]) = (int_64)1
	*($5 + [40]) = (int_64)4
	*($5 + [48]) = $0
	*($7 + [32]) = ($7 + [16])
	*($7 + [44]) = ($5 + [8])
	*($7 + [40]) = $5
	*($7 + [48]) = ($5 + [16])
	*($7 + [52]) = ($5 + [24])
	*($7 + [56]) = ($5 + [32])
	*($7 + [60]) = ($5 + [40])
	CALL $52(($7 + [40]), ($7 + [32]))
	*($5 + [52]) = $1
	*($7 + [32]) = $5
	*($7 + [40]) = (int_64)4982871462359400448
	$6 = *($5 + [52])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = (int_64)4982871462359400448
	*($4 + [16]) = $6
	*($7 + [32]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $53(($0 + [24]), ($7 + [32]), ($7 + [40]), ($7 + [12]))
	
.LABEL $label$8
	$4 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $282($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [64])
	return $5
}

void .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [848])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [896])
	$6 = ($0 + [28])
	$5 = *($6)
	CALL eosio_assert(((int_32)$5 != (int_32)*($0 + [24])), [960])
	$4 = ($5 + [-24])
	$6 = *($6)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	$2 = ([0] - $6)
	
.LOOP $label$4:
	$6 = ($4 + [24])
	$3 = *($6)
	*($6) = [0]
	$5 = *($4)
	*($4) = $3
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $282($5)
	
.LABEL $label$5
	*(($4 + [16])) = *(($4 + [40]))
	*(($4 + [8])) = *(($4 + [32]))
	$4 = $6
	if ( ((int_32)($6 + $2) != (int_32)[-24]) ){ goto $label$4 }
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$6 = $4
	
.LABEL $label$2
	
.LOOP $label$6:
	$5 = ($5 + [-24])
	$4 = *($5)
	*($5) = [0]
	if ( ($4 == 0) ){ goto $label$7 }
	CALL $282($4)
	
.LABEL $label$7
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$6 }
	
.LABEL $label$1
	*(($0 + [28])) = $6
	CALL db_remove_i64(*($1 + [52]))
}

int_32 .FUNC $279 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($1 - $0)
	if ( ((uint_32)$4 > (uint_32)[5]) ){ goto $label$19 }
	$8 = [1]
	goto $label$1 
	
.LABEL $label$20
	$3 = *($0)
	$4 = ($1 + [-1])
	$2 = *($4)
	if ( ((int_32)$2 >= (int_32)$3) ){ goto $label$1 }
	*($0) = $2
	*($4) = $3
	goto $label$1 
	
.LABEL $label$19
	$8 = *($0 + [2])
	$2 = *($0)
	$4 = *($0 + [1])
	if ( ((int_32)$4 >= (int_32)$2) ){ goto $label$15 }
	if ( ((int_32)$8 >= (int_32)$4) ){ goto $label$12 }
	*($0) = $8
	*(($0 + [2])) = $2
	goto $label$11 
	
.LABEL $label$18
	$3 = ($1 + [-1])
	$4 = *($3)
	$6 = *($0)
	$2 = *($0 + [1])
	if ( ((int_32)$2 >= (int_32)$6) ){ goto $label$14 }
	if ( ((int_32)$4 >= (int_32)$2) ){ goto $label$4 }
	*($0) = $4
	*($3) = $6
	goto $label$1 
	
.LABEL $label$17
	$8 = [1]
	CALL $278($0, ($0 + [1]), ($0 + [2]), ($0 + [3]), ($1 + [-1]), $2)
	goto $label$1 
	
.LABEL $label$16
	$6 = ($1 + [-1])
	$2 = *($0 + [2])
	$3 = *($0)
	$4 = *($0 + [1])
	if ( ((int_32)$4 >= (int_32)$3) ){ goto $label$13 }
	if ( ((int_32)$2 >= (int_32)$4) ){ goto $label$8 }
	*($0) = $2
	*(($0 + [2])) = $3
	goto $label$7 
	
.LABEL $label$15
	if ( ((int_32)$8 >= (int_32)$4) ){ goto $label$10 }
	*(($0 + [2])) = $4
	*(($3 = ($0 + [1]))) = $8
	if ( ((int_32)$8 >= (int_32)$2) ){ goto $label$9 }
	*($0) = $8
	*($3) = $2
	goto $label$9 
	
.LABEL $label$14
	if ( ((int_32)$4 >= (int_32)$2) ){ goto $label$1 }
	$8 = [1]
	*(($6 = ($0 + [1]))) = $4
	*($3) = $2
	$2 = *($0)
	$4 = *($6)
	if ( ((int_32)$4 >= (int_32)$2) ){ goto $label$1 }
	*($0) = $4
	$8 = [1]
	*(($0 + [1])) = $2
	goto $label$1 
	
.LABEL $label$13
	if ( ((int_32)$2 >= (int_32)$4) ){ goto $label$6 }
	*(($0 + [2])) = $4
	*(($5 = ($0 + [1]))) = $2
	if ( ((int_32)$2 >= (int_32)$3) ){ goto $label$5 }
	*($0) = $2
	*($5) = $3
	goto $label$5 
	
.LABEL $label$12
	*($0) = $4
	*(($4 = ($0 + [1]))) = $2
	if ( ((int_32)$8 >= (int_32)$2) ){ goto $label$10 }
	*(($0 + [2])) = $2
	*($4) = $8
	
.LABEL $label$11
	$4 = $2
	goto $label$9 
	
.LABEL $label$10
	$4 = $8
	
.LABEL $label$9
	$6 = ($0 + [3])
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$3 }
	$5 = [0]
	$7 = [0]
	
.LOOP $label$22:
	$3 = *($6)
	if ( ((int_32)$3 >= (int_32)int_32(($4 << [24]) >> [24])) ){ goto $label$23 }
	$8 = $5
	
.LOOP $label$27:
	*((($2 = ($0 + $8)) + [3])) = $4
	if ( ((int_32)$8 == (int_32)[-2]) ){ goto $label$26 }
	$8 = ($8 + [-1])
	$4 = *(($2 + [1]))
	if ( ((int_32)$3 < (int_32)$4) ){ goto $label$27 }
	goto $label$25 
	
.LABEL $label$26
	$8 = $0
	goto $label$24 
	
.LABEL $label$25
	$8 = (($0 + $8) + [3])
	
.LABEL $label$24
	*($8) = $3
	$7 = ($7 + [1])
	if ( ((int_32)$7 == (int_32)[8]) ){ goto $label$21 }
	
.LABEL $label$23
	$4 = [1]
	$8 = ($6 + [1])
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [1])
	$4 = *($6)
	$6 = $8
	goto $label$22 
	
.LABEL $label$21
	$8 = (((int_32)($6 + [1]) == (int_32)$1) | [0])
	goto $label$1 
	
.LABEL $label$8
	*($0) = $4
	*(($4 = ($0 + [1]))) = $3
	if ( ((int_32)$2 >= (int_32)$3) ){ goto $label$6 }
	*(($0 + [2])) = $3
	*($4) = $2
	
.LABEL $label$7
	$4 = $3
	goto $label$5 
	
.LABEL $label$6
	$4 = $2
	
.LABEL $label$5
	$2 = *($6)
	if ( ((int_32)$2 >= (int_32)$4) ){ goto $label$1 }
	*(($3 = ($0 + [2]))) = $2
	*($6) = $4
	$8 = [1]
	$2 = *(($0 + [1]))
	$4 = *($3)
	if ( ((int_32)$4 >= (int_32)$2) ){ goto $label$1 }
	*($3) = $2
	$8 = [1]
	*(($0 + [1])) = $4
	$2 = *($0)
	if ( ((int_32)$4 >= (int_32)$2) ){ goto $label$1 }
	*($0) = $4
	$8 = [1]
	*(($0 + [1])) = $2
	goto $label$1 
	
.LABEL $label$4
	*($0) = $2
	$8 = [1]
	*(($0 + [1])) = $6
	$4 = *($3)
	if ( ((int_32)$4 >= (int_32)$6) ){ goto $label$1 }
	$8 = [1]
	*(($0 + [1])) = $4
	*($3) = $6
	goto $label$1 
	
.LABEL $label$3
	$4 = [1]
	
.LABEL $label$2
	$8 = ($2 | $4)
	
.LABEL $label$1
	$4
	return ($8 & [1])
}

void .FUNC $53 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $280(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $298($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $282($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $282($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN6NiuNiu5_bindEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [80])
	*([0] + [4]) = $8
	*(($8 + [40])) = [0]
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	$3 = *($0)
	*($8 + [8]) = $3
	*($8 + [16]) = $3
	$5 = CALL db_find_i64($3, $3, (int_64)4298289253286150144, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*(CALL $55(($8 + [8]), $5) + [16]) == (int_32)($8 + [8])), [1104])
	$4 = *($8 + [32])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_64)$1 == (int_64)$2) ){ goto $label$4 }
	$6 = *($0)
	CALL eosio_assert(((int_64)$3 == (int_64)CALL $fimport$13()), [1232])
	*(($0 = CALL $280([32])) + [16]) = ($8 + [8])
	*($0 + [8]) = $2
	*($0) = $1
	CALL eosio_assert([1], [1296])
	CALL memcpy(($8 + [64]), $0, [8])
	CALL eosio_assert([1], [1296])
	CALL memcpy((($8 + [64]) | [8]), ($0 + [8]), [8])
	$3 = *($0)
	$4 = CALL db_store_i64(*((($8 + [8]) + [8])), (int_64)4298289253286150144, $6, $3, ($8 + [64]), [16])
	*($0 + [20]) = $4
	$5 = (($8 + [8]) + [16])
	if ( (uint_64)($3 <= *($5)) ){ goto $label$5 }
	*($5) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($8 + [56]) = $0
	$3 = *($0)
	*($8 + [64]) = $3
	*($8 + [52]) = $4
	$7 = ($8 + [36])
	$5 = *($7)
	if ( ((uint_32)$5 >= (uint_32)*((($8 + [8]) + [32]))) ){ goto $label$7 }
	*($5 + [8]) = $3
	*($5 + [16]) = $4
	*($8 + [56]) = [0]
	*($5) = $0
	*($7) = ($5 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $56(($8 + [32]), ($8 + [56]), ($8 + [64]), ($8 + [52]))
	
.LABEL $label$6
	$0 = *($8 + [56])
	*($8 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$4 }
	CALL $282($0)
	
.LABEL $label$4
	$4 = *($8 + [32])
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($8 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$11 }
	CALL $282($5)
	
.LABEL $label$11
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($8 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $4
	
.LABEL $label$8
	*($7) = $4
	CALL $282($0)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [80])
}

int_32 .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [1024])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $280([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [1056])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [1056])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $56(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $282($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $56 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $280(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $298($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $282($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $282($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN6NiuNiu16_clearglobalinfoEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	$1 = ($0 + [48])
	$2 = *(($0 + [76]))
	if ( ((int_32)$2 == (int_32)*(($0 + [72]))) ){ goto $label$3 }
	$2 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [40]) == (int_32)$1), [1104])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$2 = CALL db_find_i64(*($1), *(($0 + [56])), (int_64)7235159545106726912, (int_64)7235159545106726912)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*(CALL $58($1, $2) + [40]) == (int_32)$1), [1104])
	
.LABEL $label$2
	$2 = *(($0 + [76]))
	if ( ((int_32)$2 == (int_32)*(($0 + [72]))) ){ goto $label$5 }
	$0 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($0 + [40]) == (int_32)$1), [1104])
	if ( $0 ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$5
	$0 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)7235159545106726912, (int_64)7235159545106726912)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $58($1, $0)
	CALL eosio_assert(((int_32)*($0 + [40]) == (int_32)$1), [1104])
	
.LABEL $label$4
	CALL eosio_assert([1], [768])
	CALL eosio_assert([1], [816])
	$2 = CALL db_next_i64(*($0 + [44]), ($3 + [8]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$6 }
	CALL $58($1, $2)
	
.LABEL $label$6
	CALL $59($1, $0)
	
.LABEL $label$1
	*([0] + [4]) = ($3 + [16])
}

void .FUNC $152 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [4])
	$3 = *($1)
	CALL $153($3, $2)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($3 + [4]), ($2 + [16]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [8])
	$3 = *($1)
	CALL $153($3, $2)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($3 + [4]), ($2 + [16]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [12])
	$3 = *($1)
	CALL $153($3, $2)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($3 + [4]), ($2 + [16]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [16])
	$3 = *($1)
	CALL $153($3, $2)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($3 + [4]), ($2 + [16]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0 + [20])
	$1 = *($1)
	CALL $153($1, $0)
	CALL eosio_assert(((int_32)(*($1 + [8]) - *($1 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($1 + [4]), ($0 + [16]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
}

int_32 .FUNC $153 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$6 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [3]))
	$7 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$3 = ((int_64)$6) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $7) > (int_32)[0]), [1296])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$7 = (*($5) + [1])
	*($5) = $7
	if ( $3 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$2 }
	$2 = ($0 + [4])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $7) > (int_32)[7]), [1296])
	CALL memcpy(*($2), $5, [8])
	$7 = (*($2) + [8])
	*($2) = $7
	$5 = ($5 + [8])
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $150 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [48])
	$11 = $12
	*([0] + [4]) = $12
	$3 = *($0 + [4])
	*($1) = *(*($3))
	$2 = *($0)
	$9 = *($3 + [4])
	$4 = ($1 + [8])
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$1 }
	CALL $149($4, *($9), *($9 + [4]))
	
.LABEL $label$1
	*(($1 + [24])) = *($9 + [16])
	$9 = *($3 + [8])
	$5 = ($1 + [32])
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$2 }
	CALL $149($5, *($9), *($9 + [4]))
	
.LABEL $label$2
	*(($1 + [48])) = *($9 + [16])
	$9 = *($3 + [12])
	$6 = ($1 + [56])
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$3 }
	CALL $149($6, *($9), *($9 + [4]))
	
.LABEL $label$3
	*(($1 + [72])) = *($9 + [16])
	$9 = *($3 + [16])
	$7 = ($1 + [80])
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$4 }
	CALL $149($7, *($9), *($9 + [4]))
	
.LABEL $label$4
	*(($1 + [96])) = *($9 + [16])
	$3 = *($3 + [20])
	$8 = ($1 + [104])
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$5 }
	CALL $149($8, *($3), *($3 + [4]))
	
.LABEL $label$5
	*(($1 + [120])) = *($3 + [16])
	*($11 + [16]) = [0]
	*($11) = ($11 + [16])
	*($11 + [28]) = $4
	*($11 + [24]) = $1
	*($11 + [32]) = $5
	*($11 + [36]) = $6
	*($11 + [40]) = $7
	*($11 + [44]) = $8
	CALL $151(($11 + [24]), $11)
	$9 = *($11 + [16])
	if ( ($9 <= [513]) ){ goto $label$7 }
	$3 = CALL malloc($9)
	goto $label$6 
	
.LABEL $label$7
	$3 = ($12 - (($9 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$6
	*($11 + [4]) = $3
	*($11) = $3
	*($11 + [8]) = ($3 + $9)
	*($11 + [16]) = $11
	*($11 + [28]) = $4
	*($11 + [24]) = $1
	*($11 + [32]) = $5
	*($11 + [36]) = $6
	*($11 + [40]) = $7
	*($11 + [44]) = $8
	CALL $152(($11 + [24]), ($11 + [16]))
	$10 = *($1)
	*($1 + [132]) = CALL db_store_i64(*($2 + [8]), (int_64)7035931840378960896, *(*($0 + [8])), $10, $3, $9)
	if ( ($9 <= [513]) ){ goto $label$8 }
	CALL free($3)
	
.LABEL $label$8
	if ( (uint_64)($10 <= *($2 + [16])) ){ goto $label$9 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = ($11 + [48])
}

void .FUNC $151 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	*(($6 = *($1))) = (*($6) + [8])
	$4 = *($6)
	$6 = *($0 + [4])
	$3 = *($6 + [4])
	$5 = ($3 - $4)
	$7 = (CASTING uint_64)(uint_32 int_32($5 >> [3]))
	$2 = *($1)
	$6 = *($2)
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	$6 = (($5 & [-8]) + $6)
	
.LABEL $label$2
	*($2) = ($6 + [8])
	$4 = *($6)
	$6 = *($0 + [8])
	$3 = *($6 + [4])
	$5 = ($3 - $4)
	$7 = (CASTING uint_64)(uint_32 int_32($5 >> [3]))
	$2 = *($1)
	$6 = *($2)
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$4 }
	$6 = (($5 & [-8]) + $6)
	
.LABEL $label$4
	*($2) = ($6 + [8])
	$4 = *($6)
	$6 = *($0 + [12])
	$3 = *($6 + [4])
	$5 = ($3 - $4)
	$7 = (CASTING uint_64)(uint_32 int_32($5 >> [3]))
	$2 = *($1)
	$6 = *($2)
	
.LOOP $label$5:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$6 }
	$6 = (($5 & [-8]) + $6)
	
.LABEL $label$6
	*($2) = ($6 + [8])
	$4 = *($6)
	$6 = *($0 + [16])
	$3 = *($6 + [4])
	$5 = ($3 - $4)
	$7 = (CASTING uint_64)(uint_32 int_32($5 >> [3]))
	$2 = *($1)
	$6 = *($2)
	
.LOOP $label$7:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$8 }
	$6 = (($5 & [-8]) + $6)
	
.LABEL $label$8
	*($2) = ($6 + [8])
	$3 = *($6)
	$6 = *($0 + [20])
	$0 = *($6 + [4])
	$4 = ($0 - $3)
	$7 = (CASTING uint_64)(uint_32 int_32($4 >> [3]))
	$1 = *($1)
	$6 = *($1)
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$9 }
	if ( ((int_32)$3 == (int_32)$0) ){ goto $label$10 }
	$6 = (($4 & [-8]) + $6)
	
.LABEL $label$10
	*($1) = ($6 + [8])
}

void .FUNC $156 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $280(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $298($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $282($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $282($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $157 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [1024])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $280([40])) + [16]) = (int_64)0
	*($6 + [8]) = (int_64)0
	*($6 + [24]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [1056])
	CALL memcpy($6, $7, [8])
	$4 = ($4 & [-8])
	CALL eosio_assert(((int_32)$4 != (int_32)[8]), [1056])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	CALL eosio_assert(((int_32)$4 != (int_32)[16]), [1056])
	CALL memcpy(($6 + [16]), ($7 + [16]), [8])
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $130(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $282($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $154 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1296])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1296])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1296])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1296])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$2 = *($0 + [24])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [1296])
	CALL memcpy(*($0 + [4]), $2, [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
}

int_32 .FUNC $155 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [1024])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $280([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [1056])
	CALL memcpy($6, $7, [8])
	$4 = ($4 & [-8])
	CALL eosio_assert(((int_32)$4 != (int_32)[8]), [1056])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	CALL eosio_assert(((int_32)$4 != (int_32)[16]), [1056])
	CALL memcpy(($6 + [16]), ($7 + [16]), [8])
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $156(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $282($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $158 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [848])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [896])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [960])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $282($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $282($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
}

void .FUNC $159 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$7 = ((int_32)(*($0 + [4]) - $8) / (int_32)[52])
	$6 = ($7 + [1])
	if ( ((uint_32)$6 >= (uint_32)[82595525]) ){ goto $label$2 }
	$5 = [82595524]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[52])
	if ( ((uint_32)$8 > (uint_32)[41297761]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$5 = ( $6 ? $8 : ($8 <= $6) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $280(((int_32)$5 * (int_32)[52]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $298($0)
	
.LABEL $label$1
	*(($8 = ($6 + ((int_32)$7 * (int_32)[52])))) = *($1)
	*($8 + [4]) = *($1 + [4])
	*(($8 + [28])) = *(($1 + [28]))
	*(($8 + [24])) = *(($1 + [24]))
	*(($8 + [20])) = *(($1 + [20]))
	*(($8 + [16])) = *(($1 + [16]))
	*(($8 + [12])) = *(($1 + [12]))
	*(($8 + [8])) = *(($1 + [8]))
	$7 = ($1 + [32])
	*(($8 + [32])) = *($7)
	$2 = ($1 + [36])
	*(($8 + [36])) = *($2)
	$3 = ($1 + [40])
	$4 = *($3)
	*($3) = [0]
	*(($8 + [40])) = $4
	*($2) = [0]
	*($7) = [0]
	*(($8 + [44])) = *(($1 + [44]))
	$3 = ($6 + ((int_32)$5 * (int_32)[52]))
	$4 = ($8 + [52])
	$1 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$6 }
	$2 = ([0] - $1)
	$1 = ($5 + [-20])
	
.LOOP $label$7:
	*(($8 + [-52])) = *(($1 + [-32]))
	*(($8 + [-24])) = *(($1 + [-4]))
	*(($8 + [-28])) = *(($1 + [-8]))
	*(($8 + [-32])) = *(($1 + [-12]))
	*(($8 + [-36])) = *(($1 + [-16]))
	*(($8 + [-40])) = *(($1 + [-20]))
	*(($8 + [-44])) = *(($1 + [-24]))
	*(($8 + [-48])) = *(($1 + [-28]))
	*(($5 = ($8 + [-20]))) = [0]
	*(($6 = ($8 + [-16]))) = [0]
	*(($7 = ($8 + [-12]))) = [0]
	*($5) = *($1)
	*($6) = *(($1 + [4]))
	$5 = ($1 + [8])
	*($7) = *($5)
	*($5) = [0]
	*($1) = (int_64)0
	*(($8 + [-8])) = *(($1 + [12]))
	$8 = ($8 + [-52])
	$1 = ($1 + [-52])
	if ( ((int_32)($1 + $2) != (int_32)[-20]) ){ goto $label$7 }
	$1 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $1
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $4
	*(($0 + [8])) = $3
	if ( ((int_32)$1 == (int_32)$6) ){ goto $label$8 }
	$5 = ([0] - $6)
	$1 = ($1 + [-20])
	
.LOOP $label$9:
	$8 = *($1)
	if ( ($8 == 0) ){ goto $label$10 }
	*(($1 + [4])) = $8
	CALL $282($8)
	
.LABEL $label$10
	$1 = ($1 + [-52])
	if ( ((int_32)($1 + $5) != (int_32)[-20]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $282($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $274([4224], $0)
}

void .FUNC _ZN6NiuNiu9_settimerENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEm (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [112])
	*([0] + [4]) = $13
	$12 = CALL current_time()
	*(($13 + [60])) = [0]
	*(($13 + [64])) = [0]
	*($13 + [44]) = [0]
	*($13 + [48]) = [0]
	*($13 + [52]) = [0]
	*($13 + [56]) = [0]
	*($13 + [32]) = ((CASTING uint_32)(uint_64 ((uint_64)$12 / (uint_64)(int_64)1000000)) + [60])
	*($13 + [68]) = [0]
	*(($13 + [72])) = [0]
	*(($13 + [76])) = [0]
	*($13 + [80]) = [0]
	*(($13 + [84])) = [0]
	*(($13 + [88])) = [0]
	$4 = ($13 + [68])
	$3 = *($0)
	$12 = (int_64)0
	$7 = (int_64)59
	$11 = [1424]
	$8 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$6 }
	$10 = *($11)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$10 = ($10 + [165])
	goto $label$4 
	
.LABEL $label$6
	$9 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$11 = ($11 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	*($13 + [24]) = $8
	*($13 + [16]) = $3
	if ( (*($1) & [1]) ){ goto $label$8 }
	$11 = ($1 + [1])
	goto $label$7 
	
.LABEL $label$8
	$11 = *($1 + [8])
	
.LABEL $label$7
	$10 = [-1]
	
.LOOP $label$9:
	$1 = ($11 + $10)
	$5 = ($10 + [1])
	$10 = $5
	if ( *(($1 + [1])) ){ goto $label$9 }
	$6 = (CASTING uint_64)(uint_32 $5)
	$12 = (int_64)0
	$9 = (int_64)59
	$8 = (int_64)0
	
.LOOP $label$10:
	$7 = (int_64)0
	if ( ((uint_64)$12 >= (uint_64)$6) ){ goto $label$11 }
	$10 = *($11)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$10 = ($10 + [165])
	goto $label$12 
	
.LABEL $label$13
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$11
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$15 }
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	goto $label$14 
	
.LABEL $label$15
	$7 = ((int_64)$7 & (int_64)15)
	
.LABEL $label$14
	$11 = ($11 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$8 = ((int_64)$7 | (int_64)$8)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$10 }
	*($13 + [96]) = $8
	*($13 + [8]) = $3
	CALL $271($4, ($13 + [16]), $0, ($13 + [96]), ($13 + [8]))
	*(($13 + [52])) = $2
	$6 = CALL _ZN6NiuNiu13_getglobalcntEv($0)
	*($13 + [16]) = $6
	$12 = (int_64)0
	$7 = (int_64)59
	$11 = [1456]
	$8 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$12 > (uint_64)(int_64)9) ){ goto $label$21 }
	$10 = *($11)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$10 = ($10 + [165])
	goto $label$19 
	
.LABEL $label$21
	$9 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$17
	$11 = ($11 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$16 }
	*($13 + [16]) = ((int_64)( $8 ? (int_64)1 : (int_64)($6 == 0) ) + (int_64)$6)
	CALL $73(($0 + [88]), ($13 + [16]), *($0))
	$12 = *($13 + [16])
	*($13 + [24]) = (int_64)0
	*($13 + [16]) = $12
	$12 = *($0)
	CALL $74(($13 + [96]), ($13 + [32]))
	$11 = *($13 + [96])
	CALL send_deferred(($13 + [16]), $12, $11, (*($13 + [100]) - $11), [0])
	$11 = *($13 + [96])
	if ( ($11 == 0) ){ goto $label$22 }
	*($13 + [100]) = $11
	CALL $282($11)
	
.LABEL $label$22
	CALL $75(($13 + [32]))
	*([0] + [4]) = ($13 + [112])
}

void .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$6 = CALL $280([16])
	*($0 + [8]) = $6
	*($0) = (int_64)55834574865
	CALL memset($6, [46], [13])
	*($6 + [13]) = [0]
	$2 = ($0 + [1])
	$8 = *($1)
	$7 = [17]
	$5 = ($0 + [8])
	$6 = [12]
	
.LOOP $label$1:
	$4 = ((int_32)$6 == (int_32)[12])
	$3 = *((*([0] + [1776]) + (CASTING uint_32)(uint_64 ((int_64)( (int_64)15 ? (int_64)31 : $4 ) & (int_64)$8))))
	$1 = $2
	if ( (($7 & [1]) == 0) ){ goto $label$2 }
	$1 = *($5)
	
.LABEL $label$2
	*(($1 + $6)) = $3
	if ( ($6 == 0) ){ goto $label$3 }
	$6 = ($6 + [-1])
	$8 = (uint_64)$8 >> (uint_64)( (int_64)4 ? (int_64)5 : $4 ))
	$7 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$1 = ($6 & [1])
	$6 = *($0)
	$6 = ( *(($0 + [4])) ? uint_32($6 >> [1]) : $1 )
	$7 = ( *(($0 + [8])) ? $2 : $1 )
	
.LOOP $label$5:
	if ( ($6 == 0) ){ goto $label$4 }
	$1 = ($7 + $6)
	$3 = ($6 + [-1])
	$6 = $3
	if ( ((int_32)*(($1 + [-1])) == (int_32)[46]) ){ goto $label$5 }
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	CALL $301($9, $0, [0], ($3 + [1]), $0)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = [0]
	goto $label$6 
	
.LABEL $label$7
	*(*(($0 + [8]))) = [0]
	*(($0 + [4])) = [0]
	
.LABEL $label$6
	CALL $287($0, [0])
	*(($0 + [8])) = *(($9 + [8]))
	*($0) = *($9)
	
.LABEL $label$4
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $228 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [144])
	*([0] + [4]) = $12
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [1456]
	$8 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$7 > (uint_64)(int_64)9) ){ goto $label$6 }
	$3 = *($5)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$2
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$1 }
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [1456]
	$10 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$7 > (uint_64)(int_64)9) ){ goto $label$12 }
	$3 = *($5)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$3 = ($3 + [165])
	goto $label$10 
	
.LABEL $label$12
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$8
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$10 = ((int_64)$9 | (int_64)$10)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$7 }
	$11 = [0]
	*(($12 + [128])) = [0]
	*($12 + [104]) = $10
	*($12 + [96]) = $8
	*($12 + [112]) = (int_64)-1
	*($12 + [120]) = (int_64)0
	*($12 + [132]) = [0]
	*($12 + [88]) = ($12 + [96])
	*($12) = $1
	CALL $106(($12 + [32]), $12)
	$5 = *($2)
	$3 = ($5 & [1])
	$5 = CALL $289(($12 + [32]), ( *($2 + [8]) ? ($2 + [1]) : $3 ), ( *($2 + [4]) ? uint_32($5 >> [1]) : $3 ))
	$3 = ($5 + [8])
	*((($12 + [72]) + [8])) = *($3)
	*($12 + [72]) = *($5)
	*($5) = [0]
	*(($5 + [4])) = [0]
	*($3) = [0]
	if ( ((*($12 + [32]) & [1]) == 0) ){ goto $label$13 }
	CALL $282(*($12 + [40]))
	
.LABEL $label$13
	$5 = *($12 + [72])
	$3 = ($5 & [1])
	CALL sha256(( *($12 + [80]) ? (($12 + [72]) | [1]) : $3 ), ( *($12 + [76]) ? uint_32($5 >> [1]) : $3 ), ($12 + [32]))
	$7 = *($12 + [56])
	$9 = *($12 + [48])
	$6 = *($12 + [40])
	$8 = *($12 + [32])
	CALL eosio_assert([1], [3840])
	*($12 + [8]) = $8
	*($12) = $6
	CALL eosio_assert([1], [3840])
	*(($12 + [24])) = $9
	*($12 + [16]) = $7
	CALL $229(($12 + [136]), ($12 + [88]), $12)
	$5 = *($12 + [140])
	if ( ($5 == 0) ){ goto $label$14 }
	$6 = *(($5 + [40]))
	$8 = *(($5 + [32]))
	$7 = *(($5 + [24]))
	$9 = *($5 + [16])
	CALL eosio_assert([1], [3840])
	CALL eosio_assert([1], [3840])
	if ( ((int_64)((int_64)((int_64)$7 ^ (int_64)*($12)) | (int_64)((int_64)$9 ^ (int_64)*($12 + [8]))) != (int_64)0) ){ goto $label$14 }
	if ( ((int_64)((int_64)((int_64)*(($12 + [16])) ^ (int_64)$6) | (int_64)((int_64)*(($12 + [24])) ^ (int_64)$8)) != (int_64)0) ){ goto $label$14 }
	$11 = ((int_32)*($12 + [140]) != (int_32)[0])
	
.LABEL $label$14
	if ( ((*($12 + [72]) & [1]) == 0) ){ goto $label$15 }
	CALL $282(*(($12 + [80])))
	
.LABEL $label$15
	$2 = *($12 + [120])
	if ( ($2 == 0) ){ goto $label$16 }
	$4 = ($12 + [124])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$18 }
	
.LOOP $label$19:
	$5 = ($5 + [-24])
	$3 = *($5)
	*($5) = [0]
	if ( ($3 == 0) ){ goto $label$20 }
	CALL $282($3)
	
.LABEL $label$20
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$19 }
	$5 = *(($12 + [120]))
	goto $label$17 
	
.LABEL $label$18
	$5 = $2
	
.LABEL $label$17
	*($4) = $2
	CALL $282($5)
	
.LABEL $label$16
	*([0] + [4]) = ($12 + [144])
	return $11
}

void .FUNC $229 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [48])
	*([0] + [4]) = $10
	*($10 + [40]) = (int_64)0
	*(($10 + [24])) = *(($2 + [24]))
	*(($10 + [16])) = *(($2 + [16]))
	*($10 + [8]) = *(($2 + [8]))
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx256_lowerbound(*($8), *($8 + [8]), (int_64)6301285363369377792, $10, [2], ($10 + [40]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [40])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [48]) == (int_32)$4), [1104])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $230($4, CALL $fimport$16(*($4), *($4 + [8]), (int_64)6301285363369377792, $5))
	CALL eosio_assert(((int_32)*($2 + [48]) == (int_32)$4), [1104])
	
.LABEL $label$4
	*(($2 + [56])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [48])
}

void .FUNC $89 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$13()), [1232])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $280([112])
	CALL $90($3)
	*($3 + [96]) = $1
	CALL $91(($7 + [16]), $3)
	*($7 + [32]) = $3
	*($7 + [16]) = (int_64)7035929282832498688
	$4 = *($3 + [100])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = (int_64)7035929282832498688
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $92(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	if ( ((*($1 + [40]) & [1]) == 0) ){ goto $label$4 }
	CALL $282(*(($1 + [48])))
	
.LABEL $label$4
	if ( ((*($1 + [28]) & [1]) == 0) ){ goto $label$5 }
	CALL $282(*(($1 + [36])))
	
.LABEL $label$5
	CALL $282($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $88 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$17 = (*([0] + [4]) - [80])
	*([0] + [4]) = $17
	CALL eosio_assert(((int_32)*($1 + [96]) == (int_32)$0), [1520])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [1568])
	$3 = *($3)
	*($1) = *($3)
	*(($11 = ($1 + [24]))) = *(($3 + [24]))
	*(($9 = ($1 + [16]))) = *(($3 + [16]))
	*(($7 = ($1 + [8]))) = *(($3 + [8]))
	$5 = ($1 + [28])
	CALL $285($5, ($3 + [28]))
	$6 = ($1 + [40])
	CALL $285($6, ($3 + [40]))
	$4 = CALL memcpy(($1 + [56]), ($3 + [56]), [40])
	CALL eosio_assert([1], [1632])
	*(($3 = $17) + [16]) = [0]
	*($3) = ($3 + [16])
	*($3 + [28]) = $7
	*($3 + [24]) = $1
	$8 = ($1 + [12])
	*($3 + [32]) = $8
	*($3 + [36]) = $9
	$10 = ($1 + [20])
	*($3 + [40]) = $10
	*($3 + [44]) = $11
	*($3 + [48]) = $5
	*($3 + [52]) = $6
	*($3 + [56]) = $4
	$12 = ($1 + [64])
	*($3 + [60]) = $12
	$13 = ($1 + [72])
	*($3 + [64]) = $13
	$14 = ($1 + [80])
	*($3 + [68]) = $14
	$15 = ($1 + [88])
	*($3 + [72]) = $15
	CALL $93(($3 + [24]), $3)
	$16 = *($3 + [16])
	if ( ($16 <= [513]) ){ goto $label$2 }
	$17 = CALL malloc($16)
	goto $label$1 
	
.LABEL $label$2
	$17 = ($17 - (($16 + [15]) & [-16]))
	*([0] + [4]) = $17
	
.LABEL $label$1
	*($3 + [4]) = $17
	*($3) = $17
	*($3 + [8]) = ($17 + $16)
	*($3 + [16]) = $3
	*($3 + [28]) = $7
	*($3 + [32]) = $8
	*($3 + [36]) = $9
	*($3 + [40]) = $10
	*($3 + [44]) = $11
	*($3 + [48]) = $5
	*($3 + [24]) = $1
	*($3 + [52]) = $6
	*($3 + [56]) = $4
	*($3 + [60]) = $12
	*($3 + [64]) = $13
	*($3 + [68]) = $14
	*($3 + [72]) = $15
	CALL $94(($3 + [24]), ($3 + [16]))
	CALL db_update_i64(*($1 + [100]), $2, $17, $16)
	if ( ($16 <= [513]) ){ goto $label$3 }
	CALL free($17)
	
.LABEL $label$3
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)7035929282832498688) ){ goto $label$4 }
	*(($0 + [16])) = (int_64)7035929282832498689
	
.LABEL $label$4
	*([0] + [4]) = ($3 + [80])
}

int_32 .FUNC $224 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [48])
	*([0] + [4]) = $12
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [1456]
	$8 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$7 > (uint_64)(int_64)9) ){ goto $label$6 }
	$2 = *($5)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$2 = ($2 + [165])
	goto $label$4 
	
.LABEL $label$6
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$2
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$1 }
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [1456]
	$10 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$7 > (uint_64)(int_64)9) ){ goto $label$12 }
	$2 = *($5)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$2 = ($2 + [165])
	goto $label$10 
	
.LABEL $label$12
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$8
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$10 = ((int_64)$9 | (int_64)$10)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$7 }
	$11 = [0]
	*(($12 + [40])) = [0]
	*($12 + [24]) = (int_64)-1
	*($12 + [32]) = (int_64)0
	*($12 + [16]) = $10
	*($12 + [8]) = $8
	$5 = CALL db_find_i64($8, $10, (int_64)4344997579449171968, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$13 }
	CALL eosio_assert(((int_32)*(CALL $247(($12 + [8]), $5) + [8]) == (int_32)($12 + [8])), [1104])
	$11 = [1]
	$3 = *($12 + [32])
	if ( ($3 == 0) ){ goto $label$13 }
	$4 = ($12 + [36])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$15 }
	
.LOOP $label$16:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$17 }
	CALL $282($2)
	
.LABEL $label$17
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$16 }
	$5 = *(($12 + [32]))
	goto $label$14 
	
.LABEL $label$15
	$5 = $3
	
.LABEL $label$14
	*($4) = $3
	CALL $282($5)
	
.LABEL $label$13
	*([0] + [4]) = ($12 + [48])
	return $11
}

void .FUNC $225 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [112])
	*([0] + [4]) = $10
	$1 = *($0)
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [1424]
	$6 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$5 > (uint_64)(int_64)5) ){ goto $label$6 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$2 = ($2 + [165])
	goto $label$4 
	
.LABEL $label$6
	$7 = (int_64)0
	if ( ((uint_64)$5 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$2
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$1 }
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [1456]
	$8 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$5 > (uint_64)(int_64)9) ){ goto $label$12 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$2 = ($2 + [165])
	goto $label$10 
	
.LABEL $label$12
	$7 = (int_64)0
	if ( ((uint_64)$5 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$8
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$8 = ((int_64)$7 | (int_64)$8)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$7 }
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [4144]
	$9 = (int_64)0
	
.LOOP $label$13:
	if ( ((uint_64)$5 > (uint_64)(int_64)5) ){ goto $label$18 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$2 = ($2 + [165])
	goto $label$16 
	
.LABEL $label$18
	$7 = (int_64)0
	if ( ((uint_64)$5 <= (uint_64)(int_64)11) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$14
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$9 = ((int_64)$7 | (int_64)$9)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$13 }
	*(($10 + [44])) = *(($0 + [44]))
	*(($10 + [40])) = *(($0 + [40]))
	*(($10 + [36])) = *(($0 + [36]))
	*(($10 + [32])) = *(($0 + [32]))
	*(($10 + [28])) = *(($0 + [28]))
	*(($10 + [24])) = *(($0 + [24]))
	*(($10 + [20])) = *(($0 + [20]))
	*($10) = $1
	*($10 + [16]) = *($0 + [16])
	*($10 + [64]) = $9
	*($10 + [56]) = $8
	*(($3 = CALL $280([16]))) = $1
	*($3 + [8]) = $6
	*(($2 = (($10 + [56]) + [32]))) = [0]
	$0 = ($3 + [16])
	*((($10 + [56]) + [24])) = $0
	*((($10 + [56]) + [20])) = $0
	*($10 + [72]) = $3
	*($10 + [84]) = [0]
	*((($10 + [56]) + [36])) = [0]
	CALL $77((($10 + [56]) + [28]), [40])
	$3 = *($10 + [84])
	$2 = (*($2) - $3)
	CALL eosio_assert(((int_32)$2 > (int_32)[7]), [1296])
	CALL memcpy($3, $10, [8])
	CALL eosio_assert(((int_32)($2 + [-8]) > (int_32)[31]), [1296])
	CALL memcpy(($3 + [8]), ($10 + [16]), [32])
	CALL $246(($10 + [96]), ($10 + [56]))
	$3 = *($10 + [96])
	CALL send_inline($3, (*($10 + [100]) - $3))
	$3 = *($10 + [96])
	if ( ($3 == 0) ){ goto $label$19 }
	*($10 + [100]) = $3
	CALL $282($3)
	
.LABEL $label$19
	$3 = *($10 + [84])
	if ( ($3 == 0) ){ goto $label$20 }
	*(($10 + [88])) = $3
	CALL $282($3)
	
.LABEL $label$20
	$3 = *($10 + [72])
	if ( ($3 == 0) ){ goto $label$21 }
	*(($10 + [76])) = $3
	CALL $282($3)
	
.LABEL $label$21
	*([0] + [4]) = ($10 + [112])
}

int_32 .FUNC $226 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [48])
	*([0] + [4]) = $12
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [1456]
	$8 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$7 > (uint_64)(int_64)9) ){ goto $label$6 }
	$2 = *($5)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$2 = ($2 + [165])
	goto $label$4 
	
.LABEL $label$6
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$2
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$1 }
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [1456]
	$10 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$7 > (uint_64)(int_64)9) ){ goto $label$12 }
	$2 = *($5)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$2 = ($2 + [165])
	goto $label$10 
	
.LABEL $label$12
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$8
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$10 = ((int_64)$9 | (int_64)$10)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$7 }
	$11 = [0]
	*(($12 + [40])) = [0]
	*($12 + [24]) = (int_64)-1
	*($12 + [32]) = (int_64)0
	*($12 + [16]) = $10
	*($12 + [8]) = $8
	$5 = CALL db_find_i64($8, $10, (int_64)4983122594569794048, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$13 }
	CALL eosio_assert(((int_32)*(CALL $244(($12 + [8]), $5) + [8]) == (int_32)($12 + [8])), [1104])
	$11 = [1]
	$3 = *($12 + [32])
	if ( ($3 == 0) ){ goto $label$13 }
	$4 = ($12 + [36])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$15 }
	
.LOOP $label$16:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$17 }
	CALL $282($2)
	
.LABEL $label$17
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$16 }
	$5 = *(($12 + [32]))
	goto $label$14 
	
.LABEL $label$15
	$5 = $3
	
.LABEL $label$14
	*($4) = $3
	CALL $282($5)
	
.LABEL $label$13
	*([0] + [4]) = ($12 + [48])
	return $11
}

int_32 .FUNC $227 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	*($6) = [0]
	$4 = *($2 + [8])
	*($6 + [8]) = $4
	if ( ((uint_32)$4 > (uint_32)[8]) ){ goto $label$2 }
	$5 = $6
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL $281($4)
	*($6) = $5
	$2 = *($2)
	
.LABEL $label$1
	CALL memcpy($5, $2, $4)
	*($6 + [32]) = [0]
	$2 = *(($6 + [8]))
	*($6 + [40]) = $2
	if ( ((uint_32)$2 > (uint_32)[8]) ){ goto $label$4 }
	$4 = $6
	$5 = ($6 + [32])
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL $281($2)
	*($6 + [32]) = $5
	$4 = *($6)
	
.LABEL $label$3
	CALL memcpy($5, $4, $2)
	*($6 + [16]) = [0]
	$2 = *((($6 + [32]) + [8]))
	*($6 + [24]) = $2
	if ( ((uint_32)$2 > (uint_32)[8]) ){ goto $label$6 }
	$4 = ($6 + [16])
	$5 = ($6 + [32])
	goto $label$5 
	
.LABEL $label$6
	$4 = CALL $281($2)
	*($6 + [16]) = $4
	$2 = *((($6 + [16]) + [8]))
	$5 = *($6 + [32])
	
.LABEL $label$5
	CALL memcpy($4, $5, $2)
	*($6 + [28]) = $3
	if ( (*((($6 + [32]) + [8])) <= [9]) ){ goto $label$7 }
	$2 = *($6 + [32])
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $283($2)
	
.LABEL $label$7
	$2 = CALL $232($0, $1, ($6 + [16]))
	if ( (*((($6 + [16]) + [8])) <= [9]) ){ goto $label$8 }
	$4 = *($6 + [16])
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $283($4)
	
.LABEL $label$8
	if ( (*(($6 + [8])) <= [9]) ){ goto $label$9 }
	$4 = *($6)
	if ( ($4 == 0) ){ goto $label$9 }
	CALL $283($4)
	
.LABEL $label$9
	*([0] + [4]) = ($6 + [48])
	return $2
}

int_32 .FUNC $220 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [48])
	*([0] + [4]) = $10
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1456]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)9) ){ goto $label$6 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$2 = ($2 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	$9 = [0]
	*(($10 + [40])) = [0]
	*($10 + [24]) = (int_64)-1
	*($10 + [32]) = (int_64)0
	$6 = *($0)
	*($10 + [16]) = $6
	*($10 + [8]) = $7
	$4 = CALL db_find_i64($7, $6, (int_64)-2063328921671172096, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert(((int_32)*(CALL $252(($10 + [8]), $4) + [8]) == (int_32)($10 + [8])), [1104])
	$9 = [1]
	$0 = *($10 + [32])
	if ( ($0 == 0) ){ goto $label$7 }
	$3 = ($10 + [36])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$9 }
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $282($2)
	
.LABEL $label$11
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$10 }
	$4 = *(($10 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$4 = $0
	
.LABEL $label$8
	*($3) = $0
	CALL $282($4)
	
.LABEL $label$7
	*([0] + [4]) = ($10 + [48])
	return $9
}

int_32 .FUNC $221 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [48])
	*([0] + [4]) = $12
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [1456]
	$8 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$7 > (uint_64)(int_64)9) ){ goto $label$6 }
	$2 = *($5)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$2 = ($2 + [165])
	goto $label$4 
	
.LABEL $label$6
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$2
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$1 }
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [1456]
	$10 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$7 > (uint_64)(int_64)9) ){ goto $label$12 }
	$2 = *($5)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$2 = ($2 + [165])
	goto $label$10 
	
.LABEL $label$12
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$8
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$10 = ((int_64)$9 | (int_64)$10)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$7 }
	$11 = [0]
	*(($12 + [40])) = [0]
	*($12 + [24]) = (int_64)-1
	*($12 + [32]) = (int_64)0
	*($12 + [16]) = $10
	*($12 + [8]) = $8
	$5 = CALL db_find_i64($8, $10, (int_64)-2063328921671172096, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$13 }
	CALL eosio_assert(((int_32)*(CALL $252(($12 + [8]), $5) + [8]) == (int_32)($12 + [8])), [1104])
	$11 = [1]
	$3 = *($12 + [32])
	if ( ($3 == 0) ){ goto $label$13 }
	$4 = ($12 + [36])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$15 }
	
.LOOP $label$16:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$17 }
	CALL $282($2)
	
.LABEL $label$17
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$16 }
	$5 = *(($12 + [32]))
	goto $label$14 
	
.LABEL $label$15
	$5 = $3
	
.LABEL $label$14
	*($4) = $3
	CALL $282($5)
	
.LABEL $label$13
	*([0] + [4]) = ($12 + [48])
	return $11
}

int_32 .FUNC $222 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [48])
	*([0] + [4]) = $10
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1456]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)9) ){ goto $label$6 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$2 = ($2 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	$9 = [0]
	*(($10 + [40])) = [0]
	*($10 + [24]) = (int_64)-1
	*($10 + [32]) = (int_64)0
	$6 = *($0)
	*($10 + [16]) = $6
	*($10 + [8]) = $7
	$4 = CALL db_find_i64($7, $6, (int_64)4344997579449171968, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert(((int_32)*(CALL $247(($10 + [8]), $4) + [8]) == (int_32)($10 + [8])), [1104])
	$9 = [1]
	$0 = *($10 + [32])
	if ( ($0 == 0) ){ goto $label$7 }
	$3 = ($10 + [36])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$9 }
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $282($2)
	
.LABEL $label$11
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$10 }
	$4 = *(($10 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$4 = $0
	
.LABEL $label$8
	*($3) = $0
	CALL $282($4)
	
.LABEL $label$7
	*([0] + [4]) = ($10 + [48])
	return $9
}

int_32 .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($7 + [15]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [1296])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$2 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$3 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[1]), [1296])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $4, [2])
	*($6) = (*($6) + [2])
	CALL $81($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$6 = *($6)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [20])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy($2, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

int_64 .FUNC _ZN6NiuNiu13_getglobalcntEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	*($4 + [8]) = (int_64)0
	$1 = ($0 + [88])
	$2 = *(($0 + [116]))
	if ( ((int_32)$2 == (int_32)*(($0 + [112]))) ){ goto $label$4 }
	$2 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [8]) == (int_32)$1), [1104])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$2 = CALL db_find_i64(*($1), *(($0 + [96])), (int_64)7235159541892513792, (int_64)7235159541892513792)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*(CALL $83($1, $2) + [8]) == (int_32)$1), [1104])
	
.LABEL $label$3
	$3 = CALL $87($1)
	*($4 + [8]) = $3
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = (int_64)0
	CALL $73($1, ($4 + [8]), *($0))
	$3 = *($4 + [8])
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
	return $3
}

void .FUNC $73 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [8]) == (int_32)$0), [1104])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)7235159541892513792, (int_64)7235159541892513792)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $83($0, $3)
	CALL eosio_assert(((int_32)*($3 + [8]) == (int_32)$0), [1104])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [1472])
	CALL $84($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $85($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC _ZN6NiuNiu11_starttimerEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [112])
	*([0] + [4]) = $11
	$8 = CALL current_time()
	*(($11 + [76])) = [0]
	*(($11 + [80])) = [0]
	*($11 + [60]) = [0]
	*($11 + [64]) = [0]
	*($11 + [68]) = [0]
	*($11 + [72]) = [0]
	*($11 + [48]) = ((CASTING uint_32)(uint_64 ((uint_64)$8 / (uint_64)(int_64)1000000)) + [60])
	*($11 + [84]) = [0]
	*(($11 + [88])) = [0]
	*(($11 + [92])) = [0]
	*($11 + [96]) = [0]
	*(($11 + [100])) = [0]
	*(($11 + [104])) = [0]
	$4 = ($11 + [84])
	$3 = *($0)
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [1424]
	$9 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$6 }
	$5 = *($6)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$5 = ($5 + [165])
	goto $label$4 
	
.LABEL $label$6
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	*($11 + [40]) = $9
	*($11 + [32]) = $3
	$8 = (int_64)0
	$10 = (int_64)59
	$6 = [1440]
	$9 = (int_64)0
	
.LOOP $label$7:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$8 }
	$5 = *($6)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$5 = ($5 + [165])
	goto $label$9 
	
.LABEL $label$10
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$8
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$7 | (int_64)$9)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$7 }
	*($11 + [24]) = $9
	*($11 + [16]) = $1
	*($11 + [8]) = $3
	CALL $71($4, ($11 + [32]), $0, ($11 + [24]), ($11 + [8]))
	*(($11 + [68])) = $2
	$3 = CALL _ZN6NiuNiu13_getglobalcntEv($0)
	*($11 + [32]) = $3
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [1456]
	$9 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$8 > (uint_64)(int_64)9) ){ goto $label$16 }
	$5 = *($6)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$5 = ($5 + [165])
	goto $label$14 
	
.LABEL $label$16
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$12
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$11 }
	*($11 + [32]) = ((int_64)( $9 ? (int_64)1 : (int_64)($3 == 0) ) + (int_64)$3)
	CALL $73(($0 + [88]), ($11 + [32]), *($0))
	$8 = *($11 + [32])
	*($11 + [40]) = (int_64)0
	*($11 + [32]) = $8
	$8 = *($0)
	CALL $74(($11 + [8]), ($11 + [48]))
	$6 = *($11 + [8])
	CALL send_deferred(($11 + [32]), $8, $6, (*($11 + [12]) - $6), [0])
	$6 = *($11 + [8])
	if ( ($6 == 0) ){ goto $label$17 }
	*($11 + [12]) = $6
	CALL $282($6)
	
.LABEL $label$17
	CALL $75(($11 + [48]))
	*([0] + [4]) = ($11 + [112])
}

void .FUNC $71 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$7 = ( $6 ? $8 : ($8 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $280(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $298($0)
	
.LABEL $label$1
	*(($8 = ($6 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($8 + [8]) = *($3)
	*($8 + [16 align=4]) = (int_64)0
	*(($3 = ($8 + [24]))) = [0]
	$2 = CALL $280([16])
	*($8 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($8 + [20])) = $5
	*($8 + [28]) = [0]
	*(($2 = ($8 + [32]))) = [0]
	*(($8 + [36])) = [0]
	CALL $77(($8 + [28]), [16])
	$2 = *($8 + [28])
	$1 = (*($2) - $2)
	CALL eosio_assert(((int_32)$1 > (int_32)[7]), [1296])
	CALL memcpy($2, $4, [8])
	CALL eosio_assert(((int_32)($1 + [-8]) > (int_32)[7]), [1296])
	CALL memcpy(($2 + [8]), ($4 + [8]), [8])
	$3 = ($6 + ((int_32)$7 * (int_32)[40]))
	$5 = ($8 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$6 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($2 + [-12]))
	*(($8 + [-40])) = *(($2 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($7 = ($8 + [-16]))) = [0]
	$4 = ($2 + [-4])
	*($1) = *($4)
	*(($8 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($7) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($4) = (int_64)0
	*(($7 = ($8 + [-4]))) = [0]
	$4 = ($2 + [8])
	*($1) = *($4)
	*(($8 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($7) = *($1)
	*($1) = [0]
	*($4) = (int_64)0
	$8 = ($8 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $6) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$7 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$7 = $2
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $5
	*(($0 + [8])) = $3
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$8 }
	$1 = ([0] - $7)
	$8 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($8 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $2
	CALL $282($2)
	
.LABEL $label$10
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $2
	CALL $282($2)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($7 == 0) ){ goto $label$12 }
	CALL $282($7)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$6 = *($0)
	*($0) = ($6 + [10])
	$6 = ($6 + [11])
	$8 = *($1 + [12])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	*($0) = $6
	$8 = *($1 + [20])
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	*($0) = $6
	$7 = *($1 + [24])
	$2 = *(($1 + [28]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$7
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$8:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$5 }
	*($0) = $6
	
.LABEL $label$4
	$7 = *($1 + [36])
	$2 = *(($1 + [40]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$9 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$12:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$13 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$13
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$14:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$14 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	*($0) = $6
	
.LABEL $label$10
	$7 = *($1 + [48])
	$5 = *(($1 + [52]))
	$8 = (CASTING uint_64)(uint_32 int_32(($5 - $7) >> [4]))
	
.LOOP $label$15:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$15 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = *($7 + [4])
	$3 = *(($7 + [8]))
	$6 = ((($6 + $3) + [2]) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$18:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$18 }
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	*($0) = $6
	
.LABEL $label$16
	return $0
}

void .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $280($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $298($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $282($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($4) = [0]
	CALL $76($4, $1)
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $77($0, $2)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($4 + [4]) = $0
	*($4) = $0
	*($4 + [8]) = $3
	CALL $78($4, $1)
	CALL $80(CALL $79(CALL $79($4, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $75 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($0 + [52])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$3 }
	$2 = ([0] - $1)
	$5 = ($5 + [-12])
	
.LOOP $label$4:
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$5 }
	*(($5 + [4])) = $3
	CALL $282($3)
	
.LABEL $label$5
	$5 = ($5 + [-16])
	if ( ((int_32)($5 + $2) != (int_32)[-12]) ){ goto $label$4 }
	$5 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $282($5)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$4 = ($0 + [40])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$9:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($5 + [16])) = $3
	CALL $282($3)
	
.LABEL $label$10
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$11 }
	*(($5 + [4])) = $3
	CALL $282($3)
	
.LABEL $label$11
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$9 }
	$5 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($4) = $1
	CALL $282($5)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$14 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$15:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$16 }
	*(($5 + [16])) = $3
	CALL $282($3)
	
.LABEL $label$16
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$17 }
	*(($5 + [4])) = $3
	CALL $282($3)
	
.LABEL $label$17
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$15 }
	$5 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$13
	*($4) = $1
	CALL $282($5)
	
.LABEL $label$12
	return $0
}

int_32 .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [1296])
	CALL memcpy(*($0 + [4]), $1, [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[1]), [1296])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$4 = (*($0 + [4]) + [2])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[3]), [1296])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$5 = (*($0 + [4]) + [4])
	*($0 + [4]) = $5
	$6 = *($1 + [12])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$2 = ((int_64)$6) != (int_64)0
	*($7 + [14]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) > (int_32)[0]), [1296])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [14]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $2 ){ goto $label$1 }
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [1296])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($1 + [16]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	$6 = *($1 + [20])
	
.LOOP $label$2:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$1 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($1) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [1296])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $1 ){ goto $label$2 }
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [1296])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [1296])
	CALL memcpy(*($4), $7, [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [1296])
	CALL memcpy(*($4), ($7 + [8]), [8])
	*($4) = (*($4) + [8])
	CALL $81(CALL $82($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$6 = *($4)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $259 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $7) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$6 = *($0)
	$3 = int_32(($7 - $6) >> [4])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$3 }
	$5 = [268435455]
	$2 = ($2 - $6)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$5 = int_32($2 >> [3])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$4 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL $280(($5 << [4]))
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$1 
	
.LABEL $label$5
	*(($0 + [4])) = ($7 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$5 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $298($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$7 = ($7 - $6)
	$3 = ($2 + ($3 << [4]))
	$4 = ($3 - $7)
	$1 = ($3 + ($1 << [4]))
	$5 = ($2 + ($5 << [4]))
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($4, $6, $7)
	$6 = *($0)
	
.LABEL $label$7
	*($0) = $4
	*(($0 + [4])) = $1
	*(($0 + [8])) = $5
	if ( ($6 == 0) ){ goto $label$8 }
	CALL $282($6)
	
.LABEL $label$8
	(unreachable)
}

int_32 .FUNC $258 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [2480])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$2 = *($1 + [4])
	$6 = int_32(($2 - $7) >> [4])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$4 }
	CALL $259($1, ($4 - $6))
	$2 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$5 }
	$2 = ($7 + ($4 << [4]))
	*(($1 + [4])) = $2
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($0 + [4])
	$6 = *($4)
	
.LOOP $label$6:
	$3 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[7]), [1056])
	CALL memcpy($7, *($4), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[7]), [1056])
	CALL memcpy(($7 + [8]), *($4), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $312 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$1 = ($1 + [-9])
	if ( ((uint_32)$1 > (uint_32)[17]) ){ goto $label$1 }
	goto $label$19 
	
.LABEL $label$19
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$18
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$17
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$16
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$15
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$14
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$13
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$12
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$11
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$10
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$9
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$8
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$7
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$6
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$5
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$4
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$3
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	CALL __extenddftf2($4, *($1))
	*(($0 + [8])) = *(($4 + [8]))
	*($0) = *($4)
	goto $label$1 
	
.LABEL $label$2
	$1 = ((*($2) + [15]) & [-16])
	*($2) = ($1 + [16])
	$3 = *($1)
	*(($0 + [8])) = *($1 + [8])
	*($0) = $3
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
	$1
}

int_32 .FUNC strerror (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	CALL __lctrans($3, *([0] + [20]))
	$2 = [0]
	
.LOOP $label$5:
	if ( ((int_32)*(($2 + [13360])) == (int_32)$0) ){ goto $label$4 }
	$1 = [87]
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[87]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$1 = $2
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = [13456]
	
.LOOP $label$6:
	$0 = *($2)
	$3 = ($2 + [1])
	$2 = $3
	if ( $0 ){ goto $label$6 }
	$2 = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$6 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [13456]
	return .LABEL $label$1
}

int_32 .FUNC strnlen (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = CALL memchr($0, [0], $1)
	return ( ($2 - $0) ? $1 : $2 )
}

int_32 .FUNC wctomb (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	return CALL wcrtomb($0, $1, [0])
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC __signbitl (int_64 $0, int_64 $1)
{
	return (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)63))
}

int_32 .FUNC __fpclassifyl (int_64 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$2 = ((int_64)$1 & (int_64)281474976710655)
	$3 = ((CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)48)) & [32767]
	if ( ((int_32)$3) == (int_32)[32767]) ){ goto $label$2 }
	$4 = [4]
	if ( $3 ){ goto $label$1 }
	return ( [3] ? [2] : ((int_64)((int_64)$2 | (int_64)$0) != (int_64)0) )
	
.LABEL $label$2
	$4 = (int_64)(((int_64)$2 | (int_64)$0) == 0)
	
.LABEL $label$1
	return $4
}

void .FUNC $251 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $280(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $298($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $282($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $282($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $250 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [1024])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $280([64])) + [48]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [1056])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((uint_32)($4 + [-8]) > (uint_32)[31]), [1056])
	CALL memcpy(($6 + [16]), ($7 + [8]), [32])
	*($6 + [56]) = [-1]
	*($6 + [52]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [52])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $251(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $282($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $253 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $280(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $298($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $282($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $282($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $252 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [1024])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $280([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [1056])
	CALL memcpy($6, $7, [8])
	*($6 + [12]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [12])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $253(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $282($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $255 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $280(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $298($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [44]) & [1]) == 0) ){ goto $label$11 }
	CALL $282(*(($1 + [52])))
	
.LABEL $label$11
	CALL $282($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $282($6)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $254 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1056])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1056])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1056])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [1056])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [1056])
	CALL memcpy(($3 + [12]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	*($1 + [40]) = ((int_32)*($3 + [12]) != (int_32)[0])
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [1056])
	CALL memcpy(($3 + [13]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	*($1 + [41]) = ((int_32)*($3 + [13]) != (int_32)[0])
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [1056])
	CALL memcpy(($3 + [14]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	*($1 + [42]) = ((int_32)*($3 + [14]) != (int_32)[0])
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [1056])
	CALL memcpy(($3 + [15]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	*($1 + [43]) = ((int_32)*($3 + [15]) != (int_32)[0])
	$0 = CALL $187($0, ($1 + [44]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*([0] + [4]) = ($3 + [16])
	return $0
}

void .FUNC $257 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = *($0 + [4])
	$8 = *($0 + [8])
	if ( ((uint_32)((int_32)($8 - $7) / (int_32)[40]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ((int_32)($7 - $4) / (int_32)[40])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$3 }
	$7 = [107374182]
	$8 = ((int_32)($8 - $4) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$6 }
	$7 = ($8 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$8 = CALL $280(((int_32)$7 * (int_32)[40]))
	goto $label$2 
	
.LABEL $label$5
	$8 = ($0 + [4])
	
.LOOP $label$7:
	*($7) = (int_64)0
	*($7 + [16 align=4]) = (int_64)0
	*(($7 + [8])) = (int_64)0
	*(($7 + [24])) = (int_64)0
	*(($7 + [32])) = (int_64)0
	$7 = (*($8) + [40])
	*($8) = $7
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$8 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $298($0)
	
.LABEL $label$2
	$2 = ($8 + ((int_32)$7 * (int_32)[40]))
	$8 = ($8 + ((int_32)$5 * (int_32)[40]))
	$7 = $8
	
.LOOP $label$8:
	*($7) = (int_64)0
	*($7 + [16 align=4]) = (int_64)0
	*(($7 + [8])) = (int_64)0
	*(($7 + [24])) = (int_64)0
	*(($7 + [32])) = (int_64)0
	$7 = ($7 + [40])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$10 }
	$3 = ([0] - $4)
	$1 = ($1 + [-20])
	
.LOOP $label$11:
	*(($8 + [-32])) = *(($1 + [-12]))
	*(($8 + [-40])) = *(($1 + [-20]))
	*(($4 = ($8 + [-24]))) = (int_64)0
	*(($5 = ($8 + [-16]))) = [0]
	$6 = ($1 + [-4])
	*($4) = *($6)
	*(($8 + [-20])) = *($1)
	$4 = ($1 + [4])
	*($5) = *($4)
	*($4) = [0]
	*(($4 = ($8 + [-12]))) = (int_64)0
	*($6) = (int_64)0
	*(($5 = ($8 + [-4]))) = [0]
	$6 = ($1 + [8])
	*($4) = *($6)
	*(($8 + [-8])) = *(($1 + [12]))
	$4 = ($1 + [16])
	*($5) = *($4)
	*($4) = [0]
	*($6) = (int_64)0
	$8 = ($8 + [-40])
	$1 = ($1 + [-40])
	if ( ((int_32)($1 + $3) != (int_32)[-20]) ){ goto $label$11 }
	$4 = *(($0 + [4]))
	$5 = *($0)
	goto $label$9 
	
.LABEL $label$10
	$5 = $4
	
.LABEL $label$9
	*($0) = $8
	*(($0 + [4])) = $7
	*(($0 + [8])) = $2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$12 }
	$1 = ([0] - $5)
	$7 = ($4 + [-24])
	
.LOOP $label$13:
	$8 = *(($7 + [12]))
	if ( ($8 == 0) ){ goto $label$14 }
	*(($7 + [16])) = $8
	CALL $282($8)
	
.LABEL $label$14
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$15 }
	*(($7 + [4])) = $8
	CALL $282($8)
	
.LABEL $label$15
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $1) != (int_32)[-24]) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($5 == 0) ){ goto $label$1 }
	CALL $282($5)
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $256 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = *($0 + [4])
	$8 = *($0 + [8])
	if ( ((uint_32)int_32(($8 - $7) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$4 = int_32(($7 - $5) >> [4])
	$7 = ($4 + $1)
	if ( ((uint_32)$7 >= (uint_32)[268435456]) ){ goto $label$3 }
	$6 = [268435455]
	$8 = ($8 - $5)
	if ( ((uint_32)int_32($8 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$6 = int_32($8 >> [3])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$8 = CALL $280(($6 << [4]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $7
	$8 = $1
	
.LOOP $label$7:
	*($6) = [0]
	*(($6 + [4])) = (int_64)0
	*(($6 + [12])) = [0]
	$6 = ($6 + [16])
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$7 }
	*(($0 + [4])) = ($7 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $298($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$2 = ($8 + ($6 << [4]))
	$8 = ($8 + ($4 << [4]))
	$6 = $8
	$7 = $1
	
.LOOP $label$8:
	*($6) = [0]
	*(($6 + [4])) = (int_64)0
	*(($6 + [12])) = [0]
	$6 = ($6 + [16])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$8 }
	$3 = ($8 + ($1 << [4]))
	$6 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$10 }
	$4 = ([0] - $6)
	$6 = ($7 + [-16])
	
.LOOP $label$11:
	*(($8 + [-16])) = *($6)
	*(($7 = ($8 + [-12]))) = (int_64)0
	*(($1 = ($8 + [-4]))) = [0]
	$5 = ($6 + [4])
	*($7) = *($5)
	*(($8 + [-8])) = *(($6 + [8]))
	$7 = ($6 + [12])
	*($1) = *($7)
	*($7) = [0]
	*($5) = (int_64)0
	$8 = ($8 + [-16])
	$6 = ($6 + [-16])
	if ( ((int_32)($6 + $4) != (int_32)[-16]) ){ goto $label$11 }
	$6 = *(($0 + [4]))
	$1 = *($0)
	goto $label$9 
	
.LABEL $label$10
	$1 = $6
	
.LABEL $label$9
	*($0) = $8
	*(($0 + [4])) = $3
	*(($0 + [8])) = $2
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$12 }
	$7 = ([0] - $1)
	$6 = ($6 + [-12])
	
.LOOP $label$13:
	$8 = *($6)
	if ( ($8 == 0) ){ goto $label$14 }
	*(($6 + [4])) = $8
	CALL $282($8)
	
.LABEL $label$14
	$6 = ($6 + [-16])
	if ( ((int_32)($6 + $7) != (int_32)[-12]) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($1 == 0) ){ goto $label$15 }
	CALL $282($1)
	
.LABEL $label$15
	(unreachable)
}

void .FUNC $181 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	*([0] + [4]) = $11
	$10 = ($0 + [16])
	$7 = CALL int_32 $10((int_32 $0), (int_32 *($2)))
	$6 = ($0 + [32])
	$8 = CALL int_32 $6((int_32 $10), (int_32 *($2)))
	if ( ($7 == 0) ){ goto $label$3 }
	if ( ($8 == 0) ){ goto $label$2 }
	$7 = ($0 + [8])
	*(($10 = ($11 + [8]))) = *($7)
	$4 = *($0)
	*($0) = *($6)
	$8 = ($6 + [8])
	*($7) = *($8)
	*($11) = $4
	*($8) = *($10)
	*($6) = *($11)
	goto $label$1 
	
.LABEL $label$3
	if ( ($8 == 0) ){ goto $label$1 }
	$4 = *($10)
	*($10) = *($6)
	$8 = ($10 + [8])
	*(($7 = ($11 + [8]))) = *($8)
	$3 = ($6 + [8])
	*($8) = *($3)
	*($11) = $4
	*($3) = *($7)
	*($6) = *($11)
	if ( (CALL int_32 $10((int_32 $0), (int_32 *($2))) == 0) ){ goto $label$1 }
	$3 = ($0 + [8])
	*($7) = *($3)
	$4 = *($0)
	*($0) = *($10)
	*($3) = *($8)
	*($11) = $4
	*($8) = *($7)
	*($10) = *($11)
	goto $label$1 
	
.LABEL $label$2
	$4 = *($0)
	*($0) = *($10)
	$3 = ($0 + [8])
	*(($7 = ($11 + [8]))) = *($3)
	$8 = ($10 + [8])
	*($3) = *($8)
	*($11) = $4
	*($8) = *($7)
	*($10) = *($11)
	if ( (CALL int_32 $6((int_32 $10), (int_32 *($2))) == 0) ){ goto $label$1 }
	*($7) = *($8)
	$4 = *($10)
	*($10) = *($6)
	$10 = ($6 + [8])
	*($8) = *($10)
	*($11) = $4
	*($10) = *($7)
	*($6) = *($11)
	
.LABEL $label$1
	$10 = ($0 + [48])
	if ( ((int_32)$10 == (int_32)$1) ){ goto $label$4 }
	$9 = [0]
	
.LOOP $label$5:
	$3 = $10
	if ( (CALL int_32 $3((int_32 $6), (int_32 *($2))) == 0) ){ goto $label$6 }
	*(($5 = ($11 + [8]))) = *(($3 + [8]))
	*($11) = *($3)
	$10 = $9
	
.LOOP $label$8:
	$7 = ($6 + [40])
	*((($6 = ($0 + $10)) + [56])) = *($7)
	$8 = ($6 + [32])
	*(($6 + [48])) = *($8)
	if ( ((int_32)$10 == (int_32)[-32]) ){ goto $label$7 }
	$10 = ($10 + [-16])
	if ( CALL int_32 $11((int_32 ($6 + [16])), (int_32 *($2))) ){ goto $label$8 }
	
.LABEL $label$7
	*($7) = *($5)
	*($8) = *($11)
	
.LABEL $label$6
	$9 = ($9 + [16])
	$6 = $3
	$10 = ($3 + [16])
	if ( ((int_32)$10 != (int_32)$1) ){ goto $label$5 }
	
.LABEL $label$4
	*([0] + [4]) = ($11 + [16])
}

int_32 .FUNC $180 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	$9 = CALL int_32 $1((int_32 $0), (int_32 *($4)))
	$5 = CALL int_32 $2((int_32 $1), (int_32 *($4)))
	if ( ($9 == 0) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$3 }
	$5 = ($0 + [8])
	*(($9 = ($10 + [8]))) = *($5)
	$6 = *($0)
	*($0) = *($2)
	$7 = ($2 + [8])
	*($5) = *($7)
	*($10) = $6
	*($7) = *($9)
	*($2) = *($10)
	$9 = [1]
	goto $label$1 
	
.LABEL $label$4
	$9 = [0]
	if ( ($5 == 0) ){ goto $label$1 }
	$6 = *($1)
	*($1) = *($2)
	$7 = ($1 + [8])
	*(($5 = ($10 + [8]))) = *($7)
	$9 = ($2 + [8])
	*($7) = *($9)
	*($10) = $6
	*($9) = *($5)
	*($2) = *($10)
	$9 = [1]
	if ( (CALL int_32 $1((int_32 $0), (int_32 *($4))) == 0) ){ goto $label$1 }
	$9 = ($0 + [8])
	*($5) = *($9)
	$6 = *($0)
	*($0) = *($1)
	*($9) = *($7)
	*($10) = $6
	*($7) = *($5)
	*($1) = *($10)
	goto $label$2 
	
.LABEL $label$3
	$6 = *($0)
	*($0) = *($1)
	$9 = ($0 + [8])
	*(($5 = ($10 + [8]))) = *($9)
	$7 = ($1 + [8])
	*($9) = *($7)
	*($10) = $6
	*($7) = *($5)
	*($1) = *($10)
	$9 = [1]
	if ( (CALL int_32 $2((int_32 $1), (int_32 *($4))) == 0) ){ goto $label$1 }
	*($5) = *($7)
	$6 = *($1)
	*($1) = *($2)
	$9 = ($2 + [8])
	*($7) = *($9)
	*($10) = $6
	*($9) = *($5)
	*($2) = *($10)
	
.LABEL $label$2
	$9 = [2]
	
.LABEL $label$1
	if ( (CALL int_32 $3((int_32 $2), (int_32 *($4))) == 0) ){ goto $label$5 }
	$6 = *($2)
	*($2) = *($3)
	$7 = ($2 + [8])
	*(($5 = ($10 + [8]))) = *($7)
	$8 = ($3 + [8])
	*($7) = *($8)
	*($10) = $6
	*($8) = *($5)
	*($3) = *($10)
	if ( (CALL int_32 $2((int_32 $1), (int_32 *($4))) == 0) ){ goto $label$7 }
	$6 = *($1)
	*($1) = *($2)
	$3 = ($1 + [8])
	*($5) = *($3)
	*($3) = *($7)
	*($10) = $6
	*($7) = *($5)
	*($2) = *($10)
	if ( (CALL int_32 $1((int_32 $0), (int_32 *($4))) == 0) ){ goto $label$6 }
	$4 = ($0 + [8])
	*(($2 = ($10 + [8]))) = *($4)
	$6 = *($0)
	*($0) = *($1)
	$0 = ($1 + [8])
	*($4) = *($0)
	*($10) = $6
	*($0) = *($2)
	*($1) = *($10)
	$9 = ($9 + [3])
	goto $label$5 
	
.LABEL $label$7
	$9 = ($9 + [1])
	goto $label$5 
	
.LABEL $label$6
	$9 = ($9 + [2])
	
.LABEL $label$5
	*([0] + [4]) = ($10 + [16])
	return $9
}

void .FUNC $138 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [128]) == (int_32)$0), [848])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [896])
	$3 = *($0 + [24])
	$6 = ($0 + [28])
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$7 = ([0] - $3)
	$5 = ($4 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($5)) == (int_64)$2) ){ goto $label$1 }
	$4 = $5
	$8 = ($5 + [-24])
	$5 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$4 != (int_32)$3), [960])
	$8 = ($4 + [-24])
	$5 = *($6)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$4 }
	$3 = ([0] - $5)
	$5 = $8
	
.LOOP $label$5:
	$8 = ($5 + [24])
	$7 = *($8)
	*($8) = [0]
	$4 = *($5)
	*($5) = $7
	if ( ($4 == 0) ){ goto $label$6 }
	$7 = *($4 + [104])
	if ( ($7 == 0) ){ goto $label$7 }
	*(($4 + [108])) = $7
	CALL $282($7)
	
.LABEL $label$7
	$7 = *($4 + [80])
	if ( ($7 == 0) ){ goto $label$8 }
	*(($4 + [84])) = $7
	CALL $282($7)
	
.LABEL $label$8
	$7 = *($4 + [56])
	if ( ($7 == 0) ){ goto $label$9 }
	*(($4 + [60])) = $7
	CALL $282($7)
	
.LABEL $label$9
	$7 = *($4 + [32])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [36])) = $7
	CALL $282($7)
	
.LABEL $label$10
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$11 }
	*(($4 + [12])) = $7
	CALL $282($7)
	
.LABEL $label$11
	CALL $282($4)
	
.LABEL $label$6
	*(($5 + [16])) = *(($5 + [40]))
	*(($5 + [8])) = *(($5 + [32]))
	$5 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$12:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$13 }
	$7 = *($5 + [104])
	if ( ($7 == 0) ){ goto $label$14 }
	*(($5 + [108])) = $7
	CALL $282($7)
	
.LABEL $label$14
	$7 = *($5 + [80])
	if ( ($7 == 0) ){ goto $label$15 }
	*(($5 + [84])) = $7
	CALL $282($7)
	
.LABEL $label$15
	$7 = *($5 + [56])
	if ( ($7 == 0) ){ goto $label$16 }
	*(($5 + [60])) = $7
	CALL $282($7)
	
.LABEL $label$16
	$7 = *($5 + [32])
	if ( ($7 == 0) ){ goto $label$17 }
	*(($5 + [36])) = $7
	CALL $282($7)
	
.LABEL $label$17
	$7 = *($5 + [8])
	if ( ($7 == 0) ){ goto $label$18 }
	*(($5 + [12])) = $7
	CALL $282($7)
	
.LABEL $label$18
	CALL $282($5)
	
.LABEL $label$13
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$12 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [132]))
}

int_32 .FUNC $139 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	$3 = *($2 + [104])
	if ( ($3 == 0) ){ goto $label$6 }
	*(($2 + [108])) = $3
	CALL $282($3)
	
.LABEL $label$6
	$3 = *($2 + [80])
	if ( ($3 == 0) ){ goto $label$7 }
	*(($2 + [84])) = $3
	CALL $282($3)
	
.LABEL $label$7
	$3 = *($2 + [56])
	if ( ($3 == 0) ){ goto $label$8 }
	*(($2 + [60])) = $3
	CALL $282($3)
	
.LABEL $label$8
	$3 = *($2 + [32])
	if ( ($3 == 0) ){ goto $label$9 }
	*(($2 + [36])) = $3
	CALL $282($3)
	
.LABEL $label$9
	$3 = *($2 + [8])
	if ( ($3 == 0) ){ goto $label$10 }
	*(($2 + [12])) = $3
	CALL $282($3)
	
.LABEL $label$10
	CALL $282($2)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$2 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$2 = $1
	
.LABEL $label$2
	*(($0 + [4])) = $1
	CALL $282($2)
	
.LABEL $label$1
	return $0
}

void .FUNC $269 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$3 = int_32(($6 - $5) >> [3])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[536870912]) ){ goto $label$3 }
	$4 = [536870911]
	$2 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$5 }
	$4 = int_32($2 >> [2])
	$4 = ( $7 ? $4 : ($4 <= $7) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $280(($4 << [3]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $298($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($3 << [3])))) = *($1)
	$6 = ($6 - $5)
	$1 = ($3 - $6)
	$4 = ($7 + ($4 << [3]))
	$7 = ($3 + [8])
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $5, $6)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $282($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $130 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $280(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $298($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $282($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $282($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN6NiuNiu21_addgameresulthistoryEyyllll (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [144])
	*([0] + [4]) = $9
	*(($7 = (($9 + [8]) + [32]))) = [0]
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	$8 = *($0)
	*($9 + [8]) = $8
	*($9 + [16]) = $8
	CALL eosio_assert(((int_64)$8 == (int_64)CALL $fimport$13()), [1232])
	*(($0 = CALL $280([48])) + [36]) = ($9 + [8])
	*($0 + [8]) = $2
	*($0) = $1
	*($0 + [16]) = $3
	*($0 + [24]) = $4
	*($0 + [28]) = $5
	*($0 + [32]) = $6
	*($0 + [20]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*($9 + [96]) = (($9 + [48]) + [36])
	*($9 + [92]) = ($9 + [48])
	*($9 + [88]) = ($9 + [48])
	*($9 + [104]) = ($9 + [88])
	*($9 + [116]) = ($0 + [8])
	*($9 + [112]) = $0
	*($9 + [120]) = ($0 + [16])
	*($9 + [124]) = ($0 + [20])
	*($9 + [128]) = ($0 + [24])
	*($9 + [132]) = ($0 + [28])
	*($9 + [136]) = ($0 + [32])
	CALL $154(($9 + [112]), ($9 + [104]))
	$1 = *($0)
	$5 = CALL db_store_i64(*($9 + [16]), (int_64)-4994255165667180544, $8, $1, ($9 + [48]), [36])
	*($0 + [40]) = $5
	if ( (uint_64)($1 <= *($9 + [24])) ){ goto $label$1 }
	*((($9 + [8]) + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($9 + [112]) = $0
	$8 = *($0)
	*($9 + [48]) = $8
	*($9 + [88]) = $5
	$6 = *((($9 + [8]) + [28]))
	if ( ((uint_32)$6 >= (uint_32)*($7)) ){ goto $label$3 }
	*($6 + [8]) = $8
	*($6 + [16]) = $5
	*($9 + [112]) = [0]
	*($6) = $0
	*(($9 + [36])) = ($6 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $48(($9 + [32]), ($9 + [112]), ($9 + [48]), ($9 + [88]))
	
.LABEL $label$2
	$0 = *($9 + [112])
	*($9 + [112]) = [0]
	if ( ($0 == 0) ){ goto $label$4 }
	CALL $282($0)
	
.LABEL $label$4
	$5 = *($9 + [32])
	if ( ($5 == 0) ){ goto $label$5 }
	$4 = ($9 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$7 }
	
.LOOP $label$8:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$9 }
	CALL $282($6)
	
.LABEL $label$9
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$8 }
	$0 = *(($9 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$0 = $5
	
.LABEL $label$6
	*($4) = $5
	CALL $282($0)
	
.LABEL $label$5
	*([0] + [4]) = ($9 + [144])
}

void .FUNC _ZN6NiuNiu15_addgamehistoryEyR10_cardstyleS1_S1_S1_S1_ (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [240])
	*([0] + [4]) = $12
	*($12 + [192]) = $1
	*((($12 + [152]) + [32])) = [0]
	*($12 + [168]) = (int_64)-1
	*($12 + [176]) = (int_64)0
	$1 = *($0)
	*($12 + [152]) = $1
	*($12 + [160]) = $1
	*($12 + [136]) = [0]
	*($12 + [128]) = (int_64)0
	*($12 + [112]) = [0]
	*($12 + [104]) = (int_64)0
	$9 = [0]
	$10 = [0]
	$11 = [0]
	$7 = (*(($2 + [32])) - *($2 + [28]))
	$8 = int_32($7 >> [3])
	if ( ($8 == 0) ){ goto $label$2 }
	if ( ((uint_32)$8 >= (uint_32)[536870912]) ){ goto $label$1 }
	$11 = CALL $280($7)
	$9 = ($11 + ($8 << [3]))
	*(($12 + [112])) = $9
	*($12 + [104]) = $11
	*($12 + [108]) = $11
	$8 = *(($2 + [28]))
	$10 = (*(($2 + [32])) - $8)
	if ( ((int_32)$10 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($11, $8, $10)
	$10 = ($11 + $10)
	*($12 + [108]) = $10
	goto $label$2 
	
.LABEL $label$3
	$10 = $11
	
.LABEL $label$2
	*(($12 + [136])) = $9
	*($12 + [128]) = $11
	*($12 + [132]) = $10
	*($12 + [144]) = (CASTING int_64)(int_32 ((((int_32)*($2 + [4]) * (int_32)[10000]) + ((int_32)*($2) * (int_32)[10000000])) + *($2 + [40])))
	*($12 + [112]) = [0]
	*($12 + [104]) = (int_64)0
	$2 = ($3 + [28])
	if ( ((int_32)($12 + [104]) == (int_32)$2) ){ goto $label$4 }
	CALL $149(($12 + [104]), *($2), *(($3 + [32])))
	
.LABEL $label$4
	*($12 + [120]) = (CASTING int_64)(int_32 ((((int_32)*($3 + [4]) * (int_32)[10000]) + ((int_32)*($3) * (int_32)[10000000])) + *($3 + [40])))
	*($12 + [88]) = [0]
	*($12 + [80]) = (int_64)0
	if ( ((int_32)($12 + [80]) == (int_32)($4 + [28])) ){ goto $label$5 }
	CALL $149(($12 + [80]), *(($4 + [28])), *(($4 + [32])))
	
.LABEL $label$5
	*($12 + [96]) = (CASTING int_64)(int_32 ((((int_32)*($4 + [4]) * (int_32)[10000]) + ((int_32)*($4) * (int_32)[10000000])) + *($4 + [40])))
	*($12 + [64]) = [0]
	*($12 + [56]) = (int_64)0
	$2 = ($5 + [28])
	if ( ((int_32)($12 + [56]) == (int_32)$2) ){ goto $label$6 }
	CALL $149(($12 + [56]), *($2), *(($5 + [32])))
	
.LABEL $label$6
	*($12 + [72]) = (CASTING int_64)(int_32 ((((int_32)*($5 + [4]) * (int_32)[10000]) + ((int_32)*($5) * (int_32)[10000000])) + *($5 + [40])))
	*($12 + [40]) = [0]
	*($12 + [32]) = (int_64)0
	if ( ((int_32)($12 + [32]) == (int_32)($6 + [28])) ){ goto $label$7 }
	CALL $149(($12 + [32]), *(($6 + [28])), *(($6 + [32])))
	
.LABEL $label$7
	*($12 + [48]) = (CASTING int_64)(int_32 ((((int_32)*($6 + [4]) * (int_32)[10000]) + ((int_32)*($6) * (int_32)[10000000])) + *($6 + [40])))
	$1 = *($0)
	*($12 + [12]) = ($12 + [128])
	*($12 + [8]) = ($12 + [192])
	*($12 + [16]) = ($12 + [104])
	*($12 + [20]) = ($12 + [80])
	*($12 + [24]) = ($12 + [56])
	*($12 + [28]) = ($12 + [32])
	*($12 + [232]) = $1
	CALL eosio_assert(((int_64)*($12 + [152]) == (int_64)CALL $fimport$13()), [1232])
	*($12 + [212]) = ($12 + [8])
	*($12 + [208]) = ($12 + [152])
	*($12 + [216]) = ($12 + [232])
	*(($2 = CALL $280([144])) + [16]) = [0]
	*($2 + [8 align=4]) = (int_64)0
	*($2 + [32]) = [0]
	*($2 + [36]) = [0]
	*($2 + [40]) = [0]
	*($2 + [56]) = [0]
	*($2 + [60]) = [0]
	*($2 + [64]) = [0]
	*($2 + [80]) = [0]
	*($2 + [84]) = [0]
	*($2 + [88]) = [0]
	*($2 + [104]) = [0]
	*($2 + [108]) = [0]
	*($2 + [112]) = [0]
	*($2 + [128]) = ($12 + [152])
	CALL $150(($12 + [208]), $2)
	*($12 + [224]) = $2
	$1 = *($2)
	*($12 + [208]) = $1
	$6 = *($2 + [132])
	*($12 + [204]) = $6
	$3 = ($12 + [180])
	$4 = *($3)
	if ( ((uint_32)$4 >= (uint_32)*(($12 + [184]))) ){ goto $label$9 }
	*($4 + [8]) = $1
	*($4 + [16]) = $6
	*($12 + [224]) = [0]
	*($4) = $2
	*($3) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $145(($12 + [176]), ($12 + [224]), ($12 + [208]), ($12 + [204]))
	
.LABEL $label$8
	$2 = *($12 + [224])
	*($12 + [224]) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	$4 = *($2 + [104])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($2 + [108])) = $4
	CALL $282($4)
	
.LABEL $label$11
	$4 = *($2 + [80])
	if ( ($4 == 0) ){ goto $label$12 }
	*(($2 + [84])) = $4
	CALL $282($4)
	
.LABEL $label$12
	$4 = *($2 + [56])
	if ( ($4 == 0) ){ goto $label$13 }
	*(($2 + [60])) = $4
	CALL $282($4)
	
.LABEL $label$13
	$4 = *($2 + [32])
	if ( ($4 == 0) ){ goto $label$14 }
	*(($2 + [36])) = $4
	CALL $282($4)
	
.LABEL $label$14
	$4 = *($2 + [8])
	if ( ($4 == 0) ){ goto $label$15 }
	*(($2 + [12])) = $4
	CALL $282($4)
	
.LABEL $label$15
	CALL $282($2)
	
.LABEL $label$10
	$2 = *($12 + [32])
	if ( ($2 == 0) ){ goto $label$16 }
	*($12 + [36]) = $2
	CALL $282($2)
	
.LABEL $label$16
	$2 = *($12 + [56])
	if ( ($2 == 0) ){ goto $label$17 }
	*($12 + [60]) = $2
	CALL $282($2)
	
.LABEL $label$17
	$2 = *($12 + [80])
	if ( ($2 == 0) ){ goto $label$18 }
	*($12 + [84]) = $2
	CALL $282($2)
	
.LABEL $label$18
	$2 = *($12 + [104])
	if ( ($2 == 0) ){ goto $label$19 }
	*($12 + [108]) = $2
	CALL $282($2)
	
.LABEL $label$19
	$2 = *($12 + [128])
	if ( ($2 == 0) ){ goto $label$20 }
	*($12 + [132]) = $2
	CALL $282($2)
	
.LABEL $label$20
	CALL $139(($12 + [176]))
	*([0] + [4]) = ($12 + [240])
	return (unreachable)
	
.LABEL $label$1
	CALL $298(($12 + [104]))
}

void .FUNC _ZN6NiuNiu18_removegamehistoryEi (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [64])
	*([0] + [4]) = $11
	*($11 + [48]) = [0]
	*($11 + [40]) = (int_64)0
	*(($11 + [32])) = [0]
	*($11 + [16]) = (int_64)-1
	*($11 + [24]) = (int_64)0
	$2 = *($0)
	*($11) = $2
	*($11 + [8]) = $2
	$0 = CALL db_lowerbound_i64($2, $2, (int_64)7035931840378960896, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $134($11, $0)
	$10 = (($11 + [40]) + [8])
	
.LOOP $label$2:
	$4 = *($11 + [44])
	if ( ((int_32)$4 == (int_32)*($10)) ){ goto $label$4 }
	*($4) = *($0)
	*($11 + [44]) = ($4 + [8])
	goto $label$3 
	
.LABEL $label$4
	CALL $137(($11 + [40]), $0)
	
.LABEL $label$3
	CALL eosio_assert([1], [816])
	$0 = CALL db_next_i64(*($0 + [132]), ($11 + [56]))
	if ( ((int_32)$0 <= (int_32)[-1]) ){ goto $label$1 }
	$0 = CALL $134($11, $0)
	goto $label$2 
	
.LABEL $label$1
	$0 = *($11 + [44])
	$4 = *($11 + [40])
	*($11 + [56]) = [17]
	CALL $136($4, $0, ($11 + [56]))
	$9 = *($11 + [40])
	$0 = *($11 + [44])
	if ( ((uint_32)int_32(($0 - $9) >> [3]) <= (uint_32)$1) ){ goto $label$5 }
	if ( ((int_32)$9 == (int_32)($0 - ($1 << [3]))) ){ goto $label$5 }
	$5 = ($11 + [24])
	$6 = ($11 + [28])
	$7 = ($11 + [8])
	$8 = (([0] - $1) << [3])
	
.LOOP $label$6:
	$2 = *($9)
	$3 = *($5)
	$10 = *($6)
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$7 }
	$0 = ($10 + [-24])
	$1 = ([0] - $3)
	
.LOOP $label$8:
	if ( ((int_64)*(*($0)) == (int_64)$2) ){ goto $label$7 }
	$10 = $0
	$4 = ($0 + [-24])
	$0 = $4
	if ( ((int_32)($4 + $1) != (int_32)[-24]) ){ goto $label$8 }
	
.LABEL $label$7
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$11 }
	$0 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($0 + [128]) == (int_32)$11), [1104])
	if ( $0 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$0 = CALL db_find_i64(*($11), *($7), (int_64)7035931840378960896, $2)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$9 }
	$0 = CALL $134($11, $0)
	CALL eosio_assert(((int_32)*($0 + [128]) == (int_32)$11), [1104])
	
.LABEL $label$10
	CALL eosio_assert([1], [768])
	CALL eosio_assert([1], [816])
	$4 = CALL db_next_i64(*($0 + [132]), ($11 + [56]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$12 }
	CALL $134($11, $4)
	
.LABEL $label$12
	CALL $138($11, $0)
	
.LABEL $label$9
	$9 = ($9 + [8])
	if ( ((int_32)$9 != (int_32)(*($11 + [44]) + $8)) ){ goto $label$6 }
	
.LABEL $label$5
	CALL $139(($11 + [24]))
	$0 = *($11 + [40])
	if ( ($0 == 0) ){ goto $label$13 }
	*($11 + [44]) = $0
	CALL $282($0)
	
.LABEL $label$13
	*([0] + [4]) = ($11 + [64])
}

int_32 .FUNC $134 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1024])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [20]) = $4
	*($8 + [16]) = $4
	*($8 + [24]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $280([144])) + [16]) = [0]
	*($6 + [8 align=4]) = (int_64)0
	*($6 + [32]) = [0]
	*($6 + [36]) = [0]
	*($6 + [40]) = [0]
	*($6 + [56]) = [0]
	*($6 + [60]) = [0]
	*($6 + [64]) = [0]
	*($6 + [80]) = [0]
	*($6 + [84]) = [0]
	*($6 + [88]) = [0]
	*($6 + [104]) = [0]
	*($6 + [108]) = [0]
	*($6 + [112]) = [0]
	*($6 + [128]) = $0
	*($8 + [32]) = ($8 + [16])
	*($8 + [44]) = ($6 + [8])
	*($8 + [40]) = $6
	*($8 + [48]) = ($6 + [32])
	*($8 + [52]) = ($6 + [56])
	*($8 + [56]) = ($6 + [80])
	*($8 + [60]) = ($6 + [104])
	CALL $144(($8 + [40]), ($8 + [32]))
	*($6 + [132]) = $1
	*($8 + [32]) = $6
	$5 = *($6)
	*($8 + [40]) = $5
	$7 = *($6 + [132])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [32]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $145(($0 + [24]), ($8 + [32]), ($8 + [40]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [32])
	*($8 + [32]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [104])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [108])) = $7
	CALL $282($7)
	
.LABEL $label$10
	$7 = *($4 + [80])
	if ( ($7 == 0) ){ goto $label$11 }
	*(($4 + [84])) = $7
	CALL $282($7)
	
.LABEL $label$11
	$7 = *($4 + [56])
	if ( ($7 == 0) ){ goto $label$12 }
	*(($4 + [60])) = $7
	CALL $282($7)
	
.LABEL $label$12
	$7 = *($4 + [32])
	if ( ($7 == 0) ){ goto $label$13 }
	*(($4 + [36])) = $7
	CALL $282($7)
	
.LABEL $label$13
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$14 }
	*(($4 + [12])) = $7
	CALL $282($7)
	
.LABEL $label$14
	CALL $282($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [64])
	return $6
}

int_32 .FUNC _Z10myfunctionii (int_32 $0, int_32 $1)
{
	return ((int_32)$0 < (int_32)$1)
}

void .FUNC $136 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	
.LOOP $label$1:
	$4 = ($1 + [-16])
	$3 = ($1 + [-8])
	
.LOOP $label$2:
	$5 = $0
	
.LOOP $label$4:
	$0 = ($1 - $5)
	$10 = int_32($0 >> [3])
	if ( ((uint_32)$10 <= (uint_32)[5]) ){ goto $label$15 }
	if ( ((int_32)$0 <= (int_32)[247]) ){ goto $label$14 }
	$9 = ($5 + (((int_32)$10 / (int_32)[2]) << [3]))
	if ( ((int_32)$0 < (int_32)[7993]) ){ goto $label$16 }
	$0 = (((int_32)$10 / (int_32)[4]) << [3])
	$8 = CALL $141($5, ($5 + $0), $9, ($9 + $0), $3, $2)
	goto $label$7 
	
.LABEL $label$16
	$0 = CALL int_32 *($9)((int_32 *($5)), (int_32 *($2)))
	$10 = CALL int_32 *($3)((int_32 *($9)), (int_32 *($2)))
	if ( ($0 == 0) ){ goto $label$19 }
	$7 = *($5)
	if ( ($10 == 0) ){ goto $label$18 }
	*($5) = *($3)
	*($3) = $7
	$8 = [1]
	goto $label$7 
	
.LABEL $label$19
	$8 = [0]
	if ( ($10 == 0) ){ goto $label$7 }
	$7 = *($9)
	*($9) = *($3)
	*($3) = $7
	$8 = [1]
	if ( (CALL int_32 *($9)((int_32 *($5)), (int_32 *($2))) == 0) ){ goto $label$7 }
	$7 = *($5)
	*($5) = *($9)
	*($9) = $7
	goto $label$17 
	
.LABEL $label$18
	*($5) = *($9)
	*($9) = $7
	$8 = [1]
	if ( (CALL int_32 *($3)((int_32 (CASTING uint_32)(uint_64 $7)), (int_32 *($2))) == 0) ){ goto $label$7 }
	$7 = *($9)
	*($9) = *($3)
	*($3) = $7
	
.LABEL $label$17
	$8 = [2]
	goto $label$7 
	
.LABEL $label$15
	goto $label$6 
	
.LABEL $label$14
	CALL $142($5, $1, $2)
	return 
	
.LABEL $label$13
	if ( (CALL int_32 *($3)((int_32 *($5)), (int_32 *($2))) == 0) ){ goto $label$6 }
	$7 = *($5)
	*($5) = *($3)
	*($3) = $7
	return 
	
.LABEL $label$12
	$9 = CALL int_32 *($5 + [8])((int_32 *($5)), (int_32 *($2)))
	$0 = CALL int_32 *($3)((int_32 *($5 + [8])), (int_32 *($2)))
	if ( ($9 == 0) ){ goto $label$9 }
	$7 = *($5)
	if ( ($0 == 0) ){ goto $label$8 }
	*($5) = *($3)
	*($3) = $7
	return 
	
.LABEL $label$11
	CALL $140($5, ($5 + [8]), ($5 + [16]), $3, $2)
	return 
	
.LABEL $label$10
	CALL $141($5, ($5 + [8]), ($5 + [16]), ($5 + [24]), $3, $2)
	return 
	
.LABEL $label$9
	if ( ($0 == 0) ){ goto $label$6 }
	$0 = ($5 + [8])
	$7 = *($0)
	*($0) = *($3)
	*($3) = $7
	if ( (CALL int_32 *($0)((int_32 *($5)), (int_32 *($2))) == 0) ){ goto $label$6 }
	$7 = *($5)
	*($5) = *($0)
	*($0) = $7
	return 
	
.LABEL $label$8
	$0 = ($5 + [8])
	*($5) = *($0)
	*($0) = $7
	if ( (CALL int_32 *($3)((int_32 (CASTING uint_32)(uint_64 $7)), (int_32 *($2))) == 0) ){ goto $label$6 }
	$7 = *($0)
	*($0) = *($3)
	*($3) = $7
	return 
	
.LABEL $label$7
	if ( CALL int_32 *($5)((int_32 *($9)), (int_32 *($2))) ){ goto $label$21 }
	$0 = $4
	
.LOOP $label$24:
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$23 }
	$10 = *($0)
	$0 = ($0 + [-8])
	if ( (CALL int_32 $10((int_32 *($9)), (int_32 *($2))) == 0) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$23
	$10 = ($5 + [8])
	if ( CALL int_32 *($5)((int_32 *($3)), (int_32 *($2))) ){ goto $label$25 }
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$6 }
	$10 = ($5 + [16])
	
.LOOP $label$27:
	$0 = ($10 + [-8])
	if ( CALL int_32 *($5)((int_32 *($0)), (int_32 *($2))) ){ goto $label$26 }
	$10 = ($10 + [8])
	if ( ((int_32)$1 != (int_32)$10) ){ goto $label$27 }
	goto $label$6 
	
.LABEL $label$26
	$7 = *($0)
	*($0) = *($3)
	*($3) = $7
	
.LABEL $label$25
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$6 }
	$9 = $3
	
.LOOP $label$28:
	$0 = ($10 + [-8])
	
.LOOP $label$29:
	$0 = ($0 + [8])
	if ( (CALL int_32 *($5)((int_32 *($0)), (int_32 *($2))) == 0) ){ goto $label$29 }
	$10 = ($0 + [8])
	
.LOOP $label$30:
	$9 = ($9 + [-8])
	if ( CALL int_32 *($5)((int_32 *($9)), (int_32 *($2))) ){ goto $label$30 }
	if ( ((uint_32)$0 >= (uint_32)$9) ){ goto $label$5 }
	$7 = *($0)
	*($0) = *($9)
	*($9) = $7
	goto $label$28 
	
.LABEL $label$22
	$7 = *($5)
	$10 = ($0 + [8])
	*($5) = *($10)
	*($10) = $7
	$8 = ($8 + [1])
	goto $label$20 
	
.LABEL $label$21
	$10 = $3
	
.LABEL $label$20
	$6 = ($5 + [8])
	if ( ((uint_32)$6 >= (uint_32)$10) ){ goto $label$31 }
	
.LOOP $label$32:
	$0 = ($6 + [-8])
	
.LOOP $label$33:
	$0 = ($0 + [8])
	if ( CALL int_32 *($0)((int_32 *($9)), (int_32 *($2))) ){ goto $label$33 }
	$6 = ($0 + [8])
	
.LOOP $label$34:
	$10 = ($10 + [-8])
	if ( (CALL int_32 *($10)((int_32 *($9)), (int_32 *($2))) == 0) ){ goto $label$34 }
	if ( ((uint_32)$0 > (uint_32)$10) ){ goto $label$35 }
	$7 = *($0)
	*($0) = *($10)
	*($10) = $7
	$9 = ( $10 ? $9 : ((int_32)$9 == (int_32)$0) )
	$8 = ($8 + [1])
	goto $label$32 
	
.LABEL $label$35
	$6 = $0
	
.LABEL $label$31
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$36 }
	if ( (CALL int_32 *($9)((int_32 *($6)), (int_32 *($2))) == 0) ){ goto $label$36 }
	$7 = *($6)
	*($6) = *($9)
	*($9) = $7
	$8 = ($8 + [1])
	
.LABEL $label$36
	if ( $8 ){ goto $label$38 }
	$9 = CALL $143($5, $6, $2)
	$0 = ($6 + [8])
	if ( CALL $143($0, $1, $2) ){ goto $label$37 }
	if ( $9 ){ goto $label$2 }
	
.LABEL $label$38
	if ( ((int_32)($6 - $5) >= (int_32)($1 - $6)) ){ goto $label$3 }
	CALL $136($5, $6, $2)
	$0 = ($6 + [8])
	goto $label$2 
	
.LABEL $label$37
	$1 = $6
	$0 = $5
	if ( ($9 == 0) ){ goto $label$1 }
	
.LABEL $label$6
	return 
	
.LABEL $label$5
	$5 = $0
	goto $label$4 
	
.LABEL $label$3
	CALL $136(($6 + [8]), $1, $2)
	$1 = $6
	$0 = $5
	goto $label$1 
	$10
}

void .FUNC $137 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$3 = int_32(($6 - $5) >> [3])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[536870912]) ){ goto $label$3 }
	$4 = [536870911]
	$2 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$5 }
	$4 = int_32($2 >> [2])
	$4 = ( $7 ? $4 : ($4 <= $7) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $280(($4 << [3]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $298($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($3 << [3])))) = *($1)
	$6 = ($6 - $5)
	$1 = ($3 - $6)
	$4 = ($7 + ($4 << [3]))
	$7 = ($3 + [8])
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $5, $6)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $282($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC _ZN6NiuNiu11clearbklistEy (int_32 $0, int_64 $1)
{
	CALL require_auth($1)
	CALL eosio_assert(((int_64)*($0) == (int_64)$1), [736])
	CALL _ZN6NiuNiu16_clearbankerlistEv($0)
}

int_32 .FUNC $300 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $280($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $208 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1296])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1296])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1296])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$2 = *($0 + [16])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [1296])
	CALL memcpy(*($0 + [4]), $2, [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
}

void .FUNC $209 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [48])
	$9 = $10
	*([0] + [4]) = $10
	$3 = *($0 + [4])
	*($1 + [24]) = *(*($3))
	*($1 + [12]) = *(*($3 + [4]))
	$5 = ($1 + [12])
	$4 = ($1 + [24])
	$2 = *($0)
	$6 = *($3 + [8])
	$8 = *($6 + [16])
	if ( ((int_64)$8 != (int_64)-1) ){ goto $label$1 }
	$8 = (int_64)0
	$7 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)4229753268491780096, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	CALL $115($6, $7)
	*($9 + [28]) = [0]
	*($9 + [24]) = $6
	$8 = *(*(CALL $210(($9 + [24])) + [4]))
	$8 = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($6 + [16])) = $8
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($8 <= (int_64)-2), [3392])
	*($1) = *(($6 + [16]))
	*($1 + [8]) = *(*($3 + [12]))
	*($1 + [16]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$6 = $10
	$3 = ($6 + [-32])
	*([0] + [4]) = $3
	*($9 + [4]) = $3
	*($9) = $3
	*($9 + [8]) = ($6 + [-4])
	*($9 + [16]) = $9
	*($9 + [28]) = ($1 + [8])
	*($9 + [24]) = $1
	*($9 + [32]) = $5
	*($9 + [36]) = ($1 + [16])
	*($9 + [40]) = $4
	CALL $211(($9 + [24]), ($9 + [16]))
	$8 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($2 + [8]), (int_64)4229753268491780096, *(*($0 + [8])), $8, $3, [28])
	if ( (uint_64)($8 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($9 + [48])
}

void .FUNC _ZN6NiuNiu4_betEyRKN5eosio5assetERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	float_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [160])
	*([0] + [4]) = $12
	CALL prints([3136])
	CALL prints([2752])
	CALL printn($1)
	CALL prints([3152])
	$10 = *($3)
	$11 = ($10 & [1])
	$4 = ($3 + [1])
	CALL prints_l(( *($3 + [8]) ? $4 : $11 ), ( *($3 + [4]) ? uint_32($10 >> [1]) : $11 ))
	CALL prints([560])
	CALL _ZN6NiuNiu11_getbetinfoEy(($12 + [136]), $0, $1)
	CALL _ZN6NiuNiu11_getgamectxEv(($12 + [40]), $0)
	$9 = *($2)
	if ( ((uint_64)*($12 + [52]) >= (uint_64)((int_64)(CASTING uint_64)(uint_32 (((*($12 + [56]) + *($12 + [48])) + *($12 + [60])) + *($12 + [64]))) + (int_64)$9)) ){ goto $label$10 }
	*(($12 + [24])) = [0]
	*($12 + [16]) = (int_64)0
	$10 = CALL strlen([3168])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$9 }
	*($12 + [16]) = ($10 << [1])
	$3 = (($12 + [16]) | [1])
	if ( $10 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$10
	$8 = CALL floor((CASTING float_64)(int_64 ((int_64)$9 / (int_64)5)))
	CALL prints([3200])
	CALL prints([2752])
	CALL printn($1)
	CALL prints([3232])
	CALL printi((int_64)762)
	CALL prints([560])
	*($12 + [24]) = (int_64)1263489028
	$6 = (CASTING int_32)(float_64 $8)
	$7 = ((int_64)(CASTING int_64)(int_32 $6) * (int_64)20)
	*($12 + [16]) = $7
	CALL eosio_assert((uint_64)(((int_64)$7 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1872])
	$9 = (int_64)4935504
	$10 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$11 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$11 = [0]
	
.LABEL $label$11
	CALL eosio_assert($11, [1840])
	*($12 + [32]) = (int_64)0
	CALL prints([3200])
	CALL prints([2752])
	CALL printn($1)
	CALL prints([3248])
	CALL printi($7)
	CALL printi((int_64)764)
	CALL prints([560])
	*(($12 + [8])) = [0]
	*($12) = (int_64)0
	$10 = CALL strlen([3264])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$6 }
	*($12) = ($10 << [1])
	$11 = ($12 | [1])
	if ( $10 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$9
	$11 = (($10 + [16]) & [-16])
	$3 = CALL $280($11)
	*($12 + [16]) = ($11 | [1])
	*($12 + [24]) = $3
	*($12 + [20]) = $10
	
.LABEL $label$8
	CALL memcpy($3, [3168], $10)
	
.LABEL $label$7
	*(($3 + $10)) = [0]
	CALL _ZN6NiuNiu8_backeosEyRKN5eosio5assetERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($0, $1, $2, ($12 + [16]))
	if ( ((*($12 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $282(*($12 + [24]))
	goto $label$3 
	
.LABEL $label$6
	$5 = (($10 + [16]) & [-16])
	$11 = CALL $280($5)
	*($12) = ($5 | [1])
	*($12 + [8]) = $11
	*($12 + [4]) = $10
	
.LABEL $label$5
	CALL memcpy($11, [3264], $10)
	
.LABEL $label$4
	*(($11 + $10)) = [0]
	CALL _ZN6NiuNiu12_backmytokenEyRKN5eosio5assetERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE($0, $1, ($12 + [16]), $12)
	if ( ((*($12) & [1]) == 0) ){ goto $label$16 }
	CALL $282(*($12 + [8]))
	
.LABEL $label$16
	CALL prints([3200])
	CALL prints([2752])
	CALL printn($1)
	CALL prints([3248])
	CALL printi(*($12 + [16]))
	CALL printi((int_64)766)
	CALL prints([560])
	$10 = *($3)
	$11 = ($3 + [4])
	$5 = CALL strlen([3040])
	if ( ((int_32)$5 != (int_32)( *($11) ? uint_32($10 >> [1]) : ($10 & [1]) )) ){ goto $label$21 }
	if ( (CALL $294($3, [0], [-1], [3040], $5) == 0) ){ goto $label$20 }
	
.LABEL $label$21
	$10 = *($3)
	$5 = CALL strlen([3056])
	if ( ((int_32)$5 != (int_32)( *($11) ? uint_32($10 >> [1]) : ($10 & [1]) )) ){ goto $label$22 }
	if ( (CALL $294($3, [0], [-1], [3056], $5) == 0) ){ goto $label$19 }
	
.LABEL $label$22
	$10 = *($3)
	$11 = ($3 + [4])
	$5 = CALL strlen([3072])
	if ( ((int_32)$5 != (int_32)( *($11) ? uint_32($10 >> [1]) : ($10 & [1]) )) ){ goto $label$23 }
	if ( (CALL $294($3, [0], [-1], [3072], $5) == 0) ){ goto $label$18 }
	
.LABEL $label$23
	$10 = *($3)
	$5 = CALL strlen([3088])
	if ( ((int_32)$5 != (int_32)( *($11) ? uint_32($10 >> [1]) : ($10 & [1]) )) ){ goto $label$17 }
	if ( CALL $294($3, [0], [-1], [3088], $5) ){ goto $label$17 }
	$9 = *($2)
	*(($10 = ($12 + [64]))) = ((int_64)*($10) + (int_64)$9)
	*($12 + [156]) = ((int_64)$9 + (int_64)*($12 + [156]))
	CALL _ZN6NiuNiu10_addbetlogEymm($0, $1, [4], $6)
	goto $label$17 
	
.LABEL $label$20
	$9 = *($2)
	*($12 + [144]) = ((int_64)*($12 + [144]) + (int_64)$9)
	*(($10 = ($12 + [48]))) = ((int_64)$9 + (int_64)*($10))
	CALL _ZN6NiuNiu10_addbetlogEymm($0, $1, [1], $6)
	goto $label$17 
	
.LABEL $label$19
	$9 = *($2)
	*(($10 = ($12 + [56]))) = ((int_64)*($10) + (int_64)$9)
	*($12 + [148]) = ((int_64)$9 + (int_64)*($12 + [148]))
	CALL _ZN6NiuNiu10_addbetlogEymm($0, $1, [2], $6)
	goto $label$17 
	
.LABEL $label$18
	$9 = *($2)
	*(($10 = ($12 + [60]))) = ((int_64)*($10) + (int_64)$9)
	*($12 + [152]) = ((int_64)$9 + (int_64)*($12 + [152]))
	CALL _ZN6NiuNiu10_addbetlogEymm($0, $1, [3], $6)
	
.LABEL $label$17
	CALL prints([3136])
	CALL prints([2752])
	CALL printn($1)
	CALL prints([3152])
	$10 = *($3)
	$2 = ($10 & [1])
	CALL prints_l(( *(($3 + [8])) ? $4 : $2 ), ( *(($3 + [4])) ? uint_32($10 >> [1]) : $2 ))
	CALL prints([3280])
	CALL printui(*($12 + [144]))
	CALL prints([560])
	CALL _ZN6NiuNiu10_bindfanliEym($0, $1, $6)
	CALL eosio_assert(((int_64)*($12 + [40]) != (int_64)0), [1408])
	CALL $69(($0 + [8]), ($12 + [40]), *($0))
	CALL _ZN6NiuNiu14_updatebetinfoERK7betinfo($0, ($12 + [136]))
	
.LABEL $label$3
	if ( ((*($12 + [80]) & [1]) == 0) ){ goto $label$24 }
	CALL $282(*(($12 + [88])))
	
.LABEL $label$24
	if ( ((*($12 + [68]) & [1]) == 0) ){ goto $label$25 }
	CALL $282(*(($12 + [76])))
	
.LABEL $label$25
	*([0] + [4]) = ($12 + [160])
	return (unreachable)
	
.LABEL $label$2
	CALL $284(($12 + [16]))
	
.LABEL $label$1
	CALL $284($12)
	(unreachable)
}

void .FUNC _ZN6NiuNiu11_getbetinfoEy (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [128])
	*([0] + [4]) = $7
	$4 = [0]
	*(($7 + [40])) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$5 = *($1)
	*($7 + [8]) = $5
	*($7 + [16]) = $5
	$3 = CALL db_find_i64($5, $5, (int_64)4229699935735382016, $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $112(($7 + [8]), $3)
	CALL eosio_assert(((int_32)*($4 + [24]) == (int_32)($7 + [8])), [1104])
	
.LABEL $label$1
	*($0) = (int_64)0
	*($0 + [8]) = (int_64)0
	*($0 + [16]) = (int_64)0
	if ( ($4 == 0) ){ goto $label$4 }
	*($0) = *($4)
	*(($0 + [8])) = *($4 + [8])
	*(($0 + [12])) = *($4 + [12])
	*(($0 + [16])) = *($4 + [16])
	*(($0 + [20])) = *($4 + [20])
	$1 = *($7 + [32])
	if ( $1 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	*($0) = $2
	$6 = *($1)
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$13()), [1232])
	*(($0 = CALL $280([40])) + [24]) = ($7 + [8])
	*($0) = $2
	*($0 + [8]) = (int_64)0
	*($0 + [16]) = (int_64)0
	*($7 + [88]) = (($7 + [48]) + [24])
	*($7 + [84]) = ($7 + [48])
	*($7 + [80]) = ($7 + [48])
	*($7 + [96]) = ($7 + [80])
	*($7 + [108]) = ($0 + [8])
	*($7 + [104]) = $0
	*($7 + [112]) = ($0 + [12])
	*($7 + [116]) = ($0 + [16])
	*($7 + [120]) = ($0 + [20])
	CALL $208(($7 + [104]), ($7 + [96]))
	$5 = *($0)
	$1 = CALL db_store_i64(*((($7 + [8]) + [8])), (int_64)4229699935735382016, $6, $5, ($7 + [48]), [24])
	*($0 + [28]) = $1
	$4 = (($7 + [8]) + [16])
	if ( (uint_64)($5 <= *($4)) ){ goto $label$5 }
	*($4) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($7 + [104]) = $0
	$5 = *($0)
	*($7 + [48]) = $5
	*($7 + [80]) = $1
	$3 = ($7 + [36])
	$4 = *($3)
	if ( ((uint_32)$4 >= (uint_32)*(($7 + [40]))) ){ goto $label$7 }
	*($4 + [8]) = $5
	*($4 + [16]) = $1
	*($7 + [104]) = [0]
	*($4) = $0
	*($3) = ($4 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $120(($7 + [32]), ($7 + [104]), ($7 + [48]), ($7 + [80]))
	
.LABEL $label$6
	$0 = *($7 + [104])
	*($7 + [104]) = [0]
	if ( ($0 == 0) ){ goto $label$8 }
	CALL $282($0)
	
.LABEL $label$8
	$1 = *($7 + [32])
	if ( ($1 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = ($7 + [36])
	$0 = *($3)
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$10 }
	
.LOOP $label$11:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$12 }
	CALL $282($4)
	
.LABEL $label$12
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$11 }
	$0 = *(($7 + [32]))
	goto $label$9 
	
.LABEL $label$10
	$0 = $1
	
.LABEL $label$9
	*($3) = $1
	CALL $282($0)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [128])
}

void .FUNC _ZN6NiuNiu10_addbankerEyRKN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [96])
	*([0] + [4]) = $9
	*(($4 = (($9 + [8]) + [32]))) = [0]
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	$5 = *($0)
	*($9 + [8]) = $5
	*($9 + [16]) = $5
	$6 = CALL _ZN6NiuNiu6_genidEv($0)
	$7 = *($0)
	CALL eosio_assert(((int_64)$5 == (int_64)CALL $fimport$13()), [1232])
	*(($0 = CALL $280([32])) + [20]) = ($9 + [8])
	*($0 + [8]) = $6
	*($0) = $1
	*($0 + [16]) = *($2)
	CALL eosio_assert([1], [1296])
	CALL memcpy(($9 + [64]), $0, [8])
	CALL eosio_assert([1], [1296])
	CALL memcpy((($9 + [64]) | [8]), ($0 + [8]), [8])
	CALL eosio_assert([1], [1296])
	CALL memcpy((($9 + [64]) + [16]), ($0 + [16]), [4])
	$5 = *($0)
	$3 = CALL db_store_i64(*($9 + [16]), (int_64)4154295083342381056, $7, $5, ($9 + [64]), [20])
	*($0 + [24]) = $3
	if ( (uint_64)($5 <= *($9 + [24])) ){ goto $label$1 }
	*((($9 + [8]) + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($9 + [56]) = $0
	$5 = *($0)
	*($9 + [64]) = $5
	*($9 + [52]) = $3
	$8 = ($9 + [36])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*($4)) ){ goto $label$3 }
	*($2 + [8]) = $5
	*($2 + [16]) = $3
	*($9 + [56]) = [0]
	*($2) = $0
	*($8) = ($2 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $108(($9 + [32]), ($9 + [56]), ($9 + [64]), ($9 + [52]))
	
.LABEL $label$2
	$0 = *($9 + [56])
	*($9 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$4 }
	CALL $282($0)
	
.LABEL $label$4
	$3 = *($9 + [32])
	if ( ($3 == 0) ){ goto $label$5 }
	$4 = ($9 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$7 }
	
.LOOP $label$8:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$9 }
	CALL $282($2)
	
.LABEL $label$9
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$8 }
	$0 = *(($9 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$0 = $3
	
.LABEL $label$6
	*($4) = $3
	CALL $282($0)
	
.LABEL $label$5
	*([0] + [4]) = ($9 + [96])
}

void .FUNC _ZN6NiuNiu10_setbankerEyRKN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [128])
	*([0] + [4]) = $9
	CALL prints([2128])
	CALL printi((int_64)793)
	CALL prints([560])
	$3 = ($0 + [8])
	$5 = *(($0 + [36]))
	if ( ((int_32)$5 == (int_32)*(($0 + [32]))) ){ goto $label$5 }
	$5 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [96]) == (int_32)$3), [1104])
	if ( $5 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$5 = CALL db_find_i64(*($3), *(($0 + [16])), (int_64)7035929282832498688, (int_64)7035929282832498688)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert(((int_32)*(CALL $62($3, $5) + [96]) == (int_32)$3), [1104])
	goto $label$3 
	
.LABEL $label$4
	*($9 + [120]) = $1
	*(($9 + [60])) = [0]
	*($9 + [24]) = (int_64)0
	*($9 + [32]) = (int_64)0
	*($9 + [40]) = (int_64)0
	*($9 + [48]) = [0]
	*($9 + [52 align=4]) = (int_64)0
	$4 = ($9 + [52])
	$5 = CALL strlen([224])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$8 }
	*(($9 + [52])) = ($5 << [1])
	$8 = ($4 + [1])
	if ( $5 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$6 = (($5 + [16]) & [-16])
	$8 = CALL $280($6)
	*(($9 + [52])) = ($6 | [1])
	*(($9 + [60])) = $8
	*(($9 + [56])) = $5
	
.LABEL $label$7
	CALL memcpy($8, [224], $5)
	
.LABEL $label$6
	*(($8 + $5)) = [0]
	*(($9 + [72])) = [0]
	*($9 + [64]) = (int_64)0
	$6 = ($9 + [64])
	$5 = CALL strlen([224])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$11 }
	*(($9 + [64])) = ($5 << [1])
	$8 = ($6 + [1])
	if ( $5 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$7 = (($5 + [16]) & [-16])
	$8 = CALL $280($7)
	*(($9 + [64])) = ($7 | [1])
	*(($9 + [72])) = $8
	*(($9 + [68])) = $5
	
.LABEL $label$10
	CALL memcpy($8, [224], $5)
	
.LABEL $label$9
	*(($8 + $5)) = [0]
	*($9 + [96]) = (int_64)0
	*($9 + [88]) = (int_64)0
	*($9 + [104]) = (int_64)0
	*($9 + [112]) = (int_64)0
	*($9 + [24]) = $1
	*($9 + [80]) = (int_64)1
	CALL $106(($9 + [8]), ($9 + [120]))
	$5 = ($9 + [52])
	if ( (*($5) & [1]) ){ goto $label$13 }
	*($5) = [0]
	goto $label$12 
	
.LABEL $label$13
	*(*(($9 + [60]))) = [0]
	*(($9 + [56])) = [0]
	
.LABEL $label$12
	CALL $287($4, [0])
	*(($4 + [8])) = *((($9 + [8]) + [8]))
	*($4) = *($9 + [8])
	*(($9 + [36])) = *($2)
	*(($9 + [88])) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL $288($6, [1344])
	*(($9 + [40])) = [0]
	*((($9 + [24]) + [8])) = [0]
	*(($9 + [44])) = [0]
	*(($9 + [48])) = [0]
	*(($9 + [96])) = ((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) + (int_64)43) & (int_64)4294967295)
	*(($5 = ($9 + [104]))) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*(($9 + [112])) = CALL _ZN6NiuNiu6_genidEv($0)
	CALL eosio_assert(((int_64)*($9 + [24]) != (int_64)0), [1408])
	CALL $69($3, ($9 + [24]), *($0))
	CALL _ZN6NiuNiu11_starttimerEyy($0, *($5), (int_64)43)
	if ( ((*(($9 + [64])) & [1]) == 0) ){ goto $label$14 }
	CALL $282(*(($9 + [72])))
	
.LABEL $label$14
	if ( ((*(($9 + [52])) & [1]) == 0) ){ goto $label$3 }
	CALL $282(*(($9 + [60])))
	
.LABEL $label$3
	*([0] + [4]) = ($9 + [128])
	return (unreachable)
	
.LABEL $label$2
	CALL $284($4)
	
.LABEL $label$1
	CALL $284($6)
	(unreachable)
}

void .FUNC _ZN6NiuNiu10_bindfanliEym (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	float_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [144])
	*([0] + [4]) = $8
	CALL _ZN6NiuNiu14_getconfiginfoEv(($8 + [96]), $0)
	if ( (int_64)(*($8 + [120]) == 0) ){ goto $label$1 }
	*($8 + [88]) = $1
	CALL $106(($8 + [72]), ($8 + [88]))
	*(($8 + [64])) = [0]
	*($8 + [48]) = (int_64)-1
	*($8 + [56]) = (int_64)0
	$4 = *($0)
	*($8 + [32]) = $4
	*($8 + [40]) = $4
	$3 = CALL db_find_i64($4, $4, (int_64)4298289253286150144, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $55(($8 + [32]), $3)
	CALL eosio_assert(((int_32)*($3 + [16]) == (int_32)($8 + [32])), [1104])
	$5 = CALL floor((CASTING float_64)(uint_32 ((uint_32)($2 << [2]) / (uint_32)[1000])))
	CALL prints([3296])
	CALL prints([3312])
	CALL printui(*($3 + [8]))
	CALL prints([3328])
	$6 = (CASTING int_32)(float_64 $5)
	$4 = (CASTING uint_64)(uint_32 $6)
	CALL printui($4)
	CALL prints([3344])
	CALL printui((CASTING uint_64)(uint_32 $2))
	CALL prints([3360])
	$2 = *($8 + [72])
	$7 = ($2 & [1])
	CALL prints_l(( *($8 + [80]) ? (($8 + [72]) | [1]) : $7 ), ( *($8 + [76]) ? uint_32($2 >> [1]) : $7 ))
	if ( ($6 == 0) ){ goto $label$2 }
	$1 = *(($3 + [8]))
	CALL $295($8, [3376], ($8 + [72]))
	$2 = CALL $290($8, [3264])
	$3 = ($2 + [8])
	*((($8 + [16]) + [8])) = *($3)
	*($8 + [16]) = *($2)
	*($2) = [0]
	*(($2 + [4])) = [0]
	*($3) = [0]
	CALL _ZN6NiuNiu14_simplebackeosEyyRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0, $1, $4, ($8 + [16]))
	if ( ((*($8 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $282(*($8 + [24]))
	
.LABEL $label$3
	if ( ((*($8) & [1]) == 0) ){ goto $label$2 }
	CALL $282(*($8 + [8]))
	
.LABEL $label$2
	$3 = *($8 + [56])
	if ( ($3 == 0) ){ goto $label$4 }
	$6 = ($8 + [60])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$8 }
	CALL $282($2)
	
.LABEL $label$8
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($8 + [56]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $3
	
.LABEL $label$5
	*($6) = $3
	CALL $282($0)
	
.LABEL $label$4
	if ( ((*($8 + [72]) & [1]) == 0) ){ goto $label$1 }
	CALL $282(*($8 + [80]))
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [144])
}

void .FUNC _ZN6NiuNiu14_updatebetinfoERK7betinfo (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [128])
	*([0] + [4]) = $6
	*(($6 + [40])) = [0]
	*($6 + [24]) = (int_64)-1
	*($6 + [32]) = (int_64)0
	$2 = *($0)
	*($6 + [8]) = $2
	*($6 + [16]) = $2
	$5 = CALL db_find_i64($2, $2, (int_64)4229699935735382016, *($1))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $112(($6 + [8]), $5)
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)($6 + [8])), [1104])
	$3 = *($0)
	CALL eosio_assert([1], [1472])
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)($6 + [8])), [1520])
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)CALL $fimport$13()), [1568])
	*($5 + [8]) = *($1 + [8])
	*($5 + [12]) = *($1 + [12])
	*($5 + [16]) = *($1 + [16])
	$2 = *($5)
	*($5 + [20]) = *($1 + [20])
	CALL eosio_assert([1], [1632])
	*($6 + [88]) = (($6 + [48]) + [24])
	*($6 + [84]) = ($6 + [48])
	*($6 + [80]) = ($6 + [48])
	*($6 + [96]) = ($6 + [80])
	*($6 + [108]) = ($5 + [8])
	*($6 + [104]) = $5
	*($6 + [112]) = ($5 + [12])
	*($6 + [116]) = ($5 + [16])
	*($6 + [120]) = ($5 + [20])
	CALL $208(($6 + [104]), ($6 + [96]))
	CALL db_update_i64(*($5 + [28]), $3, ($6 + [48]), [24])
	$5 = (($6 + [8]) + [16])
	if ( (uint_64)($2 <= *($5)) ){ goto $label$1 }
	*($5) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$0 = *($6 + [32])
	if ( ($0 == 0) ){ goto $label$2 }
	$4 = ($6 + [36])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = ($5 + [-24])
	$1 = *($5)
	*($5) = [0]
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $282($1)
	
.LABEL $label$6
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$5 }
	$5 = *(($6 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$5 = $0
	
.LABEL $label$3
	*($4) = $0
	CALL $282($5)
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [128])
}

void .FUNC _ZN6NiuNiu12_backmytokenEyRKN5eosio5assetERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [272])
	*([0] + [4]) = $14
	CALL prints([2128])
	CALL printi((int_64)1021)
	CALL prints([560])
	CALL _ZN6NiuNiu14_getconfiginfoEv(($14 + [184]), $0)
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [3568]
	$12 = (int_64)0
	
.LOOP $label$1:
	$13 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$2 }
	$4 = *($9)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$4 = ($4 + [165])
	goto $label$3 
	
.LABEL $label$4
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$2
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$1 }
	*(($14 + [176])) = [0]
	*($14 + [144]) = $12
	*($14 + [160]) = (int_64)-1
	*($14 + [168]) = (int_64)0
	*($14 + [152]) = *($0)
	CALL prints([2128])
	CALL printi((int_64)1025)
	CALL prints([560])
	$11 = (uint_64)(int_64)1263489024 >> (uint_64)(int_64)8)
	$5 = *($14 + [168])
	$8 = *(($14 + [172]))
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$5 }
	$9 = ($8 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$6:
	if ( ((int_64)(uint_64)*(*($9) + [8]) >> (uint_64)(int_64)8) == (int_64)$11) ){ goto $label$5 }
	$8 = $9
	$4 = ($9 + [-24])
	$9 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$10 }
	$9 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [16]) == (int_32)($14 + [144])), [1104])
	if ( $9 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$9 = CALL db_find_i64(*($14 + [144]), *(($14 + [152])), (int_64)3607749779137757184, $11)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert(((int_32)*(CALL $123(($14 + [144]), $9) + [16]) == (int_32)($14 + [144])), [1104])
	
.LABEL $label$9
	$9 = CALL $124(($14 + [144]), $11, [2000])
	CALL $212($9)
	if ( ((int_64)*($14 + [216]) != (int_64)1) ){ goto $label$8 }
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)*($2 + [8])), [3584])
	if ( ((int_64)*($9) < (int_64)*($2)) ){ goto $label$8 }
	$11 = CALL current_time()
	*(($14 + [108])) = [0]
	*(($14 + [112])) = [0]
	*($14 + [92]) = [0]
	*($14 + [96]) = [0]
	*($14 + [100]) = [0]
	*($14 + [104]) = [0]
	*($14 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$11 / (uint_64)(int_64)1000000)) + [60])
	*($14 + [116]) = [0]
	*(($14 + [120])) = [0]
	*(($14 + [124])) = [0]
	*($14 + [128]) = [0]
	*(($14 + [132])) = [0]
	*(($14 + [136])) = [0]
	$5 = ($14 + [116])
	$7 = *($0)
	$11 = (int_64)0
	$13 = (int_64)59
	$9 = [1424]
	$12 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$16 }
	$4 = *($9)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$4 = ($4 + [165])
	goto $label$14 
	
.LABEL $label$16
	$10 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$12
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$10 | (int_64)$12)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$11 }
	*($14 + [72]) = $12
	*($14 + [64]) = $7
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [3568]
	$12 = (int_64)0
	
.LOOP $label$17:
	$13 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$18 }
	$4 = *($9)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$4 = ($4 + [165])
	goto $label$19 
	
.LABEL $label$20
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$18
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$17 }
	*($14 + [56]) = $12
	$11 = (int_64)0
	$13 = (int_64)59
	$9 = [672]
	$12 = (int_64)0
	
.LOOP $label$21:
	if ( ((uint_64)$11 > (uint_64)(int_64)7) ){ goto $label$26 }
	$4 = *($9)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$25 }
	$4 = ($4 + [165])
	goto $label$24 
	
.LABEL $label$26
	$10 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$25
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$24
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$23
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$22
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$10 | (int_64)$12)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$21 }
	*($14 + [48]) = $12
	*(($14 + [28])) = *(($2 + [12]))
	*(($14 + [24])) = *(($2 + [8]))
	*(($14 + [20])) = *(($2 + [4]))
	*($14 + [8]) = $1
	*($14) = $7
	*($14 + [16]) = *($2)
	$9 = *($3 + [8])
	$4 = *($3)
	*(($14 + [40])) = [0]
	*($14 + [32]) = (int_64)0
	$8 = ($14 + [32])
	$6 = ( $9 ? ($3 + [1]) : ($4 & [1]) )
	$9 = CALL strlen($6)
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$29 }
	*(($14 + [32])) = ($9 << [1])
	$4 = ($8 + [1])
	if ( $9 ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	$2 = (($9 + [16]) & [-16])
	$4 = CALL $280($2)
	*(($14 + [32])) = ($2 | [1])
	*(($14 + [40])) = $4
	*(($14 + [36])) = $9
	
.LABEL $label$28
	CALL memcpy($4, $6, $9)
	
.LABEL $label$27
	*(($4 + $9)) = [0]
	$4 = *(($14 + [120]))
	if ( ((uint_32)$4 >= (uint_32)*(($14 + [124]))) ){ goto $label$33 }
	$6 = ($14 + [16])
	$5 = ($14 + [8])
	*($4 + [8]) = *($14 + [48])
	*($4) = *($14 + [56])
	*($4 + [16 align=4]) = (int_64)0
	*(($2 = ($4 + [24]))) = [0]
	$9 = CALL $280([16])
	*($4 + [16]) = $9
	$3 = ($9 + [16])
	*($2) = $3
	*(($9 + [8])) = *((($14 + [64]) + [8]))
	*($9) = *($14 + [64])
	*(($4 + [20])) = $3
	*($4 + [28]) = [0]
	*(($4 + [32])) = [0]
	*(($4 + [36])) = [0]
	$9 = *(($14 + [32]))
	$2 = ( *(($14 + [36])) ? uint_32($9 >> [1]) : ($9 & [1]) )
	$9 = ($2 + [32])
	$11 = (CASTING uint_64)(uint_32 $2)
	$2 = ($4 + [28])
	
.LOOP $label$34:
	$9 = ($9 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$34 }
	if ( ($9 == 0) ){ goto $label$32 }
	CALL $77($2, $9)
	$2 = *(($4 + [32]))
	$9 = *(($4 + [28]))
	goto $label$31 
	
.LABEL $label$33
	CALL $111($5, ($14 + [64]), ($14 + [56]), ($14 + [48]), $14)
	goto $label$30 
	
.LABEL $label$32
	$2 = [0]
	$9 = [0]
	
.LABEL $label$31
	*($14 + [236]) = $9
	*($14 + [232]) = $9
	*($14 + [240]) = $2
	*($14 + [248]) = ($14 + [232])
	*($14 + [260]) = $5
	*($14 + [264]) = $6
	*($14 + [268]) = $8
	*($14 + [256]) = $14
	CALL $110(($14 + [256]), ($14 + [248]))
	*(($9 = (($14 + [80]) + [40]))) = (*($9) + [40])
	
.LABEL $label$30
	if ( ((*(($14 + [32])) & [1]) == 0) ){ goto $label$35 }
	CALL $282(*(($14 + [40])))
	
.LABEL $label$35
	*(($14 + [100])) = [0]
	$1 = CALL _ZN6NiuNiu13_getglobalcntEv($0)
	*($14) = $1
	$11 = (int_64)0
	$13 = (int_64)59
	$9 = [1456]
	$12 = (int_64)0
	
.LOOP $label$36:
	if ( ((uint_64)$11 > (uint_64)(int_64)9) ){ goto $label$41 }
	$4 = *($9)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$40 }
	$4 = ($4 + [165])
	goto $label$39 
	
.LABEL $label$41
	$10 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$40
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$39
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$38
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$37
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$10 | (int_64)$12)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$36 }
	*($14) = ((int_64)( $12 ? (int_64)1 : (int_64)($1 == 0) ) + (int_64)$1)
	CALL $73(($0 + [88]), $14, *($0))
	$11 = *($14)
	*($14 + [8]) = (int_64)0
	*($14) = $11
	$11 = *($0)
	CALL $74(($14 + [256]), ($14 + [80]))
	$9 = *($14 + [256])
	CALL send_deferred($14, $11, $9, (*($14 + [260]) - $9), [0])
	$9 = *($14 + [256])
	if ( ($9 == 0) ){ goto $label$42 }
	*($14 + [260]) = $9
	CALL $282($9)
	
.LABEL $label$42
	CALL $75(($14 + [80]))
	
.LABEL $label$8
	$8 = *($14 + [168])
	if ( ($8 == 0) ){ goto $label$43 }
	$6 = ($14 + [172])
	$9 = *($6)
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$45 }
	
.LOOP $label$46:
	$9 = ($9 + [-24])
	$4 = *($9)
	*($9) = [0]
	if ( ($4 == 0) ){ goto $label$47 }
	CALL $282($4)
	
.LABEL $label$47
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$46 }
	$9 = *(($14 + [168]))
	goto $label$44 
	
.LABEL $label$45
	$9 = $8
	
.LABEL $label$44
	*($6) = $8
	CALL $282($9)
	
.LABEL $label$43
	*([0] + [4]) = ($14 + [272])
	return (unreachable)
	
.LABEL $label$7
	CALL $284($8)
}

void .FUNC _ZN6NiuNiu10_addbetlogEymm (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [112])
	*([0] + [4]) = $6
	*($6 + [64]) = $1
	*($6 + [60]) = $2
	*($6 + [56]) = $3
	*(($2 = ($6 + [48]))) = [0]
	*($6 + [32]) = (int_64)-1
	*($6 + [40]) = (int_64)0
	$1 = *($0)
	*($6 + [16]) = $1
	*($6 + [24]) = $1
	*($6 + [4]) = ($6 + [56])
	*($6) = ($6 + [64])
	*($6 + [8]) = ($6 + [16])
	*($6 + [12]) = ($6 + [60])
	*($6 + [104]) = $1
	CALL eosio_assert(((int_64)$1 == (int_64)CALL $fimport$13()), [1232])
	*($6 + [84]) = $6
	*($6 + [80]) = ($6 + [16])
	*($6 + [88]) = ($6 + [104])
	*(($0 = CALL $280([48])) + [16]) = [0]
	*($0 + [8]) = (int_64)0
	*($0 + [24]) = (int_64)0
	*($0 + [32]) = ($6 + [16])
	CALL $209(($6 + [80]), $0)
	*($6 + [96]) = $0
	$1 = *($0)
	*($6 + [80]) = $1
	$4 = *($0 + [36])
	*($6 + [76]) = $4
	$5 = ($6 + [44])
	$3 = *($5)
	if ( ((uint_32)$3 >= (uint_32)*($2)) ){ goto $label$2 }
	*($3 + [8]) = $1
	*($3 + [16]) = $4
	*($6 + [96]) = [0]
	*($3) = $0
	*($5) = ($3 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $118(($6 + [40]), ($6 + [96]), ($6 + [80]), ($6 + [76]))
	
.LABEL $label$1
	$0 = *($6 + [96])
	*($6 + [96]) = [0]
	if ( ($0 == 0) ){ goto $label$3 }
	CALL $282($0)
	
.LABEL $label$3
	$2 = *($6 + [40])
	if ( ($2 == 0) ){ goto $label$4 }
	$4 = ($6 + [44])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL $282($3)
	
.LABEL $label$8
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($6 + [40]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $2
	
.LABEL $label$5
	*($4) = $2
	CALL $282($0)
	
.LABEL $label$4
	*([0] + [4]) = ($6 + [112])
}

void .FUNC _Z16symbol_to_stringRKN5eosio5assetE (int_32 $0, int_32 $1)
{
	int_64 $2
	*($0) = (int_64)0
	*($0 + [8]) = [0]
	$2 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	if ( (int_64)($2) == 0) ){ goto $label$1 }
	
.LOOP $label$2:
	CALL $291($0, int_32(((CASTING uint_32)(uint_64 $2) << [24]) >> [24]))
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$2 }
	
.LABEL $label$1
}

void .FUNC _Z9get_sheetv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	*($0 + [8]) = [0]
	*($0 + [4]) = [0]
	*($0) = ($0 + [4])
	*(($5 + [8])) = [0]
	*($5) = (int_64)0
	$1 = CALL strlen([16])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$4 }
	*($5) = ($1 << [1])
	$4 = ($5 | [1])
	if ( $1 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = (($1 + [16]) & [-16])
	$4 = CALL $280($3)
	*($5) = ($3 | [1])
	*($5 + [8]) = $4
	*($5 + [4]) = $1
	
.LABEL $label$3
	CALL memcpy($4, [16], $1)
	
.LABEL $label$2
	*(($4 + $1)) = [0]
	$4 = CALL $10($0, ($5 + [12]), $5)
	$1 = *($4)
	if ( $1 ){ goto $label$5 }
	$3 = ($5 + [8])
	*((($1 = CALL $280([32])) + [24])) = *($3)
	*($1 + [16 align=4]) = *($5)
	*($3) = [0]
	*($5) = (int_64)0
	*($1 + [28]) = [0]
	$3 = *($5 + [12])
	*($1) = [0]
	*($1 + [4]) = [0]
	*($1 + [8]) = $3
	*($4) = $1
	$3 = $1
	$2 = *(*($0))
	if ( ($2 == 0) ){ goto $label$6 }
	*($0) = $2
	$3 = *($4)
	
.LABEL $label$6
	CALL $11(*(($0 + [4])), $3)
	*(($4 = ($0 + [8]))) = (*($4) + [1])
	
.LABEL $label$5
	*(($1 + [28])) = [10]
	if ( ((*($5) & [1]) == 0) ){ goto $label$7 }
	CALL $282(*($5 + [8]))
	
.LABEL $label$7
	*(($5 + [8])) = [0]
	*($5) = (int_64)0
	$1 = CALL strlen([32])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$10 }
	*($5) = ($1 << [1])
	$4 = ($5 | [1])
	if ( $1 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$3 = (($1 + [16]) & [-16])
	$4 = CALL $280($3)
	*($5) = ($3 | [1])
	*($5 + [8]) = $4
	*($5 + [4]) = $1
	
.LABEL $label$9
	CALL memcpy($4, [32], $1)
	
.LABEL $label$8
	*(($4 + $1)) = [0]
	$4 = CALL $10($0, ($5 + [12]), $5)
	$1 = *($4)
	if ( $1 ){ goto $label$11 }
	$3 = ($5 + [8])
	*((($1 = CALL $280([32])) + [24])) = *($3)
	*($1 + [16 align=4]) = *($5)
	*($3) = [0]
	*($5) = (int_64)0
	*($1 + [28]) = [0]
	$3 = *($5 + [12])
	*($1) = [0]
	*($1 + [4]) = [0]
	*($1 + [8]) = $3
	*($4) = $1
	$3 = $1
	$2 = *(*($0))
	if ( ($2 == 0) ){ goto $label$12 }
	*($0) = $2
	$3 = *($4)
	
.LABEL $label$12
	CALL $11(*(($0 + [4])), $3)
	*(($4 = ($0 + [8]))) = (*($4) + [1])
	
.LABEL $label$11
	*(($1 + [28])) = [10]
	if ( ((*($5) & [1]) == 0) ){ goto $label$13 }
	CALL $282(*($5 + [8]))
	
.LABEL $label$13
	*(($5 + [8])) = [0]
	*($5) = (int_64)0
	$1 = CALL strlen([48])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$16 }
	*($5) = ($1 << [1])
	$4 = ($5 | [1])
	if ( $1 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$3 = (($1 + [16]) & [-16])
	$4 = CALL $280($3)
	*($5) = ($3 | [1])
	*($5 + [8]) = $4
	*($5 + [4]) = $1
	
.LABEL $label$15
	CALL memcpy($4, [48], $1)
	
.LABEL $label$14
	*(($4 + $1)) = [0]
	$4 = CALL $10($0, ($5 + [12]), $5)
	$1 = *($4)
	if ( $1 ){ goto $label$17 }
	$3 = ($5 + [8])
	*((($1 = CALL $280([32])) + [24])) = *($3)
	*($1 + [16 align=4]) = *($5)
	*($3) = [0]
	*($5) = (int_64)0
	*($1 + [28]) = [0]
	$3 = *($5 + [12])
	*($1) = [0]
	*($1 + [4]) = [0]
	*($1 + [8]) = $3
	*($4) = $1
	$3 = $1
	$2 = *(*($0))
	if ( ($2 == 0) ){ goto $label$18 }
	*($0) = $2
	$3 = *($4)
	
.LABEL $label$18
	CALL $11(*(($0 + [4])), $3)
	*(($4 = ($0 + [8]))) = (*($4) + [1])
	
.LABEL $label$17
	*(($1 + [28])) = [10]
	if ( ((*($5) & [1]) == 0) ){ goto $label$19 }
	CALL $282(*($5 + [8]))
	
.LABEL $label$19
	*(($5 + [8])) = [0]
	*($5) = (int_64)0
	$1 = CALL strlen([64])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$22 }
	*($5) = ($1 << [1])
	$4 = ($5 | [1])
	if ( $1 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	$3 = (($1 + [16]) & [-16])
	$4 = CALL $280($3)
	*($5) = ($3 | [1])
	*($5 + [8]) = $4
	*($5 + [4]) = $1
	
.LABEL $label$21
	CALL memcpy($4, [64], $1)
	
.LABEL $label$20
	*(($4 + $1)) = [0]
	$4 = CALL $10($0, ($5 + [12]), $5)
	$1 = *($4)
	if ( $1 ){ goto $label$23 }
	$3 = ($5 + [8])
	*((($1 = CALL $280([32])) + [24])) = *($3)
	*($1 + [16 align=4]) = *($5)
	*($3) = [0]
	*($5) = (int_64)0
	*($1 + [28]) = [0]
	$3 = *($5 + [12])
	*($1) = [0]
	*($1 + [4]) = [0]
	*($1 + [8]) = $3
	*($4) = $1
	$3 = $1
	$2 = *(*($0))
	if ( ($2 == 0) ){ goto $label$24 }
	*($0) = $2
	$3 = *($4)
	
.LABEL $label$24
	CALL $11(*(($0 + [4])), $3)
	*(($4 = ($0 + [8]))) = (*($4) + [1])
	
.LABEL $label$23
	*(($1 + [28])) = [10]
	if ( ((*($5) & [1]) == 0) ){ goto $label$25 }
	CALL $282(*($5 + [8]))
	
.LABEL $label$25
	*(($5 + [8])) = [0]
	*($5) = (int_64)0
	$1 = CALL strlen([80])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$28 }
	*($5) = ($1 << [1])
	$4 = ($5 | [1])
	if ( $1 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	$3 = (($1 + [16]) & [-16])
	$4 = CALL $280($3)
	*($5) = ($3 | [1])
	*($5 + [8]) = $4
	*($5 + [4]) = $1
	
.LABEL $label$27
	CALL memcpy($4, [80], $1)
	
.LABEL $label$26
	*(($4 + $1)) = [0]
	$4 = CALL $10($0, ($5 + [12]), $5)
	$1 = *($4)
	if ( $1 ){ goto $label$29 }
	$3 = ($5 + [8])
	*((($1 = CALL $280([32])) + [24])) = *($3)
	*($1 + [16 align=4]) = *($5)
	*($3) = [0]
	*($5) = (int_64)0
	*($1 + [28]) = [0]
	$3 = *($5 + [12])
	*($1) = [0]
	*($1 + [4]) = [0]
	*($1 + [8]) = $3
	*($4) = $1
	$3 = $1
	$2 = *(*($0))
	if ( ($2 == 0) ){ goto $label$30 }
	*($0) = $2
	$3 = *($4)
	
.LABEL $label$30
	CALL $11(*(($0 + [4])), $3)
	*(($4 = ($0 + [8]))) = (*($4) + [1])
	
.LABEL $label$29
	*(($1 + [28])) = [10]
	if ( ((*($5) & [1]) == 0) ){ goto $label$31 }
	CALL $282(*($5 + [8]))
	
.LABEL $label$31
	*(($5 + [8])) = [0]
	*($5) = (int_64)0
	$1 = CALL strlen([96])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$34 }
	*($5) = ($1 << [1])
	$4 = ($5 | [1])
	if ( $1 ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$34
	$3 = (($1 + [16]) & [-16])
	$4 = CALL $280($3)
	*($5) = ($3 | [1])
	*($5 + [8]) = $4
	*($5 + [4]) = $1
	
.LABEL $label$33
	CALL memcpy($4, [96], $1)
	
.LABEL $label$32
	*(($4 + $1)) = [0]
	$4 = CALL $10($0, ($5 + [12]), $5)
	$1 = *($4)
	if ( $1 ){ goto $label$35 }
	$3 = ($5 + [8])
	*((($1 = CALL $280([32])) + [24])) = *($3)
	*($1 + [16 align=4]) = *($5)
	*($3) = [0]
	*($5) = (int_64)0
	*($1 + [28]) = [0]
	$3 = *($5 + [12])
	*($1) = [0]
	*($1 + [4]) = [0]
	*($1 + [8]) = $3
	*($4) = $1
	$3 = $1
	$2 = *(*($0))
	if ( ($2 == 0) ){ goto $label$36 }
	*($0) = $2
	$3 = *($4)
	
.LABEL $label$36
	CALL $11(*(($0 + [4])), $3)
	*(($4 = ($0 + [8]))) = (*($4) + [1])
	
.LABEL $label$35
	*(($1 + [28])) = [10]
	if ( ((*($5) & [1]) == 0) ){ goto $label$37 }
	CALL $282(*($5 + [8]))
	
.LABEL $label$37
	*(($5 + [8])) = [0]
	*($5) = (int_64)0
	$1 = CALL strlen([112])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$40 }
	*($5) = ($1 << [1])
	$4 = ($5 | [1])
	if ( $1 ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$40
	$3 = (($1 + [16]) & [-16])
	$4 = CALL $280($3)
	*($5) = ($3 | [1])
	*($5 + [8]) = $4
	*($5 + [4]) = $1
	
.LABEL $label$39
	CALL memcpy($4, [112], $1)
	
.LABEL $label$38
	*(($4 + $1)) = [0]
	$4 = CALL $10($0, ($5 + [12]), $5)
	$1 = *($4)
	if ( $1 ){ goto $label$41 }
	$3 = ($5 + [8])
	*((($1 = CALL $280([32])) + [24])) = *($3)
	*($1 + [16 align=4]) = *($5)
	*($3) = [0]
	*($5) = (int_64)0
	*($1 + [28]) = [0]
	$3 = *($5 + [12])
	*($1) = [0]
	*($1 + [4]) = [0]
	*($1 + [8]) = $3
	*($4) = $1
	$3 = $1
	$2 = *(*($0))
	if ( ($2 == 0) ){ goto $label$42 }
	*($0) = $2
	$3 = *($4)
	
.LABEL $label$42
	CALL $11(*(($0 + [4])), $3)
	*(($4 = ($0 + [8]))) = (*($4) + [1])
	
.LABEL $label$41
	*(($1 + [28])) = [10]
	if ( ((*($5) & [1]) == 0) ){ goto $label$43 }
	CALL $282(*($5 + [8]))
	
.LABEL $label$43
	*(($5 + [8])) = [0]
	*($5) = (int_64)0
	$1 = CALL strlen([128])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$46 }
	*($5) = ($1 << [1])
	$4 = ($5 | [1])
	if ( $1 ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$46
	$3 = (($1 + [16]) & [-16])
	$4 = CALL $280($3)
	*($5) = ($3 | [1])
	*($5 + [8]) = $4
	*($5 + [4]) = $1
	
.LABEL $label$45
	CALL memcpy($4, [128], $1)
	
.LABEL $label$44
	*(($4 + $1)) = [0]
	$4 = CALL $10($0, ($5 + [12]), $5)
	$1 = *($4)
	if ( $1 ){ goto $label$47 }
	$3 = ($5 + [8])
	*((($1 = CALL $280([32])) + [24])) = *($3)
	*($1 + [16 align=4]) = *($5)
	*($3) = [0]
	*($5) = (int_64)0
	*($1 + [28]) = [0]
	$3 = *($5 + [12])
	*($1) = [0]
	*($1 + [4]) = [0]
	*($1 + [8]) = $3
	*($4) = $1
	$3 = $1
	$2 = *(*($0))
	if ( ($2 == 0) ){ goto $label$48 }
	*($0) = $2
	$3 = *($4)
	
.LABEL $label$48
	CALL $11(*(($0 + [4])), $3)
	*(($4 = ($0 + [8]))) = (*($4) + [1])
	
.LABEL $label$47
	*(($1 + [28])) = [10]
	if ( ((*($5) & [1]) == 0) ){ goto $label$49 }
	CALL $282(*($5 + [8]))
	
.LABEL $label$49
	*(($5 + [8])) = [0]
	*($5) = (int_64)0
	$1 = CALL strlen([144])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$52 }
	*($5) = ($1 << [1])
	$4 = ($5 | [1])
	if ( $1 ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$52
	$3 = (($1 + [16]) & [-16])
	$4 = CALL $280($3)
	*($5) = ($3 | [1])
	*($5 + [8]) = $4
	*($5 + [4]) = $1
	
.LABEL $label$51
	CALL memcpy($4, [144], $1)
	
.LABEL $label$50
	*(($4 + $1)) = [0]
	$4 = CALL $10($0, ($5 + [12]), $5)
	$1 = *($4)
	if ( $1 ){ goto $label$53 }
	$3 = ($5 + [8])
	*((($1 = CALL $280([32])) + [24])) = *($3)
	*($1 + [16 align=4]) = *($5)
	*($3) = [0]
	*($5) = (int_64)0
	*($1 + [28]) = [0]
	$3 = *($5 + [12])
	*($1) = [0]
	*($1 + [4]) = [0]
	*($1 + [8]) = $3
	*($4) = $1
	$3 = $1
	$2 = *(*($0))
	if ( ($2 == 0) ){ goto $label$54 }
	*($0) = $2
	$3 = *($4)
	
.LABEL $label$54
	CALL $11(*(($0 + [4])), $3)
	*(($4 = ($0 + [8]))) = (*($4) + [1])
	
.LABEL $label$53
	*(($1 + [28])) = [10]
	if ( ((*($5) & [1]) == 0) ){ goto $label$55 }
	CALL $282(*($5 + [8]))
	
.LABEL $label$55
	*(($5 + [8])) = [0]
	*($5) = (int_64)0
	$1 = CALL strlen([160])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$58 }
	*($5) = ($1 << [1])
	$4 = ($5 | [1])
	if ( $1 ){ goto $label$57 }
	goto $label$56 
	
.LABEL $label$58
	$3 = (($1 + [16]) & [-16])
	$4 = CALL $280($3)
	*($5) = ($3 | [1])
	*($5 + [8]) = $4
	*($5 + [4]) = $1
	
.LABEL $label$57
	CALL memcpy($4, [160], $1)
	
.LABEL $label$56
	*(($4 + $1)) = [0]
	$4 = CALL $10($0, ($5 + [12]), $5)
	$1 = *($4)
	if ( $1 ){ goto $label$59 }
	$3 = ($5 + [8])
	*((($1 = CALL $280([32])) + [24])) = *($3)
	*($1 + [16 align=4]) = *($5)
	*($3) = [0]
	*($5) = (int_64)0
	*($1 + [28]) = [0]
	$3 = *($5 + [12])
	*($1) = [0]
	*($1 + [4]) = [0]
	*($1 + [8]) = $3
	*($4) = $1
	$3 = $1
	$2 = *(*($0))
	if ( ($2 == 0) ){ goto $label$60 }
	*($0) = $2
	$3 = *($4)
	
.LABEL $label$60
	CALL $11(*(($0 + [4])), $3)
	*(($4 = ($0 + [8]))) = (*($4) + [1])
	
.LABEL $label$59
	*(($1 + [28])) = [10]
	if ( ((*($5) & [1]) == 0) ){ goto $label$61 }
	CALL $282(*($5 + [8]))
	
.LABEL $label$61
	*(($5 + [8])) = [0]
	*($5) = (int_64)0
	$1 = CALL strlen([176])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$64 }
	*($5) = ($1 << [1])
	$4 = ($5 | [1])
	if ( $1 ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$64
	$3 = (($1 + [16]) & [-16])
	$4 = CALL $280($3)
	*($5) = ($3 | [1])
	*($5 + [8]) = $4
	*($5 + [4]) = $1
	
.LABEL $label$63
	CALL memcpy($4, [176], $1)
	
.LABEL $label$62
	*(($4 + $1)) = [0]
	$4 = CALL $10($0, ($5 + [12]), $5)
	$1 = *($4)
	if ( $1 ){ goto $label$65 }
	$3 = ($5 + [8])
	*((($1 = CALL $280([32])) + [24])) = *($3)
	*($1 + [16 align=4]) = *($5)
	*($3) = [0]
	*($5) = (int_64)0
	*($1 + [28]) = [0]
	$3 = *($5 + [12])
	*($1) = [0]
	*($1 + [4]) = [0]
	*($1 + [8]) = $3
	*($4) = $1
	$3 = $1
	$2 = *(*($0))
	if ( ($2 == 0) ){ goto $label$66 }
	*($0) = $2
	$3 = *($4)
	
.LABEL $label$66
	CALL $11(*(($0 + [4])), $3)
	*(($4 = ($0 + [8]))) = (*($4) + [1])
	
.LABEL $label$65
	*(($1 + [28])) = [5]
	if ( ((*($5) & [1]) == 0) ){ goto $label$67 }
	CALL $282(*($5 + [8]))
	
.LABEL $label$67
	*(($5 + [8])) = [0]
	*($5) = (int_64)0
	$1 = CALL strlen([192])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$70 }
	*($5) = ($1 << [1])
	$4 = ($5 | [1])
	if ( $1 ){ goto $label$69 }
	goto $label$68 
	
.LABEL $label$70
	$3 = (($1 + [16]) & [-16])
	$4 = CALL $280($3)
	*($5) = ($3 | [1])
	*($5 + [8]) = $4
	*($5 + [4]) = $1
	
.LABEL $label$69
	CALL memcpy($4, [192], $1)
	
.LABEL $label$68
	*(($4 + $1)) = [0]
	$4 = CALL $10($0, ($5 + [12]), $5)
	$1 = *($4)
	if ( $1 ){ goto $label$71 }
	$3 = ($5 + [8])
	*((($1 = CALL $280([32])) + [24])) = *($3)
	*($1 + [16 align=4]) = *($5)
	*($3) = [0]
	*($5) = (int_64)0
	*($1 + [28]) = [0]
	$3 = *($5 + [12])
	*($1) = [0]
	*($1 + [4]) = [0]
	*($1 + [8]) = $3
	*($4) = $1
	$3 = $1
	$2 = *(*($0))
	if ( ($2 == 0) ){ goto $label$72 }
	*($0) = $2
	$3 = *($4)
	
.LABEL $label$72
	CALL $11(*(($0 + [4])), $3)
	*(($0 = ($0 + [8]))) = (*($0) + [1])
	
.LABEL $label$71
	*(($1 + [28])) = [3]
	if ( ((*($5) & [1]) == 0) ){ goto $label$73 }
	CALL $282(*($5 + [8]))
	
.LABEL $label$73
	*([0] + [4]) = ($5 + [16])
	return (unreachable)
	
.LABEL $label$1
	CALL $284($5)
}

int_32 .FUNC _Z11getdaybegini (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	*($2 + [12]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*(($1 = CALL gmtime(($2 + [12]))) + [8]) = [0]
	*($1) = (int_64)0
	$1 = CALL timegm($1)
	*([0] + [4]) = ($2 + [16])
	return ($1 + ((int_32)$0 * (int_32)[86400]))
}

int_32 .FUNC _Z12getweekbegini (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	*($2 + [12]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*(($1 = CALL gmtime(($2 + [12]))) + [8]) = [0]
	*($1) = (int_64)0
	*($1 + [12]) = ((*($1 + [12]) + [1]) - *($1 + [24]))
	$1 = CALL timegm($1)
	*([0] + [4]) = ($2 + [16])
	return ($1 + ((int_32)$0 * (int_32)[604800]))
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

int_32 .FUNC _Z13getmonthbegini (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	*($2 + [12]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*(($1 = CALL gmtime(($2 + [12])))) = (int_64)0
	*($1 + [8 align=4]) = (int_64)4294967296
	*($1 + [16]) = (*($1 + [16]) + $0)
	*($2 + [8]) = CALL timegm($1)
	CALL gmtime(($2 + [8]))
	$1 = *($2 + [8])
	*([0] + [4]) = ($2 + [16])
	return $1
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _Z11myfunction2RK8_tmp_betS1_ (int_32 $0, int_32 $1)
{
	return ((uint_64)*($0 + [8]) > (uint_64)*($1 + [8]))
}

int_32 .FUNC _Z11myfunction3RKNSt3__15arrayIiLj5EEES3_ (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	CALL $16(($5 + [48]), $0)
	CALL $16($5, $1)
	$0 = (((int_32)*($5 + [4]) * (int_32)[10000]) + ((int_32)*($5) * (int_32)[10000000]))
	$2 = *($5 + [40])
	$3 = (((int_32)*($5 + [52]) * (int_32)[10000]) + ((int_32)*($5 + [48]) * (int_32)[10000000]))
	$4 = *($5 + [88])
	$1 = *($5 + [28])
	if ( ($1 == 0) ){ goto $label$1 }
	*(($5 + [32])) = $1
	CALL $282($1)
	
.LABEL $label$1
	$0 = ($0 + $2)
	$2 = ($3 + $4)
	$1 = *($5 + [76])
	if ( ($1 == 0) ){ goto $label$2 }
	*(($5 + [80])) = $1
	CALL $282($1)
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [96])
	return ((int_32)$2 < (int_32)$0)
}

void .FUNC $16 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	float_64 $5
	float_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	float_64 $10
	float_64 $11
	int_32 $12
	float_64 $13
	float_64 $14
	float_64 $15
	float_64 $16
	float_64 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$20 = (*([0] + [4]) - [32])
	*([0] + [4]) = $20
	*($0 + [28 align=4]) = (int_64)0
	*($0) = (int_64)-4294967296
	*(($19 = ($0 + [36]))) = [0]
	$2 = *($1)
	$5 = CALL floor((CASTING float_64)(int_32 ((int_32)$2 / (int_32)[100])))
	$6 = CALL floor((CASTING float_64)(int_32 ((int_32)$2 % (int_32)[100])))
	$2 = *($1 + [4])
	$10 = CALL floor((CASTING float_64)(int_32 ((int_32)$2 / (int_32)[100])))
	$11 = CALL floor((CASTING float_64)(int_32 ((int_32)$2 % (int_32)[100])))
	$2 = *($1 + [8])
	$13 = CALL floor((CASTING float_64)(int_32 ((int_32)$2 / (int_32)[100])))
	$14 = CALL floor((CASTING float_64)(int_32 ((int_32)$2 % (int_32)[100])))
	$2 = *($1 + [12])
	$15 = CALL floor((CASTING float_64)(int_32 ((int_32)$2 / (int_32)[100])))
	$16 = CALL floor((CASTING float_64)(int_32 ((int_32)$2 % (int_32)[100])))
	$2 = *($1 + [16])
	$17 = CALL floor((CASTING float_64)(int_32 ((int_32)$2 / (int_32)[100])))
	$18 = ( $18 ? $3 : $12 )
	$2 = (CASTING int_32)(float_64 $17)
	$3 = ((int_32)(((int_32)$2 * (int_32)[100]) + $2) > (int_32)(((int_32)$7 * (int_32)[100]) + $18))
	$3 = ( $3 ? $12 : $7 )
	$18 = (CASTING int_32)(float_64 $15)
	$12 = ((int_32)(((int_32)$18 * (int_32)[100]) + $18) > (int_32)(((int_32)$8 * (int_32)[100]) + $3))
	$12 = ( $12 ? $7 : $8 )
	$3 = (CASTING int_32)(float_64 $13)
	$7 = ((int_32)(((int_32)$3 * (int_32)[100]) + $3) > (int_32)(((int_32)$9 * (int_32)[100]) + $12))
	$7 = ( $7 ? [1] : $8 )
	$12 = (CASTING int_32)(float_64 $10)
	$8 = ((int_32)(((int_32)$12 * (int_32)[100]) + $12) > (int_32)(((int_32)$9 * (int_32)[100]) + $7))
	$7 = (CASTING int_32)(float_64 $5)
	$8 = ((int_32)(((int_32)$7 * (int_32)[100]) + $7) > (int_32)[101])
	$7 = (CASTING int_32)(float_64 $6)
	$9 = ( $7 ? [1] : $8 )
	$12 = (CASTING int_32)(float_64 $11)
	$9 = ( $12 ? $9 : $8 )
	$3 = (CASTING int_32)(float_64 $14)
	$8 = ( $3 ? $9 : $7 )
	$18 = (CASTING int_32)(float_64 $16)
	$7 = ( $18 ? $8 : $12 )
	$2 = (CASTING int_32)(float_64 CALL floor((CASTING float_64)(int_32 ((int_32)$2 % (int_32)[100]))))
	*($0 + [40]) = (((int_32)( $2 ? $7 : $3 ) * (int_32)[100]) + ( $2 ? $18 : $3 ))
	$2 = ($0 + [28])
	$18 = *($0 + [28])
	if ( ($18 == 0) ){ goto $label$1 }
	*(($0 + [32])) = $18
	CALL $282($18)
	*($19) = [0]
	*($2) = (int_64)0
	
.LABEL $label$1
	*(($18 = ($0 + [32]))) = [0]
	*($2) = [0]
	*($19) = [0]
	$3 = *($1)
	*($0 + [8]) = $3
	*($20 + [16]) = (CASTING int_64)(int_32 $3)
	CALL $17($2, ($20 + [16]))
	$19 = *($19)
	$3 = *($18)
	$12 = *(($1 + [4]))
	*(($0 + [12])) = $12
	$4 = (CASTING int_64)(int_32 $12)
	*($20 + [16]) = $4
	if ( ((uint_32)$3 >= (uint_32)$19) ){ goto $label$3 }
	*($3) = $4
	$3 = ($3 + [8])
	*($18) = $3
	goto $label$2 
	
.LABEL $label$3
	CALL $17($2, ($20 + [16]))
	$19 = *(($0 + [36]))
	$3 = *($18)
	
.LABEL $label$2
	$18 = *(($1 + [8]))
	*(($0 + [16])) = $18
	$4 = (CASTING int_64)(int_32 $18)
	*($20 + [16]) = $4
	if ( ((uint_32)$3 >= (uint_32)$19) ){ goto $label$5 }
	*($3) = $4
	$18 = ($3 + [8])
	*(($0 + [32])) = $18
	goto $label$4 
	
.LABEL $label$5
	CALL $17($2, ($20 + [16]))
	$19 = *(($0 + [36]))
	$18 = *(($0 + [32]))
	
.LABEL $label$4
	$3 = *(($1 + [12]))
	*(($0 + [20])) = $3
	$4 = (CASTING int_64)(int_32 $3)
	*($20 + [16]) = $4
	if ( ((uint_32)$18 >= (uint_32)$19) ){ goto $label$7 }
	*($18) = $4
	$18 = ($18 + [8])
	*(($0 + [32])) = $18
	goto $label$6 
	
.LABEL $label$7
	CALL $17($2, ($20 + [16]))
	$19 = *(($0 + [36]))
	$18 = *(($0 + [32]))
	
.LABEL $label$6
	$3 = *(($1 + [16]))
	*(($0 + [24])) = $3
	$4 = (CASTING int_64)(int_32 $3)
	*($20 + [16]) = $4
	if ( ((uint_32)$18 >= (uint_32)$19) ){ goto $label$9 }
	*($18) = $4
	*(($0 + [32])) = ($18 + [8])
	goto $label$8 
	
.LABEL $label$9
	CALL $17($2, ($20 + [16]))
	
.LABEL $label$8
	$19 = CALL $19($1)
	if ( ((int_32)$19 <= (int_32)[0]) ){ goto $label$11 }
	*($0 + [44]) = [6]
	*($0) = $19
	*(($0 + [4])) = [-1]
	goto $label$10 
	
.LABEL $label$11
	$5 = CALL floor((CASTING float_64)(int_32 ((int_32)*($1) % (int_32)[100])))
	if ( ((int_32)((((((int_32)(CASTING int_32)(float_64 CALL floor((CASTING float_64)(int_32 ((int_32)*(($1 + [4])) % (int_32)[100])))) > (int_32)[10]) + ((int_32)(CASTING int_32)(float_64 $5) > (int_32)[10])) + ((int_32)(CASTING int_32)(float_64 CALL floor((CASTING float_64)(int_32 ((int_32)*(($1 + [8])) % (int_32)[100])))) > (int_32)[10])) + ((int_32)(CASTING int_32)(float_64 CALL floor((CASTING float_64)(int_32 ((int_32)*(($1 + [12])) % (int_32)[100])))) > (int_32)[10])) + ((int_32)(CASTING int_32)(float_64 CALL floor((CASTING float_64)(int_32 ((int_32)*(($1 + [16])) % (int_32)[100])))) > (int_32)[10])) != (int_32)[5]) ){ goto $label$12 }
	*($0 + [44]) = [6]
	*($0) = (int_64)-4294967292
	goto $label$10 
	
.LABEL $label$12
	*($20 + [28]) = [0]
	*((($20 + [16]) + [8])) = [0]
	*($20 + [16]) = (int_64)0
	*($20 + [8]) = (int_64)0
	if ( (CALL $18($1, ($20 + [28]), ($20 + [16]), ($20 + [8])) == 0) ){ goto $label$13 }
	*($0 + [44]) = [3]
	*($0) = [1]
	$1 = *($20 + [16])
	*(($0 + [8])) = $1
	*(($0 + [4])) = (((int_32)(*($20 + [28]) + [-1]) % (int_32)[10]) + [1])
	$19 = *($20 + [20])
	*(($0 + [12])) = $19
	*(($0 + [16])) = *($20 + [24])
	*(($0 + [20])) = $1
	*(($0 + [24])) = $19
	goto $label$10 
	
.LABEL $label$13
	*($0 + [44]) = [6]
	*($0) = (int_64)0
	
.LABEL $label$10
	*([0] + [4]) = ($20 + [32])
}

void .FUNC $17 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$3 = int_32(($6 - $5) >> [3])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[536870912]) ){ goto $label$3 }
	$4 = [536870911]
	$2 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$5 }
	$4 = int_32($2 >> [2])
	$4 = ( $7 ? $4 : ($4 <= $7) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $280(($4 << [3]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $298($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($3 << [3])))) = *($1)
	$6 = ($6 - $5)
	$1 = ($3 - $6)
	$4 = ($7 + ($4 << [3]))
	$7 = ($3 + [8])
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $5, $6)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $282($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

int_32 .FUNC $10 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = ($0 + [4])
	$0 = *($0 + [4])
	if ( ($0 == 0) ){ goto $label$2 }
	$3 = ($2 + [1])
	$12 = ($2 + [8])
	
.LOOP $label$4:
	$4 = ($0 + [16])
	$7 = ($8 & [1])
	$8 = *($2)
	$10 = ($2 + [4])
	$8 = ( *($10) ? uint_32($8 >> [1]) : $7 )
	$5 = ($6 & [1])
	$6 = *($0 + [16])
	$11 = ($0 + [20])
	$6 = ( *($11) ? uint_32($6 >> [1]) : $5 )
	$9 = ( $6 ? $8 : ($6 <= $8) )
	if ( ($9 == 0) ){ goto $label$8 }
	$5 = CALL memcmp(( *($12) ? $3 : $7 ), ( *(($0 + [24])) ? ($4 + [1]) : $5 ), $9)
	if ( ($5 == 0) ){ goto $label$8 }
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)$8 >= (uint_32)$6) ){ goto $label$6 }
	
.LABEL $label$7
	$6 = *($0)
	if ( $6 ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$6
	$7 = ($8 & [1])
	$8 = *($4)
	$8 = ( *($11) ? uint_32($8 >> [1]) : $7 )
	$5 = ($6 & [1])
	$6 = *($2)
	$6 = ( *($10) ? uint_32($6 >> [1]) : $5 )
	$9 = ( $6 ? $8 : ($6 <= $8) )
	if ( ($9 == 0) ){ goto $label$10 }
	$4 = CALL memcmp(( *(($0 + [24])) ? ($4 + [1]) : $7 ), ( *($12) ? $3 : $5 ), $9)
	if ( ($4 == 0) ){ goto $label$10 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$9 }
	goto $label$3 
	
.LABEL $label$10
	if ( ((uint_32)$8 >= (uint_32)$6) ){ goto $label$3 }
	
.LABEL $label$9
	$13 = ($0 + [4])
	$6 = *($0 + [4])
	if ( ($6 == 0) ){ goto $label$3 }
	$0 = $13
	
.LABEL $label$5
	$13 = $0
	$0 = $6
	goto $label$4 
	
.LABEL $label$3
	*($1) = $0
	return $13
	
.LABEL $label$2
	*($1) = $13
	return $13
	
.LABEL $label$1
	*($1) = $0
	return $0
}

void .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $3
	if ( $3 ){ goto $label$3 }
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( *($2 + [12]) ){ goto $label$3 }
	$3 = *($2 + [8])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$10 }
	if ( ($4 == 0) ){ goto $label$8 }
	if ( *($4 + [12]) ){ goto $label$8 }
	$4 = ($4 + [12])
	goto $label$9 
	
.LABEL $label$10
	$4 = *($3 + [4])
	if ( ($4 == 0) ){ goto $label$6 }
	if ( *($4 + [12]) ){ goto $label$6 }
	$4 = ($4 + [12])
	
.LABEL $label$9
	*(($2 + [12])) = [1]
	$2 = ((int_32)$3 == (int_32)$0)
	*($3 + [12]) = $2
	*($4) = [1]
	$1 = $3
	if ( ($2 == 0) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$8
	if ( ((int_32)*($2) == (int_32)$1) ){ goto $label$5 }
	$4 = $2
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_32)*($2) == (int_32)$1) ){ goto $label$2 }
	$4 = *($2 + [4])
	$1 = *($4)
	*($2 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $2
	$3 = *(($2 + [8]))
	
.LABEL $label$11
	*($4 + [8]) = $3
	*(( ($3 = *(($1 = ($2 + [8])))) ? ($3 + [4]) : ((int_32)*($3) == (int_32)$2) )) = $4
	*($1) = $4
	*($4) = $2
	$3 = *($4 + [8])
	goto $label$1 
	
.LABEL $label$5
	$4 = *($2)
	$1 = *($4 + [4])
	*($2) = $1
	if ( ($1 == 0) ){ goto $label$12 }
	*($1 + [8]) = $2
	$3 = *(($2 + [8]))
	
.LABEL $label$12
	*($4 + [8]) = $3
	*(( ($3 = *(($1 = ($2 + [8])))) ? ($3 + [4]) : ((int_32)*($3) == (int_32)$2) )) = $4
	*($1) = $4
	*(($4 + [4])) = $2
	$3 = *($4 + [8])
	
.LABEL $label$4
	*($4 + [12]) = [1]
	*($3 + [12]) = [0]
	$2 = *($3 + [4])
	$4 = *($2)
	*($3 + [4]) = $4
	if ( ($4 == 0) ){ goto $label$13 }
	*($4 + [8]) = $3
	
.LABEL $label$13
	*($2 + [8]) = *($3 + [8])
	*(( ($4 = *($3 + [8])) ? ($4 + [4]) : ((int_32)*($4) == (int_32)$3) )) = $2
	*($3 + [8]) = $2
	*($2) = $3
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	$4 = $2
	
.LABEL $label$1
	*($4 + [12]) = [1]
	*($3 + [12]) = [0]
	$2 = *($3)
	$4 = *($2 + [4])
	*($3) = $4
	if ( ($4 == 0) ){ goto $label$14 }
	*($4 + [8]) = $3
	
.LABEL $label$14
	*($2 + [8]) = *($3 + [8])
	*(( ($4 = *($3 + [8])) ? ($4 + [4]) : ((int_32)*($4) == (int_32)$3) )) = $2
	*($3 + [8]) = $2
	*(($2 + [4])) = $3
}

void .FUNC _Z15asset_to_stringRKN5eosio5assetE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	*($9 + [64]) = [0]
	*($9 + [68 align=4]) = (int_64)0
	$8 = ( [208] ? [224] : ((int_64)*($1) < (int_64)0) )
	$2 = CALL strlen($8)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($9 + [64]) = ($2 << [1])
	$5 = (($9 + [64]) | [1])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$5 = CALL $280($4)
	*($9 + [64]) = ($4 | [1])
	*($9 + [72]) = $5
	*($9 + [68]) = $2
	
.LABEL $label$3
	CALL memcpy($5, $8, $2)
	
.LABEL $label$2
	$8 = [0]
	*(($5 + $2)) = [0]
	$7 = *($1 + [8])
	$3 = CALL llabs(*($1))
	CALL _ZNSt3__19to_stringEy(($9 + [48]), $3)
	if ( (int_64)($7 == 0) ){ goto $label$5 }
	$6 = (int_64))((int_64)0 - $7)
	$7 = (int_64)1
	
.LOOP $label$6:
	$7 = ((int_64)$7 * (int_64)10)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)0) ){ goto $label$6 }
	CALL _ZNSt3__19to_stringEy(($9 + [32]), ((uint_64)$3 / (uint_64)$7))
	if ( (*($9 + [48]) & [1]) ){ goto $label$8 }
	*($9 + [48]) = [0]
	goto $label$7 
	
.LABEL $label$8
	*(*($9 + [56])) = [0]
	*($9 + [52]) = [0]
	
.LABEL $label$7
	CALL $287(($9 + [48]), [0])
	$4 = (($9 + [32]) + [8])
	*((($9 + [48]) + [8])) = *($4)
	*($9 + [48]) = *($9 + [32])
	CALL _ZNSt3__19to_stringEy(($9 + [16]), ((int_64)((uint_64)$3 % (uint_64)$7) + (int_64)$7))
	CALL $295(($9 + [32]), [240], CALL $293(($9 + [16]), [0], [1]))
	$2 = *($9 + [32])
	$5 = ($2 & [1])
	CALL $289(($9 + [48]), ( *($9 + [40]) ? (($9 + [32]) | [1]) : $5 ), ( *($9 + [36]) ? uint_32($2 >> [1]) : $5 ))
	if ( ((*($9 + [32]) & [1]) == 0) ){ goto $label$9 }
	CALL $282(*($4))
	
.LABEL $label$9
	if ( ((*($9 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $282(*($9 + [24]))
	
.LABEL $label$5
	CALL $13(($9 + [16]), ($9 + [64]), ($9 + [48]))
	$2 = CALL $290(($9 + [16]), [256])
	$5 = ($2 + [8])
	*((($9 + [32]) + [8])) = *($5)
	*($9 + [32]) = *($2)
	*($2) = [0]
	*(($2 + [4])) = [0]
	*($5) = [0]
	*($9) = (int_64)0
	*($9 + [8]) = [0]
	$7 = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8
	if ( (int_64)($7) == 0) ){ goto $label$11 }
	
.LOOP $label$12:
	CALL $291($9, int_32(((CASTING uint_32)(uint_64 $7) << [24]) >> [24]))
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$12 }
	$5 = *(($9 + [8]))
	$8 = *($9 + [4])
	$2 = *($9)
	goto $label$10 
	
.LABEL $label$11
	$5 = [0]
	$2 = [0]
	
.LABEL $label$10
	$1 = ($2 & [1])
	$2 = CALL $289(($9 + [32]), ( $5 ? ($9 | [1]) : $1 ), ( $8 ? uint_32(($2 & [254]) >> [1]) : $1 ))
	$7 = *($2)
	*($2) = (int_64)0
	*($0) = $7
	$2 = ($2 + [8])
	*(($0 + [8])) = *($2)
	*($2) = [0]
	if ( ((*($9) & [1]) == 0) ){ goto $label$13 }
	CALL $282(*(($9 + [8])))
	
.LABEL $label$13
	if ( ((*($9 + [32]) & [1]) == 0) ){ goto $label$14 }
	CALL $282(*($9 + [40]))
	
.LABEL $label$14
	if ( ((*($9 + [16]) & [1]) == 0) ){ goto $label$15 }
	CALL $282(*($9 + [24]))
	
.LABEL $label$15
	if ( ((*($9 + [48]) & [1]) == 0) ){ goto $label$16 }
	CALL $282(*($9 + [56]))
	
.LABEL $label$16
	if ( ((*($9 + [64]) & [1]) == 0) ){ goto $label$17 }
	CALL $282(*($9 + [72]))
	
.LABEL $label$17
	*([0] + [4]) = ($9 + [80])
	return (unreachable)
	
.LABEL $label$1
	CALL $284(($9 + [64]))
}

void .FUNC $13 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = ($3 & [1])
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : $5 )
	$3 = *($2)
	$4 = ( *($2 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$8 = ($4 + $3)
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$8 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($8 + [16]) & [-16])
	$8 = CALL $280($7)
	*($0) = ($7 | [1])
	*(($0 + [8])) = $8
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($8, ( $6 ? ($1 + [1]) : $5 ), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	CALL $289($0, ( *($2 + [8]) ? ($2 + [1]) : (*($2) & [1]) ), $4)
	return (unreachable)
	
.LABEL $label$1
	CALL $284($0)
}

void .FUNC _ZN6NiuNiu4bindEyy (int_32 $0, int_64 $1, int_64 $2)
{
	CALL require_auth($1)
	CALL eosio_assert(CALL $fimport$27($2), [1200])
	CALL _ZN6NiuNiu5_bindEyy($0, $1, $2)
}

int_32 .FUNC $18 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	float_64 $5
	float_64 $6
	float_64 $7
	int_32 $8
	float_64 $9
	float_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_64 $17
	int_32 $18
	$18 = (*([0] + [4]) - [32])
	*([0] + [4]) = $18
	*(($4 = (($18 + [20]) + [8]))) = [0]
	$17 = (int_64)0
	*($18 + [20 align=4]) = (int_64)0
	$15 = [-80]
	$14 = [272]
	$16 = [0]
	
.LOOP $label$1:
	$11 = ($0 + (*($14) << [2]))
	$5 = CALL floor((CASTING float_64)(int_32 ((int_32)*($11) % (int_32)[100])))
	*($18 + [8]) = *($11)
	$11 = ($0 + (*(($14 + [4])) << [2]))
	$6 = CALL floor((CASTING float_64)(int_32 ((int_32)*($11) % (int_32)[100])))
	*($18 + [12]) = *($11)
	$11 = ($0 + (*(($14 + [8])) << [2]))
	$7 = CALL floor((CASTING float_64)(int_32 ((int_32)*($11) % (int_32)[100])))
	*(($8 = (($18 + [8]) + [8]))) = *($11)
	$11 = ($0 + (*(($15 + [480])) << [2]))
	$9 = CALL floor((CASTING float_64)(int_32 ((int_32)*($11) % (int_32)[100])))
	*($18) = *($11)
	$11 = ($0 + (*(($15 + [484])) << [2]))
	$10 = CALL floor((CASTING float_64)(int_32 ((int_32)*($11) % (int_32)[100])))
	*($18 + [4]) = *($11)
	$11 = (CASTING int_32)(float_64 $9)
	$12 = (CASTING int_32)(float_64 $10)
	$13 = (CASTING int_32)(float_64 $5)
	$13 = (CASTING int_32)(float_64 $6)
	$13 = (CASTING int_32)(float_64 $7)
	if ( ((int_32)(( $13 ? [0] : ((int_32)$13 < (int_32)[10]) ) + (( $13 ? [0] : ((int_32)$13 < (int_32)[10]) ) + ( $13 ? [0] : ((int_32)$13 < (int_32)[10]) ))) % (int_32)[10]) ){ goto $label$2 }
	$11 = (( $12 ? [0] : ((int_32)$12 < (int_32)[10]) ) + ( $11 ? [0] : ((int_32)$11 < (int_32)[10]) ))
	$11 = ( $11 ? [10] : $11 )
	if ( ((int_32)$11 <= (int_32)$16) ){ goto $label$2 }
	*($4) = *($8)
	*($18 + [20 align=4]) = *($18 + [8])
	$17 = *($18)
	$16 = $11
	
.LABEL $label$2
	$14 = ($14 + [12])
	$15 = ($15 + [8])
	if ( $15 ){ goto $label$1 }
	$0 = [0]
	if ( ((int_32)$16 <= (int_32)[0]) ){ goto $label$3 }
	*($1) = $16
	*($2) = *($18 + [20 align=4])
	*(($2 + [8])) = *((($18 + [20]) + [8]))
	*($3) = $17
	$0 = [1]
	
.LABEL $label$3
	*([0] + [4]) = ($18 + [32])
	return $0
}

int_32 .FUNC $19 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	$5 = [0]
	*($9 + [24]) = [0]
	*($9 + [20]) = [0]
	$1 = (($9 + [16]) | [4])
	*($9 + [16]) = $1
	$2 = ($9 + [24])
	
.LOOP $label$1:
	$3 = (CASTING int_32)(float_64 CALL floor((CASTING float_64)(int_32 ((int_32)*(($0 + ($5 << [2]))) % (int_32)[100]))))
	$4 = *($9 + [20])
	if ( ($4 == 0) ){ goto $label$7 }
	$6 = $1
	$7 = $4
	
.LOOP $label$9:
	if ( ((int_32)*($7 + [16]) >= (int_32)$3) ){ goto $label$10 }
	$7 = *($7 + [4])
	if ( $7 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$6 = $7
	$8 = *($7)
	$7 = $8
	if ( $8 ){ goto $label$9 }
	
.LABEL $label$8
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$6 }
	$8 = $1
	if ( ((int_32)$3 < (int_32)*($6 + [16])) ){ goto $label$5 }
	$7 = ($6 + [20])
	goto $label$3 
	
.LABEL $label$7
	$4 = $1
	$8 = $1
	if ( *($8) ){ goto $label$2 }
	goto $label$4 
	
.LABEL $label$6
	$8 = $1
	
.LABEL $label$5
	
.LOOP $label$13:
	$7 = *($4 + [16])
	if ( ((int_32)$3 >= (int_32)$7) ){ goto $label$15 }
	$8 = $4
	$7 = *($4)
	if ( $7 ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$15
	if ( ((int_32)$7 >= (int_32)$3) ){ goto $label$11 }
	$8 = ($4 + [4])
	$7 = *($4 + [4])
	if ( ($7 == 0) ){ goto $label$11 }
	
.LABEL $label$14
	$4 = $7
	goto $label$13 
	
.LABEL $label$12
	$8 = $4
	
.LABEL $label$11
	if ( *($8) ){ goto $label$2 }
	
.LABEL $label$4
	*(($7 = CALL $280([24]))) = (int_64)0
	*($7 + [8]) = $4
	*($8) = $7
	*($7 + [20]) = [1]
	*($7 + [16]) = $3
	$4 = *(*($9 + [16]))
	if ( ($4 == 0) ){ goto $label$16 }
	*($9 + [16]) = $4
	$7 = *($8)
	
.LABEL $label$16
	CALL $11(*($9 + [20]), $7)
	$7 = $2
	
.LABEL $label$3
	*($7) = (*($7) + [1])
	
.LABEL $label$2
	$5 = ($5 + [1])
	if ( ((int_32)$5 != (int_32)[5]) ){ goto $label$1 }
	$4 = *($9 + [16])
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$20 }
	$7 = *($9 + [8])
	
.LOOP $label$21:
	$8 = $4
	if ( ((int_32)*($8 + [20]) == (int_32)[4]) ){ goto $label$19 }
	$7 = *($8 + [4])
	if ( ($7 == 0) ){ goto $label$23 }
	
.LOOP $label$24:
	$4 = $7
	$7 = *($4)
	if ( $7 ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$23
	$4 = *($8 + [8])
	if ( ((int_32)*($4) == (int_32)$8) ){ goto $label$22 }
	$3 = ($8 + [8])
	
.LOOP $label$25:
	$7 = *($3)
	$3 = ($7 + [8])
	$4 = *($7 + [8])
	if ( ((int_32)$7 != (int_32)*($4)) ){ goto $label$25 }
	
.LABEL $label$22
	$7 = $8
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$21 }
	$4 = [0]
	$7 = $8
	goto $label$18 
	
.LABEL $label$20
	$4 = [0]
	goto $label$17 
	
.LABEL $label$19
	$4 = [5]
	
.LABEL $label$18
	*($9 + [8]) = $7
	
.LABEL $label$17
	CALL $20(($9 + [16]), *($9 + [20]))
	*([0] + [4]) = ($9 + [32])
	return $4
}

int_32 .FUNC __secs_to_tm (int_64 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = [-1]
	if ( ((uint_64)((int_64)$0 + (int_64)67908586910515200) > (uint_64)(int_64)135817173789408000) ){ goto $label$1 }
	$0 = ((int_64)$0 + (int_64)-951868800)
	$4 = (CASTING uint_32)(uint_64 ((int_64)$0 % (int_64)86400))
	$0 = ((int_64)(CASTING int_64)(int_32 int_32($4 >> [31])) + (int_64)((int_64)$0 / (int_64)86400))
	$10 = (CASTING uint_32)(uint_64 ((int_64)$0 % (int_64)146097))
	$9 = ( ($10 + [146097]) ? $10 : ((int_32)$10 < (int_32)[0]) )
	$6 = (((int_32)$9 / (int_32)[36524]) - (($9 + [-146096]) <= [36524]))
	$9 = (((int_32)$6 * (int_32)[-36524]) + $9)
	$2 = (((int_32)$9 / (int_32)[1461]) - (($9 + [-36525]) <= [1461]))
	$9 = (((int_32)$2 * (int_32)[-1461]) + $9)
	$8 = (((int_32)$9 / (int_32)[365]) - (($9 + [-1460]) <= [365]))
	$3 = (((int_32)$8 * (int_32)[-365]) + $9)
	$5 = ((int_64)((int_64)$0 + (int_64)3) % (int_64)7)
	$0 = ((int_64)(CASTING uint_64)(uint_32 int_32($10 >> [31])) + (int_64)((int_64)$0 / (int_64)146097))
	$7 = [0]
	if ( $8 ){ goto $label$2 }
	$7 = (($6 == 0) | ((int_32)$2 != (int_32)[0]))
	
.LABEL $label$2
	$0 = ((int_64)(CASTING int_64)(int_32 ((($2 << [2]) + ((int_32)$6 * (int_32)[100])) + $8)) + (int_64)((int_64)((int_64)$0 << (int_64)32) >> (int_64)32) * (int_64)400))
	$9 = $3
	$10 = [0]
	if ( ((int_32)$3 < (int_32)[31]) ){ goto $label$3 }
	$10 = [0]
	$8 = [31]
	$9 = $3
	
.LOOP $label$4:
	$6 = ($10 + [15633])
	$10 = ($10 + [1])
	$8 = *($6)
	$9 = ($9 - $8)
	if ( ((int_32)$9 >= (int_32)$8) ){ goto $label$4 }
	
.LABEL $label$3
	$8 = ((int_32)$10 > (int_32)[9])
	$0 = ((int_64)$0 + (int_64)(CASTING uint_64)(uint_32 $8))
	if ( ((uint_64)((int_64)$0 + (int_64)2147483748) > (uint_64)(int_64)4294967295) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $5)
	*($1 + [24]) = ( ($6 + [7]) ? $6 : ((int_32)$6 < (int_32)[0]) )
	$11 = ( [366] ? [365] : $7 )
	$6 = (($3 + $7) + [59])
	*($1 + [28]) = ($6 - ( [0] ? $11 : ((int_32)$6 < (int_32)$11) ))
	*($1 + [20]) = ((int_64)$0 + (int_64)100)
	*($1 + [12]) = ($9 + [1])
	$9 = ( ($4 + [86400]) ? $4 : ((int_32)$4 < (int_32)[0]) )
	*($1 + [8]) = ((int_32)$9 / (int_32)[3600])
	*($1 + [4]) = ((int_32)((int_32)$9 / (int_32)[60]) % (int_32)[60])
	*($1 + [16]) = (( ($10 + [-12]) ? $10 : $8 ) + [2])
	*($1) = ((int_32)$9 % (int_32)[60])
	$11 = [0]
	
.LABEL $label$1
	return $11
}

int_32 .FUNC timegm (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [48])
	*([0] + [4]) = $3
	$2 = [-1]
	$1 = CALL __tm_to_secs($0)
	if ( ((int_32)CALL __secs_to_tm($1, $3) <= (int_32)[-1]) ){ goto $label$2 }
	*($0) = *($3)
	*(($0 + [24])) = *(($3 + [24]))
	*(($0 + [16])) = *(($3 + [16]))
	*(($0 + [8])) = *(($3 + [8]))
	*($0 + [32]) = [0]
	*($0 + [36]) = [0]
	*($0 + [40]) = [15616]
	$2 = (CASTING uint_32)(uint_64 $1)
	goto $label$1 
	
.LABEL $label$2
	*(CALL __errno_location()) = [75]
	
.LABEL $label$1
	*([0] + [4]) = ($3 + [48])
	return $2
}

int_32 .FUNC gmtime (int_32 $0)
{
	return CALL __gmtime_r($0, [15564])
}

int_32 .FUNC __gmtime_r (int_32 $0, int_32 $1)
{
	if ( ((int_32)CALL __secs_to_tm(*($0), $1) <= (int_32)[-1]) ){ goto $label$1 }
	*($1 + [40]) = [15616]
	*($1 + [32 align=4]) = (int_64)0
	return $1
	
.LABEL $label$1
	*(CALL __errno_location()) = [75]
	return [0]
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

int_32 .FUNC __uflow (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = [-1]
	if ( CALL __toread($0) ){ goto $label$1 }
	if ( ((int_32)CALL int_32 $0((int_32 ($2 + [15])), (int_32 [1]), (int_32 *($0 + [32]))) != (int_32)[1]) ){ goto $label$1 }
	$1 = *($2 + [15])
	
.LABEL $label$1
	*([0] + [4]) = ($2 + [16])
	return $1
}

int_32 .FUNC __toread (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [255]) | $1)
	if ( ((uint_32)*($0 + [20]) <= (uint_32)*($0 + [28])) ){ goto $label$1 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	
.LABEL $label$1
	*($0 + [16]) = (int_64)0
	*(($0 + [28])) = [0]
	$1 = *($0)
	if ( ($1 & [4]) ){ goto $label$2 }
	$2 = (*($0 + [44]) + *($0 + [48]))
	*($0 + [8]) = $2
	*($0 + [4]) = $2
	return int_32(($1 << [27]) >> [31])
	
.LABEL $label$2
	*($0) = ($1 | [32])
	return [-1]
}

int_64 .FUNC __intscan (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_64 $14
	if ( ((uint_32)$1 > (uint_32)[36]) ){ goto $label$4 }
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$4 }
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$5:
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$7 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$6 
	
.LABEL $label$7
	$13 = CALL __shgetc($0)
	
.LABEL $label$6
	$10 = ($13 + [-9])
	if ( ((uint_32)$10 > (uint_32)[36]) ){ goto $label$3 }
	goto $label$5 
	
.LABEL $label$8
	$4 = ( [-1] ? [0] : ((int_32)$13 == (int_32)[45]) )
	$10 = ($0 + [4])
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [104]))) ){ goto $label$2 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$1 
	
.LABEL $label$4
	*(CALL __errno_location()) = [22]
	return (int_64)0
	
.LABEL $label$3
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	$13 = CALL __shgetc($0)
	
.LABEL $label$1
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$20 }
	if ( ((int_32)$13 != (int_32)[48]) ){ goto $label$20 }
	$10 = ($0 + [4])
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [104]))) ){ goto $label$19 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$18 
	
.LABEL $label$20
	$1 = ( $1 ? [10] : $1 )
	if ( (*(($13 + [15281])) <= $1) ){ goto $label$17 }
	if ( (*(($0 + [104])) == 0) ){ goto $label$21 }
	*(($13 = ($0 + [4]))) = (*($13) + [-1])
	
.LABEL $label$21
	CALL __shlim($0, (int_64)0)
	*(CALL __errno_location()) = [22]
	return (int_64)0
	
.LABEL $label$19
	$13 = CALL __shgetc($0)
	
.LABEL $label$18
	if ( ((int_32)($13 | [32]) != (int_32)[120]) ){ goto $label$22 }
	$10 = ($0 + [4])
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [104]))) ){ goto $label$16 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$15 
	
.LABEL $label$22
	if ( ($1 == 0) ){ goto $label$14 }
	
.LABEL $label$17
	if ( ((int_32)$1 != (int_32)[10]) ){ goto $label$13 }
	$14 = (int_64)0
	$9 = ($13 + [-48])
	if ( ((uint_32)$9 > (uint_32)[9]) ){ goto $label$23 }
	$10 = [0]
	$8 = ($0 + [104])
	$1 = ($0 + [4])
	
.LOOP $label$24:
	$10 = ((int_32)$10 * (int_32)[10])
	$13 = *($1)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$26 }
	*($1) = ($13 + [1])
	$13 = *($13)
	goto $label$25 
	
.LABEL $label$26
	$13 = CALL __shgetc($0)
	
.LABEL $label$25
	$10 = ($10 + $9)
	$9 = ($13 + [-48])
	if ( ((uint_32)$9 > (uint_32)[9]) ){ goto $label$27 }
	if ( ($10 <= [429496729]) ){ goto $label$24 }
	
.LABEL $label$27
	$14 = (CASTING uint_64)(uint_32 $10)
	
.LABEL $label$23
	$10 = ($13 + [-48])
	if ( ((uint_32)$10 > (uint_32)[9]) ){ goto $label$11 }
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$28:
	$1 = [10]
	$5 = (CASTING int_64)(int_32 $10)
	$12 = ((int_64)$14 * (int_64)10)
	if ( ((uint_64)$12 > (uint_64)((int_64)$5 ^ (int_64)-1)) ){ goto $label$12 }
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$30 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$29 
	
.LABEL $label$30
	$13 = CALL __shgetc($0)
	
.LABEL $label$29
	$14 = ((int_64)$12 + (int_64)$5)
	$10 = ($13 + [-48])
	if ( ((uint_32)$10 > (uint_32)[9]) ){ goto $label$31 }
	if ( (uint_64)($14 <= (int_64)1844674407370955162) ){ goto $label$28 }
	
.LABEL $label$31
	if ( ((uint_32)$10 <= (uint_32)[9]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$16
	$13 = CALL __shgetc($0)
	
.LABEL $label$15
	$1 = [16]
	if ( (*(($13 + [15281])) <= [16]) ){ goto $label$13 }
	$13 = *(($0 + [104]))
	if ( ($13 == 0) ){ goto $label$32 }
	*(($10 = ($0 + [4]))) = (*($10) + [-1])
	
.LABEL $label$32
	if ( ($2 == 0) ){ goto $label$9 }
	$14 = (int_64)0
	if ( ($13 == 0) ){ goto $label$10 }
	*(($13 = ($0 + [4]))) = (*($13) + [-1])
	return (int_64)0
	
.LABEL $label$14
	$1 = [8]
	
.LABEL $label$13
	if ( ((($1 + [-1]) & $1) == 0) ){ goto $label$37 }
	$10 = *(($13 + [15281]))
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$36 }
	$9 = [0]
	$2 = ($0 + [104])
	$8 = ($0 + [4])
	
.LOOP $label$38:
	$9 = ($10 + ((int_32)$9 * (int_32)$1))
	$13 = *($8)
	if ( ((uint_32)$13 >= (uint_32)*($2)) ){ goto $label$40 }
	*($8) = ($13 + [1])
	$13 = *($13)
	goto $label$39 
	
.LABEL $label$40
	$13 = CALL __shgetc($0)
	
.LABEL $label$39
	$10 = *(($13 + [15281]))
	if ( ((uint_32)$9 > (uint_32)[119304646]) ){ goto $label$41 }
	if ( ($10 <= $1) ){ goto $label$38 }
	
.LABEL $label$41
	$14 = (CASTING uint_64)(uint_32 $9)
	if ( ($10 <= $1) ){ goto $label$35 }
	goto $label$12 
	
.LABEL $label$37
	$2 = *(((uint_32(((int_32)$1 * (int_32)[23]) >> [5]) & [7]) + [15552]))
	$10 = *(($13 + [15281]))
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$34 }
	$9 = [0]
	$11 = ($0 + [104])
	$8 = ($0 + [4])
	
.LOOP $label$42:
	$9 = ($10 | ($9 << $2))
	$13 = *($8)
	if ( ((uint_32)$13 >= (uint_32)*($11)) ){ goto $label$44 }
	*($8) = ($13 + [1])
	$13 = *($13)
	goto $label$43 
	
.LABEL $label$44
	$13 = CALL __shgetc($0)
	
.LABEL $label$43
	$10 = *(($13 + [15281]))
	if ( ((uint_32)$9 > (uint_32)[134217727]) ){ goto $label$45 }
	if ( ($10 <= $1) ){ goto $label$42 }
	
.LABEL $label$45
	$14 = (CASTING uint_64)(uint_32 $9)
	if ( ($10 <= $1) ){ goto $label$33 }
	goto $label$12 
	
.LABEL $label$36
	$14 = (int_64)0
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$12 }
	
.LABEL $label$35
	$7 = (CASTING uint_64)(uint_32 $1)
	$6 = ((uint_64)(int_64)-1 / (uint_64)$7)
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$46:
	if ( ((uint_64)$14 > (uint_64)$6) ){ goto $label$12 }
	$5 = (CASTING uint_64)(uint_32 ($10 & [255]))
	$12 = ((int_64)$14 * (int_64)$7)
	if ( ((uint_64)$12 > (uint_64)((int_64)$5 ^ (int_64)-1)) ){ goto $label$12 }
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$48 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$47 
	
.LABEL $label$48
	$13 = CALL __shgetc($0)
	
.LABEL $label$47
	$14 = ((int_64)$5 + (int_64)$12)
	$10 = *(($13 + [15281]))
	if ( ($10 <= $1) ){ goto $label$46 }
	goto $label$12 
	
.LABEL $label$34
	$14 = (int_64)0
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$12 }
	
.LABEL $label$33
	$5 = (CASTING uint_64)(uint_32 $2)
	$6 = (uint_64)(int_64)-1 >> (uint_64)$5
	if ( ((uint_64)$14 > (uint_64)$6)) ){ goto $label$12 }
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$49:
	$14 = ((int_64)$14 << (int_64)$5)
	$12 = (CASTING uint_64)(uint_32 ($10 & [255]))
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$51 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$50 
	
.LABEL $label$51
	$13 = CALL __shgetc($0)
	
.LABEL $label$50
	$14 = ((int_64)$12 | (int_64)$14)
	$10 = *(($13 + [15281]))
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$12 }
	if ( ((uint_64)$14 <= (uint_64)$6) ){ goto $label$49 }
	
.LABEL $label$12
	if ( ((uint_32)*(($13 + [15281])) >= (uint_32)$1) ){ goto $label$11 }
	$9 = ($0 + [104])
	$10 = ($0 + [4])
	
.LOOP $label$52:
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*($9)) ){ goto $label$54 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$53 
	
.LABEL $label$54
	$13 = CALL __shgetc($0)
	
.LABEL $label$53
	if ( (*(($13 + [15281])) <= $1) ){ goto $label$52 }
	*(CALL __errno_location()) = [34]
	$4 = ( $4 ? [0] : (int_64)(((int_64)$3 & (int_64)1) == 0) )
	$14 = $3
	
.LABEL $label$11
	if ( (*(($0 + [104])) == 0) ){ goto $label$55 }
	*(($13 = ($0 + [4]))) = (*($13) + [-1])
	
.LABEL $label$55
	if ( (uint_64)($14 <= $3) ){ goto $label$56 }
	if ( (CASTING uint_32)(uint_64 ((int_64)$3 & (int_64)1)) ){ goto $label$57 }
	if ( $4 ){ goto $label$57 }
	*(CALL __errno_location()) = [34]
	return ((int_64)$3 + (int_64)-1)
	
.LABEL $label$57
	if ( ((uint_64)$14 <= (uint_64)$3) ){ goto $label$56 }
	*(CALL __errno_location()) = [34]
	return $3
	
.LABEL $label$56
	$12 = (CASTING int_64)(int_32 $4)
	$14 = (int_64))(((int_64)$14 ^ (int_64)$12) - $12)
	
.LABEL $label$10
	return $14
	
.LABEL $label$9
	CALL __shlim($0, (int_64)0)
	$10
	return (int_64)0
}

int_32 .FUNC __shgetc (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [112])
	if ( (int_64)($1 == 0) ){ goto $label$7 }
	if ( ((int_64)*($0 + [120]) >= (int_64)$1) ){ goto $label$6 }
	
.LABEL $label$7
	$4 = CALL __uflow($0)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	$1 = *(($0 + [112]))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$5 }
	$1 = (int_64)
	$2 = *($0 + [4])
	$3 = *(($0 + [8]))
	if ( ((int_64)(CASTING int_64)(int_32 ($3 - $2)) < (int_64)$1($1 - *($0 + [120])))) ){ goto $label$4 }
	*($0 + [104]) = ($2 + (CASTING uint_32)(uint_64 ((int_64)$1 + (int_64)4294967295)))
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	*($0 + [104]) = [0]
	return [-1]
	
.LABEL $label$5
	$3 = *(($0 + [8]))
	
.LABEL $label$4
	*($0 + [104]) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = *(($0 + [4]))
	*($0 + [120]) = ((int_64)(CASTING int_64)(int_32 (($3 + [1]) - $3)) + (int_64)*($0 + [120]))
	goto $label$1 
	
.LABEL $label$2
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	$0 = ($3 + [-1])
	if ( ((int_32)*($0) == (int_32)$4) ){ goto $label$8 }
	*($0) = $4
	
.LABEL $label$8
	return $4
}

void .FUNC $116 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [848])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [896])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [960])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $282($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $282($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
}

void .FUNC $117 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1056])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1056])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1056])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$2 = *($0 + [16])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy($2, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $114 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [848])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [896])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [960])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $282($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $282($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
}

int_32 .FUNC $115 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1024])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [20]) = $4
	*($8 + [16]) = $4
	*($8 + [24]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $280([48])) + [16]) = [0]
	*($6 + [8]) = (int_64)0
	*($6 + [24]) = (int_64)0
	*($6 + [32]) = $0
	*($8 + [32]) = ($8 + [16])
	*($8 + [44]) = ($6 + [8])
	*($8 + [40]) = $6
	*($8 + [48]) = ($6 + [12])
	*($8 + [52]) = ($6 + [16])
	*($8 + [56]) = ($6 + [24])
	CALL $117(($8 + [40]), ($8 + [32]))
	*($6 + [36]) = $1
	*($8 + [32]) = $6
	$5 = *($6)
	*($8 + [40]) = $5
	$7 = *($6 + [36])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [32]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $118(($0 + [24]), ($8 + [32]), ($8 + [40]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [32])
	*($8 + [32]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $282($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [64])
	return $6
}

int_32 .FUNC $112 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1024])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [20]) = $4
	*($8 + [16]) = $4
	*($8 + [24]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $280([40])) + [8]) = (int_64)0
	*($6 + [16]) = (int_64)0
	*($6 + [24]) = $0
	*($8 + [32]) = ($8 + [16])
	*($8 + [44]) = ($6 + [8])
	*($8 + [40]) = $6
	*($8 + [48]) = ($6 + [12])
	*($8 + [52]) = ($6 + [16])
	*($8 + [56]) = ($6 + [20])
	CALL $119(($8 + [40]), ($8 + [32]))
	*($6 + [28]) = $1
	*($8 + [32]) = $6
	$5 = *($6)
	*($8 + [40]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [32]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $120(($0 + [24]), ($8 + [32]), ($8 + [40]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [32])
	*($8 + [32]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $282($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [64])
	return $6
}

void .FUNC _ZN6NiuNiu12_clearbetlogEv (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	*(($5 + [32])) = [0]
	*($5 + [16]) = (int_64)-1
	$2 = *($0)
	*($5) = $2
	*($5 + [8]) = $2
	*($5 + [24]) = (int_64)0
	$0 = CALL db_lowerbound_i64($2, $2, (int_64)4229753268491780096, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $115($5, $0)
	
.LOOP $label$2:
	CALL eosio_assert([1], [768])
	CALL eosio_assert([1], [816])
	$0 = [0]
	$1 = CALL db_next_i64(*($4 + [36]), ($5 + [40]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $115($5, $1)
	
.LABEL $label$3
	CALL $116($5, $4)
	$4 = $0
	if ( $0 ){ goto $label$2 }
	
.LABEL $label$1
	$1 = *($5 + [24])
	if ( ($1 == 0) ){ goto $label$4 }
	$3 = ($5 + [28])
	$0 = *($3)
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $282($4)
	
.LABEL $label$8
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($5 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $1
	
.LABEL $label$5
	*($3) = $1
	CALL $282($0)
	
.LABEL $label$4
	*([0] + [4]) = ($5 + [48])
}

void .FUNC $110 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1296])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1296])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $95(*($1), *($0 + [12]))
}

void .FUNC $111 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [48])
	*([0] + [4]) = $11
	$10 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $10) / (int_32)[40])
	$7 = ($5 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$8 = [107374182]
	$10 = ((int_32)(*($0 + [8]) - $10) / (int_32)[40])
	if ( ((uint_32)$10 > (uint_32)[53687090]) ){ goto $label$4 }
	$10 = ($10 << [1])
	$8 = ( $7 ? $10 : ($10 <= $7) )
	if ( ($8 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $280(((int_32)$8 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $298($0)
	
.LABEL $label$1
	*(($10 = ($7 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($10 + [8]) = *($3)
	*($10 + [16 align=4]) = (int_64)0
	*(($3 = ($10 + [24]))) = [0]
	$2 = CALL $280([16])
	*($10 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($10 + [20])) = $5
	*($10 + [28]) = [0]
	*(($6 = ($10 + [32]))) = [0]
	*(($10 + [36])) = [0]
	$2 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($1 + [32])
	$9 = (CASTING uint_64)(uint_32 $1)
	$3 = ($4 + [32])
	$5 = ($7 + ((int_32)$8 * (int_32)[40]))
	$1 = ($10 + [28])
	
.LOOP $label$5:
	$2 = ($2 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$5 }
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $77($1, $2)
	$8 = *($6)
	$2 = *($1)
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	$2 = [0]
	
.LABEL $label$6
	*($11 + [12]) = $2
	*($11 + [8]) = $2
	*($11 + [16]) = $8
	*($11 + [24]) = ($11 + [8])
	*($11 + [44]) = $3
	*($11 + [32]) = $4
	*($11 + [36]) = ($4 + [8])
	*($11 + [40]) = ($4 + [16])
	$3 = ($10 + [40])
	CALL $110(($11 + [32]), ($11 + [24]))
	$2 = *($0)
	$4 = *(($0 + [4]))
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$9 }
	$7 = ([0] - $2)
	$2 = ($4 + [-20])
	
.LOOP $label$10:
	*(($10 + [-32])) = *(($2 + [-12]))
	*(($10 + [-40])) = *(($2 + [-20]))
	*(($4 = ($10 + [-24]))) = (int_64)0
	*(($1 = ($10 + [-16]))) = [0]
	$8 = ($2 + [-4])
	*($4) = *($8)
	*(($10 + [-20])) = *($2)
	$4 = ($2 + [4])
	*($1) = *($4)
	*($4) = [0]
	*(($4 = ($10 + [-12]))) = (int_64)0
	*($8) = (int_64)0
	*(($1 = ($10 + [-4]))) = [0]
	$8 = ($2 + [8])
	*($4) = *($8)
	*(($10 + [-8])) = *(($2 + [12]))
	$4 = ($2 + [16])
	*($1) = *($4)
	*($4) = [0]
	*($8) = (int_64)0
	$10 = ($10 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $7) != (int_32)[-20]) ){ goto $label$10 }
	$2 = *(($0 + [4]))
	$1 = *($0)
	goto $label$8 
	
.LABEL $label$9
	$1 = $2
	
.LABEL $label$8
	*($0) = $10
	*(($0 + [4])) = $3
	*(($0 + [8])) = $5
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$11 }
	$4 = ([0] - $1)
	$10 = ($2 + [-24])
	
.LOOP $label$12:
	$2 = *(($10 + [12]))
	if ( ($2 == 0) ){ goto $label$13 }
	*(($10 + [16])) = $2
	CALL $282($2)
	
.LABEL $label$13
	$2 = *($10)
	if ( ($2 == 0) ){ goto $label$14 }
	*(($10 + [4])) = $2
	CALL $282($2)
	
.LABEL $label$14
	$10 = ($10 + [-40])
	if ( ((int_32)($10 + $4) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ($1 == 0) ){ goto $label$15 }
	CALL $282($1)
	
.LABEL $label$15
	*([0] + [4]) = ($11 + [48])
	(unreachable)
}

void .FUNC $118 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $280(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $298($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $282($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $282($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $119 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1056])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1056])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1056])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1056])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$2 = *($0 + [16])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [1056])
	CALL memcpy($2, *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
}

void .FUNC $299 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $298 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $295 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = CALL strlen($1)
	$3 = *($2)
	$4 = ( *($2 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$6 = ($4 + $3)
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$6 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($6 + [16]) & [-16])
	$6 = CALL $280($5)
	*($0) = ($5 | [1])
	*(($0 + [8])) = $6
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($6, $1, $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL $289($0, ( *($2 + [8]) ? ($2 + [1]) : (*($2) & [1]) ), $4)
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $294 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$6 = *($0)
	$5 = ($6 & [1])
	if ( $5 ){ goto $label$2 }
	$6 = uint_32($6 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($0 + [4])
	
.LABEL $label$1
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	if ( ($6 <= $1) ){ goto $label$3 }
	$6 = ($6 - $1)
	$6 = ( $6 ? $2 : ($6 <= $2) )
	if ( $5 ){ goto $label$5 }
	$0 = ($0 + [1])
	goto $label$4 
	
.LABEL $label$5
	$0 = *($0 + [8])
	
.LABEL $label$4
	$5 = ((uint_32)$6 > (uint_32)$4)
	$2 = ( $4 ? $6 : $5 )
	if ( ($2 == 0) ){ goto $label$6 }
	$1 = CALL memcmp(($0 + $1), $3, $2)
	if ( ($1 == 0) ){ goto $label$6 }
	return $1
	
.LABEL $label$6
	return ( [-1] ? $5 : ($6 <= $4) )
	
.LABEL $label$3
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $297 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$3 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$4 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$4 = *($0 + [4])
	
.LABEL $label$3
	if ( ((uint_32)($3 - $4) >= (uint_32)$1) ){ goto $label$5 }
	CALL $292($0, $3, (($1 - $3) + $4), $4, $4, [0], [0])
	$5 = *($0)
	
.LABEL $label$5
	if ( ($5 & [1]) ){ goto $label$7 }
	$5 = ($0 + [1])
	goto $label$6 
	
.LABEL $label$7
	$5 = *($0 + [8])
	
.LABEL $label$6
	CALL memset(($5 + $4), ($2 & [255]), $1)
	$1 = ($4 + $1)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($1 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $1
	
.LABEL $label$8
	*(($5 + $1)) = [0]
	
.LABEL $label$1
	return $0
}

void .FUNC _ZNSt3__19to_stringEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = [10]
	$2 = (($7 + [16]) | [1])
	CALL memset($2, [0], [10])
	$3 = *($7 + [16])
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = [20]
	*($7 + [16]) = [20]
	$6 = *($7 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [20]) = [10]
	
.LABEL $label$1
	*(($7 + [27])) = [0]
	$6 = ( $6 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($7 + [24])
	
.LOOP $label$4:
	*($7) = $1
	$3 = CALL snprintf(( *($5) ? $2 : ($3 & [1]) ), ($6 + [1]), [12720], $7)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$3 }
	$6 = $3
	goto $label$5 
	
.LABEL $label$6
	$6 = (($6 << [1]) | [1])
	
.LABEL $label$5
	$4 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *($7 + [20]) ? uint_32($3 >> [1]) : $4 )
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$7 }
	CALL $297(($7 + [16]), ($6 - $3), [0])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $4 ){ goto $label$8 }
	*(((($7 + [16]) + $6) + [1])) = [0]
	*($7 + [16]) = ($6 << [1])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($5) + $6)) = [0]
	*($7 + [20]) = $6
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$3
	$6 = ($6 & [1])
	$6 = *($7 + [16])
	$4 = ( *($7 + [20]) ? uint_32($6 >> [1]) : $6 )
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$10 }
	CALL $297(($7 + [16]), ($3 - $4), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$11 }
	*(((($7 + [16]) + $3) + [1])) = [0]
	*($7 + [16]) = ($3 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($7 + [24])) + $3)) = [0]
	*($7 + [20]) = $3
	
.LABEL $label$9
	*($0) = *($7 + [16])
	*(($0 + [8])) = *((($7 + [16]) + [8]))
	*([0] + [4]) = ($7 + [32])
}

void .FUNC $291 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = *($0)
	$2 = ($4 & [1])
	if ( ($2 == 0) ){ goto $label$6 }
	$3 = ((*($0) & [-2]) + [-1])
	$4 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = [10]
	$4 = uint_32($4 >> [1])
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $292($0, $3, [1], $3, $3, [0], [0])
	if ( (*($0) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($0 + [4]) = ($4 + [1])
	$0 = *($0 + [8])
	goto $label$1 
	
.LABEL $label$2
	*($0) = (($4 << [1]) + [2])
	$0 = ($0 + [1])
	
.LABEL $label$1
	*(($0 = ($0 + $4)) + [1]) = [0]
	*($0) = $1
}

int_32 .FUNC $290 (int_32 $0, int_32 $1)
{
	return CALL $289($0, $1, CALL $335($1))
}

int_32 .FUNC $293 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0)
	$3 = ($6 & [1])
	if ( $3 ){ goto $label$3 }
	$4 = uint_32($6 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ($2 == 0) ){ goto $label$4 }
	if ( $3 ){ goto $label$6 }
	$5 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$6
	$5 = *($0 + [8])
	
.LABEL $label$5
	$2 = ( $3 ? $2 : ($3 <= $2) )
	$3 = ($4 - $1)
	$3 = ($3 - $2)
	if ( ($3 == 0) ){ goto $label$7 }
	$1 = ($5 + $1)
	CALL memmove($1, ($1 + $2), $3)
	$6 = *($0)
	
.LABEL $label$7
	$2 = ($4 - $2)
	if ( ($6 & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($5 + $2)) = [0]
	
.LABEL $label$4
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $292 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$8 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$8 = *($0 + [8])
	
.LABEL $label$2
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$9 = [11]
	$2 = ($2 + $1)
	$7 = ($1 << [1])
	$2 = ( $7 ? $2 : ($2 <= $7) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $280($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL $282($8)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC _ZN6NiuNiu8_backeosEyRKN5eosio5assetERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [192])
	*([0] + [4]) = $14
	$11 = CALL current_time()
	*(($14 + [116])) = [0]
	*(($14 + [120])) = [0]
	*($14 + [100]) = [0]
	*($14 + [104]) = [0]
	*($14 + [108]) = [0]
	*($14 + [112]) = [0]
	*($14 + [88]) = ((CASTING uint_32)(uint_64 ((uint_64)$11 / (uint_64)(int_64)1000000)) + [60])
	*($14 + [124]) = [0]
	*(($14 + [128])) = [0]
	*(($14 + [132])) = [0]
	*($14 + [136]) = [0]
	*(($14 + [140])) = [0]
	*(($14 + [144])) = [0]
	$5 = ($14 + [124])
	$4 = *($0)
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [1424]
	$12 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$6 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$6 = ($6 + [165])
	goto $label$4 
	
.LABEL $label$6
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$2
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$1 }
	*($14 + [80]) = $12
	*($14 + [72]) = $4
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [688]
	$12 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$11 > (uint_64)(int_64)10) ){ goto $label$12 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$6 = ($6 + [165])
	goto $label$10 
	
.LABEL $label$12
	$13 = (int_64)0
	if ( ((int_64)$11 == (int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$8
	$9 = ($9 + [1])
	$10 = ((int_64)$10 + (int_64)-5)
	$12 = ((int_64)$13 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)1)
	if ( ((int_64)$11 != (int_64)13) ){ goto $label$7 }
	*($14 + [64]) = $12
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [672]
	$12 = (int_64)0
	
.LOOP $label$13:
	if ( ((uint_64)$11 > (uint_64)(int_64)7) ){ goto $label$18 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$6 = ($6 + [165])
	goto $label$16 
	
.LABEL $label$18
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$14
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$13 }
	*($14 + [56]) = $12
	*(($14 + [28])) = *(($2 + [12]))
	*(($14 + [24])) = *(($2 + [8]))
	*(($14 + [20])) = *(($2 + [4]))
	*($14 + [8]) = $1
	*($14) = $4
	*($14 + [16]) = *($2)
	$9 = *($3 + [8])
	$6 = *($3)
	*(($14 + [40])) = [0]
	*($14 + [32]) = (int_64)0
	$2 = ($14 + [32])
	$3 = ( $9 ? ($3 + [1]) : ($6 & [1]) )
	$9 = CALL strlen($3)
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$19 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$22 }
	*(($14 + [32])) = ($9 << [1])
	$6 = ($2 + [1])
	if ( $9 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	$7 = (($9 + [16]) & [-16])
	$6 = CALL $280($7)
	*(($14 + [32])) = ($7 | [1])
	*(($14 + [40])) = $6
	*(($14 + [36])) = $9
	
.LABEL $label$21
	CALL memcpy($6, $3, $9)
	
.LABEL $label$20
	*(($6 + $9)) = [0]
	$6 = *(($14 + [128]))
	if ( ((uint_32)$6 >= (uint_32)*(($14 + [132]))) ){ goto $label$26 }
	$3 = ($14 + [16])
	$5 = ($14 + [8])
	*($6 + [8]) = *($14 + [56])
	*($6) = *($14 + [64])
	*($6 + [16 align=4]) = (int_64)0
	*(($7 = ($6 + [24]))) = [0]
	$9 = CALL $280([16])
	*($6 + [16]) = $9
	$8 = ($9 + [16])
	*($7) = $8
	*(($9 + [8])) = *((($14 + [72]) + [8]))
	*($9) = *($14 + [72])
	*(($6 + [20])) = $8
	*($6 + [28]) = [0]
	*(($6 + [32])) = [0]
	*(($6 + [36])) = [0]
	$9 = *(($14 + [32]))
	$7 = ( *(($14 + [36])) ? uint_32($9 >> [1]) : ($9 & [1]) )
	$9 = ($7 + [32])
	$11 = (CASTING uint_64)(uint_32 $7)
	$7 = ($6 + [28])
	
.LOOP $label$27:
	$9 = ($9 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$27 }
	if ( ($9 == 0) ){ goto $label$25 }
	CALL $77($7, $9)
	$7 = *(($6 + [32]))
	$9 = *(($6 + [28]))
	goto $label$24 
	
.LABEL $label$26
	CALL $111($5, ($14 + [72]), ($14 + [64]), ($14 + [56]), $14)
	goto $label$23 
	
.LABEL $label$25
	$7 = [0]
	$9 = [0]
	
.LABEL $label$24
	*($14 + [156]) = $9
	*($14 + [152]) = $9
	*($14 + [160]) = $7
	*($14 + [168]) = ($14 + [152])
	*($14 + [180]) = $5
	*($14 + [184]) = $3
	*($14 + [188]) = $2
	*($14 + [176]) = $14
	CALL $110(($14 + [176]), ($14 + [168]))
	*(($9 = (($14 + [88]) + [40]))) = (*($9) + [40])
	
.LABEL $label$23
	if ( ((*(($14 + [32])) & [1]) == 0) ){ goto $label$28 }
	CALL $282(*(($14 + [40])))
	
.LABEL $label$28
	*(($14 + [108])) = [0]
	$4 = CALL _ZN6NiuNiu13_getglobalcntEv($0)
	*($14) = $4
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [1456]
	$12 = (int_64)0
	
.LOOP $label$29:
	if ( ((uint_64)$11 > (uint_64)(int_64)9) ){ goto $label$34 }
	$6 = *($9)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$6 = ($6 + [165])
	goto $label$32 
	
.LABEL $label$34
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$33
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$32
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$31
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$30
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$29 }
	*($14) = ((int_64)( $12 ? (int_64)1 : (int_64)($4 == 0) ) + (int_64)$4)
	CALL $73(($0 + [88]), $14, *($0))
	$11 = *($14)
	*($14 + [8]) = (int_64)0
	*($14) = $11
	$11 = *($0)
	CALL $74(($14 + [176]), ($14 + [88]))
	$9 = *($14 + [176])
	CALL send_deferred($14, $11, $9, (*($14 + [180]) - $9), [0])
	$9 = *($14 + [176])
	if ( ($9 == 0) ){ goto $label$35 }
	*($14 + [180]) = $9
	CALL $282($9)
	
.LABEL $label$35
	CALL $75(($14 + [88]))
	*([0] + [4]) = ($14 + [192])
	return (unreachable)
	
.LABEL $label$19
	CALL $284($2)
}

void .FUNC $212 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$2 = *([0] + [4])
	$10 = $2
	$7 = (int_64)1
	$8 = *($0 + [8])
	$5 = (int_64)($8 == 0)
	if ( $5 ){ goto $label$1 }
	$9 = ((int_64)$8 + (int_64)1)
	$7 = (int_64)1
	
.LOOP $label$2:
	$7 = ((int_64)$7 * (int_64)10)
	$9 = ((int_64)$9 + (int_64)-1)
	if ( ((int_64)$9 > (int_64)1) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = ($0 + [8])
	$2 = ($2 - (((CASTING uint_32)(uint_64 ((int_64)$8 + (int_64)1)) + [15]) & [1008]))
	*([0] + [4]) = $2
	*(($6 = ($2 + ($3 = (CASTING uint_32)(uint_64 $8))))) = [0]
	$4 = *($0)
	if ( $5 ){ goto $label$3 }
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$4 % (int_64)$7)
	$0 = ($6 + [-1])
	
.LOOP $label$4:
	*($0) = ((int_64)((int_64)$9 % (int_64)10) + (int_64)48)
	$0 = ($0 + [-1])
	$9 = ((int_64)$9 / (int_64)10)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 > (int_64)1) ){ goto $label$4 }
	
.LABEL $label$3
	CALL printi(((int_64)$4 / (int_64)$7))
	CALL prints([240])
	CALL prints_l($2, $3)
	CALL prints([256])
	CALL $213($1, [0])
	*([0] + [4]) = $10
}

void .FUNC $343 ()
{
	(unreachable)
}

int_32 .FUNC __month_to_secs (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = *((($0 << [2]) + [15648]))
	return ( ( ($2 + [86400]) ? $2 : $1 ) ? $2 : ((int_32)$0 > (int_32)[1]) )
}

int_64 .FUNC __year_to_secs (int_64 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = (*([0] + [4]) - [16])
	if ( ((uint_64)((int_64)$0 + (int_64)-2) > (uint_64)(int_64)136) ){ goto $label$10 }
	$4 = (CASTING uint_32)(uint_64 $0)
	$3 = ($4 + [-68])
	$2 = int_32($3 >> [2])
	if ( (($3 & [3]) == 0) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$8 }
	*($1) = [0]
	goto $label$8 
	
.LABEL $label$10
	if ( $1 ){ goto $label$11 }
	*($2 + [12]) = [0]
	$1 = ($2 + [12])
	
.LABEL $label$11
	$4 = [0]
	$0 = ((int_64)$0 + (int_64)-100)
	$2 = (CASTING uint_32)(uint_64 ((int_64)$0 % (int_64)400))
	$3 = (int_32($2 >> [31]) + (CASTING uint_32)(uint_64 ((int_64)$0 / (int_64)400)))
	$2 = ( ($2 + [400]) ? $2 : ((int_32)$2 < (int_32)[0]) )
	if ( ($2 == 0) ){ goto $label$7 }
	if ( ((int_32)$2 < (int_32)[200]) ){ goto $label$6 }
	if ( ((int_32)$2 < (int_32)[300]) ){ goto $label$5 }
	$4 = [3]
	$2 = ($2 + [-300])
	if ( $2 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$9
	$2 = ($2 + [-1])
	if ( ($1 == 0) ){ goto $label$8 }
	*($1) = [1]
	
.LABEL $label$8
	return (CASTING int_64)(int_32 ((((int_32)$4 * (int_32)[31536000]) + ((int_32)$2 * (int_32)[86400])) + [2087447296]))
	
.LABEL $label$7
	$2 = [1]
	goto $label$2 
	
.LABEL $label$6
	$4 = ((int_32)$2 > (int_32)[99])
	$2 = ( ($2 + [-100]) ? $2 : $4 )
	if ( $2 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = [2]
	$2 = ($2 + [-200])
	if ( ($2 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = uint_32($2 >> [2])
	$2 = (($2 & [3]) == 0)
	goto $label$1 
	
.LABEL $label$3
	$2 = [0]
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	*($1) = $2
	return ((int_64)((int_64)((int_64)$0 * (int_64)31536000) + (int_64)((int_64)(CASTING int_64)(int_32 (((((int_32)$3 * (int_32)[97]) - $2) + ((int_32)$4 * (int_32)[24])) + $5)) * (int_64)86400)) + (int_64)946771200)
}

int_64 .FUNC __tm_to_secs (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = *($0 + [20])
	$1 = *($0 + [16])
	if ( ($1 <= [12]) ){ goto $label$2 }
	$2 = ((int_32)$1 % (int_32)[12])
	$6 = ( ($2 + [12]) ? $2 : ((int_32)$2 < (int_32)[0]) )
	$7 = ((int_64)(CASTING int_64)(int_32 (int_32($2 >> [31]) + ((int_32)$1 / (int_32)[12]))) + (int_64)$7)
	goto $label$1 
	
.LABEL $label$2
	$6 = $1
	
.LABEL $label$1
	$7 = CALL __year_to_secs($7, ($8 + [12]))
	$1 = CALL __month_to_secs($6, *($8 + [12]))
	$2 = *($0 + [12])
	$3 = *($0 + [8])
	$4 = *($0 + [4])
	$5 = *($0)
	*([0] + [4]) = ($8 + [16])
	return ((int_64)$5 + (int_64)((int_64)((int_64)((int_64)((int_64)$7 + (int_64)(CASTING int_64)(int_32 $1)) + (int_64)((int_64)(CASTING int_64)(int_32 ($2 + [-1])) * (int_64)86400)) + (int_64)((int_64)$3 * (int_64)3600)) + (int_64)((int_64)$4 * (int_64)60)))
}

void .FUNC _ZN6NiuNiu10clearginfoEy (int_32 $0, int_64 $1)
{
	CALL require_auth($1)
	CALL eosio_assert(((int_64)*($0) == (int_64)$1), [736])
	CALL _ZN6NiuNiu16_clearglobalinfoEv($0)
}

void .FUNC $283 (int_32 $0)
{
	CALL $282($0)
}

void .FUNC _ZN6NiuNiu12opengameloopEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [96])
	*([0] + [4]) = $8
	CALL require_auth($1)
	CALL eosio_assert(((int_64)*($0) == (int_64)$1), [1312])
	$3 = ($0 + [8])
	$4 = *(($0 + [36]))
	if ( ((int_32)$4 == (int_32)*(($0 + [32]))) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [96]) == (int_32)$3), [1104])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($3), *(($0 + [16])), (int_64)7035929282832498688, (int_64)7035929282832498688)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*(CALL $62($3, $4) + [96]) == (int_32)$3), [1104])
	
.LABEL $label$2
	CALL _ZN6NiuNiu11_getgamectxEv($8, $0)
	$1 = CALL current_time()
	if ( ((uint_64)*($8 + [72]) > (uint_64)((int_64)((uint_64)$1 / (uint_64)(int_64)1000000) & (int_64)4294967295)) ){ goto $label$4 }
	if ( ((int_64)*($8 + [80]) != (int_64)$2) ){ goto $label$4 }
	$3 = ($8 + [40])
	$4 = *($8 + [40])
	$7 = ($8 + [44])
	$5 = CALL strlen([1344])
	if ( ((int_32)$5 != (int_32)( *($7) ? uint_32($4 >> [1]) : ($4 & [1]) )) ){ goto $label$8 }
	if ( (CALL $294($3, [0], [-1], [1344], $5) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$4 = *($3)
	$5 = CALL strlen([1360])
	if ( ((int_32)$5 != (int_32)( *($7) ? uint_32($4 >> [1]) : ($4 & [1]) )) ){ goto $label$9 }
	if ( (CALL $294($3, [0], [-1], [1360], $5) == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = ($8 + [40])
	$4 = *($5)
	$7 = ($8 + [44])
	$6 = CALL strlen([1376])
	if ( ((int_32)$6 != (int_32)( *($7) ? uint_32($4 >> [1]) : ($4 & [1]) )) ){ goto $label$10 }
	if ( (CALL $294($3, [0], [-1], [1376], $6) == 0) ){ goto $label$5 }
	
.LABEL $label$10
	$4 = *($5)
	$6 = CALL strlen([1392])
	if ( ((int_32)$6 != (int_32)( *($7) ? uint_32($4 >> [1]) : ($4 & [1]) )) ){ goto $label$4 }
	if ( CALL $294($3, [0], [-1], [1392], $6) ){ goto $label$4 }
	CALL _ZN6NiuNiu12_onwaitstartEv($0)
	goto $label$4 
	
.LABEL $label$7
	CALL _ZN6NiuNiu10_onplayingEv($0)
	goto $label$4 
	
.LABEL $label$6
	CALL _ZN6NiuNiu7_onwaitEv($0)
	goto $label$4 
	
.LABEL $label$5
	CALL _ZN6NiuNiu6_onendEv($0)
	
.LABEL $label$4
	if ( ((*($8 + [40]) & [1]) == 0) ){ goto $label$11 }
	CALL $282(*(($8 + [48])))
	
.LABEL $label$11
	if ( ((*($8 + [28]) & [1]) == 0) ){ goto $label$1 }
	CALL $282(*(($8 + [36])))
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [96])
}

int_32 .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = (*([0] + [4]) - [16])
	$8 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	$6 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8 + [8]) = (int_64)0
	*($8) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [1056])
	CALL memcpy($8, $6, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [1056])
	$5 = ($8 + [8])
	CALL memcpy($5, ($6 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($5)
	$3 = *($8)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$7 = *((*($1) + $7))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $7))
	*([0] + [4]) = ($8 + [16])
	return [1]
}

void .FUNC _ZN6NiuNiu10downbankerEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [160])
	*([0] + [4]) = $7
	CALL prints([2576])
	CALL printn($1)
	CALL prints([560])
	CALL require_auth($1)
	CALL _ZN6NiuNiu11_getgamectxEv(($7 + [64]), $0)
	if ( ((int_64)*($7 + [64]) != (int_64)$1) ){ goto $label$5 }
	$3 = *($7 + [104])
	$2 = CALL strlen([1360])
	if ( ((int_32)$2 != (int_32)( *(($7 + [108])) ? uint_32($3 >> [1]) : ($3 & [1]) )) ){ goto $label$5 }
	$3 = ($7 + [104])
	if ( (CALL $294($3, [0], [-1], [1360], $2) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	*(($7 + [56])) = [0]
	*($7 + [40]) = (int_64)-1
	*($7 + [48]) = (int_64)0
	$4 = *($0)
	*($7 + [24]) = $4
	*($7 + [32]) = $4
	$3 = CALL db_find_i64($4, $4, (int_64)4154295083342381056, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	$3 = CALL $105(($7 + [24]), $3)
	CALL eosio_assert(((int_32)*($3 + [20]) == (int_32)($7 + [24])), [1104])
	$6 = *($3 + [16])
	if ( ($6 == 0) ){ goto $label$7 }
	$1 = *($3)
	*(($7 + [16])) = [0]
	*($7 + [8]) = (int_64)0
	$2 = CALL strlen([1760])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$3 }
	$4 = (CASTING uint_64)(uint_32 $6)
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$10 }
	*($7 + [8]) = ($2 << [1])
	$6 = (($7 + [8]) | [1])
	if ( $2 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $280($5)
	*($7 + [8]) = ($5 | [1])
	*($7 + [16]) = $6
	*($7 + [12]) = $2
	
.LABEL $label$9
	CALL memcpy($6, [1760], $2)
	
.LABEL $label$8
	*(($6 + $2)) = [0]
	CALL _ZN6NiuNiu14_simplebackeosEyyRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0, $1, $4, ($7 + [8]))
	if ( ((*($7 + [8]) & [1]) == 0) ){ goto $label$7 }
	CALL $282(*($7 + [16]))
	
.LABEL $label$7
	CALL eosio_assert([1], [768])
	CALL eosio_assert([1], [816])
	$0 = CALL db_next_i64(*($3 + [24]), ($7 + [8]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$11 }
	CALL $105(($7 + [24]), $0)
	
.LABEL $label$11
	CALL $107(($7 + [24]), $3)
	
.LABEL $label$6
	$2 = *($7 + [48])
	if ( ($2 == 0) ){ goto $label$1 }
	$6 = ($7 + [52])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$13 }
	
.LOOP $label$14:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$15 }
	CALL $282($3)
	
.LABEL $label$15
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$14 }
	$0 = *(($7 + [48]))
	goto $label$12 
	
.LABEL $label$13
	$0 = $2
	
.LABEL $label$12
	*($6) = $2
	CALL $282($0)
	goto $label$1 
	
.LABEL $label$4
	CALL $288($3, [2592])
	$2 = *($7 + [76])
	if ( ($2 == 0) ){ goto $label$16 }
	$1 = *($7 + [64])
	*(($7 + [32])) = [0]
	*($7 + [24]) = (int_64)0
	$3 = CALL strlen([1760])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$4 = (CASTING uint_64)(uint_32 $2)
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$19 }
	*($7 + [24]) = ($3 << [1])
	$2 = (($7 + [24]) | [1])
	if ( $3 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$6 = (($3 + [16]) & [-16])
	$2 = CALL $280($6)
	*($7 + [24]) = ($6 | [1])
	*($7 + [32]) = $2
	*($7 + [28]) = $3
	
.LABEL $label$18
	CALL memcpy($2, [1760], $3)
	
.LABEL $label$17
	*(($2 + $3)) = [0]
	CALL _ZN6NiuNiu14_simplebackeosEyyRKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE($0, $1, $4, ($7 + [24]))
	if ( ((*($7 + [24]) & [1]) == 0) ){ goto $label$16 }
	CALL $282(*($7 + [32]))
	
.LABEL $label$16
	CALL _ZN6NiuNiu13_cleargamectxEv($0)
	CALL _ZN6NiuNiu14_autosetbankerEv($0)
	goto $label$1 
	
.LABEL $label$3
	CALL $284(($7 + [8]))
	
.LABEL $label$2
	CALL $284(($7 + [24]))
	
.LABEL $label$1
	if ( ((*(($7 + [104])) & [1]) == 0) ){ goto $label$20 }
	CALL $282(*(($7 + [112])))
	
.LABEL $label$20
	if ( ((*($7 + [92]) & [1]) == 0) ){ goto $label$21 }
	CALL $282(*(($7 + [100])))
	
.LABEL $label$21
	*([0] + [4]) = ($7 + [160])
	(unreachable)
	(unreachable)
}

void .FUNC _ZN6NiuNiu10keepbankerEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	CALL require_auth($1)
	CALL _ZN6NiuNiu11_getgamectxEv($5, $0)
	$2 = ($5 + [40])
	if ( ((int_64)*($5) != (int_64)$1) ){ goto $label$1 }
	$4 = *($2)
	$3 = CALL strlen([1360])
	if ( ((int_32)$3 != (int_32)( *(($5 + [44])) ? uint_32($4 >> [1]) : ($4 & [1]) )) ){ goto $label$1 }
	if ( CALL $294($2, [0], [-1], [1360], $3) ){ goto $label$1 }
	CALL $288($2, [1392])
	*($5 + [64]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($5 + [72]) = ((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) + (int_64)2) & (int_64)4294967295)
	CALL eosio_assert(((int_64)*($5) != (int_64)0), [1408])
	CALL $69(($0 + [8]), $5, *($0))
	CALL _ZN6NiuNiu11_starttimerEyy($0, *($5 + [80]), (int_64)2)
	
.LABEL $label$1
	if ( ((*($2) & [1]) == 0) ){ goto $label$2 }
	CALL $282(*(($5 + [48])))
	
.LABEL $label$2
	if ( ((*($5 + [28]) & [1]) == 0) ){ goto $label$3 }
	CALL $282(*(($5 + [36])))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [96])
}

void .FUNC _ZN6NiuNiu5resetEy (int_32 $0, int_64 $1)
{
	CALL require_auth($1)
	CALL eosio_assert(((int_64)*($0) == (int_64)$1), [736])
	CALL _ZN6NiuNiu13_cleargamehisEv($0)
	CALL _ZN6NiuNiu16_clearglobalinfoEv($0)
	CALL _ZN6NiuNiu16_clearconfiginfoEv($0)
	CALL _ZN6NiuNiu13_cleargamectxEv($0)
	CALL _ZN6NiuNiu16_clearbankerlistEv($0)
	CALL _ZN6NiuNiu13_clearbetinfoEv($0)
}

int_32 .FUNC $280 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [12716])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [64])
	*([0] + [4]) = $3
	*(($2 = $3) + [44]) = $0
	*($2 + [32]) = *($1)
	*($2 + [36]) = *($1 + [4])
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$4 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$4
	$1 = [0]
	goto $label$1 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($2 + [16])) = (int_64)0
	*(($2 + [24])) = (int_64)0
	*($2) = (int_64)0
	*($2 + [8]) = (int_64)0
	*($2 + [56]) = ($1 + $0)
	*($2 + [48]) = $1
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [1056])
	CALL memcpy($2, $1, [8])
	*($2 + [52]) = ($1 + [8])
	CALL $187(($2 + [48]), ($2 + [8]))
	CALL $187(($2 + [48]), ($2 + [20]))
	if ( ($0 <= [513]) ){ goto $label$5 }
	CALL free($1)
	
.LABEL $label$5
	*($2 + [52]) = ($2 + [32])
	*($2 + [48]) = ($2 + [44])
	CALL $191(($2 + [48]), $2)
	if ( ((*($2 + [20]) & [1]) == 0) ){ goto $label$6 }
	CALL $282(*(($2 + [28])))
	
.LABEL $label$6
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$7 }
	CALL $282(*(($2 + [16])))
	
.LABEL $label$7
	*([0] + [4]) = ($2 + [64])
	return [1]
}

void .FUNC _ZN6NiuNiu12cleargamehisEy (int_32 $0, int_64 $1)
{
	CALL require_auth($1)
	CALL eosio_assert(((int_64)*($0) == (int_64)$1), [736])
	CALL _ZN6NiuNiu13_cleargamehisEv($0)
}

int_32 .FUNC $281 (int_32 $0)
{
	return CALL $280($0)
}