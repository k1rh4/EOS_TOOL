(data (i32.const 8489) "failed to allocate pages\00EOS\00")
(data (i32.const 8528) "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\00")
(data (i32.const 8587) "PUB_R1_\00")
(data (i32.const 8595) "unrecognized public key format\00")
(data (i32.const 8626) "owner\00")
(data (i32.const 8632) "That account is already for sale.\00")
(data (i32.const 8666) "Sell Error: The payment account does not exist.\00")
(data (i32.const 8714) "Sell Error: The payment account cannot be the account for sale!\00")
(data (i32.const 8778) "Sell Error: Sale price must be in \00")
(data (i32.const 8813) ". Ex: 10.0000 \00")
(data (i32.const 8828) ".\00")
(data (i32.const 8830) "Sell Error: Sale price is not valid.\00")
(data (i32.const 8867) "Sell Error: Sale price must be at least 1 \00")
(data (i32.const 8910) ". Ex: 1.0000 \00")
(data (i32.const 8924) "Sell Error: The message must be <= 100 characters.\00")
(data (i32.const 8975) "active\00")
(data (i32.const 8982) "None\00")
(data (i32.const 8988) "EOSNameSwaps: Your account \00")
(data (i32.const 9016) " has been listed for sale. Keep an eye out for bids, and don\'t forget to vote for accounts you like!\00")
(data (i32.const 9117) "Buy Error: Transfer must be direct to contract.\00")
(data (i32.const 9165) "cn:\00")
(data (i32.const 9169) "sp:\00")
(data (i32.const 9173) "mk:\00")
(data (i32.const 9177) "Buy Error: Malformed buy string.\00")
(data (i32.const 9210) "Buy Error: You must pay in \00")
(data (i32.const 9238) "Buy Error: Quantity is not valid.\00")
(data (i32.const 9272) "Buy Error: Malformed buy name.\00")
(data (i32.const 9303) ".e\00")
(data (i32.const 9306) ".x\00")
(data (i32.const 9309) ".y\00")
(data (i32.const 9312) ".z\00")
(data (i32.const 9315) "Custom Error: That is not a valid suffix.\00")
(data (i32.const 9357) "Custom Error: Incorrect custom name length\00")
(data (i32.const 9400) "Custom Error: Wrong amount transferred.\00")
(data (i32.const 9440) "buyname.x\00")
(data (i32.const 9450) "-\00")
(data (i32.const 9452) "-nameswapsfee\00")
(data (i32.const 9466) "e\00")
(data (i32.const 9468) "+\00")
(data (i32.const 9470) "+219959\00")
(data (i32.const 9478) "eosio.token\00")
(data (i32.const 9490) "transfer\00")
(data (i32.const 9499) "eosio\00")
(data (i32.const 9505) "newaccount\00")
(data (i32.const 9516) "buyram\00")
(data (i32.const 9523) "delegatebw\00")
(data (i32.const 9534) "Buy Error: Account \00")
(data (i32.const 9554) " is not for sale.\00")
(data (i32.const 9572) "Buy Error: The bid has been rejected. Bid higher.\00")
(data (i32.const 9622) "Buy Error: The bid has not been accepted or rejected yet.\00")
(data (i32.const 9680) "Buy Error: Only the accepted bidder can purchase the account at the bid price.\00")
(data (i32.const 9759) "Buy Error: You have not transferred the correct amount of \00")
(data (i32.const 9818) ". Check the sale price.\00")
(data (i32.const 9842) "EOSNameSwaps: Account referrer fee: \00")
(data (i32.const 9879) "EOSNameSwaps: Account contract fee: \00")
(data (i32.const 9916) "EOSNameSwaps: Account seller fee: \00")
(data (i32.const 9951) "EOSNameSwaps: You have successfully bought the account \00")
(data (i32.const 10007) ". Please come again.\00")
(data (i32.const 10028) "Cancel Error: That account name is not listed for sale\00")
(data (i32.const 10083) "Cancel Error: Only the payment account can cancel the sale.\00")
(data (i32.const 10143) "EOSNameSwaps: You have successfully cancelled the sale of the account \00")
(data (i32.const 10214) "Update Error: That account name is not listed for sale\00")
(data (i32.const 10269) "Update Error: Only the payment account can update a sale.\00")
(data (i32.const 10327) "Update Error: Sale price must be in \00")
(data (i32.const 10364) "Update Error: Sale price is not valid.\00")
(data (i32.const 10403) "Update Error: Sale price must be at least 1 \00")
(data (i32.const 10448) "EOSNameSwaps: You have successfully updated the sale of the account \00")
(data (i32.const 10517) "Vote Error: You are not who you say you are. Check permissions.\00")
(data (i32.const 10581) "Vote Error: That account name is not listed for sale.\00")
(data (i32.const 10635) "Vote Error: You have already voted for this account!\00")
(data (i32.const 10688) "Referrer Error: Only the contract account can register referrers.\00")
(data (i32.const 10754) "Referrer Error: The referrer account does not exist.\00")
(data (i32.const 10807) "Referrer Error: Only the contract account can register shops.\00")
(data (i32.const 10869) "Propose Bid Error: You are not who you say you are. Check permissions.\00")
(data (i32.const 10940) "Propose Bid Error: That account name is not listed for sale\00")
(data (i32.const 11000) "Propose Bid Error: Bid price must be in \00")
(data (i32.const 11041) "Propose Bid Error: Bid price is not valid.\00")
(data (i32.const 11084) "Propose Bid Error: The minimum bid price is 1.0000 \00")
(data (i32.const 11136) "Propose Bid Error: You must bid higher than the last bidder.\00")
(data (i32.const 11197) "Propose Bid Error: You must bid lower than the sale price.\00")
(data (i32.const 11256) " has received a bid. If you choose to accept it, the bidder can purchase the account at the lower price. Others can still bid higher or pay the full sale price until then.\00")
(data (i32.const 11428) "Decide Bid Error: That account name is not listed for sale.\00")
(data (i32.const 11488) "Decide Bid Error: Only the payment account can decide on bids.\00")
(data (i32.const 11551) "Decide Bid Error: There are no bids to accept or reject.\00")
(data (i32.const 11608) "EOSNameSwaps: Your bid for \00")
(data (i32.const 11636) " has been accepted. Account \00")
(data (i32.const 11665) " can buy it for the bid price. Be quick, as others can still outbid you or pay the full sale price.\00")
(data (i32.const 11765) " has been rejected. Increase your bid offer\00")
(data (i32.const 11809) "Message Error: Only the contract can send messages.\00")
(data (i32.const 11861) "Admin Error: Malformed screening data.\00")
(data (i32.const 11900) "initloan\00")
(data (i32.const 11909) "nameswapsln1\00")
(data (i32.const 11922) "nameswapsln2\00")
(data (i32.const 11935) "nameswapsln3\00")
(data (i32.const 11948) "nameswapsln4\00")
(data (i32.const 11961) "Lend Error: You can only recieve a loan once in 12 hours.\00")
(data (i32.const 12019) "Lend Error: Max loan of 5 \00")
(data (i32.const 12046) " for CPU and 1 \00")
(data (i32.const 12062) " for NET.\00")
(data (i32.const 12072) "loaner\00")
(data (i32.const 12079) "undelegatebw\00")
(data (i32.const 12092) "eosnameswaps\00")
(data (i32.const 12105) "message\00")
(data (i32.const 12113) "updateauth\00")
(data (i32.const 12124) "sell\00")
(data (i32.const 12129) "cancel\00")
(data (i32.const 12136) "update\00")
(data (i32.const 12143) "vote\00")
(data (i32.const 12148) "proposebid\00")
(data (i32.const 12159) "decidebid\00")
(data (i32.const 12169) "screener\00")
(data (i32.const 12178) "lend\00")
(data (i32.const 12183) "regref\00")
(data (i32.const 12190) "regshop\00")
(data (i32.const 12198) "initstats\00")
(data (i32.const 12208) "string is too long to be a valid name\00")
(data (i32.const 12246) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 12313) "character is not in allowed character set for names\00")
(data (i32.const 12365) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 12424) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 12473) "invalid symbol name\00")
(data (i32.const 12496) "\d40\00\00")
(data (i32.const 12500) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 12533) "write\00")
(data (i32.const 12539) "nameswapsfee\00")
(data (i32.const 12552) "nameswapsfnd\00")
(data (i32.const 12565) "string is too long to be a valid symbol_code\00")
(data (i32.const 12610) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 12663) "invalid base-58 value\00")
(data (i32.const 12685) "base-58 value is out of range\00")
(data (i32.const 12715) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 12766) "error reading iterator\00")
(data (i32.const 12789) "cannot create objects in table of another contract\00")
(data (i32.const 12840) "read\00")
(data (i32.const 12845) "cannot pass end iterator to modify\00")
(data (i32.const 12880) "object passed to modify is not in multi_index\00")
(data (i32.const 12926) "cannot modify objects in table of another contract\00")
(data (i32.const 12977) "updater cannot change primary key when modifying an object\00")
(data (i32.const 13036) "attempt to add asset with different symbol\00")
(data (i32.const 13079) "addition underflow\00")
(data (i32.const 13098) "addition overflow\00")
(data (i32.const 13116) "cannot pass end iterator to erase\00")
(data (i32.const 13150) "cannot increment end iterator\00")
(data (i32.const 13180) "object passed to erase is not in multi_index\00")
(data (i32.const 13225) "cannot erase objects in table of another contract\00")
(data (i32.const 13275) "attempt to remove object that was not in multi_index\00")
(data (i32.const 13328) "get\00")
(data (i32.const 0) "\184\00\00")
(data (i32.const 0) "\184\00\00")
(data (i32.const 0) "\184\00\00")
(import "env" "memcpy" (func $fimport$0 (param i32 i32 i32) (result i32)))
(import "env" "eosio_assert" (func $fimport$1 (param i32 i32)))
(import "env" "require_auth2" (func $fimport$2 (param i64 i64)))
(import "env" "db_find_i64" (func $fimport$3 (param i64 i64 i64 i64) (result i32)))
(import "env" "is_account" (func $fimport$4 (param i64) (result i32)))
(import "env" "abort" (func $fimport$5))
(import "env" "memset" (func $fimport$6 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$7 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$8 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$9 (param i32 i32)))
(import "env" "__multf3" (func $fimport$10 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$11 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$12 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$13 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$14 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$15 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$16 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$17 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$18 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$19 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$20 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$21 (param i64 i64) (result f32)))
(import "env" "prints_l" (func $fimport$22 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$23 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$24 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$25 (param i64 i64) (result i32)))
(import "env" "current_receiver" (func $fimport$26 (result i64)))
(import "env" "db_store_i64" (func $fimport$27 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_next_i64" (func $fimport$28 (param i32 i32) (result i32)))
(import "env" "send_inline" (func $fimport$29 (param i32 i32)))
(import "env" "has_auth" (func $fimport$30 (param i64) (result i32)))
(import "env" "require_recipient" (func $fimport$31 (param i64)))
(import "env" "require_auth" (func $fimport$32 (param i64)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$33 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$34 (param i32 i32) (result i32)))
(import "env" "set_proposed_producers" (func $fimport$35 (param i32 i32) (result i64)))
(import "env" "current_time" (func $fimport$36 (result i64)))
(import "env" "get_active_producers" (func $fimport$37 (param i32 i32) (result i32)))
(import "env" "send_deferred" (func $fimport$38 (param i32 i64 i32 i32 i32)))
(import "env" "eosio_exit" (func $fimport$39 (param i32)))
(import "env" "action_data_size" (func $fimport$40 (result i32)))
(import "env" "read_action_data" (func $fimport$41 (param i32 i32) (result i32)))
(import "env" "eosio_assert_code" (func $fimport$42 (param i32 i64)))
(import "env" "db_get_i64" (func $fimport$43 (param i32 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$44 (param i32 i64 i32 i32)))
(import "env" "db_remove_i64" (func $fimport$45 (param i32)))
(export "apply" (func $108))
(table $0 14 14 anyfunc)
(elem (i32.const 1) $53 $32 $74 $76 $79 $88 $90 $93 $94 $96 $81 $83 $105)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 13332))
(global $global$2 i32 (i32.const 13332))


void .FUNC $98 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12533])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12533])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12533])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($4 + [24]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12533])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = ($4 + [32])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12533])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($4 + [40]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12533])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$1 = *($1)
	*($2 + [8]) = *($4 + [48])
	$4 = *($1 + [4])
	if ( ((int_32)(*($1 + [8]) - $4) > (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert([0], [12533])
	$4 = *(($1 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, ($2 + [8]), [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $99 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12533])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12533])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12533])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($4 + [24]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12533])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$5 = ($4 + [32])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $0) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12533])
	$0 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $5, [8])
	$5 = (*($0) + [8])
	*(($0 = ($1 + [4]))) = $5
	*($2 + [8]) = *(($4 + [40]))
	if ( ((int_32)(*(($1 + [8])) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12533])
	$5 = *($0)
	
.LABEL $label$6
	CALL memcpy($5, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $94 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [16])
	$global$0 = $3
	CALL require_auth(*($0))
	*($3 + [12]) = $2
	if ( ($2 <= [3]) ){ goto $label$1 }
	CALL eosio_assert([0], [11861])
	
.LABEL $label$1
	$4 = ($0 + [184])
	$6 = *(($0 + [212]))
	$5 = *(($0 + [208]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$4 }
	
.LOOP $label$6:
	$2 = ($6 + [-24])
	$7 = *($2)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$5 }
	$6 = $2
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$4 }
	if ( ((int_32)*($7 + [44]) == (int_32)$4) ){ goto $label$7 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$7
	$1 = *($0)
	*($3 + [8]) = ($3 + [12])
	if ( $7 ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	$2 = CALL db_find_i64(*($4), *(($0 + [192])), (int_64)6301507159775510528, $1)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$8 }
	$7 = CALL $62($4, $2)
	if ( ((int_32)*($7 + [44]) == (int_32)$4) ){ goto $label$9 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$9
	$1 = *($0)
	*($3 + [8]) = ($3 + [12])
	goto $label$2 
	
.LABEL $label$8
	$1 = *($0)
	*($3 + [8]) = ($3 + [12])
	
.LABEL $label$3
	$7 = [0]
	CALL eosio_assert([0], [12845])
	
.LABEL $label$2
	CALL $95($4, $7, $1, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $95 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12880])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12926])
	
.LABEL $label$2
	*($1 + [8]) = ((int_32)*(*($3)) != (int_32)[0])
	$3 = *($1 + [32])
	$6 = ( *(($1 + [36])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($6 + [25])
	$7 = (CASTING uint_64)(uint_32 $6)
	$6 = ($1 + [32])
	$8 = ($1 + [8])
	$9 = *($1)
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	if ( ($3 <= [513]) ){ goto $label$5 }
	$4 = CALL $3($3)
	goto $label$4 
	
.LABEL $label$5
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [16]) = $5
	*($5 + [28]) = $8
	*($5 + [40]) = $6
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [24])
	CALL $153(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [48]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$9 >= (uint_64)*($0 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $4($4)
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$6
	$global$0 = ($5 + [48])
}

void .FUNC $96 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	float_32 $11
	int_64 $12
	$4 = ($global$0 - [752])
	$global$0 = $4
	$5 = *($0)
	*($4 + [712]) = [11900]
	*($4 + [716]) = CALL $1([11900])
	*($4 + [152]) = *($4 + [712])
	CALL require_auth2($5, *(CALL $33(($4 + [720]), ($4 + [152]))))
	*($4 + [656]) = [9499]
	*($4 + [660]) = CALL $1([9499])
	*($4 + [144]) = *($4 + [656])
	$6 = CALL $33(($4 + [664]), ($4 + [144]))
	*($4 + [648]) = [11909]
	*($4 + [652]) = CALL $1([11909])
	*($4 + [136]) = *($4 + [648])
	CALL $33(($4 + [264]), ($4 + [136]))
	*((($4 + [672]) + [32])) = [0]
	*($4 + [680]) = (int_64)-7375580689103297008
	*($4 + [688]) = (int_64)-1
	*($4 + [696]) = (int_64)0
	*($4 + [672]) = *($6)
	*($4 + [592]) = [9499]
	*($4 + [596]) = CALL $1([9499])
	*($4 + [128]) = *($4 + [592])
	$6 = CALL $33(($4 + [600]), ($4 + [128]))
	*($4 + [584]) = [11922]
	*($4 + [588]) = CALL $1([11922])
	*($4 + [120]) = *($4 + [584])
	CALL $33(($4 + [264]), ($4 + [120]))
	*((($4 + [608]) + [32])) = [0]
	*($4 + [616]) = (int_64)-7375580689103296992
	*($4 + [624]) = (int_64)-1
	*($4 + [632]) = (int_64)0
	*($4 + [608]) = *($6)
	*($4 + [528]) = [9499]
	*($4 + [532]) = CALL $1([9499])
	*($4 + [112]) = *($4 + [528])
	$6 = CALL $33(($4 + [536]), ($4 + [112]))
	*($4 + [520]) = [11935]
	*($4 + [524]) = CALL $1([11935])
	*($4 + [104]) = *($4 + [520])
	CALL $33(($4 + [264]), ($4 + [104]))
	*((($4 + [544]) + [32])) = [0]
	*($4 + [552]) = (int_64)-7375580689103296976
	*($4 + [560]) = (int_64)-1
	*($4 + [568]) = (int_64)0
	*($4 + [544]) = *($6)
	*($4 + [464]) = [9499]
	*($4 + [468]) = CALL $1([9499])
	*($4 + [96]) = *($4 + [464])
	$6 = CALL $33(($4 + [472]), ($4 + [96]))
	*($4 + [456]) = [11948]
	*($4 + [460]) = CALL $1([11948])
	*($4 + [88]) = *($4 + [456])
	CALL $33(($4 + [264]), ($4 + [88]))
	*((($4 + [480]) + [32])) = [0]
	*($4 + [488]) = (int_64)-7375580689103296960
	*($4 + [496]) = (int_64)-1
	*($4 + [504]) = (int_64)0
	*($4 + [480]) = *($6)
	$6 = CALL db_find_i64(*($4 + [672]), *($4 + [680]), (int_64)5377987680120340480, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	if ( ((int_32)*(CALL $97(($4 + [672]), $6) + [48]) == (int_32)($4 + [672])) ){ goto $label$2 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$2
	CALL eosio_assert([0], [11961])
	
.LABEL $label$1
	$8 = *(($4 + [636]))
	$7 = *(($4 + [632]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$5 }
	
.LOOP $label$7:
	$6 = ($8 + [-24])
	$9 = *($6)
	if ( ((int_64)*($9 + [8]) == (int_64)$1) ){ goto $label$6 }
	$8 = $6
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$5 }
	if ( ((int_32)*($9 + [48]) == (int_32)($4 + [608])) ){ goto $label$4 }
	CALL eosio_assert([0], [12715])
	goto $label$4 
	
.LABEL $label$5
	$6 = CALL db_find_i64(*($4 + [608]), *(($4 + [616])), (int_64)5377987680120340480, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	if ( ((int_32)*(CALL $97(($4 + [608]), $6) + [48]) == (int_32)($4 + [608])) ){ goto $label$4 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$4
	CALL eosio_assert([0], [11961])
	
.LABEL $label$3
	$8 = *(($4 + [572]))
	$7 = *(($4 + [568]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$10 }
	
.LOOP $label$12:
	$6 = ($8 + [-24])
	$9 = *($6)
	if ( ((int_64)*($9 + [8]) == (int_64)$1) ){ goto $label$11 }
	$8 = $6
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$10 }
	if ( ((int_32)*($9 + [48]) == (int_32)($4 + [544])) ){ goto $label$9 }
	CALL eosio_assert([0], [12715])
	goto $label$9 
	
.LABEL $label$10
	$6 = CALL db_find_i64(*($4 + [544]), *(($4 + [552])), (int_64)5377987680120340480, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$8 }
	if ( ((int_32)*(CALL $97(($4 + [544]), $6) + [48]) == (int_32)($4 + [544])) ){ goto $label$9 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$9
	CALL eosio_assert([0], [11961])
	
.LABEL $label$8
	$8 = *(($4 + [508]))
	$7 = *(($4 + [504]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$15 }
	
.LOOP $label$17:
	$6 = ($8 + [-24])
	$9 = *($6)
	if ( ((int_64)*($9 + [8]) == (int_64)$1) ){ goto $label$16 }
	$8 = $6
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$15 }
	if ( ((int_32)*($9 + [48]) == (int_32)($4 + [480])) ){ goto $label$14 }
	CALL eosio_assert([0], [12715])
	goto $label$14 
	
.LABEL $label$15
	$6 = CALL db_find_i64(*($4 + [480]), *(($4 + [488])), (int_64)5377987680120340480, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$13 }
	if ( ((int_32)*(CALL $97(($4 + [480]), $6) + [48]) == (int_32)($4 + [480])) ){ goto $label$14 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$14
	CALL eosio_assert([0], [11961])
	
.LABEL $label$13
	$5 = *($2)
	$10 = *($3)
	*(($4 + [448])) = [0]
	*($4 + [440]) = (int_64)0
	$6 = CALL $1([12019])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$33 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$36 }
	*($4 + [440]) = ($6 << [1])
	$8 = (($4 + [440]) | [1])
	if ( $6 ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$36
	$7 = (($6 + [16]) & [-16])
	$8 = CALL $9($7)
	*($4 + [440]) = ($7 | [1])
	*($4 + [448]) = $8
	*($4 + [444]) = $6
	
.LABEL $label$35
	CALL memcpy($8, [12019], $6)
	
.LABEL $label$34
	*(($8 + $6)) = [0]
	$6 = *($0 + [36])
	$8 = ($6 & [1])
	$7 = ($0 + [37])
	$6 = CALL $24(($4 + [440]), ( *(($0 + [44])) ? $7 : $8 ), ( *(($0 + [40])) ? uint_32($6 >> [1]) : $8 ))
	$8 = ($6 + [8])
	*((($4 + [728]) + [8])) = *($8)
	*($4 + [728]) = *($6)
	*($6) = (int_64)0
	*($8) = [0]
	*((($4 + [424]) + [8])) = [0]
	*($4 + [424]) = (int_64)0
	$6 = CALL $1([12046])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$32 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$39 }
	*($4 + [424]) = ($6 << [1])
	$9 = (($4 + [424]) | [1])
	$8 = $9
	if ( $6 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$39
	$9 = (($6 + [16]) & [-16])
	$8 = CALL $9($9)
	*($4 + [424]) = ($9 | [1])
	*($4 + [432]) = $8
	*($4 + [428]) = $6
	$9 = (($4 + [424]) | [1])
	
.LABEL $label$38
	CALL memcpy($8, [12046], $6)
	
.LABEL $label$37
	*(($8 + $6)) = [0]
	$6 = *($4 + [424])
	$8 = ($6 & [1])
	$6 = CALL $24(($4 + [728]), ( *($4 + [432]) ? $9 : $8 ), ( *($4 + [428]) ? uint_32($6 >> [1]) : $8 ))
	$8 = ($6 + [8])
	*((($4 + [248]) + [8])) = *($8)
	*($4 + [248]) = *($6)
	*($6) = (int_64)0
	*($8) = [0]
	$6 = *(($0 + [36]))
	$8 = ($6 & [1])
	$6 = CALL $24(($4 + [248]), ( *(($0 + [44])) ? $7 : $8 ), ( *(($0 + [40])) ? uint_32($6 >> [1]) : $8 ))
	$8 = ($6 + [8])
	*((($4 + [160]) + [8])) = *($8)
	*($4 + [160]) = *($6)
	*($6) = (int_64)0
	*($8) = [0]
	*((($4 + [408]) + [8])) = [0]
	*($4 + [408]) = (int_64)0
	$6 = CALL $1([12062])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$31 }
	$7 = (((int_64)$5 < (int_64)50001) & ((int_64)$10 < (int_64)10001))
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$42 }
	*($4 + [408]) = ($6 << [1])
	$9 = (($4 + [408]) | [1])
	$8 = $9
	if ( $6 ){ goto $label$41 }
	goto $label$40 
	
.LABEL $label$42
	$9 = (($6 + [16]) & [-16])
	$8 = CALL $9($9)
	*($4 + [408]) = ($9 | [1])
	*($4 + [416]) = $8
	*($4 + [412]) = $6
	$9 = (($4 + [408]) | [1])
	
.LABEL $label$41
	CALL memcpy($8, [12062], $6)
	
.LABEL $label$40
	*(($8 + $6)) = [0]
	$6 = *($4 + [408])
	$8 = ($6 & [1])
	$6 = CALL $24(($4 + [160]), ( *($4 + [416]) ? $9 : $8 ), ( *($4 + [412]) ? uint_32($6 >> [1]) : $8 ))
	$8 = ($6 + [8])
	*((($4 + [264]) + [8])) = *($8)
	*($4 + [264]) = *($6)
	*($6) = (int_64)0
	*($8) = [0]
	if ( ($7 == 0) ){ goto $label$44 }
	if ( (*($4 + [264]) & [1]) ){ goto $label$43 }
	goto $label$30 
	
.LABEL $label$44
	CALL eosio_assert([0], ( *($4 + [272]) ? (($4 + [264]) | [1]) : (*($4 + [264]) & [1]) ))
	if ( ((*($4 + [264]) & [1]) == 0) ){ goto $label$30 }
	
.LABEL $label$43
	CALL $11(*($4 + [272]))
	$6 = [1]
	if ( ((*($4 + [408]) & [1]) == 0) ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$33
	CALL $17(($4 + [440]))
	
.LABEL $label$32
	CALL $17(($4 + [424]))
	
.LABEL $label$31
	CALL $17(($4 + [408]))
	
.LABEL $label$30
	$6 = [1]
	if ( (*($4 + [408]) & [1]) ){ goto $label$28 }
	
.LABEL $label$29
	if ( (*($4 + [160]) & $6) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	CALL $11(*(($4 + [416])))
	if ( ((*($4 + [160]) & $6) == 0) ){ goto $label$26 }
	
.LABEL $label$27
	CALL $11(*($4 + [168]))
	$6 = [1]
	if ( ((*($4 + [248]) & [1]) == 0) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	$6 = [1]
	if ( (*($4 + [248]) & [1]) ){ goto $label$24 }
	
.LABEL $label$25
	if ( (*($4 + [424]) & $6) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	CALL $11(*($4 + [256]))
	if ( ((*($4 + [424]) & $6) == 0) ){ goto $label$22 }
	
.LABEL $label$23
	CALL $11(*(($4 + [432])))
	$6 = [1]
	if ( ((*($4 + [728]) & [1]) == 0) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	$6 = [1]
	if ( (*($4 + [728]) & [1]) ){ goto $label$20 }
	
.LABEL $label$21
	if ( ((*($4 + [440]) & $6) == 0) ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$20
	CALL $11(*($4 + [736]))
	if ( ((*($4 + [440]) & $6) == 0) ){ goto $label$18 }
	
.LABEL $label$19
	CALL $11(*($4 + [448]))
	
.LABEL $label$18
	$10 = ((int_64)CALL $27() / (int_64)1000000)
	$11 = (DEMOTE float_32)(float_64 ((float_64)(CASTING float_64)(uint_32 (CASTING uint_32)(uint_64 $10)) / (float_64)(float_64)345600))
	$11 = (float_32)
	if ( ((int_32)((float_32)$11($11 - (Rounds 0)($11))) < (float_32)(float_32)0.25) ^ (int_32)[1]) ){ goto $label$46 }
	*($4 + [400]) = [11909]
	*($4 + [404]) = CALL $1([11909])
	*($4 + [56]) = *($4 + [400])
	$5 = *(CALL $33(($4 + [264]), ($4 + [56])))
	goto $label$45 
	
.LABEL $label$46
	if ( ((int_32)((float_32)$11 >= (float_32)(float_32)0.25) ^ (int_32)[1]) ){ goto $label$47 }
	if ( ((int_32)((float_32)$11 < (float_32)(float_32)0.5) ^ (int_32)[1]) ){ goto $label$47 }
	*($4 + [392]) = [11922]
	*($4 + [396]) = CALL $1([11922])
	*($4 + [64]) = *($4 + [392])
	$5 = *(CALL $33(($4 + [264]), ($4 + [64])))
	goto $label$45 
	
.LABEL $label$47
	if ( ((int_32)((float_32)$11 >= (float_32)(float_32)0.5) ^ (int_32)[1]) ){ goto $label$48 }
	if ( ((int_32)((float_32)$11 < (float_32)(float_32)0.75) ^ (int_32)[1]) ){ goto $label$48 }
	*($4 + [384]) = [11935]
	*($4 + [388]) = CALL $1([11935])
	*($4 + [72]) = *($4 + [384])
	$5 = *(CALL $33(($4 + [264]), ($4 + [72])))
	goto $label$45 
	
.LABEL $label$48
	$5 = (int_64)0
	if ( ((int_32)((float_32)$11 > (float_32)(float_32)0.75) ^ (int_32)[1]) ){ goto $label$45 }
	*($4 + [376]) = [11948]
	*($4 + [380]) = CALL $1([11948])
	*($4 + [80]) = *($4 + [376])
	$5 = *(CALL $33(($4 + [264]), ($4 + [80])))
	
.LABEL $label$45
	*($4 + [360]) = [12072]
	*($4 + [364]) = CALL $1([12072])
	*($4 + [48]) = *($4 + [360])
	$12 = *(CALL $33(($4 + [368]), ($4 + [48])))
	*($4 + [344]) = [9499]
	*($4 + [348]) = CALL $1([9499])
	*($4 + [40]) = *($4 + [344])
	$6 = CALL $33(($4 + [352]), ($4 + [40]))
	*($4 + [328]) = [9523]
	*($4 + [332]) = CALL $1([9523])
	*($4 + [32]) = *($4 + [328])
	$8 = CALL $33(($4 + [336]), ($4 + [32]))
	*(($7 = (($4 + [160]) + [24]))) = [0]
	*((($4 + [264]) + [24])) = *(($3 + [8]))
	*(($4 + [304])) = *(($2 + [8]))
	*($4 + [272]) = $1
	*($4 + [264]) = $5
	*($4 + [312]) = [0]
	*($4 + [176]) = (int_64)0
	*($4 + [280]) = *($3)
	*($4 + [296]) = *($2)
	*($4 + [160]) = *($6)
	*($4 + [168]) = *($8)
	*(($6 = CALL $9([16]))) = $5
	*($6 + [8]) = $12
	*(($4 + [196])) = [0]
	$8 = ($6 + [16])
	*($7) = $8
	*(($4 + [180])) = $8
	*($4 + [176]) = $6
	*($4 + [188 align=4]) = (int_64)0
	CALL $67(($4 + [188]), [49])
	$7 = ($4 + [192])
	$6 = *($7)
	$8 = *($4 + [188])
	*($4 + [252]) = $8
	*($4 + [248]) = $8
	*($4 + [256]) = $6
	*($4 + [440]) = ($4 + [248])
	*($4 + [728]) = ($4 + [264])
	CALL $98(($4 + [728]), ($4 + [440]))
	CALL $51(($4 + [160]))
	$6 = *($4 + [188])
	if ( ($6 == 0) ){ goto $label$49 }
	*($7) = $6
	CALL $11($6)
	
.LABEL $label$49
	$6 = *($4 + [176])
	if ( ($6 == 0) ){ goto $label$50 }
	*(($4 + [180])) = $6
	CALL $11($6)
	
.LABEL $label$50
	$12 = CALL $27()
	*((($4 + [264]) + [28])) = (int_64)0
	*(($8 = ($4 + [308]))) = (int_64)0
	*(($4 + [316])) = (int_64)0
	*($4 + [276]) = [0]
	*($4 + [280]) = [0]
	*($4 + [284 align=4]) = (int_64)0
	*($4 + [300 align=4]) = (int_64)0
	*($4 + [264]) = ((CASTING uint_32)(uint_64 ((int_64)$12 / (int_64)1000000)) + [60])
	*($4 + [232]) = [12072]
	*($4 + [236]) = CALL $1([12072])
	*($4 + [24]) = *($4 + [232])
	$6 = CALL $33(($4 + [240]), ($4 + [24]))
	*($4 + [248]) = $5
	*($4 + [256]) = *($6)
	*($4 + [224]) = [9499]
	*($4 + [228]) = CALL $1([9499])
	*($4 + [16]) = *($4 + [224])
	$7 = CALL $33(($4 + [440]), ($4 + [16]))
	*($4 + [216]) = [12079]
	*($4 + [220]) = CALL $1([12079])
	*($4 + [8]) = *($4 + [216])
	$9 = CALL $33(($4 + [424]), ($4 + [8]))
	*((($4 + [160]) + [24])) = *(($3 + [8]))
	*((($4 + [160]) + [40])) = *(($2 + [8]))
	*($4 + [168]) = $1
	*($4 + [160]) = $5
	*($4 + [176]) = *($3)
	*($4 + [192]) = *($2)
	$2 = (($4 + [264]) + [40])
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*($8)) ){ goto $label$52 }
	*($6 + [16 align=4]) = (int_64)0
	*($6 + [8]) = *($9)
	*($6) = *($7)
	*(($7 = ($6 + [24]))) = [0]
	$8 = CALL $9([16])
	*($6 + [16]) = $8
	$9 = ($8 + [16])
	*($7) = $9
	*(($8 + [8])) = *((($4 + [248]) + [8]))
	*($8) = *($4 + [248])
	*(($6 + [20])) = $9
	*($6 + [28 align=4]) = (int_64)0
	*(($6 + [36])) = [0]
	CALL $67(($6 + [28]), [48])
	$8 = *(($6 + [32]))
	$6 = *($6 + [28])
	*($4 + [732]) = $6
	*($4 + [728]) = $6
	*($4 + [736]) = $8
	*($4 + [744]) = ($4 + [728])
	*($4 + [408]) = ($4 + [160])
	CALL $99(($4 + [408]), ($4 + [744]))
	*($2) = (*($2) + [40])
	goto $label$51 
	
.LABEL $label$52
	CALL $100(($4 + [300]), ($4 + [248]), $7, $9, ($4 + [160]))
	
.LABEL $label$51
	*(($4 + [284])) = [43200]
	*($4 + [168]) = (int_64)0
	*($4 + [160]) = ((int_64)$10 & (int_64)4294967295)
	CALL $101(($4 + [264]), ($4 + [160]), *($0), [0])
	CALL $102(($4 + [264]))
	$7 = *($4 + [504])
	if ( ($7 == 0) ){ goto $label$53 }
	$9 = ($4 + [508])
	$6 = *($9)
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$55 }
	
.LOOP $label$56:
	$6 = ($6 + [-24])
	$8 = *($6)
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$57 }
	CALL $11($8)
	
.LABEL $label$57
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$56 }
	$6 = *(($4 + [504]))
	goto $label$54 
	
.LABEL $label$55
	$6 = $7
	
.LABEL $label$54
	*($9) = $7
	CALL $11($6)
	
.LABEL $label$53
	$7 = *($4 + [568])
	if ( ($7 == 0) ){ goto $label$58 }
	$9 = ($4 + [572])
	$6 = *($9)
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$60 }
	
.LOOP $label$61:
	$6 = ($6 + [-24])
	$8 = *($6)
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$62 }
	CALL $11($8)
	
.LABEL $label$62
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$61 }
	$6 = *(($4 + [568]))
	goto $label$59 
	
.LABEL $label$60
	$6 = $7
	
.LABEL $label$59
	*($9) = $7
	CALL $11($6)
	
.LABEL $label$58
	$7 = *($4 + [632])
	if ( ($7 == 0) ){ goto $label$63 }
	$9 = ($4 + [636])
	$6 = *($9)
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$65 }
	
.LOOP $label$66:
	$6 = ($6 + [-24])
	$8 = *($6)
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$67 }
	CALL $11($8)
	
.LABEL $label$67
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$66 }
	$6 = *(($4 + [632]))
	goto $label$64 
	
.LABEL $label$65
	$6 = $7
	
.LABEL $label$64
	*($9) = $7
	CALL $11($6)
	
.LABEL $label$63
	$7 = *($4 + [696])
	if ( ($7 == 0) ){ goto $label$68 }
	$9 = ($4 + [700])
	$6 = *($9)
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$70 }
	
.LOOP $label$71:
	$6 = ($6 + [-24])
	$8 = *($6)
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$72 }
	CALL $11($8)
	
.LABEL $label$72
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$71 }
	$6 = *(($4 + [696]))
	goto $label$69 
	
.LABEL $label$70
	$6 = $7
	
.LABEL $label$69
	*($9) = $7
	CALL $11($6)
	
.LABEL $label$68
	$global$0 = ($4 + [752])
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $97 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12766])
	
.LABEL $label$5
	$4 = CALL $3($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $9([64])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [32])
	CALL $166(($3 + [32]), ($3 + [24]))
	*($5 + [52]) = $1
	*($3 + [24]) = $5
	$7 = *($5 + [8])
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $167(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $90 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	$3 = ($global$0 - [160])
	$global$0 = $3
	$4 = ($0 + [144])
	$6 = *(($0 + [172]))
	$5 = *(($0 + [168]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$51 }
	
.LOOP $label$53:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$52 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$53 }
	goto $label$51 
	
.LABEL $label$52
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$51 }
	if ( ((int_32)*($8 + [32]) == (int_32)$4) ){ goto $label$50 }
	CALL eosio_assert([0], [12715])
	if ( (CALL has_auth(*($8 + [24])) == 0) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$51
	$7 = CALL db_find_i64(*($4), *(($0 + [152])), (int_64)3607749779137757184, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$47 }
	$8 = CALL $34($4, $7)
	if ( ((int_32)*($8 + [32]) == (int_32)$4) ){ goto $label$50 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$50
	if ( CALL has_auth(*($8 + [24])) ){ goto $label$48 }
	
.LABEL $label$49
	CALL eosio_assert([0], [11488])
	
.LABEL $label$48
	$9 = ($0 + [224])
	$6 = *(($0 + [252]))
	$5 = *(($0 + [248]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$55 }
	
.LOOP $label$57:
	$7 = ($6 + [-24])
	$4 = *($7)
	if ( ((int_64)*($4) == (int_64)$1) ){ goto $label$56 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$57 }
	goto $label$55 
	
.LABEL $label$56
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$55 }
	if ( ((int_32)*($4 + [40]) == (int_32)$9) ){ goto $label$54 }
	CALL eosio_assert([0], [12715])
	goto $label$54 
	
.LABEL $label$55
	$4 = [0]
	$7 = CALL db_find_i64(*($9), *(($0 + [232])), (int_64)4292915607302569984, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$54 }
	$4 = CALL $59($9, $7)
	if ( ((int_32)*($4 + [40]) == (int_32)$9) ){ goto $label$54 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$54
	$10 = *($0 + [48])
	$11 = (uint_64)$10 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$60:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$59 }
	$12 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$61 }
	$11 = $12
	$6 = $7
	$7 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$60 }
	goto $label$58 
	
.LABEL $label$61
	$11 = $12
	
.LOOP $label$62:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$59 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$6 = ((int_32)$7 < (int_32)[6])
	$5 = ($7 + [1])
	$7 = $5
	if ( $6 ){ goto $label$62 }
	$7 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$60 }
	goto $label$58 
	
.LABEL $label$59
	CALL eosio_assert([0], [12473])
	
.LABEL $label$58
	if ( ((int_64)*(($4 + [24])) != (int_64)$10) ){ goto $label$64 }
	if ( ((int_64)*($4 + [16]) == (int_64)0) ){ goto $label$63 }
	goto $label$46 
	
.LABEL $label$64
	CALL eosio_assert([0], [12365])
	if ( ((int_64)*($4 + [16]) != (int_64)0) ){ goto $label$46 }
	
.LABEL $label$63
	CALL eosio_assert([0], [11551])
	$11 = *(($8 + [24]))
	if ( $2 ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$47
	CALL eosio_assert([0], [11428])
	
.LABEL $label$46
	$11 = *(($8 + [24]))
	if ( ($2 == 0) ){ goto $label$44 }
	
.LABEL $label$45
	if ( $4 ){ goto $label$65 }
	CALL eosio_assert([0], [12845])
	
.LABEL $label$65
	CALL $91($9, $4, $11)
	$12 = *($4 + [32])
	*(($3 + [88])) = [0]
	*($3 + [80]) = (int_64)0
	$7 = CALL $1([11608])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$26 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$43 }
	*($3 + [80]) = ($7 << [1])
	$5 = (($3 + [80]) | [1])
	if ( $7 ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$44
	if ( $4 ){ goto $label$66 }
	CALL eosio_assert([0], [12845])
	
.LABEL $label$66
	CALL $92($9, $4, $11)
	$11 = *($4 + [32])
	*(($3 + [120])) = [0]
	*($3 + [112]) = (int_64)0
	$7 = CALL $1([11608])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$25 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$40 }
	*($3 + [112]) = ($7 << [1])
	$5 = (($3 + [112]) | [1])
	if ( $7 ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$43
	$6 = (($7 + [16]) & [-16])
	$5 = CALL $9($6)
	*($3 + [80]) = ($6 | [1])
	*($3 + [88]) = $5
	*($3 + [84]) = $7
	
.LABEL $label$42
	CALL memcpy($5, [11608], $7)
	
.LABEL $label$41
	$6 = [0]
	*(($5 + $7)) = [0]
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$37 }
	$5 = *([0] + [12496])
	
.LOOP $label$68:
	*((($3 + [144]) + ($7 = $6))) = *(($5 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$7 == (int_32)[12]) )))))
	$6 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[11]) ){ goto $label$67 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$68 }
	
.LABEL $label$67
	*(($3 + [72])) = [0]
	*($3 + [64]) = (int_64)0
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$35 }
	*($3 + [64]) = ($6 << [1])
	$5 = (($3 + [64]) | [1])
	goto $label$34 
	
.LABEL $label$40
	$6 = (($7 + [16]) & [-16])
	$5 = CALL $9($6)
	*($3 + [112]) = ($6 | [1])
	*($3 + [120]) = $5
	*($3 + [116]) = $7
	
.LABEL $label$39
	CALL memcpy($5, [11608], $7)
	
.LABEL $label$38
	$6 = [0]
	*(($5 + $7)) = [0]
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$36 }
	$5 = *([0] + [12496])
	
.LOOP $label$70:
	*((($3 + [144]) + ($7 = $6))) = *(($5 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$7 == (int_32)[12]) )))))
	$6 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[11]) ){ goto $label$69 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$70 }
	
.LABEL $label$69
	*(($3 + [104])) = [0]
	*($3 + [96]) = (int_64)0
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$32 }
	*($3 + [96]) = ($6 << [1])
	$5 = (($3 + [96]) | [1])
	goto $label$31 
	
.LABEL $label$37
	*(($3 + [72])) = [0]
	*($3 + [64]) = (int_64)0
	*($3 + [64]) = [0]
	$7 = (($3 + [64]) | [1])
	$6 = $7
	goto $label$33 
	
.LABEL $label$36
	*(($3 + [104])) = [0]
	*($3 + [96]) = (int_64)0
	*($3 + [96]) = [0]
	$7 = (($3 + [96]) | [1])
	$6 = $7
	goto $label$30 
	
.LABEL $label$35
	$8 = (($6 + [16]) & [-16])
	$5 = CALL $9($8)
	*($3 + [64]) = ($8 | [1])
	*($3 + [72]) = $5
	*($3 + [68]) = $6
	
.LABEL $label$34
	$8 = ($7 + [1])
	$7 = [0]
	
.LOOP $label$71:
	*(($5 + $7)) = *((($3 + [144]) + $7))
	$7 = ($7 + [1])
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$71 }
	$6 = ($5 + $6)
	$7 = (($3 + [64]) | [1])
	
.LABEL $label$33
	*($6) = [0]
	$6 = *($3 + [64])
	$5 = ($6 & [1])
	$7 = CALL $24(($3 + [80]), ( *($3 + [72]) ? $7 : $5 ), ( *($3 + [68]) ? uint_32($6 >> [1]) : $5 ))
	$6 = ($7 + [8])
	*((($3 + [96]) + [8])) = *($6)
	*($3 + [96]) = *($7)
	*($7) = (int_64)0
	*($6) = [0]
	*((($3 + [48]) + [8])) = [0]
	*($3 + [48]) = (int_64)0
	$7 = CALL $1([11636])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$24 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$74 }
	*($3 + [48]) = ($7 << [1])
	$8 = (($3 + [48]) | [1])
	$5 = $8
	if ( $7 ){ goto $label$73 }
	goto $label$72 
	
.LABEL $label$74
	$6 = (($7 + [16]) & [-16])
	$5 = CALL $9($6)
	*($3 + [48]) = ($6 | [1])
	*($3 + [56]) = $5
	*($3 + [52]) = $7
	$8 = (($3 + [48]) | [1])
	
.LABEL $label$73
	CALL memcpy($5, [11636], $7)
	
.LABEL $label$72
	$6 = [0]
	*(($5 + $7)) = [0]
	$7 = *($3 + [48])
	$5 = ($7 & [1])
	$7 = CALL $24(($3 + [96]), ( *($3 + [56]) ? $8 : $5 ), ( *($3 + [52]) ? uint_32($7 >> [1]) : $5 ))
	$5 = ($7 + [8])
	*((($3 + [112]) + [8])) = *($5)
	*($3 + [112]) = *($7)
	*($7) = (int_64)0
	*($5) = [0]
	$11 = *(($4 + [32]))
	if ( ((int_64)$11 == (int_64)0) ){ goto $label$75 }
	$5 = *([0] + [12496])
	
.LOOP $label$77:
	*((($3 + [144]) + ($7 = $6))) = *(($5 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$11 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$7 == (int_32)[12]) )))))
	$6 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[11]) ){ goto $label$76 }
	$11 = ((int_64)$11 << (int_64)5)
	if ( ((int_64)$11 != (int_64)0) ){ goto $label$77 }
	
.LABEL $label$76
	*(($3 + [40])) = [0]
	*($3 + [32]) = (int_64)0
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$29 }
	*($3 + [32]) = ($6 << [1])
	$5 = (($3 + [32]) | [1])
	goto $label$28 
	
.LABEL $label$75
	*((($3 + [32]) + [8])) = [0]
	*($3 + [32]) = (int_64)0
	*($3 + [32]) = [0]
	$7 = (($3 + [32]) | [1])
	$6 = $7
	goto $label$27 
	
.LABEL $label$32
	$4 = (($6 + [16]) & [-16])
	$5 = CALL $9($4)
	*($3 + [96]) = ($4 | [1])
	*($3 + [104]) = $5
	*($3 + [100]) = $6
	
.LABEL $label$31
	$4 = ($7 + [1])
	$7 = [0]
	
.LOOP $label$78:
	*(($5 + $7)) = *((($3 + [144]) + $7))
	$7 = ($7 + [1])
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$78 }
	$6 = ($5 + $6)
	$7 = (($3 + [96]) | [1])
	
.LABEL $label$30
	*($6) = [0]
	$6 = *($3 + [96])
	$5 = ($6 & [1])
	$7 = CALL $24(($3 + [112]), ( *($3 + [104]) ? $7 : $5 ), ( *($3 + [100]) ? uint_32($6 >> [1]) : $5 ))
	$6 = ($7 + [8])
	*((($3 + [144]) + [8])) = *($6)
	*($3 + [144]) = *($7)
	*($7) = (int_64)0
	*($6) = [0]
	*((($3 + [80]) + [8])) = [0]
	*($3 + [80]) = (int_64)0
	$7 = CALL $1([11765])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$23 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$81 }
	*($3 + [80]) = ($7 << [1])
	$5 = (($3 + [80]) | [1])
	$6 = $5
	if ( $7 ){ goto $label$80 }
	goto $label$79 
	
.LABEL $label$81
	$5 = (($7 + [16]) & [-16])
	$6 = CALL $9($5)
	*($3 + [80]) = ($5 | [1])
	*($3 + [88]) = $6
	*($3 + [84]) = $7
	$5 = (($3 + [80]) | [1])
	
.LABEL $label$80
	CALL memcpy($6, [11765], $7)
	
.LABEL $label$79
	*(($6 + $7)) = [0]
	$7 = *($3 + [80])
	$6 = ($7 & [1])
	$7 = CALL $24(($3 + [144]), ( *($3 + [88]) ? $5 : $6 ), ( *($3 + [84]) ? uint_32($7 >> [1]) : $6 ))
	$6 = ($7 + [8])
	*(($3 + [8])) = *($6)
	*($3) = *($7)
	*($7) = (int_64)0
	*($6) = [0]
	CALL $44($0, $11, $3)
	if ( (*($3) & [1]) ){ goto $label$83 }
	if ( (*($3 + [80]) & [1]) ){ goto $label$82 }
	goto $label$7 
	
.LABEL $label$83
	CALL $11(*($3 + [8]))
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$82
	CALL $11(*(($3 + [88])))
	$7 = [1]
	if ( ((*($3 + [144]) & [1]) == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$29
	$4 = (($6 + [16]) & [-16])
	$5 = CALL $9($4)
	*($3 + [32]) = ($4 | [1])
	*($3 + [40]) = $5
	*($3 + [36]) = $6
	
.LABEL $label$28
	$4 = ($7 + [1])
	$7 = [0]
	
.LOOP $label$84:
	*(($5 + $7)) = *((($3 + [144]) + $7))
	$7 = ($7 + [1])
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$84 }
	$6 = ($5 + $6)
	$7 = (($3 + [32]) | [1])
	
.LABEL $label$27
	*($6) = [0]
	$6 = *($3 + [32])
	$5 = ($6 & [1])
	$7 = CALL $24(($3 + [112]), ( *($3 + [40]) ? $7 : $5 ), ( *($3 + [36]) ? uint_32($6 >> [1]) : $5 ))
	$6 = ($7 + [8])
	*((($3 + [144]) + [8])) = *($6)
	*($3 + [144]) = *($7)
	*($7) = (int_64)0
	*($6) = [0]
	*((($3 + [16]) + [8])) = [0]
	*($3 + [16]) = (int_64)0
	$7 = CALL $1([11665])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$22 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$87 }
	*($3 + [16]) = ($7 << [1])
	$5 = (($3 + [16]) | [1])
	$6 = $5
	if ( $7 ){ goto $label$86 }
	goto $label$85 
	
.LABEL $label$87
	$5 = (($7 + [16]) & [-16])
	$6 = CALL $9($5)
	*($3 + [16]) = ($5 | [1])
	*($3 + [24]) = $6
	*($3 + [20]) = $7
	$5 = (($3 + [16]) | [1])
	
.LABEL $label$86
	CALL memcpy($6, [11665], $7)
	
.LABEL $label$85
	*(($6 + $7)) = [0]
	$7 = *($3 + [16])
	$6 = ($7 & [1])
	$7 = CALL $24(($3 + [144]), ( *($3 + [24]) ? $5 : $6 ), ( *($3 + [20]) ? uint_32($7 >> [1]) : $6 ))
	$6 = ($7 + [8])
	*((($3 + [128]) + [8])) = *($6)
	*($3 + [128]) = *($7)
	*($7) = (int_64)0
	*($6) = [0]
	CALL $44($0, $12, ($3 + [128]))
	if ( (*($3 + [128]) & [1]) ){ goto $label$89 }
	if ( (*($3 + [16]) & [1]) ){ goto $label$88 }
	goto $label$21 
	
.LABEL $label$89
	CALL $11(*($3 + [136]))
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$21 }
	
.LABEL $label$88
	CALL $11(*(($3 + [24])))
	$7 = [1]
	if ( ((*($3 + [144]) & [1]) == 0) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$26
	CALL $17(($3 + [80]))
	
.LABEL $label$25
	CALL $17(($3 + [112]))
	
.LABEL $label$24
	CALL $17(($3 + [48]))
	
.LABEL $label$23
	CALL $17(($3 + [80]))
	
.LABEL $label$22
	CALL $17(($3 + [16]))
	
.LABEL $label$21
	$7 = [1]
	if ( (*($3 + [144]) & [1]) ){ goto $label$19 }
	
.LABEL $label$20
	if ( (*($3 + [32]) & $7) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL $11(*($3 + [152]))
	if ( ((*($3 + [32]) & $7) == 0) ){ goto $label$17 }
	
.LABEL $label$18
	CALL $11(*(($3 + [40])))
	$7 = [1]
	if ( ((*($3 + [112]) & [1]) == 0) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$7 = [1]
	if ( (*($3 + [112]) & [1]) ){ goto $label$15 }
	
.LABEL $label$16
	if ( (*($3 + [48]) & $7) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $11(*($3 + [120]))
	if ( ((*($3 + [48]) & $7) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $11(*(($3 + [56])))
	$7 = [1]
	if ( ((*($3 + [96]) & [1]) == 0) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$7 = [1]
	if ( (*($3 + [96]) & [1]) ){ goto $label$11 }
	
.LABEL $label$12
	if ( (*($3 + [64]) & $7) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $11(*($3 + [104]))
	if ( ((*($3 + [64]) & $7) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $11(*(($3 + [72])))
	if ( (*($3 + [80]) & [1]) ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$9
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$8
	CALL $11(*($3 + [88]))
	goto $label$1 
	
.LABEL $label$7
	$7 = [1]
	if ( (*($3 + [144]) & [1]) ){ goto $label$5 }
	
.LABEL $label$6
	if ( (*($3 + [96]) & $7) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL $11(*($3 + [152]))
	if ( ((*($3 + [96]) & $7) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $11(*(($3 + [104])))
	if ( ((*($3 + [112]) & [1]) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((*($3 + [112]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL $11(*($3 + [120]))
	$global$0 = ($3 + [160])
	return 
	
.LABEL $label$1
	$global$0 = ($3 + [160])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $91 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12880])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12926])
	
.LABEL $label$2
	*($1 + [8]) = [2]
	$5 = *($1)
	$6 = $3
	$3 = ($6 + [-48])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($6 + [-14])
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = ($1 + [8])
	*($4 + [32]) = $1
	*($4 + [40]) = ($1 + [16])
	*($4 + [44]) = ($1 + [32])
	CALL $155(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [44]), $2, $3, [34])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $92 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12880])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12926])
	
.LABEL $label$2
	*($1 + [8]) = [0]
	$5 = *($1)
	$6 = $3
	$3 = ($6 + [-48])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($6 + [-14])
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = ($1 + [8])
	*($4 + [32]) = $1
	*($4 + [40]) = ($1 + [16])
	*($4 + [44]) = ($1 + [32])
	CALL $155(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [44]), $2, $3, [34])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $93 (int_32 $0, int_64 $1, int_32 $2)
{
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL eosio_assert([0], [11809])
	
.LABEL $label$1
	CALL require_recipient($1)
}

void .FUNC $138 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [528])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [516]) = $2
	*($3 + [512]) = $2
	$5 = ($2 + $4)
	*($3 + [520]) = $5
	*($3 + [504]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12840])
	$5 = *(($3 + [520]))
	$2 = *($3 + [516])
	
.LABEL $label$5
	CALL memcpy(($3 + [504]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [516]) = $2
	*($3 + [496]) = (int_64)0
	*($3 + [488]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12840])
	$5 = *((($3 + [512]) + [8]))
	$2 = *($3 + [516])
	
.LABEL $label$6
	CALL memcpy(($3 + [488]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [516]) = $2
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12840])
	$2 = *($3 + [516])
	
.LABEL $label$7
	CALL memcpy(($3 + [88]), $2, [8])
	*(($5 = (($3 + [488]) + [8]))) = *($3 + [88])
	*($3 + [516]) = ($2 + [8])
	*($3 + [480]) = [0]
	*($3 + [472]) = (int_64)0
	CALL $127(($3 + [512]), ($3 + [472]))
	$2 = *((($3 + [512]) + [8]))
	*((($3 + [72]) + [8])) = $2
	*((($3 + [24]) + [8])) = $2
	$6 = *($3 + [512])
	*($3 + [24]) = $6
	*($3 + [72]) = $6
	$4 = CALL $122(($3 + [88]), $0, $1, ($3 + [24]))
	*(($7 = (($3 + [56]) + [8]))) = *($5)
	*($3 + [56]) = *($3 + [488])
	$0 = *($3 + [504])
	$2 = CALL $18(($3 + [40]), ($3 + [472]))
	*((($3 + [8]) + [8])) = *($7)
	*($3 + [8]) = *($3 + [56])
	CALL $76($4, $0, ($3 + [8]), $2)
	if ( (*($2) & [1]) ){ goto $label$10 }
	CALL $124($4)
	if ( (*($3 + [472]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $11(*($2 + [8]))
	CALL $124($4)
	if ( ((*($3 + [472]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $11(*(($3 + [480])))
	$global$0 = ($3 + [528])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [528])
}

void .FUNC $123 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [24]))
	*($2 + [32]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $18(($2 + [16]), ($1 + [32]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$3 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$6 = CALL $18(($2 + [64]), $1)
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $5), (int_64 $4), (int_64 $2), (int_32 $6), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

int_32 .FUNC $115 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [432])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [424]) = [0]
	*($4 + [416]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12840])
	
.LABEL $label$4
	$3 = ($2 + $7)
	CALL memcpy(($4 + [416]), $2, [8])
	$8 = ($2 + [8])
	if ( ((int_32)$7 != (int_32)[8]) ){ goto $label$5 }
	CALL eosio_assert([0], [12840])
	
.LABEL $label$5
	CALL memcpy(($4 + [32]), $8, [1])
	*(($8 = (($4 + [416]) + [8]))) = ((int_32)*($4 + [32]) != (int_32)[0])
	*(($4 + [8])) = $3
	*($4 + [16]) = $2
	*($4 + [20]) = ($2 + [9])
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$9 = CALL $122(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$8 = *($8)
	$0 = *($4 + [416])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 ((int_32)($8 & [255]) != (int_32)[0])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $4($2)
	
.LABEL $label$7
	CALL $124($9)
	$global$0 = ($4 + [432])
	return [1]
}

int_32 .FUNC $122 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$4 = ($global$0 - [64])
	$global$0 = $4
	*(($5 = (($4 + [32]) + [8]))) = *(($3 + [8]))
	*($4 + [32]) = *($3)
	*($0) = $1
	*($0 + [8]) = $2
	$3 = *($5)
	*((($4 + [48]) + [8])) = $3
	$2 = *($4 + [32])
	*($0 + [16]) = $2
	*(($0 + [24])) = $3
	*($4 + [48]) = $2
	*(($0 + [44])) = [0]
	*($0 + [36 align=4]) = (int_64)0
	*($0 + [28 align=4]) = (int_64)562954248388661
	$5 = ($0 + [36])
	$3 = CALL $1([8514])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$7 }
	*($5) = ($3 << [1])
	$6 = ($5 + [1])
	if ( $3 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$7 = (($3 + [16]) & [-16])
	$6 = CALL $9($7)
	*($0 + [36]) = ($7 | [1])
	*(($0 + [44])) = $6
	*(($0 + [40])) = $3
	
.LABEL $label$6
	CALL memcpy($6, [8514], $3)
	
.LABEL $label$5
	*(($6 + $3)) = [0]
	$3 = *($5)
	if ( ($3 & [1]) ){ goto $label$9 }
	$7 = ($5 + [1])
	$3 = uint_32($3 >> [1])
	if ( ((uint_32)$3 >= (uint_32)[8]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$9
	$7 = *(($0 + [44]))
	$3 = *(($0 + [40]))
	if ( ($3 <= [8]) ){ goto $label$3 }
	
.LABEL $label$8
	CALL eosio_assert([0], [12565])
	goto $label$2 
	
.LABEL $label$4
	CALL $17($5)
	
.LABEL $label$3
	if ( $3 ){ goto $label$2 }
	$8 = (int_64)4
	goto $label$1 
	
.LABEL $label$2
	$2 = (int_64)0
	
.LOOP $label$10:
	$6 = (($7 + $3) + [-1])
	$5 = *($6)
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$11 }
	CALL eosio_assert([0], [12610])
	$5 = *($6)
	
.LABEL $label$11
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$8 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	
.LABEL $label$1
	*($0 + [56]) = (int_64)4453159313420310282
	*($0 + [64]) = (int_64)4000
	*(($0 + [48])) = $8
	*(($0 + [72])) = $8
	$3 = [0]
	$2 = (uint_64)$8 >> (uint_64)(int_64)8
	$1 = $2)
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$9 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$15 }
	$1 = $9
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$15
	$1 = $9
	
.LOOP $label$16:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$13 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$6 = ($3 + [1])
	$3 = $6
	if ( $5 ){ goto $label$16 }
	$3 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	CALL eosio_assert([0], [12473])
	$8 = *(($0 + [48]))
	$2 = (uint_64)$8 >> (uint_64)(int_64)8)
	
.LABEL $label$12
	*($0 + [80]) = (int_64)2000
	*(($0 + [88])) = $8
	$3 = [0]
	$1 = $2
	
.LOOP $label$19:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$9 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$20 }
	$1 = $9
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$20
	$1 = $9
	
.LOOP $label$21:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$18 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$6 = ($3 + [1])
	$3 = $6
	if ( $5 ){ goto $label$21 }
	$3 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	CALL eosio_assert([0], [12473])
	$8 = *(($0 + [48]))
	$2 = (uint_64)$8 >> (uint_64)(int_64)8)
	
.LABEL $label$17
	*($0 + [96]) = (int_64)1000
	*(($0 + [104])) = $8
	$3 = [0]
	$1 = $2
	
.LOOP $label$24:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$23 }
	$9 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$25 }
	$1 = $9
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$25
	$1 = $9
	
.LOOP $label$26:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$23 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$6 = ($3 + [1])
	$3 = $6
	if ( $5 ){ goto $label$26 }
	$3 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$23
	CALL eosio_assert([0], [12473])
	$8 = *(($0 + [48]))
	$2 = (uint_64)$8 >> (uint_64)(int_64)8)
	
.LABEL $label$22
	*($0 + [112]) = (int_64)1000
	*(($0 + [120])) = $8
	$3 = [0]
	
.LOOP $label$29:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$28 }
	$1 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$30 }
	$2 = $1
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$29 }
	goto $label$27 
	
.LABEL $label$30
	$2 = $1
	
.LOOP $label$31:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$28 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$6 = ($3 + [1])
	$3 = $6
	if ( $5 ){ goto $label$31 }
	$3 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$29 }
	goto $label$27 
	
.LABEL $label$28
	CALL eosio_assert([0], [12473])
	
.LABEL $label$27
	*($4 + [24]) = [12539]
	*($4 + [28]) = CALL $1([12539])
	*($4 + [8]) = *($4 + [24])
	CALL $33(($0 + [128]), ($4 + [8]))
	*($4 + [16]) = [12552]
	*($4 + [20]) = CALL $1([12552])
	*($4) = *($4 + [16])
	CALL $33(($0 + [136]), $4)
	*(($0 + [160])) = (int_64)-1
	*(($0 + [168])) = (int_64)0
	*(($0 + [176])) = [0]
	*(($0 + [200])) = (int_64)-1
	*(($0 + [208])) = (int_64)0
	*(($0 + [216])) = [0]
	*(($0 + [240])) = (int_64)-1
	*(($0 + [248])) = (int_64)0
	*(($0 + [256])) = [0]
	$2 = *($0)
	*($0 + [144]) = $2
	*(($0 + [152])) = $2
	*($0 + [184]) = $2
	*(($0 + [192])) = $2
	*($0 + [224]) = $2
	*(($0 + [232])) = $2
	*($0 + [264]) = $2
	*(($0 + [272])) = $2
	*(($0 + [280])) = (int_64)-1
	*(($0 + [288])) = (int_64)0
	*(($0 + [296])) = [0]
	*($0 + [304]) = $2
	*(($0 + [312])) = $2
	*(($0 + [320])) = (int_64)-1
	*(($0 + [328])) = (int_64)0
	*(($0 + [336])) = [0]
	*($0 + [344]) = $2
	*(($0 + [352])) = $2
	*(($0 + [360])) = (int_64)-1
	*(($0 + [368])) = (int_64)0
	*(($0 + [376])) = [0]
	$global$0 = ($4 + [64])
	(unreachable)
	return $0
}

void .FUNC $130 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12840])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12840])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [16])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($5 + [24])
	$1 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $1) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12840])
	$1 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $1, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $131 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$3 = ($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*(($0 + [16])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = ($0 + [24])
	$1 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $1) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12840])
	$1 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $1, [8])
	$1 = (*($1) + [8])
	*(($1 = ($4 + [4]))) = $1
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $1) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12840])
	$1 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $1, [8])
	*(($0 + [32])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $132 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12840])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	CALL $127(*($1), ($3 + [8]))
	CALL $127(*($1), ($3 + [20]))
	$2 = ($3 + [32])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12840])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [40])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12840])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$0 = ($3 + [48])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12840])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $133 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [64])
	$global$0 = $2
	$3 = *($1)
	$4 = CALL $18(($2 + [16]), ($1 + [8]))
	$5 = CALL $18($2, ($1 + [20]))
	$6 = *($1 + [48])
	$7 = *($1 + [40])
	$8 = *($1 + [32])
	$1 = *($0 + [4])
	$9 = *($1 + [4])
	$0 = (*($0) + int_32($9 >> [1]))
	$1 = *($1)
	if ( (($9 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	$10 = CALL $18(($2 + [32]), $5)
	$9 = CALL $18(($2 + [48]), $4)
	CALL void $0((int_32 $3), (int_64 $9), (int_32 $10), (int_32 $8), (int_64 $7), (int_64 $6), (int_64 $1))
	if ( (*($2 + [32]) & [1]) ){ goto $label$8 }
	if ( (*($2 + [48]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $11(*($10 + [8]))
	if ( ((*($2 + [48]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $11(*($9 + [8]))
	$1 = [1]
	if ( ((*($5) & [1]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$1 = [1]
	if ( (*($5) & [1]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( (*($4) & $1) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($5 + [8]))
	if ( ((*($4) & $1) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($4 + [8]))
	$global$0 = ($2 + [64])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [64])
}

void .FUNC $134 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [528])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [516]) = $2
	*($3 + [512]) = $2
	$5 = ($2 + $4)
	*($3 + [520]) = $5
	*($3 + [504]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12840])
	$5 = *(($3 + [520]))
	$2 = *($3 + [516])
	
.LABEL $label$5
	CALL memcpy(($3 + [504]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [516]) = $2
	*($3 + [496]) = (int_64)0
	*($3 + [488]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12840])
	$5 = *((($3 + [512]) + [8]))
	$2 = *($3 + [516])
	
.LABEL $label$6
	CALL memcpy(($3 + [488]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [516]) = $2
	*($3 + [80]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12840])
	$5 = *(($3 + [520]))
	$2 = *($3 + [516])
	
.LABEL $label$7
	CALL memcpy(($3 + [80]), $2, [8])
	*(($4 = (($3 + [488]) + [8]))) = *($3 + [80])
	$2 = ($2 + [8])
	*($3 + [516]) = $2
	*($3 + [480]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [12840])
	$2 = *($3 + [516])
	
.LABEL $label$8
	CALL memcpy(($3 + [480]), $2, [8])
	*($3 + [516]) = ($2 + [8])
	*($3 + [472]) = [0]
	*($3 + [464]) = (int_64)0
	CALL $127(($3 + [512]), ($3 + [464]))
	$2 = *((($3 + [512]) + [8]))
	*((($3 + [64]) + [8])) = $2
	*((($3 + [16]) + [8])) = $2
	$6 = *($3 + [512])
	*($3 + [16]) = $6
	*($3 + [64]) = $6
	$5 = CALL $122(($3 + [80]), $0, $1, ($3 + [16]))
	*(($7 = (($3 + [48]) + [8]))) = *($4)
	*($3 + [48]) = *($3 + [488])
	$0 = *($3 + [504])
	$1 = *($3 + [480])
	$2 = CALL $18(($3 + [32]), ($3 + [464]))
	*(($3 + [8])) = *($7)
	*($3) = *($3 + [48])
	CALL $32($5, $0, $3, $1, $2)
	if ( (*($2) & [1]) ){ goto $label$11 }
	CALL $124($5)
	if ( (*($3 + [464]) & [1]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $11(*($2 + [8]))
	CALL $124($5)
	if ( ((*($3 + [464]) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $11(*(($3 + [472])))
	$global$0 = ($3 + [528])
	return 
	
.LABEL $label$9
	$global$0 = ($3 + [528])
}

void .FUNC $121 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12840])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12840])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $0, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12840])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($5 + [24])) = *($2 + [8])
	*($0) = (*($0) + [8])
	CALL $127(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $136 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [528])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [516]) = $2
	*($3 + [512]) = $2
	$5 = ($2 + $4)
	*($3 + [520]) = $5
	*($3 + [504]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12840])
	$5 = *(($3 + [520]))
	$2 = *($3 + [516])
	
.LABEL $label$5
	CALL memcpy(($3 + [504]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [516]) = $2
	*($3 + [496]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12840])
	$5 = *((($3 + [512]) + [8]))
	$2 = *($3 + [516])
	
.LABEL $label$6
	CALL memcpy(($3 + [496]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [516]) = $2
	*($3 + [488]) = (int_64)0
	*($3 + [480]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12840])
	$5 = *(($3 + [520]))
	$2 = *($3 + [516])
	
.LABEL $label$7
	CALL memcpy(($3 + [480]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [516]) = $2
	*($3 + [80]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [12840])
	$2 = *($3 + [516])
	
.LABEL $label$8
	CALL memcpy(($3 + [80]), $2, [8])
	*(($4 = (($3 + [480]) + [8]))) = *($3 + [80])
	*($3 + [516]) = ($2 + [8])
	*($3 + [472]) = [0]
	*($3 + [464]) = (int_64)0
	CALL $127(($3 + [512]), ($3 + [464]))
	$2 = *((($3 + [512]) + [8]))
	*((($3 + [64]) + [8])) = $2
	*((($3 + [16]) + [8])) = $2
	$6 = *($3 + [512])
	*($3 + [16]) = $6
	*($3 + [64]) = $6
	$5 = CALL $122(($3 + [80]), $0, $1, ($3 + [16]))
	*(($7 = (($3 + [48]) + [8]))) = *($4)
	*($3 + [48]) = *($3 + [480])
	$0 = *($3 + [496])
	$1 = *($3 + [504])
	$2 = CALL $18(($3 + [32]), ($3 + [464]))
	*(($3 + [8])) = *($7)
	*($3) = *($3 + [48])
	CALL $53($5, $1, $0, $3, $2)
	if ( (*($2) & [1]) ){ goto $label$11 }
	CALL $124($5)
	if ( (*($3 + [464]) & [1]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $11(*($2 + [8]))
	CALL $124($5)
	if ( ((*($3 + [464]) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $11(*(($3 + [472])))
	$global$0 = ($3 + [528])
	return 
	
.LABEL $label$9
	$global$0 = ($3 + [528])
}

void .FUNC $137 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [512])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [500]) = $2
	*($3 + [496]) = $2
	*($3 + [504]) = ($2 + $4)
	*($3 + [488]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12840])
	$2 = *($3 + [500])
	
.LABEL $label$5
	CALL memcpy(($3 + [488]), $2, [8])
	*($3 + [500]) = ($2 + [8])
	*($3 + [480]) = [0]
	*($3 + [472]) = (int_64)0
	CALL $127(($3 + [496]), ($3 + [472]))
	*($3 + [464]) = [0]
	*($3 + [456]) = (int_64)0
	CALL $127(($3 + [496]), ($3 + [456]))
	$2 = *((($3 + [496]) + [8]))
	*((($3 + [56]) + [8])) = $2
	*((($3 + [8]) + [8])) = $2
	$5 = *($3 + [496])
	*($3 + [8]) = $5
	*($3 + [56]) = $5
	$4 = CALL $18(($3 + [24]), ($3 + [456]))
	$2 = CALL $18(($3 + [40]), ($3 + [472]))
	$6 = CALL $122(($3 + [72]), $0, $1, ($3 + [8]))
	CALL $74($6, *($3 + [488]), $2, $4)
	if ( ((*($4) & [1]) == 0) ){ goto $label$6 }
	CALL $11(*($4 + [8]))
	
.LABEL $label$6
	if ( ((*($2) & [1]) == 0) ){ goto $label$7 }
	CALL $11(*($2 + [8]))
	
.LABEL $label$7
	CALL $124($6)
	if ( (*($3 + [456]) & [1]) ){ goto $label$10 }
	if ( (*($3 + [472]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $11(*(($3 + [464])))
	if ( ((*($3 + [472]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $11(*(($3 + [480])))
	$global$0 = ($3 + [512])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [512])
}

int_32 .FUNC $120 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [416])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	$3 = ($2 + $7)
	*(($4 + [8])) = $3
	*($4 + [20]) = $2
	*($4 + [16]) = $2
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$8 = CALL $122(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $4($2)
	
.LABEL $label$6
	CALL $124($8)
	$global$0 = ($4 + [416])
	return [1]
}

void .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$2 = ($global$0 - [64])
	$global$0 = $2
	$3 = *($0)
	$4 = *($0 + [4])
	*($1 + [8]) = [0]
	*($1) = *(*($4))
	*($1 + [16]) = (int_64)0
	*(($5 = $2) + [16]) = [8987]
	*($5 + [20]) = CALL $1([8987])
	*($5 + [8]) = *($5 + [16])
	*($1 + [24]) = *(CALL $33(($5 + [40]), ($5 + [8])))
	$6 = ($1 + [32])
	CALL $20($6, *($4 + [4]))
	$4 = *($1 + [32])
	$7 = ( *(($1 + [36])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($7 + [25])
	$8 = (CASTING uint_64)(uint_32 $7)
	$7 = ($1 + [16])
	$9 = ($1 + [8])
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ($4 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	*($5 + [20]) = $2
	*($5 + [16]) = $2
	*($5 + [24]) = ($2 + $4)
	*($5 + [32]) = ($5 + [16])
	*($5 + [44]) = $9
	*($5 + [40]) = $1
	*($5 + [48]) = $7
	*($5 + [52]) = ($1 + [24])
	*($5 + [56]) = $6
	CALL $153(($5 + [40]), ($5 + [32]))
	$8 = *($1)
	*($1 + [48]) = CALL db_store_i64(*($3 + [8]), (int_64)6301507159775510528, *(*($0 + [8])), $8, $2, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$6 }
	if ( ((uint_64)$8 >= (uint_64)*($3 + [16])) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $4($2)
	if ( (uint_64)($8 <= *($3 + [16])) ){ goto $label$4 }
	
.LABEL $label$5
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [64])
	return 
	
.LABEL $label$4
	$global$0 = ($5 + [64])
}

void .FUNC $126 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [16]))
	*($2 + [32]) = *($1 + [8])
	$4 = *($1)
	$5 = *($1 + [24])
	$1 = CALL $18(($2 + [16]), ($1 + [32]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$3 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$6 = CALL $18(($2 + [64]), $1)
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $4), (int_64 $2), (int_32 $5), (int_64 $6), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

int_32 .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*(($0 + [8])) = (int_64)0
	*($0 + [4]) = [0]
	*($0) = *($1)
	$2 = (*(($1 + [8])) - *($1 + [4]))
	$3 = ((int_32)$2 / (int_32)[44])
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ((uint_32)$3 >= (uint_32)[97612894]) ){ goto $label$3 }
	$2 = CALL $9($2)
	*(($0 + [4])) = $2
	*(($0 + [12])) = ($2 + ((int_32)$3 * (int_32)[44]))
	*(($3 = ($0 + [8]))) = $2
	$4 = *(($1 + [4]))
	$5 = (*(($1 + [8])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($2, $4, $5)
	*($3) = (*($3) + ((int_32)((uint_32)$5 / (uint_32)[44]) * (int_32)[44]))
	
.LABEL $label$4
	*($0 + [16 align=4]) = (int_64)0
	*(($0 + [24])) = [0]
	$2 = (*(($1 + [20])) - *($1 + [16]))
	$3 = ((int_32)$2 / (int_32)[24])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( ((uint_32)$3 >= (uint_32)[178956971]) ){ goto $label$2 }
	$2 = CALL $9($2)
	*(($0 + [16])) = $2
	*(($0 + [24])) = ($2 + ((int_32)$3 * (int_32)[24]))
	*(($3 = ($0 + [20]))) = $2
	$4 = *(($1 + [16]))
	$5 = (*(($1 + [20])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($2, $4, $5)
	*($3) = (*($3) + ((int_32)((uint_32)$5 / (uint_32)[24]) * (int_32)[24]))
	
.LABEL $label$5
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$2 = (*(($1 + [32])) - *($1 + [28]))
	if ( ($2 == 0) ){ goto $label$6 }
	$3 = int_32($2 >> [3])
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$1 }
	$2 = CALL $9($2)
	*(($0 + [28])) = $2
	*(($0 + [36])) = ($2 + ($3 << [3]))
	*(($3 = ($0 + [32]))) = $2
	$5 = *(($1 + [28]))
	$1 = (*(($1 + [32])) - $5)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($2, $5, $1)
	*($3) = (*($3) + $1)
	
.LABEL $label$6
	return $0
	
.LABEL $label$3
	CALL $26(($0 + [4]))
	
.LABEL $label$2
	CALL $26(($0 + [16]))
	
.LABEL $label$1
	CALL $26(($0 + [28]))
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $48 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = *($0)
	$4 = *($0 + [8])
	$3 = int_32(($2 - $1) >> [3])
	if ( ((uint_32)$3 <= (uint_32)int_32(($4 - $5) >> [3])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $11($5)
	$4 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$1 }
	$5 = [536870911]
	if ( ((uint_32)int_32($4 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$5 = $3
	$4 = int_32($4 >> [2])
	if ( ($4 <= $3) ){ goto $label$6 }
	$5 = $4
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$1 }
	
.LABEL $label$6
	$5 = ($5 << [3])
	$4 = CALL $9($5)
	*($0) = $4
	*($0 + [4]) = $4
	*(($0 + [8])) = ($4 + $5)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$3 }
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($4) = *($1)
	$4 = (*($0) + [8])
	*($0) = $4
	$1 = ($1 + [8])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$4
	$7 = int_32($6 >> [3])
	$6 = (*($0 + [4]) - $5)
	$4 = ($1 + $6)
	$8 = ( $4 ? $2 : ((uint_32)$3 > (uint_32)$7) )
	$6 = ($8 - $1)
	if ( ($6 == 0) ){ goto $label$8 }
	CALL memmove($5, $1, $6)
	
.LABEL $label$8
	if ( ((uint_32)$3 <= (uint_32)$7) ){ goto $label$2 }
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$3 }
	$1 = ($0 + [4])
	$0 = *($1)
	
.LOOP $label$9:
	*($0) = *($4)
	$0 = (*($1) + [8])
	*($1) = $0
	$4 = ($4 + [8])
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$9 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + (int_32($6 >> [3]) << [3]))
	return (unreachable)
	
.LABEL $label$1
	CALL $26($0)
}

void .FUNC $125 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$3 = ($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*(($0 + [16])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $127(*($1), ($0 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $43 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12880])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12926])
	
.LABEL $label$2
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)1)
	$5 = *($1)
	$6 = $3
	$3 = ($6 + [-64])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($6 + [-8])
	*($4 + [16]) = $4
	*($4 + [28]) = ($1 + [8])
	*($4 + [24]) = $1
	*($4 + [32]) = ($1 + [16])
	*($4 + [36]) = ($1 + [24])
	*($4 + [40]) = ($1 + [40])
	CALL $157(($4 + [24]), ($4 + [16]))
	CALL db_update_i64(*($1 + [60]), $2, $3, [56])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

int_32 .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12766])
	
.LABEL $label$5
	$4 = CALL $3($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $9([72])) + [32]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [40])
	CALL $156(($3 + [40]), ($3 + [32]))
	*($5 + [60]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $107(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $41 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $26($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	*($1 + [8]) = [1]
	*($1) = *(*($5))
	$6 = ($1 + [8])
	$7 = *(*($5 + [4]) + [48])
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$8 = $9
	$10 = $5
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$8 = $9
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$10 = ((int_32)$5 < (int_32)[6])
	$11 = ($5 + [1])
	$5 = $11
	if ( $10 ){ goto $label$5 }
	$5 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [12473])
	
.LABEL $label$1
	*($1 + [16]) = (int_64)0
	*(($1 + [24])) = $7
	*($3 + [8]) = [8987]
	*($3 + [12]) = CALL $1([8987])
	*($3) = *($3 + [8])
	*($1 + [32]) = *(CALL $33(($3 + [32]), $3))
	$10 = $2
	$5 = ($10 + [-48])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($10 + [-14])
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $6
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	*($3 + [44]) = ($1 + [32])
	CALL $155(($3 + [32]), ($3 + [24]))
	$8 = *($1)
	*($1 + [44]) = CALL db_store_i64(*($4 + [8]), (int_64)4292915607302569984, *(*($0 + [8])), $8, $5, [34])
	if ( (uint_64)($8 <= *($4 + [16])) ){ goto $label$6 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$global$0 = ($3 + [48])
}

void .FUNC $47 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = *($0)
	$4 = *($0 + [8])
	$3 = ((int_32)($2 - $1) / (int_32)[24])
	if ( ((uint_32)$3 <= (uint_32)((int_32)($4 - $5) / (int_32)[24])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $11($5)
	$4 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$3 >= (uint_32)[178956971]) ){ goto $label$1 }
	$5 = [178956970]
	$4 = ((int_32)$4 / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$6 }
	$4 = ($4 << [1])
	$5 = ( $3 ? $4 : ($4 <= $3) )
	
.LABEL $label$6
	$5 = ((int_32)$5 * (int_32)[24])
	$4 = CALL $9($5)
	*($0) = $4
	*($0 + [4]) = $4
	*(($0 + [8])) = ($4 + $5)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$3 }
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($4) = *($1)
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	$4 = (*($0) + [24])
	*($0) = $4
	$1 = ($1 + [24])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$4
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[24])
	$4 = ($1 + ((int_32)$6 * (int_32)[24]))
	$7 = ( $4 ? $2 : ((uint_32)$3 > (uint_32)$6) )
	$8 = ($7 - $1)
	$9 = ((int_32)$8 / (int_32)[24])
	if ( ($8 == 0) ){ goto $label$8 }
	CALL memmove($5, $1, $8)
	
.LABEL $label$8
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$3 }
	$0 = ($0 + [4])
	$1 = *($0)
	
.LOOP $label$9:
	*($1) = *($4)
	*(($1 + [16])) = *(($4 + [16]))
	*(($1 + [8])) = *(($4 + [8]))
	$1 = (*($0) + [24])
	*($0) = $1
	$4 = ($4 + [24])
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$9 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + ((int_32)$9 * (int_32)[24]))
	return (unreachable)
	
.LABEL $label$1
	CALL $26($0)
}

void .FUNC $46 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = *($0)
	$4 = *($0 + [8])
	$3 = ((int_32)($2 - $1) / (int_32)[44])
	if ( ((uint_32)$3 <= (uint_32)((int_32)($4 - $5) / (int_32)[44])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $11($5)
	$4 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$3 >= (uint_32)[97612894]) ){ goto $label$1 }
	$5 = [97612893]
	$4 = ((int_32)$4 / (int_32)[44])
	if ( ((uint_32)$4 > (uint_32)[48806445]) ){ goto $label$6 }
	$4 = ($4 << [1])
	$5 = ( $3 ? $4 : ($4 <= $3) )
	
.LABEL $label$6
	$5 = ((int_32)$5 * (int_32)[44])
	$4 = CALL $9($5)
	*($0) = $4
	*($0 + [4]) = $4
	*(($0 + [8])) = ($4 + $5)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$3 }
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($4) = *($1)
	*(($4 + [40])) = *(($1 + [40]))
	*(($4 + [32])) = *(($1 + [32]))
	*(($4 + [24])) = *(($1 + [24]))
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	$4 = (*($0) + [44])
	*($0) = $4
	$1 = ($1 + [44])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$4
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[44])
	$4 = ($1 + ((int_32)$6 * (int_32)[44]))
	$7 = ( $4 ? $2 : ((uint_32)$3 > (uint_32)$6) )
	$8 = ($7 - $1)
	$9 = ((int_32)$8 / (int_32)[44])
	if ( ($8 == 0) ){ goto $label$8 }
	CALL memmove($5, $1, $8)
	
.LABEL $label$8
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$3 }
	$0 = ($0 + [4])
	$1 = *($0)
	
.LOOP $label$9:
	*($1) = *($4)
	*(($1 + [40])) = *(($4 + [40]))
	*(($1 + [32])) = *(($4 + [32]))
	*(($1 + [24])) = *(($4 + [24]))
	*(($1 + [16])) = *(($4 + [16]))
	*(($1 + [8])) = *(($4 + [8]))
	$1 = (*($0) + [44])
	*($0) = $1
	$4 = ($4 + [44])
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$9 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + ((int_32)$9 * (int_32)[44]))
	return (unreachable)
	
.LABEL $label$1
	CALL $26($0)
}

void .FUNC $45 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [192])
	$global$0 = $3
	$4 = *($2)
	if ( ($4 & [1]) ){ goto $label$2 }
	$4 = uint_32($4 >> [1])
	$2 = ($2 + [1])
	goto $label$1 
	
.LABEL $label$2
	$4 = *($2 + [4])
	$2 = *($2 + [8])
	
.LABEL $label$1
	*($3 + [148]) = $4
	*($3 + [144]) = $2
	*($3 + [8]) = *($3 + [144])
	CALL $29(($3 + [152]), ($3 + [8]))
	*($0 + [4 align=4]) = (int_64)0
	*(($0 + [12])) = (int_64)0
	*(($0 + [20])) = (int_64)0
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	*($3 + [104]) = *($3 + [153 align=1])
	*($3 + [106]) = *($3 + [155])
	*($3 + [107 align=1]) = *($3 + [156])
	*($3 + [109 align=1]) = *($3 + [158 align=2])
	*($3 + [117 align=1]) = *(($3 + [166]))
	*($3 + [125 align=1]) = *(($3 + [174]))
	*($3 + [129 align=1]) = *(($3 + [178]))
	*($3 + [131]) = *((($3 + [152]) + [28]))
	*($3 + [132]) = *(($3 + [181]))
	*($3 + [133 align=1]) = *(($3 + [182]))
	*($0) = [1]
	*(($2 = ($3 + [96]))) = *($3 + [136])
	*(($4 = ($3 + [88]))) = *($3 + [128])
	*(($5 = (($3 + [64]) + [16]))) = *($3 + [120])
	*(($6 = ($3 + [72]))) = *($3 + [112])
	*($3 + [64]) = *($3 + [104])
	*((($3 + [16]) + [12])) = *($6)
	*((($3 + [16]) + [20])) = *($5)
	*((($3 + [16]) + [28])) = *($4)
	*((($3 + [16]) + [36])) = *($2)
	*(($3 + [55])) = *(($3 + [63]))
	*($3 + [16]) = [0]
	*($3 + [56]) = [1]
	*($3 + [20 align=4]) = *($3 + [64])
	*($3 + [53 align=1]) = *($3 + [61 align=1])
	CALL $46(($0 + [4]), ($3 + [16]), ($3 + [60]))
	CALL $47(($0 + [16]), [0], [0])
	CALL $48(($0 + [28]), [0], [0])
	$global$0 = ($3 + [192])
}

void .FUNC $44 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [144])
	$global$0 = $3
	$4 = *($0)
	*($3 + [88]) = [8975]
	*($3 + [92]) = CALL $1([8975])
	*($3 + [24]) = *($3 + [88])
	$5 = *(CALL $33(($3 + [96]), ($3 + [24])))
	*($3 + [72]) = [12092]
	*($3 + [76]) = CALL $1([12092])
	*($3 + [16]) = *($3 + [72])
	$0 = CALL $33(($3 + [80]), ($3 + [16]))
	*($3 + [56]) = [12105]
	*($3 + [60]) = CALL $1([12105])
	*($3 + [8]) = *($3 + [56])
	$6 = CALL $33(($3 + [64]), ($3 + [8]))
	*($3 + [32]) = $1
	CALL $18(($3 + [40]), $2)
	*($3 + [104]) = *($0)
	*($3 + [112]) = *($6)
	*(($2 = CALL $9([16]))) = $4
	*($2 + [8]) = $5
	$0 = ($2 + [16])
	*(($3 + [128])) = $0
	*(($3 + [124])) = $0
	*($3 + [120]) = $2
	CALL $52(($3 + [132]), ($3 + [32]))
	CALL $51(($3 + [104]))
	$2 = *($3 + [132])
	if ( ($2 == 0) ){ goto $label$1 }
	*(($3 + [136])) = $2
	CALL $11($2)
	
.LABEL $label$1
	$2 = *($3 + [120])
	if ( ($2 == 0) ){ goto $label$2 }
	*(($3 + [124])) = $2
	CALL $11($2)
	
.LABEL $label$2
	if ( ((*($3 + [40]) & [1]) == 0) ){ goto $label$3 }
	CALL $11(*(($3 + [48])))
	
.LABEL $label$3
	$global$0 = ($3 + [144])
}

void .FUNC $165 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12533])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $154(*($1), *($0 + [4]))
	CALL $154(*($1), *($0 + [8]))
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12533])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12533])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12533])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $168 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12533])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12533])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12533])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $158(*($1), ($0 + [24]))
}

void .FUNC $167 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $26($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $166 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12840])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$5 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12840])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $1, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12840])
	$4 = *($1)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $4, [8])
	*($5 + [8]) = *($2 + [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $124 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *(($0 + [368]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [372])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ((*($4 + [20]) & [1]) == 0) ){ goto $label$6 }
	CALL $11(*(($4 + [28])))
	
.LABEL $label$6
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$7 }
	CALL $11(*(($4 + [16])))
	
.LABEL $label$7
	CALL $11($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$4 = *(($0 + [368]))
	goto $label$2 
	
.LABEL $label$3
	$4 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $11($4)
	
.LABEL $label$1
	$1 = *(($0 + [328]))
	if ( ($1 == 0) ){ goto $label$8 }
	$2 = ($0 + [332])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$10 }
	
.LOOP $label$11:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$12 }
	CALL $11($3)
	
.LABEL $label$12
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$11 }
	$4 = *(($0 + [328]))
	goto $label$9 
	
.LABEL $label$10
	$4 = $1
	
.LABEL $label$9
	*($2) = $1
	CALL $11($4)
	
.LABEL $label$8
	$1 = *(($0 + [288]))
	if ( ($1 == 0) ){ goto $label$13 }
	$2 = ($0 + [292])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$15 }
	
.LOOP $label$16:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$17 }
	CALL $11($3)
	
.LABEL $label$17
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$16 }
	$4 = *(($0 + [288]))
	goto $label$14 
	
.LABEL $label$15
	$4 = $1
	
.LABEL $label$14
	*($2) = $1
	CALL $11($4)
	
.LABEL $label$13
	$1 = *(($0 + [248]))
	if ( ($1 == 0) ){ goto $label$18 }
	$2 = ($0 + [252])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$20 }
	
.LOOP $label$21:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$22 }
	CALL $11($3)
	
.LABEL $label$22
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$21 }
	$4 = *(($0 + [248]))
	goto $label$19 
	
.LABEL $label$20
	$4 = $1
	
.LABEL $label$19
	*($2) = $1
	CALL $11($4)
	
.LABEL $label$18
	$1 = *(($0 + [208]))
	if ( ($1 == 0) ){ goto $label$23 }
	$2 = ($0 + [212])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$25 }
	
.LOOP $label$26:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$27 }
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$28 }
	CALL $11(*(($3 + [40])))
	
.LABEL $label$28
	CALL $11($3)
	
.LABEL $label$27
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$26 }
	$4 = *(($0 + [208]))
	goto $label$24 
	
.LABEL $label$25
	$4 = $1
	
.LABEL $label$24
	*($2) = $1
	CALL $11($4)
	
.LABEL $label$23
	$1 = *(($0 + [168]))
	if ( ($1 == 0) ){ goto $label$29 }
	$2 = ($0 + [172])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$31 }
	
.LOOP $label$32:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$33 }
	CALL $11($3)
	
.LABEL $label$33
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$32 }
	$4 = *(($0 + [168]))
	goto $label$30 
	
.LABEL $label$31
	$4 = $1
	
.LABEL $label$30
	*($2) = $1
	CALL $11($4)
	
.LABEL $label$29
	if ( ((*($0 + [36]) & [1]) == 0) ){ goto $label$34 }
	CALL $11(*(($0 + [44])))
	
.LABEL $label$34
	return $0
}

void .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [64])
	$global$0 = $2
	$3 = *($1)
	$4 = CALL $18(($2 + [16]), ($1 + [8]))
	$1 = CALL $18($2, ($1 + [20]))
	$0 = *($0 + [4])
	$5 = *($0 + [4])
	$6 = (*($0) + int_32($5 >> [1]))
	$0 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($6) + $0))
	
.LABEL $label$1
	$7 = CALL $18(($2 + [32]), $1)
	$5 = CALL $18(($2 + [48]), $4)
	CALL void $6((int_32 $3), (int_64 $5), (int_32 $7), (int_32 $0))
	if ( (*($2 + [32]) & [1]) ){ goto $label$8 }
	if ( (*($2 + [48]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $11(*($7 + [8]))
	if ( ((*($2 + [48]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $11(*($5 + [8]))
	$0 = [1]
	if ( ((*($1) & [1]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$0 = [1]
	if ( (*($1) & [1]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( (*($4) & $0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($1 + [8]))
	if ( ((*($4) & $0) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($4 + [8]))
	$global$0 = ($2 + [64])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [64])
}

void .FUNC $163 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy(($2 + [15]), $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	*($3) = ((int_32)*($2 + [15]) != (int_32)[0])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $127(*($1), *($0 + [16]))
	$global$0 = ($2 + [16])
}

void .FUNC $162 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [2])
	*(($4 = ($4 + [4]))) = (*($4) + [2])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12840])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$4 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12840])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $8 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $6())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $7($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $9 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $3($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $3($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $6 ()
{
	return [8208]
}

int_32 .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $3($1)
	
.LABEL $label$2
	*(CALL $6()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $3(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $4($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC $4 (int_32 $0)
{
}

void .FUNC $5 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

int_32 .FUNC $2 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

int_32 .FUNC $3 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8489])
	return $3
	
.LABEL $label$1
	return $3
}

void .FUNC $0 ()
{
	CALL $5()
}

int_32 .FUNC $1 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $14 (int_32 $0, int_32 $1)
{
	return CALL $13($0, $1)
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $4($0)
	
.LABEL $label$1
}

void .FUNC $16 (int_32 $0, int_32 $1)
{
	CALL $15($0, $1)
}

void .FUNC $17 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $10 (int_32 $0)
{
	return CALL $9($0)
}

void .FUNC $11 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $4($0)
	
.LABEL $label$1
}

void .FUNC $12 (int_32 $0)
{
	CALL $11($0)
}

int_32 .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $8(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $8(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $75 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12880])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12926])
	
.LABEL $label$2
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)-1)
	$5 = *($1)
	$6 = $3
	$3 = ($6 + [-64])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($6 + [-8])
	*($4 + [16]) = $4
	*($4 + [28]) = ($1 + [8])
	*($4 + [24]) = $1
	*($4 + [32]) = ($1 + [16])
	*($4 + [36]) = ($1 + [24])
	*($4 + [40]) = ($1 + [40])
	CALL $157(($4 + [24]), ($4 + [16]))
	CALL db_update_i64(*($1 + [60]), $2, $3, [56])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

int_32 .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $9($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $19 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$6 = ($5 & [1])
	$5 = *($1)
	$5 = ( *($1 + [4]) ? uint_32($5 >> [1]) : $6 )
	if ( ($5 <= $2) ){ goto $label$1 }
	$5 = ($5 - $2)
	$3 = ( $5 ? $3 : ($5 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$3 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$2 }
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$3
	$8 = (($3 + [16]) & [-16])
	$5 = CALL $9($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $3
	
.LABEL $label$2
	CALL memcpy($5, (( $7 ? ($1 + [1]) : $6 ) + $2), $3)
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $58 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($6 = ($0 + [24]))) = [0]
	$7 = CALL $9([16])
	*($0 + [16]) = $7
	*(($8 = ($0 + [20]))) = $7
	$9 = ($7 + [16])
	*($6) = $9
	$2 = *(($1 + [8]))
	$3 = *($1)
	*($8) = $9
	*(($7 + [8])) = $2
	*($7) = $3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$7 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $67($1, $7)
	$1 = *(($0 + [32]))
	$7 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$7 = [0]
	
.LABEL $label$2
	*($5 + [4]) = $7
	*($5) = $7
	*($5 + [8]) = $1
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	CALL $72(($5 + [24]), ($5 + [16]))
	$global$0 = ($5 + [32])
	return $0
}

int_32 .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12766])
	
.LABEL $label$5
	$4 = CALL $3($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $9([56])) + [16]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [32])
	CALL $162(($3 + [32]), ($3 + [24]))
	*($5 + [44]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $41(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = [28]
	$5 = *(($1 + [28]))
	$4 = *(($1 + [32]))
	$6 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[44]))
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$3:
	$3 = ($3 + [35])
	$6 = *($5)
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$4 }
	$5 = ($5 + [44])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$3 }
	
.LABEL $label$2
	$4 = *(($1 + [40]))
	$5 = *(($1 + [44]))
	$7 = ($5 - $4)
	$6 = (CASTING uint_64)(uint_32 ((int_32)$7 / (int_32)[24]))
	
.LOOP $label$5:
	$3 = ($3 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$6 }
	$3 = ((((int_32)((uint_32)($7 + [-24]) / (uint_32)[24]) * (int_32)[18]) + $3) + [18])
	
.LABEL $label$6
	$4 = *(($1 + [52]))
	$5 = *(($1 + [56]))
	$7 = ($5 - $4)
	$6 = (CASTING uint_64)(uint_32 int_32($7 >> [3]))
	
.LOOP $label$7:
	$3 = ($3 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$8 }
	$3 = ((((int_32)uint_32(($7 + [-8]) >> [3]) * (int_32)[6]) + $3) + [6])
	
.LABEL $label$8
	if ( ($3 == 0) ){ goto $label$10 }
	CALL $67($0, $3)
	$5 = *(($0 + [4]))
	$3 = *($0)
	goto $label$9 
	
.LABEL $label$10
	$5 = [0]
	$3 = [0]
	
.LABEL $label$9
	*($2 + [4]) = $3
	*($2) = $3
	*($2 + [8]) = $5
	*($2 + [16]) = $2
	*($2 + [24]) = $1
	CALL $168(($2 + [24]), ($2 + [16]))
	$global$0 = ($2 + [32])
}

void .FUNC $51 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $67($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $73(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL $11($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

void .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = *($1 + [8])
	$4 = ( *(($1 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ([-8] - $4)
	$5 = (CASTING uint_64)(uint_32 $4)
	$6 = ($1 + [8])
	
.LOOP $label$1:
	$3 = ($3 + [-1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	$4 = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	CALL $67($0, ([0] - $3))
	$4 = *(($0 + [4]))
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$3 = [0]
	
.LABEL $label$2
	*($2 + [4]) = $3
	*($2) = $3
	*($2 + [8]) = $4
	if ( ((int_32)($4 - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12533])
	
.LABEL $label$4
	CALL memcpy($3, $1, [8])
	*($2 + [4]) = ($3 + [8])
	CALL $154($2, $6)
	$global$0 = ($2 + [16])
}

void .FUNC $53 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$5 = ($global$0 - [352])
	$global$0 = $5
	$6 = *($0)
	if ( ((int_64)$6 == (int_64)$1) ){ goto $label$1 }
	if ( ((int_64)$6 == (int_64)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [9117])
	
.LABEL $label$2
	$7 = CALL $19(($5 + [336]), $4, [0], [3], $4)
	$9 = *($5 + [336])
	$8 = CALL $1([9165])
	if ( ((int_32)$8 != (int_32)( *($7 + [4]) ? uint_32($9 >> [1]) : ($9 & [1]) )) ){ goto $label$4 }
	if ( (CALL $25($7, [0], [-1], [9165], $8) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$9 = *($5 + [336])
	$8 = ($7 + [4])
	$10 = CALL $1([9169])
	if ( ((int_32)$10 != (int_32)( *($8) ? uint_32($9 >> [1]) : ($9 & [1]) )) ){ goto $label$5 }
	if ( (CALL $25($7, [0], [-1], [9169], $10) == 0) ){ goto $label$3 }
	
.LABEL $label$5
	$9 = *($5 + [336])
	$10 = CALL $1([9173])
	if ( ((int_32)$10 != (int_32)( *($8) ? uint_32($9 >> [1]) : ($9 & [1]) )) ){ goto $label$6 }
	if ( (CALL $25($7, [0], [-1], [9173], $10) == 0) ){ goto $label$3 }
	
.LABEL $label$6
	CALL eosio_assert([0], [9177])
	
.LABEL $label$3
	$2 = *($0 + [48])
	$6 = *($3 + [8])
	*(($5 + [296])) = [0]
	*($5 + [288]) = (int_64)0
	$9 = CALL $1([9210])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$15 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$18 }
	*($5 + [288]) = ($9 << [1])
	$8 = (($5 + [288]) | [1])
	if ( $9 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$10 = (($9 + [16]) & [-16])
	$8 = CALL $9($10)
	*($5 + [288]) = ($10 | [1])
	*($5 + [296]) = $8
	*($5 + [292]) = $9
	
.LABEL $label$17
	CALL memcpy($8, [9210], $9)
	
.LABEL $label$16
	*(($8 + $9)) = [0]
	$9 = *($0 + [36])
	$8 = ($9 & [1])
	$9 = CALL $24(($5 + [288]), ( *(($0 + [44])) ? ($0 + [37]) : $8 ), ( *(($0 + [40])) ? uint_32($9 >> [1]) : $8 ))
	$8 = ($9 + [8])
	*((($5 + [304]) + [8])) = *($8)
	*($5 + [304]) = *($9)
	*($9) = (int_64)0
	*($8) = [0]
	*((($5 + [272]) + [8])) = [0]
	*($5 + [272]) = (int_64)0
	$9 = CALL $1([8828])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$21 }
	*($5 + [272]) = ($9 << [1])
	$10 = (($5 + [272]) | [1])
	$8 = $10
	if ( $9 ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	$10 = (($9 + [16]) & [-16])
	$8 = CALL $9($10)
	*($5 + [272]) = ($10 | [1])
	*($5 + [280]) = $8
	*($5 + [276]) = $9
	$10 = (($5 + [272]) | [1])
	
.LABEL $label$20
	CALL memcpy($8, [8828], $9)
	
.LABEL $label$19
	*(($8 + $9)) = [0]
	$9 = *($5 + [272])
	$8 = ($9 & [1])
	$9 = CALL $24(($5 + [304]), ( *($5 + [280]) ? $10 : $8 ), ( *($5 + [276]) ? uint_32($9 >> [1]) : $8 ))
	$8 = ($9 + [8])
	*((($5 + [320]) + [8])) = *($8)
	*($5 + [320]) = *($9)
	*($9) = (int_64)0
	*($8) = [0]
	if ( ((int_64)$6 != (int_64)$2) ){ goto $label$23 }
	if ( (*($5 + [320]) & [1]) ){ goto $label$22 }
	goto $label$13 
	
.LABEL $label$23
	CALL eosio_assert([0], ( *($5 + [328]) ? (($5 + [320]) | [1]) : (*($5 + [320]) & [1]) ))
	if ( ((*($5 + [320]) & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$22
	CALL $11(*($5 + [328]))
	$9 = [1]
	if ( ((*($5 + [272]) & [1]) == 0) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$15
	CALL $17(($5 + [288]))
	
.LABEL $label$14
	CALL $17(($5 + [272]))
	
.LABEL $label$13
	$9 = [1]
	if ( (*($5 + [272]) & [1]) ){ goto $label$11 }
	
.LABEL $label$12
	if ( (*($5 + [304]) & $9) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $11(*(($5 + [280])))
	if ( ((*($5 + [304]) & $9) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $11(*($5 + [312]))
	if ( (*($5 + [288]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	if ( ((*($5 + [288]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $11(*($5 + [296]))
	
.LABEL $label$7
	if ( ((uint_64)((int_64)*($3) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$25 }
	$2 = (uint_64)*(($3 + [8])) >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$26:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$25 }
	$6 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$27 }
	$2 = $6
	$8 = $9
	$9 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$27
	$2 = $6
	
.LOOP $label$28:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$25 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$8 = ((int_32)$9 < (int_32)[6])
	$10 = ($9 + [1])
	$9 = $10
	if ( $8 ){ goto $label$28 }
	$9 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$25
	CALL eosio_assert([0], [9238])
	
.LABEL $label$24
	$8 = [1]
	$9 = CALL $19(($5 + [320]), $4, [3], [-1], $4)
	$10 = ( *($9 + [8]) ? ($9 + [1]) : (*($5 + [320]) & [1]) )
	if ( ((int_32)*($10 + [1]) == (int_32)[44]) ){ goto $label$29 }
	$8 = [2]
	if ( ((int_32)*($10 + [2]) == (int_32)[44]) ){ goto $label$29 }
	$8 = [3]
	if ( ((int_32)*($10 + [3]) == (int_32)[44]) ){ goto $label$29 }
	$8 = [4]
	if ( ((int_32)*($10 + [4]) == (int_32)[44]) ){ goto $label$29 }
	$8 = [5]
	if ( ((int_32)*($10 + [5]) == (int_32)[44]) ){ goto $label$29 }
	$8 = [6]
	if ( ((int_32)*($10 + [6]) == (int_32)[44]) ){ goto $label$29 }
	$8 = [7]
	if ( ((int_32)*($10 + [7]) == (int_32)[44]) ){ goto $label$29 }
	$8 = [8]
	if ( ((int_32)*($10 + [8]) == (int_32)[44]) ){ goto $label$29 }
	$8 = [9]
	if ( ((int_32)*($10 + [9]) == (int_32)[44]) ){ goto $label$29 }
	$8 = [10]
	if ( ((int_32)*($10 + [10]) == (int_32)[44]) ){ goto $label$29 }
	$8 = [11]
	if ( ((int_32)*($10 + [11]) == (int_32)[44]) ){ goto $label$29 }
	$8 = [12]
	if ( ((int_32)*($10 + [12]) == (int_32)[44]) ){ goto $label$29 }
	$8 = [0]
	CALL eosio_assert([0], [9272])
	
.LABEL $label$29
	$4 = *($10)
	$11 = ($4 & [1])
	$10 = CALL $19(($5 + [240]), $9, [0], $8, $9)
	*($5 + [256]) = ( *($10 + [8]) ? ($10 + [1]) : $11 )
	*($5 + [260]) = ( *($10 + [4]) ? uint_32($4 >> [1]) : $11 )
	*($5 + [56]) = *($5 + [256])
	$12 = CALL $33(($5 + [264]), ($5 + [56]))
	if ( ((*($10) & [1]) == 0) ){ goto $label$30 }
	CALL $11(*(($10 + [8])))
	
.LABEL $label$30
	$11 = CALL $19(($5 + [304]), $9, ($8 + [1]), *($0 + [28]), $9)
	$10 = *($0 + [28])
	$13 = CALL $19(($5 + [288]), $9, (($8 + $10) + [2]), $10, $9)
	*(($5 + [280])) = [0]
	*($5 + [272]) = (int_64)0
	$10 = CALL $1([8987])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$43 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$46 }
	*($5 + [272]) = ($10 << [1])
	$4 = (($5 + [272]) | [1])
	if ( $10 ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$46
	$14 = (($10 + [16]) & [-16])
	$4 = CALL $9($14)
	*($5 + [272]) = ($14 | [1])
	*($5 + [280]) = $4
	*($5 + [276]) = $10
	
.LABEL $label$45
	CALL memcpy($4, [8987], $10)
	
.LABEL $label$44
	*(($4 + $10)) = [0]
	$8 = ($8 + (*(($0 + [28])) << [1]))
	$4 = ($8 + [3])
	$10 = *($5 + [320])
	$10 = ( *($9 + [4]) ? uint_32($10 >> [1]) : ($10 & [1]) )
	if ( ((uint_32)$10 <= (uint_32)$4) ){ goto $label$47 }
	if ( ((uint_32)$10 > (uint_32)($8 + [15])) ){ goto $label$47 }
	CALL $19(($5 + [224]), $9, $4, [-1], $9)
	if ( (*($5 + [272]) & [1]) ){ goto $label$49 }
	*($5 + [272]) = [0]
	goto $label$48 
	
.LABEL $label$49
	*(*($5 + [280])) = [0]
	*($5 + [276]) = [0]
	
.LABEL $label$48
	CALL $22(($5 + [272]), [0])
	*((($5 + [272]) + [8])) = *((($5 + [224]) + [8]))
	*($5 + [272]) = *($5 + [224])
	
.LABEL $label$47
	$8 = *($5 + [336])
	$10 = ($7 + [4])
	$4 = CALL $1([9165])
	if ( ((int_32)$4 != (int_32)( *($10) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$52 }
	if ( (CALL $25($7, [0], [-1], [9165], $4) == 0) ){ goto $label$51 }
	
.LABEL $label$52
	$8 = *($5 + [336])
	$4 = CALL $1([9169])
	if ( ((int_32)$4 != (int_32)( *($10) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$53 }
	if ( (CALL $25($7, [0], [-1], [9169], $4) == 0) ){ goto $label$50 }
	
.LABEL $label$53
	$8 = *($5 + [336])
	$10 = CALL $1([9173])
	if ( ((int_32)$10 != (int_32)( *(($7 + [4])) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$40 }
	if ( CALL $25($7, [0], [-1], [9173], $10) ){ goto $label$40 }
	*(($4 = (($5 + [96]) + [8]))) = *(($3 + [8]))
	*($5 + [96]) = *($3)
	$2 = *($12)
	$8 = CALL $18(($5 + [80]), $11)
	$10 = CALL $18(($5 + [64]), $13)
	*((($5 + [40]) + [8])) = *($4)
	*($5 + [40]) = *($5 + [96])
	CALL $54($0, $2, $2, ($5 + [40]), $8, $10)
	if ( ((*($10) & [1]) == 0) ){ goto $label$54 }
	CALL $11(*($10 + [8]))
	
.LABEL $label$54
	if ( ((*($8) & [1]) == 0) ){ goto $label$40 }
	CALL $11(*($8 + [8]))
	$8 = [1]
	if ( ((*($5 + [272]) & [1]) == 0) ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$51
	*(($4 = (($5 + [208]) + [8]))) = *(($3 + [8]))
	*($5 + [208]) = *($3)
	$2 = *($12)
	$8 = CALL $18(($5 + [192]), $11)
	$10 = CALL $18(($5 + [176]), $13)
	*((($5 + [8]) + [8])) = *($4)
	*($5 + [8]) = *($5 + [208])
	CALL $55($0, $2, $2, ($5 + [8]), $8, $5)
	if ( ((*($10) & [1]) == 0) ){ goto $label$55 }
	CALL $11(*($10 + [8]))
	
.LABEL $label$55
	if ( ((*($8) & [1]) == 0) ){ goto $label$40 }
	CALL $11(*($8 + [8]))
	$8 = [1]
	if ( ((*($5 + [272]) & [1]) == 0) ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$50
	*(($14 = (($5 + [160]) + [8]))) = *(($3 + [8]))
	*($5 + [160]) = *($3)
	$2 = *($12)
	$8 = CALL $18(($5 + [144]), $11)
	$10 = CALL $18(($5 + [128]), $13)
	$4 = CALL $18(($5 + [112]), ($5 + [272]))
	*((($5 + [24]) + [8])) = *($14)
	*($5 + [24]) = *($5 + [160])
	CALL $56($0, $2, $1, ($5 + [24]), $8, $10, $4)
	if ( (*($4) & [1]) ){ goto $label$57 }
	if ( (*($10) & [1]) ){ goto $label$56 }
	goto $label$42 
	
.LABEL $label$57
	CALL $11(*($4 + [8]))
	if ( ((*($10) & [1]) == 0) ){ goto $label$42 }
	
.LABEL $label$56
	CALL $11(*($10 + [8]))
	if ( (*($8) & [1]) ){ goto $label$41 }
	goto $label$40 
	
.LABEL $label$43
	CALL $17(($5 + [272]))
	
.LABEL $label$42
	if ( ((*($8) & [1]) == 0) ){ goto $label$40 }
	
.LABEL $label$41
	CALL $11(*($8 + [8]))
	
.LABEL $label$40
	$8 = [1]
	if ( (*($5 + [272]) & [1]) ){ goto $label$38 }
	
.LABEL $label$39
	if ( (*($5 + [288]) & $8) ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$38
	CALL $11(*($5 + [280]))
	if ( ((*($5 + [288]) & $8) == 0) ){ goto $label$36 }
	
.LABEL $label$37
	CALL $11(*($13 + [8]))
	$8 = [1]
	if ( ((*($5 + [304]) & [1]) == 0) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$36
	$8 = [1]
	if ( (*($5 + [304]) & [1]) ){ goto $label$34 }
	
.LABEL $label$35
	if ( (*($5 + [320]) & $8) ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$34
	CALL $11(*($11 + [8]))
	if ( ((*($5 + [320]) & $8) == 0) ){ goto $label$32 }
	
.LABEL $label$33
	CALL $11(*(($9 + [8])))
	if ( (*($5 + [336]) & [1]) ){ goto $label$31 }
	goto $label$1 
	
.LABEL $label$32
	if ( ((*($5 + [336]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$31
	CALL $11(*($7 + [8]))
	
.LABEL $label$1
	$global$0 = ($5 + [352])
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $54 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$6 = ($global$0 - [496])
	$global$0 = $6
	if ( ((int_64)*($3 + [8]) == (int_64)*(($0 + [72]))) ){ goto $label$1 }
	CALL eosio_assert([0], [12365])
	
.LABEL $label$1
	if ( ((int_64)*($3) == (int_64)*($0 + [64])) ){ goto $label$2 }
	CALL eosio_assert([0], [9400])
	
.LABEL $label$2
	$3 = CALL $18(($6 + [408]), $4)
	CALL $45(($6 + [424]), $6, $3)
	if ( ((*($3) & [1]) == 0) ){ goto $label$3 }
	CALL $11(*($3 + [8]))
	
.LABEL $label$3
	$3 = CALL $18(($6 + [352]), $5)
	CALL $45(($6 + [368]), $6, $3)
	if ( ((*($3) & [1]) == 0) ){ goto $label$4 }
	CALL $11(*($3 + [8]))
	
.LABEL $label$4
	$7 = *($0)
	*($6 + [296]) = [8975]
	*($6 + [300]) = CALL $1([8975])
	*($6 + [64]) = *($6 + [296])
	$8 = *(CALL $33(($6 + [304]), ($6 + [64])))
	*($6 + [280]) = [9499]
	*($6 + [284]) = CALL $1([9499])
	*($6 + [56]) = *($6 + [280])
	$3 = CALL $33(($6 + [288]), ($6 + [56]))
	*($6 + [264]) = [9505]
	*($6 + [268]) = CALL $1([9505])
	*($6 + [48]) = *($6 + [264])
	$5 = CALL $33(($6 + [272]), ($6 + [48]))
	*($6 + [176]) = $1
	*($6 + [168]) = *($0)
	CALL $49((($6 + [168]) + [16]), ($6 + [424]))
	CALL $49(($6 + [224]), ($6 + [368]))
	$4 = [0]
	*(($9 = ($6 + [336]))) = [0]
	*($6 + [328]) = (int_64)0
	*($6 + [312]) = *($3)
	*($6 + [320]) = *($5)
	*(($3 = CALL $9([16]))) = $7
	*($3 + [8]) = $8
	*(($6 + [348])) = [0]
	$5 = ($3 + [16])
	*($9) = $5
	*(($6 + [332])) = $5
	*($6 + [328]) = $3
	*($6 + [340 align=4]) = (int_64)0
	$3 = CALL $66(($6 + [168]))
	if ( ($3 == 0) ){ goto $label$6 }
	$5 = ($6 + [340])
	CALL $67($5, $3)
	$4 = *(($6 + [344]))
	$3 = *($5)
	goto $label$5 
	
.LABEL $label$6
	$3 = [0]
	
.LABEL $label$5
	*($6 + [468]) = $3
	*($6 + [464]) = $3
	*($6 + [472]) = $4
	*($6 + [480]) = ($6 + [464])
	*($6 + [488]) = ($6 + [168])
	CALL $68(($6 + [488]), ($6 + [480]))
	CALL $51(($6 + [312]))
	$3 = *($6 + [340])
	if ( ($3 == 0) ){ goto $label$7 }
	*(($6 + [344])) = $3
	CALL $11($3)
	
.LABEL $label$7
	$3 = *($6 + [328])
	if ( ($3 == 0) ){ goto $label$8 }
	*(($6 + [332])) = $3
	CALL $11($3)
	
.LABEL $label$8
	$3 = *(($6 + [252]))
	if ( ($3 == 0) ){ goto $label$9 }
	*(($6 + [256])) = $3
	CALL $11($3)
	
.LABEL $label$9
	$3 = *(($6 + [240]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($6 + [244])) = $3
	CALL $11($3)
	
.LABEL $label$10
	$3 = *(($6 + [228]))
	if ( ($3 == 0) ){ goto $label$11 }
	*(($6 + [232])) = $3
	CALL $11($3)
	
.LABEL $label$11
	$3 = *(($6 + [212]))
	if ( ($3 == 0) ){ goto $label$12 }
	*(($6 + [216])) = $3
	CALL $11($3)
	
.LABEL $label$12
	$3 = *(($6 + [200]))
	if ( ($3 == 0) ){ goto $label$13 }
	*(($6 + [204])) = $3
	CALL $11($3)
	
.LABEL $label$13
	$4 = ($6 + [188])
	$3 = *($4)
	if ( ($3 == 0) ){ goto $label$14 }
	*(($6 + [192])) = $3
	CALL $11($3)
	
.LABEL $label$14
	$7 = *($0)
	*($6 + [152]) = [8975]
	*($6 + [156]) = CALL $1([8975])
	*($6 + [40]) = *($6 + [152])
	$8 = *(CALL $33(($6 + [160]), ($6 + [40])))
	*($6 + [136]) = [9499]
	*($6 + [140]) = CALL $1([9499])
	*($6 + [32]) = *($6 + [136])
	$3 = CALL $33(($6 + [144]), ($6 + [32]))
	*($6 + [120]) = [9516]
	*($6 + [124]) = CALL $1([9516])
	*($6 + [24]) = *($6 + [120])
	$5 = CALL $33(($6 + [128]), ($6 + [24]))
	*(($9 = (($6 + [168]) + [24]))) = [0]
	*((($6 + [312]) + [24])) = *(($0 + [88]))
	*($6 + [320]) = $1
	*($6 + [184]) = (int_64)0
	*($6 + [312]) = *($0)
	*($6 + [328]) = *($0 + [80])
	*($6 + [168]) = *($3)
	*($6 + [176]) = *($5)
	*(($3 = CALL $9([16]))) = $7
	*($3 + [8]) = $8
	*(($6 + [204])) = [0]
	$5 = ($3 + [16])
	*($9) = $5
	*($4) = $5
	*($6 + [184]) = $3
	*($6 + [196 align=4]) = (int_64)0
	CALL $67(($6 + [196]), [32])
	$5 = (($6 + [168]) + [32])
	$3 = *($5)
	$4 = *($6 + [196])
	*($6 + [468]) = $4
	*($6 + [464]) = $4
	*($6 + [472]) = $3
	*($6 + [480]) = ($6 + [464])
	*($6 + [488]) = ($6 + [312])
	CALL $69(($6 + [488]), ($6 + [480]))
	CALL $51(($6 + [168]))
	$3 = *($6 + [196])
	if ( ($3 == 0) ){ goto $label$15 }
	*($5) = $3
	CALL $11($3)
	
.LABEL $label$15
	$3 = *($6 + [184])
	if ( ($3 == 0) ){ goto $label$16 }
	*(($6 + [188])) = $3
	CALL $11($3)
	
.LABEL $label$16
	$7 = *($0)
	*($6 + [104]) = [8975]
	*($6 + [108]) = CALL $1([8975])
	*($6 + [16]) = *($6 + [104])
	$8 = *(CALL $33(($6 + [112]), ($6 + [16])))
	*($6 + [88]) = [9499]
	*($6 + [92]) = CALL $1([9499])
	*($6 + [8]) = *($6 + [88])
	$3 = CALL $33(($6 + [96]), ($6 + [8]))
	*($6 + [72]) = [9523]
	*($6 + [76]) = CALL $1([9523])
	*($6) = *($6 + [72])
	$4 = CALL $33(($6 + [80]), $6)
	*((($6 + [168]) + [24])) = *(($0 + [120]))
	*(($6 + [208])) = *(($0 + [104]))
	*($6 + [176]) = $1
	*($6 + [216]) = [1]
	*($6 + [168]) = *($0)
	*($6 + [184]) = *($0 + [112])
	*($6 + [200]) = *($0 + [96])
	*($6 + [312]) = *($3)
	*($6 + [320]) = *($4)
	*(($3 = CALL $9([16]))) = $7
	*($3 + [8]) = $8
	*(($6 + [348])) = [0]
	$4 = ($3 + [16])
	*((($6 + [312]) + [24])) = $4
	*(($6 + [332])) = $4
	*($6 + [328]) = $3
	*($6 + [340 align=4]) = (int_64)0
	CALL $67(($6 + [340]), [52])
	$5 = ($6 + [344])
	$3 = *($5)
	$4 = *($6 + [340])
	*($6 + [468]) = $4
	*($6 + [464]) = $4
	*($6 + [472]) = $3
	*($6 + [480]) = ($6 + [464])
	*($6 + [488]) = ($6 + [168])
	CALL $70(($6 + [488]), ($6 + [480]))
	CALL $51(($6 + [312]))
	$3 = *($6 + [340])
	if ( ($3 == 0) ){ goto $label$17 }
	*($5) = $3
	CALL $11($3)
	
.LABEL $label$17
	$3 = *($6 + [328])
	if ( ($3 == 0) ){ goto $label$18 }
	*(($6 + [332])) = $3
	CALL $11($3)
	
.LABEL $label$18
	$10 = ($0 + [264])
	$4 = *(($0 + [292]))
	$9 = *(($0 + [288]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$22 }
	
.LOOP $label$24:
	$3 = ($4 + [-24])
	$5 = *($3)
	if ( ((int_64)*($5) == (int_64)5) ){ goto $label$23 }
	$4 = $3
	if ( ((int_32)$9 != (int_32)$3) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$23
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$22 }
	if ( ((int_32)*($5 + [56]) == (int_32)$10) ){ goto $label$21 }
	CALL eosio_assert([0], [12715])
	goto $label$21 
	
.LABEL $label$22
	$5 = [0]
	$3 = CALL db_find_i64(*($10), *(($0 + [272])), (int_64)-4157495357179166720, (int_64)5)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$20 }
	$5 = CALL $42($10, $3)
	if ( ((int_32)*($5 + [56]) == (int_32)$10) ){ goto $label$21 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$21
	$1 = *($0)
	*($6 + [168]) = $0
	goto $label$19 
	
.LABEL $label$20
	$1 = *($0)
	*($6 + [168]) = $0
	CALL eosio_assert([0], [12845])
	
.LABEL $label$19
	CALL $71($10, $5, $1, ($6 + [168]))
	$3 = *($6 + [396])
	if ( ($3 == 0) ){ goto $label$25 }
	*(($6 + [400])) = $3
	CALL $11($3)
	
.LABEL $label$25
	$3 = *($6 + [384])
	if ( ($3 == 0) ){ goto $label$26 }
	*(($6 + [388])) = $3
	CALL $11($3)
	
.LABEL $label$26
	$3 = *($6 + [372])
	if ( ($3 == 0) ){ goto $label$27 }
	*(($6 + [376])) = $3
	CALL $11($3)
	
.LABEL $label$27
	$3 = *($6 + [452])
	if ( ($3 == 0) ){ goto $label$28 }
	*(($6 + [456])) = $3
	CALL $11($3)
	
.LABEL $label$28
	$3 = *($6 + [440])
	if ( ($3 == 0) ){ goto $label$29 }
	*(($6 + [444])) = $3
	CALL $11($3)
	
.LABEL $label$29
	$3 = *($6 + [428])
	if ( ($3 == 0) ){ goto $label$30 }
	*(($6 + [432])) = $3
	CALL $11($3)
	
.LABEL $label$30
	$global$0 = ($6 + [496])
}

int_32 .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12766])
	
.LABEL $label$5
	$4 = CALL $3($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $9([48])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [24])
	CALL $152(($3 + [32]), ($3 + [24]))
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $37(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $56 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_64 $17
	float_32 $18
	int_64 $19
	int_64 $20
	int_64 $21
	int_32 $22
	$7 = ($global$0 - [544])
	$global$0 = $7
	$8 = ($0 + [144])
	$10 = *(($0 + [172]))
	$9 = *(($0 + [168]))
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$2 }
	
.LOOP $label$4:
	$11 = ($10 + [-24])
	$12 = *($11)
	if ( ((int_64)*($12) == (int_64)$1) ){ goto $label$3 }
	$10 = $11
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$2 }
	if ( ((int_32)*($12 + [32]) == (int_32)$8) ){ goto $label$1 }
	CALL eosio_assert([0], [12715])
	goto $label$1 
	
.LABEL $label$2
	$12 = [0]
	$11 = CALL db_find_i64(*($8), *(($0 + [152])), (int_64)3607749779137757184, $1)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$1 }
	$12 = CALL $34($8, $11)
	if ( ((int_32)*($12 + [32]) == (int_32)$8) ){ goto $label$1 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$1
	*(($7 + [536])) = [0]
	*($7 + [528]) = (int_64)0
	$11 = CALL $1([9534])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$15 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$18 }
	*($7 + [528]) = ($11 << [1])
	$9 = (($7 + [528]) | [1])
	if ( $11 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$10 = (($11 + [16]) & [-16])
	$9 = CALL $9($10)
	*($7 + [528]) = ($10 | [1])
	*($7 + [536]) = $9
	*($7 + [532]) = $11
	
.LABEL $label$17
	CALL memcpy($9, [9534], $11)
	
.LABEL $label$16
	$10 = [0]
	*(($9 + $11)) = [0]
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$22 }
	$9 = *([0] + [12496])
	$13 = $1
	
.LOOP $label$24:
	*((($7 + [352]) + ($11 = $10))) = *(($9 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$13 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$11 == (int_32)[12]) )))))
	$10 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[11]) ){ goto $label$23 }
	$13 = ((int_64)$13 << (int_64)5)
	if ( ((int_64)$13 != (int_64)0) ){ goto $label$24 }
	
.LABEL $label$23
	*(($7 + [520])) = [0]
	*($7 + [512]) = (int_64)0
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$21 }
	*($7 + [512]) = ($10 << [1])
	$9 = (($7 + [512]) | [1])
	goto $label$20 
	
.LABEL $label$22
	*(($7 + [520])) = [0]
	*($7 + [512]) = (int_64)0
	*($7 + [512]) = [0]
	$11 = (($7 + [512]) | [1])
	$10 = $11
	goto $label$19 
	
.LABEL $label$21
	$14 = (($10 + [16]) & [-16])
	$9 = CALL $9($14)
	*($7 + [512]) = ($14 | [1])
	*($7 + [520]) = $9
	*($7 + [516]) = $10
	
.LABEL $label$20
	$14 = ($11 + [1])
	$11 = [0]
	
.LOOP $label$25:
	*(($9 + $11)) = *((($7 + [352]) + $11))
	$11 = ($11 + [1])
	if ( ((int_32)$14 != (int_32)$11) ){ goto $label$25 }
	$10 = ($9 + $10)
	$11 = (($7 + [512]) | [1])
	
.LABEL $label$19
	*($10) = [0]
	$10 = *($7 + [512])
	$9 = ($10 & [1])
	$11 = CALL $24(($7 + [528]), ( *($7 + [520]) ? $11 : $9 ), ( *($7 + [516]) ? uint_32($10 >> [1]) : $9 ))
	$10 = ($11 + [8])
	*((($7 + [464]) + [8])) = *($10)
	*($7 + [464]) = *($11)
	*($11) = (int_64)0
	*($10) = [0]
	*((($7 + [448]) + [8])) = [0]
	*($7 + [448]) = (int_64)0
	$11 = CALL $1([9554])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$28 }
	*($7 + [448]) = ($11 << [1])
	$9 = (($7 + [448]) | [1])
	$10 = $9
	if ( $11 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	$9 = (($11 + [16]) & [-16])
	$10 = CALL $9($9)
	*($7 + [448]) = ($9 | [1])
	*($7 + [456]) = $10
	*($7 + [452]) = $11
	$9 = (($7 + [448]) | [1])
	
.LABEL $label$27
	CALL memcpy($10, [9554], $11)
	
.LABEL $label$26
	*(($10 + $11)) = [0]
	$11 = *($7 + [448])
	$10 = ($11 & [1])
	$11 = CALL $24(($7 + [464]), ( *($7 + [456]) ? $9 : $10 ), ( *($7 + [452]) ? uint_32($11 >> [1]) : $10 ))
	$10 = ($11 + [8])
	*((($7 + [352]) + [8])) = *($10)
	*($7 + [352]) = *($11)
	*($11) = (int_64)0
	*($10) = [0]
	if ( ($12 == 0) ){ goto $label$30 }
	if ( (*($7 + [352]) & [1]) ){ goto $label$29 }
	goto $label$13 
	
.LABEL $label$30
	CALL eosio_assert([0], ( *($7 + [360]) ? (($7 + [352]) | [1]) : (*($7 + [352]) & [1]) ))
	if ( ((*($7 + [352]) & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$29
	CALL $11(*($7 + [360]))
	$11 = [1]
	if ( ((*($7 + [448]) & [1]) == 0) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$15
	CALL $17(($7 + [528]))
	
.LABEL $label$14
	CALL $17(($7 + [448]))
	
.LABEL $label$13
	$11 = [1]
	if ( (*($7 + [448]) & [1]) ){ goto $label$11 }
	
.LABEL $label$12
	if ( (*($7 + [464]) & $11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $11(*(($7 + [456])))
	if ( ((*($7 + [464]) & $11) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $11(*($7 + [472]))
	$11 = [1]
	if ( ((*($7 + [512]) & [1]) == 0) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$11 = [1]
	if ( (*($7 + [512]) & [1]) ){ goto $label$7 }
	
.LABEL $label$8
	if ( ((*($7 + [528]) & $11) == 0) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$7
	CALL $11(*(($7 + [520])))
	if ( ((*($7 + [528]) & $11) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $11(*($7 + [536]))
	
.LABEL $label$5
	$15 = *(($12 + [16]))
	*(($7 + [536])) = $15
	*($7 + [528]) = *($12 + [8])
	$13 = *($3 + [8])
	if ( ((int_64)$15 == (int_64)$13) ){ goto $label$31 }
	CALL eosio_assert([0], [12365])
	
.LABEL $label$31
	$15 = *($3)
	if ( ((int_64)$15 == (int_64)*($7 + [528])) ){ goto $label$32 }
	$3 = ($0 + [224])
	$10 = *(($0 + [252]))
	$14 = *(($0 + [248]))
	if ( ((int_32)$14 == (int_32)$10) ){ goto $label$34 }
	
.LOOP $label$36:
	$11 = ($10 + [-24])
	$9 = *($11)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$35 }
	$10 = $11
	if ( ((int_32)$14 != (int_32)$11) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$35
	if ( ((int_32)$14 == (int_32)$10) ){ goto $label$34 }
	if ( ((int_32)*($9 + [40]) == (int_32)$3) ){ goto $label$33 }
	CALL eosio_assert([0], [12715])
	goto $label$33 
	
.LABEL $label$34
	$9 = [0]
	$11 = CALL db_find_i64(*($3), *(($0 + [232])), (int_64)4292915607302569984, $1)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$33 }
	$9 = CALL $59($3, $11)
	if ( ((int_32)*($9 + [40]) == (int_32)$3) ){ goto $label$33 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$33
	$11 = ($9 + [16])
	$10 = *($9 + [8])
	if ( ((int_64)$13 == (int_64)*(($9 + [24]))) ){ goto $label$37 }
	CALL eosio_assert([0], [12365])
	
.LABEL $label$37
	if ( ((int_64)$15 != (int_64)*($11)) ){ goto $label$32 }
	$14 = ($10 & [65535])
	if ( ((int_32)$14 != (int_32)*($0 + [34])) ){ goto $label$38 }
	if ( ((int_32)$14 != (int_32)*($0 + [30])) ){ goto $label$39 }
	CALL eosio_assert([0], [9572])
	
.LABEL $label$39
	if ( ((int_32)($10 & [65535]) != (int_32)*($0 + [32])) ){ goto $label$38 }
	CALL eosio_assert([0], [9622])
	
.LABEL $label$38
	if ( ((int_64)*($9 + [32]) == (int_64)$2) ){ goto $label$40 }
	CALL eosio_assert([0], [9680])
	
.LABEL $label$40
	*((($7 + [528]) + [8])) = *(($11 + [8]))
	*($7 + [528]) = *($11)
	
.LABEL $label$32
	if ( ((int_64)*((($7 + [528]) + [8])) == (int_64)$13) ){ goto $label$41 }
	CALL eosio_assert([0], [12365])
	
.LABEL $label$41
	$13 = *($7 + [528])
	*((($7 + [512]) + [8])) = [0]
	*($7 + [512]) = (int_64)0
	$11 = CALL $1([9759])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$50 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$53 }
	*($7 + [512]) = ($11 << [1])
	$10 = (($7 + [512]) | [1])
	if ( $11 ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$53
	$9 = (($11 + [16]) & [-16])
	$10 = CALL $9($9)
	*($7 + [512]) = ($9 | [1])
	*($7 + [520]) = $10
	*($7 + [516]) = $11
	
.LABEL $label$52
	CALL memcpy($10, [9759], $11)
	
.LABEL $label$51
	*(($10 + $11)) = [0]
	$11 = *($0 + [36])
	$10 = ($11 & [1])
	$11 = CALL $24(($7 + [512]), ( *(($0 + [44])) ? ($0 + [37]) : $10 ), ( *(($0 + [40])) ? uint_32($11 >> [1]) : $10 ))
	$10 = ($11 + [8])
	*((($7 + [464]) + [8])) = *($10)
	*($7 + [464]) = *($11)
	*($11) = (int_64)0
	*($10) = [0]
	*((($7 + [448]) + [8])) = [0]
	*($7 + [448]) = (int_64)0
	$11 = CALL $1([9818])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$49 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$56 }
	*($7 + [448]) = ($11 << [1])
	$9 = (($7 + [448]) | [1])
	$10 = $9
	if ( $11 ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$56
	$9 = (($11 + [16]) & [-16])
	$10 = CALL $9($9)
	*($7 + [448]) = ($9 | [1])
	*($7 + [456]) = $10
	*($7 + [452]) = $11
	$9 = (($7 + [448]) | [1])
	
.LABEL $label$55
	CALL memcpy($10, [9818], $11)
	
.LABEL $label$54
	*(($10 + $11)) = [0]
	$11 = *($7 + [448])
	$10 = ($11 & [1])
	$11 = CALL $24(($7 + [464]), ( *($7 + [456]) ? $9 : $10 ), ( *($7 + [452]) ? uint_32($11 >> [1]) : $10 ))
	$10 = ($11 + [8])
	*((($7 + [352]) + [8])) = *($10)
	*($7 + [352]) = *($11)
	*($11) = (int_64)0
	*($10) = [0]
	if ( ((int_64)$13 != (int_64)$15) ){ goto $label$58 }
	if ( (*($7 + [352]) & [1]) ){ goto $label$57 }
	goto $label$48 
	
.LABEL $label$58
	CALL eosio_assert([0], ( *($7 + [360]) ? (($7 + [352]) | [1]) : (*($7 + [352]) & [1]) ))
	if ( ((*($7 + [352]) & [1]) == 0) ){ goto $label$48 }
	
.LABEL $label$57
	CALL $11(*($7 + [360]))
	$11 = [1]
	if ( ((*($7 + [448]) & [1]) == 0) ){ goto $label$47 }
	goto $label$46 
	
.LABEL $label$50
	CALL $17(($7 + [512]))
	
.LABEL $label$49
	CALL $17(($7 + [448]))
	
.LABEL $label$48
	$11 = [1]
	if ( (*($7 + [448]) & [1]) ){ goto $label$46 }
	
.LABEL $label$47
	if ( (*($7 + [464]) & $11) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$46
	CALL $11(*(($7 + [456])))
	if ( ((*($7 + [464]) & $11) == 0) ){ goto $label$44 }
	
.LABEL $label$45
	CALL $11(*($7 + [472]))
	$9 = [1]
	if ( (*($7 + [512]) & [1]) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$44
	$9 = [1]
	if ( ((*($7 + [512]) & [1]) == 0) ){ goto $label$42 }
	
.LABEL $label$43
	CALL $11(*($7 + [520]))
	
.LABEL $label$42
	$11 = [0]
	$16 = *($0 + [48])
	$13 = (uint_64)$16 >> (uint_64)(int_64)8
	$15 = $13)
	
.LOOP $label$61:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$60 }
	$17 = (uint_64)$15 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$15 & (int_64)65280) == (int_64)0) ){ goto $label$63 }
	$15 = $17
	$10 = $11
	$11 = ($10 + $9)
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$61 }
	goto $label$62 
	
.LABEL $label$63
	$15 = $17
	
.LOOP $label$64:
	if ( ((int_64)((int_64)$15 & (int_64)65280) != (int_64)0) ){ goto $label$60 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8)
	$10 = ((int_32)$11 < (int_32)[6])
	$14 = ($11 + $9)
	$11 = $14
	if ( $10 ){ goto $label$64 }
	$11 = ($14 + $9)
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$61 }
	
.LABEL $label$62
	$15 = $16
	goto $label$59 
	
.LABEL $label$60
	CALL eosio_assert([0], [12473])
	$15 = *(($0 + [48]))
	$13 = (uint_64)$15 >> (uint_64)(int_64)8)
	
.LABEL $label$59
	*($7 + [520]) = $15
	*($7 + [512]) = (int_64)0
	$11 = [0]
	
.LOOP $label$67:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$66 }
	$15 = (uint_64)$13 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$13 & (int_64)65280) == (int_64)0) ){ goto $label$68 }
	$13 = $15
	$10 = $11
	$11 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$67 }
	goto $label$65 
	
.LABEL $label$68
	$13 = $15
	
.LOOP $label$69:
	if ( ((int_64)((int_64)$13 & (int_64)65280) != (int_64)0) ){ goto $label$66 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8)
	$10 = ((int_32)$11 < (int_32)[6])
	$9 = ($11 + [1])
	$11 = $9
	if ( $10 ){ goto $label$69 }
	$11 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$67 }
	goto $label$65 
	
.LABEL $label$66
	CALL eosio_assert([0], [12473])
	
.LABEL $label$65
	$10 = *($6)
	$11 = ($10 & [1])
	$17 = *($7 + [528])
	$18 = ((float_32)*($0 + [56]) * (float_32)(CASTING float_32)(int_64 $17))
	if ( ((float_32)(float_32)|$18| < (float_32)(float_32)2147483648) ){ goto $label$74 }
	$19 = (CASTING int_64)(int_32 [-2147483648])
	*($7 + [512]) = $19
	if ( ($11 == 0) ){ goto $label$73 }
	goto $label$72 
	
.LABEL $label$74
	$19 = (CASTING int_64)(int_32 (CASTING int_32)(float_32 $18))
	*($7 + [512]) = $19
	if ( $11 ){ goto $label$72 }
	
.LABEL $label$73
	if ( uint_32($10 >> [1]) ){ goto $label$71 }
	goto $label$70 
	
.LABEL $label$72
	if ( (*($6 + [4]) == 0) ){ goto $label$70 }
	
.LABEL $label$71
	if ( $11 ){ goto $label$76 }
	$11 = uint_32($10 >> [1])
	$10 = ($6 + [1])
	goto $label$75 
	
.LABEL $label$76
	$11 = *($6 + [4])
	$10 = *($6 + [8])
	
.LABEL $label$75
	$14 = ($0 + [304])
	*($7 + [508]) = $11
	*($7 + [504]) = $10
	*($7 + [104]) = *($7 + [504])
	$13 = *(CALL $33(($7 + [352]), ($7 + [104])))
	$10 = *(($0 + [332]))
	$9 = *(($0 + [328]))
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$78 }
	
.LOOP $label$80:
	$11 = ($10 + [-24])
	$6 = *($11)
	if ( ((int_64)*($6) == (int_64)$13) ){ goto $label$79 }
	$10 = $11
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$80 }
	goto $label$78 
	
.LABEL $label$79
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$78 }
	if ( ((int_32)*($6 + [16]) == (int_32)$14) ){ goto $label$77 }
	CALL eosio_assert([0], [12715])
	goto $label$77 
	
.LABEL $label$78
	$11 = CALL db_find_i64(*(($0 + [304])), *(($0 + [312])), (int_64)-5001621369012617216, $13)
	if ( ((int_32)$11 <= (int_32)[-1]) ){ goto $label$70 }
	$6 = CALL $60($14, $11)
	if ( ((int_32)*($6 + [16]) == (int_32)$14) ){ goto $label$77 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$77
	$18 = ((float_32)*($0 + [60]) * (float_32)(CASTING float_32)(int_64 *($7 + [512])))
	if ( ((float_32)(float_32)|$18| < (float_32)(float_32)2147483648) ){ goto $label$82 }
	$11 = [-2147483648]
	goto $label$81 
	
.LABEL $label$82
	$11 = (CASTING int_32)(float_32 $18)
	
.LABEL $label$81
	$20 = *(($0 + [48]))
	$21 = (CASTING int_64)(int_32 $11)
	if ( (uint_64)(((int_64)$21 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$83 }
	CALL eosio_assert([0], [12424])
	
.LABEL $label$83
	$13 = (uint_64)$20 >> (uint_64)(int_64)8)
	$11 = [0]
	
.LOOP $label$86:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$85 }
	$15 = (uint_64)$13 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$13 & (int_64)65280) == (int_64)0) ){ goto $label$87 }
	$13 = $15
	$10 = $11
	$11 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$86 }
	goto $label$84 
	
.LABEL $label$87
	$13 = $15
	
.LOOP $label$88:
	if ( ((int_64)((int_64)$13 & (int_64)65280) != (int_64)0) ){ goto $label$85 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8)
	$10 = ((int_32)$11 < (int_32)[6])
	$9 = ($11 + [1])
	$11 = $9
	if ( $10 ){ goto $label$88 }
	$11 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$86 }
	goto $label$84 
	
.LABEL $label$85
	CALL eosio_assert([0], [12473])
	
.LABEL $label$84
	*($7 + [512]) = (int_64))(*($7 + [512]) - $21)
	$13 = *($0)
	*($7 + [432]) = [8975]
	*($7 + [436]) = CALL $1([8975])
	*($7 + [96]) = *($7 + [432])
	$11 = CALL $33(($7 + [440]), ($7 + [96]))
	*($7 + [448]) = $13
	*($7 + [456]) = *($11)
	*($7 + [416]) = [9478]
	*($7 + [420]) = CALL $1([9478])
	*($7 + [88]) = *($7 + [416])
	$3 = CALL $33(($7 + [424]), ($7 + [88]))
	*($7 + [400]) = [9490]
	*($7 + [404]) = CALL $1([9490])
	*($7 + [80]) = *($7 + [400])
	$22 = CALL $33(($7 + [408]), ($7 + [80]))
	*(($7 + [344])) = [0]
	*($7 + [336]) = (int_64)0
	$11 = CALL $1([9842])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$91 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$94 }
	*($7 + [336]) = ($11 << [1])
	$9 = (($7 + [336]) | [1])
	if ( $11 ){ goto $label$93 }
	goto $label$92 
	
.LABEL $label$94
	$10 = (($11 + [16]) & [-16])
	$9 = CALL $9($10)
	*($7 + [336]) = ($10 | [1])
	*($7 + [344]) = $9
	*($7 + [340]) = $11
	
.LABEL $label$93
	CALL memcpy($9, [9842], $11)
	
.LABEL $label$92
	$10 = [0]
	*(($9 + $11)) = [0]
	$13 = *($12)
	if ( ((int_64)$13 == (int_64)0) ){ goto $label$98 }
	$9 = *([0] + [12496])
	
.LOOP $label$100:
	*((($7 + [352]) + ($11 = $10))) = *(($9 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$13 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$11 == (int_32)[12]) )))))
	$10 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[11]) ){ goto $label$99 }
	$13 = ((int_64)$13 << (int_64)5)
	if ( ((int_64)$13 != (int_64)0) ){ goto $label$100 }
	
.LABEL $label$99
	*(($7 + [328])) = [0]
	*($7 + [320]) = (int_64)0
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$97 }
	*($7 + [320]) = ($10 << [1])
	$9 = (($7 + [320]) | [1])
	goto $label$96 
	
.LABEL $label$98
	*(($7 + [328])) = [0]
	*($7 + [320]) = (int_64)0
	*($7 + [320]) = [0]
	$11 = (($7 + [320]) | [1])
	$10 = $11
	goto $label$95 
	
.LABEL $label$97
	$14 = (($10 + [16]) & [-16])
	$9 = CALL $9($14)
	*($7 + [320]) = ($14 | [1])
	*($7 + [328]) = $9
	*($7 + [324]) = $10
	
.LABEL $label$96
	$14 = ($11 + [1])
	$11 = [0]
	
.LOOP $label$101:
	*(($9 + $11)) = *((($7 + [352]) + $11))
	$11 = ($11 + [1])
	if ( ((int_32)$14 != (int_32)$11) ){ goto $label$101 }
	$10 = ($9 + $10)
	$11 = (($7 + [320]) | [1])
	
.LABEL $label$95
	*($10) = [0]
	$10 = *($7 + [320])
	$9 = ($10 & [1])
	$11 = CALL $24(($7 + [336]), ( *($7 + [328]) ? $11 : $9 ), ( *($7 + [324]) ? uint_32($10 >> [1]) : $9 ))
	$10 = *($11 + [8])
	*($11 + [8]) = [0]
	$13 = *($11)
	*($11) = (int_64)0
	$15 = *($6 + [8])
	*(($7 + [376])) = $20
	*(($7 + [392])) = $10
	*($7 + [352]) = *($0)
	*($7 + [360]) = $15
	*($7 + [368]) = $21
	*($7 + [384]) = $13
	$11 = CALL $58(($7 + [464]), ($7 + [448]), *($3), *($22), ($7 + [352]))
	CALL $51($11)
	$10 = *($11 + [28])
	if ( ($10 == 0) ){ goto $label$102 }
	*(($11 + [32])) = $10
	CALL $11($10)
	
.LABEL $label$102
	$10 = *($11 + [16])
	if ( ($10 == 0) ){ goto $label$103 }
	*(($11 + [20])) = $10
	CALL $11($10)
	
.LABEL $label$103
	if ( (*($7 + [384]) & [1]) ){ goto $label$105 }
	if ( (*($7 + [320]) & [1]) ){ goto $label$104 }
	goto $label$90 
	
.LABEL $label$105
	CALL $11(*(($7 + [392])))
	if ( ((*($7 + [320]) & [1]) == 0) ){ goto $label$90 }
	
.LABEL $label$104
	CALL $11(*(($7 + [328])))
	if ( (*($7 + [336]) & [1]) ){ goto $label$89 }
	goto $label$70 
	
.LABEL $label$91
	CALL $17(($7 + [336]))
	
.LABEL $label$90
	if ( ((*($7 + [336]) & [1]) == 0) ){ goto $label$70 }
	
.LABEL $label$89
	CALL $11(*($7 + [344]))
	
.LABEL $label$70
	$13 = *($0)
	*($7 + [304]) = [8975]
	*($7 + [308]) = CALL $1([8975])
	*($7 + [72]) = *($7 + [304])
	$11 = CALL $33(($7 + [312]), ($7 + [72]))
	*($7 + [448]) = $13
	*($7 + [456]) = *($11)
	*($7 + [288]) = [9478]
	*($7 + [292]) = CALL $1([9478])
	*($7 + [64]) = *($7 + [288])
	$6 = CALL $33(($7 + [296]), ($7 + [64]))
	*($7 + [272]) = [9490]
	*($7 + [276]) = CALL $1([9490])
	*($7 + [56]) = *($7 + [272])
	$3 = CALL $33(($7 + [280]), ($7 + [56]))
	*(($7 + [344])) = [0]
	*($7 + [336]) = (int_64)0
	$11 = CALL $1([9879])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$109 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$112 }
	*($7 + [336]) = ($11 << [1])
	$9 = (($7 + [336]) | [1])
	if ( $11 ){ goto $label$111 }
	goto $label$110 
	
.LABEL $label$112
	$10 = (($11 + [16]) & [-16])
	$9 = CALL $9($10)
	*($7 + [336]) = ($10 | [1])
	*($7 + [344]) = $9
	*($7 + [340]) = $11
	
.LABEL $label$111
	CALL memcpy($9, [9879], $11)
	
.LABEL $label$110
	$10 = [0]
	*(($9 + $11)) = [0]
	$13 = *($12)
	if ( ((int_64)$13 == (int_64)0) ){ goto $label$116 }
	$9 = *([0] + [12496])
	
.LOOP $label$118:
	*((($7 + [352]) + ($11 = $10))) = *(($9 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$13 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$11 == (int_32)[12]) )))))
	$10 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[11]) ){ goto $label$117 }
	$13 = ((int_64)$13 << (int_64)5)
	if ( ((int_64)$13 != (int_64)0) ){ goto $label$118 }
	
.LABEL $label$117
	*(($7 + [328])) = [0]
	*($7 + [320]) = (int_64)0
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$115 }
	*($7 + [320]) = ($10 << [1])
	$9 = (($7 + [320]) | [1])
	goto $label$114 
	
.LABEL $label$116
	*(($7 + [328])) = [0]
	*($7 + [320]) = (int_64)0
	*($7 + [320]) = [0]
	$11 = (($7 + [320]) | [1])
	$10 = $11
	goto $label$113 
	
.LABEL $label$115
	$14 = (($10 + [16]) & [-16])
	$9 = CALL $9($14)
	*($7 + [320]) = ($14 | [1])
	*($7 + [328]) = $9
	*($7 + [324]) = $10
	
.LABEL $label$114
	$14 = ($11 + [1])
	$11 = [0]
	
.LOOP $label$119:
	*(($9 + $11)) = *((($7 + [352]) + $11))
	$11 = ($11 + [1])
	if ( ((int_32)$14 != (int_32)$11) ){ goto $label$119 }
	$10 = ($9 + $10)
	$11 = (($7 + [320]) | [1])
	
.LABEL $label$113
	*($10) = [0]
	$10 = *($7 + [320])
	$9 = ($10 & [1])
	$11 = CALL $24(($7 + [336]), ( *($7 + [328]) ? $11 : $9 ), ( *($7 + [324]) ? uint_32($10 >> [1]) : $9 ))
	$10 = *($11 + [8])
	*($11 + [8]) = [0]
	$13 = *($11)
	*($11) = (int_64)0
	*(($7 + [392])) = $10
	*(($7 + [376])) = *(($7 + [520]))
	*($7 + [352]) = *($0)
	*($7 + [360]) = *($0 + [128])
	*($7 + [384]) = $13
	*($7 + [368]) = *($7 + [512])
	$11 = CALL $58(($7 + [464]), ($7 + [448]), *($6), *($3), ($7 + [352]))
	CALL $51($11)
	$10 = *($11 + [28])
	if ( ($10 == 0) ){ goto $label$120 }
	*(($11 + [32])) = $10
	CALL $11($10)
	
.LABEL $label$120
	$10 = *($11 + [16])
	if ( ($10 == 0) ){ goto $label$121 }
	*(($11 + [20])) = $10
	CALL $11($10)
	
.LABEL $label$121
	if ( (*($7 + [384]) & [1]) ){ goto $label$123 }
	if ( (*($7 + [320]) & [1]) ){ goto $label$122 }
	goto $label$108 
	
.LABEL $label$123
	CALL $11(*(($7 + [392])))
	if ( ((*($7 + [320]) & [1]) == 0) ){ goto $label$108 }
	
.LABEL $label$122
	CALL $11(*(($7 + [328])))
	if ( (*($7 + [336]) & [1]) ){ goto $label$107 }
	goto $label$106 
	
.LABEL $label$109
	CALL $17(($7 + [336]))
	
.LABEL $label$108
	if ( ((*($7 + [336]) & [1]) == 0) ){ goto $label$106 }
	
.LABEL $label$107
	CALL $11(*($7 + [344]))
	
.LABEL $label$106
	$13 = *($0)
	*($7 + [256]) = [8975]
	*($7 + [260]) = CALL $1([8975])
	*($7 + [48]) = *($7 + [256])
	$11 = CALL $33(($7 + [264]), ($7 + [48]))
	*($7 + [448]) = $13
	*($7 + [456]) = *($11)
	*($7 + [240]) = [9478]
	*($7 + [244]) = CALL $1([9478])
	*($7 + [40]) = *($7 + [240])
	$6 = CALL $33(($7 + [248]), ($7 + [40]))
	*($7 + [224]) = [9490]
	*($7 + [228]) = CALL $1([9490])
	*($7 + [32]) = *($7 + [224])
	$3 = CALL $33(($7 + [232]), ($7 + [32]))
	*(($7 + [344])) = [0]
	*($7 + [336]) = (int_64)0
	$11 = CALL $1([9916])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$127 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$130 }
	*($7 + [336]) = ($11 << [1])
	$9 = (($7 + [336]) | [1])
	if ( $11 ){ goto $label$129 }
	goto $label$128 
	
.LABEL $label$130
	$10 = (($11 + [16]) & [-16])
	$9 = CALL $9($10)
	*($7 + [336]) = ($10 | [1])
	*($7 + [344]) = $9
	*($7 + [340]) = $11
	
.LABEL $label$129
	CALL memcpy($9, [9916], $11)
	
.LABEL $label$128
	$15 = (int_64))($17 - $19)
	$10 = [0]
	*(($9 + $11)) = [0]
	$13 = *($12)
	if ( ((int_64)$13 == (int_64)0) ){ goto $label$134 }
	$9 = *([0] + [12496])
	
.LOOP $label$136:
	*((($7 + [352]) + ($11 = $10))) = *(($9 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$13 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$11 == (int_32)[12]) )))))
	$10 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[11]) ){ goto $label$135 }
	$13 = ((int_64)$13 << (int_64)5)
	if ( ((int_64)$13 != (int_64)0) ){ goto $label$136 }
	
.LABEL $label$135
	*(($7 + [328])) = [0]
	*($7 + [320]) = (int_64)0
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$133 }
	*($7 + [320]) = ($10 << [1])
	$9 = (($7 + [320]) | [1])
	goto $label$132 
	
.LABEL $label$134
	*(($7 + [328])) = [0]
	*($7 + [320]) = (int_64)0
	*($7 + [320]) = [0]
	$11 = (($7 + [320]) | [1])
	$10 = $11
	goto $label$131 
	
.LABEL $label$133
	$14 = (($10 + [16]) & [-16])
	$9 = CALL $9($14)
	*($7 + [320]) = ($14 | [1])
	*($7 + [328]) = $9
	*($7 + [324]) = $10
	
.LABEL $label$132
	$14 = ($11 + [1])
	$11 = [0]
	
.LOOP $label$137:
	*(($9 + $11)) = *((($7 + [352]) + $11))
	$11 = ($11 + [1])
	if ( ((int_32)$14 != (int_32)$11) ){ goto $label$137 }
	$10 = ($9 + $10)
	$11 = (($7 + [320]) | [1])
	
.LABEL $label$131
	*($10) = [0]
	$10 = *($7 + [320])
	$9 = ($10 & [1])
	$11 = CALL $24(($7 + [336]), ( *($7 + [328]) ? $11 : $9 ), ( *($7 + [324]) ? uint_32($10 >> [1]) : $9 ))
	$10 = *($11 + [8])
	*($11 + [8]) = [0]
	$13 = *($11)
	*($11) = (int_64)0
	$17 = *($12 + [24])
	*(($7 + [376])) = $16
	*(($7 + [392])) = $10
	*($7 + [352]) = *($0)
	*($7 + [360]) = $17
	*($7 + [368]) = $15
	*($7 + [384]) = $13
	$11 = CALL $58(($7 + [464]), ($7 + [448]), *($6), *($3), ($7 + [352]))
	CALL $51($11)
	$10 = *($11 + [28])
	if ( ($10 == 0) ){ goto $label$138 }
	*(($11 + [32])) = $10
	CALL $11($10)
	
.LABEL $label$138
	$10 = *($11 + [16])
	if ( ($10 == 0) ){ goto $label$139 }
	*(($11 + [20])) = $10
	CALL $11($10)
	
.LABEL $label$139
	if ( (*($7 + [384]) & [1]) ){ goto $label$141 }
	if ( (*($7 + [320]) & [1]) ){ goto $label$140 }
	goto $label$126 
	
.LABEL $label$141
	CALL $11(*(($7 + [392])))
	if ( ((*($7 + [320]) & [1]) == 0) ){ goto $label$126 }
	
.LABEL $label$140
	CALL $11(*(($7 + [328])))
	$10 = [1]
	if ( (*($7 + [336]) & [1]) ){ goto $label$125 }
	goto $label$124 
	
.LABEL $label$127
	CALL $17(($7 + [336]))
	
.LABEL $label$126
	$10 = [1]
	if ( ((*($7 + [336]) & [1]) == 0) ){ goto $label$124 }
	
.LABEL $label$125
	CALL $11(*($7 + [344]))
	
.LABEL $label$124
	$13 = *($12)
	*($7 + [208]) = [8975]
	*($7 + [212]) = CALL $1([8975])
	*($7 + [24]) = *($7 + [208])
	$9 = CALL $33(($7 + [216]), ($7 + [24]))
	*($7 + [192]) = [8626]
	*($7 + [196]) = CALL $1([8626])
	*($7 + [16]) = *($7 + [192])
	$14 = CALL $33(($7 + [200]), ($7 + [16]))
	$11 = CALL $18(($7 + [176]), $5)
	CALL $35($0, $13, $2, *($9), *($14), $11)
	if ( ((*($11) & $10) == 0) ){ goto $label$142 }
	CALL $11(*($11 + [8]))
	
.LABEL $label$142
	$13 = *($12)
	*($7 + [160]) = [8626]
	*($7 + [164]) = CALL $1([8626])
	*($7 + [8]) = *($7 + [160])
	$10 = CALL $33(($7 + [168]), ($7 + [8]))
	*($7 + [144]) = [8987]
	*($7 + [148]) = CALL $1([8987])
	*($7) = *($7 + [144])
	$9 = CALL $33(($7 + [152]), $7)
	$11 = CALL $18(($7 + [128]), $4)
	CALL $35($0, $13, $2, *($10), *($9), $11)
	if ( ((*($11) & [1]) == 0) ){ goto $label$143 }
	CALL $11(*($11 + [8]))
	
.LABEL $label$143
	if ( $12 ){ goto $label$144 }
	CALL eosio_assert([0], [13116])
	CALL eosio_assert([0], [13150])
	
.LABEL $label$144
	$11 = CALL db_next_i64(*($12 + [36]), ($7 + [352]))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$145 }
	CALL $34($8, $11)
	
.LABEL $label$145
	CALL $61($8, $12)
	$12 = ($0 + [184])
	$10 = *(($0 + [212]))
	$14 = *(($0 + [208]))
	if ( ((int_32)$14 == (int_32)$10) ){ goto $label$148 }
	
.LOOP $label$150:
	$11 = ($10 + [-24])
	$9 = *($11)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$149 }
	$10 = $11
	if ( ((int_32)$14 != (int_32)$11) ){ goto $label$150 }
	goto $label$148 
	
.LABEL $label$149
	if ( ((int_32)$14 == (int_32)$10) ){ goto $label$148 }
	if ( ((int_32)*($9 + [44]) == (int_32)$12) ){ goto $label$151 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$151
	if ( $9 ){ goto $label$146 }
	goto $label$147 
	
.LABEL $label$148
	$9 = [0]
	$11 = CALL db_find_i64(*($12), *(($0 + [192])), (int_64)6301507159775510528, $1)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$147 }
	$9 = CALL $62($12, $11)
	if ( ((int_32)*($9 + [44]) == (int_32)$12) ){ goto $label$146 }
	CALL eosio_assert([0], [12715])
	goto $label$146 
	
.LABEL $label$147
	CALL eosio_assert([0], [13116])
	CALL eosio_assert([0], [13150])
	
.LABEL $label$146
	$11 = CALL db_next_i64(*($9 + [48]), ($7 + [352]))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$152 }
	CALL $62($12, $11)
	
.LABEL $label$152
	CALL $63($12, $9)
	$12 = ($0 + [224])
	$10 = *(($0 + [252]))
	$14 = *(($0 + [248]))
	if ( ((int_32)$14 == (int_32)$10) ){ goto $label$155 }
	
.LOOP $label$157:
	$11 = ($10 + [-24])
	$9 = *($11)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$156 }
	$10 = $11
	if ( ((int_32)$14 != (int_32)$11) ){ goto $label$157 }
	goto $label$155 
	
.LABEL $label$156
	if ( ((int_32)$14 == (int_32)$10) ){ goto $label$155 }
	if ( ((int_32)*($9 + [40]) == (int_32)$12) ){ goto $label$158 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$158
	if ( $9 ){ goto $label$153 }
	goto $label$154 
	
.LABEL $label$155
	$9 = [0]
	$11 = CALL db_find_i64(*($12), *(($0 + [232])), (int_64)4292915607302569984, $1)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$154 }
	$9 = CALL $59($12, $11)
	if ( ((int_32)*($9 + [40]) == (int_32)$12) ){ goto $label$153 }
	CALL eosio_assert([0], [12715])
	goto $label$153 
	
.LABEL $label$154
	CALL eosio_assert([0], [13116])
	CALL eosio_assert([0], [13150])
	
.LABEL $label$153
	$11 = CALL db_next_i64(*($9 + [44]), ($7 + [352]))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$159 }
	CALL $59($12, $11)
	
.LABEL $label$159
	CALL $64($12, $9)
	$12 = ($0 + [264])
	$10 = *(($0 + [292]))
	$14 = *(($0 + [288]))
	if ( ((int_32)$14 == (int_32)$10) ){ goto $label$161 }
	
.LOOP $label$163:
	$11 = ($10 + [-24])
	$9 = *($11)
	if ( (int_64)(*($9) == 0) ){ goto $label$162 }
	$10 = $11
	if ( ((int_32)$14 != (int_32)$11) ){ goto $label$163 }
	goto $label$161 
	
.LABEL $label$162
	if ( ((int_32)$14 == (int_32)$10) ){ goto $label$161 }
	if ( ((int_32)*($9 + [56]) == (int_32)$12) ){ goto $label$160 }
	CALL eosio_assert([0], [12715])
	goto $label$160 
	
.LABEL $label$161
	$9 = [0]
	$11 = CALL db_find_i64(*($12), *(($0 + [272])), (int_64)-4157495357179166720, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$160 }
	$9 = CALL $42($12, $11)
	if ( ((int_32)*($9 + [56]) == (int_32)$12) ){ goto $label$160 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$160
	$13 = *($0)
	*($7 + [356]) = ($7 + [512])
	*($7 + [352]) = ($7 + [528])
	if ( $9 ){ goto $label$164 }
	CALL eosio_assert([0], [12845])
	
.LABEL $label$164
	CALL $65($12, $9, $13, ($7 + [352]))
	*(($7 + [472])) = [0]
	*($7 + [464]) = (int_64)0
	$11 = CALL $1([9951])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$173 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$176 }
	*($7 + [464]) = ($11 << [1])
	$9 = (($7 + [464]) | [1])
	if ( $11 ){ goto $label$175 }
	goto $label$174 
	
.LABEL $label$176
	$10 = (($11 + [16]) & [-16])
	$9 = CALL $9($10)
	*($7 + [464]) = ($10 | [1])
	*($7 + [472]) = $9
	*($7 + [468]) = $11
	
.LABEL $label$175
	CALL memcpy($9, [9951], $11)
	
.LABEL $label$174
	$10 = [0]
	*(($9 + $11)) = [0]
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$180 }
	$9 = *([0] + [12496])
	
.LOOP $label$182:
	*((($7 + [352]) + ($11 = $10))) = *(($9 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$11 == (int_32)[12]) )))))
	$10 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[11]) ){ goto $label$181 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$182 }
	
.LABEL $label$181
	*(($7 + [456])) = [0]
	*($7 + [448]) = (int_64)0
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$179 }
	*($7 + [448]) = ($10 << [1])
	$9 = (($7 + [448]) | [1])
	goto $label$178 
	
.LABEL $label$180
	*(($7 + [456])) = [0]
	*($7 + [448]) = (int_64)0
	*($7 + [448]) = [0]
	$11 = (($7 + [448]) | [1])
	$10 = $11
	goto $label$177 
	
.LABEL $label$179
	$14 = (($10 + [16]) & [-16])
	$9 = CALL $9($14)
	*($7 + [448]) = ($14 | [1])
	*($7 + [456]) = $9
	*($7 + [452]) = $10
	
.LABEL $label$178
	$14 = ($11 + [1])
	$11 = [0]
	
.LOOP $label$183:
	*(($9 + $11)) = *((($7 + [352]) + $11))
	$11 = ($11 + [1])
	if ( ((int_32)$14 != (int_32)$11) ){ goto $label$183 }
	$10 = ($9 + $10)
	$11 = (($7 + [448]) | [1])
	
.LABEL $label$177
	*($10) = [0]
	$10 = *($7 + [448])
	$9 = ($10 & [1])
	$11 = CALL $24(($7 + [464]), ( *($7 + [456]) ? $11 : $9 ), ( *($7 + [452]) ? uint_32($10 >> [1]) : $9 ))
	$10 = ($11 + [8])
	*((($7 + [352]) + [8])) = *($10)
	*($7 + [352]) = *($11)
	*($11) = (int_64)0
	*($10) = [0]
	*((($7 + [336]) + [8])) = [0]
	*($7 + [336]) = (int_64)0
	$11 = CALL $1([10007])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$172 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$186 }
	*($7 + [336]) = ($11 << [1])
	$9 = (($7 + [336]) | [1])
	$10 = $9
	if ( $11 ){ goto $label$185 }
	goto $label$184 
	
.LABEL $label$186
	$9 = (($11 + [16]) & [-16])
	$10 = CALL $9($9)
	*($7 + [336]) = ($9 | [1])
	*($7 + [344]) = $10
	*($7 + [340]) = $11
	$9 = (($7 + [336]) | [1])
	
.LABEL $label$185
	CALL memcpy($10, [10007], $11)
	
.LABEL $label$184
	*(($10 + $11)) = [0]
	$11 = *($7 + [336])
	$10 = ($11 & [1])
	$11 = CALL $24(($7 + [352]), ( *($7 + [344]) ? $9 : $10 ), ( *($7 + [340]) ? uint_32($11 >> [1]) : $10 ))
	$10 = ($11 + [8])
	*((($7 + [112]) + [8])) = *($10)
	*($7 + [112]) = *($11)
	*($11) = (int_64)0
	*($10) = [0]
	CALL $44($0, $2, ($7 + [112]))
	if ( (*($7 + [112]) & [1]) ){ goto $label$188 }
	if ( (*($7 + [336]) & [1]) ){ goto $label$187 }
	goto $label$171 
	
.LABEL $label$188
	CALL $11(*($7 + [120]))
	if ( ((*($7 + [336]) & [1]) == 0) ){ goto $label$171 }
	
.LABEL $label$187
	CALL $11(*(($7 + [344])))
	$11 = [1]
	if ( ((*($7 + [352]) & [1]) == 0) ){ goto $label$170 }
	goto $label$169 
	
.LABEL $label$173
	CALL $17(($7 + [464]))
	
.LABEL $label$172
	CALL $17(($7 + [336]))
	
.LABEL $label$171
	$11 = [1]
	if ( (*($7 + [352]) & [1]) ){ goto $label$169 }
	
.LABEL $label$170
	if ( (*($7 + [448]) & $11) ){ goto $label$168 }
	goto $label$167 
	
.LABEL $label$169
	CALL $11(*($7 + [360]))
	if ( ((*($7 + [448]) & $11) == 0) ){ goto $label$167 }
	
.LABEL $label$168
	CALL $11(*(($7 + [456])))
	if ( ((*($7 + [464]) & [1]) == 0) ){ goto $label$166 }
	goto $label$165 
	
.LABEL $label$167
	if ( (*($7 + [464]) & [1]) ){ goto $label$165 }
	
.LABEL $label$166
	$global$0 = ($7 + [544])
	return 
	
.LABEL $label$165
	CALL $11(*($7 + [472]))
	$global$0 = ($7 + [544])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $57 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12880])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12926])
	
.LABEL $label$2
	*($1 + [16]) = ((int_64)*($1 + [16]) + (int_64)1)
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [32]))) ){ goto $label$3 }
	CALL eosio_assert([0], [13036])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [24]) + (int_64)*($3))
	*($1 + [24]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	$3 = [16]
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [13079])
	$3 = [16]
	if ( ((int_64)*(($1 + [24])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [13098])
	$3 = ($1 + $3)
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = ($1 + $3)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [12977])
	
.LABEL $label$4
	$8 = $4
	$4 = ($8 + [-64])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($8 + [-8])
	*($5 + [16]) = $5
	*($5 + [32]) = $3
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [36]) = ($1 + [24])
	*($5 + [40]) = ($1 + [40])
	CALL $157(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [60]), $2, $4, [56])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($5 + [48])
}

int_32 .FUNC $116 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$3 = ($global$0 - [496])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [456])) = [0]
	*($4 + [440]) = (int_64)0
	*($4 + [448]) = (int_64)0
	*($4 + [428]) = $2
	*($4 + [424]) = $2
	*($4 + [432]) = ($2 + $7)
	$3 = $2
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12840])
	$3 = *($4 + [428])
	
.LABEL $label$4
	CALL memcpy(($4 + [440]), $3, [8])
	*($4 + [428]) = ($3 + [8])
	$8 = (($4 + [440]) + [8])
	CALL $127(($4 + [424]), $8)
	$3 = *((($4 + [424]) + [8]))
	*((($4 + [24]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$9 = *($4 + [424])
	*($4 + [8]) = $9
	*($4 + [24]) = $9
	$10 = CALL $122(($4 + [40]), $0, $1, ($4 + [8]))
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	$0 = *($4 + [440])
	$8 = CALL $18(($4 + [464]), $8)
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$5 = CALL $18(($4 + [480]), $8)
	CALL void $3((int_32 $0), (int_64 $5), (int_32 $6))
	if ( (*($4 + [480]) & [1]) ){ goto $label$10 }
	if ( (*($4 + [464]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $11(*($5 + [8]))
	if ( ((*($4 + [464]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $11(*($8 + [8]))
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( ($7 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $4($2)
	
.LABEL $label$6
	CALL $124($10)
	if ( ((*($4 + [448]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($4 + [456])))
	
.LABEL $label$11
	$global$0 = ($4 + [496])
	return [1]
}

int_32 .FUNC $117 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [432])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [424]) = [0]
	*($4 + [416]) = (int_64)0
	$3 = ($2 + $7)
	$8 = (($4 + [416]) + [8])
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12840])
	CALL memcpy(($4 + [416]), $2, [8])
	$9 = ($2 + [8])
	goto $label$4 
	
.LABEL $label$5
	CALL memcpy(($4 + [416]), $2, [8])
	$9 = ($2 + [8])
	if ( ((int_32)$7 != (int_32)[8]) ){ goto $label$4 }
	CALL eosio_assert([0], [12840])
	
.LABEL $label$4
	CALL memcpy($8, $9, [1])
	*(($4 + [8])) = $3
	*($4 + [16]) = $2
	*($4 + [20]) = ($2 + [9])
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$8 = CALL $122(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$9 = *((($4 + [416]) + [8]))
	$0 = *($4 + [416])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 ($9 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $4($2)
	
.LABEL $label$7
	CALL $124($8)
	$global$0 = ($4 + [432])
	return [1]
}

int_32 .FUNC $114 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$3 = ($global$0 - [528])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = ($4 + [464]))) = (int_64)0
	*($4 + [456]) = (int_64)0
	*($4 + [448]) = (int_64)0
	*($4 + [472]) = (int_64)0
	*($4 + [436]) = $2
	*($4 + [432]) = $2
	*($4 + [440]) = ($2 + $7)
	*($4 + [512]) = ($4 + [432])
	*($4 + [48]) = ($4 + [448])
	CALL $130(($4 + [48]), ($4 + [512]))
	$8 = *($4 + [440])
	*((($4 + [32]) + [8])) = $8
	*((($4 + [16]) + [8])) = $8
	$9 = *($4 + [432])
	*($4 + [16]) = $9
	*($4 + [32]) = $9
	$8 = CALL $122(($4 + [48]), $0, $1, ($4 + [16]))
	*(($10 = (($4 + [480]) + [8]))) = *($3)
	*($4 + [480]) = *($4 + [456])
	$0 = *($4 + [448])
	$1 = *($4 + [472])
	*((($4 + [496]) + [8])) = *($10)
	*($4 + [496]) = *($4 + [480])
	$3 = (($4 + [48]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$9 = *((($4 + [496]) + [8]))
	*((($4 + [512]) + [8])) = $9
	*(($4 + [8])) = $9
	$9 = *($4 + [496])
	*($4) = $9
	*($4 + [512]) = $9
	CALL void $3((int_32 $0), (int_64 $4), (int_32 $1), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $4($2)
	
.LABEL $label$6
	CALL $124($8)
	$global$0 = ($4 + [528])
	return [1]
}

void .FUNC $35 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [240])
	$global$0 = $6
	*(($6 + [212])) = (int_64)0
	*(($6 + [220])) = (int_64)0
	*(($6 + [236])) = [0]
	*($6 + [204 align=4]) = (int_64)0
	*($6 + [228 align=4]) = (int_64)0
	$8 = *($5)
	$7 = CALL $1([8982])
	if ( ((int_32)$7 != (int_32)( *($5 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$3 }
	if ( (CALL $25($5, [0], [-1], [8982], $7) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = CALL $18(($6 + [184]), $5)
	CALL $45(($6 + [32]), $6, $5)
	*($6 + [200]) = *($6 + [32])
	$8 = *($6 + [204])
	if ( ($8 == 0) ){ goto $label$4 }
	*(($6 + [208])) = $8
	CALL $11($8)
	*(($6 + [212])) = [0]
	*($6 + [204 align=4]) = (int_64)0
	
.LABEL $label$4
	$8 = (($6 + [32]) + [12])
	$7 = *($8)
	*($8) = [0]
	*((($6 + [200]) + [12])) = $7
	*($6 + [204 align=4]) = *($6 + [36 align=4])
	*($6 + [36 align=4]) = (int_64)0
	$8 = *($6 + [216])
	if ( ($8 == 0) ){ goto $label$5 }
	*(($6 + [220])) = $8
	CALL $11($8)
	*(($6 + [224])) = [0]
	*(($6 + [216])) = (int_64)0
	
.LABEL $label$5
	$8 = (($6 + [32]) + [16])
	*((($6 + [200]) + [16])) = *($8)
	$7 = (($6 + [32]) + [24])
	$9 = *($7)
	*($7) = [0]
	*((($6 + [200]) + [24])) = $9
	*($8) = (int_64)0
	$8 = *($6 + [228])
	if ( ($8 == 0) ){ goto $label$6 }
	*(($6 + [232])) = $8
	CALL $11($8)
	*(($6 + [236])) = [0]
	*(($6 + [228])) = (int_64)0
	
.LABEL $label$6
	$8 = (($6 + [32]) + [28])
	*((($6 + [200]) + [28])) = *($8)
	$7 = (($6 + [32]) + [36])
	$9 = *($7)
	*($7) = [0]
	*((($6 + [200]) + [36])) = $9
	*($8) = (int_64)0
	$8 = *($6 + [48])
	if ( ($8 == 0) ){ goto $label$7 }
	*(($6 + [52])) = $8
	CALL $11($8)
	
.LABEL $label$7
	$8 = *($6 + [36])
	if ( ($8 == 0) ){ goto $label$8 }
	*(($6 + [40])) = $8
	CALL $11($8)
	
.LABEL $label$8
	if ( ((*($5) & [1]) == 0) ){ goto $label$1 }
	CALL $11(*($5 + [8]))
	goto $label$1 
	
.LABEL $label$2
	*($6 + [200]) = [1]
	CALL $46((($6 + [200]) | [4]), [0], [0])
	*($6 + [40]) = $3
	*($6 + [32]) = $2
	*($6 + [48]) = [1]
	CALL $47(($6 + [216]), ($6 + [32]), ($6 + [56]))
	CALL $48(($6 + [228]), [0], [0])
	
.LABEL $label$1
	*($6 + [128]) = [8626]
	*($6 + [132]) = CALL $1([8626])
	*($6 + [24]) = *($6 + [128])
	$2 = *(CALL $33(($6 + [136]), ($6 + [24])))
	*($6 + [112]) = [9499]
	*($6 + [116]) = CALL $1([9499])
	*($6 + [16]) = *($6 + [112])
	$5 = CALL $33(($6 + [120]), ($6 + [16]))
	*($6 + [96]) = [12113]
	*($6 + [100]) = CALL $1([12113])
	*($6 + [8]) = *($6 + [96])
	$8 = CALL $33(($6 + [104]), ($6 + [8]))
	*($6 + [40]) = $3
	*($6 + [32]) = $1
	*($6 + [48]) = $4
	CALL $49((($6 + [32]) + [24]), ($6 + [200]))
	*($6 + [144]) = *($5)
	*($6 + [152]) = *($8)
	*(($5 = CALL $9([16]))) = $1
	*($5 + [8]) = $2
	$8 = ($5 + [16])
	*((($6 + [144]) + [24])) = $8
	*(($6 + [164])) = $8
	*($6 + [160]) = $5
	CALL $50(($6 + [172]), ($6 + [32]))
	CALL $51(($6 + [144]))
	$5 = *($6 + [172])
	if ( ($5 == 0) ){ goto $label$9 }
	*(($6 + [176])) = $5
	CALL $11($5)
	
.LABEL $label$9
	$5 = *($6 + [160])
	if ( ($5 == 0) ){ goto $label$10 }
	*(($6 + [164])) = $5
	CALL $11($5)
	
.LABEL $label$10
	$5 = *(($6 + [84]))
	if ( ($5 == 0) ){ goto $label$11 }
	*(($6 + [88])) = $5
	CALL $11($5)
	
.LABEL $label$11
	$5 = *(($6 + [72]))
	if ( ($5 == 0) ){ goto $label$12 }
	*(($6 + [76])) = $5
	CALL $11($5)
	
.LABEL $label$12
	$5 = *((($6 + [32]) + [28]))
	if ( ($5 == 0) ){ goto $label$13 }
	*(($6 + [64])) = $5
	CALL $11($5)
	
.LABEL $label$13
	$5 = *((($6 + [200]) + [28]))
	if ( ($5 == 0) ){ goto $label$14 }
	*(($6 + [232])) = $5
	CALL $11($5)
	
.LABEL $label$14
	$5 = *(($6 + [216]))
	if ( ($5 == 0) ){ goto $label$15 }
	*(($6 + [220])) = $5
	CALL $11($5)
	
.LABEL $label$15
	$5 = *($6 + [204])
	if ( ($5 == 0) ){ goto $label$16 }
	*(($6 + [208])) = $5
	CALL $11($5)
	
.LABEL $label$16
	$global$0 = ($6 + [240])
}

int_32 .FUNC $112 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [496])
	$global$0 = $3
	*(($4 = $3) + [488]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [464])) = (int_64)0
	*(($4 + [480])) = [0]
	*($4 + [456]) = (int_64)0
	*($4 + [448]) = (int_64)0
	*($4 + [472]) = (int_64)0
	*($4 + [436]) = $2
	*($4 + [432]) = $2
	$6 = ($2 + $5)
	*($4 + [440]) = $6
	$3 = $2
	if ( ((uint_32)$5 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12840])
	$6 = *(($4 + [440]))
	$3 = *($4 + [436])
	
.LABEL $label$4
	CALL memcpy(($4 + [448]), $3, [8])
	$3 = ($3 + [8])
	*($4 + [436]) = $3
	$7 = (($4 + [448]) + [8])
	if ( ((uint_32)($6 - $3) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12840])
	$6 = *((($4 + [432]) + [8]))
	$3 = *($4 + [436])
	
.LABEL $label$5
	CALL memcpy($7, $3, [8])
	$3 = ($3 + [8])
	*($4 + [436]) = $3
	*($4 + [48]) = (int_64)0
	if ( ((uint_32)($6 - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12840])
	$3 = *($4 + [436])
	
.LABEL $label$6
	CALL memcpy(($4 + [48]), $3, [8])
	*(($4 + [464])) = *($4 + [48])
	*($4 + [436]) = ($3 + [8])
	CALL $127(($4 + [432]), ($4 + [472]))
	$3 = *((($4 + [432]) + [8]))
	*((($4 + [32]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$8 = *($4 + [432])
	*($4 + [8]) = $8
	*($4 + [32]) = $8
	$3 = CALL $122(($4 + [48]), $0, $1, ($4 + [8]))
	*($4 + [24]) = $3
	*($4 + [28]) = ($4 + [488])
	CALL $129(($4 + [24]), ($4 + [448]))
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL $4($2)
	
.LABEL $label$7
	CALL $124($3)
	if ( ((*($4 + [472]) & [1]) == 0) ){ goto $label$8 }
	CALL $11(*(($4 + [480])))
	
.LABEL $label$8
	$global$0 = ($4 + [496])
	return [1]
}

int_32 .FUNC $113 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [432])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [424]) = (int_64)0
	*($4 + [416]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12840])
	
.LABEL $label$5
	$3 = ($2 + $7)
	CALL memcpy(($4 + [416]), $2, [8])
	$8 = ($2 + [8])
	$9 = (($4 + [416]) + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12840])
	
.LABEL $label$6
	CALL memcpy($9, $8, [8])
	*(($4 + [8])) = $3
	*($4 + [16]) = $2
	*($4 + [20]) = ($2 + [16])
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$8 = CALL $122(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$0 = *($9)
	$1 = *($4 + [416])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $4($2)
	
.LABEL $label$8
	CALL $124($8)
	$global$0 = ($4 + [432])
	return [1]
}

int_32 .FUNC $110 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [496])
	$global$0 = $3
	*(($4 = $3) + [488]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [456])) = (int_64)0
	*(($4 + [480])) = [0]
	*($4 + [448]) = (int_64)0
	*($4 + [440]) = (int_64)0
	*($4 + [464]) = (int_64)0
	*($4 + [472]) = (int_64)0
	*($4 + [428]) = $2
	*($4 + [424]) = $2
	*($4 + [432]) = ($2 + $5)
	*($4 + [16]) = ($4 + [424])
	*($4 + [40]) = ($4 + [440])
	CALL $125(($4 + [40]), ($4 + [16]))
	$3 = *($4 + [432])
	*((($4 + [24]) + [8])) = $3
	*(($4 + [8])) = $3
	$6 = *($4 + [424])
	*($4) = $6
	*($4 + [24]) = $6
	$3 = CALL $122(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $3
	*($4 + [20]) = ($4 + [488])
	CALL $126(($4 + [16]), ($4 + [440]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $4($2)
	
.LABEL $label$4
	CALL $124($3)
	if ( ((*($4 + [472]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($4 + [480])))
	
.LABEL $label$5
	$global$0 = ($4 + [496])
	return [1]
}

int_32 .FUNC $111 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [480])
	$global$0 = $3
	*(($4 = $3) + [472]) = *($2)
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$3 = CALL $3($2)
	goto $label$2 
	
.LABEL $label$4
	$3 = [0]
	goto $label$1 
	
.LABEL $label$3
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$2
	CALL read_action_data($3, $2)
	
.LABEL $label$1
	*(($4 + [456])) = (int_64)0
	*(($4 + [464])) = (int_64)0
	*($4 + [440]) = (int_64)0
	*($4 + [448]) = (int_64)0
	*($4 + [428]) = $3
	*($4 + [424]) = $3
	*($4 + [432]) = ($3 + $2)
	$5 = $3
	if ( ((uint_32)$2 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12840])
	$5 = *($4 + [428])
	
.LABEL $label$5
	CALL memcpy(($4 + [440]), $5, [8])
	*($4 + [428]) = ($5 + [8])
	CALL $127(($4 + [424]), (($4 + [440]) + [8]))
	CALL $127(($4 + [424]), ($4 + [460]))
	$5 = *((($4 + [424]) + [8]))
	*((($4 + [24]) + [8])) = $5
	*(($4 + [8])) = $5
	$6 = *($4 + [424])
	*($4) = $6
	*($4 + [24]) = $6
	$5 = CALL $122(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $5
	*($4 + [20]) = ($4 + [472])
	CALL $128(($4 + [16]), ($4 + [440]))
	if ( ($2 <= [513]) ){ goto $label$6 }
	CALL $4($3)
	
.LABEL $label$6
	CALL $124($5)
	if ( ((*($4 + [460]) & [1]) == 0) ){ goto $label$7 }
	CALL $11(*(($4 + [468])))
	
.LABEL $label$7
	if ( ((*($4 + [448]) & [1]) == 0) ){ goto $label$8 }
	CALL $11(*(($4 + [456])))
	
.LABEL $label$8
	$global$0 = ($4 + [480])
	return [1]
}

void .FUNC $139 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [432])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [424]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12840])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [424]), $2, [8])
	*($3 + [416]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12840])
	
.LABEL $label$6
	CALL memcpy(($3 + [416]), $6, [8])
	*(($3 + [8])) = $5
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [16])
	*($3 + [24]) = $5
	*($3) = *($3 + [16])
	$2 = CALL $122(($3 + [32]), $0, $1, $3)
	CALL $79($2, *($3 + [424]), *($3 + [416]))
	CALL $124($2)
	$global$0 = ($3 + [432])
}

int_32 .FUNC $118 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$3 = ($global$0 - [608])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = ($4 + [488]))) = (int_64)0
	*(($8 = ($4 + [504]))) = (int_64)0
	*($4 + [480]) = (int_64)0
	*($4 + [472]) = (int_64)0
	*($4 + [496]) = (int_64)0
	*($4 + [460]) = $2
	*($4 + [456]) = $2
	*($4 + [464]) = ($2 + $7)
	*($4 + [592]) = ($4 + [456])
	*($4 + [72]) = ($4 + [472])
	CALL $131(($4 + [72]), ($4 + [592]))
	$9 = *($4 + [464])
	*((($4 + [56]) + [8])) = $9
	*((($4 + [40]) + [8])) = $9
	$10 = *($4 + [456])
	*($4 + [40]) = $10
	*($4 + [56]) = $10
	$9 = CALL $122(($4 + [72]), $0, $1, ($4 + [40]))
	*(($11 = (($4 + [528]) + [8]))) = *($3)
	*(($3 = (($4 + [512]) + [8]))) = *($8)
	*($4 + [528]) = *($4 + [480])
	*($4 + [512]) = *($4 + [496])
	$0 = *($4 + [472])
	*((($4 + [560]) + [8])) = *($3)
	*((($4 + [544]) + [8])) = *($11)
	*($4 + [560]) = *($4 + [512])
	*($4 + [544]) = *($4 + [528])
	$3 = (($4 + [72]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$1 = *((($4 + [544]) + [8]))
	*((($4 + [592]) + [8])) = $1
	$10 = *((($4 + [560]) + [8]))
	*((($4 + [576]) + [8])) = $10
	*((($4 + [24]) + [8])) = $1
	*((($4 + [8]) + [8])) = $10
	$1 = *($4 + [544])
	*($4 + [592]) = $1
	$10 = *($4 + [560])
	*($4 + [576]) = $10
	*($4 + [24]) = $1
	*($4 + [8]) = $10
	CALL void $3((int_32 $0), (int_64 ($4 + [24])), (int_32 ($4 + [8])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $4($2)
	
.LABEL $label$6
	CALL $124($9)
	$global$0 = ($4 + [608])
	return [1]
}

int_32 .FUNC $119 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [512])
	$global$0 = $3
	*(($4 = $3) + [504]) = *($2)
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$3 = CALL $3($2)
	goto $label$2 
	
.LABEL $label$4
	$3 = [0]
	goto $label$1 
	
.LABEL $label$3
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$2
	CALL read_action_data($3, $2)
	
.LABEL $label$1
	*(($4 + [464])) = (int_64)0
	*(($4 + [472])) = (int_64)0
	*($4 + [448]) = (int_64)0
	*($4 + [456]) = (int_64)0
	*($4 + [480]) = (int_64)0
	*($4 + [488]) = (int_64)0
	*($4 + [496]) = (int_64)0
	*($4 + [436]) = $3
	*($4 + [432]) = $3
	*($4 + [440]) = ($3 + $2)
	*($4 + [24]) = ($4 + [432])
	*($4 + [48]) = ($4 + [448])
	CALL $132(($4 + [48]), ($4 + [24]))
	$5 = *($4 + [440])
	*((($4 + [32]) + [8])) = $5
	*((($4 + [8]) + [8])) = $5
	$6 = *($4 + [432])
	*($4 + [8]) = $6
	*($4 + [32]) = $6
	$5 = CALL $122(($4 + [48]), $0, $1, ($4 + [8]))
	*($4 + [24]) = $5
	*($4 + [28]) = ($4 + [504])
	CALL $133(($4 + [24]), ($4 + [448]))
	if ( ($2 <= [513]) ){ goto $label$5 }
	CALL $4($3)
	
.LABEL $label$5
	CALL $124($5)
	if ( ((*($4 + [468]) & [1]) == 0) ){ goto $label$6 }
	CALL $11(*(($4 + [476])))
	
.LABEL $label$6
	if ( ((*($4 + [456]) & [1]) == 0) ){ goto $label$7 }
	CALL $11(*(($4 + [464])))
	
.LABEL $label$7
	$global$0 = ($4 + [512])
	return [1]
}

void .FUNC $152 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12840])
	$0 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $153 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12533])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($1)
	*($2 + [15]) = *(*($0 + [4]))
	$5 = *($4 + [4])
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12533])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, ($2 + [15]), [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12533])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12533])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $154(*($1), *($0 + [16]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $150 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [12533])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [4])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [12533])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [2])
	$4 = (*($3) + [2])
	*($3) = $4
	$3 = ($1 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [12533])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [4])
	$3 = (*($4) + [4])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [12])
	$8 = ($0 + [8])
	
.LOOP $label$4:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [14]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [12533])
	$3 = *($4)
	
.LABEL $label$5
	CALL memcpy($3, ($2 + [14]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$4 }
	$4 = ($1 + [16])
	$8 = ($0 + [8])
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [12533])
	$3 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $4, [1])
	$3 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [20])
	
.LOOP $label$7:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [15]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [12533])
	$3 = *($4)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$7 }
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $151 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12533])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	$7 = ($0 + [4])
	$1 = ($0 + [8])
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$5 }
	$8 = [2]
	goto $label$3 
	
.LABEL $label$5
	$8 = [0]
	goto $label$3 
	
.LABEL $label$4
	$8 = [3]
	
.LABEL $label$3
	
.LOOP $label$6:
	goto $label$10 
	
.LABEL $label$12
	$4 = *($7)
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$7 }
	$8 = [2]
	goto $label$6 
	
.LABEL $label$11
	CALL eosio_assert([0], [12533])
	$4 = *($7)
	$8 = [0]
	goto $label$6 
	
.LABEL $label$10
	CALL memcpy($4, $6, [2])
	*($7) = (*($7) + [2])
	CALL $149($0, ($6 + [4]))
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$8 }
	$8 = [3]
	goto $label$6 
	
.LABEL $label$9
	$global$0 = ($2 + [16])
	return $0
	
.LABEL $label$8
	$8 = [1]
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	goto $label$6 
	return $8
}

void .FUNC $156 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12840])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12840])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $1, [8])
	$1 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $1
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $1) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12840])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $1, [8])
	*($4 + [8]) = *($2 + [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $157 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12533])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12533])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12533])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12533])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12533])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12533])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($1, $4, [8])
	$1 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $1
	*($2 + [8]) = *($4 + [8])
	if ( ((int_32)(*(($0 + [8])) - $1) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12533])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($1, ($2 + [8]), [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $154 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12533])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [12533])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $155 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12533])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [12533])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [2])
	*(($4 = ($4 + [4]))) = (*($4) + [2])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12533])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12533])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$4 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12533])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $158 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [12533])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [4])
	$3 = (*($4) + [4])
	*(($4 = ($0 + [4]))) = $3
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [8])) - *($1 + [4])) / (int_32)[44]))
	
.LOOP $label$2:
	$6 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$7 = ((int_64)$5) != (int_64)0
	*($2 + [14]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [12533])
	$3 = *($4)
	
.LABEL $label$3
	CALL memcpy($3, ($2 + [14]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $7 ){ goto $label$2 }
	$6 = *(($1 + [8]))
	$4 = *(($1 + [4]))
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$4 }
	
.LOOP $label$5:
	CALL $159($0, $4)
	$4 = ($4 + [44])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$5 }
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [20])) - *($1 + [16])) / (int_32)[24]))
	$8 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$6:
	$6 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$7 = ((int_64)$5) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert([0], [12533])
	$3 = *($4)
	
.LABEL $label$7
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $7 ){ goto $label$6 }
	$4 = *(($1 + [20]))
	$3 = *(($1 + [16]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	CALL $160($0, $3)
	$3 = ($3 + [24])
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$8
	$3 = CALL $161($0, ($1 + [28]))
	$global$0 = ($2 + [16])
	return $3
}

int_32 .FUNC $159 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = *($1)
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12533])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$6 = ($1 + [4])
	$7 = ($0 + [8])
	if ( ((int_32)(*($7) - $3) > (int_32)[32]) ){ goto $label$3 }
	CALL eosio_assert([0], [12533])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $6, [33])
	$3 = (*($3) + [33])
	*(($3 = ($0 + [4]))) = $3
	$6 = ($1 + [40])
	if ( ((int_32)(*($7) - $3) > (int_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [12533])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $6, [2])
	*(($3 = ($0 + [4]))) = (*($3) + [2])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $160 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12533])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12533])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [16])
	if ( ((int_32)(*($5) - $3) > (int_32)[1]) ){ goto $label$3 }
	CALL eosio_assert([0], [12533])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $2, [2])
	*(($2 = ($0 + [4]))) = (*($2) + [2])
	return $0
}

void .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [80])
	$global$0 = $2
	$3 = *($1 + [4])
	if ( ($3 <= [3]) ){ goto $label$1 }
	$1 = *($1)
	if ( ((int_32)CALL $1([8514]) != (int_32)[3]) ){ goto $label$3 }
	if ( (CALL $2($1, [8514], [3]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	if ( ($3 <= [7]) ){ goto $label$1 }
	if ( ((int_32)CALL $1([8587]) != (int_32)[7]) ){ goto $label$1 }
	if ( CALL $2($1, [8587], [7]) ){ goto $label$1 }
	*($2 + [36]) = ($3 + [-7])
	*($2 + [32]) = ($1 + [7])
	*($2 + [16]) = *($2 + [32])
	CALL $30(($2 + [40]), ($2 + [16]))
	*(($0 + [33])) = [0]
	*(($0 + [25])) = (int_64)0
	*(($0 + [17])) = (int_64)0
	*(($0 + [9])) = (int_64)0
	*($0 + [1 align=1]) = (int_64)0
	*($0) = [1]
	CALL memcpy(($0 + [1]), ($2 + [40]), [33])
	$global$0 = ($2 + [80])
	return 
	
.LABEL $label$2
	*($2 + [28]) = ($3 + [-3])
	*($2 + [24]) = ($1 + [3])
	*($2 + [8]) = *($2 + [24])
	CALL $30(($2 + [40]), ($2 + [8]))
	*(($0 + [33])) = [0]
	*(($0 + [25])) = (int_64)0
	*(($0 + [17])) = (int_64)0
	*(($0 + [9])) = (int_64)0
	*($0 + [1 align=1]) = (int_64)0
	*($0) = [0]
	CALL memcpy(($0 + [1]), ($2 + [40]), [33])
	$global$0 = ($2 + [80])
	return (unreachable)
	
.LABEL $label$1
	CALL $31([0], [8595])
}

void .FUNC $28 (int_32 $0)
{
}

void .FUNC $55 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_64 $14
	$6 = ($global$0 - [256])
	$global$0 = $6
	if ( (int_64)($1 == 0) ){ goto $label$2 }
	$7 = ( ( [12] ? ( [11] ? ( [10] ? ( [9] ? ( [8] ? ( [7] ? ( [6] ? ( [5] ? ( [4] ? ( [3] ? ( [2] ? [1] : ((uint_64)((int_64)$1 << (int_64)5) > (uint_64)(int_64)576460752303423487) ) : ((uint_64)((int_64)$1 << (int_64)10) > (uint_64)(int_64)576460752303423487) ) : ((uint_64)((int_64)$1 << (int_64)15) > (uint_64)(int_64)576460752303423487) ) : ((uint_64)((int_64)$1 << (int_64)20) > (uint_64)(int_64)576460752303423487) ) : ((uint_64)((int_64)$1 << (int_64)25) > (uint_64)(int_64)576460752303423487) ) : ((uint_64)((int_64)$1 << (int_64)30) > (uint_64)(int_64)576460752303423487) ) : ((uint_64)((int_64)$1 << (int_64)35) > (uint_64)(int_64)576460752303423487) ) : ((uint_64)((int_64)$1 << (int_64)40) > (uint_64)(int_64)576460752303423487) ) : ((uint_64)((int_64)$1 << (int_64)45) > (uint_64)(int_64)576460752303423487) ) : ((uint_64)((int_64)$1 << (int_64)50) > (uint_64)(int_64)576460752303423487) ) : ((uint_64)((int_64)$1 << (int_64)55) > (uint_64)(int_64)576460752303423487) ) ? [13] : (int_64)(((int_64)$1 & (int_64)15) == 0) )
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	$8 = ($7 & [255])
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$6 }
	$9 = [0]
	$10 = *([0] + [12496])
	$11 = $1
	
.LOOP $label$8:
	*((($6 + [40]) + ($12 = $9))) = *(($10 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$11 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$12 == (int_32)[12]) )))))
	$9 = ($12 + [1])
	if ( ((uint_32)$12 > (uint_32)[11]) ){ goto $label$7 }
	$11 = ((int_64)$11 << (int_64)5)
	if ( ((int_64)$11 != (int_64)0) ){ goto $label$8 }
	
.LABEL $label$7
	*(($6 + [160])) = [0]
	*($6 + [152]) = (int_64)0
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$5 }
	*($6 + [152]) = ($9 << [1])
	$10 = (($6 + [152]) | [1])
	goto $label$4 
	
.LABEL $label$6
	*(($6 + [160])) = [0]
	*($6 + [152]) = (int_64)0
	*($6 + [152]) = [0]
	$12 = (($6 + [152]) | [1])
	goto $label$3 
	
.LABEL $label$5
	$13 = (($9 + [16]) & [-16])
	$10 = CALL $9($13)
	*($6 + [152]) = ($13 | [1])
	*($6 + [160]) = $10
	*($6 + [156]) = $9
	
.LABEL $label$4
	$13 = ($12 + [1])
	$12 = [0]
	
.LOOP $label$9:
	*(($10 + $12)) = *((($6 + [40]) + $12))
	$12 = ($12 + [1])
	if ( ((int_32)$13 != (int_32)$12) ){ goto $label$9 }
	$12 = ($10 + $9)
	
.LABEL $label$3
	*($12) = [0]
	$13 = CALL $19(($6 + [240]), ($6 + [152]), ($8 + [-2]), [2], ($6 + [152]))
	if ( ((*($6 + [152]) & [1]) == 0) ){ goto $label$10 }
	CALL $11(*($6 + [160]))
	
.LABEL $label$10
	$12 = *($6 + [240])
	$9 = CALL $1([9303])
	if ( ((int_32)$9 != (int_32)( *($13 + [4]) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$12 }
	if ( (CALL $25($13, [0], [-1], [9303], $9) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$12 = *($6 + [240])
	$9 = ($13 + [4])
	$10 = CALL $1([9306])
	if ( ((int_32)$10 != (int_32)( *($9) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$13 }
	if ( (CALL $25($13, [0], [-1], [9306], $10) == 0) ){ goto $label$11 }
	
.LABEL $label$13
	$12 = *($6 + [240])
	$10 = CALL $1([9309])
	if ( ((int_32)$10 != (int_32)( *($9) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$14 }
	if ( (CALL $25($13, [0], [-1], [9309], $10) == 0) ){ goto $label$11 }
	
.LABEL $label$14
	$12 = *($6 + [240])
	$9 = CALL $1([9312])
	if ( ((int_32)$9 != (int_32)( *(($13 + [4])) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$15 }
	if ( (CALL $25($13, [0], [-1], [9312], $9) == 0) ){ goto $label$11 }
	
.LABEL $label$15
	CALL eosio_assert([0], [9315])
	
.LABEL $label$11
	*($6 + [224]) = (int_64)0
	$11 = *($0 + [48])
	*($6 + [232]) = $11
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$12 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$14 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$19 }
	$11 = $14
	$9 = $12
	$12 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$19
	$11 = $14
	
.LOOP $label$20:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$17 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$9 = ((int_32)$12 < (int_32)[6])
	$10 = ($12 + [1])
	$12 = $10
	if ( $9 ){ goto $label$20 }
	$12 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	CALL eosio_assert([0], [12473])
	
.LABEL $label$16
	$12 = *($6 + [240])
	$9 = ($13 + [4])
	$10 = CALL $1([9303])
	if ( ((int_32)$10 != (int_32)( *($9) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$43 }
	if ( (CALL $25($13, [0], [-1], [9303], $10) == 0) ){ goto $label$42 }
	
.LABEL $label$43
	$12 = *($6 + [240])
	$10 = CALL $1([9306])
	if ( ((int_32)$10 != (int_32)( *($9) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$44 }
	if ( (CALL $25($13, [0], [-1], [9306], $10) == 0) ){ goto $label$41 }
	
.LABEL $label$44
	$12 = *($6 + [240])
	$9 = ($13 + [4])
	$10 = CALL $1([9309])
	if ( ((int_32)$10 != (int_32)( *($9) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$46 }
	if ( (CALL $25($13, [0], [-1], [9309], $10) == 0) ){ goto $label$45 }
	
.LABEL $label$46
	$12 = *($6 + [240])
	$10 = CALL $1([9312])
	if ( ((int_32)$10 != (int_32)( *($9) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$21 }
	if ( CALL $25($13, [0], [-1], [9312], $10) ){ goto $label$21 }
	
.LABEL $label$45
	$12 = (($7 & [255]) + [-6])
	if ( ((uint_32)$12 > (uint_32)[6]) ){ goto $label$40 }
	goto $label$47 
	
.LABEL $label$47
	*($6 + [224]) = (int_64)507000
	goto $label$21 
	
.LABEL $label$42
	$12 = (($7 & [255]) + [-7])
	if ( ((uint_32)$12 > (uint_32)[5]) ){ goto $label$33 }
	goto $label$48 
	
.LABEL $label$48
	*($6 + [224]) = (int_64)57000
	goto $label$21 
	
.LABEL $label$41
	$12 = (($7 & [255]) + [-7])
	if ( ((uint_32)$12 > (uint_32)[5]) ){ goto $label$27 }
	goto $label$49 
	
.LABEL $label$49
	*($6 + [224]) = (int_64)67000
	goto $label$21 
	
.LABEL $label$40
	CALL eosio_assert([0], [9357])
	goto $label$21 
	
.LABEL $label$39
	*($6 + [224]) = (int_64)57000
	goto $label$21 
	
.LABEL $label$38
	*($6 + [224]) = (int_64)47000
	goto $label$21 
	
.LABEL $label$37
	*($6 + [224]) = (int_64)37000
	goto $label$21 
	
.LABEL $label$36
	*($6 + [224]) = (int_64)27000
	goto $label$21 
	
.LABEL $label$35
	*($6 + [224]) = (int_64)17000
	goto $label$21 
	
.LABEL $label$34
	*($6 + [224]) = (int_64)8000
	goto $label$21 
	
.LABEL $label$33
	CALL eosio_assert([0], [9357])
	goto $label$21 
	
.LABEL $label$32
	*($6 + [224]) = (int_64)47000
	goto $label$21 
	
.LABEL $label$31
	*($6 + [224]) = (int_64)37000
	goto $label$21 
	
.LABEL $label$30
	*($6 + [224]) = (int_64)27000
	goto $label$21 
	
.LABEL $label$29
	*($6 + [224]) = (int_64)17000
	goto $label$21 
	
.LABEL $label$28
	*($6 + [224]) = (int_64)8000
	goto $label$21 
	
.LABEL $label$27
	CALL eosio_assert([0], [9357])
	goto $label$21 
	
.LABEL $label$26
	*($6 + [224]) = (int_64)57000
	goto $label$21 
	
.LABEL $label$25
	*($6 + [224]) = (int_64)47000
	goto $label$21 
	
.LABEL $label$24
	*($6 + [224]) = (int_64)37000
	goto $label$21 
	
.LABEL $label$23
	*($6 + [224]) = (int_64)27000
	goto $label$21 
	
.LABEL $label$22
	*($6 + [224]) = (int_64)17000
	
.LABEL $label$21
	if ( ((int_64)*($3 + [8]) == (int_64)*(($6 + [232]))) ){ goto $label$50 }
	CALL eosio_assert([0], [12365])
	
.LABEL $label$50
	if ( ((int_64)*($3) == (int_64)*($6 + [224])) ){ goto $label$51 }
	CALL eosio_assert([0], [9400])
	
.LABEL $label$51
	$12 = *($6 + [240])
	$9 = ($13 + [4])
	$10 = CALL $1([9303])
	if ( ((int_32)$10 != (int_32)( *($9) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$56 }
	if ( (CALL $25($13, [0], [-1], [9303], $10) == 0) ){ goto $label$55 }
	
.LABEL $label$56
	$12 = *($6 + [240])
	$10 = CALL $1([9306])
	if ( ((int_32)$10 != (int_32)( *($9) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$57 }
	if ( (CALL $25($13, [0], [-1], [9306], $10) == 0) ){ goto $label$54 }
	
.LABEL $label$57
	$12 = *($6 + [240])
	$9 = ($13 + [4])
	$10 = CALL $1([9309])
	if ( ((int_32)$10 != (int_32)( *($9) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$58 }
	if ( (CALL $25($13, [0], [-1], [9309], $10) == 0) ){ goto $label$53 }
	
.LABEL $label$58
	$11 = (int_64)0
	$12 = *($6 + [240])
	$10 = CALL $1([9312])
	if ( ((int_32)$10 != (int_32)( *($9) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$52 }
	$11 = ((int_64)(CASTING uint_64)(uint_32 (CALL $25($13, [0], [-1], [9312], $10) == 0)) << (int_64)2)
	goto $label$52 
	
.LABEL $label$55
	$11 = (int_64)1
	goto $label$52 
	
.LABEL $label$54
	$11 = (int_64)2
	goto $label$52 
	
.LABEL $label$53
	$11 = (int_64)3
	
.LABEL $label$52
	$7 = ($0 + [264])
	$9 = *(($0 + [292]))
	$3 = *(($0 + [288]))
	if ( ((int_32)$3 == (int_32)$9) ){ goto $label$60 }
	
.LOOP $label$62:
	$12 = ($9 + [-24])
	$10 = *($12)
	if ( ((int_64)*($10) == (int_64)$11) ){ goto $label$61 }
	$9 = $12
	if ( ((int_32)$3 != (int_32)$12) ){ goto $label$62 }
	goto $label$60 
	
.LABEL $label$61
	if ( ((int_32)$3 == (int_32)$9) ){ goto $label$60 }
	if ( ((int_32)*($10 + [56]) == (int_32)$7) ){ goto $label$59 }
	CALL eosio_assert([0], [12715])
	goto $label$59 
	
.LABEL $label$60
	$10 = [0]
	$12 = CALL db_find_i64(*($7), *(($0 + [272])), (int_64)-4157495357179166720, $11)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$59 }
	$10 = CALL $42($7, $12)
	if ( ((int_32)*($10 + [56]) == (int_32)$7) ){ goto $label$59 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$59
	$11 = *($0)
	*($6 + [40]) = ($6 + [224])
	if ( $10 ){ goto $label$63 }
	CALL eosio_assert([0], [12845])
	
.LABEL $label$63
	CALL $57($7, $10, $11, ($6 + [40]))
	*($6 + [216]) = [0]
	*($6 + [208]) = (int_64)0
	$12 = *($6 + [240])
	$9 = ($13 + [4])
	$10 = CALL $1([9306])
	if ( ((int_32)$10 != (int_32)( *($9) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$72 }
	if ( (CALL $25($13, [0], [-1], [9306], $10) == 0) ){ goto $label$71 }
	
.LABEL $label$72
	$12 = *($6 + [240])
	$10 = CALL $1([9309])
	if ( ((int_32)$10 != (int_32)( *($9) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$73 }
	if ( (CALL $25($13, [0], [-1], [9309], $10) == 0) ){ goto $label$71 }
	
.LABEL $label$73
	$12 = *($6 + [240])
	$9 = ($13 + [4])
	$10 = CALL $1([9312])
	if ( ((int_32)$10 != (int_32)( *($9) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$74 }
	if ( (CALL $25($13, [0], [-1], [9312], $10) == 0) ){ goto $label$71 }
	
.LABEL $label$74
	$11 = (int_64)0
	$12 = *($6 + [240])
	$10 = CALL $1([9303])
	if ( ((int_32)$10 != (int_32)( *($9) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$64 }
	if ( CALL $25($13, [0], [-1], [9303], $10) ){ goto $label$64 }
	*($6 + [192]) = [9466]
	*($6 + [196]) = CALL $1([9466])
	*($6 + [32]) = *($6 + [192])
	$11 = *(CALL $33(($6 + [40]), ($6 + [32])))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$70 }
	$9 = [0]
	$10 = *([0] + [12496])
	
.LOOP $label$76:
	*((($6 + [40]) + ($12 = $9))) = *(($10 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$12 == (int_32)[12]) )))))
	$9 = ($12 + [1])
	if ( ((uint_32)$12 > (uint_32)[11]) ){ goto $label$75 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$76 }
	
.LABEL $label$75
	*(($6 + [144])) = [0]
	*($6 + [136]) = (int_64)0
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$69 }
	*($6 + [136]) = ($9 << [1])
	$10 = (($6 + [136]) | [1])
	goto $label$68 
	
.LABEL $label$71
	*($6 + [200]) = [9440]
	*($6 + [204]) = CALL $1([9440])
	*($6 + [24]) = *($6 + [200])
	$11 = *(CALL $33(($6 + [40]), ($6 + [24])))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$80 }
	$9 = [0]
	$10 = *([0] + [12496])
	
.LOOP $label$82:
	*((($6 + [40]) + ($12 = $9))) = *(($10 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$12 == (int_32)[12]) )))))
	$9 = ($12 + [1])
	if ( ((uint_32)$12 > (uint_32)[11]) ){ goto $label$81 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$82 }
	
.LABEL $label$81
	*(($6 + [144])) = [0]
	*($6 + [136]) = (int_64)0
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$79 }
	*($6 + [136]) = ($9 << [1])
	$10 = (($6 + [136]) | [1])
	goto $label$78 
	
.LABEL $label$80
	*(($6 + [144])) = [0]
	*($6 + [136]) = (int_64)0
	*($6 + [136]) = [0]
	$12 = (($6 + [136]) | [1])
	goto $label$77 
	
.LABEL $label$79
	$3 = (($9 + [16]) & [-16])
	$10 = CALL $9($3)
	*($6 + [136]) = ($3 | [1])
	*($6 + [144]) = $10
	*($6 + [140]) = $9
	
.LABEL $label$78
	$3 = ($12 + [1])
	$12 = [0]
	
.LOOP $label$83:
	*(($10 + $12)) = *((($6 + [40]) + $12))
	$12 = ($12 + [1])
	if ( ((int_32)$3 != (int_32)$12) ){ goto $label$83 }
	$12 = ($10 + $9)
	
.LABEL $label$77
	*($12) = [0]
	$12 = CALL $23(($6 + [136]), [9450])
	$9 = ($12 + [8])
	*((($6 + [152]) + [8])) = *($9)
	*($6 + [152]) = *($12)
	*($12) = (int_64)0
	*($9) = [0]
	$12 = *($4)
	$9 = ($12 & [1])
	$12 = CALL $24(($6 + [152]), ( *($4 + [8]) ? ($4 + [1]) : $9 ), ( *($4 + [4]) ? uint_32($12 >> [1]) : $9 ))
	$9 = ($12 + [8])
	*((($6 + [40]) + [8])) = *($9)
	*($6 + [40]) = *($12)
	*($12) = (int_64)0
	*($9) = [0]
	$12 = CALL $23(($6 + [40]), [9452])
	$9 = *($12 + [4])
	$10 = *($12)
	*($12) = (int_64)0
	$3 = *($12 + [8])
	*($12 + [8]) = [0]
	if ( (*($6 + [208]) & [1]) ){ goto $label$85 }
	*($6 + [208]) = [0]
	goto $label$84 
	
.LABEL $label$85
	*(*((($6 + [208]) + [8]))) = [0]
	*($6 + [212]) = [0]
	
.LABEL $label$84
	CALL $22(($6 + [208]), [0])
	*(($6 + [216])) = $3
	*($6 + [212]) = $9
	*($6 + [208]) = $10
	if ( (*($6 + [40]) & [1]) ){ goto $label$87 }
	if ( (*($6 + [152]) & [1]) ){ goto $label$86 }
	goto $label$66 
	
.LABEL $label$87
	CALL $11(*($6 + [48]))
	if ( ((*($6 + [152]) & [1]) == 0) ){ goto $label$66 }
	
.LABEL $label$86
	CALL $11(*($6 + [160]))
	if ( ((*($6 + [136]) & [1]) == 0) ){ goto $label$64 }
	goto $label$65 
	
.LABEL $label$70
	*(($6 + [144])) = [0]
	*($6 + [136]) = (int_64)0
	*($6 + [136]) = [0]
	$12 = (($6 + [136]) | [1])
	goto $label$67 
	
.LABEL $label$69
	$3 = (($9 + [16]) & [-16])
	$10 = CALL $9($3)
	*($6 + [136]) = ($3 | [1])
	*($6 + [144]) = $10
	*($6 + [140]) = $9
	
.LABEL $label$68
	$3 = ($12 + [1])
	$12 = [0]
	
.LOOP $label$88:
	*(($10 + $12)) = *((($6 + [40]) + $12))
	$12 = ($12 + [1])
	if ( ((int_32)$3 != (int_32)$12) ){ goto $label$88 }
	$12 = ($10 + $9)
	
.LABEL $label$67
	*($12) = [0]
	$12 = CALL $23(($6 + [136]), [9468])
	$9 = ($12 + [8])
	*((($6 + [152]) + [8])) = *($9)
	*($6 + [152]) = *($12)
	*($12) = (int_64)0
	*($9) = [0]
	$12 = *($4)
	$9 = ($12 & [1])
	$12 = CALL $24(($6 + [152]), ( *($4 + [8]) ? ($4 + [1]) : $9 ), ( *($4 + [4]) ? uint_32($12 >> [1]) : $9 ))
	$9 = ($12 + [8])
	*((($6 + [40]) + [8])) = *($9)
	*($6 + [40]) = *($12)
	*($12) = (int_64)0
	*($9) = [0]
	$12 = CALL $23(($6 + [40]), [9470])
	$9 = *($12 + [4])
	$10 = *($12)
	*($12) = (int_64)0
	$3 = *($12 + [8])
	*($12 + [8]) = [0]
	if ( (*($6 + [208]) & [1]) ){ goto $label$90 }
	*($6 + [208]) = [0]
	goto $label$89 
	
.LABEL $label$90
	*(*((($6 + [208]) + [8]))) = [0]
	*($6 + [212]) = [0]
	
.LABEL $label$89
	CALL $22(($6 + [208]), [0])
	*(($6 + [216])) = $3
	*($6 + [212]) = $9
	*($6 + [208]) = $10
	if ( (*($6 + [40]) & [1]) ){ goto $label$94 }
	if ( (*($6 + [152]) & [1]) ){ goto $label$93 }
	goto $label$92 
	
.LABEL $label$94
	CALL $11(*($6 + [48]))
	if ( ((*($6 + [152]) & [1]) == 0) ){ goto $label$92 }
	
.LABEL $label$93
	CALL $11(*($6 + [160]))
	if ( ((*($6 + [136]) & [1]) == 0) ){ goto $label$64 }
	goto $label$91 
	
.LABEL $label$92
	if ( ((*($6 + [136]) & [1]) == 0) ){ goto $label$64 }
	
.LABEL $label$91
	CALL $11(*($6 + [144]))
	goto $label$64 
	
.LABEL $label$66
	if ( ((*($6 + [136]) & [1]) == 0) ){ goto $label$64 }
	
.LABEL $label$65
	CALL $11(*($6 + [144]))
	
.LABEL $label$64
	$1 = *($0)
	*($6 + [120]) = [8975]
	*($6 + [124]) = CALL $1([8975])
	*($6 + [16]) = *($6 + [120])
	$12 = CALL $33(($6 + [128]), ($6 + [16]))
	*($6 + [136]) = $1
	*($6 + [144]) = *($12)
	*($6 + [104]) = [9478]
	*($6 + [108]) = CALL $1([9478])
	*($6 + [8]) = *($6 + [104])
	$12 = CALL $33(($6 + [112]), ($6 + [8]))
	*($6 + [88]) = [9490]
	*($6 + [92]) = CALL $1([9490])
	*($6) = *($6 + [88])
	$9 = CALL $33(($6 + [96]), $6)
	*(($6 + [64])) = *(($6 + [232]))
	*($6 + [48]) = $11
	*($6 + [40]) = *($0)
	*($6 + [56]) = *($6 + [224])
	CALL $18((($6 + [40]) + [32]), ($6 + [208]))
	$12 = CALL $58(($6 + [152]), ($6 + [136]), *($12), *($9), ($6 + [40]))
	CALL $51($12)
	$9 = *($12 + [28])
	if ( ($9 == 0) ){ goto $label$95 }
	*(($12 + [32])) = $9
	CALL $11($9)
	
.LABEL $label$95
	$9 = *($12 + [16])
	if ( ($9 == 0) ){ goto $label$96 }
	*(($12 + [20])) = $9
	CALL $11($9)
	
.LABEL $label$96
	if ( (*($6 + [72]) & [1]) ){ goto $label$101 }
	if ( (*($6 + [208]) & [1]) ){ goto $label$100 }
	goto $label$99 
	
.LABEL $label$101
	CALL $11(*(($6 + [80])))
	if ( ((*($6 + [208]) & [1]) == 0) ){ goto $label$99 }
	
.LABEL $label$100
	CALL $11(*(($6 + [216])))
	if ( ((*($6 + [240]) & [1]) == 0) ){ goto $label$98 }
	goto $label$97 
	
.LABEL $label$99
	if ( (*($6 + [240]) & [1]) ){ goto $label$97 }
	
.LABEL $label$98
	$global$0 = ($6 + [256])
	return 
	
.LABEL $label$97
	CALL $11(*($13 + [8]))
	$global$0 = ($6 + [256])
	$12
	$12
	$12
}

void .FUNC $107 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $26($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	*($1 + [8]) = (int_64)0
	*($1 + [16]) = (int_64)0
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = ($1 + [16])
	$6 = ($1 + [8])
	$7 = *(($4 + [4]))
	$8 = *($7 + [48])
	$9 = (uint_64)$8 >> (uint_64)(int_64)8)
	$10 = *($0)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$11 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$9 = $11
	$12 = $4
	$4 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$9 = $11
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$12 = ((int_32)$4 < (int_32)[6])
	$13 = ($4 + [1])
	$4 = $13
	if ( $12 ){ goto $label$5 }
	$4 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [12473])
	
.LABEL $label$1
	*($1 + [24]) = (int_64)0
	*(($1 + [32])) = $8
	$8 = *(($7 + [48]))
	$9 = (uint_64)$8 >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$11 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$9 = $11
	$12 = $4
	$4 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$9 = $11
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$12 = ((int_32)$4 < (int_32)[6])
	$13 = ($4 + [1])
	$4 = $13
	if ( $12 ){ goto $label$10 }
	$4 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [12473])
	
.LABEL $label$6
	*($1 + [40]) = (int_64)0
	*(($1 + [48])) = $8
	$12 = $2
	$4 = ($12 + [-64])
	$global$0 = $4
	*($3 + [4]) = $4
	*($3) = $4
	*($3 + [8]) = ($12 + [-8])
	*($3 + [16]) = $3
	*($3 + [28]) = $6
	*($3 + [24]) = $1
	*($3 + [32]) = $5
	*($3 + [36]) = ($1 + [24])
	*($3 + [40]) = ($1 + [40])
	CALL $157(($3 + [24]), ($3 + [16]))
	$9 = *($1)
	*($1 + [60]) = CALL db_store_i64(*($10 + [8]), (int_64)-4157495357179166720, *(*($0 + [8])), $9, $4, [56])
	if ( (uint_64)($9 <= *($10 + [16])) ){ goto $label$11 }
	*(($10 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	$global$0 = ($3 + [48])
}

void .FUNC $21 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $9($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $11($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $21($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

int_32 .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $1($1)
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $21($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

void .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $9(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $11($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

int_32 .FUNC $25 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$5 }
	$5 = uint_32($5 >> [1])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ($5 <= $1) ){ goto $label$3 }
	$5 = ($5 - $1)
	$2 = ( $5 ? $2 : ($5 <= $2) )
	if ( $6 ){ goto $label$6 }
	$0 = ($0 + [1])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( ($5 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$6
	$0 = *($0 + [8])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$1 = CALL $2(($0 + $1), $3, $5)
	if ( ($1 == 0) ){ goto $label$1 }
	return $1
	
.LABEL $label$1
	(unreachable)
	return ( [-1] ? $6 : ($2 <= $4) )
}

int_32 .FUNC $24 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $21($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

int_64 .FUNC $27 ()
{
	int_64 $0
	if ( (*([0] + [8220]) == 0) ){ goto $label$1 }
	return *([0] + [8224])
	
.LABEL $label$1
	$0 = CALL current_time()
	*([0] + [8220]) = [1]
	*([0] + [8224]) = $0
	return $0
}

void .FUNC $26 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $109 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [496])
	$global$0 = $3
	*(($4 = $3) + [488]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $3($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [464])) = (int_64)0
	*(($4 + [480])) = [0]
	*($4 + [448]) = (int_64)0
	*($4 + [440]) = (int_64)0
	*($4 + [456]) = (int_64)0
	*($4 + [472]) = (int_64)0
	*($4 + [428]) = $2
	*($4 + [424]) = $2
	*($4 + [432]) = ($2 + $5)
	*($4 + [16]) = ($4 + [424])
	*($4 + [40]) = ($4 + [440])
	CALL $121(($4 + [40]), ($4 + [16]))
	$3 = *($4 + [432])
	*((($4 + [24]) + [8])) = $3
	*(($4 + [8])) = $3
	$6 = *($4 + [424])
	*($4) = $6
	*($4 + [24]) = $6
	$3 = CALL $122(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $3
	*($4 + [20]) = ($4 + [488])
	CALL $123(($4 + [16]), ($4 + [440]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $4($2)
	
.LABEL $label$4
	CALL $124($3)
	if ( ((*($4 + [472]) & [1]) == 0) ){ goto $label$5 }
	CALL $11(*(($4 + [480])))
	
.LABEL $label$5
	$global$0 = ($4 + [496])
	return [1]
}

int_32 .FUNC $135 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [13328])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $67($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [12840])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $69 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12533])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12533])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($5 + [16])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12533])
	$4 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $0, [8])
	$0 = (*($4) + [8])
	*(($4 = ($1 + [4]))) = $0
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($1 + [8])) - $0) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12533])
	$0 = *($4)
	
.LABEL $label$4
	CALL memcpy($0, ($2 + [8]), [8])
	*($4) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12533])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12533])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $158(*($1), ($0 + [16]))
	CALL $158(*($1), ($0 + [56]))
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [448])
	$global$0 = $3
	CALL $0()
	*($3 + [432]) = [9478]
	*($3 + [436]) = CALL $1([9478])
	*($3 + [208]) = *($3 + [432])
	CALL $33(($3 + [440]), ($3 + [208]))
	if ( ((int_64)$1 != (int_64)6138663591592764928) ){ goto $label$1 }
	*($3 + [416]) = [9490]
	*($3 + [420]) = CALL $1([9490])
	*($3 + [200]) = *($3 + [416])
	CALL $33(($3 + [424]), ($3 + [200]))
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$1 }
	*($3 + [412]) = [0]
	*($3 + [408]) = [1]
	*($3) = *($3 + [408])
	CALL $109($0, (int_64)6138663591592764928, $3)
	CALL eosio_exit([0])
	
.LABEL $label$1
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$2 }
	*($3 + [400]) = [12124]
	*($3 + [404]) = CALL $1([12124])
	*($3 + [192]) = *($3 + [400])
	CALL $33(($3 + [440]), ($3 + [192]))
	if ( ((int_64)$2 != (int_64)-4421672816961650688) ){ goto $label$3 }
	*($3 + [396]) = [0]
	*($3 + [392]) = [2]
	*($3 + [8]) = *($3 + [392])
	CALL $110($1, $1, ($3 + [8]))
	CALL eosio_exit([0])
	
.LABEL $label$3
	*($3 + [384]) = [12129]
	*($3 + [388]) = CALL $1([12129])
	*($3 + [184]) = *($3 + [384])
	CALL $33(($3 + [440]), ($3 + [184]))
	if ( ((int_64)$2 != (int_64)4730614985703555072) ){ goto $label$4 }
	*($3 + [380]) = [0]
	*($3 + [376]) = [3]
	*($3 + [16]) = *($3 + [376])
	CALL $111($1, $1, ($3 + [16]))
	CALL eosio_exit([0])
	
.LABEL $label$4
	*($3 + [368]) = [12136]
	*($3 + [372]) = CALL $1([12136])
	*($3 + [176]) = *($3 + [368])
	CALL $33(($3 + [440]), ($3 + [176]))
	if ( ((int_64)$2 != (int_64)-3075276126730321920) ){ goto $label$5 }
	*($3 + [364]) = [0]
	*($3 + [360]) = [4]
	*($3 + [24]) = *($3 + [360])
	CALL $112($1, $1, ($3 + [24]))
	CALL eosio_exit([0])
	
.LABEL $label$5
	*($3 + [352]) = [12143]
	*($3 + [356]) = CALL $1([12143])
	*($3 + [168]) = *($3 + [352])
	CALL $33(($3 + [440]), ($3 + [168]))
	if ( ((int_64)$2 != (int_64)-2507766120631500800) ){ goto $label$6 }
	*($3 + [348]) = [0]
	*($3 + [344]) = [5]
	*($3 + [32]) = *($3 + [344])
	CALL $113($1, $1, ($3 + [32]))
	CALL eosio_exit([0])
	
.LABEL $label$6
	*($3 + [336]) = [12148]
	*($3 + [340]) = CALL $1([12148])
	*($3 + [160]) = *($3 + [336])
	CALL $33(($3 + [440]), ($3 + [160]))
	if ( ((int_64)$2 != (int_64)-5915097261717438464) ){ goto $label$7 }
	*($3 + [332]) = [0]
	*($3 + [328]) = [6]
	*($3 + [40]) = *($3 + [328])
	CALL $114($1, $1, ($3 + [40]))
	CALL eosio_exit([0])
	
.LABEL $label$7
	*($3 + [320]) = [12159]
	*($3 + [324]) = CALL $1([12159])
	*($3 + [152]) = *($3 + [320])
	CALL $33(($3 + [440]), ($3 + [152]))
	if ( ((int_64)$2 != (int_64)5373045769656336384) ){ goto $label$8 }
	*($3 + [316]) = [0]
	*($3 + [312]) = [7]
	*($3 + [48]) = *($3 + [312])
	CALL $115($1, $1, ($3 + [48]))
	CALL eosio_exit([0])
	
.LABEL $label$8
	*($3 + [304]) = [12105]
	*($3 + [308]) = CALL $1([12105])
	*($3 + [144]) = *($3 + [304])
	CALL $33(($3 + [440]), ($3 + [144]))
	if ( ((int_64)$2 != (int_64)-7876370025743908864) ){ goto $label$9 }
	*($3 + [300]) = [0]
	*($3 + [296]) = [8]
	*($3 + [56]) = *($3 + [296])
	CALL $116($1, $1, ($3 + [56]))
	CALL eosio_exit([0])
	
.LABEL $label$9
	*($3 + [288]) = [12169]
	*($3 + [292]) = CALL $1([12169])
	*($3 + [136]) = *($3 + [288])
	CALL $33(($3 + [440]), ($3 + [136]))
	if ( ((int_64)$2 != (int_64)-4454441229832159232) ){ goto $label$10 }
	*($3 + [284]) = [0]
	*($3 + [280]) = [9]
	*($3 + [64]) = *($3 + [280])
	CALL $117($1, $1, ($3 + [64]))
	CALL eosio_exit([0])
	
.LABEL $label$10
	*($3 + [272]) = [12178]
	*($3 + [276]) = CALL $1([12178])
	*($3 + [128]) = *($3 + [272])
	CALL $33(($3 + [440]), ($3 + [128]))
	if ( ((int_64)$2 != (int_64)-8455912920667127808) ){ goto $label$11 }
	*($3 + [268]) = [0]
	*($3 + [264]) = [10]
	*($3 + [72]) = *($3 + [264])
	CALL $118($1, $1, ($3 + [72]))
	CALL eosio_exit([0])
	
.LABEL $label$11
	*($3 + [256]) = [12183]
	*($3 + [260]) = CALL $1([12183])
	*($3 + [120]) = *($3 + [256])
	CALL $33(($3 + [440]), ($3 + [120]))
	if ( ((int_64)$2 != (int_64)-5000837079379214336) ){ goto $label$12 }
	*($3 + [252]) = [0]
	*($3 + [248]) = [11]
	*($3 + [80]) = *($3 + [248])
	CALL $113($1, $1, ($3 + [80]))
	CALL eosio_exit([0])
	
.LABEL $label$12
	*($3 + [240]) = [12190]
	*($3 + [244]) = CALL $1([12190])
	*($3 + [112]) = *($3 + [240])
	CALL $33(($3 + [440]), ($3 + [112]))
	if ( ((int_64)$2 != (int_64)-5000817672032616448) ){ goto $label$13 }
	*($3 + [236]) = [0]
	*($3 + [232]) = [12]
	*($3 + [88]) = *($3 + [232])
	CALL $119($1, $1, ($3 + [88]))
	CALL eosio_exit([0])
	
.LABEL $label$13
	*($3 + [224]) = [12198]
	*($3 + [228]) = CALL $1([12198])
	*($3 + [104]) = *($3 + [224])
	CALL $33(($3 + [440]), ($3 + [104]))
	if ( ((int_64)$2 != (int_64)8421058835216596992) ){ goto $label$2 }
	*($3 + [220]) = [0]
	*($3 + [216]) = [13]
	*($3 + [96]) = *($3 + [216])
	CALL $120($1, $1, ($3 + [96]))
	
.LABEL $label$2
	CALL eosio_exit([0])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $65 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12880])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12926])
	
.LABEL $label$2
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)-1)
	*($1 + [16]) = ((int_64)*($1 + [16]) + (int_64)1)
	$6 = *($1)
	$7 = *($3)
	if ( ((int_64)*($7 + [8]) == (int_64)*(($1 + [32]))) ){ goto $label$3 }
	CALL eosio_assert([0], [13036])
	
.LABEL $label$3
	$8 = ((int_64)*($1 + [24]) + (int_64)*($7))
	*($1 + [24]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [13079])
	$8 = *(($1 + [24]))
	
.LABEL $label$4
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [13098])
	
.LABEL $label$5
	$3 = *($3 + [4])
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [48]))) ){ goto $label$6 }
	CALL eosio_assert([0], [13036])
	
.LABEL $label$6
	$8 = ((int_64)*($1 + [40]) + (int_64)*($3))
	*($1 + [40]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$7 }
	CALL eosio_assert([0], [13079])
	$8 = *(($1 + [40]))
	
.LABEL $label$7
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [13098])
	
.LABEL $label$8
	$7 = ($1 + [16])
	$9 = ($1 + [8])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$9 }
	CALL eosio_assert([0], [12977])
	
.LABEL $label$9
	$4 = $4
	$3 = ($4 + [-64])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-8])
	*($5 + [16]) = $5
	*($5 + [28]) = $9
	*($5 + [32]) = $7
	*($5 + [24]) = $1
	*($5 + [36]) = ($1 + [24])
	*($5 + [40]) = ($1 + [40])
	CALL $157(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [60]), $2, $3, [56])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$10 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	$global$0 = ($5 + [48])
}

void .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13180])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [13225])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [13275])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $11($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $11($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [44]))
}

void .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $9($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $26($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $11($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $66 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$1 = [20]
	$3 = *(($0 + [20]))
	$2 = *(($0 + [24]))
	$4 = (CASTING uint_64)(uint_32 ((int_32)($2 - $3) / (int_32)[44]))
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	
.LOOP $label$3:
	$1 = ($1 + [35])
	$4 = *($3)
	
.LOOP $label$4:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$4 }
	$3 = ($3 + [44])
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = *(($0 + [32]))
	$3 = *(($0 + [36]))
	$5 = ($3 - $2)
	$4 = (CASTING uint_64)(uint_32 ((int_32)$5 / (int_32)[24]))
	
.LOOP $label$5:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$6 }
	$1 = ((((int_32)((uint_32)($5 + [-24]) / (uint_32)[24]) * (int_32)[18]) + $1) + [18])
	
.LABEL $label$6
	$2 = *(($0 + [44]))
	$3 = *(($0 + [48]))
	$5 = ($3 - $2)
	$4 = (CASTING uint_64)(uint_32 int_32($5 >> [3]))
	
.LOOP $label$7:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$8 }
	$1 = ((((int_32)uint_32(($5 + [-8]) >> [3]) * (int_32)[6]) + $1) + [6])
	
.LABEL $label$8
	$3 = *(($0 + [60]))
	$2 = *(($0 + [64]))
	$4 = (CASTING uint_64)(uint_32 ((int_32)($2 - $3) / (int_32)[44]))
	$1 = ($1 + [4])
	
.LOOP $label$9:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$9 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$1 = ($1 + [35])
	$4 = *($3)
	
.LOOP $label$12:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$12 }
	$3 = ($3 + [44])
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$11 }
	
.LABEL $label$10
	$2 = *(($0 + [72]))
	$3 = *(($0 + [76]))
	$5 = ($3 - $2)
	$4 = (CASTING uint_64)(uint_32 ((int_32)$5 / (int_32)[24]))
	
.LOOP $label$13:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$13 }
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$14 }
	$1 = ((((int_32)((uint_32)($5 + [-24]) / (uint_32)[24]) * (int_32)[18]) + $1) + [18])
	
.LABEL $label$14
	$2 = *(($0 + [84]))
	$3 = *(($0 + [88]))
	$0 = ($3 - $2)
	$4 = (CASTING uint_64)(uint_32 int_32($0 >> [3]))
	
.LOOP $label$15:
	$1 = ($1 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$15 }
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$16 }
	$1 = ((((int_32)uint_32(($0 + [-8]) >> [3]) * (int_32)[6]) + $1) + [6])
	
.LABEL $label$16
	return $1
}

void .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13180])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [13225])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [13275])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $11($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $11($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [36]))
}

int_32 .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12766])
	
.LABEL $label$5
	$2 = CALL $3($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $9([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12840])
	
.LABEL $label$7
	$7 = ($5 + [8])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [12840])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $82(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $4($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $11($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [13180])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [13225])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [13275])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$13 }
	CALL $11(*(($5 + [40])))
	
.LABEL $label$13
	CALL $11($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	if ( ((*($8 + [32]) & [1]) == 0) ){ goto $label$16 }
	CALL $11(*(($8 + [40])))
	
.LABEL $label$16
	CALL $11($8)
	
.LABEL $label$15
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [48]))
}

int_32 .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12766])
	
.LABEL $label$5
	$4 = CALL $3($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $9([56])) + [24]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [32 align=4]) = (int_64)0
	*($5 + [40]) = [0]
	*($5 + [44]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	CALL $163(($3 + [40]), ($3 + [32]))
	*($5 + [48]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $39(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [32]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [40])))
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $101 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = [0]
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	*($4 + [16]) = [0]
	CALL $103(($4 + [16]), $0)
	$6 = *($4 + [16])
	if ( ($6 == 0) ){ goto $label$2 }
	CALL $67($4, $6)
	$5 = *($4 + [4])
	$6 = *($4)
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	*($4 + [20]) = $6
	*($4 + [16]) = $6
	*($4 + [24]) = $5
	CALL $104(($4 + [16]), $0)
	$0 = *($4)
	CALL send_deferred($1, $2, $0, (*($4 + [4]) - $0), $3)
	$0 = *($4)
	if ( ($0 == 0) ){ goto $label$3 }
	*($4 + [4]) = $0
	CALL $11($0)
	
.LABEL $label$3
	$global$0 = ($4 + [32])
}

void .FUNC $100 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = *($0)
	$7 = ((int_32)(*($0 + [4]) - $6) / (int_32)[40])
	$8 = ($7 + [1])
	if ( ((uint_32)$8 >= (uint_32)[107374183]) ){ goto $label$2 }
	$9 = [107374182]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[40])
	if ( ((uint_32)$6 > (uint_32)[53687090]) ){ goto $label$4 }
	$9 = ($6 << [1])
	$9 = ( $8 ? $9 : ($9 <= $8) )
	if ( ($9 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $9(((int_32)$9 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$9 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $26($0)
	
.LABEL $label$1
	*(($7 = ($6 + ((int_32)$7 * (int_32)[40])))) = *($2)
	*($7 + [8]) = *($3)
	*($7 + [16 align=4]) = (int_64)0
	*(($3 = ($7 + [24]))) = [0]
	$2 = CALL $9([16])
	*($7 + [16]) = $2
	*($7 + [28 align=4]) = (int_64)0
	*(($7 + [36])) = [0]
	$8 = ($2 + [16])
	*($3) = $8
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($7 + [20])) = $8
	CALL $67(($7 + [28]), [48])
	$2 = *(($7 + [32]))
	$1 = *($7 + [28])
	*($5 + [4]) = $1
	*($5) = $1
	*($5 + [8]) = $2
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	$10 = ($6 + ((int_32)$9 * (int_32)[40]))
	$11 = ($7 + [40])
	CALL $99(($5 + [24]), ($5 + [16]))
	$2 = *($0)
	$8 = *(($0 + [4]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	$12 = ($2 - $8)
	$1 = [0]
	
.LOOP $label$7:
	$9 = ($8 + $1)
	*((($2 = ($7 + $1)) + [-32])) = *(($9 + [-32]))
	*(($2 + [-40])) = *(($9 + [-40]))
	*(($6 = ($2 + [-24]))) = (int_64)0
	*(($3 = ($2 + [-16]))) = [0]
	$4 = ($9 + [-24])
	*($6) = *($4)
	$6 = ($9 + [-16])
	*($3) = *($6)
	*($6) = [0]
	*(($6 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$3 = ($9 + [-12])
	*($6) = *($3)
	*($4) = (int_64)0
	$9 = ($9 + [-4])
	*($2) = *($9)
	*($9) = [0]
	*($3) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$12 != (int_32)$1) ){ goto $label$7 }
	$7 = ($7 + $1)
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $7
	*(($0 + [4])) = $11
	*(($0 + [8])) = $10
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$9 = *(($2 + [-12]))
	if ( ($9 == 0) ){ goto $label$10 }
	*(($2 + [-8])) = $9
	CALL $11($9)
	
.LABEL $label$10
	$9 = ($2 + [-40])
	$1 = *(($2 + [-24]))
	if ( ($1 == 0) ){ goto $label$11 }
	*(($2 + [-20])) = $1
	CALL $11($1)
	
.LABEL $label$11
	$2 = $9
	if ( ((int_32)$6 != (int_32)$9) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $11($6)
	
.LABEL $label$12
	$global$0 = ($5 + [32])
	(unreachable)
}

int_32 .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0)
	*($0) = ($2 + [10])
	$2 = ($2 + [11])
	$3 = *($1 + [12])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	*($0) = $2
	$3 = *($1 + [20])
	
.LOOP $label$2:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$2 }
	*($0) = $2
	$5 = *($1 + [24])
	$4 = *(($1 + [28]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$3 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$7 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$7
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$8:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$8 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	*($0) = $2
	
.LABEL $label$4
	$5 = *($1 + [36])
	$4 = *(($1 + [40]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$9:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$9 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$12:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$13 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$13
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$14:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$14 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$11 }
	*($0) = $2
	
.LABEL $label$10
	$5 = *($1 + [48])
	$8 = *(($1 + [52]))
	$3 = (CASTING uint_64)(uint_32 int_32(($8 - $5) >> [4]))
	
.LOOP $label$15:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$15 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = *($5 + [4])
	$6 = *(($5 + [8]))
	$2 = ((($2 + $6) + [2]) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$18:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$18 }
	$5 = ($5 + [16])
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$17 }
	*($0) = $2
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $102 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [52])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($3 + [-16])
	$5 = *(($3 + [-12]))
	if ( ($5 == 0) ){ goto $label$5 }
	*(($3 + [-8])) = $5
	CALL $11($5)
	
.LABEL $label$5
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$3 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $11($3)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [40])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$10 }
	*(($3 + [-8])) = $4
	CALL $11($4)
	
.LABEL $label$10
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$11 }
	*(($3 + [-20])) = $5
	CALL $11($5)
	
.LABEL $label$11
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$3 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL $11($3)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$16 }
	*(($3 + [-8])) = $4
	CALL $11($4)
	
.LABEL $label$16
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$17 }
	*(($3 + [-20])) = $5
	CALL $11($5)
	
.LABEL $label$17
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$15 }
	$3 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL $11($3)
	
.LABEL $label$12
	return $0
}

void .FUNC $105 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$1 = ($global$0 - [48])
	$global$0 = $1
	CALL require_auth(*($0))
	$2 = ($0 + [264])
	$4 = *(($0 + [292]))
	$3 = *(($0 + [288]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( (int_64)(*($6) == 0) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [56]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [12715])
	$global$0 = ($1 + [48])
	return 
	
.LABEL $label$2
	$5 = CALL db_find_i64(*($2), *(($0 + [272])), (int_64)-4157495357179166720, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	if ( ((int_32)*(CALL $42($2, $5) + [56]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [12715])
	$global$0 = ($1 + [48])
	return 
	
.LABEL $label$5
	*($1 + [8]) = [0]
	$7 = ($0 + [288])
	$8 = ($0 + [264])
	$9 = ($1 + [24])
	$10 = ($0 + [296])
	$3 = ($0 + [292])
	
.LOOP $label$6:
	$11 = *($0)
	*($1 + [4]) = $0
	*($1) = ($1 + [8])
	*($1 + [40]) = $11
	if ( ((int_64)CALL current_receiver() == (int_64)*($8)) ){ goto $label$7 }
	CALL eosio_assert([0], [12789])
	
.LABEL $label$7
	*($1 + [16]) = $2
	*($9) = ($1 + [40])
	*($1 + [20]) = $1
	*(($5 = CALL $9([72])) + [32]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = $2
	CALL $106(($1 + [16]), $5)
	*($1 + [32]) = $5
	$11 = *($5)
	*($1 + [16]) = $11
	$6 = *($5 + [60])
	*($1 + [12]) = $6
	$4 = *($3)
	if ( ((uint_32)$4 >= (uint_32)*($10)) ){ goto $label$10 }
	*($4 + [8]) = $11
	*($4 + [16]) = $6
	*($1 + [32]) = [0]
	*($4) = $5
	*($3) = ($4 + [24])
	$5 = *($1 + [32])
	*($1 + [32]) = [0]
	if ( $5 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $107($7, ($1 + [32]), ($1 + [16]), ($1 + [12]))
	$5 = *($1 + [32])
	*($1 + [32]) = [0]
	if ( ($5 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $11($5)
	
.LABEL $label$8
	$5 = *($1 + [8])
	*($1 + [8]) = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[5]) ){ goto $label$6 }
	
.LABEL $label$1
	$global$0 = ($1 + [48])
}

int_32 .FUNC $104 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $150($0, $1)
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [28])) - *($1 + [24])) / (int_32)[40]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [14]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12533])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [14]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *(($1 + [28]))
	$6 = *(($1 + [24]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$4:
	CALL $73($0, $6)
	$6 = ($6 + [40])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$4 }
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [40])) - *($1 + [36])) / (int_32)[40]))
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$5:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [12533])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$5 }
	$6 = *(($1 + [40]))
	$4 = *(($1 + [36]))
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$8:
	CALL $73($0, $4)
	$4 = ($4 + [40])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = CALL $151($0, ($1 + [48]))
	$global$0 = ($2 + [16])
	return $4
}

void .FUNC $89 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12880])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12926])
	
.LABEL $label$2
	*($1 + [8]) = [1]
	$6 = *($3)
	*($1 + [16]) = *($6)
	*(($1 + [24])) = *(($6 + [8]))
	*($1 + [32]) = *(*($3 + [4]))
	$7 = *($1)
	$4 = $4
	$3 = ($4 + [-48])
	$global$0 = $3
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($4 + [-14])
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = ($1 + [8])
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [32])
	CALL $155(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [44]), $2, $3, [34])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

void .FUNC $88 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_32 $13
	$4 = ($global$0 - [144])
	$global$0 = $4
	*($4 + [120]) = $3
	if ( CALL has_auth($3) ){ goto $label$1 }
	CALL eosio_assert([0], [10869])
	
.LABEL $label$1
	$5 = ($0 + [224])
	$7 = *(($0 + [252]))
	$6 = *(($0 + [248]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$5:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$4 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	if ( ((int_32)*($9 + [40]) == (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [12715])
	goto $label$2 
	
.LABEL $label$3
	$9 = [0]
	$8 = CALL db_find_i64(*($5), *(($0 + [232])), (int_64)4292915607302569984, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$6 }
	$9 = CALL $59($5, $8)
	if ( ((int_32)*($9 + [40]) == (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [12715])
	goto $label$2 
	
.LABEL $label$6
	CALL eosio_assert([0], [10940])
	
.LABEL $label$2
	$3 = *($0 + [48])
	$10 = *($2 + [8])
	*(($4 + [64])) = [0]
	*($4 + [56]) = (int_64)0
	$8 = CALL $1([11000])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$22 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$25 }
	*($4 + [56]) = ($8 << [1])
	$7 = (($4 + [56]) | [1])
	if ( $8 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	$6 = (($8 + [16]) & [-16])
	$7 = CALL $9($6)
	*($4 + [56]) = ($6 | [1])
	*($4 + [64]) = $7
	*($4 + [60]) = $8
	
.LABEL $label$24
	CALL memcpy($7, [11000], $8)
	
.LABEL $label$23
	*(($7 + $8)) = [0]
	$8 = *($0 + [36])
	$7 = ($8 & [1])
	$11 = ($0 + [37])
	$8 = CALL $24(($4 + [56]), ( *(($0 + [44])) ? $11 : $7 ), ( *(($0 + [40])) ? uint_32($8 >> [1]) : $7 ))
	$7 = ($8 + [8])
	*((($4 + [72]) + [8])) = *($7)
	*($4 + [72]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	*((($4 + [40]) + [8])) = [0]
	*($4 + [40]) = (int_64)0
	$8 = CALL $1([8813])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$21 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$28 }
	*($4 + [40]) = ($8 << [1])
	$6 = (($4 + [40]) | [1])
	$7 = $6
	if ( $8 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	$6 = (($8 + [16]) & [-16])
	$7 = CALL $9($6)
	*($4 + [40]) = ($6 | [1])
	*($4 + [48]) = $7
	*($4 + [44]) = $8
	$6 = (($4 + [40]) | [1])
	
.LABEL $label$27
	CALL memcpy($7, [8813], $8)
	
.LABEL $label$26
	*(($7 + $8)) = [0]
	$8 = *($4 + [40])
	$7 = ($8 & [1])
	$8 = CALL $24(($4 + [72]), ( *($4 + [48]) ? $6 : $7 ), ( *($4 + [44]) ? uint_32($8 >> [1]) : $7 ))
	$7 = ($8 + [8])
	*((($4 + [88]) + [8])) = *($7)
	*($4 + [88]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	$8 = *(($0 + [36]))
	$7 = ($8 & [1])
	$8 = CALL $24(($4 + [88]), ( *(($0 + [44])) ? $11 : $7 ), ( *(($0 + [40])) ? uint_32($8 >> [1]) : $7 ))
	$7 = ($8 + [8])
	*((($4 + [104]) + [8])) = *($7)
	*($4 + [104]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	*((($4 + [24]) + [8])) = [0]
	*($4 + [24]) = (int_64)0
	$8 = CALL $1([8828])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$20 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$31 }
	*($4 + [24]) = ($8 << [1])
	$6 = (($4 + [24]) | [1])
	$7 = $6
	if ( $8 ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$31
	$6 = (($8 + [16]) & [-16])
	$7 = CALL $9($6)
	*($4 + [24]) = ($6 | [1])
	*($4 + [32]) = $7
	*($4 + [28]) = $8
	$6 = (($4 + [24]) | [1])
	
.LABEL $label$30
	CALL memcpy($7, [8828], $8)
	
.LABEL $label$29
	*(($7 + $8)) = [0]
	$8 = *($4 + [24])
	$7 = ($8 & [1])
	$8 = CALL $24(($4 + [104]), ( *($4 + [32]) ? $6 : $7 ), ( *($4 + [28]) ? uint_32($8 >> [1]) : $7 ))
	$7 = ($8 + [8])
	*((($4 + [128]) + [8])) = *($7)
	*($4 + [128]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	if ( ((int_64)$10 != (int_64)$3) ){ goto $label$33 }
	if ( (*($4 + [128]) & [1]) ){ goto $label$32 }
	goto $label$19 
	
.LABEL $label$33
	CALL eosio_assert([0], ( *($4 + [136]) ? (($4 + [128]) | [1]) : (*($4 + [128]) & [1]) ))
	if ( ((*($4 + [128]) & [1]) == 0) ){ goto $label$19 }
	
.LABEL $label$32
	CALL $11(*($4 + [136]))
	$8 = [1]
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$22
	CALL $17(($4 + [56]))
	
.LABEL $label$21
	CALL $17(($4 + [40]))
	
.LABEL $label$20
	CALL $17(($4 + [24]))
	
.LABEL $label$19
	$8 = [1]
	if ( (*($4 + [24]) & [1]) ){ goto $label$17 }
	
.LABEL $label$18
	if ( (*($4 + [104]) & $8) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL $11(*(($4 + [32])))
	if ( ((*($4 + [104]) & $8) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL $11(*($4 + [112]))
	$8 = [1]
	if ( ((*($4 + [88]) & [1]) == 0) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$8 = [1]
	if ( (*($4 + [88]) & [1]) ){ goto $label$13 }
	
.LABEL $label$14
	if ( (*($4 + [40]) & $8) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL $11(*($4 + [96]))
	if ( ((*($4 + [40]) & $8) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL $11(*(($4 + [48])))
	$8 = [1]
	if ( ((*($4 + [72]) & [1]) == 0) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$8 = [1]
	if ( (*($4 + [72]) & [1]) ){ goto $label$9 }
	
.LABEL $label$10
	if ( ((*($4 + [56]) & $8) == 0) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	CALL $11(*($4 + [80]))
	if ( ((*($4 + [56]) & $8) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $11(*($4 + [64]))
	
.LABEL $label$7
	if ( ((uint_64)((int_64)*($2) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$35 }
	$3 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$36:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$35 }
	$10 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$37 }
	$3 = $10
	$7 = $8
	$8 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$37
	$3 = $10
	
.LOOP $label$38:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$35 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$6 = ($8 + [1])
	$8 = $6
	if ( $7 ){ goto $label$38 }
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$35
	CALL eosio_assert([0], [11041])
	
.LABEL $label$34
	$12 = *(($0 + [48]))
	$3 = (uint_64)$12 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$41:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$40 }
	$10 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$42 }
	$3 = $10
	$7 = $8
	$8 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$41 }
	goto $label$39 
	
.LABEL $label$42
	$3 = $10
	
.LOOP $label$43:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$40 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$6 = ($8 + [1])
	$8 = $6
	if ( $7 ){ goto $label$43 }
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$41 }
	goto $label$39 
	
.LABEL $label$40
	CALL eosio_assert([0], [12473])
	
.LABEL $label$39
	if ( ((int_64)*(($2 + [8])) == (int_64)$12) ){ goto $label$44 }
	CALL eosio_assert([0], [12365])
	
.LABEL $label$44
	$3 = *($2)
	*((($4 + [88]) + [8])) = [0]
	*($4 + [88]) = (int_64)0
	$8 = CALL $1([11084])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$53 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$56 }
	*($4 + [88]) = ($8 << [1])
	$7 = (($4 + [88]) | [1])
	if ( $8 ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$56
	$6 = (($8 + [16]) & [-16])
	$7 = CALL $9($6)
	*($4 + [88]) = ($6 | [1])
	*($4 + [96]) = $7
	*($4 + [92]) = $8
	
.LABEL $label$55
	CALL memcpy($7, [11084], $8)
	
.LABEL $label$54
	*(($7 + $8)) = [0]
	$8 = *(($0 + [36]))
	$7 = ($8 & [1])
	$8 = CALL $24(($4 + [88]), ( *(($0 + [44])) ? $11 : $7 ), ( *(($0 + [40])) ? uint_32($8 >> [1]) : $7 ))
	$7 = ($8 + [8])
	*((($4 + [104]) + [8])) = *($7)
	*($4 + [104]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	*((($4 + [72]) + [8])) = [0]
	*($4 + [72]) = (int_64)0
	$8 = CALL $1([8828])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$52 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$59 }
	*($4 + [72]) = ($8 << [1])
	$6 = (($4 + [72]) | [1])
	$7 = $6
	if ( $8 ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$59
	$6 = (($8 + [16]) & [-16])
	$7 = CALL $9($6)
	*($4 + [72]) = ($6 | [1])
	*($4 + [80]) = $7
	*($4 + [76]) = $8
	$6 = (($4 + [72]) | [1])
	
.LABEL $label$58
	CALL memcpy($7, [8828], $8)
	
.LABEL $label$57
	*(($7 + $8)) = [0]
	$8 = *($4 + [72])
	$7 = ($8 & [1])
	$8 = CALL $24(($4 + [104]), ( *($4 + [80]) ? $6 : $7 ), ( *($4 + [76]) ? uint_32($8 >> [1]) : $7 ))
	$7 = ($8 + [8])
	*((($4 + [128]) + [8])) = *($7)
	*($4 + [128]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	if ( ((int_64)$3 <= (int_64)9999) ){ goto $label$61 }
	if ( (*($4 + [128]) & [1]) ){ goto $label$60 }
	goto $label$51 
	
.LABEL $label$61
	CALL eosio_assert([0], ( *($4 + [136]) ? (($4 + [128]) | [1]) : (*($4 + [128]) & [1]) ))
	if ( ((*($4 + [128]) & [1]) == 0) ){ goto $label$51 }
	
.LABEL $label$60
	CALL $11(*($4 + [136]))
	$8 = [1]
	if ( ((*($4 + [72]) & [1]) == 0) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$53
	CALL $17(($4 + [88]))
	
.LABEL $label$52
	CALL $17(($4 + [72]))
	
.LABEL $label$51
	$8 = [1]
	if ( (*($4 + [72]) & [1]) ){ goto $label$49 }
	
.LABEL $label$50
	if ( (*($4 + [104]) & $8) ){ goto $label$48 }
	goto $label$47 
	
.LABEL $label$49
	CALL $11(*(($4 + [80])))
	if ( ((*($4 + [104]) & $8) == 0) ){ goto $label$47 }
	
.LABEL $label$48
	CALL $11(*($4 + [112]))
	if ( (*($4 + [88]) & [1]) ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$47
	if ( ((*($4 + [88]) & [1]) == 0) ){ goto $label$45 }
	
.LABEL $label$46
	CALL $11(*($4 + [96]))
	
.LABEL $label$45
	if ( ((int_64)*(($2 + [8])) == (int_64)*(($9 + [24]))) ){ goto $label$62 }
	CALL eosio_assert([0], [12365])
	
.LABEL $label$62
	if ( ((int_64)*($2) > (int_64)*($9 + [16])) ){ goto $label$63 }
	CALL eosio_assert([0], [11136])
	
.LABEL $label$63
	$13 = ($0 + [144])
	$7 = *(($0 + [172]))
	$11 = *(($0 + [168]))
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$65 }
	
.LOOP $label$67:
	$8 = ($7 + [-24])
	$6 = *($8)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$66 }
	$7 = $8
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$67 }
	goto $label$65 
	
.LABEL $label$66
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$65 }
	if ( ((int_32)*($6 + [32]) == (int_32)$13) ){ goto $label$64 }
	CALL eosio_assert([0], [12715])
	goto $label$64 
	
.LABEL $label$65
	$6 = [0]
	$8 = CALL db_find_i64(*($13), *(($0 + [152])), (int_64)3607749779137757184, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$64 }
	$6 = CALL $34($13, $8)
	if ( ((int_32)*($6 + [32]) == (int_32)$13) ){ goto $label$64 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$64
	if ( ((int_64)*(($2 + [8])) == (int_64)*(($6 + [16]))) ){ goto $label$68 }
	CALL eosio_assert([0], [12365])
	
.LABEL $label$68
	if ( ((int_64)*($2) <= (int_64)*($6 + [8])) ){ goto $label$69 }
	CALL eosio_assert([0], [11197])
	
.LABEL $label$69
	$3 = *($4 + [120])
	*($4 + [128]) = $2
	*($4 + [132]) = ($4 + [120])
	if ( $9 ){ goto $label$70 }
	CALL eosio_assert([0], [12845])
	
.LABEL $label$70
	CALL $89($5, $9, $3, ($4 + [128]))
	$3 = *($6 + [24])
	*(($4 + [112])) = [0]
	*($4 + [104]) = (int_64)0
	$8 = CALL $1([8988])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$79 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$82 }
	*($4 + [104]) = ($8 << [1])
	$6 = (($4 + [104]) | [1])
	if ( $8 ){ goto $label$81 }
	goto $label$80 
	
.LABEL $label$82
	$7 = (($8 + [16]) & [-16])
	$6 = CALL $9($7)
	*($4 + [104]) = ($7 | [1])
	*($4 + [112]) = $6
	*($4 + [108]) = $8
	
.LABEL $label$81
	CALL memcpy($6, [8988], $8)
	
.LABEL $label$80
	$7 = [0]
	*(($6 + $8)) = [0]
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$86 }
	$6 = *([0] + [12496])
	
.LOOP $label$88:
	*((($4 + [128]) + ($8 = $7))) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$7 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$87 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$88 }
	
.LABEL $label$87
	*(($4 + [96])) = [0]
	*($4 + [88]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$85 }
	*($4 + [88]) = ($7 << [1])
	$6 = (($4 + [88]) | [1])
	goto $label$84 
	
.LABEL $label$86
	*(($4 + [96])) = [0]
	*($4 + [88]) = (int_64)0
	*($4 + [88]) = [0]
	$8 = (($4 + [88]) | [1])
	$7 = $8
	goto $label$83 
	
.LABEL $label$85
	$9 = (($7 + [16]) & [-16])
	$6 = CALL $9($9)
	*($4 + [88]) = ($9 | [1])
	*($4 + [96]) = $6
	*($4 + [92]) = $7
	
.LABEL $label$84
	$9 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$89:
	*(($6 + $8)) = *((($4 + [128]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$89 }
	$7 = ($6 + $7)
	$8 = (($4 + [88]) | [1])
	
.LABEL $label$83
	*($7) = [0]
	$7 = *($4 + [88])
	$6 = ($7 & [1])
	$8 = CALL $24(($4 + [104]), ( *($4 + [96]) ? $8 : $6 ), ( *($4 + [92]) ? uint_32($7 >> [1]) : $6 ))
	$7 = ($8 + [8])
	*((($4 + [128]) + [8])) = *($7)
	*($4 + [128]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	*((($4 + [72]) + [8])) = [0]
	*($4 + [72]) = (int_64)0
	$8 = CALL $1([11256])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$78 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$92 }
	*($4 + [72]) = ($8 << [1])
	$6 = (($4 + [72]) | [1])
	$7 = $6
	if ( $8 ){ goto $label$91 }
	goto $label$90 
	
.LABEL $label$92
	$6 = (($8 + [16]) & [-16])
	$7 = CALL $9($6)
	*($4 + [72]) = ($6 | [1])
	*($4 + [80]) = $7
	*($4 + [76]) = $8
	$6 = (($4 + [72]) | [1])
	
.LABEL $label$91
	CALL memcpy($7, [11256], $8)
	
.LABEL $label$90
	*(($7 + $8)) = [0]
	$8 = *($4 + [72])
	$7 = ($8 & [1])
	$8 = CALL $24(($4 + [128]), ( *($4 + [80]) ? $6 : $7 ), ( *($4 + [76]) ? uint_32($8 >> [1]) : $7 ))
	$7 = ($8 + [8])
	*((($4 + [8]) + [8])) = *($7)
	*($4 + [8]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	CALL $44($0, $3, ($4 + [8]))
	if ( (*($4 + [8]) & [1]) ){ goto $label$94 }
	if ( (*($4 + [72]) & [1]) ){ goto $label$93 }
	goto $label$77 
	
.LABEL $label$94
	CALL $11(*($4 + [16]))
	if ( ((*($4 + [72]) & [1]) == 0) ){ goto $label$77 }
	
.LABEL $label$93
	CALL $11(*(($4 + [80])))
	$8 = [1]
	if ( ((*($4 + [128]) & [1]) == 0) ){ goto $label$76 }
	goto $label$75 
	
.LABEL $label$79
	CALL $17(($4 + [104]))
	
.LABEL $label$78
	CALL $17(($4 + [72]))
	
.LABEL $label$77
	$8 = [1]
	if ( (*($4 + [128]) & [1]) ){ goto $label$75 }
	
.LABEL $label$76
	if ( (*($4 + [88]) & $8) ){ goto $label$74 }
	goto $label$73 
	
.LABEL $label$75
	CALL $11(*($4 + [136]))
	if ( ((*($4 + [88]) & $8) == 0) ){ goto $label$73 }
	
.LABEL $label$74
	CALL $11(*(($4 + [96])))
	if ( ((*($4 + [104]) & [1]) == 0) ){ goto $label$72 }
	goto $label$71 
	
.LABEL $label$73
	if ( (*($4 + [104]) & [1]) ){ goto $label$71 }
	
.LABEL $label$72
	$global$0 = ($4 + [144])
	return 
	
.LABEL $label$71
	CALL $11(*($4 + [112]))
	$global$0 = ($4 + [144])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $87 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $26($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [28])))
	
.LABEL $label$11
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$12 }
	CALL $11(*(($1 + [16])))
	
.LABEL $label$12
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $11($2)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($0)
	$6 = ($1 + [8])
	CALL $20($6, *($4 + [4]))
	$7 = ($1 + [20])
	CALL $20($7, *($4 + [8]))
	*($1 + [32]) = *(*($4 + [12]))
	*($1 + [40]) = *(*($4 + [16]))
	*($1 + [48]) = *(*($4 + [20]))
	$4 = *($1 + [8])
	$8 = ( *(($1 + [12])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($8 + [32])
	$9 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	$8 = *(($1 + [20]))
	$8 = ( *(($1 + [24])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$4 = ($8 + $4)
	$9 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$2:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ($4 <= [513]) ){ goto $label$4 }
	$2 = CALL $3($4)
	goto $label$3 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $4)
	*($3 + [16]) = $3
	*($3 + [28]) = $6
	*($3 + [24]) = $1
	*($3 + [32]) = $7
	*($3 + [36]) = ($1 + [32])
	*($3 + [40]) = ($1 + [40])
	*($3 + [44]) = ($1 + [48])
	CALL $165(($3 + [24]), ($3 + [16]))
	$9 = *($1)
	*($1 + [60]) = CALL db_store_i64(*($5 + [8]), (int_64)-4365857208689229824, *(*($0 + [8])), $9, $2, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	if ( ((uint_64)$9 >= (uint_64)*($5 + [16])) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $4($2)
	if ( (uint_64)($9 <= *($5 + [16])) ){ goto $label$5 }
	
.LABEL $label$6
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [48])
}

void .FUNC $85 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12880])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12926])
	
.LABEL $label$2
	$6 = *($1)
	*($1) = *(*($3))
	$7 = ($1 + [8])
	CALL $20($7, *($3 + [4]))
	$8 = ($1 + [20])
	CALL $20($8, *($3 + [8]))
	*($1 + [32]) = *(*($3 + [12]))
	*($1 + [40]) = *(*($3 + [16]))
	*($1 + [48]) = *(*($3 + [20]))
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [12977])
	
.LABEL $label$3
	$3 = *($7)
	$9 = ( *(($1 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($9 + [32])
	$10 = (CASTING uint_64)(uint_32 $9)
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$4 }
	$9 = *(($1 + [20]))
	$9 = ( *(($1 + [24])) ? uint_32($9 >> [1]) : ($9 & [1]) )
	$3 = ($9 + $3)
	$10 = (CASTING uint_64)(uint_32 $9)
	
.LOOP $label$5:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$5 }
	if ( ($3 <= [513]) ){ goto $label$7 }
	$4 = CALL $3($3)
	goto $label$6 
	
.LABEL $label$7
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$6
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [16]) = $5
	*($5 + [28]) = $7
	*($5 + [32]) = $8
	*($5 + [24]) = $1
	*($5 + [36]) = ($1 + [32])
	*($5 + [40]) = ($1 + [40])
	*($5 + [44]) = ($1 + [48])
	CALL $165(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [60]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$10 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $4($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$8 }
	
.LABEL $label$9
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$8
	$global$0 = ($5 + [48])
}

int_32 .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12766])
	
.LABEL $label$5
	$4 = CALL $3($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $9([72]))) = (int_64)0
	*($5 + [8 align=4]) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($5 + [24 align=4]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [20])
	*($3 + [52]) = ($5 + [32])
	*($3 + [56]) = ($5 + [40])
	*($3 + [60]) = ($5 + [48])
	CALL $164(($3 + [40]), ($3 + [32]))
	*($5 + [60]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $87(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $4($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [28])))
	
.LABEL $label$11
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$12 }
	CALL $11(*(($1 + [16])))
	
.LABEL $label$12
	CALL $11($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $83 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_64 $4, int_64 $5, int_64 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$7 = ($global$0 - [96])
	$global$0 = $7
	*($7 + [40]) = $4
	*($7 + [48]) = $1
	*($7 + [32]) = $5
	*($7 + [24]) = $6
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL eosio_assert([0], [10807])
	
.LABEL $label$1
	$8 = ($0 + [344])
	$10 = *(($0 + [372]))
	$9 = *(($0 + [368]))
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$4 }
	
.LOOP $label$6:
	$11 = ($10 + [-24])
	$12 = *($11)
	if ( ((int_64)*($12) == (int_64)$1) ){ goto $label$5 }
	$10 = $11
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$4 }
	if ( ((int_32)*($12 + [56]) == (int_32)$8) ){ goto $label$3 }
	CALL eosio_assert([0], [12715])
	goto $label$3 
	
.LABEL $label$4
	$11 = CALL db_find_i64(*($8), *(($0 + [352])), (int_64)-4365857208689229824, $1)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$2 }
	$12 = CALL $84($8, $11)
	if ( ((int_32)*($12 + [56]) == (int_32)$8) ){ goto $label$3 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$3
	$1 = *($0)
	*($7 + [4]) = $2
	*($7 + [8]) = $3
	*($7) = ($7 + [48])
	*($7 + [12]) = ($7 + [40])
	*($7 + [16]) = ($7 + [32])
	*($7 + [20]) = ($7 + [24])
	CALL $85($8, $12, $1, $7)
	$global$0 = ($7 + [96])
	return 
	
.LABEL $label$2
	$1 = *($0)
	*($7 + [4]) = $2
	*($7 + [8]) = $3
	*($7) = ($7 + [48])
	*($7 + [12]) = ($7 + [40])
	*($7 + [16]) = ($7 + [32])
	*($7 + [20]) = ($7 + [24])
	*($7 + [88]) = $1
	if ( ((int_64)CALL current_receiver() == (int_64)*(($0 + [344]))) ){ goto $label$7 }
	CALL eosio_assert([0], [12789])
	
.LABEL $label$7
	*($7 + [64]) = $8
	*($7 + [68]) = $7
	*($7 + [72]) = ($7 + [88])
	*(($11 = CALL $9([72]))) = (int_64)0
	*($11 + [8 align=4]) = (int_64)0
	*($11 + [16 align=4]) = (int_64)0
	*($11 + [24 align=4]) = (int_64)0
	*($11 + [32]) = (int_64)0
	*($11 + [40]) = (int_64)0
	*($11 + [48]) = (int_64)0
	*($11 + [56]) = $8
	CALL $86(($7 + [64]), $11)
	*($7 + [80]) = $11
	$1 = *($11)
	*($7 + [64]) = $1
	$12 = *($11 + [60])
	*($7 + [60]) = $12
	$9 = ($0 + [372])
	$10 = *($9)
	if ( ((uint_32)$10 >= (uint_32)*(($0 + [376]))) ){ goto $label$10 }
	*($10 + [8]) = $1
	*($10 + [16]) = $12
	*($7 + [80]) = [0]
	*($10) = $11
	*($9) = ($10 + [24])
	$11 = *($7 + [80])
	*($7 + [80]) = [0]
	if ( ($11 == 0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $87(($0 + [368]), ($7 + [80]), ($7 + [64]), ($7 + [60]))
	$11 = *($7 + [80])
	*($7 + [80]) = [0]
	if ( $11 ){ goto $label$8 }
	
.LABEL $label$9
	$global$0 = ($7 + [96])
	return 
	
.LABEL $label$8
	if ( ((*($11 + [20]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($11 + [28])))
	
.LABEL $label$11
	if ( ((*($11 + [8]) & [1]) == 0) ){ goto $label$12 }
	CALL $11(*(($11 + [16])))
	
.LABEL $label$12
	CALL $11($11)
	$global$0 = ($7 + [96])
}

void .FUNC $82 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $26($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $81 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [32])
	$global$0 = $3
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL eosio_assert([0], [10688])
	
.LABEL $label$1
	if ( CALL is_account($2) ){ goto $label$2 }
	CALL eosio_assert([0], [10754])
	
.LABEL $label$2
	$4 = ($0 + [304])
	$5 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($0 + [304])) ){ goto $label$3 }
	CALL eosio_assert([0], [12789])
	
.LABEL $label$3
	*(($6 = CALL $9([32])) + [16]) = $4
	*($6 + [8]) = $2
	*($6) = $1
	CALL memcpy(($3 + [16]), $6, [8])
	CALL memcpy((($3 + [16]) | [8]), ($6 + [8]), [8])
	$2 = *($6)
	$7 = CALL db_store_i64(*(($0 + [312])), (int_64)-5001621369012617216, $5, $2, ($3 + [16]), [16])
	*($6 + [20]) = $7
	$4 = ($0 + [320])
	if ( (uint_64)($2 <= *($4)) ){ goto $label$4 }
	*($4) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($3 + [8]) = $6
	$2 = *($6)
	*($3 + [16]) = $2
	*($3 + [4]) = $7
	$8 = ($0 + [332])
	$4 = *($8)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [336]))) ){ goto $label$7 }
	*($4 + [8]) = $2
	*($4 + [16]) = $7
	*($3 + [8]) = [0]
	*($4) = $6
	*($8) = ($4 + [24])
	$0 = *($3 + [8])
	*($3 + [8]) = [0]
	if ( $0 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $82(($0 + [328]), ($3 + [8]), ($3 + [16]), ($3 + [4]))
	$0 = *($3 + [8])
	*($3 + [8]) = [0]
	if ( ($0 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $11($0)
	
.LABEL $label$5
	$global$0 = ($3 + [32])
}

void .FUNC $80 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12880])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12926])
	
.LABEL $label$2
	*($1 + [16]) = ((int_64)*($1 + [16]) + (int_64)1)
	*($1 + [24]) = *(*($3))
	$3 = *($1 + [32])
	$6 = ( *(($1 + [36])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($6 + [25])
	$7 = (CASTING uint_64)(uint_32 $6)
	$6 = ($1 + [32])
	$8 = ($1 + [16])
	$9 = *($1)
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	if ( ($3 <= [513]) ){ goto $label$5 }
	$4 = CALL $3($3)
	goto $label$4 
	
.LABEL $label$5
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [16]) = $5
	*($5 + [32]) = $8
	*($5 + [40]) = $6
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [36]) = ($1 + [24])
	CALL $153(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [48]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$9 >= (uint_64)*($0 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $4($4)
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$6
	$global$0 = ($5 + [48])
}

int_32 .FUNC $149 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12533])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [12533])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $148 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12533])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12533])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12533])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $145 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [432])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [424]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12840])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [424]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12840])
	
.LABEL $label$6
	CALL memcpy(($3 + [423]), $6, [1])
	*(($3 + [8])) = $5
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [9])
	*($3 + [24]) = $5
	*($3) = *($3 + [16])
	$2 = CALL $122(($3 + [32]), $0, $1, $3)
	CALL $94($2, *($3 + [424]), *($3 + [423]))
	CALL $124($2)
	$global$0 = ($3 + [432])
}

void .FUNC $144 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [480])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [468]) = $2
	*($3 + [464]) = $2
	*($3 + [472]) = ($2 + $4)
	*($3 + [456]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12840])
	$2 = *($3 + [468])
	
.LABEL $label$5
	CALL memcpy(($3 + [456]), $2, [8])
	*($3 + [468]) = ($2 + [8])
	*($3 + [448]) = [0]
	*($3 + [440]) = (int_64)0
	CALL $127(($3 + [464]), ($3 + [440]))
	$2 = *((($3 + [464]) + [8]))
	*((($3 + [40]) + [8])) = $2
	*((($3 + [8]) + [8])) = $2
	$5 = *($3 + [464])
	*($3 + [8]) = $5
	*($3 + [40]) = $5
	$2 = CALL $122(($3 + [56]), $0, $1, ($3 + [8]))
	$0 = *($3 + [456])
	$4 = CALL $18(($3 + [24]), ($3 + [440]))
	if ( CALL has_auth(*($2)) ){ goto $label$6 }
	CALL eosio_assert([0], [11809])
	
.LABEL $label$6
	CALL require_recipient($0)
	if ( (*($4) & [1]) ){ goto $label$9 }
	CALL $124($2)
	if ( (*($3 + [440]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $11(*($4 + [8]))
	CALL $124($2)
	if ( ((*($3 + [440]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $11(*(($3 + [448])))
	$global$0 = ($3 + [480])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [480])
}

void .FUNC $147 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [416])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	$4 = ($2 + $4)
	*(($3 + [8])) = $4
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = $4
	*($3) = *($3 + [16])
	$2 = CALL $122(($3 + [32]), $0, $1, $3)
	CALL $105($2)
	CALL $124($2)
	$global$0 = ($3 + [416])
}

void .FUNC $146 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [528])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [520]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12840])
	
.LABEL $label$5
	CALL memcpy(($3 + [520]), $2, [8])
	*($3 + [512]) = (int_64)0
	*($3 + [504]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12840])
	
.LABEL $label$6
	CALL memcpy(($3 + [504]), $5, [8])
	*($3 + [104]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [12840])
	
.LABEL $label$7
	CALL memcpy(($3 + [104]), $5, [8])
	*((($3 + [504]) + [8])) = *($3 + [104])
	*($3 + [496]) = (int_64)0
	*($3 + [488]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [12840])
	
.LABEL $label$8
	$4 = ($2 + $4)
	CALL memcpy(($3 + [488]), $5, [8])
	*($3 + [104]) = (int_64)0
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [12840])
	
.LABEL $label$9
	CALL memcpy(($3 + [104]), $5, [8])
	*(($6 = (($3 + [488]) + [8]))) = *($3 + [104])
	*((($3 + [40]) + [8])) = $4
	*($3 + [88]) = $2
	*($3 + [92]) = ($2 + [40])
	*($3 + [96]) = $4
	*($3 + [40]) = *($3 + [88])
	$2 = CALL $122(($3 + [104]), $0, $1, ($3 + [40]))
	$0 = *((($3 + [504]) + [8]))
	*((($3 + [72]) + [8])) = $0
	$1 = *($6)
	*((($3 + [56]) + [8])) = $1
	*((($3 + [24]) + [8])) = $0
	*((($3 + [8]) + [8])) = $1
	$0 = *($3 + [504])
	*($3 + [72]) = $0
	$1 = *($3 + [488])
	*($3 + [56]) = $1
	*($3 + [24]) = $0
	*($3 + [8]) = $1
	CALL $96($2, *($3 + [520]), ($3 + [24]), ($3 + [8]))
	CALL $124($2)
	$global$0 = ($3 + [528])
}

void .FUNC $141 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [528])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [516]) = $2
	*($3 + [512]) = $2
	*($3 + [520]) = ($2 + $4)
	*($3 + [504]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12840])
	$2 = *($3 + [516])
	
.LABEL $label$5
	CALL memcpy(($3 + [504]), $2, [8])
	*($3 + [516]) = ($2 + [8])
	*($3 + [496]) = [0]
	*($3 + [488]) = (int_64)0
	CALL $127(($3 + [512]), ($3 + [488]))
	*($3 + [480]) = [0]
	*($3 + [472]) = (int_64)0
	CALL $127(($3 + [512]), ($3 + [472]))
	*($3 + [464]) = (int_64)0
	$2 = *($3 + [516])
	$4 = (($3 + [512]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12840])
	$2 = *($3 + [516])
	
.LABEL $label$6
	CALL memcpy(($3 + [464]), $2, [8])
	$2 = (*($3 + [516]) + [8])
	*($3 + [516]) = $2
	*($3 + [456]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12840])
	$2 = *($3 + [516])
	
.LABEL $label$7
	CALL memcpy(($3 + [456]), $2, [8])
	$2 = (*($3 + [516]) + [8])
	*($3 + [516]) = $2
	*($3 + [448]) = (int_64)0
	$4 = (($3 + [512]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [12840])
	$2 = *($3 + [516])
	
.LABEL $label$8
	CALL memcpy(($3 + [448]), $2, [8])
	*($3 + [516]) = (*($3 + [516]) + [8])
	$2 = *($4)
	*((($3 + [48]) + [8])) = $2
	*(($3 + [8])) = $2
	$5 = *($3 + [512])
	*($3) = $5
	*($3 + [48]) = $5
	$4 = CALL $18(($3 + [16]), ($3 + [472]))
	$2 = CALL $18(($3 + [32]), ($3 + [488]))
	$6 = CALL $122(($3 + [64]), $0, $1, $3)
	CALL $83($6, *($3 + [504]), $2, $4, *($3 + [464]), *($3 + [456]), *($3 + [448]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$9 }
	CALL $11(*($4 + [8]))
	
.LABEL $label$9
	if ( ((*($2) & [1]) == 0) ){ goto $label$10 }
	CALL $11(*($2 + [8]))
	
.LABEL $label$10
	CALL $124($6)
	if ( (*($3 + [472]) & [1]) ){ goto $label$13 }
	if ( (*($3 + [488]) & [1]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL $11(*(($3 + [480])))
	if ( ((*($3 + [488]) & [1]) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL $11(*(($3 + [496])))
	$global$0 = ($3 + [528])
	return 
	
.LABEL $label$11
	$global$0 = ($3 + [528])
}

void .FUNC $140 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [432])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [424]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12840])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [424]), $2, [8])
	*($3 + [416]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12840])
	
.LABEL $label$6
	CALL memcpy(($3 + [416]), $6, [8])
	*(($3 + [8])) = $5
	*($3 + [16]) = $2
	*($3 + [20]) = ($2 + [16])
	*($3 + [24]) = $5
	*($3) = *($3 + [16])
	$2 = CALL $122(($3 + [32]), $0, $1, $3)
	CALL $81($2, *($3 + [424]), *($3 + [416]))
	CALL $124($2)
	$global$0 = ($3 + [432])
}

void .FUNC $143 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [432])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [424]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12840])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [424]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12840])
	
.LABEL $label$6
	CALL memcpy(($3 + [40]), $6, [1])
	$4 = *($3 + [40])
	*((($3 + [8]) + [8])) = $5
	*($3 + [24]) = $2
	*($3 + [28]) = ($2 + [9])
	*($3 + [32]) = $5
	*($3 + [8]) = *($3 + [24])
	$2 = CALL $122(($3 + [40]), $0, $1, ($3 + [8]))
	CALL $90($2, *($3 + [424]), ((int_32)$4 != (int_32)[0]))
	CALL $124($2)
	$global$0 = ($3 + [432])
}

void .FUNC $142 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [480])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [472]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12840])
	
.LABEL $label$5
	CALL memcpy(($3 + [472]), $2, [8])
	*($3 + [464]) = (int_64)0
	*($3 + [456]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12840])
	
.LABEL $label$6
	CALL memcpy(($3 + [456]), $5, [8])
	*($3 + [64]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [12840])
	
.LABEL $label$7
	$4 = ($2 + $4)
	CALL memcpy(($3 + [64]), $5, [8])
	*(($5 = (($3 + [456]) + [8]))) = *($3 + [64])
	*($3 + [448]) = (int_64)0
	$7 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [12840])
	
.LABEL $label$8
	CALL memcpy(($3 + [448]), $7, [8])
	*((($3 + [16]) + [8])) = $4
	*($3 + [48]) = $2
	*($3 + [52]) = ($2 + [32])
	*($3 + [56]) = $4
	*($3 + [16]) = *($3 + [48])
	$2 = CALL $122(($3 + [64]), $0, $1, ($3 + [16]))
	$0 = *($5)
	*((($3 + [32]) + [8])) = $0
	*(($3 + [8])) = $0
	$0 = *($3 + [456])
	*($3 + [32]) = $0
	*($3) = $0
	CALL $88($2, *($3 + [472]), $3, *($3 + [448]))
	CALL $124($2)
	$global$0 = ($3 + [480])
}

void .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12533])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12533])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12533])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12533])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $154(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $149(CALL $148($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12533])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12533])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12533])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12533])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12533])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($4 + [24]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12533])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = ($4 + [32])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12533])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($4 + [40]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12533])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$0 = ($4 + [48])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $4) > (int_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [12533])
	$4 = *(($1 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $0, [4])
	*(($1 = ($1 + [4]))) = (*($1) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $71 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12880])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12926])
	
.LABEL $label$2
	*($1 + [16]) = ((int_64)*($1 + [16]) + (int_64)1)
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*(($3 + [72])) == (int_64)*(($1 + [32]))) ){ goto $label$3 }
	CALL eosio_assert([0], [13036])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [24]) + (int_64)*($3 + [64]))
	*($1 + [24]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	$3 = [16]
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [13079])
	$3 = [16]
	if ( ((int_64)*(($1 + [24])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [13098])
	$3 = ($1 + $3)
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = ($1 + $3)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [12977])
	
.LABEL $label$4
	$8 = $4
	$4 = ($8 + [-64])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($8 + [-8])
	*($5 + [16]) = $5
	*($5 + [32]) = $3
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [36]) = ($1 + [24])
	*($5 + [40]) = ($1 + [40])
	CALL $157(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [60]), $2, $4, [56])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($5 + [48])
}

void .FUNC $76 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_64 $13
	$4 = ($global$0 - [128])
	$global$0 = $4
	$5 = ($0 + [144])
	$7 = *(($0 + [172]))
	$6 = *(($0 + [168]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	
.LOOP $label$7:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$6 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	if ( ((int_32)*($9 + [32]) == (int_32)$5) ){ goto $label$4 }
	CALL eosio_assert([0], [12715])
	if ( (CALL has_auth(*($9 + [24])) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$9 = [0]
	$8 = CALL db_find_i64(*($5), *(($0 + [152])), (int_64)3607749779137757184, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $34($5, $8)
	if ( ((int_32)*($9 + [32]) == (int_32)$5) ){ goto $label$4 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$4
	if ( CALL has_auth(*($9 + [24])) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [10214])
	if ( CALL has_auth(*([0] + [24])) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10269])
	
.LABEL $label$1
	$10 = *($0 + [48])
	$11 = *($2 + [8])
	*(($4 + [56])) = [0]
	*($4 + [48]) = (int_64)0
	$8 = CALL $1([10327])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$23 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$26 }
	*($4 + [48]) = ($8 << [1])
	$7 = (($4 + [48]) | [1])
	if ( $8 ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	$6 = (($8 + [16]) & [-16])
	$7 = CALL $9($6)
	*($4 + [48]) = ($6 | [1])
	*($4 + [56]) = $7
	*($4 + [52]) = $8
	
.LABEL $label$25
	CALL memcpy($7, [10327], $8)
	
.LABEL $label$24
	*(($7 + $8)) = [0]
	$8 = *($0 + [36])
	$7 = ($8 & [1])
	$12 = ($0 + [37])
	$8 = CALL $24(($4 + [48]), ( *(($0 + [44])) ? $12 : $7 ), ( *(($0 + [40])) ? uint_32($8 >> [1]) : $7 ))
	$7 = ($8 + [8])
	*((($4 + [64]) + [8])) = *($7)
	*($4 + [64]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	*((($4 + [32]) + [8])) = [0]
	*($4 + [32]) = (int_64)0
	$8 = CALL $1([8813])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$22 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$29 }
	*($4 + [32]) = ($8 << [1])
	$6 = (($4 + [32]) | [1])
	$7 = $6
	if ( $8 ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	$6 = (($8 + [16]) & [-16])
	$7 = CALL $9($6)
	*($4 + [32]) = ($6 | [1])
	*($4 + [40]) = $7
	*($4 + [36]) = $8
	$6 = (($4 + [32]) | [1])
	
.LABEL $label$28
	CALL memcpy($7, [8813], $8)
	
.LABEL $label$27
	*(($7 + $8)) = [0]
	$8 = *($4 + [32])
	$7 = ($8 & [1])
	$8 = CALL $24(($4 + [64]), ( *($4 + [40]) ? $6 : $7 ), ( *($4 + [36]) ? uint_32($8 >> [1]) : $7 ))
	$7 = ($8 + [8])
	*((($4 + [80]) + [8])) = *($7)
	*($4 + [80]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	$8 = *(($0 + [36]))
	$7 = ($8 & [1])
	$8 = CALL $24(($4 + [80]), ( *(($0 + [44])) ? $12 : $7 ), ( *(($0 + [40])) ? uint_32($8 >> [1]) : $7 ))
	$7 = ($8 + [8])
	*((($4 + [96]) + [8])) = *($7)
	*($4 + [96]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	*((($4 + [16]) + [8])) = [0]
	*($4 + [16]) = (int_64)0
	$8 = CALL $1([8828])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$21 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$32 }
	*($4 + [16]) = ($8 << [1])
	$6 = (($4 + [16]) | [1])
	$7 = $6
	if ( $8 ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	$6 = (($8 + [16]) & [-16])
	$7 = CALL $9($6)
	*($4 + [16]) = ($6 | [1])
	*($4 + [24]) = $7
	*($4 + [20]) = $8
	$6 = (($4 + [16]) | [1])
	
.LABEL $label$31
	CALL memcpy($7, [8828], $8)
	
.LABEL $label$30
	*(($7 + $8)) = [0]
	$8 = *($4 + [16])
	$7 = ($8 & [1])
	$8 = CALL $24(($4 + [96]), ( *($4 + [24]) ? $6 : $7 ), ( *($4 + [20]) ? uint_32($8 >> [1]) : $7 ))
	$7 = ($8 + [8])
	*((($4 + [112]) + [8])) = *($7)
	*($4 + [112]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	if ( ((int_64)$11 != (int_64)$10) ){ goto $label$34 }
	if ( (*($4 + [112]) & [1]) ){ goto $label$33 }
	goto $label$20 
	
.LABEL $label$34
	CALL eosio_assert([0], ( *($4 + [120]) ? (($4 + [112]) | [1]) : (*($4 + [112]) & [1]) ))
	if ( ((*($4 + [112]) & [1]) == 0) ){ goto $label$20 }
	
.LABEL $label$33
	CALL $11(*($4 + [120]))
	$8 = [1]
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$23
	CALL $17(($4 + [48]))
	
.LABEL $label$22
	CALL $17(($4 + [32]))
	
.LABEL $label$21
	CALL $17(($4 + [16]))
	
.LABEL $label$20
	$8 = [1]
	if ( (*($4 + [16]) & [1]) ){ goto $label$18 }
	
.LABEL $label$19
	if ( (*($4 + [96]) & $8) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $11(*(($4 + [24])))
	if ( ((*($4 + [96]) & $8) == 0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL $11(*($4 + [104]))
	$8 = [1]
	if ( ((*($4 + [80]) & [1]) == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$8 = [1]
	if ( (*($4 + [80]) & [1]) ){ goto $label$14 }
	
.LABEL $label$15
	if ( (*($4 + [32]) & $8) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $11(*($4 + [88]))
	if ( ((*($4 + [32]) & $8) == 0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL $11(*(($4 + [40])))
	$8 = [1]
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$8 = [1]
	if ( (*($4 + [64]) & [1]) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((*($4 + [48]) & $8) == 0) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	CALL $11(*($4 + [72]))
	if ( ((*($4 + [48]) & $8) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $11(*($4 + [56]))
	
.LABEL $label$8
	if ( ((uint_64)((int_64)*($2) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$36 }
	$10 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$37:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$36 }
	$11 = (uint_64)$10 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$10 & (int_64)65280) == (int_64)0) ){ goto $label$38 }
	$10 = $11
	$7 = $8
	$8 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$37 }
	goto $label$35 
	
.LABEL $label$38
	$10 = $11
	
.LOOP $label$39:
	if ( ((int_64)((int_64)$10 & (int_64)65280) != (int_64)0) ){ goto $label$36 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$6 = ($8 + [1])
	$8 = $6
	if ( $7 ){ goto $label$39 }
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$37 }
	goto $label$35 
	
.LABEL $label$36
	CALL eosio_assert([0], [10364])
	
.LABEL $label$35
	$13 = *(($0 + [48]))
	$10 = (uint_64)$13 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$42:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$41 }
	$11 = (uint_64)$10 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$10 & (int_64)65280) == (int_64)0) ){ goto $label$43 }
	$10 = $11
	$7 = $8
	$8 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$42 }
	goto $label$40 
	
.LABEL $label$43
	$10 = $11
	
.LOOP $label$44:
	if ( ((int_64)((int_64)$10 & (int_64)65280) != (int_64)0) ){ goto $label$41 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$6 = ($8 + [1])
	$8 = $6
	if ( $7 ){ goto $label$44 }
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$42 }
	goto $label$40 
	
.LABEL $label$41
	CALL eosio_assert([0], [12473])
	
.LABEL $label$40
	if ( ((int_64)*(($2 + [8])) == (int_64)$13) ){ goto $label$45 }
	CALL eosio_assert([0], [12365])
	
.LABEL $label$45
	$10 = *($2)
	*((($4 + [48]) + [8])) = [0]
	*($4 + [48]) = (int_64)0
	$8 = CALL $1([10403])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$65 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$68 }
	*($4 + [48]) = ($8 << [1])
	$7 = (($4 + [48]) | [1])
	if ( $8 ){ goto $label$67 }
	goto $label$66 
	
.LABEL $label$68
	$6 = (($8 + [16]) & [-16])
	$7 = CALL $9($6)
	*($4 + [48]) = ($6 | [1])
	*($4 + [56]) = $7
	*($4 + [52]) = $8
	
.LABEL $label$67
	CALL memcpy($7, [10403], $8)
	
.LABEL $label$66
	*(($7 + $8)) = [0]
	$8 = *(($0 + [36]))
	$7 = ($8 & [1])
	$8 = CALL $24(($4 + [48]), ( *(($0 + [44])) ? $12 : $7 ), ( *(($0 + [40])) ? uint_32($8 >> [1]) : $7 ))
	$7 = ($8 + [8])
	*((($4 + [64]) + [8])) = *($7)
	*($4 + [64]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	*((($4 + [32]) + [8])) = [0]
	*($4 + [32]) = (int_64)0
	$8 = CALL $1([8910])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$64 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$71 }
	*($4 + [32]) = ($8 << [1])
	$6 = (($4 + [32]) | [1])
	$7 = $6
	if ( $8 ){ goto $label$70 }
	goto $label$69 
	
.LABEL $label$71
	$6 = (($8 + [16]) & [-16])
	$7 = CALL $9($6)
	*($4 + [32]) = ($6 | [1])
	*($4 + [40]) = $7
	*($4 + [36]) = $8
	$6 = (($4 + [32]) | [1])
	
.LABEL $label$70
	CALL memcpy($7, [8910], $8)
	
.LABEL $label$69
	*(($7 + $8)) = [0]
	$8 = *($4 + [32])
	$7 = ($8 & [1])
	$8 = CALL $24(($4 + [64]), ( *($4 + [40]) ? $6 : $7 ), ( *($4 + [36]) ? uint_32($8 >> [1]) : $7 ))
	$7 = ($8 + [8])
	*((($4 + [80]) + [8])) = *($7)
	*($4 + [80]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	$8 = *(($0 + [36]))
	$7 = ($8 & [1])
	$8 = CALL $24(($4 + [80]), ( *(($0 + [44])) ? $12 : $7 ), ( *(($0 + [40])) ? uint_32($8 >> [1]) : $7 ))
	$7 = ($8 + [8])
	*((($4 + [96]) + [8])) = *($7)
	*($4 + [96]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	*((($4 + [16]) + [8])) = [0]
	*($4 + [16]) = (int_64)0
	$8 = CALL $1([8828])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$63 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$74 }
	*($4 + [16]) = ($8 << [1])
	$6 = (($4 + [16]) | [1])
	$7 = $6
	if ( $8 ){ goto $label$73 }
	goto $label$72 
	
.LABEL $label$74
	$6 = (($8 + [16]) & [-16])
	$7 = CALL $9($6)
	*($4 + [16]) = ($6 | [1])
	*($4 + [24]) = $7
	*($4 + [20]) = $8
	$6 = (($4 + [16]) | [1])
	
.LABEL $label$73
	CALL memcpy($7, [8828], $8)
	
.LABEL $label$72
	*(($7 + $8)) = [0]
	$8 = *($4 + [16])
	$7 = ($8 & [1])
	$8 = CALL $24(($4 + [96]), ( *($4 + [24]) ? $6 : $7 ), ( *($4 + [20]) ? uint_32($8 >> [1]) : $7 ))
	$7 = ($8 + [8])
	*((($4 + [112]) + [8])) = *($7)
	*($4 + [112]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	if ( ((int_64)$10 <= (int_64)9999) ){ goto $label$76 }
	if ( (*($4 + [112]) & [1]) ){ goto $label$75 }
	goto $label$62 
	
.LABEL $label$76
	CALL eosio_assert([0], ( *($4 + [120]) ? (($4 + [112]) | [1]) : (*($4 + [112]) & [1]) ))
	if ( ((*($4 + [112]) & [1]) == 0) ){ goto $label$62 }
	
.LABEL $label$75
	CALL $11(*($4 + [120]))
	$8 = [1]
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$61 }
	goto $label$60 
	
.LABEL $label$65
	CALL $17(($4 + [48]))
	
.LABEL $label$64
	CALL $17(($4 + [32]))
	
.LABEL $label$63
	CALL $17(($4 + [16]))
	
.LABEL $label$62
	$8 = [1]
	if ( (*($4 + [16]) & [1]) ){ goto $label$60 }
	
.LABEL $label$61
	if ( (*($4 + [96]) & $8) ){ goto $label$59 }
	goto $label$58 
	
.LABEL $label$60
	CALL $11(*(($4 + [24])))
	if ( ((*($4 + [96]) & $8) == 0) ){ goto $label$58 }
	
.LABEL $label$59
	CALL $11(*($4 + [104]))
	$8 = [1]
	if ( ((*($4 + [80]) & [1]) == 0) ){ goto $label$57 }
	goto $label$56 
	
.LABEL $label$58
	$8 = [1]
	if ( (*($4 + [80]) & [1]) ){ goto $label$56 }
	
.LABEL $label$57
	if ( (*($4 + [32]) & $8) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$56
	CALL $11(*($4 + [88]))
	if ( ((*($4 + [32]) & $8) == 0) ){ goto $label$54 }
	
.LABEL $label$55
	CALL $11(*(($4 + [40])))
	$8 = [1]
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$53 }
	goto $label$52 
	
.LABEL $label$54
	$8 = [1]
	if ( (*($4 + [64]) & [1]) ){ goto $label$52 }
	
.LABEL $label$53
	if ( (*($4 + [48]) & $8) ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$52
	CALL $11(*($4 + [72]))
	if ( ((*($4 + [48]) & $8) == 0) ){ goto $label$50 }
	
.LABEL $label$51
	CALL $11(*($4 + [56]))
	$8 = [1]
	$7 = *($3)
	if ( (($7 & [1]) == 0) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$50
	$8 = [1]
	$7 = *($3)
	if ( ($7 & [1]) ){ goto $label$48 }
	
.LABEL $label$49
	if ( ((uint_32)uint_32($7 >> $8) >= (uint_32)[101]) ){ goto $label$47 }
	goto $label$46 
	
.LABEL $label$48
	if ( (*($3 + [4]) <= [101]) ){ goto $label$46 }
	
.LABEL $label$47
	CALL eosio_assert([0], [8924])
	
.LABEL $label$46
	$10 = *(($9 + [24]))
	*($4 + [112]) = $2
	if ( $9 ){ goto $label$77 }
	CALL eosio_assert([0], [12845])
	
.LABEL $label$77
	CALL $77($5, $9, $10, ($4 + [112]))
	$5 = ($0 + [184])
	$7 = *(($0 + [212]))
	$2 = *(($0 + [208]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$80 }
	
.LOOP $label$82:
	$8 = ($7 + [-24])
	$6 = *($8)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$81 }
	$7 = $8
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$82 }
	goto $label$80 
	
.LABEL $label$81
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$80 }
	if ( ((int_32)*($6 + [44]) == (int_32)$5) ){ goto $label$83 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$83
	$10 = *(($9 + [24]))
	*($4 + [112]) = $3
	if ( $6 ){ goto $label$78 }
	goto $label$79 
	
.LABEL $label$80
	$8 = CALL db_find_i64(*($5), *(($0 + [192])), (int_64)6301507159775510528, $1)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$84 }
	$6 = CALL $62($5, $8)
	if ( ((int_32)*($6 + [44]) == (int_32)$5) ){ goto $label$85 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$85
	$10 = *(($9 + [24]))
	*($4 + [112]) = $3
	goto $label$78 
	
.LABEL $label$84
	$10 = *(($9 + [24]))
	*($4 + [112]) = $3
	
.LABEL $label$79
	$6 = [0]
	CALL eosio_assert([0], [12845])
	
.LABEL $label$78
	CALL $78($5, $6, $10, ($4 + [112]))
	$10 = *(($9 + [24]))
	*(($4 + [104])) = [0]
	*($4 + [96]) = (int_64)0
	$8 = CALL $1([10448])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$89 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$92 }
	*($4 + [96]) = ($8 << [1])
	$6 = (($4 + [96]) | [1])
	if ( $8 ){ goto $label$91 }
	goto $label$90 
	
.LABEL $label$92
	$7 = (($8 + [16]) & [-16])
	$6 = CALL $9($7)
	*($4 + [96]) = ($7 | [1])
	*($4 + [104]) = $6
	*($4 + [100]) = $8
	
.LABEL $label$91
	CALL memcpy($6, [10448], $8)
	
.LABEL $label$90
	$7 = [0]
	*(($6 + $8)) = [0]
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$96 }
	$6 = *([0] + [12496])
	
.LOOP $label$98:
	*((($4 + [112]) + ($8 = $7))) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$7 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$97 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$98 }
	
.LABEL $label$97
	*(($4 + [88])) = [0]
	*($4 + [80]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$95 }
	*($4 + [80]) = ($7 << [1])
	$6 = (($4 + [80]) | [1])
	goto $label$94 
	
.LABEL $label$96
	*(($4 + [88])) = [0]
	*($4 + [80]) = (int_64)0
	*($4 + [80]) = [0]
	$8 = (($4 + [80]) | [1])
	$7 = $8
	goto $label$93 
	
.LABEL $label$95
	$9 = (($7 + [16]) & [-16])
	$6 = CALL $9($9)
	*($4 + [80]) = ($9 | [1])
	*($4 + [88]) = $6
	*($4 + [84]) = $7
	
.LABEL $label$94
	$9 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$99:
	*(($6 + $8)) = *((($4 + [112]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$99 }
	$7 = ($6 + $7)
	$8 = (($4 + [80]) | [1])
	
.LABEL $label$93
	*($7) = [0]
	$7 = *($4 + [80])
	$6 = ($7 & [1])
	$8 = CALL $24(($4 + [96]), ( *($4 + [88]) ? $8 : $6 ), ( *($4 + [84]) ? uint_32($7 >> [1]) : $6 ))
	$7 = ($8 + [8])
	*(($4 + [8])) = *($7)
	*($4) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	CALL $44($0, $10, $4)
	if ( (*($4) & [1]) ){ goto $label$101 }
	if ( (*($4 + [80]) & [1]) ){ goto $label$100 }
	goto $label$88 
	
.LABEL $label$101
	CALL $11(*($4 + [8]))
	if ( ((*($4 + [80]) & [1]) == 0) ){ goto $label$88 }
	
.LABEL $label$100
	CALL $11(*(($4 + [88])))
	if ( ((*($4 + [96]) & [1]) == 0) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$89
	CALL $17(($4 + [96]))
	
.LABEL $label$88
	if ( (*($4 + [96]) & [1]) ){ goto $label$86 }
	
.LABEL $label$87
	$global$0 = ($4 + [128])
	return 
	
.LABEL $label$86
	CALL $11(*($4 + [104]))
	$global$0 = ($4 + [128])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $77 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12880])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12926])
	
.LABEL $label$2
	$3 = *($3)
	*($1 + [8]) = *($3)
	*(($1 + [16])) = *(($3 + [8]))
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = $3
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = ($1 + [8])
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [24])
	CALL $36(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [36]), $2, $4, [32])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

void .FUNC $74 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$4 = ($global$0 - [208])
	$global$0 = $4
	$5 = ($0 + [144])
	$7 = *(($0 + [172]))
	$6 = *(($0 + [168]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	
.LOOP $label$7:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$6 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	if ( ((int_32)*($9 + [32]) == (int_32)$5) ){ goto $label$4 }
	CALL eosio_assert([0], [12715])
	if ( CALL has_auth(*($9 + [24])) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	$9 = [0]
	$8 = CALL db_find_i64(*($5), *(($0 + [152])), (int_64)3607749779137757184, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $34($5, $8)
	if ( ((int_32)*($9 + [32]) == (int_32)$5) ){ goto $label$4 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$4
	if ( CALL has_auth(*($9 + [24])) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [10028])
	if ( CALL has_auth(*([0] + [24])) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10083])
	
.LABEL $label$1
	$7 = ($9 + [24])
	$10 = *($7)
	*($4 + [176]) = [8975]
	*($4 + [180]) = CALL $1([8975])
	*($4 + [24]) = *($4 + [176])
	$6 = CALL $33(($4 + [184]), ($4 + [24]))
	*($4 + [160]) = [8626]
	*($4 + [164]) = CALL $1([8626])
	*($4 + [16]) = *($4 + [160])
	$11 = CALL $33(($4 + [168]), ($4 + [16]))
	$8 = CALL $18(($4 + [144]), $3)
	CALL $35($0, $1, $10, *($6), *($11), $8)
	if ( ((*($8) & [1]) == 0) ){ goto $label$8 }
	CALL $11(*($8 + [8]))
	
.LABEL $label$8
	$10 = *($7)
	*($4 + [128]) = [8626]
	*($4 + [132]) = CALL $1([8626])
	*($4 + [8]) = *($4 + [128])
	$7 = CALL $33(($4 + [136]), ($4 + [8]))
	*($4 + [112]) = [8987]
	*($4 + [116]) = CALL $1([8987])
	*($4) = *($4 + [112])
	$6 = CALL $33(($4 + [120]), $4)
	$8 = CALL $18(($4 + [96]), $2)
	CALL $35($0, $1, $10, *($7), *($6), $8)
	if ( ((*($8) & [1]) == 0) ){ goto $label$9 }
	CALL $11(*($8 + [8]))
	
.LABEL $label$9
	if ( $9 ){ goto $label$10 }
	CALL eosio_assert([0], [13116])
	CALL eosio_assert([0], [13150])
	
.LABEL $label$10
	$8 = CALL db_next_i64(*($9 + [36]), ($4 + [192]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$11 }
	CALL $34($5, $8)
	
.LABEL $label$11
	CALL $61($5, $9)
	$2 = ($0 + [184])
	$7 = *(($0 + [212]))
	$5 = *(($0 + [208]))
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$14 }
	
.LOOP $label$16:
	$8 = ($7 + [-24])
	$6 = *($8)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$15 }
	$7 = $8
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$14 }
	if ( ((int_32)*($6 + [44]) == (int_32)$2) ){ goto $label$17 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$17
	if ( $6 ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$14
	$6 = [0]
	$8 = CALL db_find_i64(*($2), *(($0 + [192])), (int_64)6301507159775510528, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$13 }
	$6 = CALL $62($2, $8)
	if ( ((int_32)*($6 + [44]) == (int_32)$2) ){ goto $label$12 }
	CALL eosio_assert([0], [12715])
	goto $label$12 
	
.LABEL $label$13
	CALL eosio_assert([0], [13116])
	CALL eosio_assert([0], [13150])
	
.LABEL $label$12
	$8 = CALL db_next_i64(*($6 + [48]), ($4 + [192]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$18 }
	CALL $62($2, $8)
	
.LABEL $label$18
	CALL $63($2, $6)
	$2 = ($0 + [224])
	$7 = *(($0 + [252]))
	$5 = *(($0 + [248]))
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$21 }
	
.LOOP $label$23:
	$8 = ($7 + [-24])
	$6 = *($8)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$22 }
	$7 = $8
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$21 }
	if ( ((int_32)*($6 + [40]) == (int_32)$2) ){ goto $label$24 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$24
	if ( $6 ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$21
	$6 = [0]
	$8 = CALL db_find_i64(*($2), *(($0 + [232])), (int_64)4292915607302569984, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$20 }
	$6 = CALL $59($2, $8)
	if ( ((int_32)*($6 + [40]) == (int_32)$2) ){ goto $label$19 }
	CALL eosio_assert([0], [12715])
	goto $label$19 
	
.LABEL $label$20
	CALL eosio_assert([0], [13116])
	CALL eosio_assert([0], [13150])
	
.LABEL $label$19
	$8 = CALL db_next_i64(*($6 + [44]), ($4 + [192]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$25 }
	CALL $59($2, $8)
	
.LABEL $label$25
	CALL $64($2, $6)
	$2 = ($0 + [264])
	$7 = *(($0 + [292]))
	$5 = *(($0 + [288]))
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$29 }
	
.LOOP $label$31:
	$8 = ($7 + [-24])
	$6 = *($8)
	if ( (int_64)(*($6) == 0) ){ goto $label$30 }
	$7 = $8
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$30
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$29 }
	if ( ((int_32)*($6 + [56]) == (int_32)$2) ){ goto $label$28 }
	CALL eosio_assert([0], [12715])
	goto $label$28 
	
.LABEL $label$29
	$6 = [0]
	$8 = CALL db_find_i64(*($2), *(($0 + [272])), (int_64)-4157495357179166720, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$27 }
	$6 = CALL $42($2, $8)
	if ( ((int_32)*($6 + [56]) == (int_32)$2) ){ goto $label$28 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$28
	$10 = *($0)
	goto $label$26 
	
.LABEL $label$27
	$10 = *($0)
	CALL eosio_assert([0], [12845])
	
.LABEL $label$26
	CALL $75($2, $6, $10)
	$10 = *(($9 + [24]))
	*(($4 + [72])) = [0]
	*($4 + [64]) = (int_64)0
	$8 = CALL $1([10143])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$40 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$43 }
	*($4 + [64]) = ($8 << [1])
	$9 = (($4 + [64]) | [1])
	if ( $8 ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$43
	$7 = (($8 + [16]) & [-16])
	$9 = CALL $9($7)
	*($4 + [64]) = ($7 | [1])
	*($4 + [72]) = $9
	*($4 + [68]) = $8
	
.LABEL $label$42
	CALL memcpy($9, [10143], $8)
	
.LABEL $label$41
	$7 = [0]
	*(($9 + $8)) = [0]
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$47 }
	$9 = *([0] + [12496])
	
.LOOP $label$49:
	*((($4 + [192]) + ($8 = $7))) = *(($9 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$7 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$48 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$49 }
	
.LABEL $label$48
	*(($4 + [56])) = [0]
	*($4 + [48]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$46 }
	*($4 + [48]) = ($7 << [1])
	$9 = (($4 + [48]) | [1])
	goto $label$45 
	
.LABEL $label$47
	*(($4 + [56])) = [0]
	*($4 + [48]) = (int_64)0
	*($4 + [48]) = [0]
	$8 = (($4 + [48]) | [1])
	$7 = $8
	goto $label$44 
	
.LABEL $label$46
	$6 = (($7 + [16]) & [-16])
	$9 = CALL $9($6)
	*($4 + [48]) = ($6 | [1])
	*($4 + [56]) = $9
	*($4 + [52]) = $7
	
.LABEL $label$45
	$6 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$50:
	*(($9 + $8)) = *((($4 + [192]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$50 }
	$7 = ($9 + $7)
	$8 = (($4 + [48]) | [1])
	
.LABEL $label$44
	*($7) = [0]
	$7 = *($4 + [48])
	$9 = ($7 & [1])
	$8 = CALL $24(($4 + [64]), ( *($4 + [56]) ? $8 : $9 ), ( *($4 + [52]) ? uint_32($7 >> [1]) : $9 ))
	$7 = ($8 + [8])
	*((($4 + [192]) + [8])) = *($7)
	*($4 + [192]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	*((($4 + [32]) + [8])) = [0]
	*($4 + [32]) = (int_64)0
	$8 = CALL $1([10007])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$39 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$53 }
	*($4 + [32]) = ($8 << [1])
	$9 = (($4 + [32]) | [1])
	$7 = $9
	if ( $8 ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$53
	$9 = (($8 + [16]) & [-16])
	$7 = CALL $9($9)
	*($4 + [32]) = ($9 | [1])
	*($4 + [40]) = $7
	*($4 + [36]) = $8
	$9 = (($4 + [32]) | [1])
	
.LABEL $label$52
	CALL memcpy($7, [10007], $8)
	
.LABEL $label$51
	*(($7 + $8)) = [0]
	$8 = *($4 + [32])
	$7 = ($8 & [1])
	$8 = CALL $24(($4 + [192]), ( *($4 + [40]) ? $9 : $7 ), ( *($4 + [36]) ? uint_32($8 >> [1]) : $7 ))
	$7 = ($8 + [8])
	*((($4 + [80]) + [8])) = *($7)
	*($4 + [80]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	CALL $44($0, $10, ($4 + [80]))
	if ( (*($4 + [80]) & [1]) ){ goto $label$55 }
	if ( (*($4 + [32]) & [1]) ){ goto $label$54 }
	goto $label$38 
	
.LABEL $label$55
	CALL $11(*($4 + [88]))
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$38 }
	
.LABEL $label$54
	CALL $11(*(($4 + [40])))
	$8 = [1]
	if ( ((*($4 + [192]) & [1]) == 0) ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$40
	CALL $17(($4 + [64]))
	
.LABEL $label$39
	CALL $17(($4 + [32]))
	
.LABEL $label$38
	$8 = [1]
	if ( (*($4 + [192]) & [1]) ){ goto $label$36 }
	
.LABEL $label$37
	if ( (*($4 + [48]) & $8) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$36
	CALL $11(*($4 + [200]))
	if ( ((*($4 + [48]) & $8) == 0) ){ goto $label$34 }
	
.LABEL $label$35
	CALL $11(*(($4 + [56])))
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$34
	if ( (*($4 + [64]) & [1]) ){ goto $label$32 }
	
.LABEL $label$33
	$global$0 = ($4 + [208])
	return 
	
.LABEL $label$32
	CALL $11(*($4 + [72]))
	$global$0 = ($4 + [208])
	(unreachable)
	(unreachable)
}

void .FUNC $39 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $26($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [32]) & [1]) == 0) ){ goto $label$11 }
	CALL $11(*(($1 + [40])))
	
.LABEL $label$11
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $11($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12533])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12533])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12533])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12533])
	$0 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $37 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $9(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $26($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $11($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $11($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $78 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12880])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12926])
	
.LABEL $label$2
	$6 = *($1)
	$7 = ($1 + [32])
	CALL $20($7, *($3))
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [12977])
	
.LABEL $label$3
	$3 = *($7)
	$8 = ( *(($1 + [36])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($8 + [25])
	$9 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$6 }
	$4 = CALL $3($3)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [16]) = $5
	*($5 + [40]) = $7
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [24])
	CALL $153(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [48]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$9 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $4($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	
.LABEL $label$8
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$7
	$global$0 = ($5 + [48])
}

void .FUNC $79 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = $2
	if ( CALL has_auth($2) ){ goto $label$1 }
	CALL eosio_assert([0], [10517])
	
.LABEL $label$1
	$4 = ($0 + [184])
	$6 = *(($0 + [212]))
	$5 = *(($0 + [208]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$6 }
	
.LOOP $label$8:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$7 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$6 }
	if ( ((int_32)*($8 + [44]) == (int_32)$4) ){ goto $label$9 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$9
	if ( $8 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$7 = CALL db_find_i64(*($4), *(($0 + [192])), (int_64)6301507159775510528, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$8 = CALL $62($4, $7)
	if ( ((int_32)*($8 + [44]) == (int_32)$4) ){ goto $label$5 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$5
	if ( ((int_64)*($8 + [24]) != (int_64)$2) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	CALL eosio_assert([0], [10581])
	if ( ((int_64)*([0] + [24]) != (int_64)$2) ){ goto $label$2 }
	
.LABEL $label$3
	CALL eosio_assert([0], [10635])
	
.LABEL $label$2
	*($3) = ($3 + [8])
	if ( $8 ){ goto $label$10 }
	CALL eosio_assert([0], [12845])
	
.LABEL $label$10
	CALL $80($4, $8, $2, $3)
	$global$0 = ($3 + [16])
}

void .FUNC $32 (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$5 = ($global$0 - [304])
	$global$0 = $5
	*($5 + [232]) = $1
	*($5 + [216]) = [8626]
	*($5 + [220]) = CALL $1([8626])
	*($5 + [32]) = *($5 + [216])
	CALL require_auth2($1, *(CALL $33(($5 + [224]), ($5 + [32]))))
	$6 = ($0 + [144])
	$8 = *(($0 + [172]))
	$7 = *(($0 + [168]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LOOP $label$5:
	$9 = ($8 + [-24])
	$10 = *($9)
	if ( ((int_64)*($10) == (int_64)$1) ){ goto $label$4 }
	$8 = $9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	if ( ((int_32)*($10 + [32]) == (int_32)$6) ){ goto $label$2 }
	CALL eosio_assert([0], [12715])
	goto $label$2 
	
.LABEL $label$3
	$9 = CALL db_find_i64(*($6), *(($0 + [152])), (int_64)3607749779137757184, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$1 }
	if ( ((int_32)*(CALL $34($6, $9) + [32]) == (int_32)$6) ){ goto $label$2 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$2
	CALL eosio_assert([0], [8632])
	
.LABEL $label$1
	if ( CALL is_account($3) ){ goto $label$6 }
	CALL eosio_assert([0], [8666])
	
.LABEL $label$6
	if ( ((int_64)*($5 + [232]) != (int_64)$3) ){ goto $label$7 }
	CALL eosio_assert([0], [8714])
	
.LABEL $label$7
	$1 = *($0 + [48])
	$11 = *($2 + [8])
	*(($5 + [192])) = [0]
	*($5 + [184]) = (int_64)0
	$9 = CALL $1([8778])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$23 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$26 }
	*($5 + [184]) = ($9 << [1])
	$8 = (($5 + [184]) | [1])
	if ( $9 ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	$7 = (($9 + [16]) & [-16])
	$8 = CALL $9($7)
	*($5 + [184]) = ($7 | [1])
	*($5 + [192]) = $8
	*($5 + [188]) = $9
	
.LABEL $label$25
	CALL memcpy($8, [8778], $9)
	
.LABEL $label$24
	*(($8 + $9)) = [0]
	$9 = *($0 + [36])
	$8 = ($9 & [1])
	$10 = ($0 + [37])
	$9 = CALL $24(($5 + [184]), ( *(($0 + [44])) ? $10 : $8 ), ( *(($0 + [40])) ? uint_32($9 >> [1]) : $8 ))
	$8 = ($9 + [8])
	*((($5 + [200]) + [8])) = *($8)
	*($5 + [200]) = *($9)
	*($9) = (int_64)0
	*($8) = [0]
	*((($5 + [168]) + [8])) = [0]
	*($5 + [168]) = (int_64)0
	$9 = CALL $1([8813])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$22 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$29 }
	*($5 + [168]) = ($9 << [1])
	$7 = (($5 + [168]) | [1])
	$8 = $7
	if ( $9 ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	$7 = (($9 + [16]) & [-16])
	$8 = CALL $9($7)
	*($5 + [168]) = ($7 | [1])
	*($5 + [176]) = $8
	*($5 + [172]) = $9
	$7 = (($5 + [168]) | [1])
	
.LABEL $label$28
	CALL memcpy($8, [8813], $9)
	
.LABEL $label$27
	*(($8 + $9)) = [0]
	$9 = *($5 + [168])
	$8 = ($9 & [1])
	$9 = CALL $24(($5 + [200]), ( *($5 + [176]) ? $7 : $8 ), ( *($5 + [172]) ? uint_32($9 >> [1]) : $8 ))
	$8 = ($9 + [8])
	*((($5 + [272]) + [8])) = *($8)
	*($5 + [272]) = *($9)
	*($9) = (int_64)0
	*($8) = [0]
	$9 = *(($0 + [36]))
	$8 = ($9 & [1])
	$9 = CALL $24(($5 + [272]), ( *(($0 + [44])) ? $10 : $8 ), ( *(($0 + [40])) ? uint_32($9 >> [1]) : $8 ))
	$8 = ($9 + [8])
	*((($5 + [288]) + [8])) = *($8)
	*($5 + [288]) = *($9)
	*($9) = (int_64)0
	*($8) = [0]
	*((($5 + [152]) + [8])) = [0]
	*($5 + [152]) = (int_64)0
	$9 = CALL $1([8828])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$21 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$32 }
	*($5 + [152]) = ($9 << [1])
	$7 = (($5 + [152]) | [1])
	$8 = $7
	if ( $9 ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	$7 = (($9 + [16]) & [-16])
	$8 = CALL $9($7)
	*($5 + [152]) = ($7 | [1])
	*($5 + [160]) = $8
	*($5 + [156]) = $9
	$7 = (($5 + [152]) | [1])
	
.LABEL $label$31
	CALL memcpy($8, [8828], $9)
	
.LABEL $label$30
	*(($8 + $9)) = [0]
	$9 = *($5 + [152])
	$8 = ($9 & [1])
	$9 = CALL $24(($5 + [288]), ( *($5 + [160]) ? $7 : $8 ), ( *($5 + [156]) ? uint_32($9 >> [1]) : $8 ))
	$8 = ($9 + [8])
	*((($5 + [240]) + [8])) = *($8)
	*($5 + [240]) = *($9)
	*($9) = (int_64)0
	*($8) = [0]
	if ( ((int_64)$11 != (int_64)$1) ){ goto $label$34 }
	if ( (*($5 + [240]) & [1]) ){ goto $label$33 }
	goto $label$20 
	
.LABEL $label$34
	CALL eosio_assert([0], ( *($5 + [248]) ? (($5 + [240]) | [1]) : (*($5 + [240]) & [1]) ))
	if ( ((*($5 + [240]) & [1]) == 0) ){ goto $label$20 }
	
.LABEL $label$33
	CALL $11(*($5 + [248]))
	$9 = [1]
	if ( ((*($5 + [152]) & [1]) == 0) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$23
	CALL $17(($5 + [184]))
	
.LABEL $label$22
	CALL $17(($5 + [168]))
	
.LABEL $label$21
	CALL $17(($5 + [152]))
	
.LABEL $label$20
	$9 = [1]
	if ( (*($5 + [152]) & [1]) ){ goto $label$18 }
	
.LABEL $label$19
	if ( (*($5 + [288]) & $9) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $11(*(($5 + [160])))
	if ( ((*($5 + [288]) & $9) == 0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL $11(*($5 + [296]))
	$9 = [1]
	if ( ((*($5 + [272]) & [1]) == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$9 = [1]
	if ( (*($5 + [272]) & [1]) ){ goto $label$14 }
	
.LABEL $label$15
	if ( (*($5 + [168]) & $9) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $11(*($5 + [280]))
	if ( ((*($5 + [168]) & $9) == 0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL $11(*(($5 + [176])))
	$9 = [1]
	if ( ((*($5 + [200]) & [1]) == 0) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$9 = [1]
	if ( (*($5 + [200]) & [1]) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((*($5 + [184]) & $9) == 0) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	CALL $11(*($5 + [208]))
	if ( ((*($5 + [184]) & $9) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $11(*($5 + [192]))
	
.LABEL $label$8
	$12 = *($2)
	if ( ((uint_64)((int_64)$12 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$36 }
	$1 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$37:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$36 }
	$11 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$38 }
	$1 = $11
	$8 = $9
	$9 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$37 }
	goto $label$35 
	
.LABEL $label$38
	$1 = $11
	
.LOOP $label$39:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$36 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$8 = ((int_32)$9 < (int_32)[6])
	$7 = ($9 + [1])
	$9 = $7
	if ( $8 ){ goto $label$39 }
	$9 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$37 }
	goto $label$35 
	
.LABEL $label$36
	CALL eosio_assert([0], [8830])
	
.LABEL $label$35
	$13 = *(($0 + [48]))
	$1 = (uint_64)$13 >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$42:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$41 }
	$11 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$43 }
	$1 = $11
	$8 = $9
	$9 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$42 }
	goto $label$40 
	
.LABEL $label$43
	$1 = $11
	
.LOOP $label$44:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$41 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$8 = ((int_32)$9 < (int_32)[6])
	$7 = ($9 + [1])
	$9 = $7
	if ( $8 ){ goto $label$44 }
	$9 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$42 }
	goto $label$40 
	
.LABEL $label$41
	CALL eosio_assert([0], [12473])
	
.LABEL $label$40
	if ( ((int_64)*(($2 + [8])) == (int_64)$13) ){ goto $label$45 }
	CALL eosio_assert([0], [12365])
	
.LABEL $label$45
	*((($5 + [184]) + [8])) = [0]
	*($5 + [184]) = (int_64)0
	$9 = CALL $1([8867])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$65 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$68 }
	*($5 + [184]) = ($9 << [1])
	$8 = (($5 + [184]) | [1])
	if ( $9 ){ goto $label$67 }
	goto $label$66 
	
.LABEL $label$68
	$7 = (($9 + [16]) & [-16])
	$8 = CALL $9($7)
	*($5 + [184]) = ($7 | [1])
	*($5 + [192]) = $8
	*($5 + [188]) = $9
	
.LABEL $label$67
	CALL memcpy($8, [8867], $9)
	
.LABEL $label$66
	*(($8 + $9)) = [0]
	$9 = *(($0 + [36]))
	$8 = ($9 & [1])
	$9 = CALL $24(($5 + [184]), ( *(($0 + [44])) ? $10 : $8 ), ( *(($0 + [40])) ? uint_32($9 >> [1]) : $8 ))
	$8 = ($9 + [8])
	*((($5 + [200]) + [8])) = *($8)
	*($5 + [200]) = *($9)
	*($9) = (int_64)0
	*($8) = [0]
	*((($5 + [168]) + [8])) = [0]
	*($5 + [168]) = (int_64)0
	$9 = CALL $1([8910])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$64 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$71 }
	*($5 + [168]) = ($9 << [1])
	$7 = (($5 + [168]) | [1])
	$8 = $7
	if ( $9 ){ goto $label$70 }
	goto $label$69 
	
.LABEL $label$71
	$7 = (($9 + [16]) & [-16])
	$8 = CALL $9($7)
	*($5 + [168]) = ($7 | [1])
	*($5 + [176]) = $8
	*($5 + [172]) = $9
	$7 = (($5 + [168]) | [1])
	
.LABEL $label$70
	CALL memcpy($8, [8910], $9)
	
.LABEL $label$69
	*(($8 + $9)) = [0]
	$9 = *($5 + [168])
	$8 = ($9 & [1])
	$9 = CALL $24(($5 + [200]), ( *($5 + [176]) ? $7 : $8 ), ( *($5 + [172]) ? uint_32($9 >> [1]) : $8 ))
	$8 = ($9 + [8])
	*((($5 + [272]) + [8])) = *($8)
	*($5 + [272]) = *($9)
	*($9) = (int_64)0
	*($8) = [0]
	$9 = *(($0 + [36]))
	$8 = ($9 & [1])
	$9 = CALL $24(($5 + [272]), ( *(($0 + [44])) ? $10 : $8 ), ( *(($0 + [40])) ? uint_32($9 >> [1]) : $8 ))
	$8 = ($9 + [8])
	*((($5 + [288]) + [8])) = *($8)
	*($5 + [288]) = *($9)
	*($9) = (int_64)0
	*($8) = [0]
	*((($5 + [152]) + [8])) = [0]
	*($5 + [152]) = (int_64)0
	$9 = CALL $1([8828])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$63 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$74 }
	*($5 + [152]) = ($9 << [1])
	$7 = (($5 + [152]) | [1])
	$8 = $7
	if ( $9 ){ goto $label$73 }
	goto $label$72 
	
.LABEL $label$74
	$7 = (($9 + [16]) & [-16])
	$8 = CALL $9($7)
	*($5 + [152]) = ($7 | [1])
	*($5 + [160]) = $8
	*($5 + [156]) = $9
	$7 = (($5 + [152]) | [1])
	
.LABEL $label$73
	CALL memcpy($8, [8828], $9)
	
.LABEL $label$72
	*(($8 + $9)) = [0]
	$9 = *($5 + [152])
	$8 = ($9 & [1])
	$9 = CALL $24(($5 + [288]), ( *($5 + [160]) ? $7 : $8 ), ( *($5 + [156]) ? uint_32($9 >> [1]) : $8 ))
	$8 = ($9 + [8])
	*((($5 + [240]) + [8])) = *($8)
	*($5 + [240]) = *($9)
	*($9) = (int_64)0
	*($8) = [0]
	if ( ((int_64)$12 <= (int_64)9999) ){ goto $label$76 }
	if ( (*($5 + [240]) & [1]) ){ goto $label$75 }
	goto $label$62 
	
.LABEL $label$76
	CALL eosio_assert([0], ( *($5 + [248]) ? (($5 + [240]) | [1]) : (*($5 + [240]) & [1]) ))
	if ( ((*($5 + [240]) & [1]) == 0) ){ goto $label$62 }
	
.LABEL $label$75
	CALL $11(*($5 + [248]))
	$9 = [1]
	if ( ((*($5 + [152]) & [1]) == 0) ){ goto $label$61 }
	goto $label$60 
	
.LABEL $label$65
	CALL $17(($5 + [184]))
	
.LABEL $label$64
	CALL $17(($5 + [168]))
	
.LABEL $label$63
	CALL $17(($5 + [152]))
	
.LABEL $label$62
	$9 = [1]
	if ( (*($5 + [152]) & [1]) ){ goto $label$60 }
	
.LABEL $label$61
	if ( (*($5 + [288]) & $9) ){ goto $label$59 }
	goto $label$58 
	
.LABEL $label$60
	CALL $11(*(($5 + [160])))
	if ( ((*($5 + [288]) & $9) == 0) ){ goto $label$58 }
	
.LABEL $label$59
	CALL $11(*($5 + [296]))
	$9 = [1]
	if ( ((*($5 + [272]) & [1]) == 0) ){ goto $label$57 }
	goto $label$56 
	
.LABEL $label$58
	$9 = [1]
	if ( (*($5 + [272]) & [1]) ){ goto $label$56 }
	
.LABEL $label$57
	if ( (*($5 + [168]) & $9) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$56
	CALL $11(*($5 + [280]))
	if ( ((*($5 + [168]) & $9) == 0) ){ goto $label$54 }
	
.LABEL $label$55
	CALL $11(*(($5 + [176])))
	$9 = [1]
	if ( ((*($5 + [200]) & [1]) == 0) ){ goto $label$53 }
	goto $label$52 
	
.LABEL $label$54
	$9 = [1]
	if ( (*($5 + [200]) & [1]) ){ goto $label$52 }
	
.LABEL $label$53
	if ( (*($5 + [184]) & $9) ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$52
	CALL $11(*($5 + [208]))
	if ( ((*($5 + [184]) & $9) == 0) ){ goto $label$50 }
	
.LABEL $label$51
	CALL $11(*($5 + [192]))
	$9 = [1]
	$8 = *($4)
	if ( (($8 & [1]) == 0) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$50
	$9 = [1]
	$8 = *($4)
	if ( ($8 & [1]) ){ goto $label$48 }
	
.LABEL $label$49
	if ( ((uint_32)uint_32($8 >> $9) >= (uint_32)[101]) ){ goto $label$47 }
	goto $label$46 
	
.LABEL $label$48
	if ( (*($4 + [4]) <= [101]) ){ goto $label$46 }
	
.LABEL $label$47
	CALL eosio_assert([0], [8924])
	
.LABEL $label$46
	$1 = *($0)
	*($5 + [136]) = [8975]
	$11 = *($5 + [232])
	*($5 + [140]) = CALL $1([8975])
	*($5 + [24]) = *($5 + [136])
	$7 = CALL $33(($5 + [144]), ($5 + [24]))
	*($5 + [120]) = [8626]
	*($5 + [124]) = CALL $1([8626])
	*($5 + [16]) = *($5 + [120])
	$10 = CALL $33(($5 + [128]), ($5 + [16]))
	*(($5 + [112])) = [0]
	*($5 + [104]) = (int_64)0
	$9 = CALL $1([8982])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$80 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$83 }
	*($5 + [104]) = ($9 << [1])
	$8 = (($5 + [104]) | [1])
	if ( $9 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$83
	$14 = (($9 + [16]) & [-16])
	$8 = CALL $9($14)
	*($5 + [104]) = ($14 | [1])
	*($5 + [112]) = $8
	*($5 + [108]) = $9
	
.LABEL $label$82
	CALL memcpy($8, [8982], $9)
	
.LABEL $label$81
	*(($8 + $9)) = [0]
	CALL $35($0, $11, $1, *($7), *($10), ($5 + [104]))
	if ( ((*($5 + [104]) & [1]) == 0) ){ goto $label$84 }
	CALL $11(*($5 + [112]))
	
.LABEL $label$84
	$1 = *($0)
	*($5 + [88]) = [8626]
	$11 = *($5 + [232])
	*($5 + [92]) = CALL $1([8626])
	*($5 + [8]) = *($5 + [88])
	$7 = CALL $33(($5 + [96]), ($5 + [8]))
	*($5 + [72]) = [8987]
	*($5 + [76]) = CALL $1([8987])
	*($5) = *($5 + [72])
	$10 = CALL $33(($5 + [80]), $5)
	*(($5 + [64])) = [0]
	*($5 + [56]) = (int_64)0
	$9 = CALL $1([8982])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$79 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$87 }
	*($5 + [56]) = ($9 << [1])
	$8 = (($5 + [56]) | [1])
	if ( $9 ){ goto $label$86 }
	goto $label$85 
	
.LABEL $label$87
	$14 = (($9 + [16]) & [-16])
	$8 = CALL $9($14)
	*($5 + [56]) = ($14 | [1])
	*($5 + [64]) = $8
	*($5 + [60]) = $9
	
.LABEL $label$86
	CALL memcpy($8, [8982], $9)
	
.LABEL $label$85
	*(($8 + $9)) = [0]
	CALL $35($0, $11, $1, *($7), *($10), ($5 + [56]))
	if ( ((*($5 + [56]) & [1]) == 0) ){ goto $label$88 }
	CALL $11(*($5 + [64]))
	
.LABEL $label$88
	$11 = *($5 + [232])
	if ( ((int_64)CALL current_receiver() == (int_64)*($6)) ){ goto $label$89 }
	CALL eosio_assert([0], [12789])
	
.LABEL $label$89
	*(($9 = CALL $9([48])) + [32]) = $6
	*($9 + [24]) = $3
	*($9) = *($5 + [232])
	*($9 + [8]) = *($2)
	*(($9 + [16])) = *(($2 + [8]))
	*($5 + [280]) = (($5 + [240]) + [32])
	*($5 + [276]) = ($5 + [240])
	*($5 + [272]) = ($5 + [240])
	*($5 + [200]) = ($5 + [272])
	*($5 + [292]) = ($9 + [8])
	*($5 + [288]) = $9
	*($5 + [296]) = ($9 + [24])
	CALL $36(($5 + [288]), ($5 + [200]))
	$1 = *($9)
	$7 = CALL db_store_i64(*(($0 + [152])), (int_64)3607749779137757184, $11, $1, ($5 + [240]), [32])
	*($9 + [36]) = $7
	$8 = ($0 + [160])
	if ( (uint_64)($1 <= *($8)) ){ goto $label$90 }
	*($8) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$90
	*($5 + [288]) = $9
	$1 = *($9)
	*($5 + [240]) = $1
	*($5 + [272]) = $7
	$10 = ($0 + [172])
	$8 = *($10)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [176]))) ){ goto $label$93 }
	*($8 + [8]) = $1
	*($8 + [16]) = $7
	*($5 + [288]) = [0]
	*($8) = $9
	*($10) = ($8 + [24])
	$9 = *($5 + [288])
	*($5 + [288]) = [0]
	if ( $9 ){ goto $label$92 }
	goto $label$91 
	
.LABEL $label$93
	CALL $37(($0 + [168]), ($5 + [288]), ($5 + [240]), ($5 + [272]))
	$9 = *($5 + [288])
	*($5 + [288]) = [0]
	if ( ($9 == 0) ){ goto $label$91 }
	
.LABEL $label$92
	CALL $11($9)
	
.LABEL $label$91
	$1 = *($5 + [232])
	*($5 + [276]) = $4
	*($5 + [272]) = ($5 + [232])
	*($5 + [288]) = $1
	$8 = ($0 + [184])
	if ( ((int_64)CALL current_receiver() == (int_64)*($0 + [184])) ){ goto $label$94 }
	CALL eosio_assert([0], [12789])
	
.LABEL $label$94
	*($5 + [240]) = $8
	*($5 + [244]) = ($5 + [272])
	*($5 + [248]) = ($5 + [288])
	*(($9 = CALL $9([56])) + [24]) = (int_64)0
	*($9) = (int_64)0
	*($9 + [32 align=4]) = (int_64)0
	*($9 + [40]) = [0]
	*($9 + [44]) = $8
	CALL $38(($5 + [240]), $9)
	*($5 + [200]) = $9
	$1 = *($9)
	*($5 + [240]) = $1
	$7 = *($9 + [48])
	*($5 + [184]) = $7
	$10 = ($0 + [212])
	$8 = *($10)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [216]))) ){ goto $label$95 }
	*($8 + [8]) = $1
	*($8 + [16]) = $7
	*($5 + [200]) = [0]
	*($8) = $9
	*($10) = ($8 + [24])
	$9 = *($5 + [200])
	*($5 + [200]) = [0]
	if ( ($9 == 0) ){ goto $label$77 }
	goto $label$78 
	
.LABEL $label$95
	CALL $39(($0 + [208]), ($5 + [200]), ($5 + [240]), ($5 + [184]))
	$9 = *($5 + [200])
	*($5 + [200]) = [0]
	if ( $9 ){ goto $label$78 }
	goto $label$77 
	
.LABEL $label$80
	CALL $17(($5 + [104]))
	
.LABEL $label$79
	CALL $17(($5 + [56]))
	
.LABEL $label$78
	if ( ((*($9 + [32]) & [1]) == 0) ){ goto $label$96 }
	CALL $11(*(($9 + [40])))
	
.LABEL $label$96
	CALL $11($9)
	
.LABEL $label$77
	$1 = *($5 + [232])
	*($5 + [272]) = ($5 + [232])
	*($5 + [276]) = $0
	*($5 + [288]) = $1
	$8 = ($0 + [224])
	if ( ((int_64)CALL current_receiver() == (int_64)*($0 + [224])) ){ goto $label$97 }
	CALL eosio_assert([0], [12789])
	
.LABEL $label$97
	*($5 + [240]) = $8
	*($5 + [244]) = ($5 + [272])
	*($5 + [248]) = ($5 + [288])
	*(($9 = CALL $9([56])) + [16]) = (int_64)0
	*($9) = (int_64)0
	*($9 + [24]) = (int_64)0
	*($9 + [32]) = (int_64)0
	*($9 + [40]) = $8
	CALL $40(($5 + [240]), $9)
	*($5 + [200]) = $9
	$1 = *($9)
	*($5 + [240]) = $1
	$7 = *($9 + [44])
	*($5 + [184]) = $7
	$10 = ($0 + [252])
	$8 = *($10)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [256]))) ){ goto $label$100 }
	*($8 + [8]) = $1
	*($8 + [16]) = $7
	*($5 + [200]) = [0]
	*($8) = $9
	*($10) = ($8 + [24])
	$9 = *($5 + [200])
	*($5 + [200]) = [0]
	if ( $9 ){ goto $label$99 }
	goto $label$98 
	
.LABEL $label$100
	CALL $41(($0 + [248]), ($5 + [200]), ($5 + [240]), ($5 + [184]))
	$9 = *($5 + [200])
	*($5 + [200]) = [0]
	if ( ($9 == 0) ){ goto $label$98 }
	
.LABEL $label$99
	CALL $11($9)
	
.LABEL $label$98
	$2 = ($0 + [264])
	$8 = *(($0 + [292]))
	$10 = *(($0 + [288]))
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$104 }
	
.LOOP $label$106:
	$9 = ($8 + [-24])
	$7 = *($9)
	if ( (int_64)(*($7) == 0) ){ goto $label$105 }
	$8 = $9
	if ( ((int_32)$10 != (int_32)$9) ){ goto $label$106 }
	goto $label$104 
	
.LABEL $label$105
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$104 }
	if ( ((int_32)*($7 + [56]) == (int_32)$2) ){ goto $label$103 }
	CALL eosio_assert([0], [12715])
	goto $label$103 
	
.LABEL $label$104
	$7 = [0]
	$9 = CALL db_find_i64(*($2), *(($0 + [272])), (int_64)-4157495357179166720, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$102 }
	$7 = CALL $42($2, $9)
	if ( ((int_32)*($7 + [56]) == (int_32)$2) ){ goto $label$103 }
	CALL eosio_assert([0], [12715])
	
.LABEL $label$103
	$1 = *($0)
	goto $label$101 
	
.LABEL $label$102
	$1 = *($0)
	CALL eosio_assert([0], [12845])
	
.LABEL $label$101
	CALL $43($2, $7, $1)
	*(($5 + [296])) = [0]
	*($5 + [288]) = (int_64)0
	$9 = CALL $1([8988])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$115 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$118 }
	*($5 + [288]) = ($9 << [1])
	$7 = (($5 + [288]) | [1])
	if ( $9 ){ goto $label$117 }
	goto $label$116 
	
.LABEL $label$118
	$8 = (($9 + [16]) & [-16])
	$7 = CALL $9($8)
	*($5 + [288]) = ($8 | [1])
	*($5 + [296]) = $7
	*($5 + [292]) = $9
	
.LABEL $label$117
	CALL memcpy($7, [8988], $9)
	
.LABEL $label$116
	$8 = [0]
	*(($7 + $9)) = [0]
	$1 = *($5 + [232])
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$122 }
	$7 = *([0] + [12496])
	
.LOOP $label$124:
	*((($5 + [240]) + ($9 = $8))) = *(($7 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$9 == (int_32)[12]) )))))
	$8 = ($9 + [1])
	if ( ((uint_32)$9 > (uint_32)[11]) ){ goto $label$123 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$124 }
	
.LABEL $label$123
	*(($5 + [280])) = [0]
	*($5 + [272]) = (int_64)0
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$121 }
	*($5 + [272]) = ($8 << [1])
	$7 = (($5 + [272]) | [1])
	goto $label$120 
	
.LABEL $label$122
	*(($5 + [280])) = [0]
	*($5 + [272]) = (int_64)0
	*($5 + [272]) = [0]
	$9 = (($5 + [272]) | [1])
	$8 = $9
	goto $label$119 
	
.LABEL $label$121
	$10 = (($8 + [16]) & [-16])
	$7 = CALL $9($10)
	*($5 + [272]) = ($10 | [1])
	*($5 + [280]) = $7
	*($5 + [276]) = $8
	
.LABEL $label$120
	$10 = ($9 + [1])
	$9 = [0]
	
.LOOP $label$125:
	*(($7 + $9)) = *((($5 + [240]) + $9))
	$9 = ($9 + [1])
	if ( ((int_32)$10 != (int_32)$9) ){ goto $label$125 }
	$8 = ($7 + $8)
	$9 = (($5 + [272]) | [1])
	
.LABEL $label$119
	*($8) = [0]
	$8 = *($5 + [272])
	$7 = ($8 & [1])
	$9 = CALL $24(($5 + [288]), ( *($5 + [280]) ? $9 : $7 ), ( *($5 + [276]) ? uint_32($8 >> [1]) : $7 ))
	$8 = ($9 + [8])
	*((($5 + [240]) + [8])) = *($8)
	*($5 + [240]) = *($9)
	*($9) = (int_64)0
	*($8) = [0]
	*((($5 + [200]) + [8])) = [0]
	*($5 + [200]) = (int_64)0
	$9 = CALL $1([9016])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$114 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$128 }
	*($5 + [200]) = ($9 << [1])
	$7 = (($5 + [200]) | [1])
	$8 = $7
	if ( $9 ){ goto $label$127 }
	goto $label$126 
	
.LABEL $label$128
	$7 = (($9 + [16]) & [-16])
	$8 = CALL $9($7)
	*($5 + [200]) = ($7 | [1])
	*($5 + [208]) = $8
	*($5 + [204]) = $9
	$7 = (($5 + [200]) | [1])
	
.LABEL $label$127
	CALL memcpy($8, [9016], $9)
	
.LABEL $label$126
	*(($8 + $9)) = [0]
	$9 = *($5 + [200])
	$8 = ($9 & [1])
	$9 = CALL $24(($5 + [240]), ( *($5 + [208]) ? $7 : $8 ), ( *($5 + [204]) ? uint_32($9 >> [1]) : $8 ))
	$8 = ($9 + [8])
	*((($5 + [40]) + [8])) = *($8)
	*($5 + [40]) = *($9)
	*($9) = (int_64)0
	*($8) = [0]
	CALL $44($0, $3, ($5 + [40]))
	if ( (*($5 + [40]) & [1]) ){ goto $label$130 }
	if ( (*($5 + [200]) & [1]) ){ goto $label$129 }
	goto $label$113 
	
.LABEL $label$130
	CALL $11(*($5 + [48]))
	if ( ((*($5 + [200]) & [1]) == 0) ){ goto $label$113 }
	
.LABEL $label$129
	CALL $11(*(($5 + [208])))
	$9 = [1]
	if ( ((*($5 + [240]) & [1]) == 0) ){ goto $label$112 }
	goto $label$111 
	
.LABEL $label$115
	CALL $17(($5 + [288]))
	
.LABEL $label$114
	CALL $17(($5 + [200]))
	
.LABEL $label$113
	$9 = [1]
	if ( (*($5 + [240]) & [1]) ){ goto $label$111 }
	
.LABEL $label$112
	if ( (*($5 + [272]) & $9) ){ goto $label$110 }
	goto $label$109 
	
.LABEL $label$111
	CALL $11(*($5 + [248]))
	if ( ((*($5 + [272]) & $9) == 0) ){ goto $label$109 }
	
.LABEL $label$110
	CALL $11(*(($5 + [280])))
	if ( ((*($5 + [288]) & [1]) == 0) ){ goto $label$108 }
	goto $label$107 
	
.LABEL $label$109
	if ( (*($5 + [288]) & [1]) ){ goto $label$107 }
	
.LABEL $label$108
	$global$0 = ($5 + [304])
	return 
	
.LABEL $label$107
	CALL $11(*($5 + [296]))
	$global$0 = ($5 + [304])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$5 }
	CALL eosio_assert([0], [12208])
	$3 = [12]
	goto $label$4 
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$6:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$8 }
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$9 }
	$7 = ($7 + [-48])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [-91])
	goto $label$7 
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert([0], [12313])
	$4 = *($0)
	
.LABEL $label$7
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$2
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [12246])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [12313])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$1
	return $0
}

void .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_32 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	int_32 $40
	$2 = ($global$0 - [256])
	$global$0 = $2
	*($0) = (int_64)0
	*(($3 = ($0 + [29]))) = (int_64)0
	*(($4 = ($0 + [24]))) = (int_64)0
	*(($5 = ($0 + [16]))) = (int_64)0
	*(($6 = ($0 + [8]))) = (int_64)0
	$7 = *($1 + [4])
	if ( ($7 == 0) ){ goto $label$1 }
	$8 = *($1)
	$9 = ($8 + $7)
	$7 = ($0 + [2])
	$10 = ($0 + [3])
	$11 = ($0 + [4])
	$12 = ($0 + [5])
	$13 = ($0 + [6])
	$14 = ($0 + [7])
	$15 = ($0 + [9])
	$16 = ($0 + [10])
	$17 = ($0 + [11])
	$18 = ($0 + [12])
	$19 = ($0 + [13])
	$20 = ($0 + [14])
	$21 = ($0 + [15])
	$22 = ($0 + [17])
	$23 = ($0 + [18])
	$24 = ($0 + [19])
	$25 = ($0 + [20])
	$26 = ($0 + [21])
	$27 = ($0 + [22])
	$28 = ($0 + [23])
	$29 = ($0 + [25])
	$30 = ($0 + [26])
	$31 = ($0 + [27])
	$32 = ($0 + [28])
	$33 = ($0 + [30])
	$34 = ($0 + [31])
	$35 = ($0 + [32])
	$36 = ($0 + [33])
	$37 = ($0 + [34])
	$38 = ($0 + [35])
	$39 = ($0 + [36])
	
.LOOP $label$2:
	if ( *([0] + [8232]) ){ goto $label$3 }
	$1 = [-256]
	
.LOOP $label$4:
	*(($1 + [8489])) = [255]
	$1 = ($1 + [1])
	if ( $1 ){ goto $label$4 }
	$1 = [0]
	
.LOOP $label$5:
	*((*(($1 + [8528])) + [8233])) = $1
	$1 = ($1 + [1])
	if ( ((int_32)$1 != (int_32)[59]) ){ goto $label$5 }
	*([0] + [8232]) = [1]
	
.LABEL $label$3
	$1 = *((CALL memcpy($2, [8233], [256]) + *($8)))
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$6 }
	CALL eosio_assert([0], [12663])
	
.LABEL $label$6
	$1 = (((int_32)*($0) * (int_32)[58]) + $1)
	*($0) = $1
	$1 = (((int_32)*($40) * (int_32)[58]) + int_32($1 >> [8]))
	*(($40 = ($0 + [1]))) = $1
	$1 = (((int_32)*($7) * (int_32)[58]) + int_32($1 >> [8]))
	*($7) = $1
	$1 = (((int_32)*($10) * (int_32)[58]) + int_32($1 >> [8]))
	*($10) = $1
	$1 = (((int_32)*($11) * (int_32)[58]) + int_32($1 >> [8]))
	*($11) = $1
	$1 = (((int_32)*($12) * (int_32)[58]) + int_32($1 >> [8]))
	*($12) = $1
	$1 = (((int_32)*($13) * (int_32)[58]) + int_32($1 >> [8]))
	*($13) = $1
	$1 = (((int_32)*($14) * (int_32)[58]) + int_32($1 >> [8]))
	*($14) = $1
	$1 = (((int_32)*($6) * (int_32)[58]) + int_32($1 >> [8]))
	*($6) = $1
	$1 = (((int_32)*($15) * (int_32)[58]) + int_32($1 >> [8]))
	*($15) = $1
	$1 = (((int_32)*($16) * (int_32)[58]) + int_32($1 >> [8]))
	*($16) = $1
	$1 = (((int_32)*($17) * (int_32)[58]) + int_32($1 >> [8]))
	*($17) = $1
	$1 = (((int_32)*($18) * (int_32)[58]) + int_32($1 >> [8]))
	*($18) = $1
	$1 = (((int_32)*($19) * (int_32)[58]) + int_32($1 >> [8]))
	*($19) = $1
	$1 = (((int_32)*($20) * (int_32)[58]) + int_32($1 >> [8]))
	*($20) = $1
	$1 = (((int_32)*($21) * (int_32)[58]) + int_32($1 >> [8]))
	*($21) = $1
	$1 = (((int_32)*($5) * (int_32)[58]) + int_32($1 >> [8]))
	*($5) = $1
	$1 = (((int_32)*($22) * (int_32)[58]) + int_32($1 >> [8]))
	*($22) = $1
	$1 = (((int_32)*($23) * (int_32)[58]) + int_32($1 >> [8]))
	*($23) = $1
	$1 = (((int_32)*($24) * (int_32)[58]) + int_32($1 >> [8]))
	*($24) = $1
	$1 = (((int_32)*($25) * (int_32)[58]) + int_32($1 >> [8]))
	*($25) = $1
	$1 = (((int_32)*($26) * (int_32)[58]) + int_32($1 >> [8]))
	*($26) = $1
	$1 = (((int_32)*($27) * (int_32)[58]) + int_32($1 >> [8]))
	*($27) = $1
	$1 = (((int_32)*($28) * (int_32)[58]) + int_32($1 >> [8]))
	*($28) = $1
	$1 = (((int_32)*($4) * (int_32)[58]) + int_32($1 >> [8]))
	*($4) = $1
	$1 = (((int_32)*($29) * (int_32)[58]) + int_32($1 >> [8]))
	*($29) = $1
	$1 = (((int_32)*($30) * (int_32)[58]) + int_32($1 >> [8]))
	*($30) = $1
	$1 = (((int_32)*($31) * (int_32)[58]) + int_32($1 >> [8]))
	*($31) = $1
	$1 = (((int_32)*($32) * (int_32)[58]) + int_32($1 >> [8]))
	*($32) = $1
	$1 = (((int_32)*($3) * (int_32)[58]) + int_32($1 >> [8]))
	*($3) = $1
	$1 = (((int_32)*($33) * (int_32)[58]) + int_32($1 >> [8]))
	*($33) = $1
	$1 = (((int_32)*($34) * (int_32)[58]) + int_32($1 >> [8]))
	*($34) = $1
	$1 = (((int_32)*($35) * (int_32)[58]) + int_32($1 >> [8]))
	*($35) = $1
	$1 = (((int_32)*($36) * (int_32)[58]) + int_32($1 >> [8]))
	*($36) = $1
	$1 = (((int_32)*($37) * (int_32)[58]) + int_32($1 >> [8]))
	*($37) = $1
	$1 = (((int_32)*($38) * (int_32)[58]) + int_32($1 >> [8]))
	*($38) = $1
	$1 = (((int_32)*($39) * (int_32)[58]) + int_32($1 >> [8]))
	*($39) = $1
	if ( ($1 <= [256]) ){ goto $label$7 }
	CALL eosio_assert([0], [12685])
	
.LABEL $label$7
	$8 = ($8 + [1])
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = ($0 + [36])
	
.LOOP $label$8:
	$8 = *($0)
	*($0) = *($1)
	*($1) = $8
	$1 = ($1 + [-1])
	$0 = ($0 + [1])
	if ( ($0 <= $1) ){ goto $label$8 }
	$global$0 = ($2 + [256])
}

void .FUNC $31 (int_32 $0, int_32 $1)
{
	if ( $0 ){ goto $label$1 }
	CALL eosio_assert([0], $1)
	
.LABEL $label$1
}

void .FUNC $164 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12840])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $127(*($1), *($0 + [4]))
	CALL $127(*($1), *($0 + [8]))
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12840])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12840])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12840])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $129 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [16]))
	*($2 + [32]) = *($1 + [8])
	$4 = *($1)
	$1 = CALL $18(($2 + [16]), ($1 + [24]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$5 = *($0 + [4])
	$3 = (*($0) + int_32($5 >> [1]))
	$0 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($6 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$5 = CALL $18(($2 + [64]), $1)
	*(($2 + [8])) = *($6)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $4), (int_64 $2), (int_32 $5), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $11(*($5 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $11(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

int_32 .FUNC $127 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $135($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $9($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $22($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $22($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $17($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $11($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

int_32 .FUNC $161 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [3]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12533])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$8 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($8) - $4) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [12533])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [4])
	$4 = (*($6) + [4])
	*($6) = $4
	if ( ((int_32)(*($8) - $4) > (int_32)[1]) ){ goto $label$6 }
	CALL eosio_assert([0], [12533])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [4]), [2])
	$4 = (*($6) + [2])
	*($6) = $4
	$7 = ($7 + [8])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}