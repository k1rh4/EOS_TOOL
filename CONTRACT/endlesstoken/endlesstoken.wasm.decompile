(data (i32.const 8264) "failed to allocate pages\00unexpected error in fixed_bytes constructor\00-\00")
(data (i32.const 8335) ",\00")
(data (i32.const 8337) ":\00")
(data (i32.const 8340) "invalid symbol name\00")
(data (i32.const 8360) "invalid supply\00")
(data (i32.const 8375) "max-supply must be positive\00")
(data (i32.const 8403) "token with symbol already exists\00")
(data (i32.const 8436) "memo has more than 256 bytes\00")
(data (i32.const 8465) "token with symbol does not exist, create token before issue\00")
(data (i32.const 8525) "invalid quantity\00")
(data (i32.const 8542) "must issue positive quantity\00")
(data (i32.const 8571) "symbol precision mismatch\00")
(data (i32.const 8597) "quantity exceeds available supply\00")
(data (i32.const 8631) "token with symbol does not exist\00")
(data (i32.const 8664) "must retire positive quantity\00")
(data (i32.const 8694) "cannot transfer to self\00")
(data (i32.const 8718) "to account does not exist\00")
(data (i32.const 8744) "unable to find key\00")
(data (i32.const 8763) "must transfer positive quantity\00")
(data (i32.const 8795) "#\00")
(data (i32.const 8797) " \00")
(data (i32.const 8799) "action\00")
(data (i32.const 8806) "stake\00")
(data (i32.const 8812) "no balance object found\00")
(data (i32.const 8836) "overdrawn balance\00")
(data (i32.const 8854) "symbol does not exist\00")
(data (i32.const 8876) "Balance row already deleted or never existed. Action won\'t have any effect.\00")
(data (i32.const 8952) "Cannot close because the balance is not zero.\00")
(data (i32.const 8998) "required auth missed\00")
(data (i32.const 9019) "account does not exist\00")
(data (i32.const 9042) "fail to find staked token with symbol\00")
(data (i32.const 9080) "user has no staked token with symbol\00")
(data (i32.const 9117) "unstake overflow\00")
(data (i32.const 9134) "user does not own unstaking token\00")
(data (i32.const 9168) "more than 24h since unlock\00")
(data (i32.const 9195) "must restake all unstaking token\00")
(data (i32.const 9228) "token with symbol does not exists\00")
(data (i32.const 9262) "must stake positive quantity\00")
(data (i32.const 9291) "user does not own token with symbol\00")
(data (i32.const 9327) "available balance is not enough.\00")
(data (i32.const 9360) "invalid account\00")
(data (i32.const 9376) "invalid oid\00")
(data (i32.const 9388) "unable to find secondary key\00")
(data (i32.const 9417) "insufficient to unstake\00")
(data (i32.const 9441) "withdraw quantity mismatch\00")
(data (i32.const 9468) "unstaking is not expired\00")
(data (i32.const 9493) "restake quantity mismatch\00")
(data (i32.const 9519) "unstaking is finished\00")
(data (i32.const 9541) "invalid dstaked\00")
(data (i32.const 9557) "invalid dunstaking\00")
(data (i32.const 9576) "l%\00\00")
(data (i32.const 9580) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 9613) "attempt to subtract asset with different symbol\00")
(data (i32.const 9661) "subtraction underflow\00")
(data (i32.const 9683) "subtraction overflow\00")
(data (i32.const 9704) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 9763) "attempt to add asset with different symbol\00")
(data (i32.const 9806) "addition underflow\00")
(data (i32.const 9825) "addition overflow\00")
(data (i32.const 9843) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 9894) "error reading iterator\00")
(data (i32.const 9917) "cannot create objects in table of another contract\00")
(data (i32.const 9968) "write\00")
(data (i32.const 9974) "object passed to modify is not in multi_index\00")
(data (i32.const 10020) "cannot modify objects in table of another contract\00")
(data (i32.const 10071) "updater cannot change primary key when modifying an object\00")
(data (i32.const 10130) "read\00")
(data (i32.const 10135) "cannot pass end iterator to modify\00")
(data (i32.const 10170) "cannot pass end iterator to erase\00")
(data (i32.const 10204) "cannot increment end iterator\00")
(data (i32.const 10234) "object passed to erase is not in multi_index\00")
(data (i32.const 10279) "cannot erase objects in table of another contract\00")
(data (i32.const 10329) "attempt to remove object that was not in multi_index\00")
(data (i32.const 10382) "next primary key in table is at autoincrement limit\00")
(data (i32.const 10434) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 10488) "cannot decrement iterator at beginning of table\00")
(data (i32.const 10536) "get\00")
(data (i32.const 0) "0)\00\00")
(import "env" "abort" (func $fimport$0))
(import "env" "eosio_assert" (func $fimport$1 (param i32 i32)))
(import "env" "memset" (func $fimport$2 (param i32 i32 i32) (result i32)))
(import "env" "memcpy" (func $fimport$3 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$4 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$5 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$6 (param i32 i32)))
(import "env" "__multf3" (func $fimport$7 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$8 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$9 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$10 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$11 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$12 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$13 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$14 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$15 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$16 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$17 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$18 (param i64 i64) (result f32)))
(import "env" "prints_l" (func $fimport$19 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$20 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$21 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$22 (param i64 i64) (result i32)))
(import "env" "assert_sha256" (func $fimport$23 (param i32 i32 i32)))
(import "env" "assert_sha1" (func $fimport$24 (param i32 i32 i32)))
(import "env" "assert_sha512" (func $fimport$25 (param i32 i32 i32)))
(import "env" "assert_ripemd160" (func $fimport$26 (param i32 i32 i32)))
(import "env" "sha256" (func $fimport$27 (param i32 i32 i32)))
(import "env" "__ashlti3" (func $fimport$28 (param i32 i64 i64 i32)))
(import "env" "sha1" (func $fimport$29 (param i32 i32 i32)))
(import "env" "sha512" (func $fimport$30 (param i32 i32 i32)))
(import "env" "ripemd160" (func $fimport$31 (param i32 i32 i32)))
(import "env" "recover_key" (func $fimport$32 (param i32 i32 i32 i32 i32) (result i32)))
(import "env" "assert_recover_key" (func $fimport$33 (param i32 i32 i32 i32 i32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$34 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$35 (param i32 i32) (result i32)))
(import "env" "set_proposed_producers" (func $fimport$36 (param i32 i32) (result i64)))
(import "env" "current_time" (func $fimport$37 (result i64)))
(import "env" "get_active_producers" (func $fimport$38 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$39 (param i64)))
(import "env" "db_find_i64" (func $fimport$40 (param i64 i64 i64 i64) (result i32)))
(import "env" "current_receiver" (func $fimport$41 (result i64)))
(import "env" "db_store_i64" (func $fimport$42 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$43 (param i32 i64 i32 i32)))
(import "env" "is_account" (func $fimport$44 (param i64) (result i32)))
(import "env" "require_recipient" (func $fimport$45 (param i64)))
(import "env" "has_auth" (func $fimport$46 (param i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$47 (param i32 i32) (result i32)))
(import "env" "db_idx256_lowerbound" (func $fimport$48 (param i64 i64 i64 i32 i32 i32) (result i32)))
(import "env" "action_data_size" (func $fimport$49 (result i32)))
(import "env" "read_action_data" (func $fimport$50 (param i32 i32) (result i32)))
(import "env" "eosio_assert_code" (func $fimport$51 (param i32 i64)))
(import "env" "db_get_i64" (func $fimport$52 (param i32 i32 i32) (result i32)))
(import "env" "send_inline" (func $fimport$53 (param i32 i32)))
(import "env" "db_remove_i64" (func $fimport$54 (param i32)))
(import "env" "db_lowerbound_i64" (func $fimport$55 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_idx256_store" (func $fimport$56 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$57 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$58 (param i64 i64 i64) (result i32)))
(import "env" "db_idx256_find_primary" (func $fimport$59 (param i64 i64 i64 i32 i32 i64) (result i32)))
(import "env" "db_idx256_update" (func $fimport$60 (param i32 i64 i32 i32)))
(export "apply" (func $1))
(table $0 1 1 anyfunc)

(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 10540))
(global $global$2 i32 (i32.const 10540))


void .FUNC $98 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [112])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [68]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9974])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10020])
	
.LABEL $label$2
	*($4 + [48]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	$6 = ($1 + [8])
	$5 = ($1 + [24])
	CALL $32(($4 + [80]), $5, ($4 + [48]), $6)
	*((($4 + [16]) + [24])) = *((($4 + [80]) + [24]))
	*((($4 + [16]) + [16])) = *((($4 + [80]) + [16]))
	*($4 + [24]) = *($4 + [88])
	*($4 + [16]) = *($4 + [80])
	*($1 + [48]) = (int_64)0
	*($1 + [64]) = [0]
	$7 = *($1 + [8])
	$8 = ( *(($1 + [12])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($8 + [52])
	$9 = (CASTING uint_64)(uint_32 $8)
	$8 = ($1 + [64])
	$10 = *($1)
	
.LOOP $label$3:
	$7 = ($7 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$3 }
	if ( ($7 <= [513]) ){ goto $label$5 }
	$3 = CALL $2($7)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$4
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $7)
	*($4 + [48]) = $4
	*($4 + [84]) = $6
	*($4 + [88]) = $5
	*($4 + [100]) = $8
	*($4 + [80]) = $1
	*($4 + [92]) = ($1 + [32])
	*($4 + [96]) = ($1 + [48])
	CALL $133(($4 + [80]), ($4 + [48]))
	CALL db_update_i64(*($1 + [72]), $2, $3, $7)
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $3($3)
	
.LABEL $label$6
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($4 + [48]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	CALL $32(($4 + [80]), $5, ($4 + [48]), $6)
	if ( (CALL $18(($4 + [16]), ($4 + [80]), [32]) == 0) ){ goto $label$8 }
	$7 = *($1 + [76])
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$9 }
	*(($4 + [72])) = (int_64)0
	*(($4 + [64])) = (int_64)0
	*($4 + [56]) = (int_64)0
	*($4 + [48]) = (int_64)0
	$7 = CALL db_idx256_find_primary(*($0), *($0 + [8]), (int_64)-6776363433588686848, ($4 + [48]), [2], $10)
	*(($1 + [76])) = $7
	
.LABEL $label$9
	CALL db_idx256_update($7, $2, ($4 + [80]), [2])
	
.LABEL $label$8
	$global$0 = ($4 + [112])
}

void .FUNC $99 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$4 = ($global$0 - [144])
	$global$0 = $4
	CALL require_auth(*($1))
	*(($4 + [80])) = [0]
	*($4 + [72]) = (int_64)0
	$5 = CALL $16([9360])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$8 }
	*($4 + [72]) = ($5 << [1])
	$6 = (($4 + [72]) | [1])
	if ( $5 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$7 = (($5 + [16]) & [-16])
	$6 = CALL $8($7)
	*($4 + [72]) = ($7 | [1])
	*($4 + [80]) = $6
	*($4 + [76]) = $5
	
.LABEL $label$7
	CALL memcpy($6, [9360], $5)
	
.LABEL $label$6
	*(($6 + $5)) = [0]
	if ( CALL is_account(*($1)) ){ goto $label$9 }
	CALL eosio_assert([0], ( *($4 + [80]) ? (($4 + [72]) | [1]) : (*($4 + [72]) & [1]) ))
	
.LABEL $label$9
	if ( ((*($4 + [72]) & [1]) == 0) ){ goto $label$10 }
	CALL $10(*($4 + [80]))
	
.LABEL $label$10
	*(($4 + [80])) = [0]
	*($4 + [72]) = (int_64)0
	$5 = CALL $16([8525])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$13 }
	*($4 + [72]) = ($5 << [1])
	$6 = (($4 + [72]) | [1])
	if ( $5 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$7 = (($5 + [16]) & [-16])
	$6 = CALL $8($7)
	*($4 + [72]) = ($7 | [1])
	*($4 + [80]) = $6
	*($4 + [76]) = $5
	
.LABEL $label$12
	CALL memcpy($6, [8525], $5)
	
.LABEL $label$11
	*(($6 + $5)) = [0]
	$8 = *($2)
	if ( ((uint_64)((int_64)$8 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$15 }
	$9 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$10 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$18 }
	$9 = $10
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$18
	$9 = $10
	
.LOOP $label$19:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$15 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $6 ){ goto $label$19 }
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$16 }
	
.LABEL $label$17
	if ( ((int_64)$8 > (int_64)0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL eosio_assert([0], ( *($4 + [80]) ? (($4 + [72]) | [1]) : (*($4 + [72]) & [1]) ))
	
.LABEL $label$14
	if ( ((*($4 + [72]) & [1]) == 0) ){ goto $label$20 }
	CALL $10(*($4 + [80]))
	
.LABEL $label$20
	*(($4 + [80])) = [0]
	*($4 + [72]) = (int_64)0
	$5 = CALL $16([9376])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$23 }
	*($4 + [72]) = ($5 << [1])
	$6 = (($4 + [72]) | [1])
	if ( $5 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	$7 = (($5 + [16]) & [-16])
	$6 = CALL $8($7)
	*($4 + [72]) = ($7 | [1])
	*($4 + [80]) = $6
	*($4 + [76]) = $5
	
.LABEL $label$22
	CALL memcpy($6, [9376], $5)
	
.LABEL $label$21
	*(($6 + $5)) = [0]
	$5 = *($3)
	if ( (( *($3 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ) == 0) ){ goto $label$24 }
	if ( ((*($4 + [72]) & [1]) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$24
	CALL eosio_assert([0], ( *($4 + [80]) ? (($4 + [72]) | [1]) : (*($4 + [72]) & [1]) ))
	if ( (*($4 + [72]) & [1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	CALL $19(($4 + [72]))
	
.LABEL $label$4
	CALL $19(($4 + [72]))
	
.LABEL $label$3
	CALL $19(($4 + [72]))
	
.LABEL $label$2
	CALL $10(*($4 + [80]))
	
.LABEL $label$1
	*(($4 + [104])) = [0]
	*($4 + [88]) = (int_64)-1
	*($4 + [96]) = (int_64)0
	*($4 + [108]) = [0]
	$9 = *($0)
	*($4 + [72]) = $9
	*($4 + [80]) = $9
	*($4 + [64]) = ($4 + [72])
	*($4 + [112]) = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	CALL $32(($4 + [32]), $1, ($4 + [112]), $3)
	CALL $86(($4 + [24]), ($4 + [64]), ($4 + [32]))
	$5 = *($4 + [28])
	if ( $5 ){ goto $label$25 }
	CALL eosio_assert([0], [9388])
	$5 = *($4 + [28])
	
.LABEL $label$25
	*($4 + [8]) = (uint_64)*(($5 + [40])) >> (uint_64)(int_64)8)
	CALL $32(($4 + [112]), ($5 + [24]), ($4 + [8]), ($5 + [8]))
	if ( ((int_64)((int_64)((int_64)*($4 + [32]) ^ (int_64)*($4 + [112])) | (int_64)((int_64)*($4 + [40]) ^ (int_64)*($4 + [120]))) != (int_64)0) ){ goto $label$27 }
	if ( (int_64)(((int_64)((int_64)*($4 + [48]) ^ (int_64)*($4 + [128])) | (int_64)((int_64)*((($4 + [32]) + [24])) ^ (int_64)*((($4 + [112]) + [24])))) == 0) ){ goto $label$26 }
	
.LABEL $label$27
	CALL eosio_assert([0], [9388])
	
.LABEL $label$26
	$5 = *($4 + [28])
	$9 = *(($5 + [56]))
	*((($4 + [112]) + [8])) = $9
	*($4 + [112]) = *($5 + [48])
	if ( ((int_64)$9 == (int_64)*(($2 + [8]))) ){ goto $label$28 }
	CALL eosio_assert([0], [9704])
	
.LABEL $label$28
	if ( ((int_64)*($4 + [112]) == (int_64)*($2)) ){ goto $label$29 }
	CALL eosio_assert([0], [9493])
	
.LABEL $label$29
	$9 = CALL $30()
	$5 = *($4 + [28])
	if ( ((uint_32)*($5 + [64]) > (uint_32)(CASTING uint_32)(uint_64 ((int_64)$9 / (int_64)1000000))) ){ goto $label$30 }
	CALL eosio_assert([0], [9519])
	$5 = *($4 + [28])
	
.LABEL $label$30
	$9 = *($0)
	*($4 + [8]) = ($4 + [112])
	if ( $5 ){ goto $label$31 }
	CALL eosio_assert([0], [10135])
	
.LABEL $label$31
	CALL $100(*($4 + [64]), $5, $9, ($4 + [8]))
	$9 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$34:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$33 }
	$10 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$35 }
	$9 = $10
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$34 }
	goto $label$32 
	
.LABEL $label$35
	$9 = $10
	
.LOOP $label$36:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$33 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $6 ){ goto $label$36 }
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$34 }
	goto $label$32 
	
.LABEL $label$33
	CALL eosio_assert([0], [8340])
	
.LABEL $label$32
	*((($4 + [8]) + [8])) = *((($4 + [112]) + [8]))
	*($4 + [8]) = (int_64))((int_64)0 - *($4 + [112]))
	CALL $89($0, $1, ($4 + [112]), ($4 + [8]))
	$7 = *($4 + [96])
	if ( ($7 == 0) ){ goto $label$37 }
	$2 = ($4 + [100])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$39 }
	
.LOOP $label$40:
	$5 = ($5 + [-24])
	$6 = *($5)
	*($5) = [0]
	if ( ($6 == 0) ){ goto $label$41 }
	if ( ((*($6 + [8]) & [1]) == 0) ){ goto $label$42 }
	CALL $10(*(($6 + [16])))
	
.LABEL $label$42
	CALL $10($6)
	
.LABEL $label$41
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$40 }
	$5 = *(($4 + [96]))
	goto $label$38 
	
.LABEL $label$39
	$5 = $7
	
.LABEL $label$38
	*($2) = $7
	CALL $10($5)
	
.LABEL $label$37
	$global$0 = ($4 + [144])
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $94 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $29($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $95 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$4 = ($global$0 - [144])
	$global$0 = $4
	CALL require_auth(*($1))
	*(($4 + [64])) = [0]
	*($4 + [56]) = (int_64)0
	$5 = CALL $16([9360])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$8 }
	*($4 + [56]) = ($5 << [1])
	$6 = (($4 + [56]) | [1])
	if ( $5 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$7 = (($5 + [16]) & [-16])
	$6 = CALL $8($7)
	*($4 + [56]) = ($7 | [1])
	*($4 + [64]) = $6
	*($4 + [60]) = $5
	
.LABEL $label$7
	CALL memcpy($6, [9360], $5)
	
.LABEL $label$6
	*(($6 + $5)) = [0]
	if ( CALL is_account(*($1)) ){ goto $label$9 }
	CALL eosio_assert([0], ( *($4 + [64]) ? (($4 + [56]) | [1]) : (*($4 + [56]) & [1]) ))
	
.LABEL $label$9
	if ( ((*($4 + [56]) & [1]) == 0) ){ goto $label$10 }
	CALL $10(*($4 + [64]))
	
.LABEL $label$10
	*(($4 + [64])) = [0]
	*($4 + [56]) = (int_64)0
	$5 = CALL $16([8525])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$13 }
	*($4 + [56]) = ($5 << [1])
	$6 = (($4 + [56]) | [1])
	if ( $5 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$7 = (($5 + [16]) & [-16])
	$6 = CALL $8($7)
	*($4 + [56]) = ($7 | [1])
	*($4 + [64]) = $6
	*($4 + [60]) = $5
	
.LABEL $label$12
	CALL memcpy($6, [8525], $5)
	
.LABEL $label$11
	*(($6 + $5)) = [0]
	$8 = *($2)
	if ( ((uint_64)((int_64)$8 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$15 }
	$9 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$10 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$18 }
	$9 = $10
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$18
	$9 = $10
	
.LOOP $label$19:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$15 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $6 ){ goto $label$19 }
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$16 }
	
.LABEL $label$17
	if ( ((int_64)$8 > (int_64)0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL eosio_assert([0], ( *($4 + [64]) ? (($4 + [56]) | [1]) : (*($4 + [56]) & [1]) ))
	
.LABEL $label$14
	if ( ((*($4 + [56]) & [1]) == 0) ){ goto $label$20 }
	CALL $10(*($4 + [64]))
	
.LABEL $label$20
	*(($4 + [64])) = [0]
	*($4 + [56]) = (int_64)0
	$5 = CALL $16([9376])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$23 }
	*($4 + [56]) = ($5 << [1])
	$6 = (($4 + [56]) | [1])
	if ( $5 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	$7 = (($5 + [16]) & [-16])
	$6 = CALL $8($7)
	*($4 + [56]) = ($7 | [1])
	*($4 + [64]) = $6
	*($4 + [60]) = $5
	
.LABEL $label$22
	CALL memcpy($6, [9376], $5)
	
.LABEL $label$21
	*(($6 + $5)) = [0]
	$5 = *($3)
	if ( (( *($3 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ) == 0) ){ goto $label$24 }
	if ( ((*($4 + [56]) & [1]) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$24
	CALL eosio_assert([0], ( *($4 + [64]) ? (($4 + [56]) | [1]) : (*($4 + [56]) & [1]) ))
	if ( (*($4 + [56]) & [1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	CALL $19(($4 + [56]))
	
.LABEL $label$4
	CALL $19(($4 + [56]))
	
.LABEL $label$3
	CALL $19(($4 + [56]))
	
.LABEL $label$2
	CALL $10(*($4 + [64]))
	
.LABEL $label$1
	*(($4 + [88])) = [0]
	*($4 + [72]) = (int_64)-1
	*($4 + [80]) = (int_64)0
	*($4 + [92]) = [0]
	$9 = *($0)
	*($4 + [56]) = $9
	*($4 + [64]) = $9
	*($4 + [48]) = ($4 + [56])
	*($4 + [96]) = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	CALL $32(($4 + [16]), $1, ($4 + [96]), $3)
	CALL $86(($4 + [8]), ($4 + [48]), ($4 + [16]))
	$5 = *($4 + [12])
	if ( $5 ){ goto $label$25 }
	CALL eosio_assert([0], [9388])
	$5 = *($4 + [12])
	
.LABEL $label$25
	*($4 + [136]) = (uint_64)*(($5 + [40])) >> (uint_64)(int_64)8)
	CALL $32(($4 + [96]), ($5 + [24]), ($4 + [136]), ($5 + [8]))
	if ( ((int_64)((int_64)((int_64)*($4 + [16]) ^ (int_64)*($4 + [96])) | (int_64)((int_64)*($4 + [24]) ^ (int_64)*($4 + [104]))) != (int_64)0) ){ goto $label$27 }
	if ( (int_64)(((int_64)((int_64)*($4 + [32]) ^ (int_64)*($4 + [112])) | (int_64)((int_64)*((($4 + [16]) + [24])) ^ (int_64)*((($4 + [96]) + [24])))) == 0) ){ goto $label$26 }
	
.LABEL $label$27
	CALL eosio_assert([0], [9388])
	
.LABEL $label$26
	$5 = *($4 + [12])
	if ( ((int_64)*(($2 + [8])) != (int_64)*(($5 + [40]))) ){ goto $label$32 }
	if ( ((int_64)*($2) > (int_64)*($5 + [32])) ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	CALL eosio_assert([0], [9704])
	if ( ((int_64)*($2) <= (int_64)*($5 + [32])) ){ goto $label$30 }
	
.LABEL $label$31
	CALL eosio_assert([0], [9417])
	$9 = *($0)
	$5 = *($4 + [12])
	*($4 + [96]) = $2
	if ( $5 ){ goto $label$28 }
	goto $label$29 
	
.LABEL $label$30
	$9 = *($0)
	$5 = *($4 + [12])
	*($4 + [96]) = $2
	if ( $5 ){ goto $label$28 }
	
.LABEL $label$29
	CALL eosio_assert([0], [10135])
	
.LABEL $label$28
	CALL $96(*($4 + [48]), $5, $9, ($4 + [96]))
	$9 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$35:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$34 }
	$10 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$36 }
	$9 = $10
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$35 }
	goto $label$33 
	
.LABEL $label$36
	$9 = $10
	
.LOOP $label$37:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$34 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $6 ){ goto $label$37 }
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$35 }
	goto $label$33 
	
.LABEL $label$34
	CALL eosio_assert([0], [8340])
	
.LABEL $label$33
	*((($4 + [96]) + [8])) = *(($2 + [8]))
	*($4 + [96]) = (int_64))((int_64)0 - *($2))
	CALL $89($0, $1, ($4 + [96]), $2)
	$7 = *($4 + [80])
	if ( ($7 == 0) ){ goto $label$38 }
	$2 = ($4 + [84])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$40 }
	
.LOOP $label$41:
	$5 = ($5 + [-24])
	$6 = *($5)
	*($5) = [0]
	if ( ($6 == 0) ){ goto $label$42 }
	if ( ((*($6 + [8]) & [1]) == 0) ){ goto $label$43 }
	CALL $10(*(($6 + [16])))
	
.LABEL $label$43
	CALL $10($6)
	
.LABEL $label$42
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$41 }
	$5 = *(($4 + [80]))
	goto $label$39 
	
.LABEL $label$40
	$5 = $7
	
.LABEL $label$39
	*($2) = $7
	CALL $10($5)
	
.LABEL $label$38
	$global$0 = ($4 + [144])
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $96 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_64 $11
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [68]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9974])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10020])
	
.LABEL $label$2
	$6 = ($1 + [40])
	*($5 + [48]) = (uint_64)*($6) >> (uint_64)(int_64)8)
	$8 = ($1 + [8])
	$7 = ($1 + [24])
	CALL $32(($5 + [80]), $7, ($5 + [48]), $8)
	*((($5 + [16]) + [24])) = *((($5 + [80]) + [24]))
	*((($5 + [16]) + [16])) = *((($5 + [80]) + [16]))
	*($5 + [24]) = *($5 + [88])
	*($5 + [16]) = *($5 + [80])
	$9 = *($1)
	$10 = *($3)
	if ( ((int_64)*($10 + [8]) == (int_64)*($6)) ){ goto $label$3 }
	CALL eosio_assert([0], [9613])
	
.LABEL $label$3
	$11 = (int_64)
	*($1 + [32]) = $11(*($1 + [32]) - *($10)))
	if ( ((int_64)$11 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9661])
	$11 = *(($1 + [32]))
	
.LABEL $label$4
	if ( ((int_64)$11 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9683])
	
.LABEL $label$5
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [56]))) ){ goto $label$6 }
	CALL eosio_assert([0], [9763])
	
.LABEL $label$6
	$11 = ((int_64)*($1 + [48]) + (int_64)*($3))
	*($1 + [48]) = $11
	if ( ((int_64)$11 > (int_64)-4611686018427387904) ){ goto $label$7 }
	CALL eosio_assert([0], [9806])
	$11 = *(($1 + [48]))
	
.LABEL $label$7
	if ( ((int_64)$11 < (int_64)4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [9825])
	
.LABEL $label$8
	*($1 + [64]) = ((CASTING uint_32)(uint_64 ((int_64)CALL $30() / (int_64)1000000)) + [86400])
	if ( ((int_64)$9 == (int_64)*($1)) ){ goto $label$9 }
	CALL eosio_assert([0], [10071])
	
.LABEL $label$9
	$6 = ($1 + [64])
	$3 = *(($1 + [8]))
	$10 = ( *(($1 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($10 + [52])
	$11 = (CASTING uint_64)(uint_32 $10)
	
.LOOP $label$10:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$10 }
	if ( ($3 <= [513]) ){ goto $label$12 }
	$4 = CALL $2($3)
	goto $label$11 
	
.LABEL $label$12
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$11
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [48]) = $5
	*($5 + [84]) = $8
	*($5 + [88]) = $7
	*($5 + [100]) = $6
	*($5 + [80]) = $1
	*($5 + [92]) = ($1 + [32])
	*($5 + [96]) = ($1 + [48])
	CALL $133(($5 + [80]), ($5 + [48]))
	CALL db_update_i64(*($1 + [72]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$13 }
	CALL $3($4)
	
.LABEL $label$13
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$14 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$14
	*($5 + [48]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	CALL $32(($5 + [80]), $7, ($5 + [48]), $8)
	if ( (CALL $18(($5 + [16]), ($5 + [80]), [32]) == 0) ){ goto $label$15 }
	$3 = *($1 + [76])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$16 }
	*(($5 + [72])) = (int_64)0
	*(($5 + [64])) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [48]) = (int_64)0
	$3 = CALL db_idx256_find_primary(*($0), *($0 + [8]), (int_64)-6776363433588686848, ($5 + [48]), [2], $9)
	*(($1 + [76])) = $3
	
.LABEL $label$16
	CALL db_idx256_update($3, $2, ($5 + [80]), [2])
	
.LABEL $label$15
	$global$0 = ($5 + [112])
}

void .FUNC $97 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	$4 = ($global$0 - [240])
	$global$0 = $4
	CALL require_auth(*($1))
	*(($4 + [184])) = [0]
	*($4 + [176]) = (int_64)0
	$5 = CALL $16([9360])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$8 }
	*($4 + [176]) = ($5 << [1])
	$6 = (($4 + [176]) | [1])
	if ( $5 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$7 = (($5 + [16]) & [-16])
	$6 = CALL $8($7)
	*($4 + [176]) = ($7 | [1])
	*($4 + [184]) = $6
	*($4 + [180]) = $5
	
.LABEL $label$7
	CALL memcpy($6, [9360], $5)
	
.LABEL $label$6
	*(($6 + $5)) = [0]
	if ( CALL is_account(*($1)) ){ goto $label$9 }
	CALL eosio_assert([0], ( *($4 + [184]) ? (($4 + [176]) | [1]) : (*($4 + [176]) & [1]) ))
	
.LABEL $label$9
	if ( ((*($4 + [176]) & [1]) == 0) ){ goto $label$10 }
	CALL $10(*($4 + [184]))
	
.LABEL $label$10
	*(($4 + [184])) = [0]
	*($4 + [176]) = (int_64)0
	$5 = CALL $16([8525])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$13 }
	*($4 + [176]) = ($5 << [1])
	$6 = (($4 + [176]) | [1])
	if ( $5 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$7 = (($5 + [16]) & [-16])
	$6 = CALL $8($7)
	*($4 + [176]) = ($7 | [1])
	*($4 + [184]) = $6
	*($4 + [180]) = $5
	
.LABEL $label$12
	CALL memcpy($6, [8525], $5)
	
.LABEL $label$11
	*(($6 + $5)) = [0]
	$8 = *($2)
	if ( ((uint_64)((int_64)$8 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$15 }
	$9 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$10 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$18 }
	$9 = $10
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$18
	$9 = $10
	
.LOOP $label$19:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$15 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $6 ){ goto $label$19 }
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$16 }
	
.LABEL $label$17
	if ( ((int_64)$8 > (int_64)0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL eosio_assert([0], ( *($4 + [184]) ? (($4 + [176]) | [1]) : (*($4 + [176]) & [1]) ))
	
.LABEL $label$14
	if ( ((*($4 + [176]) & [1]) == 0) ){ goto $label$20 }
	CALL $10(*($4 + [184]))
	
.LABEL $label$20
	*(($4 + [184])) = [0]
	*($4 + [176]) = (int_64)0
	$5 = CALL $16([9376])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$23 }
	*($4 + [176]) = ($5 << [1])
	$6 = (($4 + [176]) | [1])
	if ( $5 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	$7 = (($5 + [16]) & [-16])
	$6 = CALL $8($7)
	*($4 + [176]) = ($7 | [1])
	*($4 + [184]) = $6
	*($4 + [180]) = $5
	
.LABEL $label$22
	CALL memcpy($6, [9376], $5)
	
.LABEL $label$21
	*(($6 + $5)) = [0]
	$5 = *($3)
	if ( (( *($3 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ) == 0) ){ goto $label$24 }
	if ( ((*($4 + [176]) & [1]) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$24
	CALL eosio_assert([0], ( *($4 + [184]) ? (($4 + [176]) | [1]) : (*($4 + [176]) & [1]) ))
	if ( (*($4 + [176]) & [1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	CALL $19(($4 + [176]))
	
.LABEL $label$4
	CALL $19(($4 + [176]))
	
.LABEL $label$3
	CALL $19(($4 + [176]))
	
.LABEL $label$2
	CALL $10(*($4 + [184]))
	
.LABEL $label$1
	*(($4 + [168])) = [0]
	*($4 + [152]) = (int_64)-1
	*($4 + [160]) = (int_64)0
	*($4 + [172]) = [0]
	$9 = *($0)
	*($4 + [136]) = $9
	*($4 + [144]) = $9
	*($4 + [128]) = ($4 + [136])
	*($4 + [176]) = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	CALL $32(($4 + [96]), $1, ($4 + [176]), $3)
	CALL $86(($4 + [88]), ($4 + [128]), ($4 + [96]))
	$5 = *($4 + [92])
	if ( $5 ){ goto $label$25 }
	CALL eosio_assert([0], [9388])
	$5 = *($4 + [92])
	
.LABEL $label$25
	*($4 + [72]) = (uint_64)*(($5 + [40])) >> (uint_64)(int_64)8)
	CALL $32(($4 + [176]), ($5 + [24]), ($4 + [72]), ($5 + [8]))
	if ( ((int_64)((int_64)((int_64)*($4 + [96]) ^ (int_64)*($4 + [176])) | (int_64)((int_64)*($4 + [104]) ^ (int_64)*($4 + [184]))) != (int_64)0) ){ goto $label$27 }
	if ( (int_64)(((int_64)((int_64)*($4 + [112]) ^ (int_64)*($4 + [192])) | (int_64)((int_64)*((($4 + [96]) + [24])) ^ (int_64)*((($4 + [176]) + [24])))) == 0) ){ goto $label$26 }
	
.LABEL $label$27
	CALL eosio_assert([0], [9388])
	
.LABEL $label$26
	$5 = *($4 + [92])
	$8 = *($5 + [48])
	$11 = *(($5 + [56]))
	if ( ((int_64)$11 == (int_64)*(($2 + [8]))) ){ goto $label$28 }
	CALL eosio_assert([0], [9704])
	
.LABEL $label$28
	if ( ((int_64)$8 == (int_64)*($2)) ){ goto $label$29 }
	CALL eosio_assert([0], [9441])
	
.LABEL $label$29
	$9 = CALL $30()
	$5 = *($4 + [92])
	if ( ((uint_32)*($5 + [64]) <= (uint_32)(CASTING uint_32)(uint_64 ((int_64)$9 / (int_64)1000000))) ){ goto $label$30 }
	CALL eosio_assert([0], [9468])
	$5 = *($4 + [92])
	
.LABEL $label$30
	$9 = *($0)
	if ( $5 ){ goto $label$31 }
	CALL eosio_assert([0], [10135])
	
.LABEL $label$31
	CALL $98(*($4 + [128]), $5, $9)
	*($4 + [72]) = (int_64)0
	$9 = *(($2 + [8]))
	*($4 + [80]) = $9
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$34:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$33 }
	$10 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$35 }
	$9 = $10
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$34 }
	goto $label$32 
	
.LABEL $label$35
	$9 = $10
	
.LOOP $label$36:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$33 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $6 ){ goto $label$36 }
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$34 }
	goto $label$32 
	
.LABEL $label$33
	CALL eosio_assert([0], [8340])
	
.LABEL $label$32
	*($4 + [184]) = $11
	*($4 + [176]) = (int_64))((int_64)0 - $8)
	CALL $89($0, $1, ($4 + [72]), ($4 + [176]))
	$6 = CALL $20(($4 + [56]), $3)
	*(($7 = (($4 + [8]) + [24]))) = *(($2 + [8]))
	$9 = *($0)
	*($4 + [8]) = $9
	*($4 + [16]) = *($1)
	*($4 + [24]) = *($2)
	CALL $20(($4 + [40]), $6)
	*(($5 = CALL $8([16]))) = $9
	*($5 + [8]) = (int_64)3617214756542218240
	*((($4 + [176]) + [24])) = *($7)
	$7 = (($4 + [8]) + [40])
	*(($2 = (($4 + [176]) + [40]))) = *($7)
	*($7) = [0]
	*($4 + [224]) = $5
	$5 = ($5 + [16])
	*($4 + [232]) = $5
	*($4 + [228]) = $5
	*($4 + [176]) = *($4 + [8])
	*($4 + [184]) = *($4 + [16])
	*($4 + [192]) = *($4 + [24])
	*($4 + [208]) = *($4 + [40])
	*($4 + [40]) = (int_64)0
	CALL $46($9, (int_64)-3617168760277827584, ($4 + [224]), ($4 + [176]))
	if ( ((*($4 + [208]) & [1]) == 0) ){ goto $label$37 }
	CALL $10(*($2))
	
.LABEL $label$37
	$5 = *($4 + [224])
	if ( ($5 == 0) ){ goto $label$38 }
	*($4 + [228]) = $5
	CALL $10($5)
	
.LABEL $label$38
	if ( (*(($4 + [40])) & [1]) ){ goto $label$43 }
	if ( (*($4 + [56]) & [1]) ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$43
	CALL $10(*(($4 + [48])))
	if ( ((*($4 + [56]) & [1]) == 0) ){ goto $label$41 }
	
.LABEL $label$42
	CALL $10(*($6 + [8]))
	$7 = *($4 + [160])
	if ( ($7 == 0) ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$41
	$7 = *($4 + [160])
	if ( $7 ){ goto $label$39 }
	
.LABEL $label$40
	$global$0 = ($4 + [240])
	return 
	
.LABEL $label$39
	$2 = ($4 + [164])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$45 }
	
.LOOP $label$46:
	$5 = ($5 + [-24])
	$6 = *($5)
	*($5) = [0]
	if ( ($6 == 0) ){ goto $label$47 }
	if ( ((*($6 + [8]) & [1]) == 0) ){ goto $label$48 }
	CALL $10(*(($6 + [16])))
	
.LABEL $label$48
	CALL $10($6)
	
.LABEL $label$47
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$46 }
	$5 = *(($4 + [160]))
	goto $label$44 
	
.LABEL $label$45
	$5 = $7
	
.LABEL $label$44
	*($2) = $7
	CALL $10($5)
	$global$0 = ($4 + [240])
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $90 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [68]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9974])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10020])
	
.LABEL $label$2
	$6 = ($1 + [40])
	*($5 + [48]) = (uint_64)*($6) >> (uint_64)(int_64)8)
	$8 = ($1 + [8])
	$7 = ($1 + [24])
	CALL $32(($5 + [80]), $7, ($5 + [48]), $8)
	*((($5 + [16]) + [24])) = *((($5 + [80]) + [24]))
	*((($5 + [16]) + [16])) = *((($5 + [80]) + [16]))
	*($5 + [24]) = *($5 + [88])
	*($5 + [16]) = *($5 + [80])
	$9 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*($6)) ){ goto $label$3 }
	CALL eosio_assert([0], [9763])
	
.LABEL $label$3
	$10 = ((int_64)*($1 + [32]) + (int_64)*($3))
	*($1 + [32]) = $10
	if ( ((int_64)$10 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$10 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [9806])
	if ( ((int_64)*(($1 + [32])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [9825])
	if ( ((int_64)$9 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$9 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [10071])
	
.LABEL $label$4
	$3 = *(($1 + [8]))
	$6 = ( *(($1 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($6 + [52])
	$10 = (CASTING uint_64)(uint_32 $6)
	
.LOOP $label$9:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$9 }
	if ( ($3 <= [513]) ){ goto $label$11 }
	$4 = CALL $2($3)
	goto $label$10 
	
.LABEL $label$11
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$10
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [48]) = $5
	*($5 + [84]) = $8
	*($5 + [88]) = $7
	*($5 + [80]) = $1
	*($5 + [92]) = ($1 + [32])
	*($5 + [96]) = ($1 + [48])
	*($5 + [100]) = ($1 + [64])
	CALL $133(($5 + [80]), ($5 + [48]))
	CALL db_update_i64(*($1 + [72]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$12 }
	CALL $3($4)
	
.LABEL $label$12
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	*($5 + [48]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	CALL $32(($5 + [80]), $7, ($5 + [48]), $8)
	if ( (CALL $18(($5 + [16]), ($5 + [80]), [32]) == 0) ){ goto $label$14 }
	$3 = *($1 + [76])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$15 }
	*(($5 + [72])) = (int_64)0
	*(($5 + [64])) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [48]) = (int_64)0
	$3 = CALL db_idx256_find_primary(*($0), *($0 + [8]), (int_64)-6776363433588686848, ($5 + [48]), [2], $9)
	*(($1 + [76])) = $3
	
.LABEL $label$15
	CALL db_idx256_update($3, $2, ($5 + [80]), [2])
	
.LABEL $label$14
	$global$0 = ($5 + [112])
}

void .FUNC $91 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [48])
	$global$0 = $3
	*($3 + [40]) = (int_64)0
	*(($3 + [24])) = *(($2 + [24]))
	*(($3 + [16])) = *(($2 + [16]))
	*($3 + [8]) = *(($2 + [8]))
	*($3) = *($2)
	$4 = *($1)
	$5 = CALL db_idx256_lowerbound(*($4), *($4 + [8]), (int_64)-6786176242429558272, $3, [2], ($3 + [40]))
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$6 = *($3 + [40])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$6:
	$4 = ($9 + [-24])
	$10 = *($4)
	if ( ((int_64)*($10) == (int_64)$6) ){ goto $label$4 }
	$9 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$6 }
	goto $label$3 
	
.LABEL $label$5
	$4 = [0]
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($10 + [48]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [9843])
	goto $label$2 
	
.LABEL $label$3
	$10 = CALL $101($7, CALL $fimport$40(*($7), *($7 + [8]), (int_64)-6786176242429558272, $6))
	if ( ((int_32)*($10 + [48]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [9843])
	
.LABEL $label$2
	*(($10 + [56])) = $5
	$4 = [0]
	if ( ($10 == 0) ){ goto $label$1 }
	CALL $102($3, $10)
	if ( ((int_64)(((int_64)((int_64)*($2) ^ (int_64)*($3)) | (int_64)((int_64)*(($2 + [8])) ^ (int_64)*($3 + [8]))) == 0) == 0) ){ goto $label$1 }
	$4 = ( $10 ? [0] : (int_64)(((int_64)((int_64)*($2 + [16]) ^ (int_64)*($3 + [16])) | (int_64)((int_64)*(($2 + [24])) ^ (int_64)*(($3 + [24])))) == 0) )
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [48])
}

void .FUNC $92 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9974])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10020])
	
.LABEL $label$2
	CALL $102(($5 + [80]), $1)
	*((($5 + [16]) + [24])) = *((($5 + [80]) + [24]))
	*((($5 + [16]) + [16])) = *((($5 + [80]) + [16]))
	*($5 + [24]) = *($5 + [88])
	*($5 + [16]) = *($5 + [80])
	$6 = *($1)
	$7 = *($3)
	if ( ((int_64)*($7 + [8]) == (int_64)*(($1 + [24]))) ){ goto $label$3 }
	CALL eosio_assert([0], [9763])
	
.LABEL $label$3
	$8 = ((int_64)*($1 + [16]) + (int_64)*($7))
	*($1 + [16]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9806])
	$8 = *(($1 + [16]))
	
.LABEL $label$4
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9825])
	
.LABEL $label$5
	$3 = *($3 + [4])
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [40]))) ){ goto $label$6 }
	CALL eosio_assert([0], [9763])
	
.LABEL $label$6
	$8 = ((int_64)*($1 + [32]) + (int_64)*($3))
	*($1 + [32]) = $8
	if ( ((int_64)$8 <= (int_64)-4611686018427387904) ){ goto $label$11 }
	if ( ((int_64)$8 >= (int_64)4611686018427387904) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL eosio_assert([0], [9806])
	if ( ((int_64)*(($1 + [32])) < (int_64)4611686018427387904) ){ goto $label$9 }
	
.LABEL $label$10
	CALL eosio_assert([0], [9825])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [10071])
	
.LABEL $label$7
	$4 = $4
	$3 = ($4 + [-48])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = $4
	*($5 + [48]) = $5
	*($5 + [80]) = $1
	*($5 + [84]) = ($1 + [8])
	*($5 + [88]) = ($1 + [16])
	*($5 + [92]) = ($1 + [32])
	CALL $136(($5 + [80]), ($5 + [48]))
	CALL db_update_i64(*($1 + [52]), $2, $3, [48])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$12 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	CALL $102(($5 + [80]), $1)
	if ( (CALL $18(($5 + [16]), ($5 + [80]), [32]) == 0) ){ goto $label$13 }
	$3 = ($1 + [56])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$14 }
	*(($5 + [72])) = (int_64)0
	*(($5 + [64])) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [48]) = (int_64)0
	$1 = CALL db_idx256_find_primary(*($0), *($0 + [8]), (int_64)-6786176242429558272, ($5 + [48]), [2], $6)
	*($3) = $1
	
.LABEL $label$14
	CALL db_idx256_update($1, $2, ($5 + [80]), [2])
	
.LABEL $label$13
	$global$0 = ($5 + [112])
}

void .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-6786176242429558272, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $101($6, $8)
	*($3 + [36]) = [0]
	*($3 + [32]) = $6
	$7 = *(*(CALL $135(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [10382])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	$6 = *($5 + [8])
	*(($1 + [24])) = *(($6 + [8]))
	*($1 + [16]) = *($6)
	$5 = *($5 + [12])
	*($1 + [32]) = *($5)
	*(($1 + [40])) = *(($5 + [8]))
	$6 = $2
	$5 = ($6 + [-48])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = $6
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [8])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	*($3 + [44]) = ($1 + [32])
	CALL $136(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)-6786176242429558272, *(*($0 + [8])), $7, $5, [48])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$7 = *(($4 + [8]))
	$9 = *(*(($0 + [8])))
	$10 = *($1)
	CALL $102(($3 + [32]), $1)
	*($1 + [56]) = CALL db_idx256_store($7, (int_64)-6786176242429558272, $9, $10, ($3 + [32]), [2])
	$global$0 = ($3 + [64])
}

int_32 .FUNC $123 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $126(CALL $125($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9968])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9968])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $115 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [144])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [100]) = $2
	*($3 + [96]) = $2
	$5 = ($2 + $4)
	*($3 + [104]) = $5
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10130])
	$5 = *(($3 + [104]))
	$2 = *($3 + [100])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [100]) = $2
	*($3 + [80]) = (int_64)0
	*($3 + [72]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10130])
	$5 = *((($3 + [96]) + [8]))
	$2 = *($3 + [100])
	
.LABEL $label$6
	CALL memcpy(($3 + [72]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [100]) = $2
	*($3 + [24]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10130])
	$2 = *($3 + [100])
	
.LABEL $label$7
	CALL memcpy(($3 + [24]), $2, [8])
	*((($3 + [72]) + [8])) = *($3 + [24])
	*($3 + [100]) = ($2 + [8])
	*($3 + [64]) = [0]
	*($3 + [56]) = (int_64)0
	CALL $105(($3 + [96]), ($3 + [56]))
	*(($2 = (($3 + [8]) + [8]))) = *((($3 + [96]) + [8]))
	*($3 + [8]) = *($3 + [96])
	*(($4 = (($3 + [112]) + [8]))) = *($2)
	*($3 + [112]) = *($3 + [8])
	$2 = *($4)
	*((($3 + [128]) + [8])) = $2
	*(($3 + [48])) = $2
	*($3 + [24]) = $0
	*($3 + [32]) = $1
	$0 = *($3 + [112])
	*($3 + [40]) = $0
	*($3 + [128]) = $0
	CALL $85(($3 + [24]), ($3 + [88]), ($3 + [72]), ($3 + [56]))
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$8 }
	CALL $10(*((($3 + [56]) + [8])))
	
.LABEL $label$8
	$global$0 = ($3 + [144])
}

void .FUNC $122 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $120($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $123(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL $10($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

int_32 .FUNC $130 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9894])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $8([80])) + [16]) = [0]
	*($5 + [8 align=4]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [68]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [24])
	*($3 + [52]) = ($5 + [32])
	*($3 + [56]) = ($5 + [48])
	*($3 + [60]) = ($5 + [64])
	CALL $131(($3 + [40]), ($3 + [32]))
	*($5 + [76]) = [-1]
	*($5 + [72]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $88(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$11 }
	CALL $10(*(($1 + [16])))
	
.LABEL $label$11
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $131 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10130])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $105(*($1), *($0 + [4]))
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10130])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10130])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10130])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10130])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10130])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$4 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [10130])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $132 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [72]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10488])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-6776363433588686848)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [10434])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10434])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $130(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $133 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9968])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $124(*($1), *($0 + [4]))
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9968])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9968])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9968])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9968])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9968])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$4 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [9968])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($1, $4, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $134 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10130])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10130])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10130])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10130])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$5 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10130])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $1, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10130])
	$4 = *($1)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $4, [8])
	*($5 + [8]) = *($2 + [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $121 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9968])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9968])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9968])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9968])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $124(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $136 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9968])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9968])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9968])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9968])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$5 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9968])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $5, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = *($5 + [8])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9968])
	$4 = *($1)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [8]), [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $137 ()
{
	int_32 $0
	int_64 $1
	int_64 $2
	int_32 $3
	int_32 $4
	$0 = [0]
	*([0] + [8240]) = (int_64)1397703940
	*([0] + [8232]) = (int_64)0
	$1 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$1 = $2
	$3 = $0
	$0 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$1 = $2
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = ((int_32)$0 < (int_32)[6])
	$4 = ($0 + [1])
	$0 = $4
	if ( $3 ){ goto $label$5 }
	$0 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8340])
	
.LABEL $label$1
	$0 = [0]
	*([0] + [8256]) = (int_64)5522692
	*([0] + [8248]) = (int_64)0
	$1 = (int_64)21573
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$1 = $2
	$3 = $0
	$0 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$1 = $2
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$3 = ((int_32)$0 < (int_32)[6])
	$4 = ($0 + [1])
	$0 = $4
	if ( $3 ){ goto $label$10 }
	$0 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [8340])
	
.LABEL $label$6
}

void .FUNC $120 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $8($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $29($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $10($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $2
	if ( $2 ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = *($1 + [8])
	if ( *($3 + [12]) ){ goto $label$3 }
	$4 = ($3 + [12])
	$2 = *($3 + [8])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$6 }
	if ( ($5 == 0) ){ goto $label$2 }
	if ( *($5 + [12]) ){ goto $label$2 }
	$3 = ($5 + [12])
	goto $label$5 
	
.LABEL $label$6
	$5 = *($2 + [4])
	if ( ($5 == 0) ){ goto $label$1 }
	if ( *($5 + [12]) ){ goto $label$1 }
	$3 = ($5 + [12])
	
.LABEL $label$5
	*($4) = [1]
	*($2 + [12]) = ((int_32)$2 == (int_32)$0)
	*($3) = [1]
	$1 = $2
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$4 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	if ( ((int_32)*($3) != (int_32)$1) ){ goto $label$7 }
	$5 = *($1 + [4])
	*($3) = $5
	if ( ($5 == 0) ){ goto $label$8 }
	*($5 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$8
	*(($5 = ($1 + [8]))) = $2
	*((($0 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($0) == (int_32)$3) ))) = $1
	*($2) = $1
	*(($1 + [4])) = $3
	$4 = ($1 + [12])
	$2 = *($5)
	
.LABEL $label$7
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2 + [4])
	$5 = *($3)
	*($2 + [4]) = $5
	if ( ($5 == 0) ){ goto $label$9 }
	*($5 + [8]) = $2
	
.LABEL $label$9
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*($3) = $2
	return 
	
.LABEL $label$1
	if ( ((int_32)*($3) == (int_32)$1) ){ goto $label$10 }
	$5 = *($3 + [4])
	$1 = *($5)
	*($3 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$11
	*($5 + [8]) = $2
	*((($1 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($1) == (int_32)$3) ))) = $5
	*($2) = $5
	*($5) = $3
	$4 = ($5 + [12])
	$2 = *($5 + [8])
	
.LABEL $label$10
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2)
	$5 = *($3 + [4])
	*($2) = $5
	if ( ($5 == 0) ){ goto $label$12 }
	*($5 + [8]) = $2
	
.LABEL $label$12
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*(($3 + [4])) = $2
}

int_32 .FUNC $126 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9968])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9968])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $49 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $29($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $48 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9974])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10020])
	
.LABEL $label$2
	$5 = *($1 + [8])
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [9763])
	
.LABEL $label$3
	$6 = ((int_64)*($1) + (int_64)*($2))
	*($1) = $6
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9806])
	$6 = *($1)
	
.LABEL $label$4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9825])
	
.LABEL $label$5
	$2 = ($1 + [8])
	if ( ((int_64)$5 == (int_64)(uint_64)*($2) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10071])
	
.LABEL $label$6
	$7 = $3
	$3 = ($7 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	*($4 + [8]) = *($2)
	CALL memcpy(($7 + [-8]), ($4 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), (int_64)0, $3, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($4 + [16])
}

int_32 .FUNC $125 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9968])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9968])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9968])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $43 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [208])
	$global$0 = $4
	$5 = [0]
	$6 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$7 = $6)
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$7 = $8
	$9 = $5
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	$7 = $8
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$3 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $9 ){ goto $label$7 }
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((*($3) & [1]) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [8340])
	if ( ((*($3) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	if ( (*($3 + [4]) <= [257]) ){ goto $label$1 }
	CALL eosio_assert([0], [8436])
	
.LABEL $label$1
	$11 = [0]
	*(($4 + [136])) = [0]
	*($4 + [120]) = (int_64)-1
	*($4 + [128]) = (int_64)0
	$7 = *($0)
	*($4 + [104]) = $7
	*($4 + [112]) = $6
	$5 = CALL db_find_i64($7, $6, (int_64)-4157508551318700032, $6)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$9 }
	$11 = CALL $40(($4 + [104]), $5)
	if ( ((int_32)*($11 + [40]) == (int_32)($4 + [104])) ){ goto $label$8 }
	CALL eosio_assert([0], [9843])
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [8465])
	
.LABEL $label$8
	CALL require_auth(*($11 + [32]))
	$6 = *($2)
	if ( ((uint_64)((int_64)$6 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$11 }
	$7 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$7 = $8
	$9 = $5
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$7 = $8
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $9 ){ goto $label$14 }
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [8525])
	$6 = *($2)
	
.LABEL $label$10
	if ( ((int_64)$6 > (int_64)0) ){ goto $label$15 }
	CALL eosio_assert([0], [8542])
	
.LABEL $label$15
	if ( ((int_64)*(($2 + [8])) == (int_64)*($11 + [8])) ){ goto $label$16 }
	CALL eosio_assert([0], [8571])
	
.LABEL $label$16
	if ( ((int_64)*($2) <= (int_64))(*($11 + [16]) - *($11))) ){ goto $label$17 }
	CALL eosio_assert([0], [8597])
	
.LABEL $label$17
	*($4 + [144]) = $2
	CALL $44(($4 + [104]), $11, ($4 + [144]))
	$5 = ($11 + [32])
	$7 = *($5)
	$10 = ($2 + [8])
	*(($9 = (($4 + [88]) + [8]))) = *($10)
	$8 = *($2)
	*((($4 + [8]) + [8])) = *($9)
	*($4 + [88]) = $8
	*($4 + [8]) = *($4 + [88])
	CALL $45($0, $7, ($4 + [8]), $7)
	$7 = *($5)
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$18 }
	$8 = *($0)
	*($4 + [80]) = (int_64)3617214756542218240
	*($4 + [72]) = $7
	*((($9 = CALL $8([16])) + [8])) = *($4 + [80])
	*($9) = *($4 + [72])
	$7 = *($5)
	*(($5 = (($4 + [24]) + [24]))) = *($10)
	*($4 + [32]) = $1
	*($4 + [24]) = $7
	*($4 + [40]) = *($2)
	CALL $20((($4 + [24]) + [32]), $3)
	*((($4 + [144]) + [24])) = *($5)
	$5 = (($4 + [24]) + [40])
	*(($10 = (($4 + [144]) + [40]))) = *($5)
	*($5) = [0]
	$5 = ($9 + [16])
	*($4 + [196]) = $5
	*($4 + [192]) = $9
	*($4 + [200]) = $5
	*($4 + [144]) = *($4 + [24])
	*($4 + [152]) = *($4 + [32])
	*($4 + [160]) = *($4 + [40])
	*($4 + [176]) = *($4 + [56])
	*($4 + [56]) = (int_64)0
	CALL $46($8, (int_64)-3617168760277827584, ($4 + [192]), ($4 + [144]))
	if ( ((*($4 + [176]) & [1]) == 0) ){ goto $label$19 }
	CALL $10(*($10))
	
.LABEL $label$19
	$5 = *($4 + [192])
	if ( ($5 == 0) ){ goto $label$20 }
	*($4 + [196]) = $5
	CALL $10($5)
	
.LABEL $label$20
	if ( ((*(($4 + [56])) & [1]) == 0) ){ goto $label$18 }
	CALL $10(*(($4 + [64])))
	
.LABEL $label$18
	$10 = *($4 + [128])
	if ( ($10 == 0) ){ goto $label$21 }
	$2 = ($4 + [132])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$10) ){ goto $label$23 }
	
.LOOP $label$24:
	$5 = ($5 + [-24])
	$9 = *($5)
	*($5) = [0]
	if ( ($9 == 0) ){ goto $label$25 }
	CALL $10($9)
	
.LABEL $label$25
	if ( ((int_32)$10 != (int_32)$5) ){ goto $label$24 }
	$5 = *(($4 + [128]))
	goto $label$22 
	
.LABEL $label$23
	$5 = $10
	
.LABEL $label$22
	*($2) = $10
	CALL $10($5)
	
.LABEL $label$21
	$global$0 = ($4 + [208])
}

void .FUNC $42 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $29($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9968])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9968])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9968])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9968])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9968])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9894])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $8([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [16])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [32])
	CALL $119(($3 + [32]), ($3 + [24]))
	*($5 + [44]) = $1
	*($3 + [24]) = $5
	$7 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [32]) = $7)
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $42(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9894])
	
.LABEL $label$5
	$2 = CALL $2($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $8([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10130])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10130])
	
.LABEL $label$8
	CALL memcpy(($3 + [24]), $7, [8])
	$8 = *($3 + [24])
	*(($5 + [8])) = $8
	*($5 + [20]) = $1
	*($3 + [16]) = $5
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	*($3 + [24]) = $8)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $8
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $49(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $3($2)
	
.LABEL $label$9
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $10($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $46 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [96])
	$global$0 = $4
	*($4 + [16]) = [0]
	*($4 + [8]) = (int_64)0
	$5 = [0]
	$6 = [0]
	$7 = [0]
	$8 = (*($2 + [4]) - *($2))
	if ( ($8 == 0) ){ goto $label$2 }
	$5 = int_32($8 >> [4])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$7 = CALL $8($8)
	$5 = ($7 + ($5 << [4]))
	*(($4 + [16])) = $5
	*($4 + [8]) = $7
	*($4 + [12]) = $7
	$6 = *($2)
	$2 = (*(($2 + [4])) - $6)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($7, $6, $2)
	$6 = ($7 + $2)
	*($4 + [12]) = $6
	goto $label$2 
	
.LABEL $label$3
	$6 = $7
	
.LABEL $label$2
	*(($4 + [44])) = $6
	*(($4 + [48])) = $5
	*(($4 + [16])) = [0]
	*((($4 + [24]) + [36])) = [0]
	*($4 + [32]) = $1
	*($4 + [24]) = $0
	*($4 + [40]) = $7
	*($4 + [8]) = (int_64)0
	*($4 + [52 align=4]) = (int_64)0
	$7 = *($3 + [32])
	$2 = ( *(($3 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($2 + [32])
	$0 = (CASTING uint_64)(uint_32 $2)
	$2 = ($4 + [52])
	
.LOOP $label$4:
	$7 = ($7 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$4 }
	if ( ($7 == 0) ){ goto $label$6 }
	CALL $120($2, $7)
	$2 = *(($4 + [56]))
	$7 = *(($4 + [52]))
	goto $label$5 
	
.LABEL $label$6
	$2 = [0]
	$7 = [0]
	
.LABEL $label$5
	*($4 + [68]) = $7
	*($4 + [64]) = $7
	*($4 + [72]) = $2
	*($4 + [80]) = ($4 + [64])
	*($4 + [88]) = $3
	CALL $121(($4 + [88]), ($4 + [80]))
	CALL $122(($4 + [24]))
	$7 = *($4 + [52])
	if ( ($7 == 0) ){ goto $label$7 }
	*(($4 + [56])) = $7
	CALL $10($7)
	
.LABEL $label$7
	$7 = *($4 + [40])
	if ( ($7 == 0) ){ goto $label$8 }
	*(($4 + [44])) = $7
	CALL $10($7)
	
.LABEL $label$8
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$9 }
	*($4 + [12]) = $7
	CALL $10($7)
	
.LABEL $label$9
	$global$0 = ($4 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $29(($4 + [8]))
}

void .FUNC $45 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [80])
	$global$0 = $4
	*(($4 + [32])) = [0]
	*($4 + [16]) = (int_64)-1
	*($4 + [24]) = (int_64)0
	$5 = *($0)
	*($4) = $5
	$6 = *($2 + [8])
	*($4 + [8]) = $1
	$0 = CALL db_find_i64($5, $1, (int_64)3607749779137757184, (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_32)$0) < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $47($4, $0)
	if ( ((int_32)*($0 + [16]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [9843])
	
.LABEL $label$4
	*($4 + [48]) = $2
	CALL $48($4, $0, ($4 + [48]))
	$7 = *($4 + [24])
	if ( $7 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_64)CALL current_receiver() == (int_64)*($4)) ){ goto $label$5 }
	CALL eosio_assert([0], [9917])
	
.LABEL $label$5
	*(($0 = CALL $8([32])) + [16]) = $4
	*($0 + [8]) = *(($2 + [8]))
	*($0) = *($2)
	CALL memcpy(($4 + [48]), $0, [8])
	*($4 + [72]) = *($0 + [8])
	CALL memcpy((($4 + [48]) | [8]), ($4 + [72]), [8])
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8
	$7 = CALL db_store_i64(*(($4 + [8])), (int_64)3607749779137757184, $3, $1), ($4 + [48]), [16]
	*($0 + [20]) = $7)
	$2 = ($4 + [16])
	if ( (uint_64)($1 <= *($2)) ){ goto $label$6 }
	*($2) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$6
	*($4 + [72]) = $0
	$1 = (uint_64)*(($0 + [8])) >> (uint_64)(int_64)8
	*($4 + [48]) = $1)
	*($4 + [44]) = $7
	$8 = ($4 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($4 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $1
	*($2 + [16]) = $7
	*($4 + [72]) = [0]
	*($2) = $0
	*($8) = ($2 + [24])
	$0 = *($4 + [72])
	*($4 + [72]) = [0]
	if ( $0 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $49(($4 + [24]), ($4 + [72]), ($4 + [48]), ($4 + [44]))
	$0 = *($4 + [72])
	*($4 + [72]) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $10($0)
	
.LABEL $label$7
	$7 = *($4 + [24])
	if ( ($7 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$8 = ($4 + [28])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $10($2)
	
.LABEL $label$13
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($4 + [24]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $7
	
.LABEL $label$10
	*($8) = $7
	CALL $10($0)
	
.LABEL $label$1
	$global$0 = ($4 + [80])
}

void .FUNC $44 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9974])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10020])
	
.LABEL $label$2
	$5 = *($1 + [8])
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [9763])
	
.LABEL $label$3
	$6 = ((int_64)*($1) + (int_64)*($2))
	*($1) = $6
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9806])
	$6 = *($1)
	
.LABEL $label$4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9825])
	
.LABEL $label$5
	if ( ((int_64)$5 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10071])
	
.LABEL $label$6
	$2 = $3
	$3 = ($2 + [-48])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($2 + [-8])
	*($4 + [24]) = ($4 + [8])
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [16])
	*($4 + [40]) = ($1 + [32])
	CALL $41(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [44]), (int_64)0, $3, [40])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
}

int_32 .FUNC $124 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9968])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [9968])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9968])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *(*($0) + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9968])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $5, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = *($5 + [8])
	if ( ((int_32)(*(($4 + [8])) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9968])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $8 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $2($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $2($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $9 (int_32 $0)
{
	return CALL $8($0)
}

int_32 .FUNC $6 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $2($1)
	
.LABEL $label$2
	*(CALL $5()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $2(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $3($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

int_32 .FUNC $7 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $5())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $6($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

void .FUNC $4 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

int_32 .FUNC $5 ()
{
	return [8208]
}

int_32 .FUNC $2 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8264])
	return $3
	
.LABEL $label$1
	return $3
}

void .FUNC $3 (int_32 $0)
{
}

void .FUNC $0 ()
{
	CALL $4()
	CALL $137()
}

void .FUNC apply (int_64 $0, int_64 apply, int_64 $2)
{
	CALL $0()
	CALL $103($0, $1)
	CALL $104($0, $1)
	CALL $107($0, $1)
	CALL $108($0, $1)
	CALL $109($0, $1)
	CALL $110($0, $1)
	CALL $111($0, $1)
	CALL $112($0, $1)
	CALL $113($0, $1)
	CALL $114($0, $1)
	CALL $115($0, $1)
	CALL $116($0, $1)
	CALL $117($0, $1)
	CALL $118($0, $1)
	CALL eosio_assert_code([0], (int_64)8000000000000000000)
	CALL eosio_assert_code([0], (int_64)8000000000000000001)
	CALL $31([0])
	((int_64)$0 == (int_64)$1)
	((int_64)5031766152489992192 == (int_64)$2)
	((int_64)8516769789752901632 == (int_64)$2)
	((int_64)8516770215600755200 == (int_64)$2)
	((int_64)-4993669930013425664 == (int_64)$2)
	((int_64)-3617168760277827584 == (int_64)$2)
	((int_64)-6533262907872903168 == (int_64)$2)
	((int_64)4929617502180212736 == (int_64)$2)
	((int_64)-4157661383434960896 == (int_64)$2)
	((int_64)-3102536759825661952 == (int_64)$2)
	((int_64)-4994048603321270272 == (int_64)$2)
	((int_64)-6777474055759986688 == (int_64)$2)
	((int_64)-6776443660619743232 == (int_64)$2)
	((int_64)-6775405376319324160 == (int_64)$2)
	((int_64)-6778290840154406912 == (int_64)$2)
	((int_64)$0 != (int_64)6138663577826885632)
	((int_64)6138663577826885632 == (int_64)$1)
	((int_64)-6569208335818555392 == (int_64)$2)
}

void .FUNC $14 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $3($0)
	
.LABEL $label$1
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	CALL $14($0, $1)
}

int_32 .FUNC $16 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $17 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$6:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$4 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$7 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = $2
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = $2
	
.LABEL $label$3
	if ( ((int_32)*($0) != (int_32)($1 & [255])) ){ goto $label$8 }
	if ( $5 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$8
	if ( ($5 <= [4]) ){ goto $label$10 }
	$3 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$3)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$1 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	return $0
}

void .FUNC $10 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $3($0)
	
.LABEL $label$1
}

void .FUNC $11 (int_32 $0)
{
	CALL $10($0)
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $7(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $7(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $13 (int_32 $0, int_32 $1)
{
	return CALL $12($0, $1)
}

void .FUNC $75 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [112])
	$global$0 = $3
	CALL require_auth($1)
	if ( CALL is_account($1) ){ goto $label$1 }
	CALL eosio_assert([0], [9019])
	
.LABEL $label$1
	$4 = *($2 + [8])
	*((($3 + [88]) + [8])) = $4
	$5 = *($2)
	*((($3 + [16]) + [8])) = $4
	*($3 + [88]) = $5
	*($3 + [16]) = $5
	CALL $70($0, ($3 + [16]))
	$6 = [0]
	*(($3 + [80])) = [0]
	*($3 + [64]) = (int_64)-1
	*($3 + [72]) = (int_64)0
	$5 = *($0)
	*($3 + [48]) = $5
	*($3 + [56]) = $1
	$7 = CALL db_find_i64($5, $1, (int_64)-8281832574272782336, (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_32)$7) <= (int_32)[-1]) ){ goto $label$4 }
	$6 = CALL $63(($3 + [48]), $7)
	if ( ((int_32)*($6 + [16]) == (int_32)($3 + [48])) ){ goto $label$5 }
	CALL eosio_assert([0], [9843])
	
.LABEL $label$5
	if ( ((int_64)*($6) <= (int_64)0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL eosio_assert([0], [9042])
	if ( ((int_64)*([0]) > (int_64)0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL eosio_assert([0], [9080])
	
.LABEL $label$2
	if ( ((int_64)*(($2 + [8])) == (int_64)*($6 + [8])) ){ goto $label$6 }
	CALL eosio_assert([0], [9704])
	
.LABEL $label$6
	if ( ((int_64)*($2) <= (int_64)*($6)) ){ goto $label$7 }
	CALL eosio_assert([0], [9117])
	
.LABEL $label$7
	if ( ((int_64)*(($2 + [8])) != (int_64)*(($6 + [8]))) ){ goto $label$11 }
	if ( ((int_64)*($2) != (int_64)*($6)) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL eosio_assert([0], [9704])
	if ( ((int_64)*($2) == (int_64)*($6)) ){ goto $label$9 }
	
.LABEL $label$10
	*($3 + [104]) = $2
	CALL $76(($3 + [48]), $6, $1, ($3 + [104]))
	goto $label$8 
	
.LABEL $label$9
	if ( $6 ){ goto $label$12 }
	CALL eosio_assert([0], [10170])
	CALL eosio_assert([0], [10204])
	
.LABEL $label$12
	$7 = CALL db_next_i64(*($6 + [20]), ($3 + [104]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$13 }
	CALL $63(($3 + [48]), $7)
	
.LABEL $label$13
	CALL $77(($3 + [48]), $6)
	
.LABEL $label$8
	$5 = *(($2 + [8]))
	*((($3 + [32]) + [8])) = $5
	$4 = *($2)
	*(($3 + [8])) = $5
	*($3 + [32]) = $4
	*($3) = $4
	CALL $78($0, $1, $3)
	$0 = *($3 + [72])
	if ( ($0 == 0) ){ goto $label$14 }
	$7 = ($3 + [76])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$16 }
	
.LOOP $label$17:
	$2 = ($2 + [-24])
	$6 = *($2)
	*($2) = [0]
	if ( ($6 == 0) ){ goto $label$18 }
	CALL $10($6)
	
.LABEL $label$18
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$17 }
	$2 = *(($3 + [72]))
	goto $label$15 
	
.LABEL $label$16
	$2 = $0
	
.LABEL $label$15
	*($7) = $0
	CALL $10($2)
	
.LABEL $label$14
	$global$0 = ($3 + [112])
}

int_32 .FUNC $18 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

void .FUNC $19 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $58 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	$5 = ($global$0 - [256])
	$global$0 = $5
	*($5 + [208]) = $2
	*($5 + [216]) = $1
	if ( ((int_64)$1 != (int_64)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [8694])
	
.LABEL $label$1
	CALL require_auth($1)
	if ( CALL is_account($2) ){ goto $label$2 }
	CALL eosio_assert([0], [8718])
	
.LABEL $label$2
	$6 = *($3 + [8])
	*(($5 + [200])) = [0]
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	*($5 + [176]) = $6)
	*($5 + [184]) = (int_64)-1
	*($5 + [192]) = (int_64)0
	*($5 + [168]) = *($0)
	$7 = CALL $59(($5 + [168]), $6, [8744])
	CALL require_recipient($1)
	CALL require_recipient($2)
	$8 = *($3)
	if ( ((uint_64)((int_64)$8 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$5 }
	$9 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$1 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$8 }
	$6 = $1
	$10 = $9
	$9 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	$6 = $1
	
.LOOP $label$9:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$5 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$10 = ((int_32)$9 < (int_32)[6])
	$11 = ($9 + [1])
	$9 = $11
	if ( $10 ){ goto $label$9 }
	$9 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( ((int_64)$8 <= (int_64)0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL eosio_assert([0], [8525])
	if ( ((int_64)*($3) > (int_64)0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [8763])
	
.LABEL $label$3
	if ( ((int_64)*(($3 + [8])) == (int_64)*($7 + [8])) ){ goto $label$10 }
	CALL eosio_assert([0], [8571])
	
.LABEL $label$10
	if ( ((*($4) & [1]) == 0) ){ goto $label$11 }
	if ( (*($4 + [4]) <= [257]) ){ goto $label$11 }
	CALL eosio_assert([0], [8436])
	
.LABEL $label$11
	$6 = *($3)
	$8 = *($5 + [216])
	$1 = *(($3 + [8]))
	*((($5 + [56]) + [8])) = $1
	*($5 + [232]) = $1
	*($5 + [56]) = $6
	*($5 + [224]) = $6
	CALL $60(($5 + [240]), $0, $8, ($5 + [56]))
	if ( ((int_64)$1 == (int_64)*($5 + [248])) ){ goto $label$12 }
	CALL eosio_assert([0], [9704])
	
.LABEL $label$12
	if ( ((int_64)$6 <= (int_64)*($5 + [240])) ){ goto $label$13 }
	CALL eosio_assert([0], [9327])
	
.LABEL $label$13
	$9 = CALL has_auth($2)
	$10 = ($3 + [8])
	$1 = *($10)
	*((($5 + [152]) + [8])) = $1
	$8 = *(( ($5 + [208]) ? ($5 + [216]) : $9 ))
	$6 = *($3)
	*((($5 + [40]) + [8])) = $1
	*($5 + [152]) = $6
	*($5 + [40]) = $6
	$1 = *($5 + [216])
	CALL $55($0, $1, ($5 + [40]))
	$12 = *($10)
	*((($5 + [136]) + [8])) = $12
	$6 = *($3)
	*((($5 + [24]) + [8])) = $12
	*($5 + [24]) = $6
	*($5 + [136]) = $6
	CALL $45($0, $2, ($5 + [24]), $8)
	$6 = *($0)
	if ( ((int_64)$1 == (int_64)$6) ){ goto $label$14 }
	if ( ((int_64)$6 != (int_64)$2) ){ goto $label$14 }
	*(($5 + [248])) = [0]
	*($5 + [240]) = (int_64)0
	$9 = CALL $16([8795])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$21 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$24 }
	*($5 + [240]) = ($9 << [1])
	$10 = (($5 + [240]) | [1])
	if ( $9 ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	$11 = (($9 + [16]) & [-16])
	$10 = CALL $8($11)
	*($5 + [240]) = ($11 | [1])
	*($5 + [248]) = $10
	*($5 + [244]) = $9
	
.LABEL $label$23
	CALL memcpy($10, [8795], $9)
	
.LABEL $label$22
	*(($10 + $9)) = [0]
	$9 = CALL $33($4, ($5 + [240]))
	if ( ((*($5 + [240]) & [1]) == 0) ){ goto $label$25 }
	CALL $10(*($5 + [248]))
	
.LABEL $label$25
	if ( $9 ){ goto $label$14 }
	*(($5 + [248])) = [0]
	*($5 + [240]) = (int_64)0
	$9 = CALL $16([8797])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$20 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$28 }
	*($5 + [240]) = ($9 << [1])
	$10 = (($5 + [240]) | [1])
	if ( $9 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	$11 = (($9 + [16]) & [-16])
	$10 = CALL $8($11)
	*($5 + [240]) = ($11 | [1])
	*($5 + [248]) = $10
	*($5 + [244]) = $9
	
.LABEL $label$27
	CALL memcpy($10, [8797], $9)
	
.LABEL $label$26
	*(($10 + $9)) = [0]
	CALL $34(($5 + [120]), $4, ($5 + [240]))
	if ( ((*($5 + [240]) & [1]) == 0) ){ goto $label$29 }
	CALL $10(*($5 + [248]))
	
.LABEL $label$29
	*($5 + [112]) = [0]
	*($5 + [104]) = (int_64)0
	*($5 + [96]) = [0]
	*($5 + [88]) = (int_64)0
	$9 = *($5 + [120])
	if ( ((int_32)*($5 + [124]) == (int_32)$9) ){ goto $label$15 }
	CALL $22(($5 + [104]), $9)
	$9 = *($5 + [120])
	if ( (((int_32)(*($5 + [124]) - $9) / (int_32)[12]) <= [2]) ){ goto $label$15 }
	CALL $22(($5 + [88]), ($9 + [12]))
	CALL $36(($5 + [72]), ($5 + [88]))
	*(($5 + [248])) = [0]
	*($5 + [240]) = (int_64)0
	$9 = CALL $16([8799])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$19 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$32 }
	*($5 + [240]) = ($9 << [1])
	$10 = (($5 + [240]) | [1])
	if ( $9 ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	$11 = (($9 + [16]) & [-16])
	$10 = CALL $8($11)
	*($5 + [240]) = ($11 | [1])
	*($5 + [248]) = $10
	*($5 + [244]) = $9
	
.LABEL $label$31
	CALL memcpy($10, [8799], $9)
	
.LABEL $label$30
	$11 = [0]
	*(($10 + $9)) = [0]
	$10 = CALL $37(($5 + [72]), ($5 + [224]), ($5 + [240]))
	$9 = *($10)
	if ( $9 ){ goto $label$33 }
	*(($9 = CALL $8([40])) + [28 align=4]) = (int_64)0
	*($9) = (int_64)0
	$4 = ($5 + [248])
	*(($9 + [24])) = *($4)
	*($9 + [16 align=4]) = *($5 + [240])
	*($9 + [8]) = *($5 + [224])
	*($10) = $9
	*($9 + [36]) = [0]
	*($4) = [0]
	*($5 + [240]) = (int_64)0
	$4 = $9
	$7 = *(*($5 + [72]))
	if ( ($7 == 0) ){ goto $label$34 }
	*($5 + [72]) = $7
	$4 = *($10)
	
.LABEL $label$34
	CALL $38(*($5 + [76]), $4)
	*($5 + [80]) = (*($5 + [80]) + [1])
	
.LABEL $label$33
	$4 = ($9 + [28])
	$9 = *($4)
	$10 = CALL $16([8806])
	if ( ((int_32)$10 == (int_32)( *(($9 + [32])) ? uint_32($9 >> [1]) : ($9 & [1]) )) ){ goto $label$36 }
	if ( (*($5 + [240]) & [1]) ){ goto $label$35 }
	goto $label$18 
	
.LABEL $label$36
	$11 = (CALL $27($4, [0], [-1], [8806], $10) == 0)
	if ( ((*($5 + [240]) & [1]) == 0) ){ goto $label$18 }
	
.LABEL $label$35
	CALL $10(*($5 + [248]))
	if ( ($11 == 0) ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$21
	CALL $19(($5 + [240]))
	
.LABEL $label$20
	CALL $19(($5 + [240]))
	
.LABEL $label$19
	CALL $19(($5 + [240]))
	
.LABEL $label$18
	if ( ($11 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	$6 = *($0)
	*(($9 = CALL $8([16])) + [8]) = (int_64)3617214756542218240
	*($9) = $6
	*($5 + [232]) = ($5 + [104])
	*(($5 + [16])) = *($5 + [232])
	*($5 + [228]) = $3
	*($5 + [240]) = $9
	$9 = ($9 + [16])
	*($5 + [248]) = $9
	*($5 + [244]) = $9
	*($5 + [224]) = ($5 + [216])
	*($5 + [8]) = *($5 + [224])
	CALL $61($6, (int_64)-6777474055759986688, ($5 + [240]), ($5 + [8]))
	$9 = *($5 + [240])
	if ( ($9 == 0) ){ goto $label$16 }
	*($5 + [244]) = $9
	CALL $10($9)
	
.LABEL $label$16
	CALL $62(($5 + [72]), *($5 + [76]))
	
.LABEL $label$15
	if ( (*($5 + [88]) & [1]) ){ goto $label$40 }
	if ( (*($5 + [104]) & [1]) ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$40
	CALL $10(*(($5 + [96])))
	if ( ((*($5 + [104]) & [1]) == 0) ){ goto $label$38 }
	
.LABEL $label$39
	CALL $10(*(($5 + [112])))
	$11 = *($5 + [120])
	if ( $11 ){ goto $label$37 }
	goto $label$14 
	
.LABEL $label$38
	$11 = *($5 + [120])
	if ( ($11 == 0) ){ goto $label$14 }
	
.LABEL $label$37
	$10 = *($5 + [124])
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$42 }
	
.LOOP $label$43:
	$9 = ($10 + [-12])
	if ( ((*($9) & [1]) == 0) ){ goto $label$44 }
	CALL $10(*(($10 + [-4])))
	
.LABEL $label$44
	$10 = $9
	if ( ((int_32)$11 != (int_32)$9) ){ goto $label$43 }
	$9 = *($5 + [120])
	goto $label$41 
	
.LABEL $label$42
	$9 = $11
	
.LABEL $label$41
	*($5 + [124]) = $11
	CALL $10($9)
	
.LABEL $label$14
	$11 = *($5 + [192])
	if ( ($11 == 0) ){ goto $label$45 }
	$3 = ($5 + [196])
	$9 = *($3)
	if ( ((int_32)$9 == (int_32)$11) ){ goto $label$47 }
	
.LOOP $label$48:
	$9 = ($9 + [-24])
	$10 = *($9)
	*($9) = [0]
	if ( ($10 == 0) ){ goto $label$49 }
	CALL $10($10)
	
.LABEL $label$49
	if ( ((int_32)$11 != (int_32)$9) ){ goto $label$48 }
	$9 = *(($5 + [192]))
	goto $label$46 
	
.LABEL $label$47
	$9 = $11
	
.LABEL $label$46
	*($3) = $11
	CALL $10($9)
	
.LABEL $label$45
	$global$0 = ($5 + [256])
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $59 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9843])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4157508551318700032, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $40($0, $5)
	if ( ((int_32)*($6 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9843])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

void .FUNC $50 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [128])
	$global$0 = $4
	$5 = *($0)
	*($4 + [64]) = (int_64)3617214756542218240
	*($4 + [56]) = $5
	*((($6 = CALL $8([16])) + [8])) = *($4 + [64])
	*($6) = *($4 + [56])
	*(($7 = (($4 + [16]) + [16]))) = *(($2 + [8]))
	*($4 + [16]) = $1
	*($4 + [24]) = *($2)
	CALL $20(($4 + [40]), $3)
	*((($4 + [72]) + [16])) = *($7)
	$3 = (($4 + [16]) + [32])
	*(($7 = (($4 + [72]) + [32]))) = *($3)
	*($3) = [0]
	$3 = ($6 + [16])
	*($4 + [116]) = $3
	*($4 + [112]) = $6
	*($4 + [120]) = $3
	*($4 + [72]) = *($4 + [16])
	*($4 + [80]) = *($4 + [24])
	*($4 + [96]) = *($4 + [40])
	*($4 + [40]) = (int_64)0
	CALL $51($5, (int_64)8516769789752901632, ($4 + [112]), ($4 + [72]))
	if ( ((*($4 + [96]) & [1]) == 0) ){ goto $label$1 }
	CALL $10(*($7))
	
.LABEL $label$1
	$6 = *($4 + [112])
	if ( ($6 == 0) ){ goto $label$2 }
	*($4 + [116]) = $6
	CALL $10($6)
	
.LABEL $label$2
	if ( ((*(($4 + [40])) & [1]) == 0) ){ goto $label$3 }
	CALL $10(*(($4 + [48])))
	
.LABEL $label$3
	$5 = *($0)
	*($4 + [64]) = (int_64)3617214756542218240
	*($4 + [56]) = $5
	*((($6 = CALL $8([16])) + [8])) = *($4 + [64])
	*($6) = *($4 + [56])
	*($4 + [80]) = $2
	*(($4 + [8])) = *($4 + [80])
	$2 = ($6 + [16])
	*($4 + [116]) = $2
	*($4 + [112]) = $6
	*($4 + [120]) = $2
	*($4 + [72]) = $1
	*($4) = $1
	CALL $52($5, (int_64)-4157661383434960896, ($4 + [112]), $4)
	$2 = *($4 + [112])
	if ( ($2 == 0) ){ goto $label$4 }
	*($4 + [116]) = $2
	CALL $10($2)
	
.LABEL $label$4
	$global$0 = ($4 + [128])
}

void .FUNC $51 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [64])
	$global$0 = $4
	*($4 + [16]) = [0]
	*($4 + [8]) = (int_64)0
	$5 = [0]
	$6 = [0]
	$7 = [0]
	$8 = (*($2 + [4]) - *($2))
	if ( ($8 == 0) ){ goto $label$2 }
	$5 = int_32($8 >> [4])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$7 = CALL $8($8)
	$5 = ($7 + ($5 << [4]))
	*(($4 + [16])) = $5
	*($4 + [8]) = $7
	*($4 + [12]) = $7
	$6 = *($2)
	$2 = (*(($2 + [4])) - $6)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($7, $6, $2)
	$6 = ($7 + $2)
	*($4 + [12]) = $6
	goto $label$2 
	
.LABEL $label$3
	$6 = $7
	
.LABEL $label$2
	*(($4 + [44])) = $6
	*(($4 + [48])) = $5
	*(($4 + [16])) = [0]
	*($4 + [32]) = $1
	*($4 + [24]) = $0
	*($4 + [40]) = $7
	*($4 + [8]) = (int_64)0
	CALL $127(($4 + [52]), $3)
	CALL $122(($4 + [24]))
	$7 = *($4 + [52])
	if ( ($7 == 0) ){ goto $label$4 }
	*(($4 + [56])) = $7
	CALL $10($7)
	
.LABEL $label$4
	$7 = *($4 + [40])
	if ( ($7 == 0) ){ goto $label$5 }
	*(($4 + [44])) = $7
	CALL $10($7)
	
.LABEL $label$5
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$6 }
	*($4 + [12]) = $7
	CALL $10($7)
	
.LABEL $label$6
	$global$0 = ($4 + [64])
	return (unreachable)
	
.LABEL $label$1
	CALL $29(($4 + [8]))
}

void .FUNC $52 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [96])
	$global$0 = $4
	*($4 + [16]) = [0]
	*($4 + [8]) = (int_64)0
	$5 = [0]
	$6 = [0]
	$7 = [0]
	$8 = (*($2 + [4]) - *($2))
	if ( ($8 == 0) ){ goto $label$2 }
	$5 = int_32($8 >> [4])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$7 = CALL $8($8)
	$5 = ($7 + ($5 << [4]))
	*(($4 + [16])) = $5
	*($4 + [8]) = $7
	*($4 + [12]) = $7
	$6 = *($2)
	$2 = (*(($2 + [4])) - $6)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($7, $6, $2)
	$6 = ($7 + $2)
	*($4 + [12]) = $6
	goto $label$2 
	
.LABEL $label$3
	$6 = $7
	
.LABEL $label$2
	*(($4 + [44])) = $6
	*((($4 + [24]) + [24])) = $5
	*(($4 + [16])) = [0]
	*(($4 + [60])) = [0]
	*($4 + [32]) = $1
	*($4 + [24]) = $0
	*($4 + [40]) = $7
	*($4 + [8]) = (int_64)0
	*($4 + [52 align=4]) = (int_64)0
	CALL $120(($4 + [52]), [24])
	$5 = ($4 + [56])
	$7 = *($5)
	$2 = *($4 + [52])
	*($4 + [68]) = $2
	*($4 + [64]) = $2
	*($4 + [72]) = $7
	*($4 + [80]) = ($4 + [64])
	*($4 + [88]) = $3
	CALL $128(($4 + [88]), ($4 + [80]))
	CALL $122(($4 + [24]))
	$7 = *($4 + [52])
	if ( ($7 == 0) ){ goto $label$4 }
	*($5) = $7
	CALL $10($7)
	
.LABEL $label$4
	$7 = *($4 + [40])
	if ( ($7 == 0) ){ goto $label$5 }
	*(($4 + [44])) = $7
	CALL $10($7)
	
.LABEL $label$5
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$6 }
	*($4 + [12]) = $7
	CALL $10($7)
	
.LABEL $label$6
	$global$0 = ($4 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $29(($4 + [8]))
}

void .FUNC $53 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [80])
	$global$0 = $3
	$4 = [0]
	$5 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	$6 = $5)
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$3 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$7 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((*($2) & [1]) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [8340])
	if ( ((*($2) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	if ( (*($2 + [4]) <= [257]) ){ goto $label$1 }
	CALL eosio_assert([0], [8436])
	
.LABEL $label$1
	$2 = [0]
	*(($3 + [72])) = [0]
	*($3 + [56]) = (int_64)-1
	*($3 + [64]) = (int_64)0
	$6 = *($0)
	*($3 + [40]) = $6
	*($3 + [48]) = $5
	$4 = CALL db_find_i64($6, $5, (int_64)-4157508551318700032, $5)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$9 }
	$2 = CALL $40(($3 + [40]), $4)
	if ( ((int_32)*($2 + [40]) == (int_32)($3 + [40])) ){ goto $label$8 }
	CALL eosio_assert([0], [9843])
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [8631])
	
.LABEL $label$8
	CALL require_auth(*($2 + [32]))
	$5 = *($1)
	if ( ((uint_64)((int_64)$5 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$11 }
	$6 = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$6 = $7
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$14 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [8525])
	$5 = *($1)
	
.LABEL $label$10
	if ( ((int_64)$5 > (int_64)0) ){ goto $label$15 }
	CALL eosio_assert([0], [8664])
	
.LABEL $label$15
	$4 = ($1 + [8])
	if ( ((int_64)*($4) == (int_64)*($2 + [8])) ){ goto $label$16 }
	CALL eosio_assert([0], [8571])
	
.LABEL $label$16
	*($3 + [32]) = $1
	CALL $54(($3 + [40]), $2, ($3 + [32]))
	$6 = *(($2 + [32]))
	*(($8 = (($3 + [16]) + [8]))) = *($4)
	$7 = *($1)
	*(($3 + [8])) = *($8)
	*($3 + [16]) = $7
	*($3) = *($3 + [16])
	CALL $55($0, $6, $3)
	$9 = *($3 + [64])
	if ( ($9 == 0) ){ goto $label$17 }
	$1 = ($3 + [68])
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$19 }
	
.LOOP $label$20:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$21 }
	CALL $10($8)
	
.LABEL $label$21
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$20 }
	$4 = *(($3 + [64]))
	goto $label$18 
	
.LABEL $label$19
	$4 = $9
	
.LABEL $label$18
	*($1) = $9
	CALL $10($4)
	
.LABEL $label$17
	$global$0 = ($3 + [80])
}

void .FUNC $54 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9974])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10020])
	
.LABEL $label$2
	$5 = *($1 + [8])
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [9613])
	
.LABEL $label$3
	$6 = (int_64)
	*($1) = $6(*($1) - *($2)))
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9661])
	$6 = *($1)
	
.LABEL $label$4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9683])
	
.LABEL $label$5
	if ( ((int_64)$5 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10071])
	
.LABEL $label$6
	$2 = $3
	$3 = ($2 + [-48])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($2 + [-8])
	*($4 + [24]) = ($4 + [8])
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [16])
	*($4 + [40]) = ($1 + [32])
	CALL $41(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [44]), (int_64)0, $3, [40])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
}

void .FUNC $34 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = ($2 + [1])
	$6 = ($1 + [1])
	$7 = *($1 + [4])
	$8 = *($1)
	$9 = ($2 + [4])
	
.LOOP $label$1:
	$10 = ($8 & [1])
	$7 = ( $7 ? uint_32(($8 & [254]) >> [1]) : $10 )
	if ( ($7 <= $4) ){ goto $label$3 }
	$11 = $4
	$13 = ($8 & [1])
	$8 = *($2)
	$8 = ( *($9) ? uint_32($8 >> [1]) : $13 )
	if ( ($8 == 0) ){ goto $label$2 }
	$7 = ($12 + $4)
	$12 = ( *(($1 + [8])) ? $6 : $10 )
	$10 = ($12 + $7)
	$11 = ($10 - $7)
	if ( ((int_32)$11 < (int_32)$8) ){ goto $label$3 }
	$14 = ( *(($2 + [8])) ? $5 : $13 )
	$13 = *($14)
	
.LOOP $label$4:
	$11 = (($11 - $8) + [1])
	if ( ($11 == 0) ){ goto $label$3 }
	$11 = CALL $17($7, $13, $11)
	if ( ($11 == 0) ){ goto $label$3 }
	if ( (CALL $18($11, $14, $8) == 0) ){ goto $label$5 }
	$7 = ($11 + [1])
	$11 = ($10 - $7)
	if ( ((int_32)$11 >= (int_32)$8) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$3 }
	$11 = ($11 - $12)
	if ( ((int_32)$11 != (int_32)[-1]) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = *($1)
	if ( ($8 & [1]) ){ goto $label$6 }
	$11 = uint_32($8 >> [1])
	goto $label$2 
	
.LABEL $label$6
	$11 = *(($1 + [4]))
	
.LABEL $label$2
	$8 = CALL $21($3, $1, $4, ($11 - $4), $1)
	$4 = ($0 + [4])
	$7 = *($4)
	if ( ((int_32)$7 == (int_32)*(($0 + [8]))) ){ goto $label$8 }
	CALL $20($7, $8)
	*($4) = (*($4) + [12])
	goto $label$7 
	
.LABEL $label$8
	CALL $35($0, $8)
	
.LABEL $label$7
	$4 = *($2)
	$10 = *($9)
	if ( ((*($3) & [1]) == 0) ){ goto $label$9 }
	CALL $10(*(($3 + [8])))
	
.LABEL $label$9
	$8 = *($1)
	$7 = *(($1 + [4]))
	$13 = ( $7 ? uint_32($8 >> [1]) : ($8 & [1]) )
	if ( ((uint_32)$11 >= (uint_32)$13) ){ goto $label$10 }
	$4 = (( $10 ? uint_32($4 >> [1]) : ($4 & [1]) ) + $11)
	if ( ($4 <= $13) ){ goto $label$1 }
	
.LABEL $label$10
	$global$0 = ($3 + [16])
}

int_32 .FUNC $56 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9843])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3607749779137757184, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $47($0, $5)
	if ( ((int_32)*($6 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9843])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

void .FUNC $57 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9974])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10020])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9613])
	
.LABEL $label$3
	$7 = (int_64)
	*($1) = $7(*($1) - *($3)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9661])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9683])
	
.LABEL $label$5
	$3 = ($1 + [8])
	if ( ((int_64)$6 == (int_64)(uint_64)*($3) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10071])
	
.LABEL $label$6
	$8 = $4
	$4 = ($8 + [-16])
	$global$0 = $4
	CALL memcpy($4, $1, [8])
	*($5 + [8]) = *($3)
	CALL memcpy(($8 + [-8]), ($5 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $116 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [144])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [100]) = $2
	*($3 + [96]) = $2
	$5 = ($2 + $4)
	*($3 + [104]) = $5
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10130])
	$5 = *(($3 + [104]))
	$2 = *($3 + [100])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [100]) = $2
	*($3 + [80]) = (int_64)0
	*($3 + [72]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10130])
	$5 = *((($3 + [96]) + [8]))
	$2 = *($3 + [100])
	
.LABEL $label$6
	CALL memcpy(($3 + [72]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [100]) = $2
	*($3 + [24]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10130])
	$2 = *($3 + [100])
	
.LABEL $label$7
	CALL memcpy(($3 + [24]), $2, [8])
	*((($3 + [72]) + [8])) = *($3 + [24])
	*($3 + [100]) = ($2 + [8])
	*($3 + [64]) = [0]
	*($3 + [56]) = (int_64)0
	CALL $105(($3 + [96]), ($3 + [56]))
	*(($2 = (($3 + [8]) + [8]))) = *((($3 + [96]) + [8]))
	*($3 + [8]) = *($3 + [96])
	*(($4 = (($3 + [112]) + [8]))) = *($2)
	*($3 + [112]) = *($3 + [8])
	$2 = *($4)
	*((($3 + [128]) + [8])) = $2
	*(($3 + [48])) = $2
	*($3 + [24]) = $0
	*($3 + [32]) = $1
	$0 = *($3 + [112])
	*($3 + [40]) = $0
	*($3 + [128]) = $0
	CALL $95(($3 + [24]), ($3 + [88]), ($3 + [72]), ($3 + [56]))
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$8 }
	CALL $10(*((($3 + [56]) + [8])))
	
.LABEL $label$8
	$global$0 = ($3 + [144])
}

void .FUNC $117 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [144])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [100]) = $2
	*($3 + [96]) = $2
	$5 = ($2 + $4)
	*($3 + [104]) = $5
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10130])
	$5 = *(($3 + [104]))
	$2 = *($3 + [100])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [100]) = $2
	*($3 + [80]) = (int_64)0
	*($3 + [72]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10130])
	$5 = *((($3 + [96]) + [8]))
	$2 = *($3 + [100])
	
.LABEL $label$6
	CALL memcpy(($3 + [72]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [100]) = $2
	*($3 + [24]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10130])
	$2 = *($3 + [100])
	
.LABEL $label$7
	CALL memcpy(($3 + [24]), $2, [8])
	*((($3 + [72]) + [8])) = *($3 + [24])
	*($3 + [100]) = ($2 + [8])
	*($3 + [64]) = [0]
	*($3 + [56]) = (int_64)0
	CALL $105(($3 + [96]), ($3 + [56]))
	*(($2 = (($3 + [8]) + [8]))) = *((($3 + [96]) + [8]))
	*($3 + [8]) = *($3 + [96])
	*(($4 = (($3 + [112]) + [8]))) = *($2)
	*($3 + [112]) = *($3 + [8])
	$2 = *($4)
	*((($3 + [128]) + [8])) = $2
	*(($3 + [48])) = $2
	*($3 + [24]) = $0
	*($3 + [32]) = $1
	$0 = *($3 + [112])
	*($3 + [40]) = $0
	*($3 + [128]) = $0
	CALL $97(($3 + [24]), ($3 + [88]), ($3 + [72]), ($3 + [56]))
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$8 }
	CALL $10(*((($3 + [56]) + [8])))
	
.LABEL $label$8
	$global$0 = ($3 + [144])
}

void .FUNC $114 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [56]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10130])
	
.LABEL $label$5
	CALL memcpy(($3 + [56]), $2, [8])
	*($3 + [48]) = (int_64)0
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10130])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [40]), $5, [8])
	*($3 + [8]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10130])
	
.LABEL $label$7
	CALL memcpy(($3 + [8]), $5, [8])
	*((($3 + [40]) + [8])) = *($3 + [8])
	*((($3 + [8]) + [24])) = $4
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [24])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	CALL $83(($3 + [8]), *($3 + [56]), ($3 + [40]))
	$global$0 = ($3 + [64])
}

void .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = *($0)
	$3 = ((int_32)(*($0 + [4]) - $2) / (int_32)[12])
	$4 = ($3 + [1])
	if ( ((uint_32)$4 >= (uint_32)[357913942]) ){ goto $label$2 }
	$5 = [357913941]
	$2 = ((int_32)(*($0 + [8]) - $2) / (int_32)[12])
	if ( ((uint_32)$2 > (uint_32)[178956969]) ){ goto $label$4 }
	$5 = ($2 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = CALL $8(((int_32)$5 * (int_32)[12]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $29($0)
	
.LABEL $label$1
	$4 = ($2 + ((int_32)$5 * (int_32)[12]))
	$1 = CALL $20(($2 + ((int_32)$3 * (int_32)[12])), $1)
	$6 = ($1 + [12])
	$2 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = ($5 + [-4])
	*(($1 + [-4])) = *($3)
	$5 = ($5 + [-12])
	*(($1 = ($1 + [-12]))) = *($5)
	*($5) = (int_64)0
	*($3) = [0]
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$3 = $2
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = ($2 + [-12])
	if ( ((*($5) & [1]) == 0) ){ goto $label$10 }
	CALL $10(*(($2 + [-4])))
	
.LABEL $label$10
	$2 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($3 == 0) ){ goto $label$11 }
	CALL $10($3)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $112 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [56]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10130])
	
.LABEL $label$5
	CALL memcpy(($3 + [56]), $2, [8])
	*($3 + [48]) = (int_64)0
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10130])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [40]), $5, [8])
	*($3 + [8]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10130])
	
.LABEL $label$7
	CALL memcpy(($3 + [8]), $5, [8])
	*((($3 + [40]) + [8])) = *($3 + [8])
	*((($3 + [8]) + [24])) = $4
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [24])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	CALL $69(($3 + [8]), *($3 + [56]), ($3 + [40]))
	$global$0 = ($3 + [64])
}

void .FUNC $113 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [56]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10130])
	
.LABEL $label$5
	CALL memcpy(($3 + [56]), $2, [8])
	*($3 + [48]) = (int_64)0
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10130])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [40]), $5, [8])
	*($3 + [8]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10130])
	
.LABEL $label$7
	CALL memcpy(($3 + [8]), $5, [8])
	*((($3 + [40]) + [8])) = *($3 + [8])
	*((($3 + [8]) + [24])) = $4
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [24])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	CALL $75(($3 + [8]), *($3 + [56]), ($3 + [40]))
	$global$0 = ($3 + [64])
}

void .FUNC $110 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [56]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10130])
	
.LABEL $label$5
	CALL memcpy(($3 + [56]), $2, [8])
	*($3 + [48]) = (int_64)0
	*($3 + [8]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10130])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [8]), $5, [8])
	*($3 + [48]) = *($3 + [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10130])
	
.LABEL $label$7
	CALL memcpy(($3 + [40]), $5, [8])
	*((($3 + [8]) + [24])) = $4
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [24])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	CALL $65(($3 + [8]), *($3 + [56]), ($3 + [48]), *($3 + [40]))
	$global$0 = ($3 + [64])
}

void .FUNC $111 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10130])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [40]), $2, [8])
	*($3 + [32]) = (int_64)0
	*($3) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10130])
	
.LABEL $label$6
	CALL memcpy($3, $6, [8])
	*($3 + [32]) = *($3)
	*(($3 + [24])) = $5
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [16])
	*($3 + [8]) = $1
	*($3) = $0
	CALL $67($3, *($3 + [40]), ($3 + [32]))
	$global$0 = ($3 + [48])
}

void .FUNC $118 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [144])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [100]) = $2
	*($3 + [96]) = $2
	$5 = ($2 + $4)
	*($3 + [104]) = $5
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10130])
	$5 = *(($3 + [104]))
	$2 = *($3 + [100])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [100]) = $2
	*($3 + [80]) = (int_64)0
	*($3 + [72]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10130])
	$5 = *((($3 + [96]) + [8]))
	$2 = *($3 + [100])
	
.LABEL $label$6
	CALL memcpy(($3 + [72]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [100]) = $2
	*($3 + [24]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10130])
	$2 = *($3 + [100])
	
.LABEL $label$7
	CALL memcpy(($3 + [24]), $2, [8])
	*((($3 + [72]) + [8])) = *($3 + [24])
	*($3 + [100]) = ($2 + [8])
	*($3 + [64]) = [0]
	*($3 + [56]) = (int_64)0
	CALL $105(($3 + [96]), ($3 + [56]))
	*(($2 = (($3 + [8]) + [8]))) = *((($3 + [96]) + [8]))
	*($3 + [8]) = *($3 + [96])
	*(($4 = (($3 + [112]) + [8]))) = *($2)
	*($3 + [112]) = *($3 + [8])
	$2 = *($4)
	*((($3 + [128]) + [8])) = $2
	*(($3 + [48])) = $2
	*($3 + [24]) = $0
	*($3 + [32]) = $1
	$0 = *($3 + [112])
	*($3 + [40]) = $0
	*($3 + [128]) = $0
	CALL $99(($3 + [24]), ($3 + [88]), ($3 + [72]), ($3 + [56]))
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$8 }
	CALL $10(*((($3 + [56]) + [8])))
	
.LABEL $label$8
	$global$0 = ($3 + [144])
}

void .FUNC $119 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10130])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10130])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10130])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10130])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10130])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $29 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $28 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL sha256($1, $2, ($3 + [16]))
	$4 = (int_64)0
	$1 = [16]
	$2 = [0]
	$5 = (int_64)0
	
.LOOP $label$2:
	$6 = (($3 + [16]) + $2)
	if ( ($1 <= [2]) ){ goto $label$3 }
	$4 = ((int_64)$4 | (int_64)*($6))
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)(uint_64)$4 >> (uint_64)(int_64)56))
	$1 = ($1 + [-1])
	$4 = ((int_64)$4 << (int_64)8)
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[32]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [8289])
	
.LABEL $label$4
	*($0 + [8]) = $5
	*($0) = ((int_64)$4 | (int_64)*($6))
	$1 = [16]
	$0 = ($0 + [16])
	$4 = (int_64)0
	$5 = (int_64)0
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$1 == (int_32)[16]) ){ goto $label$5 }
	if ( ($1 <= [2]) ){ goto $label$6 }
	CALL __ashlti3($3, $4, $5, (($1 << [3]) + [-8]))
	$5 = *(($3 + [8]))
	$4 = *($3)
	
.LABEL $label$6
	*($0) = $4
	*($0 + [8]) = $5
	
.LABEL $label$5
	$global$0 = ($3 + [48])
}

void .FUNC $55 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ($global$0 - [48])
	$global$0 = $3
	*(($3 + [40])) = [0]
	*($3 + [16]) = $1
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	*($3 + [8]) = *($0)
	$0 = CALL $56(($3 + [8]), (uint_64)*($2 + [8]) >> (uint_64)(int_64)8), [8812]
	if ( ((int_64)*($0)) >= (int_64)*($2)) ){ goto $label$1 }
	CALL eosio_assert([0], [8836])
	
.LABEL $label$1
	*($3) = $2
	CALL $57(($3 + [8]), $0, $1, $3)
	$4 = *($3 + [32])
	if ( ($4 == 0) ){ goto $label$2 }
	$5 = ($3 + [36])
	$2 = *($5)
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	CALL $10($0)
	
.LABEL $label$6
	if ( ((int_32)$4 != (int_32)$2) ){ goto $label$5 }
	$2 = *(($3 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$2 = $4
	
.LABEL $label$3
	*($5) = $4
	CALL $10($2)
	
.LABEL $label$2
	$global$0 = ($3 + [48])
}

void .FUNC $107 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [192])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [148]) = $2
	*($3 + [144]) = $2
	$5 = ($2 + $4)
	*($3 + [152]) = $5
	*($3 + [136]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10130])
	$5 = *(($3 + [152]))
	$2 = *($3 + [148])
	
.LABEL $label$5
	CALL memcpy(($3 + [136]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [148]) = $2
	*($3 + [128]) = (int_64)0
	*($3 + [120]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10130])
	$5 = *((($3 + [144]) + [8]))
	$2 = *($3 + [148])
	
.LABEL $label$6
	CALL memcpy(($3 + [120]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [148]) = $2
	*($3 + [72]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10130])
	$2 = *($3 + [148])
	
.LABEL $label$7
	CALL memcpy(($3 + [72]), $2, [8])
	*(($4 = (($3 + [120]) + [8]))) = *($3 + [72])
	*($3 + [148]) = ($2 + [8])
	*($3 + [112]) = [0]
	*($3 + [104]) = (int_64)0
	CALL $105(($3 + [144]), ($3 + [104]))
	*(($2 = (($3 + [56]) + [8]))) = *((($3 + [144]) + [8]))
	*($3 + [56]) = *($3 + [144])
	*(($5 = (($3 + [160]) + [8]))) = *($2)
	*($3 + [160]) = *($3 + [56])
	$2 = *($5)
	*((($3 + [176]) + [8])) = $2
	*(($3 + [96])) = $2
	*($3 + [72]) = $0
	*($3 + [80]) = $1
	$0 = *($3 + [160])
	*($3 + [88]) = $0
	*($3 + [176]) = $0
	*(($5 = (($3 + [40]) + [8]))) = *($4)
	*($3 + [40]) = *($3 + [120])
	$0 = *($3 + [136])
	$2 = CALL $20(($3 + [24]), ($3 + [104]))
	*((($3 + [8]) + [8])) = *($5)
	*($3 + [8]) = *($3 + [40])
	CALL $50(($3 + [72]), $0, ($3 + [8]), $2)
	if ( (*($2) & [1]) ){ goto $label$10 }
	if ( (*($3 + [104]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $10(*($2 + [8]))
	if ( ((*($3 + [104]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $10(*(($3 + [112])))
	$global$0 = ($3 + [192])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [192])
}

int_32 .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [10536])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $120($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [10130])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

int_32 .FUNC $21 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$6 = ($5 & [1])
	$5 = *($1)
	$5 = ( *($1 + [4]) ? uint_32($5 >> [1]) : $6 )
	if ( ($5 <= $2) ){ goto $label$1 }
	$5 = ($5 - $2)
	$3 = ( $5 ? $3 : ($5 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$3 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$2 }
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$3
	$8 = (($3 + [16]) & [-16])
	$5 = CALL $8($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $3
	
.LABEL $label$2
	CALL memcpy($5, (( $7 ? ($1 + [1]) : $6 ) + $2), $3)
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $8($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $23 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $8($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $10($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $23($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

int_32 .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $16($1)
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $23($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

void .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $8(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $10($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

int_32 .FUNC $27 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$5 }
	$5 = uint_32($5 >> [1])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ($5 <= $1) ){ goto $label$3 }
	$5 = ($5 - $1)
	$2 = ( $5 ? $2 : ($5 <= $2) )
	if ( $6 ){ goto $label$6 }
	$0 = ($0 + [1])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( ($5 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$6
	$0 = *($0 + [8])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$1 = CALL $18(($0 + $1), $3, $5)
	if ( ($1 == 0) ){ goto $label$1 }
	return $1
	
.LABEL $label$1
	(unreachable)
	return ( [-1] ? $6 : ($2 <= $4) )
}

int_32 .FUNC $26 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $23($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

void .FUNC $109 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [192])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [148]) = $2
	*($3 + [144]) = $2
	$5 = ($2 + $4)
	*($3 + [152]) = $5
	*($3 + [136]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10130])
	$5 = *(($3 + [152]))
	$2 = *($3 + [148])
	
.LABEL $label$5
	CALL memcpy(($3 + [136]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [148]) = $2
	*($3 + [128]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10130])
	$5 = *((($3 + [144]) + [8]))
	$2 = *($3 + [148])
	
.LABEL $label$6
	CALL memcpy(($3 + [128]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [148]) = $2
	*($3 + [120]) = (int_64)0
	*($3 + [112]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10130])
	$5 = *(($3 + [152]))
	$2 = *($3 + [148])
	
.LABEL $label$7
	CALL memcpy(($3 + [112]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [148]) = $2
	*($3 + [64]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10130])
	$2 = *($3 + [148])
	
.LABEL $label$8
	CALL memcpy(($3 + [64]), $2, [8])
	*(($5 = (($3 + [112]) + [8]))) = *($3 + [64])
	*($3 + [148]) = ($2 + [8])
	*($3 + [104]) = [0]
	*($3 + [96]) = (int_64)0
	CALL $105(($3 + [144]), ($3 + [96]))
	*(($2 = (($3 + [48]) + [8]))) = *((($3 + [144]) + [8]))
	*($3 + [48]) = *($3 + [144])
	*(($4 = (($3 + [160]) + [8]))) = *($2)
	*($3 + [160]) = *($3 + [48])
	$2 = *($4)
	*((($3 + [176]) + [8])) = $2
	*(($3 + [88])) = $2
	*($3 + [64]) = $0
	*($3 + [72]) = $1
	$0 = *($3 + [160])
	*($3 + [80]) = $0
	*($3 + [176]) = $0
	*(($4 = (($3 + [32]) + [8]))) = *($5)
	*($3 + [32]) = *($3 + [112])
	$0 = *($3 + [128])
	$1 = *($3 + [136])
	$2 = CALL $20(($3 + [16]), ($3 + [96]))
	*(($3 + [8])) = *($4)
	*($3) = *($3 + [32])
	CALL $58(($3 + [64]), $1, $0, $3, $2)
	if ( (*($2) & [1]) ){ goto $label$11 }
	if ( (*($3 + [96]) & [1]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $10(*($2 + [8]))
	if ( ((*($3 + [96]) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $10(*(($3 + [104])))
	$global$0 = ($3 + [192])
	return 
	
.LABEL $label$9
	$global$0 = ($3 + [192])
}

int_32 .FUNC $135 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [52]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10488])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-6786176242429558272)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [10434])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10434])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $101(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $69 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	$3 = ($global$0 - [160])
	$global$0 = $3
	*($3 + [120]) = $1
	if ( CALL has_auth($1) ){ goto $label$1 }
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL eosio_assert([0], [8998])
	
.LABEL $label$1
	if ( CALL is_account($1) ){ goto $label$2 }
	CALL eosio_assert([0], [9019])
	
.LABEL $label$2
	$4 = ($2 + [8])
	$5 = *($4)
	*((($3 + [104]) + [8])) = $5
	$6 = *($2)
	*((($3 + [56]) + [8])) = $5
	*($3 + [104]) = $6
	*($3 + [56]) = $6
	CALL $70($0, ($3 + [56]))
	$5 = *($4)
	*((($3 + [88]) + [8])) = $5
	$6 = *($2)
	*((($3 + [40]) + [8])) = $5
	*($3 + [40]) = $6
	*($3 + [88]) = $6
	CALL $71($0, $1, ($3 + [40]))
	$6 = *($2)
	$5 = *($4)
	*((($3 + [24]) + [8])) = $5
	*($3 + [136]) = $5
	*($3 + [24]) = $6
	*($3 + [128]) = $6
	CALL $60(($3 + [144]), $0, $1, ($3 + [24]))
	if ( ((int_64)$5 == (int_64)*($3 + [152])) ){ goto $label$3 }
	CALL eosio_assert([0], [9704])
	
.LABEL $label$3
	if ( ((int_64)$6 <= (int_64)*($3 + [144])) ){ goto $label$4 }
	CALL eosio_assert([0], [9327])
	
.LABEL $label$4
	$4 = CALL has_auth($1)
	$5 = *(($2 + [8]))
	*((($3 + [72]) + [8])) = $5
	$7 = *(( ($3 + [120]) ? $0 : $4 ))
	$6 = *($2)
	*((($3 + [8]) + [8])) = $5
	*($3 + [72]) = $6
	*($3 + [8]) = $6
	CALL $72($0, $1, $7, ($3 + [8]))
	$global$0 = ($3 + [160])
}

void .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10234])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10279])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1 + [8])
	if ( (uint_64)(((int_64)*(*(($4 + [-24])) + [8]) ^ (int_64)$6) <= (int_64)256) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((uint_64)((int_64)*(*($9) + [8]) ^ (int_64)$6) >= (uint_64)(int_64)256) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10329])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $10($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $10($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $108 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [132]) = $2
	*($3 + [128]) = $2
	$5 = ($2 + $4)
	*($3 + [136]) = $5
	*($3 + [120]) = (int_64)0
	*($3 + [112]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10130])
	$5 = *(($3 + [136]))
	$2 = *($3 + [132])
	
.LABEL $label$5
	CALL memcpy(($3 + [112]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [132]) = $2
	*($3 + [64]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10130])
	$2 = *($3 + [132])
	
.LABEL $label$6
	CALL memcpy(($3 + [64]), $2, [8])
	*(($4 = (($3 + [112]) + [8]))) = *($3 + [64])
	*($3 + [132]) = ($2 + [8])
	*($3 + [104]) = [0]
	*($3 + [96]) = (int_64)0
	CALL $105(($3 + [128]), ($3 + [96]))
	*(($2 = (($3 + [48]) + [8]))) = *((($3 + [128]) + [8]))
	*($3 + [48]) = *($3 + [128])
	*(($5 = (($3 + [144]) + [8]))) = *($2)
	*($3 + [144]) = *($3 + [48])
	$2 = *($5)
	*((($3 + [160]) + [8])) = $2
	*(($3 + [88])) = $2
	*($3 + [64]) = $0
	*($3 + [72]) = $1
	$0 = *($3 + [144])
	*($3 + [80]) = $0
	*($3 + [160]) = $0
	*(($5 = (($3 + [32]) + [8]))) = *($4)
	*($3 + [32]) = *($3 + [112])
	$2 = CALL $20(($3 + [16]), ($3 + [96]))
	*(($3 + [8])) = *($5)
	*($3) = *($3 + [32])
	CALL $53(($3 + [64]), $3, $2)
	if ( (*($2) & [1]) ){ goto $label$9 }
	if ( (*($3 + [96]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $10(*($2 + [8]))
	if ( ((*($3 + [96]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $10(*(($3 + [104])))
	$global$0 = ($3 + [176])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [176])
}

void .FUNC $65 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [128])
	$global$0 = $4
	CALL require_auth($3)
	$5 = *($2)
	*((($4 + [48]) + [32])) = [0]
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	*($4 + [56]) = $5)
	*($4 + [64]) = (int_64)-1
	*($4 + [72]) = (int_64)0
	*($4 + [48]) = *($0)
	if ( ((int_64)*(CALL $59(($4 + [48]), $5, [8854]) + [8]) == (int_64)*($2)) ){ goto $label$1 }
	CALL eosio_assert([0], [8571])
	
.LABEL $label$1
	*((($4 + [8]) + [32])) = [0]
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	$6 = *($0)
	*($4 + [8]) = $6
	*($4 + [16]) = $1
	$0 = CALL db_find_i64($6, $1, (int_64)3607749779137757184, $5)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	if ( ((int_32)*(CALL $47(($4 + [8]), $0) + [16]) == (int_32)($4 + [8])) ){ goto $label$4 }
	CALL eosio_assert([0], [9843])
	$7 = *($4 + [32])
	if ( $7 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	*($4) = $2
	*($4 + [120]) = $3
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [8])) ){ goto $label$6 }
	CALL eosio_assert([0], [9917])
	
.LABEL $label$6
	*($4 + [100]) = $4
	*($4 + [96]) = ($4 + [8])
	*($4 + [104]) = ($4 + [120])
	*(($2 = CALL $8([32])) + [8]) = (int_64)0
	*($2) = (int_64)0
	*($2 + [16]) = ($4 + [8])
	CALL $66(($4 + [96]), $2)
	*($4 + [112]) = $2
	$1 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	*($4 + [96]) = $1)
	$7 = *($2 + [20])
	*($4 + [92]) = $7
	$8 = ($4 + [36])
	$0 = *($8)
	if ( ((uint_32)$0 >= (uint_32)*((($4 + [8]) + [32]))) ){ goto $label$8 }
	*($0 + [8]) = $1
	*($0 + [16]) = $7
	*($4 + [112]) = [0]
	*($0) = $2
	*($8) = ($0 + [24])
	$2 = *($4 + [112])
	*($4 + [112]) = [0]
	if ( $2 ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$8
	CALL $49(($4 + [32]), ($4 + [112]), ($4 + [96]), ($4 + [92]))
	$2 = *($4 + [112])
	*($4 + [112]) = [0]
	if ( ($2 == 0) ){ goto $label$4 }
	
.LABEL $label$7
	CALL $10($2)
	
.LABEL $label$4
	$7 = *($4 + [32])
	if ( ($7 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = ($4 + [36])
	$2 = *($8)
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$12 }
	CALL $10($0)
	
.LABEL $label$12
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	$2 = *(($4 + [32]))
	goto $label$9 
	
.LABEL $label$10
	$2 = $7
	
.LABEL $label$9
	*($8) = $7
	CALL $10($2)
	
.LABEL $label$2
	$7 = *($4 + [72])
	if ( ($7 == 0) ){ goto $label$13 }
	$8 = ($4 + [76])
	$2 = *($8)
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$15 }
	
.LOOP $label$16:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$17 }
	CALL $10($0)
	
.LABEL $label$17
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$16 }
	$2 = *(($4 + [72]))
	goto $label$14 
	
.LABEL $label$15
	$2 = $7
	
.LABEL $label$14
	*($8) = $7
	CALL $10($2)
	
.LABEL $label$13
	$global$0 = ($4 + [128])
}

int_32 .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9894])
	
.LABEL $label$5
	$2 = CALL $2($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $8([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [20]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10130])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10130])
	
.LABEL $label$8
	$8 = ($5 + [16])
	CALL memcpy(($3 + [24]), $7, [8])
	*(($5 + [8])) = *($3 + [24])
	$7 = ($2 + [16])
	if ( ((int_32)($4 & [-4]) != (int_32)[16]) ){ goto $label$9 }
	CALL eosio_assert([0], [10130])
	
.LABEL $label$9
	CALL memcpy($8, $7, [4])
	*($5 + [24]) = $1
	*($3 + [16]) = $5
	$9 = (uint_64)*(($5 + [8])) >> (uint_64)(int_64)8
	*($3 + [24]) = $9)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$12 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $82(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $3($2)
	
.LABEL $label$10
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $10($1)
	
.LABEL $label$13
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $67 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL require_auth($1)
	$4 = [0]
	*(($3 + [32])) = [0]
	*($3 + [8]) = $1
	*($3 + [16]) = (int_64)-1
	*($3 + [24]) = (int_64)0
	$5 = *($0)
	*($3) = $5
	$2 = CALL db_find_i64($5, $1, (int_64)3607749779137757184, (uint_64)*($2) >> (uint_64)(int_64)8)
	if ( ((int_32)$2) <= (int_32)[-1]) ){ goto $label$3 }
	$4 = CALL $47($3, $2)
	if ( ((int_32)*($4 + [16]) == (int_32)$3) ){ goto $label$4 }
	CALL eosio_assert([0], [9843])
	
.LABEL $label$4
	if ( (int_64)(*($4) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [8876])
	if ( (int_64)(*([0]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8952])
	
.LABEL $label$1
	if ( $4 ){ goto $label$5 }
	CALL eosio_assert([0], [10170])
	CALL eosio_assert([0], [10204])
	
.LABEL $label$5
	$2 = CALL db_next_i64(*($4 + [20]), ($3 + [40]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$6 }
	CALL $47($3, $2)
	
.LABEL $label$6
	CALL $68($3, $4)
	$0 = *($3 + [24])
	if ( ($0 == 0) ){ goto $label$7 }
	$6 = ($3 + [28])
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$9 }
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$10 }
	$4 = *(($3 + [24]))
	goto $label$8 
	
.LABEL $label$9
	$4 = $0
	
.LABEL $label$8
	*($6) = $0
	CALL $10($4)
	
.LABEL $label$7
	$global$0 = ($3 + [48])
}

void .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *(*(*($0 + [4])))
	$5 = (uint_64)$4 >> (uint_64)(int_64)8)
	$6 = *($0)
	$7 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$5 = $8
	$9 = $7
	$7 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$5 = $8
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$9 = ((int_32)$7 < (int_32)[6])
	$10 = ($7 + [1])
	$7 = $10
	if ( $9 ){ goto $label$5 }
	$7 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8340])
	
.LABEL $label$1
	*($1 + [8]) = $4
	*($1) = (int_64)0
	$9 = $2
	$7 = ($9 + [-16])
	$global$0 = $7
	CALL memcpy($7, $1, [8])
	*($3 + [8]) = *($1 + [8])
	CALL memcpy(($9 + [-8]), ($3 + [8]), [8])
	$5 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	*($1 + [20]) = CALL db_store_i64(*($6 + [8]), (int_64)3607749779137757184, *(*($0 + [8])), $5), $7, [16])
	if ( (uint_64)($5 <= *($6 + [16])) ){ goto $label$6 }
	*(($6 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$6
	$global$0 = ($3 + [16])
}

void .FUNC $61 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [96])
	$global$0 = $4
	*($4 + [16]) = [0]
	*($4 + [8]) = (int_64)0
	$5 = [0]
	$6 = [0]
	$7 = [0]
	$8 = (*($2 + [4]) - *($2))
	if ( ($8 == 0) ){ goto $label$2 }
	$5 = int_32($8 >> [4])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$7 = CALL $8($8)
	$5 = ($7 + ($5 << [4]))
	*(($4 + [16])) = $5
	*($4 + [8]) = $7
	*($4 + [12]) = $7
	$6 = *($2)
	$2 = (*(($2 + [4])) - $6)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($7, $6, $2)
	$6 = ($7 + $2)
	*($4 + [12]) = $6
	goto $label$2 
	
.LABEL $label$3
	$6 = $7
	
.LABEL $label$2
	*((($4 + [24]) + [24])) = $5
	*(($4 + [44])) = $6
	*(($4 + [16])) = [0]
	*(($4 + [60])) = [0]
	*($4 + [8]) = (int_64)0
	*($4 + [32]) = $1
	*($4 + [24]) = $0
	*($4 + [40]) = $7
	*($4 + [52 align=4]) = (int_64)0
	$7 = *($7)
	$7 = *($3 + [8])
	$2 = ( *($7 + [4]) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($2 + [24])
	$0 = (CASTING uint_64)(uint_32 $2)
	$2 = ($4 + [52])
	
.LOOP $label$4:
	$7 = ($7 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$4 }
	if ( ($7 == 0) ){ goto $label$6 }
	CALL $120($2, $7)
	$2 = *(($4 + [56]))
	$7 = *(($4 + [52]))
	goto $label$5 
	
.LABEL $label$6
	$2 = [0]
	$7 = [0]
	
.LABEL $label$5
	*($4 + [68]) = $7
	*($4 + [64]) = $7
	*($4 + [72]) = $2
	*($4 + [80]) = ($4 + [64])
	*($4 + [88]) = $3
	CALL $129(($4 + [88]), ($4 + [80]))
	CALL $122(($4 + [24]))
	$7 = *($4 + [52])
	if ( ($7 == 0) ){ goto $label$7 }
	*(($4 + [56])) = $7
	CALL $10($7)
	
.LABEL $label$7
	$7 = *($4 + [40])
	if ( ($7 == 0) ){ goto $label$8 }
	*(($4 + [44])) = $7
	CALL $10($7)
	
.LABEL $label$8
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$9 }
	*($4 + [12]) = $7
	CALL $10($7)
	
.LABEL $label$9
	$global$0 = ($4 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $29(($4 + [8]))
}

void .FUNC $60 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	$4 = ($global$0 - [128])
	$global$0 = $4
	*((($4 + [88]) + [32])) = [0]
	*($4 + [96]) = $2
	*($4 + [104]) = (int_64)-1
	*($4 + [112]) = (int_64)0
	*($4 + [88]) = *($1)
	$5 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8
	$3 = CALL $56(($4 + [88]), $5), [8812])
	*((($4 + [48]) + [32])) = [0]
	*($4 + [56]) = $2
	*($4 + [64]) = (int_64)-1
	*($4 + [72]) = (int_64)0
	$6 = *($1)
	*($4 + [48]) = $6
	$7 = CALL db_find_i64($6, $2, (int_64)-8281832574272782336, $5)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $63(($4 + [48]), $7)
	if ( ((int_32)*($7 + [16]) == (int_32)($4 + [48])) ){ goto $label$4 }
	CALL eosio_assert([0], [9843])
	
.LABEL $label$4
	*($0) = *($3)
	$6 = *(($3 + [8]))
	*(($0 + [8])) = $6
	if ( ((int_64)$6 == (int_64)*($7 + [8])) ){ goto $label$5 }
	CALL eosio_assert([0], [9613])
	
.LABEL $label$5
	$6 = (int_64)
	*($0) = $6(*($0) - *($7)))
	if ( ((int_64)$6 <= (int_64)-4611686018427387904) ){ goto $label$2 }
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$1 }
	CALL eosio_assert([0], [9683])
	goto $label$1 
	
.LABEL $label$3
	*($0) = *($3)
	*(($0 + [8])) = *(($3 + [8]))
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [9661])
	
.LABEL $label$1
	*(($4 + [40])) = [0]
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	$6 = *($1)
	*($4 + [8]) = $6
	*($4 + [16]) = $2
	$1 = CALL db_find_i64($6, $2, (int_64)-3106564262979026944, $5)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$8 }
	$1 = CALL $64(($4 + [8]), $1)
	if ( ((int_32)*($1 + [20]) == (int_32)($4 + [8])) ){ goto $label$9 }
	CALL eosio_assert([0], [9843])
	
.LABEL $label$9
	if ( ((*($1 + [16]) + [86400]) <= (CASTING uint_32)(uint_64 ((int_64)CALL $30() / (int_64)1000000))) ){ goto $label$8 }
	if ( ((int_64)*($1 + [8]) == (int_64)*($0 + [8])) ){ goto $label$10 }
	CALL eosio_assert([0], [9613])
	
.LABEL $label$10
	$2 = (int_64)
	*($0) = $2(*($0) - *($1)))
	if ( ((int_64)$2 <= (int_64)-4611686018427387904) ){ goto $label$11 }
	if ( ((int_64)$2 < (int_64)4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [9683])
	$3 = *($4 + [32])
	if ( $3 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$11
	CALL eosio_assert([0], [9661])
	
.LABEL $label$8
	$3 = *($4 + [32])
	if ( ($3 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$7 = ($4 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$15 }
	CALL $10($1)
	
.LABEL $label$15
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$14 }
	$0 = *(($4 + [32]))
	goto $label$12 
	
.LABEL $label$13
	$0 = $3
	
.LABEL $label$12
	*($7) = $3
	CALL $10($0)
	
.LABEL $label$6
	$3 = *($4 + [72])
	if ( ($3 == 0) ){ goto $label$16 }
	$7 = ($4 + [76])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$18 }
	
.LOOP $label$19:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$20 }
	CALL $10($1)
	
.LABEL $label$20
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$19 }
	$0 = *(($4 + [72]))
	goto $label$17 
	
.LABEL $label$18
	$0 = $3
	
.LABEL $label$17
	*($7) = $3
	CALL $10($0)
	
.LABEL $label$16
	$3 = *($4 + [112])
	if ( ($3 == 0) ){ goto $label$21 }
	$7 = ($4 + [116])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$23 }
	
.LOOP $label$24:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$25 }
	CALL $10($1)
	
.LABEL $label$25
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$24 }
	$0 = *(($4 + [112]))
	goto $label$22 
	
.LABEL $label$23
	$0 = $3
	
.LABEL $label$22
	*($7) = $3
	CALL $10($0)
	
.LABEL $label$21
	$global$0 = ($4 + [128])
}

int_32 .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9894])
	
.LABEL $label$5
	$2 = CALL $2($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $8([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10130])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10130])
	
.LABEL $label$8
	CALL memcpy(($3 + [24]), $7, [8])
	$8 = *($3 + [24])
	*(($5 + [8])) = $8
	*($5 + [20]) = $1
	*($3 + [16]) = $5
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	*($3 + [24]) = $8)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $8
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $74(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $3($2)
	
.LABEL $label$9
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $10($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $62 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $62($0, *($1))
	CALL $62($0, *($1 + [4]))
	if ( ((*(($1 + [28])) & [1]) == 0) ){ goto $label$2 }
	CALL $10(*(($1 + [36])))
	
.LABEL $label$2
	if ( ((*(($1 + [16])) & [1]) == 0) ){ goto $label$3 }
	CALL $10(*(($1 + [24])))
	
.LABEL $label$3
	CALL $10($1)
	
.LABEL $label$1
}

int_32 .FUNC $101 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9894])
	
.LABEL $label$5
	$4 = CALL $2($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $8([64])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [32])
	CALL $134(($3 + [32]), ($3 + [24]))
	*($5 + [56]) = [-1]
	*($5 + [52]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $94(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $3($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $100 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [68]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9974])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10020])
	
.LABEL $label$2
	$6 = ($1 + [40])
	*($5 + [48]) = (uint_64)*($6) >> (uint_64)(int_64)8)
	$8 = ($1 + [8])
	$7 = ($1 + [24])
	CALL $32(($5 + [80]), $7, ($5 + [48]), $8)
	*((($5 + [16]) + [24])) = *((($5 + [80]) + [24]))
	*((($5 + [16]) + [16])) = *((($5 + [80]) + [16]))
	*($5 + [24]) = *($5 + [88])
	*($5 + [16]) = *($5 + [80])
	$9 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*($6)) ){ goto $label$3 }
	CALL eosio_assert([0], [9763])
	
.LABEL $label$3
	$10 = ((int_64)*($1 + [32]) + (int_64)*($3))
	*($1 + [32]) = $10
	if ( ((int_64)$10 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9806])
	$10 = *(($1 + [32]))
	
.LABEL $label$4
	if ( ((int_64)$10 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9825])
	
.LABEL $label$5
	*($1 + [64]) = [0]
	*($1 + [48]) = (int_64)0
	if ( ((int_64)$9 == (int_64)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [10071])
	
.LABEL $label$6
	$6 = ($1 + [64])
	$3 = *(($1 + [8]))
	$11 = ( *(($1 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($11 + [52])
	$10 = (CASTING uint_64)(uint_32 $11)
	
.LOOP $label$7:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$7 }
	if ( ($3 <= [513]) ){ goto $label$9 }
	$4 = CALL $2($3)
	goto $label$8 
	
.LABEL $label$9
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$8
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [48]) = $5
	*($5 + [84]) = $8
	*($5 + [88]) = $7
	*($5 + [100]) = $6
	*($5 + [80]) = $1
	*($5 + [92]) = ($1 + [32])
	*($5 + [96]) = ($1 + [48])
	CALL $133(($5 + [80]), ($5 + [48]))
	CALL db_update_i64(*($1 + [72]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$10 }
	CALL $3($4)
	
.LABEL $label$10
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$11 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*($5 + [48]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	CALL $32(($5 + [80]), $7, ($5 + [48]), $8)
	if ( (CALL $18(($5 + [16]), ($5 + [80]), [32]) == 0) ){ goto $label$12 }
	$3 = *($1 + [76])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$13 }
	*(($5 + [72])) = (int_64)0
	*(($5 + [64])) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [48]) = (int_64)0
	$3 = CALL db_idx256_find_primary(*($0), *($0 + [8]), (int_64)-6776363433588686848, ($5 + [48]), [2], $9)
	*(($1 + [76])) = $3
	
.LABEL $label$13
	CALL db_idx256_update($3, $2, ($5 + [80]), [2])
	
.LABEL $label$12
	$global$0 = ($5 + [112])
}

void .FUNC $103 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10130])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	*($3 + [80]) = (int_64)0
	*($3 + [72]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10130])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [72]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10130])
	
.LABEL $label$7
	CALL memcpy(($3 + [40]), $5, [8])
	*(($5 = (($3 + [72]) + [8]))) = *($3 + [40])
	*((($3 + [40]) + [24])) = $4
	$7 = *($5)
	*((($3 + [24]) + [8])) = $7
	*((($3 + [8]) + [8])) = $7
	*($3 + [56]) = $2
	*(($3 + [60])) = ($2 + [24])
	*($3 + [48]) = $1
	*($3 + [40]) = $0
	$0 = *($3 + [72])
	*($3 + [24]) = $0
	*($3 + [8]) = $0
	CALL $39(($3 + [40]), *($3 + [88]), ($3 + [8]))
	$global$0 = ($3 + [96])
}

void .FUNC $102 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = (uint_64)*(($1 + [24])) >> (uint_64)(int_64)8)
	*((($2 + [8]) + [8])) = [0]
	*($2 + [8]) = (int_64)0
	$3 = CALL $16([8339])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$4 = ($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($2 + [8]) = ($3 << [1])
	$1 = (($2 + [8]) | [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($3 + [16]) & [-16])
	$1 = CALL $8($5)
	*($2 + [8]) = ($5 | [1])
	*($2 + [16]) = $1
	*($2 + [12]) = $3
	
.LABEL $label$3
	CALL memcpy($1, [8339], $3)
	
.LABEL $label$2
	*(($1 + $3)) = [0]
	CALL $32($0, $4, ($2 + [24]), ($2 + [8]))
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$5 }
	CALL $10(*($2 + [16]))
	
.LABEL $label$5
	$global$0 = ($2 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $19(($2 + [8]))
}

int_32 .FUNC $105 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $106($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $8($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $24($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $24($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $19($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $10($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $104 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [192])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $2($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [148]) = $2
	*($3 + [144]) = $2
	$5 = ($2 + $4)
	*($3 + [152]) = $5
	*($3 + [136]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10130])
	$5 = *(($3 + [152]))
	$2 = *($3 + [148])
	
.LABEL $label$5
	CALL memcpy(($3 + [136]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [148]) = $2
	*($3 + [128]) = (int_64)0
	*($3 + [120]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10130])
	$5 = *((($3 + [144]) + [8]))
	$2 = *($3 + [148])
	
.LABEL $label$6
	CALL memcpy(($3 + [120]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [148]) = $2
	*($3 + [72]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10130])
	$2 = *($3 + [148])
	
.LABEL $label$7
	CALL memcpy(($3 + [72]), $2, [8])
	*(($4 = (($3 + [120]) + [8]))) = *($3 + [72])
	*($3 + [148]) = ($2 + [8])
	*($3 + [112]) = [0]
	*($3 + [104]) = (int_64)0
	CALL $105(($3 + [144]), ($3 + [104]))
	*(($2 = (($3 + [56]) + [8]))) = *((($3 + [144]) + [8]))
	*($3 + [56]) = *($3 + [144])
	*(($5 = (($3 + [160]) + [8]))) = *($2)
	*($3 + [160]) = *($3 + [56])
	$2 = *($5)
	*((($3 + [176]) + [8])) = $2
	*(($3 + [96])) = $2
	*($3 + [72]) = $0
	*($3 + [80]) = $1
	$0 = *($3 + [160])
	*($3 + [88]) = $0
	*($3 + [176]) = $0
	*(($5 = (($3 + [40]) + [8]))) = *($4)
	*($3 + [40]) = *($3 + [120])
	$0 = *($3 + [136])
	$2 = CALL $20(($3 + [24]), ($3 + [104]))
	*((($3 + [8]) + [8])) = *($5)
	*($3 + [8]) = *($3 + [40])
	CALL $43(($3 + [72]), $0, ($3 + [8]), $2)
	if ( (*($2) & [1]) ){ goto $label$10 }
	if ( (*($3 + [104]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $10(*($2 + [8]))
	if ( ((*($3 + [104]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $10(*(($3 + [112])))
	$global$0 = ($3 + [192])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [192])
}

void .FUNC $89 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [160])
	$global$0 = $4
	*(($4 + [112])) = [0]
	*($4 + [96]) = (int_64)-1
	*($4 + [104]) = (int_64)0
	*($4 + [116]) = [0]
	$5 = *($0)
	*($4 + [80]) = $5
	*($4 + [88]) = $5
	*($4 + [72]) = ($4 + [80])
	*($4 + [128]) = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	*(($4 + [16])) = [0]
	*($4 + [8]) = (int_64)0
	$6 = CALL $16([8339])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$4 }
	*($4 + [8]) = ($6 << [1])
	$7 = (($4 + [8]) | [1])
	if ( $6 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = (($6 + [16]) & [-16])
	$7 = CALL $8($8)
	*($4 + [8]) = ($8 | [1])
	*($4 + [16]) = $7
	*($4 + [12]) = $6
	
.LABEL $label$3
	CALL memcpy($7, [8339], $6)
	
.LABEL $label$2
	*(($7 + $6)) = [0]
	CALL $32(($4 + [32]), $1, ($4 + [128]), ($4 + [8]))
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$5 }
	CALL $10(*($4 + [16]))
	
.LABEL $label$5
	CALL $91(($4 + [24]), ($4 + [72]), ($4 + [32]))
	$6 = *($4 + [28])
	if ( ($6 == 0) ){ goto $label$13 }
	$5 = *($0)
	*($4 + [12]) = $3
	*($4 + [8]) = $2
	CALL $92(*($4 + [72]), $6, $5, ($4 + [8]))
	$6 = *($4 + [28])
	if ( ((int_64)*($6 + [16]) <= (int_64)-1) ){ goto $label$12 }
	if ( ((int_64)*($6 + [32]) > (int_64)-1) ){ goto $label$8 }
	goto $label$11 
	
.LABEL $label$13
	if ( ((int_64)*($2) > (int_64)0) ){ goto $label$14 }
	CALL eosio_assert([0], [9541])
	
.LABEL $label$14
	if ( (int_64)(*($3) == 0) ){ goto $label$15 }
	CALL eosio_assert([0], [9557])
	
.LABEL $label$15
	$5 = *($0)
	*($4 + [12]) = $1
	*($4 + [16]) = $2
	*($4 + [20]) = $3
	*($4 + [8]) = ($4 + [80])
	*($4 + [152]) = $5
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [80])) ){ goto $label$16 }
	CALL eosio_assert([0], [9917])
	
.LABEL $label$16
	*($4 + [132]) = ($4 + [8])
	*($4 + [128]) = ($4 + [80])
	*($4 + [136]) = ($4 + [152])
	*(($6 = CALL $8([64])) + [16]) = (int_64)0
	*($6 + [8]) = (int_64)0
	*($6 + [24]) = (int_64)0
	*($6 + [32]) = (int_64)0
	*($6 + [40]) = (int_64)0
	*($6 + [48]) = ($4 + [80])
	CALL $93(($4 + [128]), $6)
	*($4 + [144]) = $6
	$5 = *($6)
	*($4 + [128]) = $5
	$7 = *($6 + [52])
	*($4 + [124]) = $7
	$0 = ($4 + [108])
	$2 = *($0)
	if ( ((uint_32)$2 >= (uint_32)*(($4 + [112]))) ){ goto $label$10 }
	*($2 + [8]) = $5
	*($2 + [16]) = $7
	*($4 + [144]) = [0]
	*($2) = $6
	*($0) = ($2 + [24])
	$6 = *($4 + [144])
	*($4 + [144]) = [0]
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$12
	CALL eosio_assert([0], [9541])
	if ( ((int_64)*(*($4 + [28]) + [32]) > (int_64)-1) ){ goto $label$8 }
	
.LABEL $label$11
	CALL eosio_assert([0], [9557])
	$7 = *($4 + [104])
	if ( $7 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$10
	CALL $94(($4 + [104]), ($4 + [144]), ($4 + [128]), ($4 + [124]))
	$6 = *($4 + [144])
	*($4 + [144]) = [0]
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $10($6)
	
.LABEL $label$8
	$7 = *($4 + [104])
	if ( ($7 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$0 = ($4 + [108])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$18 }
	
.LOOP $label$19:
	$6 = ($6 + [-24])
	$2 = *($6)
	*($6) = [0]
	if ( ($2 == 0) ){ goto $label$20 }
	CALL $10($2)
	
.LABEL $label$20
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$19 }
	$6 = *(($4 + [104]))
	goto $label$17 
	
.LABEL $label$18
	$6 = $7
	
.LABEL $label$17
	*($0) = $7
	CALL $10($6)
	
.LABEL $label$6
	$global$0 = ($4 + [160])
	return (unreachable)
	
.LABEL $label$1
	CALL $19(($4 + [8]))
}

void .FUNC $88 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $29($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$11 }
	CALL $10(*(($1 + [16])))
	
.LABEL $label$11
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $10($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-6776363433588686848, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $130($6, $8)
	*($3 + [20]) = [0]
	*($3 + [16]) = $6
	$7 = *(*(CALL $132(($3 + [16])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [16])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [10382])
	$7 = *(($6 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [24]) = *(*($5 + [4]))
	$8 = ($1 + [8])
	CALL $22($8, *($5 + [8]))
	$6 = *($5 + [12])
	*($1 + [32]) = *($6)
	*(($1 + [40])) = *(($6 + [8]))
	$5 = *($5 + [16])
	*($1 + [48]) = *($5)
	*(($1 + [56])) = *(($5 + [8]))
	$5 = *($1 + [8])
	$6 = ( *(($1 + [12])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($6 + [52])
	$7 = (CASTING uint_64)(uint_32 $6)
	$9 = ($1 + [48])
	$10 = ($1 + [32])
	
.LOOP $label$5:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$5 }
	if ( ($5 <= [513]) ){ goto $label$7 }
	$6 = CALL $2($5)
	goto $label$6 
	
.LABEL $label$7
	$6 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$6
	*($3 + [4]) = $6
	*($3) = $6
	*($3 + [8]) = ($6 + $5)
	*($3 + [56]) = $3
	*($3 + [20]) = $8
	*($3 + [16]) = $1
	$2 = ($1 + [24])
	*($3 + [24]) = $2
	*($3 + [28]) = $10
	*($3 + [32]) = $9
	*($3 + [36]) = ($1 + [64])
	CALL $133(($3 + [16]), ($3 + [56]))
	$7 = *($1)
	*($1 + [72]) = CALL db_store_i64(*($4 + [8]), (int_64)-6776363433588686848, *(*($0 + [8])), $7, $6, $5)
	if ( ($5 <= [513]) ){ goto $label$8 }
	CALL $3($6)
	
.LABEL $label$8
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$9 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$7 = *(($4 + [8]))
	$11 = *(*(($0 + [8])))
	$12 = *($1)
	*($3 + [56]) = (uint_64)*(($1 + [40])) >> (uint_64)(int_64)8)
	CALL $32(($3 + [16]), $2, ($3 + [56]), $8)
	*($1 + [76]) = CALL db_idx256_store($7, (int_64)-6776363433588686848, $11, $12, ($3 + [16]), [2])
	$global$0 = ($3 + [64])
}

void .FUNC $86 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [48])
	$global$0 = $3
	*($3 + [40]) = (int_64)0
	*(($3 + [24])) = *(($2 + [24]))
	*(($3 + [16])) = *(($2 + [16]))
	*($3 + [8]) = *(($2 + [8]))
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx256_lowerbound(*($2), *($2 + [8]), (int_64)-6776363433588686848, $3, [2], ($3 + [40]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [40])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [68]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [9843])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $130($7, CALL $fimport$40(*($7), *($7 + [8]), (int_64)-6776363433588686848, $6))
	if ( ((int_32)*($4 + [68]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [9843])
	
.LABEL $label$2
	*($4 + [76]) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [48])
}

void .FUNC $85 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$4 = ($global$0 - [176])
	$global$0 = $4
	CALL require_auth(*($0))
	*(($4 + [64])) = [0]
	*($4 + [56]) = (int_64)0
	$5 = CALL $16([9360])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$8 }
	*($4 + [56]) = ($5 << [1])
	$6 = (($4 + [56]) | [1])
	if ( $5 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$7 = (($5 + [16]) & [-16])
	$6 = CALL $8($7)
	*($4 + [56]) = ($7 | [1])
	*($4 + [64]) = $6
	*($4 + [60]) = $5
	
.LABEL $label$7
	CALL memcpy($6, [9360], $5)
	
.LABEL $label$6
	*(($6 + $5)) = [0]
	if ( CALL is_account(*($1)) ){ goto $label$9 }
	CALL eosio_assert([0], ( *($4 + [64]) ? (($4 + [56]) | [1]) : (*($4 + [56]) & [1]) ))
	
.LABEL $label$9
	if ( ((*($4 + [56]) & [1]) == 0) ){ goto $label$10 }
	CALL $10(*($4 + [64]))
	
.LABEL $label$10
	*(($4 + [64])) = [0]
	*($4 + [56]) = (int_64)0
	$5 = CALL $16([8525])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$13 }
	*($4 + [56]) = ($5 << [1])
	$6 = (($4 + [56]) | [1])
	if ( $5 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$7 = (($5 + [16]) & [-16])
	$6 = CALL $8($7)
	*($4 + [56]) = ($7 | [1])
	*($4 + [64]) = $6
	*($4 + [60]) = $5
	
.LABEL $label$12
	CALL memcpy($6, [8525], $5)
	
.LABEL $label$11
	*(($6 + $5)) = [0]
	$8 = *($2)
	if ( ((uint_64)((int_64)$8 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$15 }
	$9 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$10 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$18 }
	$9 = $10
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$18
	$9 = $10
	
.LOOP $label$19:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$15 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $6 ){ goto $label$19 }
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$16 }
	
.LABEL $label$17
	if ( ((int_64)$8 > (int_64)0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL eosio_assert([0], ( *($4 + [64]) ? (($4 + [56]) | [1]) : (*($4 + [56]) & [1]) ))
	
.LABEL $label$14
	if ( ((*($4 + [56]) & [1]) == 0) ){ goto $label$20 }
	CALL $10(*($4 + [64]))
	
.LABEL $label$20
	*(($4 + [64])) = [0]
	*($4 + [56]) = (int_64)0
	$5 = CALL $16([9376])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$23 }
	*($4 + [56]) = ($5 << [1])
	$6 = (($4 + [56]) | [1])
	if ( $5 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	$7 = (($5 + [16]) & [-16])
	$6 = CALL $8($7)
	*($4 + [56]) = ($7 | [1])
	*($4 + [64]) = $6
	*($4 + [60]) = $5
	
.LABEL $label$22
	CALL memcpy($6, [9376], $5)
	
.LABEL $label$21
	*(($6 + $5)) = [0]
	$5 = *($3)
	if ( (( *($3 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ) == 0) ){ goto $label$24 }
	if ( ((*($4 + [56]) & [1]) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$24
	CALL eosio_assert([0], ( *($4 + [64]) ? (($4 + [56]) | [1]) : (*($4 + [56]) & [1]) ))
	if ( (*($4 + [56]) & [1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	CALL $19(($4 + [56]))
	
.LABEL $label$4
	CALL $19(($4 + [56]))
	
.LABEL $label$3
	CALL $19(($4 + [56]))
	
.LABEL $label$2
	CALL $10(*($4 + [64]))
	
.LABEL $label$1
	$5 = [0]
	*(($4 + [88])) = [0]
	*($4 + [72]) = (int_64)-1
	*($4 + [80]) = (int_64)0
	*($4 + [92]) = [0]
	$9 = *($0)
	*($4 + [56]) = $9
	*($4 + [64]) = $9
	*($4 + [48]) = ($4 + [56])
	*($4 + [96]) = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	CALL $32(($4 + [16]), $1, ($4 + [96]), $3)
	CALL $86(($4 + [144]), ($4 + [48]), ($4 + [16]))
	$6 = *($4 + [148])
	if ( ($6 == 0) ){ goto $label$26 }
	*($4) = (uint_64)*(($6 + [40])) >> (uint_64)(int_64)8)
	CALL $32(($4 + [96]), ($6 + [24]), $4, ($6 + [8]))
	if ( ((int_64)(((int_64)((int_64)*($4 + [16]) ^ (int_64)*($4 + [96])) | (int_64)((int_64)*($4 + [24]) ^ (int_64)*($4 + [104]))) == 0) == 0) ){ goto $label$26 }
	$11 = [0]
	if ( ((int_64)((int_64)((int_64)*($4 + [32]) ^ (int_64)*($4 + [112])) | (int_64)((int_64)*((($4 + [16]) + [24])) ^ (int_64)*((($4 + [96]) + [24])))) != (int_64)0) ){ goto $label$25 }
	$11 = *($4 + [148])
	goto $label$25 
	
.LABEL $label$26
	$11 = [0]
	
.LABEL $label$25
	*($4) = (int_64)0
	$9 = *(($2 + [8]))
	*($4 + [8]) = $9
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	
.LOOP $label$32:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$31 }
	$10 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$34 }
	$9 = $10
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$32 }
	goto $label$33 
	
.LABEL $label$34
	$9 = $10
	
.LOOP $label$35:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$31 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $6 ){ goto $label$35 }
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$32 }
	
.LABEL $label$33
	$9 = *($0)
	if ( ($11 == 0) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$31
	CALL eosio_assert([0], [8340])
	$9 = *($0)
	if ( $11 ){ goto $label$29 }
	
.LABEL $label$30
	*($4 + [100]) = $1
	*($4 + [104]) = $3
	*($4 + [108]) = $2
	*($4 + [96]) = ($4 + [56])
	*($4 + [112]) = $4
	*($4 + [168]) = $9
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [56])) ){ goto $label$36 }
	CALL eosio_assert([0], [9917])
	
.LABEL $label$36
	*($4 + [148]) = ($4 + [96])
	*($4 + [144]) = ($4 + [56])
	*($4 + [152]) = ($4 + [168])
	*(($5 = CALL $8([80])) + [16]) = [0]
	*($5 + [8 align=4]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [68]) = ($4 + [56])
	CALL $87(($4 + [144]), $5)
	*($4 + [160]) = $5
	$9 = *($5)
	*($4 + [144]) = $9
	$7 = *($5 + [72])
	*($4 + [140]) = $7
	$3 = ($4 + [84])
	$6 = *($3)
	if ( ((uint_32)$6 >= (uint_32)*(($4 + [88]))) ){ goto $label$39 }
	*($6 + [8]) = $9
	*($6 + [16]) = $7
	*($4 + [160]) = [0]
	*($6) = $5
	*($3) = ($6 + [24])
	$5 = *($4 + [160])
	*($4 + [160]) = [0]
	if ( ($5 == 0) ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$39
	CALL $88(($4 + [80]), ($4 + [160]), ($4 + [144]), ($4 + [140]))
	$5 = *($4 + [160])
	*($4 + [160]) = [0]
	if ( $5 ){ goto $label$37 }
	
.LABEL $label$38
	CALL $89($0, $1, $2, $4)
	$7 = *($4 + [80])
	if ( ($7 == 0) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$37
	if ( ((*($5 + [8]) & [1]) == 0) ){ goto $label$40 }
	CALL $10(*(($5 + [16])))
	
.LABEL $label$40
	CALL $10($5)
	CALL $89($0, $1, $2, $4)
	$7 = *($4 + [80])
	if ( $7 ){ goto $label$27 }
	goto $label$28 
	
.LABEL $label$29
	*($4 + [96]) = $2
	CALL $90(*($4 + [48]), $11, $9, ($4 + [96]))
	CALL $89($0, $1, $2, $4)
	$7 = *($4 + [80])
	if ( $7 ){ goto $label$27 }
	
.LABEL $label$28
	$global$0 = ($4 + [176])
	return 
	
.LABEL $label$27
	$2 = ($4 + [84])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$42 }
	
.LOOP $label$43:
	$5 = ($5 + [-24])
	$6 = *($5)
	*($5) = [0]
	if ( ($6 == 0) ){ goto $label$44 }
	if ( ((*($6 + [8]) & [1]) == 0) ){ goto $label$45 }
	CALL $10(*(($6 + [16])))
	
.LABEL $label$45
	CALL $10($6)
	
.LABEL $label$44
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$43 }
	$5 = *(($4 + [80]))
	goto $label$41 
	
.LABEL $label$42
	$5 = $7
	
.LABEL $label$41
	*($2) = $7
	CALL $10($5)
	$global$0 = ($4 + [176])
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [20]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10234])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10279])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1 + [8])
	if ( (uint_64)(((int_64)*(*(($4 + [-24])) + [8]) ^ (int_64)$6) <= (int_64)256) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((uint_64)((int_64)*(*($9) + [8]) ^ (int_64)$6) >= (uint_64)(int_64)256) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10329])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $10($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $10($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [24]))
}

void .FUNC $83 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [144])
	$global$0 = $3
	CALL require_auth($1)
	if ( CALL is_account($1) ){ goto $label$1 }
	CALL eosio_assert([0], [9019])
	
.LABEL $label$1
	$4 = *($2 + [8])
	*((($3 + [120]) + [8])) = $4
	$5 = *($2)
	*((($3 + [32]) + [8])) = $4
	*($3 + [120]) = $5
	*($3 + [32]) = $5
	CALL $70($0, ($3 + [32]))
	$6 = *($2 + [8])
	*((($3 + [104]) + [8])) = $6
	$5 = *($2)
	*((($3 + [16]) + [8])) = $6
	*($3 + [16]) = $5
	*($3 + [104]) = $5
	CALL $71($0, $1, ($3 + [16]))
	$7 = [0]
	*(($3 + [96])) = [0]
	*($3 + [72]) = $1
	*($3 + [80]) = (int_64)-1
	*($3 + [88]) = (int_64)0
	$5 = *($0)
	*($3 + [64]) = $5
	$8 = CALL db_find_i64($5, $1, (int_64)-3106564262979026944, (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_32)$8) <= (int_32)[-1]) ){ goto $label$3 }
	$7 = CALL $64(($3 + [64]), $8)
	if ( ((int_32)*($7 + [20]) == (int_32)($3 + [64])) ){ goto $label$2 }
	CALL eosio_assert([0], [9843])
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [9134])
	
.LABEL $label$2
	if ( ((uint_32)(*($7 + [16]) + [86400]) > (uint_32)(CASTING uint_32)(uint_64 ((int_64)CALL $30() / (int_64)1000000))) ){ goto $label$4 }
	CALL eosio_assert([0], [9168])
	
.LABEL $label$4
	if ( ((int_64)*($7 + [8]) != (int_64)*(($2 + [8]))) ){ goto $label$9 }
	if ( ((int_64)*($7) != (int_64)*($2)) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL eosio_assert([0], [9704])
	if ( ((int_64)*($7) == (int_64)*($2)) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [9195])
	if ( $7 ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$7
	if ( $7 ){ goto $label$5 }
	
.LABEL $label$6
	CALL eosio_assert([0], [10170])
	CALL eosio_assert([0], [10204])
	
.LABEL $label$5
	$8 = CALL db_next_i64(*($7 + [24]), ($3 + [136]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$10 }
	CALL $64(($3 + [64]), $8)
	
.LABEL $label$10
	CALL $84(($3 + [64]), $7)
	$5 = *(($2 + [8]))
	*((($3 + [48]) + [8])) = $5
	$4 = *($2)
	*(($3 + [8])) = $5
	*($3) = $4
	*($3 + [48]) = $4
	CALL $72($0, $1, $1, $3)
	$0 = *($3 + [88])
	if ( ($0 == 0) ){ goto $label$11 }
	$8 = ($3 + [92])
	$2 = *($8)
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$13 }
	
.LOOP $label$14:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$15 }
	CALL $10($7)
	
.LABEL $label$15
	if ( ((int_32)$0 != (int_32)$2) ){ goto $label$14 }
	$2 = *(($3 + [88]))
	goto $label$12 
	
.LABEL $label$13
	$2 = $0
	
.LABEL $label$12
	*($8) = $0
	CALL $10($2)
	
.LABEL $label$11
	$global$0 = ($3 + [144])
}

void .FUNC $82 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $29($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $81 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [20]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9974])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10020])
	
.LABEL $label$2
	$3 = *($3)
	*($1) = *($3)
	$6 = *($1 + [8])
	*($1 + [8]) = *(($3 + [8]))
	*($1 + [16]) = ((int_64)CALL $30() / (int_64)1000000)
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)$6) == (int_64)(uint_64)*($1 + [8]) >> (uint_64)(int_64)8)) ){ goto $label$3 }
	CALL eosio_assert([0], [10071])
	
.LABEL $label$3
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-12])
	CALL $80($5, $1)
	CALL db_update_i64(*($1 + [24]), $2, $4, [20])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$4
	$global$0 = ($5 + [16])
}

int_32 .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9968])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *($1 + [8])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9968])
	$4 = *($3)
	
.LABEL $label$2
	$6 = ($1 + [16])
	CALL memcpy($4, ($2 + [8]), [8])
	$1 = (*($3) + [8])
	*($3) = $1
	if ( ((int_32)(*($5) - $1) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [9968])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $6, [4])
	*(($3 = ($0 + [4]))) = (*($3) + [4])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $72 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [80])
	$global$0 = $4
	*(($4 + [32])) = [0]
	*($4 + [16]) = (int_64)-1
	*($4 + [24]) = (int_64)0
	$5 = *($0)
	*($4) = $5
	$6 = *($3 + [8])
	*($4 + [8]) = $1
	$0 = CALL db_find_i64($5, $1, (int_64)-8281832574272782336, (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_32)$0) < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $63($4, $0)
	if ( ((int_32)*($0 + [16]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [9843])
	
.LABEL $label$4
	*($4 + [48]) = $3
	CALL $73($4, $0, $2, ($4 + [48]))
	$7 = *($4 + [24])
	if ( $7 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((int_64)CALL current_receiver() == (int_64)*($4)) ){ goto $label$5 }
	CALL eosio_assert([0], [9917])
	
.LABEL $label$5
	*(($0 = CALL $8([32])) + [16]) = $4
	*($0 + [8]) = *(($3 + [8]))
	*($0) = *($3)
	CALL memcpy(($4 + [48]), $0, [8])
	*($4 + [72]) = *($0 + [8])
	CALL memcpy((($4 + [48]) | [8]), ($4 + [72]), [8])
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8
	$7 = CALL db_store_i64(*(($4 + [8])), (int_64)-8281832574272782336, $2, $1), ($4 + [48]), [16]
	*($0 + [20]) = $7)
	$3 = ($4 + [16])
	if ( (uint_64)($1 <= *($3)) ){ goto $label$6 }
	*($3) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$6
	*($4 + [72]) = $0
	$1 = (uint_64)*(($0 + [8])) >> (uint_64)(int_64)8
	*($4 + [48]) = $1)
	*($4 + [44]) = $7
	$8 = ($4 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($4 + [32]))) ){ goto $label$9 }
	*($3 + [8]) = $1
	*($3 + [16]) = $7
	*($4 + [72]) = [0]
	*($3) = $0
	*($8) = ($3 + [24])
	$0 = *($4 + [72])
	*($4 + [72]) = [0]
	if ( $0 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $74(($4 + [24]), ($4 + [72]), ($4 + [48]), ($4 + [44]))
	$0 = *($4 + [72])
	*($4 + [72]) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $10($0)
	
.LABEL $label$7
	$7 = *($4 + [24])
	if ( ($7 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$8 = ($4 + [28])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$13 }
	CALL $10($3)
	
.LABEL $label$13
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($4 + [24]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $7
	
.LABEL $label$10
	*($8) = $7
	CALL $10($0)
	
.LABEL $label$1
	$global$0 = ($4 + [80])
}

void .FUNC $73 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9974])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10020])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9763])
	
.LABEL $label$3
	$7 = ((int_64)*($1) + (int_64)*($3))
	*($1) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9806])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9825])
	
.LABEL $label$5
	$3 = ($1 + [8])
	if ( ((int_64)$6 == (int_64)(uint_64)*($3) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10071])
	
.LABEL $label$6
	$8 = $4
	$4 = ($8 + [-16])
	$global$0 = $4
	CALL memcpy($4, $1, [8])
	*($5 + [8]) = *($3)
	CALL memcpy(($8 + [-8]), ($5 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = *($1 + [8])
	*(($2 + [40])) = [0]
	$4 = (uint_64)$3 >> (uint_64)(int_64)8
	*($2 + [16]) = $4)
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	*($2 + [8]) = *($0)
	$5 = CALL $59(($2 + [8]), $4, [9228])
	$6 = *($1)
	if ( ((uint_64)((int_64)$6 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$2 }
	$1 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$4 = $7
	$0 = $1
	$1 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$4 = $7
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$0 = ((int_32)$1 < (int_32)[6])
	$8 = ($1 + [1])
	$1 = $8
	if ( $0 ){ goto $label$5 }
	$1 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8525])
	
.LABEL $label$1
	if ( ((int_64)$3 != (int_64)*($5 + [8])) ){ goto $label$10 }
	if ( ((int_64)$6 <= (int_64)0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL eosio_assert([0], [8571])
	if ( ((int_64)$6 > (int_64)0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL eosio_assert([0], [9262])
	$8 = *($2 + [32])
	if ( ($8 == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$8 = *($2 + [32])
	if ( $8 ){ goto $label$6 }
	
.LABEL $label$7
	$global$0 = ($2 + [48])
	return 
	
.LABEL $label$6
	$5 = ($2 + [36])
	$1 = *($5)
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$12 }
	
.LOOP $label$13:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$14 }
	CALL $10($0)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$1) ){ goto $label$13 }
	$1 = *(($2 + [32]))
	goto $label$11 
	
.LABEL $label$12
	$1 = $8
	
.LABEL $label$11
	*($5) = $8
	CALL $10($1)
	$global$0 = ($2 + [48])
}

void .FUNC $71 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [48])
	$global$0 = $3
	$4 = *($2 + [8])
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$5 = *($0)
	*($3 + [8]) = $5
	*($3 + [16]) = $1
	$0 = CALL db_find_i64($5, $1, (int_64)3607749779137757184, (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_32)$0) < (int_32)[0]) ){ goto $label$3 }
	if ( ((int_32)*(CALL $47(($3 + [8]), $0) + [16]) == (int_32)($3 + [8])) ){ goto $label$4 }
	CALL eosio_assert([0], [9843])
	
.LABEL $label$4
	$6 = *($3 + [32])
	if ( $6 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [9291])
	$6 = *($3 + [32])
	if ( ($6 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($3 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$8 }
	CALL $10($2)
	
.LABEL $label$8
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($3 + [32]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $6
	
.LABEL $label$5
	*($7) = $6
	CALL $10($0)
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$1
	$global$0 = ($3 + [48])
}

void .FUNC $76 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9974])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10020])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9613])
	
.LABEL $label$3
	$7 = (int_64)
	*($1) = $7(*($1) - *($3)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9661])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9683])
	
.LABEL $label$5
	$3 = ($1 + [8])
	if ( ((int_64)$6 == (int_64)(uint_64)*($3) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10071])
	
.LABEL $label$6
	$8 = $4
	$4 = ($8 + [-16])
	$global$0 = $4
	CALL memcpy($4, $1, [8])
	*($5 + [8]) = *($3)
	CALL memcpy(($8 + [-8]), ($5 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10234])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10279])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1 + [8])
	if ( (uint_64)(((int_64)*(*(($4 + [-24])) + [8]) ^ (int_64)$6) <= (int_64)256) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((uint_64)((int_64)*(*($9) + [8]) ^ (int_64)$6) >= (uint_64)(int_64)256) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10329])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $10($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $10($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $74 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $8(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $29($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $10($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $10($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $39 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [128])
	$global$0 = $3
	CALL require_auth(*($0))
	$4 = [0]
	$5 = *($2 + [8])
	$6 = (uint_64)$5 >> (uint_64)(int_64)8
	$7 = $6)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$7 = $8
	$9 = $4
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = $8
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$4 < (int_32)[6])
	$10 = ($4 + [1])
	$4 = $10
	if ( $9 ){ goto $label$5 }
	$4 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8340])
	
.LABEL $label$1
	$11 = *($2)
	if ( ((uint_64)((int_64)$11 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$7 }
	$4 = [0]
	$7 = $6
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$7 = $8
	$9 = $4
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$7 = $8
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$4 < (int_32)[6])
	$10 = ($4 + [1])
	$4 = $10
	if ( $9 ){ goto $label$10 }
	$4 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [8360])
	
.LABEL $label$6
	if ( ((int_64)$11 > (int_64)0) ){ goto $label$11 }
	CALL eosio_assert([0], [8375])
	
.LABEL $label$11
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$7 = *($0)
	*($3 + [8]) = $7
	*($3 + [16]) = $6
	$4 = CALL db_find_i64($7, $6, (int_64)-4157508551318700032, $6)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$12 }
	if ( ((int_32)*(CALL $40(($3 + [8]), $4) + [40]) == (int_32)($3 + [8])) ){ goto $label$13 }
	CALL eosio_assert([0], [9843])
	
.LABEL $label$13
	CALL eosio_assert([0], [8403])
	
.LABEL $label$12
	$8 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($3 + [8])) ){ goto $label$14 }
	CALL eosio_assert([0], [9917])
	
.LABEL $label$14
	*(($4 = CALL $8([56]))) = (int_64)0
	*($4 + [40]) = ($3 + [8])
	*($4 + [8]) = $5
	*($4 + [32]) = $1
	*($4 + [16]) = *($2)
	*(($4 + [24])) = *(($2 + [8]))
	*($3 + [96]) = (($3 + [48]) + [40])
	*($3 + [92]) = ($3 + [48])
	*($3 + [88]) = ($3 + [48])
	*($3 + [104]) = ($3 + [88])
	*($3 + [116]) = ($4 + [16])
	*($3 + [112]) = $4
	*($3 + [120]) = ($4 + [32])
	CALL $41(($3 + [112]), ($3 + [104]))
	$7 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	$10 = CALL db_store_i64(*((($3 + [8]) + [8])), (int_64)-4157508551318700032, $8, $7), ($3 + [48]), [40]
	*($4 + [44]) = $10)
	$9 = (($3 + [8]) + [16])
	if ( (uint_64)($7 <= *($9)) ){ goto $label$15 }
	*($9) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$15
	*($3 + [112]) = $4
	$7 = (uint_64)*(($4 + [8])) >> (uint_64)(int_64)8
	*($3 + [48]) = $7)
	*($3 + [88]) = $10
	$2 = ($3 + [36])
	$9 = *($2)
	if ( ((uint_32)$9 >= (uint_32)*((($3 + [8]) + [32]))) ){ goto $label$18 }
	*($9 + [8]) = $7
	*($9 + [16]) = $10
	*($3 + [112]) = [0]
	*($9) = $4
	*($2) = ($9 + [24])
	$4 = *($3 + [112])
	*($3 + [112]) = [0]
	if ( $4 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $42(($3 + [32]), ($3 + [112]), ($3 + [48]), ($3 + [88]))
	$4 = *($3 + [112])
	*($3 + [112]) = [0]
	if ( ($4 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL $10($4)
	
.LABEL $label$16
	$10 = *($3 + [32])
	if ( ($10 == 0) ){ goto $label$19 }
	$2 = ($3 + [36])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$10) ){ goto $label$21 }
	
.LOOP $label$22:
	$4 = ($4 + [-24])
	$9 = *($4)
	*($4) = [0]
	if ( ($9 == 0) ){ goto $label$23 }
	CALL $10($9)
	
.LABEL $label$23
	if ( ((int_32)$10 != (int_32)$4) ){ goto $label$22 }
	$4 = *(($3 + [32]))
	goto $label$20 
	
.LABEL $label$21
	$4 = $10
	
.LABEL $label$20
	*($2) = $10
	CALL $10($4)
	
.LABEL $label$19
	$global$0 = ($3 + [128])
}

void .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$2 = ($global$0 - [48])
	$global$0 = $2
	*($0 + [4 align=4]) = (int_64)0
	*($0) = ($0 + [4])
	*(($2 + [24])) = [0]
	*($2 + [16]) = (int_64)0
	$3 = CALL $16([8335])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($2 + [16]) = ($3 << [1])
	$4 = (($2 + [16]) | [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($3 + [16]) & [-16])
	$4 = CALL $8($5)
	*($2 + [16]) = ($5 | [1])
	*($2 + [24]) = $4
	*($2 + [20]) = $3
	
.LABEL $label$3
	CALL memcpy($4, [8335], $3)
	
.LABEL $label$2
	*(($4 + $3)) = [0]
	CALL $34(($2 + [32]), $1, ($2 + [16]))
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $10(*($2 + [24]))
	
.LABEL $label$5
	$6 = *($2 + [36])
	$5 = *($2 + [32])
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$7 }
	$7 = ($2 | [1])
	$8 = ($2 | [1])
	$9 = ($2 + [8])
	$10 = ($0 + [4])
	
.LOOP $label$8:
	*($9) = [0]
	*($2) = (int_64)0
	$3 = CALL $16([8337])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$11 }
	*($2) = ($3 << [1])
	$4 = $8
	if ( $3 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$1 = (($3 + [16]) & [-16])
	$4 = CALL $8($1)
	*($9) = $4
	*($2) = ($1 | [1])
	*($2 + [4]) = $3
	
.LABEL $label$10
	CALL memcpy($4, [8337], $3)
	
.LABEL $label$9
	*(($4 + $3)) = [0]
	CALL $34(($2 + [16]), $5, $2)
	if ( ((*($2) & [1]) == 0) ){ goto $label$12 }
	CALL $10(*($9))
	
.LABEL $label$12
	$1 = *($2 + [16])
	$3 = (*($2 + [20]) - $1)
	if ( ((uint_32)(((int_32)$3 / (int_32)[12]) + [-1]) > (uint_32)[1]) ){ goto $label$13 }
	$4 = *($1)
	if ( ($4 & [1]) ){ goto $label$15 }
	if ( (uint_32($4 >> [1]) == 0) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$15
	if ( (*($1 + [4]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	if ( ((int_32)$3 != (int_32)[24]) ){ goto $label$17 }
	CALL $20($2, ($1 + [12]))
	goto $label$16 
	
.LABEL $label$17
	*($9) = [0]
	*($2) = (int_64)0
	$3 = CALL $16([8339])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$20 }
	*($2) = ($3 << [1])
	$4 = $7
	if ( $3 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	$11 = (($3 + [16]) & [-16])
	$4 = CALL $8($11)
	*($9) = $4
	*($2) = ($11 | [1])
	*($2 + [4]) = $3
	
.LABEL $label$19
	CALL memcpy($4, [8339], $3)
	
.LABEL $label$18
	*(($4 + $3)) = [0]
	
.LABEL $label$16
	$4 = CALL $37($0, ($2 + [44]), $1)
	$3 = *($4)
	if ( $3 ){ goto $label$21 }
	$3 = CALL $8([40])
	CALL $20(($3 + [16]), $1)
	*($3 + [28 align=4]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [8]) = *($2 + [44])
	*($4) = $3
	*($3 + [36]) = [0]
	$1 = $3
	$11 = *(*($0))
	if ( ($11 == 0) ){ goto $label$22 }
	*($0) = $11
	$1 = *($4)
	
.LABEL $label$22
	CALL $38(*($10), $1)
	*(($4 = ($0 + [8]))) = (*($4) + [1])
	
.LABEL $label$21
	CALL $22(($3 + [28]), $2)
	if ( ((*($2) & [1]) == 0) ){ goto $label$23 }
	CALL $10(*($9))
	
.LABEL $label$23
	$1 = *($2 + [16])
	
.LABEL $label$13
	if ( ($1 == 0) ){ goto $label$24 }
	$4 = *($2 + [20])
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$26 }
	
.LOOP $label$27:
	$3 = ($4 + [-12])
	if ( ((*($3) & [1]) == 0) ){ goto $label$28 }
	CALL $10(*(($4 + [-4])))
	
.LABEL $label$28
	$4 = $3
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$27 }
	$3 = *($2 + [16])
	goto $label$25 
	
.LABEL $label$26
	$3 = $1
	
.LABEL $label$25
	*($2 + [20]) = $1
	CALL $10($3)
	
.LABEL $label$24
	$5 = ($5 + [12])
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$8 }
	$5 = *($2 + [32])
	
.LABEL $label$7
	if ( ($5 == 0) ){ goto $label$29 }
	$4 = *($2 + [36])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$31 }
	
.LOOP $label$32:
	$3 = ($4 + [-12])
	if ( ((*($3) & [1]) == 0) ){ goto $label$33 }
	CALL $10(*(($4 + [-4])))
	
.LABEL $label$33
	$4 = $3
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$32 }
	$3 = *($2 + [32])
	goto $label$30 
	
.LABEL $label$31
	$3 = $5
	
.LABEL $label$30
	*($2 + [36]) = $5
	CALL $10($3)
	
.LABEL $label$29
	$global$0 = ($2 + [48])
	return (unreachable)
	
.LABEL $label$6
	CALL $19($2)
	
.LABEL $label$1
	CALL $19(($2 + [16]))
	(unreachable)
}

int_32 .FUNC $37 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = ($0 + [4])
	$0 = *($0 + [4])
	if ( ($0 == 0) ){ goto $label$1 }
	$4 = ($2 + [1])
	$5 = ($2 + [8])
	
.LOOP $label$3:
	$7 = ($0 + [16])
	$12 = ($11 & [1])
	$11 = *($2)
	$10 = ($2 + [4])
	$11 = ( *($10) ? uint_32($11 >> [1]) : $12 )
	$9 = ($6 & [1])
	$6 = *($0 + [16])
	$8 = ($0 + [20])
	$6 = ( *($8) ? uint_32($6 >> [1]) : $9 )
	$13 = ( $6 ? $11 : ($6 <= $11) )
	if ( ($13 == 0) ){ goto $label$7 }
	$9 = CALL $18(( *($5) ? $4 : $12 ), ( *(($0 + [24])) ? ($7 + [1]) : $9 ), $13)
	if ( ($9 == 0) ){ goto $label$7 }
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ((uint_32)$11 >= (uint_32)$6) ){ goto $label$5 }
	
.LABEL $label$6
	$6 = *($0)
	if ( $6 ){ goto $label$4 }
	*($1) = $0
	return $0
	
.LABEL $label$5
	$12 = ($11 & [1])
	$11 = *($7)
	$11 = ( *($8) ? uint_32($11 >> [1]) : $12 )
	$9 = ($6 & [1])
	$6 = *($2)
	$6 = ( *($10) ? uint_32($6 >> [1]) : $9 )
	$13 = ( $6 ? $11 : ($6 <= $11) )
	if ( ($13 == 0) ){ goto $label$9 }
	$7 = CALL $18(( *(($0 + [24])) ? ($7 + [1]) : $12 ), ( *($5) ? $4 : $9 ), $13)
	if ( ($7 == 0) ){ goto $label$9 }
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$2 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((uint_32)$11 >= (uint_32)$6) ){ goto $label$2 }
	
.LABEL $label$8
	$3 = ($0 + [4])
	$6 = *($0 + [4])
	if ( ($6 == 0) ){ goto $label$2 }
	$0 = $3
	
.LABEL $label$4
	$3 = $0
	$0 = $6
	goto $label$3 
	
.LABEL $label$2
	*($1) = $0
	return $3
	
.LABEL $label$1
	*($1) = $3
	return $3
}

void .FUNC $78 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [96])
	$global$0 = $3
	*(($3 + [32])) = [0]
	*($3 + [8]) = $1
	*($3 + [16]) = (int_64)-1
	*($3 + [24]) = (int_64)0
	$4 = *($0)
	*($3) = $4
	$0 = CALL db_find_i64($4, $1, (int_64)-3106564262979026944, (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	if ( ((int_32)$0) < (int_32)[0]) ){ goto $label$7 }
	$0 = CALL $64($3, $0)
	if ( ((int_32)*($0 + [20]) == (int_32)$3) ){ goto $label$8 }
	CALL eosio_assert([0], [9843])
	
.LABEL $label$8
	if ( ((uint_32)(*($0 + [16]) + [86400]) <= (uint_32)(CASTING uint_32)(uint_64 ((int_64)CALL $30() / (int_64)1000000))) ){ goto $label$6 }
	*((($3 + [48]) + [8])) = *(($0 + [8]))
	*($3 + [48]) = *($0)
	*($3 + [80]) = $2
	*($3 + [84]) = ($3 + [48])
	CALL $79($3, $0, $1, ($3 + [80]))
	$5 = *($3 + [24])
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	if ( ((int_64)CALL current_receiver() == (int_64)*($3)) ){ goto $label$9 }
	CALL eosio_assert([0], [9917])
	
.LABEL $label$9
	*(($0 = CALL $8([32])) + [20]) = $3
	*($0 + [8]) = *(($2 + [8]))
	*($0) = *($2)
	*($0 + [16]) = ((int_64)CALL $30() / (int_64)1000000)
	*($3 + [88]) = (($3 + [48]) + [20])
	*($3 + [84]) = ($3 + [48])
	*($3 + [80]) = ($3 + [48])
	CALL $80(($3 + [80]), $0)
	$4 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8
	$5 = CALL db_store_i64(*(($3 + [8])), (int_64)-3106564262979026944, $1, $4), ($3 + [48]), [20]
	*($0 + [24]) = $5)
	$2 = ($3 + [16])
	if ( (uint_64)($4 <= *($2)) ){ goto $label$10 }
	*($2) = ((int_64)$4 + (int_64)1)
	
.LABEL $label$10
	*($3 + [80]) = $0
	$1 = (uint_64)*(($0 + [8])) >> (uint_64)(int_64)8
	*($3 + [48]) = $1)
	*($3 + [44]) = $5
	$6 = ($3 + [28])
	$2 = *($6)
	if ( ((uint_32)$2 >= (uint_32)*(($3 + [32]))) ){ goto $label$5 }
	*($2 + [8]) = $1
	*($2 + [16]) = $5
	*($3 + [80]) = [0]
	*($2) = $0
	*($6) = ($2 + [24])
	$0 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( $0 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	*($3 + [48]) = $2
	CALL $81($3, $0, $1, ($3 + [48]))
	$5 = *($3 + [24])
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	CALL $82(($3 + [24]), ($3 + [80]), ($3 + [48]), ($3 + [44]))
	$0 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( ($0 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $10($0)
	
.LABEL $label$3
	$5 = *($3 + [24])
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($3 + [28])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$12 }
	
.LOOP $label$13:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$14 }
	CALL $10($2)
	
.LABEL $label$14
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$13 }
	$0 = *(($3 + [24]))
	goto $label$11 
	
.LABEL $label$12
	$0 = $5
	
.LABEL $label$11
	*($6) = $5
	CALL $10($0)
	
.LABEL $label$1
	$global$0 = ($3 + [96])
}

void .FUNC $79 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [20]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9974])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10020])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$7 = *($3)
	$8 = *($7)
	$9 = *($7 + [8])
	$3 = *(($3 + [4]))
	if ( ((int_64)*($3 + [8]) == (int_64)$9) ){ goto $label$3 }
	CALL eosio_assert([0], [9763])
	
.LABEL $label$3
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_64)*($3) + (int_64)$8)
	if ( ((int_64)$8 <= (int_64)-4611686018427387904) ){ goto $label$5 }
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9825])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [9806])
	
.LABEL $label$4
	*($1) = $8
	*(($3 = ($1 + [8]))) = $9
	*($1 + [16]) = ((int_64)CALL $30() / (int_64)1000000)
	if ( ((int_64)$6 == (int_64)(uint_64)*($3) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10071])
	
.LABEL $label$6
	$4 = $4
	$3 = ($4 + [-32])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-12])
	CALL $80($5, $1)
	CALL db_update_i64(*($1 + [24]), $2, $3, [20])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $32 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [64])
	$global$0 = $4
	$5 = *($1)
	if ( ((int_64)$5 == (int_64)0) ){ goto $label$4 }
	$6 = [0]
	$7 = *([0] + [9576])
	
.LOOP $label$6:
	*((($4 + [48]) + ($1 = $6))) = *(($7 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$5 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$1 == (int_32)[12]) )))))
	$6 = ($1 + [1])
	if ( ((uint_32)$1 > (uint_32)[11]) ){ goto $label$5 }
	$5 = ((int_64)$5 << (int_64)5)
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$6 }
	
.LABEL $label$5
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$3 }
	*($4 + [16]) = ($6 << [1])
	$7 = (($4 + [16]) | [1])
	goto $label$2 
	
.LABEL $label$4
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	*($4 + [16]) = [0]
	$1 = (($4 + [16]) | [1])
	goto $label$1 
	
.LABEL $label$3
	$8 = (($6 + [16]) & [-16])
	$7 = CALL $8($8)
	*($4 + [16]) = ($8 | [1])
	*($4 + [24]) = $7
	*($4 + [20]) = $6
	
.LABEL $label$2
	$8 = ($1 + [1])
	$1 = [0]
	
.LOOP $label$7:
	*(($7 + $1)) = *((($4 + [48]) + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$8 != (int_32)$1) ){ goto $label$7 }
	$1 = ($7 + $6)
	
.LABEL $label$1
	$6 = [0]
	*($1) = [0]
	$1 = CALL $25(($4 + [16]), [8333])
	$7 = ($1 + [8])
	*((($4 + [32]) + [8])) = *($7)
	*($4 + [32]) = *($1)
	*($1) = (int_64)0
	*($7) = [0]
	$5 = *($2)
	if ( (int_64)($5 == 0) ){ goto $label$11 }
	
.LOOP $label$13:
	*((($4 + [48]) + ($1 = $6))) = $5
	$6 = ($1 + [1])
	if ( ((uint_32)$1 > (uint_32)[5]) ){ goto $label$12 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$13 }
	
.LABEL $label$12
	*(($4 + [8])) = [0]
	*($4) = (int_64)0
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$10 }
	*($4) = ($6 << [1])
	$7 = ($4 | [1])
	goto $label$9 
	
.LABEL $label$11
	*(($4 + [8])) = [0]
	*($4) = (int_64)0
	*($4) = [0]
	$1 = ($4 | [1])
	$6 = $1
	goto $label$8 
	
.LABEL $label$10
	$8 = (($6 + [16]) & [-16])
	$7 = CALL $8($8)
	*($4) = ($8 | [1])
	*($4 + [8]) = $7
	*($4 + [4]) = $6
	
.LABEL $label$9
	$8 = ($1 + [1])
	$1 = [0]
	
.LOOP $label$14:
	*(($7 + $1)) = *((($4 + [48]) + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$8 != (int_32)$1) ){ goto $label$14 }
	$6 = ($7 + $6)
	$1 = ($4 | [1])
	
.LABEL $label$8
	*($6) = [0]
	$6 = *($4)
	$7 = ($6 & [1])
	$1 = CALL $26(($4 + [32]), ( *($4 + [8]) ? $1 : $7 ), ( *($4 + [4]) ? uint_32($6 >> [1]) : $7 ))
	$6 = ($1 + [8])
	*((($4 + [48]) + [8])) = *($6)
	*($4 + [48]) = *($1)
	*($1) = (int_64)0
	*($6) = [0]
	if ( (*($4) & [1]) ){ goto $label$19 }
	if ( (*($4 + [32]) & [1]) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL $10(*(($4 + [8])))
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$17 }
	
.LABEL $label$18
	CALL $10(*($4 + [40]))
	$1 = [1]
	if ( (*($4 + [16]) & [1]) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$1 = [1]
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL $10(*($4 + [24]))
	
.LABEL $label$15
	$6 = *($3)
	if ( (( *($3 + [4]) ? uint_32($6 >> $1) : ($6 & $1) ) == 0) ){ goto $label$20 }
	CALL $25(($4 + [48]), [8333])
	$1 = *($3)
	$6 = ($1 & [1])
	CALL $26(($4 + [48]), ( *($3 + [8]) ? ($3 + [1]) : $6 ), ( *(($3 + [4])) ? uint_32($1 >> [1]) : $6 ))
	
.LABEL $label$20
	$1 = *($4 + [48])
	$6 = ($1 & [1])
	CALL $28($0, ( *($4 + [56]) ? (($4 + [48]) | [1]) : $6 ), ( *($4 + [52]) ? uint_32($1 >> [1]) : $6 ))
	if ( ((*($4 + [48]) & [1]) == 0) ){ goto $label$21 }
	CALL $10(*(($4 + [56])))
	
.LABEL $label$21
	$global$0 = ($4 + [64])
}

int_32 .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = [0]
	$0 = ($0 & [1])
	$0 = *($1)
	$4 = ($0 & [1])
	$0 = *($2)
	$6 = uint_32($0 >> [1])
	$4 = *($1)
	$5 = CALL $21($2, $0, [0], ( *($1 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ), $0)
	$7 = ( *($5 + [4]) ? $6 : $4 )
	if ( ((int_32)$7 != (int_32)( *($1 + [4]) ? uint_32($0 >> [1]) : $0 )) ){ goto $label$6 }
	$1 = ( *($1 + [8]) ? ($1 + [1]) : $0 )
	$0 = ($5 + [1])
	if ( $4 ){ goto $label$7 }
	if ( ($7 == 0) ){ goto $label$5 }
	$4 = ([0] - $6)
	
.LOOP $label$8:
	if ( ((int_32)*($0) != (int_32)*($1)) ){ goto $label$3 }
	$3 = [1]
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$4 = ($4 + [1])
	if ( $4 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$7
	if ( ($7 == 0) ){ goto $label$4 }
	$3 = (CALL $18(( *($5 + [8]) ? $0 : $4 ), $1, $7) == 0)
	$4 = (*($2) & [1])
	
.LABEL $label$6
	if ( ($4 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	$global$0 = ($2 + [16])
	return [1]
	
.LABEL $label$4
	$3 = [1]
	goto $label$2 
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return [0]
	
.LABEL $label$2
	CALL $10(*($5 + [8]))
	
.LABEL $label$1
	$global$0 = ($2 + [16])
	return $3
}

int_64 .FUNC $30 ()
{
	int_64 $0
	if ( (*([0] + [8220]) == 0) ){ goto $label$1 }
	return *([0] + [8224])
	
.LABEL $label$1
	$0 = CALL current_time()
	*([0] + [8220]) = [1]
	*([0] + [8224]) = $0
	return $0
}

void .FUNC $31 (int_32 $0)
{
}

void .FUNC $129 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *(*($0))
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9968])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0)
	$5 = *($3 + [4])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9968])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $5, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = *($5 + [8])
	if ( ((int_32)(*(($4 + [8])) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9968])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $124(*($1), *($3 + [8]))
	$global$0 = ($2 + [16])
}

void .FUNC $127 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = *($1 + [24])
	$4 = ( *(($1 + [28])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ([-24] - $4)
	$5 = (CASTING uint_64)(uint_32 $4)
	$6 = ($1 + [24])
	
.LOOP $label$1:
	$3 = ($3 + [-1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	$4 = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	CALL $120($0, ([0] - $3))
	$4 = *(($0 + [4]))
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$3 = [0]
	
.LABEL $label$2
	*($2 + [12]) = $3
	*($2 + [8]) = $3
	*($2 + [16]) = $4
	$0 = ($4 - $3)
	if ( ((int_32)$0 > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9968])
	
.LABEL $label$4
	CALL memcpy($3, $1, [8])
	$4 = ($3 + [8])
	*($2 + [12]) = $4
	$7 = ($1 + [8])
	if ( ((int_32)($0 + [-8]) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9968])
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = ($3 + [16])
	*($2 + [12]) = $4
	*($2 + [24]) = *(($1 + [16]))
	if ( ((int_32)($0 + [-16]) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9968])
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [24]), [8])
	*($2 + [12]) = ($3 + [24])
	CALL $124(($2 + [8]), $6)
	$global$0 = ($2 + [32])
}