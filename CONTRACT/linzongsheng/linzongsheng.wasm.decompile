(data (i32.const 4) "\80k\00\00")
(data (i32.const 16) "invalid symbol name\00")
(data (i32.const 48) "invalid supply\00")
(data (i32.const 64) "max-supply must be positive\00")
(data (i32.const 96) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 160) "token with symbol already exists\00")
(data (i32.const 208) "cannot create objects in table of another contract\00")
(data (i32.const 272) "write\00")
(data (i32.const 288) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 352) "error reading iterator\00")
(data (i32.const 384) "read\00")
(data (i32.const 400) "invalid symbol name\ef\bc\81\00")
(data (i32.const 432) "memo has more than 256 bytes\00")
(data (i32.const 464) "token with symbol does not exist, create token before issue\00")
(data (i32.const 528) "invalid quantity\00")
(data (i32.const 560) "must issue positive quantity or zero\00")
(data (i32.const 608) "symbol precision mismatch\00")
(data (i32.const 640) "quantity exceeds available supply\00")
(data (i32.const 688) "object passed to modify is not in multi_index\00")
(data (i32.const 736) "cannot modify objects in table of another contract\00")
(data (i32.const 800) "attempt to add asset with different symbol\00")
(data (i32.const 848) "addition underflow\00")
(data (i32.const 880) "addition overflow\00")
(data (i32.const 912) "updater cannot change primary key when modifying an object\00")
(data (i32.const 976) "active\00")
(data (i32.const 992) "cannot pass end iterator to modify\00")
(data (i32.const 1040) "token with symbol does not exist, create token before burn\00")
(data (i32.const 1104) "must burn positive or zero quantity\00")
(data (i32.const 1152) "attempt to subtract asset with different symbol\00")
(data (i32.const 1200) "subtraction underflow\00")
(data (i32.const 1232) "subtraction overflow\00")
(data (i32.const 1264) "no balance object found\00")
(data (i32.const 1296) "overdrawn balance\00")
(data (i32.const 1328) "TEA\00")
(data (i32.const 1344) "token with symbol does not exist, create token before signup\00")
(data (i32.const 1408) "you have already signed up\00")
(data (i32.const 1440) "quantity exceeds signup allowance\00")
(data (i32.const 1488) "linzongsheng\00")
(data (i32.const 1504) "transfer\00")
(data (i32.const 1536) "cannot transfer to self\00")
(data (i32.const 1568) "to account does not exist\00")
(data (i32.const 1600) "unable to find key\00")
(data (i32.const 1632) "must transfer positive quantity\00")
(data (i32.const 1664) "Balance row already deleted or never existed. Action won\'t have any effect.\00")
(data (i32.const 1744) "Cannot close because the balance is not zero.\00")
(data (i32.const 1792) "cannot pass end iterator to erase\00")
(data (i32.const 1840) "cannot increment end iterator\00")
(data (i32.const 1872) "object passed to erase is not in multi_index\00")
(data (i32.const 1920) "cannot erase objects in table of another contract\00")
(data (i32.const 1984) "attempt to remove object that was not in multi_index\00")
(data (i32.const 2048) "invalid quantity!\00")
(data (i32.const 2080) "dividend amount must more than 10000\00")
(data (i32.const 2128) "Assets are not equal to assets that have not been redeemed \00")
(data (i32.const 2192) "never mortgaged\00")
(data (i32.const 2208) " quantity is more than mortgages\' amount \00")
(data (i32.const 2256) "refund\00")
(data (i32.const 2272) "refund request never found\00")
(data (i32.const 2304) "refund is not available yet\00")
(data (i32.const 2336) "eosteahongli\00")
(data (i32.const 2352) "The dividend is not due\00")
(data (i32.const 2384) "claim\00")
(data (i32.const 2400) "claim is not available yet\00")
(data (i32.const 2432) "deposit amount must be positive\00")
(data (i32.const 2464) "dividend\00")
(data (i32.const 2480) "_self\00")
(data (i32.const 2496) "setfactor\00")
(data (i32.const 2512) "onerror\00")
(data (i32.const 2528) "eosio\00")
(data (i32.const 2544) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 2608) "singleton does not exist\00")
(data (i32.const 2640) "get\00")
(data (i32.const 11040) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(import "env" "abort" (func $fimport$0))
(import "env" "action_data_size" (func $fimport$1 (result i32)))
(import "env" "cancel_deferred" (func $fimport$2 (param i32) (result i32)))
(import "env" "current_receiver" (func $fimport$3 (result i64)))
(import "env" "current_time" (func $fimport$4 (result i64)))
(import "env" "db_find_i64" (func $fimport$5 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$6 (param i32 i32 i32) (result i32)))
(import "env" "db_idx64_find_primary" (func $fimport$7 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$8 (param i32)))
(import "env" "db_idx64_store" (func $fimport$9 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx64_update" (func $fimport$10 (param i32 i64 i32)))
(import "env" "db_lowerbound_i64" (func $fimport$11 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$12 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$13 (param i32)))
(import "env" "db_store_i64" (func $fimport$14 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$15 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$16 (param i32 i32)))
(import "env" "is_account" (func $fimport$17 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$18 (param i32 i32 i32) (result i32)))
(import "env" "prints" (func $fimport$19 (param i32)))
(import "env" "read_action_data" (func $fimport$20 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$21 (param i64)))
(import "env" "require_auth2" (func $fimport$22 (param i64 i64)))
(import "env" "require_recipient" (func $fimport$23 (param i64)))
(import "env" "send_deferred" (func $fimport$24 (param i32 i64 i32 i32 i32)))
(import "env" "send_inline" (func $fimport$25 (param i32 i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_ZN5eosio5token6createEyNS_5assetE" (func $5))
(export "_ZN5eosio5token5issueEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $11))
(export "_ZN5eosio5token8do_issueEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEb" (func $12))
(export "_ZN5eosio5token11add_balanceEyNS_5assetEy" (func $13))
(export "_ZN5eosio5token4burnEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $24))
(export "_ZN5eosio5token11sub_balanceEyNS_5assetE" (func $25))
(export "_ZN5eosio5token6signupEyNS_5assetEy" (func $27))
(export "_ZN5eosio5token8transferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $28))
(export "_ZN5eosio5token11do_transferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEb" (func $29))
(export "_ZN5eosio5token5closeEyNS_5assetE" (func $31))
(export "_ZN5eosio5token7depositEyNS_5assetE" (func $33))
(export "_ZN5eosio5token4lockEyNS_5assetEy" (func $34))
(export "_ZN5eosio5token6redeemEyNS_5assetE" (func $50))
(export "_ZN5eosio5token6refundEy" (func $52))
(export "_ZN5eosio5token8dividendEy" (func $64))
(export "_ZN5eosio5token5claimEyy" (func $65))
(export "_ZN5eosio5token9setfactorEyyyyy" (func $66))
(export "_ZN5eosio5token4initEm" (func $67))
(export "_ZN5eosio5token22get_default_parametersEv" (func $70))
(export "apply" (func $71))
(export "malloc" (func $83))
(export "free" (func $86))
(export "memcmp" (func $93))
(export "strlen" (func $94))
(table $0 11 11 anyfunc)
(elem (i32.const 0) $95 $24 $11 $52 $5 $27 $28 $33 $64 $50 $31)



int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

void .FUNC $95 ()
{
	(unreachable)
}

void .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $87(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $88($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $91 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $87($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

void .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$6 = *($0 + [4])
	*($1 + [8]) = *(*($6))
	$2 = *($0)
	$7 = *($6 + [4])
	$5 = ((int_64)*($7 + [8]) + (int_64)1)
	*($1) = $5
	*($7 + [8]) = $5
	$6 = *($6 + [8])
	*($1 + [16]) = *($6)
	*(($1 + [24])) = *(($6 + [8]))
	*($1 + [32]) = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [86400])
	*($1 + [36]) = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [604800])
	CALL eosio_assert([1], [288])
	$5 = (int_64)4277588
	$6 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$7 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [16])
	*(($1 + [48])) = (int_64)1095062532
	*($1 + [40]) = (int_64)0
	$7 = $9
	$6 = ($7 + [-64])
	*([0] + [4]) = $6
	*($8 + [12]) = $6
	*($8 + [8]) = $6
	*($8 + [16]) = ($7 + [-8])
	CALL $48(($8 + [8]), $1)
	$7 = ($1 + [8])
	$5 = *($7)
	*($1 + [60]) = CALL db_store_i64(*($2 + [8]), (int_64)-7696768201719283712, *(*($0 + [8])), $5, $6, [56])
	if ( (uint_64)($5 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$5 = *($7)
	$3 = *(($2 + [8]))
	$4 = *(*(($0 + [8])))
	*($8 + [24]) = *($1)
	*($1 + [64]) = CALL db_idx64_store($3, (int_64)-7696768201719283712, $4, $5, ($8 + [24]))
	*([0] + [4]) = ($8 + [32])
}

int_32 .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [384])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [384])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [384])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [384])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [384])
	CALL memcpy(($1 + [32]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [384])
	CALL memcpy(($1 + [36]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [384])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [384])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [272])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [272])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [272])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [272])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [272])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [272])
	CALL memcpy(*($0 + [4]), ($1 + [36]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [272])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [272])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $43 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$3()), [208])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $87([88])
	CALL $44($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	*($7 + [16]) = (int_64)7235159550150574080
	$4 = *($3 + [76])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = (int_64)7235159550150574080
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $45(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $88($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $42 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [72]) == (int_32)$0), [688])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [736])
	CALL memcpy($1, *($3), [72])
	CALL eosio_assert([1], [912])
	*($4 + [88]) = ($4 + [72])
	*($4 + [84]) = $4
	*($4 + [80]) = $4
	CALL $46(($4 + [80]), $1)
	CALL db_update_i64(*($1 + [76]), $2, $4, [72])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)7235159550150574080) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)7235159550150574081
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [96])
}

int_32 .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [352])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $87([88])) + [24]) = (int_64)1398362884
	*($4 + [16]) = (int_64)0
	CALL eosio_assert([1], [288])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [16])
	*($4 + [72]) = $0
	CALL $47(($8 + [32]), $4)
	*($4 + [76]) = $1
	*($8 + [24]) = $4
	*($8 + [16]) = (int_64)7235159550150574080
	$6 = *($4 + [76])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = (int_64)7235159550150574080
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $45($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $88($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $40 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [72]) == (int_32)$0), [96])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)7235159550150574080, (int_64)7235159550150574080)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $41($0, $3)
	CALL eosio_assert(((int_32)*($3 + [72]) == (int_32)$0), [96])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [992])
	CALL $42($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $43($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [384])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [384])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [384])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [384])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [384])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [384])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [384])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [384])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [384])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [272])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [272])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [272])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [272])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [272])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [272])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [272])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [272])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [272])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $45 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $87(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $91($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $88($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $88($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $44 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [96])
	*([0] + [4]) = $6
	*($0 + [16]) = (int_64)0
	*(($4 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [288])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [16])
	*($0 + [72]) = $1
	$5 = *($2)
	$4 = CALL memcpy($0, *(*($2 + [4])), [72])
	*($6 + [88]) = ($6 + [72])
	*($6 + [84]) = $6
	*($6 + [80]) = $6
	CALL $46(($6 + [80]), $4)
	*($4 + [76]) = CALL db_store_i64(*($5 + [8]), (int_64)7235159550150574080, *(*($2 + [8])), (int_64)7235159550150574080, $6, [72])
	if ( ((uint_64)*($5 + [16]) > (uint_64)(int_64)7235159550150574080) ){ goto $label$6 }
	*(($5 + [16])) = (int_64)7235159550150574081
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [96])
	return $4
}

void .FUNC $8 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [272])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [272])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [272])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [272])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [272])
	CALL memcpy(*($2 + [4]), $0, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $9 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $87(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $91($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $88($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $88($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $6 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [352])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $87([56])
	CALL $7($6)
	*($6 + [40]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [16])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [32])
	CALL $10(($8 + [32]), ($8 + [24]))
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = (uint_64)*($6 + [8]) >> (uint_64)(int_64)8
	*($8 + [32]) = $5)
	$7 = *($6 + [44])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $9(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $88($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $7 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [288])
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [16])
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [288])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [16])
	return $0
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC _ZN5eosio5token6createEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [128])
	*([0] + [4]) = $9
	CALL require_auth(*($0))
	$8 = [0]
	$3 = *($2 + [8])
	$4 = (uint_64)$3 >> (uint_64)(int_64)8
	$7 = $4)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [16])
	$6 = [0]
	$5 = *($2)
	if ( ((uint_64)((int_64)$5 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$6 }
	$8 = [0]
	$7 = $4
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$6 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$6 = [0]
	
.LABEL $label$6
	CALL eosio_assert($6, [48])
	CALL eosio_assert(((int_64)$5 > (int_64)0), [64])
	*((($9 + [8]) + [32])) = [0]
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	$7 = *($0)
	*($9 + [8]) = $7
	*($9 + [16]) = $4
	$8 = CALL db_find_i64($7, $4, (int_64)-4157508551318700032, $4)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$12 }
	CALL eosio_assert(((int_32)*(CALL $6(($9 + [8]), $8) + [40]) == (int_32)($9 + [8])), [96])
	$8 = [0]
	goto $label$11 
	
.LABEL $label$12
	$8 = [1]
	
.LABEL $label$11
	CALL eosio_assert($8, [160])
	$4 = *($0)
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$3()), [208])
	$8 = CALL $87([56])
	CALL $7($8)
	*($8 + [40]) = ($9 + [8])
	*($8 + [8]) = $3
	*(($8 + [28])) = *(($2 + [12]))
	*(($8 + [24])) = *(($2 + [8]))
	*(($8 + [20])) = *(($2 + [4]))
	*($8 + [16]) = *($2)
	*($8 + [32]) = $1
	*($9 + [96]) = (($9 + [48]) + [40])
	*($9 + [92]) = ($9 + [48])
	*($9 + [88]) = ($9 + [48])
	*($9 + [104]) = ($9 + [88])
	*($9 + [116]) = ($8 + [16])
	*($9 + [112]) = $8
	*($9 + [120]) = ($8 + [32])
	CALL $8(($9 + [112]), ($9 + [104]))
	$7 = (uint_64)*($8 + [8]) >> (uint_64)(int_64)8
	$6 = CALL db_store_i64(*((($9 + [8]) + [8])), (int_64)-4157508551318700032, $4, $7), ($9 + [48]), [40]
	*($8 + [44]) = $6)
	$2 = (($9 + [8]) + [16])
	if ( (uint_64)($7 <= *($2)) ){ goto $label$13 }
	*($2) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$13
	*($9 + [112]) = $8
	$7 = (uint_64)*(($8 + [8])) >> (uint_64)(int_64)8
	*($9 + [48]) = $7)
	*($9 + [88]) = $6
	$2 = *((($9 + [8]) + [28]))
	if ( ((uint_32)$2 >= (uint_32)*(($9 + [40]))) ){ goto $label$15 }
	*($2 + [8]) = $7
	*($2 + [16]) = $6
	*($9 + [112]) = [0]
	*($2) = $8
	*(($9 + [36])) = ($2 + [24])
	goto $label$14 
	
.LABEL $label$15
	CALL $9(($9 + [32]), ($9 + [112]), ($9 + [48]), ($9 + [88]))
	
.LABEL $label$14
	$8 = *($9 + [112])
	*($9 + [112]) = [0]
	if ( ($8 == 0) ){ goto $label$16 }
	CALL $88($8)
	
.LABEL $label$16
	$6 = *($9 + [32])
	if ( ($6 == 0) ){ goto $label$17 }
	$0 = ($9 + [36])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$19 }
	
.LOOP $label$20:
	$8 = ($8 + [-24])
	$2 = *($8)
	*($8) = [0]
	if ( ($2 == 0) ){ goto $label$21 }
	CALL $88($2)
	
.LABEL $label$21
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$20 }
	$8 = *(($9 + [32]))
	goto $label$18 
	
.LABEL $label$19
	$8 = $6
	
.LABEL $label$18
	*($0) = $6
	CALL $88($8)
	
.LABEL $label$17
	*([0] + [4]) = ($9 + [128])
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC $14 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [96])
	*([0] + [4]) = $9
	*($9 + [16]) = [0]
	*($9 + [8]) = (int_64)0
	$6 = [0]
	$7 = [0]
	$8 = [0]
	$4 = (*($2 + [4]) - *($2))
	$5 = int_32($4 >> [4])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$8 = CALL $87($4)
	$6 = ($8 + ($5 << [4]))
	*(($9 + [16])) = $6
	*($9 + [8]) = $8
	*($9 + [12]) = $8
	$7 = *($2)
	$2 = (*(($2 + [4])) - $7)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($8, $7, $2)
	$7 = ($8 + $2)
	*($9 + [12]) = $7
	goto $label$2 
	
.LABEL $label$3
	$7 = $8
	
.LABEL $label$2
	*(($9 + [44])) = $7
	*($9 + [32]) = $1
	*(($9 + [16])) = [0]
	*(($9 + [48])) = $6
	*($9 + [24]) = $0
	*($9 + [40]) = $8
	*($9 + [8]) = (int_64)0
	*($9 + [52]) = [0]
	*((($9 + [24]) + [32])) = [0]
	*((($9 + [24]) + [36])) = [0]
	$8 = *($3 + [32])
	$2 = ( *(($3 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($2 + [32])
	$0 = (CASTING uint_64)(uint_32 $2)
	$2 = ($9 + [52])
	
.LOOP $label$4:
	$8 = ($8 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$4 }
	if ( ($8 == 0) ){ goto $label$6 }
	CALL $15($2, $8)
	$2 = *(($9 + [56]))
	$8 = *(($9 + [52]))
	goto $label$5 
	
.LABEL $label$6
	$2 = [0]
	$8 = [0]
	
.LABEL $label$5
	*($9 + [84]) = $8
	*($9 + [80]) = $8
	*($9 + [88]) = $2
	*($9 + [64]) = ($9 + [80])
	*($9 + [72]) = $3
	CALL $16(($9 + [72]), ($9 + [64]))
	CALL $17(($9 + [80]), ($9 + [24]))
	$8 = *($9 + [80])
	CALL send_inline($8, (*($9 + [84]) - $8))
	$8 = *($9 + [80])
	if ( ($8 == 0) ){ goto $label$7 }
	*($9 + [84]) = $8
	CALL $88($8)
	
.LABEL $label$7
	$8 = *($9 + [52])
	if ( ($8 == 0) ){ goto $label$8 }
	*(($9 + [56])) = $8
	CALL $88($8)
	
.LABEL $label$8
	$8 = *($9 + [40])
	if ( ($8 == 0) ){ goto $label$9 }
	*(($9 + [44])) = $8
	CALL $88($8)
	
.LABEL $label$9
	$8 = *($9 + [8])
	if ( ($8 == 0) ){ goto $label$10 }
	*($9 + [12]) = $8
	CALL $88($8)
	
.LABEL $label$10
	*([0] + [4]) = ($9 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $91(($9 + [8]))
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $87($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $91($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $88($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $16 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [272])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [272])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [272])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [272])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $20(*($1), ($0 + [32]))
}

void .FUNC $17 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $15($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [272])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [272])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $19(CALL $18($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $10 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [384])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [384])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [384])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [384])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [384])
	CALL memcpy($0, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC _ZN5eosio5token5issueEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	*(($4 = (($5 + [32]) + [8]))) = *(($2 + [8]))
	*($5 + [32]) = *($2)
	CALL $92(($5 + [16]), $3)
	*(($5 + [8])) = *($4)
	*($5) = *($5 + [32])
	CALL _ZN5eosio5token8do_issueEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEb($0, $1, $5, ($5 + [16]), [1])
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$1 }
	CALL $88(*($5 + [24]))
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

void .FUNC _ZN5eosio5token8do_issueEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEb (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_32 $15
	$15 = (*([0] + [4]) - [256])
	*([0] + [4]) = $15
	$10 = [0]
	$13 = *($2 + [8])
	$11 = (uint_64)$13 >> (uint_64)(int_64)8
	$9 = $11)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$8 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	
.LABEL $label$1
	CALL eosio_assert($8, [400])
	$10 = *($3)
	if ( ($10 & [1]) ){ goto $label$7 }
	$10 = uint_32($10 >> [1])
	goto $label$6 
	
.LABEL $label$7
	$10 = *($3 + [4])
	
.LABEL $label$6
	CALL eosio_assert(($10 <= [257]), [432])
	$12 = [0]
	*((($15 + [128]) + [32])) = [0]
	*($15 + [144]) = (int_64)-1
	*($15 + [152]) = (int_64)0
	$9 = *($0)
	*($15 + [128]) = $9
	*($15 + [136]) = $11
	$8 = [0]
	$10 = CALL db_find_i64($9, $11, (int_64)-4157508551318700032, $11)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$8 }
	$8 = CALL $6(($15 + [128]), $10)
	CALL eosio_assert(((int_32)*($8 + [40]) == (int_32)($15 + [128])), [96])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [464])
	CALL require_auth(*($8 + [32]))
	$5 = ($8 + [32])
	$9 = *($2)
	if ( ((uint_64)((int_64)$9 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$9 }
	$10 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$12 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$12 = [0]
	
.LABEL $label$9
	CALL eosio_assert($12, [528])
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)$9 >> (uint_64)(int_64)63)) ^ (int_32)[1]), [560])
	CALL eosio_assert(((int_64)$13 == (int_64)*($8 + [8])), [608])
	CALL eosio_assert(((int_64)$9 <= (int_64))(*($8 + [16]) - *($8))), [640])
	CALL eosio_assert(((int_32)*($8 + [40]) == (int_32)($15 + [128])), [688])
	CALL eosio_assert(((int_64)*($15 + [128]) == (int_64)CALL $fimport$3()), [736])
	$11 = *($8 + [8])
	CALL eosio_assert(((int_64)$13 == (int_64)$11), [800])
	$9 = ((int_64)*($8) + (int_64)$9)
	*($8) = $9
	CALL eosio_assert(((int_64)$9 > (int_64)-4611686018427387904), [848])
	CALL eosio_assert(((int_64)*($8) < (int_64)4611686018427387904), [880])
	$9 = (uint_64)$11 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$9) == (int_64)(uint_64)*($8 + [8]) >> (uint_64)(int_64)8)), [912])
	*($15 + [176]) = (($15 + [192]) + [40])
	*($15 + [172]) = ($15 + [192])
	*($15 + [168]) = ($15 + [192])
	*($15 + [184]) = ($15 + [168])
	*($15 + [244]) = ($8 + [16])
	*($15 + [240]) = $8
	*($15 + [248]) = $5
	CALL $8(($15 + [240]), ($15 + [184]))
	CALL db_update_i64(*($8 + [44]), (int_64)0, ($15 + [192]), [40])
	$10 = (($15 + [128]) + [16])
	if ( (uint_64)($9 <= *($10)) ){ goto $label$14 }
	*($10) = ((int_64)$9 + (int_64)1)
	
.LABEL $label$14
	*(($10 = (($15 + [112]) + [12]))) = *(($2 + [12]))
	*(($8 = (($15 + [112]) + [8]))) = *(($2 + [8]))
	*($15 + [116]) = *(($2 + [4]))
	*($15 + [112]) = *($2)
	$9 = *($5)
	*(($15 + [12])) = *($10)
	*(($15 + [8])) = *($8)
	*($15 + [4]) = *($15 + [116])
	*($15) = *($15 + [112])
	CALL _ZN5eosio5token11add_balanceEyNS_5assetEy($0, $9, $15, $9)
	$6 = *($5)
	if ( ((int_64)$6 == (int_64)$1) ){ goto $label$17 }
	$7 = *($0)
	if ( ($4 == 0) ){ goto $label$18 }
	$9 = (int_64)0
	$13 = (int_64)59
	$10 = [976]
	$14 = (int_64)0
	
.LOOP $label$19:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$24 }
	$8 = *($10)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$8 = ($8 + [165])
	goto $label$22 
	
.LABEL $label$24
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$21
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$20
	$10 = ($10 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$14 = ((int_64)$11 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$19 }
	*(($15 + [92])) = *(($2 + [12]))
	*(($8 = (($15 + [64]) + [24]))) = *(($2 + [8]))
	*(($15 + [84])) = *(($2 + [4]))
	*($15 + [72]) = $1
	*($15 + [64]) = $6
	*($15 + [80]) = *($2)
	CALL $92(($15 + [96]), $3)
	*(($10 = CALL $87([16]))) = $6
	*($10 + [8]) = $14
	*($15 + [240]) = $10
	$10 = ($10 + [16])
	*($15 + [248]) = $10
	*($15 + [244]) = $10
	*($15 + [192]) = *($15 + [64])
	*($15 + [200]) = *($15 + [72])
	*((($15 + [192]) + [24])) = *($8)
	*($15 + [208]) = *($15 + [80])
	$10 = (($15 + [64]) + [40])
	*(($8 = (($15 + [192]) + [40]))) = *($10)
	*($15 + [224]) = *($15 + [96])
	*($15 + [96]) = [0]
	*(($15 + [100])) = [0]
	*($10) = [0]
	CALL $14($7, (int_64)-3617168760277827584, ($15 + [240]), ($15 + [192]))
	if ( ((*($15 + [224]) & [1]) == 0) ){ goto $label$25 }
	CALL $88(*($8))
	
.LABEL $label$25
	$10 = *($15 + [240])
	if ( ($10 == 0) ){ goto $label$26 }
	*($15 + [244]) = $10
	CALL $88($10)
	
.LABEL $label$26
	if ( ((*(($15 + [96])) & [1]) == 0) ){ goto $label$17 }
	CALL $88(*(($15 + [104])))
	$2 = *($15 + [152])
	if ( $2 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$9 = (int_64)0
	$13 = (int_64)59
	$10 = [976]
	$14 = (int_64)0
	
.LOOP $label$27:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$32 }
	$8 = *($10)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$31 }
	$8 = ($8 + [165])
	goto $label$30 
	
.LABEL $label$32
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$31
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$30
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$29
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$28
	$10 = ($10 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$14 = ((int_64)$11 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$27 }
	*(($15 + [44])) = *(($2 + [12]))
	*(($8 = (($15 + [16]) + [24]))) = *(($2 + [8]))
	*(($15 + [36])) = *(($2 + [4]))
	*($15 + [24]) = $1
	*($15 + [16]) = $6
	*($15 + [32]) = *($2)
	CALL $92(($15 + [48]), $3)
	*(($10 = CALL $87([16]))) = $6
	*($10 + [8]) = $14
	*($15 + [240]) = $10
	$10 = ($10 + [16])
	*($15 + [248]) = $10
	*($15 + [244]) = $10
	*($15 + [192]) = *($15 + [16])
	*($15 + [200]) = *($15 + [24])
	*((($15 + [192]) + [24])) = *($8)
	*($15 + [208]) = *($15 + [32])
	$10 = (($15 + [16]) + [40])
	*(($8 = (($15 + [192]) + [40]))) = *($10)
	*($15 + [224]) = *($15 + [48])
	*($15 + [48]) = [0]
	*(($15 + [52])) = [0]
	*($10) = [0]
	CALL $14($7, (int_64)-3617168760271678304, ($15 + [240]), ($15 + [192]))
	if ( ((*($15 + [224]) & [1]) == 0) ){ goto $label$33 }
	CALL $88(*($8))
	
.LABEL $label$33
	$10 = *($15 + [240])
	if ( ($10 == 0) ){ goto $label$34 }
	*($15 + [244]) = $10
	CALL $88($10)
	
.LABEL $label$34
	if ( ((*(($15 + [48])) & [1]) == 0) ){ goto $label$17 }
	CALL $88(*(($15 + [56])))
	$2 = *($15 + [152])
	if ( $2 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$2 = *($15 + [152])
	if ( ($2 == 0) ){ goto $label$15 }
	
.LABEL $label$16
	$12 = ($15 + [156])
	$10 = *($12)
	if ( ((int_32)$10 == (int_32)$2) ){ goto $label$36 }
	
.LOOP $label$37:
	$10 = ($10 + [-24])
	$8 = *($10)
	*($10) = [0]
	if ( ($8 == 0) ){ goto $label$38 }
	CALL $88($8)
	
.LABEL $label$38
	if ( ((int_32)$2 != (int_32)$10) ){ goto $label$37 }
	$10 = *(($15 + [152]))
	goto $label$35 
	
.LABEL $label$36
	$10 = $2
	
.LABEL $label$35
	*($12) = $2
	CALL $88($10)
	
.LABEL $label$15
	*([0] + [4]) = ($15 + [256])
}

void .FUNC _ZN5eosio5token11add_balanceEyNS_5assetEy (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	$8 = [0]
	*((($9 + [8]) + [32])) = [0]
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	$6 = *($0)
	*($9 + [8]) = $6
	*($9 + [16]) = $1
	$4 = *($2 + [8])
	$0 = CALL db_find_i64($6, $1, (int_64)3607749779137757184, (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_32)$0) < (int_32)[0]) ){ goto $label$4 }
	$8 = CALL $21(($9 + [8]), $0)
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)($9 + [8])), [96])
	CALL eosio_assert([1], [992])
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)($9 + [8])), [688])
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$3()), [736])
	$1 = *($8 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)$1), [800])
	$6 = ((int_64)*($8) + (int_64)*($2))
	*($8) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [848])
	CALL eosio_assert(((int_64)*($8) < (int_64)4611686018427387904), [880])
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$1) == (int_64)(uint_64)*($8 + [8]) >> (uint_64)(int_64)8)), [912])
	CALL eosio_assert([1], [272])
	CALL memcpy(($9 + [64]), $8, [8])
	CALL eosio_assert([1], [272])
	CALL memcpy((($9 + [64]) | [8]), ($8 + [8]), [8])
	CALL db_update_i64(*($8 + [20]), (int_64)0, ($9 + [64]), [16])
	$8 = (($9 + [8]) + [16])
	if ( (uint_64)($1 <= *($8)) ){ goto $label$3 }
	*($8) = ((int_64)$1 + (int_64)1)
	$2 = *($9 + [32])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$3()), [208])
	*(($0 = CALL $87([32])) + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [288])
	$5 = ($0 + [8])
	$1 = (int_64)5462355
	
.LOOP $label$6:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	CALL eosio_assert($7, [16])
	*($0 + [16]) = ($9 + [8])
	*(($8 = ($0 + [8]))) = *(($2 + [8]))
	*($0) = *($2)
	CALL eosio_assert([1], [272])
	CALL memcpy(($9 + [64]), $0, [8])
	CALL eosio_assert([1], [272])
	CALL memcpy((($9 + [64]) | [8]), $5, [8])
	$1 = (uint_64)*($8) >> (uint_64)(int_64)8
	$2 = CALL db_store_i64(*((($9 + [8]) + [8])), (int_64)3607749779137757184, $3, $1), ($9 + [64]), [16]
	*($0 + [20]) = $2)
	$7 = (($9 + [8]) + [16])
	if ( (uint_64)($1 <= *($7)) ){ goto $label$9 }
	*($7) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$9
	*($9 + [56]) = $0
	$1 = (uint_64)*($8) >> (uint_64)(int_64)8
	*($9 + [64]) = $1)
	*($9 + [52]) = $2
	$7 = ($9 + [36])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($9 + [40]))) ){ goto $label$11 }
	*($8 + [8]) = $1
	*($8 + [16]) = $2
	*($9 + [56]) = [0]
	*($8) = $0
	*($7) = ($8 + [24])
	goto $label$10 
	
.LABEL $label$11
	CALL $22(($9 + [32]), ($9 + [56]), ($9 + [64]), ($9 + [52]))
	
.LABEL $label$10
	$8 = *($9 + [56])
	*($9 + [56]) = [0]
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $88($8)
	
.LABEL $label$3
	$2 = *($9 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($9 + [36])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$13 }
	
.LOOP $label$14:
	$8 = ($8 + [-24])
	$0 = *($8)
	*($8) = [0]
	if ( ($0 == 0) ){ goto $label$15 }
	CALL $88($0)
	
.LABEL $label$15
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$14 }
	$8 = *(($9 + [32]))
	goto $label$12 
	
.LABEL $label$13
	$8 = $2
	
.LABEL $label$12
	*($7) = $2
	CALL $88($8)
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [80])
}

int_32 .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [288])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [16])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [68]) = $0
	*($5 + [64]) = $0
	*($5 + [72]) = ($0 + $2)
	*($5 + [80]) = ($5 + [64])
	*($5 + [88]) = $5
	CALL $77(($5 + [88]), ($5 + [80]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $78(($5 + [64]), $5)
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $88(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [96])
	return [1]
}

int_32 .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [272])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [272])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [272])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [272])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [272])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$6 = *($0)
	*($0) = ($6 + [10])
	$6 = ($6 + [11])
	$8 = *($1 + [12])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	*($0) = $6
	$8 = *($1 + [20])
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	*($0) = $6
	$7 = *($1 + [24])
	$2 = *(($1 + [28]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$7
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$8:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$5 }
	*($0) = $6
	
.LABEL $label$4
	$7 = *($1 + [36])
	$2 = *(($1 + [40]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$9 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$12:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$13 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$13
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$14:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$14 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	*($0) = $6
	
.LABEL $label$10
	$7 = *($1 + [48])
	$5 = *(($1 + [52]))
	$8 = (CASTING uint_64)(uint_32 int_32(($5 - $7) >> [4]))
	
.LOOP $label$15:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$15 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = *($7 + [4])
	$3 = *(($7 + [8]))
	$6 = ((($6 + $3) + [2]) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$18:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$18 }
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	*($0) = $6
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [272])
	CALL memcpy(*($0 + [4]), $1, [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[1]), [272])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$4 = (*($0 + [4]) + [2])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[3]), [272])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$5 = (*($0 + [4]) + [4])
	*($0 + [4]) = $5
	$6 = *($1 + [12])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$2 = ((int_64)$6) != (int_64)0
	*($7 + [14]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) > (int_32)[0]), [272])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [14]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $2 ){ goto $label$1 }
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [272])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($1 + [16]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	$6 = *($1 + [20])
	
.LOOP $label$2:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$1 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($1) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [272])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $1 ){ goto $label$2 }
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC _ZN5eosio5token6redeemEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [192])
	*([0] + [4]) = $12
	*($12 + [168]) = $1
	CALL require_auth($1)
	*((($12 + [128]) + [32])) = [0]
	*($12 + [136]) = $1
	*($12 + [144]) = (int_64)-1
	*($12 + [152]) = (int_64)0
	$11 = *($0)
	*($12 + [128]) = $11
	$8 = CALL db_find_i64($11, $1, (int_64)-5002750044145401856, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$5 }
	$5 = CALL $51(($12 + [128]), $8)
	CALL eosio_assert(((int_32)*($5 + [32]) == (int_32)($12 + [128])), [96])
	if ( ((uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) <= (uint_32)*($5 + [8])) ){ goto $label$4 }
	CALL eosio_assert(((int_64)*($2) == (int_64)*($5 + [16])), [2128])
	CALL _ZN5eosio5token6refundEy($0, *($12 + [168]))
	$0 = *($12 + [152])
	if ( $0 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$5 = [0]
	$6 = [0]
	goto $label$3 
	
.LABEL $label$4
	$6 = $5
	
.LABEL $label$3
	*((($12 + [88]) + [32])) = [0]
	*($12 + [104]) = (int_64)-1
	*($12 + [112]) = (int_64)0
	$1 = *($0)
	*($12 + [88]) = $1
	*($12 + [96]) = $1
	*($12 + [124]) = [0]
	$8 = CALL db_find_i64($1, $1, (int_64)-7696768201719283712, *($12 + [168]))
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$7 }
	$7 = CALL $35(($12 + [88]), $8)
	CALL eosio_assert(((int_32)*($7 + [56]) == (int_32)($12 + [88])), [96])
	*($12 + [84]) = $7
	*($12 + [80]) = ($12 + [88])
	goto $label$6 
	
.LABEL $label$7
	$7 = [0]
	*($12 + [84]) = [0]
	*($12 + [80]) = ($12 + [88])
	
.LABEL $label$6
	$8 = [0]
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [2192])
	CALL eosio_assert(((int_64)*(*($12 + [84]) + [16]) >= (int_64)*($2)), [2208])
	$1 = *($0)
	$7 = *($12 + [84])
	*($12 + [16]) = $2
	*($12 + [24]) = $0
	*($12 + [20]) = ($12 + [80])
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [992])
	CALL $53(($12 + [88]), $7, $1, ($12 + [16]))
	$11 = *($0)
	if ( ($6 == 0) ){ goto $label$9 }
	CALL eosio_assert([1], [992])
	CALL eosio_assert(((int_32)*($5 + [32]) == (int_32)($12 + [128])), [688])
	CALL eosio_assert(((int_64)*($12 + [128]) == (int_64)CALL $fimport$3()), [736])
	$1 = *($5)
	*($5 + [8]) = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [259200])
	$8 = ($5 + [24])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*($8)), [800])
	$9 = ((int_64)*($5 + [16]) + (int_64)*($2))
	*($5 + [16]) = $9
	CALL eosio_assert(((int_64)$9 > (int_64)-4611686018427387904), [848])
	CALL eosio_assert(((int_64)*($5 + [16]) < (int_64)4611686018427387904), [880])
	CALL eosio_assert(((int_64)$1 == (int_64)*($5)), [912])
	CALL eosio_assert([1], [272])
	CALL memcpy(($12 + [16]), $6, [8])
	CALL eosio_assert([1], [272])
	CALL memcpy((($12 + [16]) | [8]), ($5 + [8]), [4])
	CALL eosio_assert([1], [272])
	CALL memcpy((($12 + [16]) | [12]), ($5 + [16]), [8])
	CALL eosio_assert([1], [272])
	CALL memcpy(($12 + [36]), $8, [8])
	CALL db_update_i64(*($5 + [36]), $11, ($12 + [16]), [28])
	$8 = (($12 + [128]) + [16])
	if ( (uint_64)($1 <= *($8)) ){ goto $label$8 }
	*($8) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert(((int_64)*($12 + [128]) == (int_64)CALL $fimport$3()), [208])
	*(($5 = CALL $87([48])) + [24]) = (int_64)1398362884
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [288])
	$3 = ($5 + [24])
	$6 = ($5 + [16])
	$1 = (int_64)5462355
	
.LOOP $label$11:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	CALL eosio_assert($7, [16])
	*($5 + [32]) = ($12 + [128])
	*($5) = *($12 + [168])
	$1 = CALL current_time()
	*(($6 + [12])) = *(($2 + [12]))
	*(($6 + [8])) = *(($2 + [8]))
	*(($6 + [4])) = *(($2 + [4]))
	*($6) = *($2)
	*($5 + [8]) = ((CASTING uint_32)(uint_64 ((uint_64)$1 / (uint_64)(int_64)1000000)) + [259200])
	CALL eosio_assert([1], [272])
	CALL memcpy(($12 + [16]), $5, [8])
	CALL eosio_assert([1], [272])
	CALL memcpy((($12 + [16]) | [8]), ($5 + [8]), [4])
	CALL eosio_assert([1], [272])
	CALL memcpy((($12 + [16]) | [12]), $6, [8])
	CALL eosio_assert([1], [272])
	CALL memcpy(($12 + [36]), $3, [8])
	$1 = *($5)
	$7 = CALL db_store_i64(*((($12 + [128]) + [8])), (int_64)-5002750044145401856, $11, $1, ($12 + [16]), [28])
	*($5 + [36]) = $7
	$8 = ($12 + [144])
	if ( (uint_64)($1 <= *($8)) ){ goto $label$14 }
	*($8) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$14
	*($12) = $5
	$1 = *($5)
	*($12 + [16]) = $1
	*($12 + [176]) = $7
	$8 = *((($12 + [128]) + [28]))
	if ( ((uint_32)$8 >= (uint_32)*(($12 + [160]))) ){ goto $label$16 }
	*($8 + [8]) = $1
	*($8 + [16]) = $7
	*($12) = [0]
	*($8) = $5
	*(($12 + [156])) = ($8 + [24])
	goto $label$15 
	
.LABEL $label$16
	CALL $54(($12 + [152]), $12, ($12 + [16]), ($12 + [176]))
	
.LABEL $label$15
	$8 = *($12)
	*($12) = [0]
	if ( ($8 == 0) ){ goto $label$8 }
	CALL $88($8)
	
.LABEL $label$8
	$1 = CALL current_time()
	*(($12 + [44])) = [0]
	*(($12 + [48])) = [0]
	*($12 + [28]) = [0]
	*($12 + [32]) = [0]
	*($12 + [36]) = [0]
	*($12 + [40]) = [0]
	*($12 + [16]) = ((CASTING uint_32)(uint_64 ((uint_64)$1 / (uint_64)(int_64)1000000)) + [60])
	*($12 + [52]) = [0]
	*(($12 + [56])) = [0]
	*(($12 + [60])) = [0]
	*($12 + [64]) = [0]
	*(($12 + [68])) = [0]
	*(($12 + [72])) = [0]
	$7 = ($12 + [52])
	$4 = *($0)
	$1 = (int_64)0
	$9 = (int_64)59
	$8 = [976]
	$10 = (int_64)0
	
.LOOP $label$17:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$22 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$5 = ($5 + [165])
	goto $label$20 
	
.LABEL $label$22
	$11 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$19
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$18
	$8 = ($8 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$17 }
	*($12 + [8]) = $10
	*($12) = $4
	$1 = (int_64)0
	$9 = (int_64)59
	$8 = [2256]
	$10 = (int_64)0
	
.LOOP $label$23:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$28 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$5 = ($5 + [165])
	goto $label$26 
	
.LABEL $label$28
	$11 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$27
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$25
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$24
	$8 = ($8 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$23 }
	*($12 + [176]) = $10
	CALL $55($7, $12, $0, ($12 + [176]), ($12 + [168]))
	$1 = *($12 + [168])
	*(($12 + [36])) = [259200]
	*($12 + [8]) = (int_64)0
	*($12) = $1
	CALL cancel_deferred($12)
	*($12 + [8]) = (int_64)0
	$1 = *($12 + [168])
	*($12) = $1
	CALL $56(($12 + [176]), ($12 + [16]))
	$8 = *($12 + [176])
	CALL send_deferred($12, $1, $8, (*($12 + [180]) - $8), [1])
	$8 = *($12 + [176])
	if ( ($8 == 0) ){ goto $label$29 }
	*($12 + [180]) = $8
	CALL $88($8)
	
.LABEL $label$29
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($0 + [32]))), [1152])
	$1 = (int_64)
	*(($8 = ($0 + [24]))) = $1(*($8) - *($2)))
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [1200])
	CALL eosio_assert(((int_64)*($8) < (int_64)4611686018427387904), [1232])
	CALL $40(($0 + [80]), ($0 + [8]), *($0))
	CALL $57(($12 + [16]))
	$0 = *($12 + [112])
	if ( ($0 == 0) ){ goto $label$30 }
	$2 = ($12 + [116])
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$32 }
	
.LOOP $label$33:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$34 }
	CALL $88($5)
	
.LABEL $label$34
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$33 }
	$8 = *(($12 + [112]))
	goto $label$31 
	
.LABEL $label$32
	$8 = $0
	
.LABEL $label$31
	*($2) = $0
	CALL $88($8)
	
.LABEL $label$30
	$0 = *($12 + [152])
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$2 = ($12 + [156])
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$36 }
	
.LOOP $label$37:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$38 }
	CALL $88($5)
	
.LABEL $label$38
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$37 }
	$8 = *(($12 + [152]))
	goto $label$35 
	
.LABEL $label$36
	$8 = $0
	
.LABEL $label$35
	*($2) = $0
	CALL $88($8)
	
.LABEL $label$1
	*([0] + [4]) = ($12 + [192])
}

int_32 .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [352])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $87([48])) + [24]) = (int_64)1398362884
	*($4 + [16]) = (int_64)0
	CALL eosio_assert([1], [288])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [16])
	*($4 + [32]) = $0
	CALL $63(($8 + [32]), $4)
	*($4 + [36]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [36])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $54($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $88($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC _ZN5eosio5token6refundEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [80])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	*(($6 + [64])) = [0]
	*($6 + [40]) = $1
	*($6 + [48]) = (int_64)-1
	*($6 + [56]) = (int_64)0
	$3 = *($0)
	*($6 + [32]) = $3
	$5 = [0]
	$2 = CALL db_find_i64($3, $1, (int_64)-5002750044145401856, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $51(($6 + [32]), $2)
	CALL eosio_assert(((int_32)*($5 + [32]) == (int_32)($6 + [32])), [96])
	
.LABEL $label$1
	$2 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($2, [2272])
	CALL eosio_assert(((uint_32)*($5 + [8]) <= (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$4() / (uint_64)(int_64)1000000))), [2304])
	*(($4 = (($6 + [16]) + [8]))) = *(($5 + [24]))
	$3 = *($5 + [16])
	*(($6 + [12])) = *((($6 + [16]) + [12]))
	*(($6 + [8])) = *($4)
	*($6 + [16]) = $3
	*($6 + [4]) = *($6 + [20])
	*($6) = *($6 + [16])
	CALL _ZN5eosio5token11add_balanceEyNS_5assetEy($0, $1, $6, $1)
	CALL eosio_assert($2, [1792])
	CALL eosio_assert($2, [1840])
	$0 = CALL db_next_i64(*($5 + [36]), ($6 + [72]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$2 }
	CALL $51(($6 + [32]), $0)
	
.LABEL $label$2
	CALL $62(($6 + [32]), $5)
	$2 = *($6 + [56])
	if ( ($2 == 0) ){ goto $label$3 }
	$4 = ($6 + [60])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	CALL $88($0)
	
.LABEL $label$7
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$6 }
	$5 = *(($6 + [56]))
	goto $label$4 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	*($4) = $2
	CALL $88($5)
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [80])
}

void .FUNC $53 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [688])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [736])
	*(($8 = $9) + [24]) = *($1)
	$5 = *($3 + [8])
	$4 = *($1 + [8])
	$6 = *($3)
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)*(($1 + [24]))), [1152])
	$7 = (int_64)
	*($1 + [16]) = $7(*($1 + [16]) - *($6)))
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [1200])
	CALL eosio_assert(((int_64)*($1 + [16]) < (int_64)4611686018427387904), [1232])
	if ( ((int_64)(*(*(*($3 + [4]) + [4]) + [16]) == 0) == 0) ){ goto $label$1 }
	*(($3 = ($5 + [16]))) = ((int_64)*($3) + (int_64)-1)
	CALL eosio_assert([1], [288])
	$7 = (int_64)4277588
	$3 = [0]
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	
.LOOP $label$6:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$3 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$6 }
	
.LABEL $label$5
	$6 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$6 = [0]
	
.LABEL $label$2
	CALL eosio_assert($6, [16])
	*(($1 + [48])) = (int_64)1095062532
	*($1 + [40]) = (int_64)0
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)*(($1 + [8]))), [912])
	$9 = $9
	$3 = ($9 + [-64])
	*([0] + [4]) = $3
	*($8 + [12]) = $3
	*($8 + [8]) = $3
	*($8 + [16]) = ($9 + [-8])
	CALL $48(($8 + [8]), $1)
	CALL db_update_i64(*($1 + [60]), $2, $3, [56])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($8 + [40]) = *($1)
	if ( (CALL memcmp(($8 + [24]), ($8 + [40]), [8]) == 0) ){ goto $label$8 }
	$1 = ($1 + [64])
	$3 = *($1)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$9 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-7696768201719283712, ($8 + [32]), $4)
	*($1) = $3
	
.LABEL $label$9
	CALL db_idx64_update($3, $2, ($8 + [40]))
	
.LABEL $label$8
	*([0] + [4]) = ($8 + [48])
}

void .FUNC $54 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $87(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $91($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $88($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $88($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN5eosio5token4lockEyNS_5assetEy (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [112])
	*([0] + [4]) = $10
	*($10 + [64]) = $1
	*(($7 = ($10 + [56]))) = [0]
	*($10 + [40]) = (int_64)-1
	*($10 + [48]) = (int_64)0
	$8 = *($0)
	*($10 + [24]) = $8
	*($10 + [32]) = $8
	*($10 + [60]) = [0]
	$6 = CALL db_find_i64($8, $8, (int_64)-7696768201719283712, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	$6 = CALL $35(($10 + [24]), $6)
	CALL eosio_assert(((int_32)*($6 + [56]) == (int_32)($10 + [24])), [96])
	*($10 + [84]) = $2
	*($10 + [80]) = $0
	CALL eosio_assert([1], [992])
	CALL $36(($10 + [24]), $6, ($10 + [80]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 = ($0 + [16]))) = ((int_64)*($6) + (int_64)1)
	*($10 + [12]) = $0
	*($10 + [16]) = $2
	*($10 + [8]) = ($10 + [64])
	*($10 + [104]) = $3
	CALL eosio_assert(((int_64)*($10 + [24]) == (int_64)CALL $fimport$3()), [208])
	*($10 + [84]) = ($10 + [8])
	*($10 + [80]) = ($10 + [24])
	*($10 + [88]) = ($10 + [104])
	$6 = CALL $87([72])
	CALL $37($6)
	*($6 + [56]) = ($10 + [24])
	CALL $38(($10 + [80]), $6)
	*($10 + [96]) = $6
	$8 = *($6 + [8])
	*($10 + [80]) = $8
	$4 = *($6 + [60])
	*($10 + [76]) = $4
	$9 = ($10 + [52])
	$5 = *($9)
	if ( ((uint_32)$5 >= (uint_32)*($7)) ){ goto $label$4 }
	*($5 + [8]) = $8
	*($5 + [16]) = $4
	*($10 + [96]) = [0]
	*($5) = $6
	*($9) = ($5 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $39(($10 + [48]), ($10 + [96]), ($10 + [80]), ($10 + [76]))
	
.LABEL $label$3
	$6 = *($10 + [96])
	*($10 + [96]) = [0]
	if ( ($6 == 0) ){ goto $label$1 }
	CALL $88($6)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($0 + [32]))), [800])
	$8 = ((int_64)*($6) + (int_64)*($2))
	*(($6 = ($0 + [24]))) = $8
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [848])
	CALL eosio_assert(((int_64)*($6) < (int_64)4611686018427387904), [880])
	CALL $40(($0 + [80]), ($0 + [8]), *($0))
	$6 = *($10 + [48])
	if ( ($6 == 0) ){ goto $label$5 }
	$7 = ($10 + [52])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$8:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$9 }
	CALL $88($2)
	
.LABEL $label$9
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$8 }
	$0 = *(($10 + [48]))
	goto $label$6 
	
.LABEL $label$7
	$0 = $6
	
.LABEL $label$6
	*($7) = $6
	CALL $88($0)
	
.LABEL $label$5
	*([0] + [4]) = ($10 + [112])
}

void .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($4) = [0]
	CALL $58($4, $1)
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $15($0, $2)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($4 + [4]) = $0
	*($4) = $0
	*($4 + [8]) = $3
	CALL $59($4, $1)
	CALL $61(CALL $60(CALL $60($4, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $57 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($0 + [52])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$3 }
	$2 = ([0] - $1)
	$5 = ($5 + [-12])
	
.LOOP $label$4:
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$5 }
	*(($5 + [4])) = $3
	CALL $88($3)
	
.LABEL $label$5
	$5 = ($5 + [-16])
	if ( ((int_32)($5 + $2) != (int_32)[-12]) ){ goto $label$4 }
	$5 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $88($5)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$4 = ($0 + [40])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$9:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($5 + [16])) = $3
	CALL $88($3)
	
.LABEL $label$10
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$11 }
	*(($5 + [4])) = $3
	CALL $88($3)
	
.LABEL $label$11
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$9 }
	$5 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($4) = $1
	CALL $88($5)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$14 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$15:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$16 }
	*(($5 + [16])) = $3
	CALL $88($3)
	
.LABEL $label$16
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$17 }
	*(($5 + [4])) = $3
	CALL $88($3)
	
.LABEL $label$17
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$15 }
	$5 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$13
	*($4) = $1
	CALL $88($5)
	
.LABEL $label$12
	return $0
}

int_32 .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [352])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $87([72])
	$4 = CALL $37($6)
	*($6 + [56]) = $0
	CALL $49(($8 + [32]), $4)
	*($6 + [64]) = [-1]
	*($6 + [60]) = $1
	*($8 + [24]) = $6
	$5 = *($6 + [8])
	*($8 + [16]) = $5
	$7 = *($6 + [60])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $39(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $88($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC _ZN5eosio5token11do_transferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEb (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [112])
	*([0] + [4]) = $12
	CALL eosio_assert(((int_64)$1 != (int_64)$2), [1536])
	CALL require_auth($1)
	CALL eosio_assert(CALL $fimport$17($2), [1568])
	$6 = *($3 + [8])
	$9 = [0]
	*(($12 + [104])) = [0]
	$10 = (uint_64)$6 >> (uint_64)(int_64)8
	*($12 + [80]) = $10)
	*($12 + [88]) = (int_64)-1
	*($12 + [96]) = (int_64)0
	*($12 + [72]) = *($0)
	$7 = CALL $30(($12 + [72]), $10, [1600])
	CALL require_recipient($1)
	CALL require_recipient($2)
	$8 = *($3)
	if ( ((uint_64)((int_64)$8 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$11 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$9 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	
.LABEL $label$1
	CALL eosio_assert($9, [528])
	CALL eosio_assert(((int_64)$8 > (int_64)0), [1632])
	CALL eosio_assert(((int_64)$6 == (int_64)*($7 + [8])), [608])
	$11 = *($4)
	if ( ($11 & [1]) ){ goto $label$7 }
	$11 = uint_32($11 >> [1])
	goto $label$6 
	
.LABEL $label$7
	$11 = *($4 + [4])
	
.LABEL $label$6
	CALL eosio_assert(($11 <= [257]), [432])
	$9 = ($3 + [8])
	*(($11 = (($12 + [56]) + [8]))) = *($9)
	$10 = *($3)
	*((($12 + [24]) + [12])) = *((($12 + [56]) + [12]))
	*((($12 + [24]) + [8])) = *($11)
	*($12 + [56]) = $10
	*($12 + [28]) = *($12 + [60])
	*($12 + [24]) = *($12 + [56])
	CALL _ZN5eosio5token11sub_balanceEyNS_5assetE($0, $1, ($12 + [24]))
	*(($11 = (($12 + [40]) + [8]))) = *($9)
	$10 = *($3)
	*((($12 + [8]) + [12])) = *((($12 + [40]) + [12]))
	*((($12 + [8]) + [8])) = *($11)
	*($12 + [40]) = $10
	*($12 + [12]) = *($12 + [44])
	*($12 + [8]) = *($12 + [40])
	CALL _ZN5eosio5token11add_balanceEyNS_5assetEy($0, $2, ($12 + [8]), $1)
	$9 = *($12 + [96])
	if ( ($9 == 0) ){ goto $label$8 }
	$0 = ($12 + [100])
	$11 = *($0)
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$10 }
	
.LOOP $label$11:
	$11 = ($11 + [-24])
	$3 = *($11)
	*($11) = [0]
	if ( ($3 == 0) ){ goto $label$12 }
	CALL $88($3)
	
.LABEL $label$12
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$11 }
	$11 = *(($12 + [96]))
	goto $label$9 
	
.LABEL $label$10
	$11 = $9
	
.LABEL $label$9
	*($0) = $9
	CALL $88($11)
	
.LABEL $label$8
	*([0] + [4]) = ($12 + [112])
}

void .FUNC _ZN5eosio5token8transferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	*(($5 = (($6 + [32]) + [8]))) = *(($3 + [8]))
	*($6 + [32]) = *($3)
	CALL $92(($6 + [16]), $4)
	*(($6 + [8])) = *($5)
	*($6) = *($6 + [32])
	CALL _ZN5eosio5token11do_transferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEb($0, $1, $2, $6, ($6 + [16]), [0])
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$1 }
	CALL $88(*($6 + [24]))
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [48])
}

void .FUNC $55 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$7 = ($5 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$6 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $87(((int_32)$6 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $91($0)
	
.LABEL $label$1
	*(($8 = ($7 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($8 + [8]) = *($3)
	*($8 + [16 align=4]) = (int_64)0
	*(($3 = ($8 + [24]))) = [0]
	$2 = CALL $87([16])
	*($8 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($8 + [20])) = $5
	*($8 + [28]) = [0]
	*(($2 = ($8 + [32]))) = [0]
	*(($8 + [36])) = [0]
	CALL $15(($8 + [28]), [8])
	$2 = *($8 + [28])
	CALL eosio_assert(((int_32)(*($2) - $2) > (int_32)[7]), [272])
	CALL memcpy($2, $4, [8])
	$4 = ($7 + ((int_32)$6 * (int_32)[40]))
	$5 = ($8 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$3 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($2 + [-12]))
	*(($8 + [-40])) = *(($2 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($6 = ($8 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($8 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($6) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($6 = ($8 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($8 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($6) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $3) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	$1 = ([0] - $6)
	$8 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($8 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $2
	CALL $88($2)
	
.LABEL $label$10
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $2
	CALL $88($2)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $88($6)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $21 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [352])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $87([32])
	$6 = CALL $23($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	*($8 + [8]) = $5)
	$1 = *($4 + [20])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $22(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $88($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [272])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [272])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $23 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [288])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [16])
	*($0 + [16]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [384])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [384])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [20]) = *(*($2 + [8]))
	return $0
}

void .FUNC $22 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $87(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $91($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $88($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $88($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN5eosio5token11sub_balanceEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [64])
	*([0] + [4]) = $8
	*(($8 + [40])) = [0]
	*($8 + [16]) = $1
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	*($8 + [8]) = *($0)
	$5 = *($2)
	$3 = *($2 + [8])
	$0 = CALL $26(($8 + [8]), (uint_64)$3 >> (uint_64)(int_64)8), [1264]
	CALL eosio_assert(((int_64)*($0)) >= (int_64)$5), [1296])
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)($8 + [8])), [688])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)CALL $fimport$3()), [736])
	$6 = *($0 + [8])
	CALL eosio_assert(((int_64)$3 == (int_64)$6), [1152])
	$3 = (int_64)
	*($0) = $3(*($0) - $5))
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [1200])
	CALL eosio_assert(((int_64)*($0) < (int_64)4611686018427387904), [1232])
	$3 = (uint_64)$6 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$3) == (int_64)(uint_64)*($0 + [8]) >> (uint_64)(int_64)8)), [912])
	CALL eosio_assert([1], [272])
	CALL memcpy(($8 + [48]), $0, [8])
	CALL eosio_assert([1], [272])
	CALL memcpy((($8 + [48]) | [8]), ($0 + [8]), [8])
	CALL db_update_i64(*($0 + [20]), $1, ($8 + [48]), [16])
	if ( (uint_64)($3 <= *($8 + [24])) ){ goto $label$1 }
	*((($8 + [8]) + [16])) = ((int_64)$3 + (int_64)1)
	
.LABEL $label$1
	$4 = *($8 + [32])
	if ( ($4 == 0) ){ goto $label$2 }
	$7 = ($8 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$6 }
	CALL $88($2)
	
.LABEL $label$6
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($8 + [32]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $4
	
.LABEL $label$3
	*($7) = $4
	CALL $88($0)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [64])
}

void .FUNC _ZN5eosio5token4burnEyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [160])
	*([0] + [4]) = $9
	$7 = [0]
	$4 = *($2 + [8])
	$8 = (uint_64)$4 >> (uint_64)(int_64)8
	$6 = $8)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [16])
	$7 = *($3)
	if ( ($7 & [1]) ){ goto $label$7 }
	$7 = uint_32($7 >> [1])
	goto $label$6 
	
.LABEL $label$7
	$7 = *($3 + [4])
	
.LABEL $label$6
	CALL eosio_assert(($7 <= [257]), [432])
	$3 = [0]
	*(($9 + [72])) = [0]
	*($9 + [56]) = (int_64)-1
	*($9 + [64]) = (int_64)0
	$6 = *($0)
	*($9 + [40]) = $6
	*($9 + [48]) = $8
	$5 = [0]
	$7 = CALL db_find_i64($6, $8, (int_64)-4157508551318700032, $8)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$8 }
	$5 = CALL $6(($9 + [40]), $7)
	CALL eosio_assert(((int_32)*($5 + [40]) == (int_32)($9 + [40])), [96])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [1040])
	CALL require_auth($1)
	CALL require_recipient($1)
	$6 = *($2)
	if ( ((uint_64)((int_64)$6 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$9 }
	$7 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$3 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$3 = [0]
	
.LABEL $label$9
	CALL eosio_assert($3, [528])
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)$6 >> (uint_64)(int_64)63)) ^ (int_32)[1]), [1104])
	CALL eosio_assert(((int_64)$4 == (int_64)*($5 + [8])), [608])
	CALL eosio_assert(((int_64)$6 <= (int_64)*($5)), [640])
	CALL eosio_assert(((int_32)*($5 + [40]) == (int_32)($9 + [40])), [688])
	CALL eosio_assert(((int_64)*($9 + [40]) == (int_64)CALL $fimport$3()), [736])
	$8 = *($5 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)$8), [1152])
	$6 = (int_64)
	*($5) = $6(*($5) - $6))
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [1200])
	CALL eosio_assert(((int_64)*($5) < (int_64)4611686018427387904), [1232])
	$6 = (uint_64)$8 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$6) == (int_64)(uint_64)*($5 + [8]) >> (uint_64)(int_64)8)), [912])
	*($9 + [128]) = (($9 + [80]) + [40])
	*($9 + [124]) = ($9 + [80])
	*($9 + [120]) = ($9 + [80])
	*($9 + [136]) = ($9 + [120])
	*($9 + [148]) = ($5 + [16])
	*($9 + [144]) = $5
	*($9 + [152]) = ($5 + [32])
	CALL $8(($9 + [144]), ($9 + [136]))
	CALL db_update_i64(*($5 + [44]), (int_64)0, ($9 + [80]), [40])
	$7 = (($9 + [40]) + [16])
	if ( (uint_64)($6 <= *($7)) ){ goto $label$14 }
	*($7) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$14
	*(($7 = (($9 + [24]) + [8]))) = *(($2 + [8]))
	$6 = *($2)
	*((($9 + [8]) + [12])) = *((($9 + [24]) + [12]))
	*((($9 + [8]) + [8])) = *($7)
	*($9 + [24]) = $6
	*($9 + [12]) = *($9 + [28])
	*($9 + [8]) = *($9 + [24])
	CALL _ZN5eosio5token11sub_balanceEyNS_5assetE($0, $1, ($9 + [8]))
	$2 = *($9 + [64])
	if ( ($2 == 0) ){ goto $label$15 }
	$3 = ($9 + [68])
	$7 = *($3)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$17 }
	
.LOOP $label$18:
	$7 = ($7 + [-24])
	$5 = *($7)
	*($7) = [0]
	if ( ($5 == 0) ){ goto $label$19 }
	CALL $88($5)
	
.LABEL $label$19
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$18 }
	$7 = *(($9 + [64]))
	goto $label$16 
	
.LABEL $label$17
	$7 = $2
	
.LABEL $label$16
	*($3) = $2
	CALL $88($7)
	
.LABEL $label$15
	*([0] + [4]) = ($9 + [160])
}

void .FUNC _ZN5eosio5token6signupEyNS_5assetEy (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	$16 = (*([0] + [4]) - [272])
	*([0] + [4]) = $16
	*(($16 + [232])) = [0]
	*($16 + [224]) = (int_64)0
	$9 = CALL strlen([1328])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$5 }
	*($16 + [224]) = ($9 << [1])
	$10 = (($16 + [224]) | [1])
	if ( $9 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$8 = (($9 + [16]) & [-16])
	$10 = CALL $87($8)
	*($16 + [224]) = ($8 | [1])
	*($16 + [232]) = $10
	*($16 + [228]) = $9
	
.LABEL $label$4
	CALL memcpy($10, [1328], $9)
	
.LABEL $label$3
	*(($10 + $9)) = [0]
	CALL eosio_assert([1], [288])
	$12 = (int_64)5462355
	$9 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$10 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$10 = [0]
	
.LABEL $label$6
	CALL eosio_assert($10, [16])
	$4 = (($16 + [224]) | [1])
	$10 = ( *($16 + [232]) ? $4 : (*($16 + [224]) & [1]) )
	$9 = [-1]
	
.LOOP $label$11:
	$8 = ($10 + $9)
	$5 = ($9 + [1])
	$9 = $5
	if ( *(($8 + [1])) ){ goto $label$11 }
	$11 = (int_64)0
	if ( ($5 == 0) ){ goto $label$12 }
	$13 = (CASTING uint_64)(uint_32 $5)
	$11 = (int_64)0
	$12 = (int_64)8
	
.LOOP $label$13:
	$9 = *($10)
	if ( ((uint_32)(($9 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$14 }
	$11 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56) << (int_64)((int_64)$12 & (int_64)4294967288)) | (int_64)$11)
	
.LABEL $label$14
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)8)
	$13 = ((int_64)$13 + (int_64)-1)
	if ( ((int_64)($13 == 0) == 0) ){ goto $label$13 }
	
.LABEL $label$12
	CALL eosio_assert([1], [288])
	$7 = ((int_64)$11 | (int_64)4)
	$12 = (int_64)5462355
	$9 = [0]
	
.LOOP $label$17:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	
.LOOP $label$19:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$19 }
	
.LABEL $label$18
	$10 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	$10 = [0]
	
.LABEL $label$15
	CALL eosio_assert($10, [16])
	$10 = ( *(($16 + [232])) ? $4 : (*($16 + [224]) & [1]) )
	$9 = [-1]
	
.LOOP $label$20:
	$8 = ($10 + $9)
	$5 = ($9 + [1])
	$9 = $5
	if ( *(($8 + [1])) ){ goto $label$20 }
	$11 = (int_64)0
	if ( ($5 == 0) ){ goto $label$21 }
	$13 = (CASTING uint_64)(uint_32 $5)
	$12 = (int_64)8
	$11 = (int_64)0
	
.LOOP $label$22:
	$9 = *($10)
	if ( ((uint_32)(($9 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$11 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56) << (int_64)((int_64)$12 & (int_64)4294967288)) | (int_64)$11)
	
.LABEL $label$23
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)8)
	$13 = ((int_64)$13 + (int_64)-1)
	if ( ((int_64)$13 != (int_64)0) ){ goto $label$22 }
	
.LABEL $label$21
	*($2) = (int_64)0
	$14 = ((int_64)$11 | (int_64)4)
	*($2 + [8]) = $14
	$9 = [0]
	$13 = (uint_64)$11 >> (uint_64)(int_64)8
	$12 = $13)
	
.LOOP $label$26:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$25 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	
.LOOP $label$28:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$25 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$28 }
	
.LABEL $label$27
	$10 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$25
	$10 = [0]
	
.LABEL $label$24
	CALL eosio_assert($10, [16])
	$9 = [0]
	*((($16 + [184]) + [32])) = [0]
	*($16 + [200]) = (int_64)-1
	*($16 + [208]) = (int_64)0
	$12 = *($0)
	*($16 + [184]) = $12
	*($16 + [192]) = $13
	$10 = [0]
	$8 = CALL db_find_i64($12, $13, (int_64)-4157508551318700032, $13)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$29 }
	$10 = CALL $6(($16 + [184]), $8)
	CALL eosio_assert(((int_32)*($10 + [40]) == (int_32)($16 + [184])), [96])
	
.LABEL $label$29
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [1344])
	CALL require_auth($3)
	CALL require_recipient($3)
	*((($16 + [144]) + [32])) = [0]
	*($16 + [160]) = (int_64)-1
	*($16 + [168]) = (int_64)0
	$12 = *($0)
	*($16 + [144]) = $12
	*($16 + [152]) = $1
	$8 = CALL db_find_i64($12, $1, (int_64)3607749779137757184, $13)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$30 }
	$9 = CALL $21(($16 + [144]), $8)
	CALL eosio_assert(((int_32)*($9 + [16]) == (int_32)($16 + [144])), [96])
	
.LABEL $label$30
	CALL eosio_assert(($9 == 0), [1408])
	$12 = (uint_64)$11 >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$34 }
	
.LOOP $label$35:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$32 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$35 }
	
.LABEL $label$34
	$8 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$32
	$8 = [0]
	
.LABEL $label$31
	CALL eosio_assert($8, [528])
	CALL eosio_assert([1], [1440])
	CALL eosio_assert(((int_64)$14 == (int_64)*($10 + [8])), [608])
	CALL eosio_assert(((int_64)*($10 + [16]) >= (int_64)*($10)), [640])
	CALL eosio_assert(((int_32)*($10 + [40]) == (int_32)($16 + [184])), [688])
	CALL eosio_assert(((int_64)*($16 + [184]) == (int_64)CALL $fimport$3()), [736])
	$12 = *($10 + [8])
	CALL eosio_assert(((int_64)$14 == (int_64)$12), [800])
	CALL eosio_assert(((int_64)*($10) > (int_64)-4611686018427387904), [848])
	CALL eosio_assert(((int_64)*($10) < (int_64)4611686018427387904), [880])
	$13 = (uint_64)$12 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$13) == (int_64)(uint_64)*($10 + [8]) >> (uint_64)(int_64)8)), [912])
	*($16 + [248]) = (($16 + [32]) + [40])
	*($16 + [244]) = ($16 + [32])
	*($16 + [240]) = ($16 + [32])
	*($16 + [16]) = ($16 + [240])
	*($16 + [92]) = ($10 + [16])
	*($16 + [88]) = $10
	*($16 + [96]) = ($10 + [32])
	CALL $8(($16 + [88]), ($16 + [16]))
	$12 = (int_64)0
	CALL db_update_i64(*($10 + [44]), (int_64)0, ($16 + [32]), [40])
	$9 = (($16 + [184]) + [16])
	if ( (uint_64)($13 <= *($9)) ){ goto $label$36 }
	*($9) = ((int_64)$13 + (int_64)1)
	
.LABEL $label$36
	*(($9 = (($16 + [128]) + [8]))) = *(($2 + [8]))
	$13 = *($2)
	*(($16 + [12])) = *((($16 + [128]) + [12]))
	*(($16 + [8])) = *($9)
	*($16 + [128]) = $13
	*($16 + [4]) = *($16 + [132])
	*($16) = *($16 + [128])
	CALL _ZN5eosio5token11add_balanceEyNS_5assetEy($0, $1, $16, $3)
	$6 = *($0)
	$11 = (int_64)59
	$9 = [976]
	$3 = (int_64)0
	
.LOOP $label$37:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$42 }
	$10 = *($9)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$41 }
	$10 = ($10 + [165])
	goto $label$40 
	
.LABEL $label$42
	$13 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$41
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$40
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$39
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$38
	$9 = ($9 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$3 = ((int_64)$13 | (int_64)$3)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$37 }
	$12 = (int_64)0
	$13 = (int_64)59
	$9 = [1488]
	$14 = (int_64)0
	
.LOOP $label$43:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$44 }
	$10 = *($9)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$46 }
	$10 = ($10 + [165])
	goto $label$45 
	
.LABEL $label$46
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$45
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($10 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$44
	$9 = ($9 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$14 = ((int_64)$11 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$43 }
	$12 = (int_64)0
	$11 = (int_64)59
	$9 = [1504]
	$15 = (int_64)0
	
.LOOP $label$47:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$52 }
	$10 = *($9)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$51 }
	$10 = ($10 + [165])
	goto $label$50 
	
.LABEL $label$52
	$13 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$51
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$50
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$49
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$48
	$9 = ($9 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$47 }
	*(($16 + [24])) = [0]
	*($16 + [16]) = (int_64)0
	$9 = CALL strlen([1520])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$55 }
	*($16 + [16]) = ($9 << [1])
	$10 = (($16 + [16]) | [1])
	if ( $9 ){ goto $label$54 }
	goto $label$53 
	
.LABEL $label$55
	$8 = (($9 + [16]) & [-16])
	$10 = CALL $87($8)
	*($16 + [16]) = ($8 | [1])
	*($16 + [24]) = $10
	*($16 + [20]) = $9
	
.LABEL $label$54
	CALL memcpy($10, [1520], $9)
	
.LABEL $label$53
	*(($10 + $9)) = [0]
	*((($16 + [32]) + [24])) = $7
	*(($10 = (($16 + [32]) + [36]))) = *($16 + [20])
	*($16 + [40]) = $1
	$9 = ($16 + [24])
	*(($16 + [72])) = *($9)
	*($16 + [32]) = *($0)
	*($16 + [48]) = (int_64)2000000
	*($16 + [64]) = *($16 + [16])
	*($16 + [16]) = [0]
	*($16 + [20]) = [0]
	*($9) = [0]
	*($16 + [88]) = $14
	*($16 + [96]) = $15
	*(($9 = CALL $87([16]))) = $6
	*($9 + [8]) = $3
	*((($16 + [88]) + [32])) = [0]
	$8 = ($9 + [16])
	*((($16 + [88]) + [24])) = $8
	*(($16 + [108])) = $8
	*($16 + [104]) = $9
	*($16 + [116]) = [0]
	*((($16 + [88]) + [36])) = [0]
	$9 = *($16 + [64])
	$10 = ( *($10) ? uint_32($9 >> [1]) : ($9 & [1]) )
	$9 = ($10 + [32])
	$12 = (CASTING uint_64)(uint_32 $10)
	$10 = ($16 + [116])
	
.LOOP $label$56:
	$9 = ($9 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$56 }
	if ( ($9 == 0) ){ goto $label$58 }
	CALL $15($10, $9)
	$10 = *(($16 + [120]))
	$9 = *(($16 + [116]))
	goto $label$57 
	
.LABEL $label$58
	$10 = [0]
	$9 = [0]
	
.LABEL $label$57
	*($16 + [244]) = $9
	*($16 + [240]) = $9
	*($16 + [248]) = $10
	*($16 + [256]) = ($16 + [240])
	*($16 + [264]) = ($16 + [32])
	CALL $16(($16 + [264]), ($16 + [256]))
	CALL $17(($16 + [240]), ($16 + [88]))
	$9 = *($16 + [240])
	CALL send_inline($9, (*($16 + [244]) - $9))
	$9 = *($16 + [240])
	if ( ($9 == 0) ){ goto $label$59 }
	*($16 + [244]) = $9
	CALL $88($9)
	
.LABEL $label$59
	$9 = *($16 + [116])
	if ( ($9 == 0) ){ goto $label$60 }
	*(($16 + [120])) = $9
	CALL $88($9)
	
.LABEL $label$60
	$9 = *($16 + [104])
	if ( ($9 == 0) ){ goto $label$61 }
	*(($16 + [108])) = $9
	CALL $88($9)
	
.LABEL $label$61
	if ( ((*(($16 + [64])) & [1]) == 0) ){ goto $label$62 }
	CALL $88(*(($16 + [72])))
	
.LABEL $label$62
	if ( ((*($16 + [16]) & [1]) == 0) ){ goto $label$63 }
	CALL $88(*(($16 + [24])))
	
.LABEL $label$63
	$8 = *($16 + [168])
	if ( ($8 == 0) ){ goto $label$64 }
	$5 = ($16 + [172])
	$9 = *($5)
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$66 }
	
.LOOP $label$67:
	$9 = ($9 + [-24])
	$10 = *($9)
	*($9) = [0]
	if ( ($10 == 0) ){ goto $label$68 }
	CALL $88($10)
	
.LABEL $label$68
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$67 }
	$9 = *(($16 + [168]))
	goto $label$65 
	
.LABEL $label$66
	$9 = $8
	
.LABEL $label$65
	*($5) = $8
	CALL $88($9)
	
.LABEL $label$64
	$8 = *($16 + [208])
	if ( ($8 == 0) ){ goto $label$69 }
	$5 = ($16 + [212])
	$9 = *($5)
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$71 }
	
.LOOP $label$72:
	$9 = ($9 + [-24])
	$10 = *($9)
	*($9) = [0]
	if ( ($10 == 0) ){ goto $label$73 }
	CALL $88($10)
	
.LABEL $label$73
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$72 }
	$9 = *(($16 + [208]))
	goto $label$70 
	
.LABEL $label$71
	$9 = $8
	
.LABEL $label$70
	*($5) = $8
	CALL $88($9)
	
.LABEL $label$69
	if ( ((*($16 + [224]) & [1]) == 0) ){ goto $label$74 }
	CALL $88(*(($16 + [232])))
	
.LABEL $label$74
	*([0] + [4]) = ($16 + [272])
	return (unreachable)
	
.LABEL $label$2
	CALL $89(($16 + [224]))
	
.LABEL $label$1
	CALL $89(($16 + [16]))
	(unreachable)
}

int_32 .FUNC $26 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)(uint_64)*(*($6) + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [96])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3607749779137757184, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $21($0, $5)
	CALL eosio_assert(((int_32)*($6 + [16]) == (int_32)$0), [96])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC $69 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [1872])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1920])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1 + [8])
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8) + [8]) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1984])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $88($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $88($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [60]))
	$7 = *(($1 + [64]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-7696768201719283712, ($9 + [8]), *(($1 + [8])))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	CALL eosio_assert(((int_32)*($1 + [72]) == (int_32)$0), [1872])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1920])
	$6 = ($0 + [28])
	$5 = *($6)
	CALL eosio_assert(((int_32)$5 != (int_32)*($0 + [24])), [1984])
	$4 = ($5 + [-24])
	$6 = *($6)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	$2 = ([0] - $6)
	
.LOOP $label$4:
	$6 = ($4 + [24])
	$3 = *($6)
	*($6) = [0]
	$5 = *($4)
	*($4) = $3
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $88($5)
	
.LABEL $label$5
	*(($4 + [16])) = *(($4 + [40]))
	*(($4 + [8])) = *(($4 + [32]))
	$4 = $6
	if ( ((int_32)($6 + $2) != (int_32)[-24]) ){ goto $label$4 }
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$6 = $4
	
.LABEL $label$2
	
.LOOP $label$6:
	$5 = ($5 + [-24])
	$4 = *($5)
	*($5) = [0]
	if ( ($4 == 0) ){ goto $label$7 }
	CALL $88($4)
	
.LABEL $label$7
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$6 }
	
.LABEL $label$1
	*(($0 + [28])) = $6
	CALL db_remove_i64(*($1 + [76]))
}

void .FUNC _ZN5eosio5token5claimEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [208])
	*([0] + [4]) = $14
	$10 = (int_64)0
	$12 = (int_64)59
	$7 = [2336]
	$8 = (int_64)0
	
.LOOP $label$1:
	$9 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($7)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$2
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($8)
	CALL prints([2384])
	*(($14 + [104])) = [0]
	*($14 + [88]) = (int_64)-1
	*($14 + [96]) = (int_64)0
	$10 = *($0)
	*($14 + [72]) = $10
	*($14 + [80]) = $10
	*($14 + [108]) = [0]
	$7 = [0]
	$3 = CALL db_find_i64($10, $10, (int_64)-7696768201719283712, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$5 }
	$7 = CALL $35(($14 + [72]), $3)
	CALL eosio_assert(((int_32)*($7 + [56]) == (int_32)($14 + [72])), [96])
	
.LABEL $label$5
	$3 = ((int_32)$7 != (int_32)[0])
	CALL eosio_assert($3, [2192])
	CALL eosio_assert(((uint_32)*($7 + [36]) <= (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$4() / (uint_64)(int_64)1000000))), [2400])
	CALL eosio_assert(((int_64)*($7 + [16]) > (int_64)0), [2432])
	*((($14 + [56]) + [8])) = *(($7 + [48]))
	*($14 + [56]) = *($7 + [40])
	$12 = *($0)
	CALL eosio_assert($3, [992])
	CALL eosio_assert(((int_32)*($7 + [56]) == (int_32)($14 + [72])), [688])
	CALL eosio_assert(((int_64)*($14 + [72]) == (int_64)CALL $fimport$3()), [736])
	*($7 + [40]) = (int_64)0
	*($14 + [184]) = *($7)
	$10 = *($7 + [8])
	CALL eosio_assert([1], [912])
	*($14 + [176]) = (($14 + [112]) + [56])
	*($14 + [172]) = ($14 + [112])
	*($14 + [168]) = ($14 + [112])
	CALL $48(($14 + [168]), $7)
	CALL db_update_i64(*($7 + [60]), $12, ($14 + [112]), [56])
	$3 = ($14 + [88])
	if ( (uint_64)($10 <= *($3)) ){ goto $label$6 }
	*($3) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($14 + [200]) = *($7)
	if ( (CALL memcmp(($14 + [184]), ($14 + [200]), [8]) == 0) ){ goto $label$7 }
	$3 = ($7 + [64])
	$7 = *($3)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$8 }
	$7 = CALL db_idx64_find_primary(*($14 + [72]), *(($14 + [80])), (int_64)-7696768201719283712, ($14 + [192]), $10)
	*($3) = $7
	
.LABEL $label$8
	CALL db_idx64_update($7, $12, ($14 + [200]))
	
.LABEL $label$7
	$4 = *($0)
	$10 = (int_64)0
	$12 = (int_64)59
	$7 = [2336]
	$8 = (int_64)0
	
.LOOP $label$9:
	$9 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$10 }
	$3 = *($7)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$10
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$9 }
	$10 = (int_64)0
	$9 = (int_64)59
	$7 = [976]
	$11 = (int_64)0
	
.LOOP $label$13:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$18 }
	$3 = *($7)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$3 = ($3 + [165])
	goto $label$16 
	
.LABEL $label$18
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$14
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$13 }
	$10 = (int_64)0
	$12 = (int_64)59
	$7 = [2336]
	$13 = (int_64)0
	
.LOOP $label$19:
	$9 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$20 }
	$3 = *($7)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$22 }
	$3 = ($3 + [165])
	goto $label$21 
	
.LABEL $label$22
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$21
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$20
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$13 = ((int_64)$9 | (int_64)$13)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$19 }
	*(($14 + [28])) = *($14 + [60])
	*($14 + [16]) = $1
	*(($14 + [36])) = *(($14 + [68]))
	*(($14 + [32])) = *(($14 + [64]))
	*($14 + [8]) = $13
	*($14 + [24]) = *($14 + [56])
	*(($14 + [48])) = [0]
	*($14 + [40]) = (int_64)0
	$3 = ($14 + [40])
	$7 = CALL strlen([2464])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$23 }
	$5 = ($14 + [24])
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$26 }
	*(($14 + [40])) = ($7 << [1])
	$0 = ($3 + [1])
	if ( $7 ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	$6 = (($7 + [16]) & [-16])
	$0 = CALL $87($6)
	*(($14 + [40])) = ($6 | [1])
	*(($14 + [48])) = $0
	*(($14 + [44])) = $7
	
.LABEL $label$25
	CALL memcpy($0, [2464], $7)
	
.LABEL $label$24
	*(($0 + $7)) = [0]
	*(($7 = CALL $87([16]))) = $8
	*($7 + [8]) = $11
	*($14 + [168]) = $7
	$7 = ($7 + [16])
	*($14 + [176]) = $7
	*($14 + [172]) = $7
	*($14 + [112]) = *($14 + [8])
	*($14 + [120]) = *((($14 + [8]) + [8]))
	*(($14 + [136])) = *(($5 + [8]))
	*($14 + [128]) = *($5)
	*(($7 = (($14 + [112]) + [40]))) = *(($3 + [8]))
	*($14 + [144]) = *($3)
	*(($14 + [40])) = [0]
	*(($14 + [44])) = [0]
	*((($14 + [8]) + [40])) = [0]
	CALL $14($4, (int_64)-3617168760277827584, ($14 + [168]), ($14 + [112]))
	if ( ((*($14 + [144]) & [1]) == 0) ){ goto $label$27 }
	CALL $88(*($7))
	
.LABEL $label$27
	$7 = *($14 + [168])
	if ( ($7 == 0) ){ goto $label$28 }
	*($14 + [172]) = $7
	CALL $88($7)
	
.LABEL $label$28
	if ( ((*(($14 + [40])) & [1]) == 0) ){ goto $label$29 }
	CALL $88(*(($14 + [48])))
	
.LABEL $label$29
	$0 = *($14 + [96])
	if ( ($0 == 0) ){ goto $label$30 }
	$5 = ($14 + [100])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$0) ){ goto $label$32 }
	
.LOOP $label$33:
	$7 = ($7 + [-24])
	$3 = *($7)
	*($7) = [0]
	if ( ($3 == 0) ){ goto $label$34 }
	CALL $88($3)
	
.LABEL $label$34
	if ( ((int_32)$0 != (int_32)$7) ){ goto $label$33 }
	$7 = *(($14 + [96]))
	goto $label$31 
	
.LABEL $label$32
	$7 = $0
	
.LABEL $label$31
	*($5) = $0
	CALL $88($7)
	
.LABEL $label$30
	*([0] + [4]) = ($14 + [208])
	return (unreachable)
	
.LABEL $label$23
	CALL $89($3)
}

void .FUNC _ZN5eosio5token8dividendEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [144])
	*([0] + [4]) = $10
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [2336]
	$7 = (int_64)0
	
.LOOP $label$1:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$2 }
	$2 = *($4)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$2 = ($2 + [165])
	goto $label$3 
	
.LABEL $label$4
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($7)
	CALL require_auth(*($0))
	*(($10 + [40])) = [0]
	*($10 + [24]) = (int_64)-1
	*($10 + [32]) = (int_64)0
	$6 = *($0)
	*($10 + [8]) = $6
	*($10 + [16]) = $6
	*($10 + [44]) = [0]
	$2 = [0]
	$4 = CALL db_find_i64($6, $6, (int_64)-7696768201719283712, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$5 }
	$2 = CALL $35(($10 + [8]), $4)
	CALL eosio_assert(((int_32)*($2 + [56]) == (int_32)($10 + [8])), [96])
	
.LABEL $label$5
	$3 = ((int_32)$2 != (int_32)[0])
	CALL eosio_assert($3, [2192])
	CALL eosio_assert(((uint_32)*($2 + [32]) <= (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$4() / (uint_64)(int_64)1000000))), [2352])
	$6 = *($2 + [16])
	if ( ((uint_64)((int_64)$6 + (int_64)-100000001) > (uint_64)(int_64)1399999999) ){ goto $label$8 }
	$4 = ($0 + [72])
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_64)((int_64)$6 + (int_64)-1500000001) > (uint_64)(int_64)1499999999) ){ goto $label$9 }
	$4 = ($0 + [64])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_64)((int_64)$6 + (int_64)-3000000001) > (uint_64)(int_64)1999999999) ){ goto $label$10 }
	$4 = ($0 + [56])
	goto $label$7 
	
.LABEL $label$10
	if ( ((uint_64)((int_64)$6 + (int_64)-5000000001) > (uint_64)(int_64)44999999999) ){ goto $label$11 }
	$4 = ($0 + [48])
	goto $label$7 
	
.LABEL $label$11
	$8 = (int_64)0
	if ( (uint_64)($6 <= (int_64)50000000001) ){ goto $label$6 }
	$4 = ($0 + [40])
	
.LABEL $label$7
	$8 = (uint_64)(Rounds 0)(((float_64)(CASTING float_64)(uint_64 ((int_64)*($4) * (int_64)$6)) / (float_64)(float_64)1e4)) >> (uint_64)(int_64)1)
	
.LABEL $label$6
	CALL eosio_assert([1], [288])
	$6 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	
.LOOP $label$16:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$16 }
	
.LABEL $label$15
	$9 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	$9 = [0]
	
.LABEL $label$12
	CALL eosio_assert($9, [16])
	$5 = *($0)
	CALL eosio_assert($3, [992])
	CALL eosio_assert(((int_32)*($2 + [56]) == (int_32)($10 + [8])), [688])
	CALL eosio_assert(((int_64)*($10 + [8]) == (int_64)CALL $fimport$3()), [736])
	*($10 + [120]) = *($2)
	$6 = *($2 + [8])
	CALL eosio_assert(((int_64)*(($2 + [48])) == (int_64)1095062532), [800])
	$8 = ((int_64)*($2 + [40]) + (int_64)$8)
	*($2 + [40]) = $8
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [848])
	CALL eosio_assert(((int_64)*($2 + [40]) < (int_64)4611686018427387904), [880])
	*($2 + [32]) = (*($2 + [32]) + [86400])
	CALL eosio_assert(((int_64)$6 == (int_64)*($2 + [8])), [912])
	*($10 + [112]) = (($10 + [48]) + [56])
	*($10 + [108]) = ($10 + [48])
	*($10 + [104]) = ($10 + [48])
	CALL $48(($10 + [104]), $2)
	CALL db_update_i64(*($2 + [60]), $5, ($10 + [48]), [56])
	$4 = ($10 + [24])
	if ( (uint_64)($6 <= *($4)) ){ goto $label$17 }
	*($4) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$17
	*($10 + [136]) = *($2)
	if ( (CALL memcmp(($10 + [120]), ($10 + [136]), [8]) == 0) ){ goto $label$18 }
	$9 = ($2 + [64])
	$4 = *($9)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$19 }
	$4 = CALL db_idx64_find_primary(*($10 + [8]), *(($10 + [16])), (int_64)-7696768201719283712, ($10 + [128]), $6)
	*($9) = $4
	
.LABEL $label$19
	CALL db_idx64_update($4, $5, ($10 + [136]))
	
.LABEL $label$18
	if ( ((uint_32)*($2 + [36]) > (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))) ){ goto $label$20 }
	CALL _ZN5eosio5token5claimEyy($0, $1, $6)
	
.LABEL $label$20
	$0 = *($10 + [32])
	if ( ($0 == 0) ){ goto $label$21 }
	$9 = ($10 + [36])
	$4 = *($9)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$23 }
	
.LOOP $label$24:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$25 }
	CALL $88($2)
	
.LABEL $label$25
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$24 }
	$4 = *(($10 + [32]))
	goto $label$22 
	
.LABEL $label$23
	$4 = $0
	
.LABEL $label$22
	*($9) = $0
	CALL $88($4)
	
.LABEL $label$21
	*([0] + [4]) = ($10 + [144])
}

void .FUNC _ZN5eosio5token4initEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	$5 = ($0 + [80])
	$2 = *(($0 + [108]))
	if ( ((int_32)$2 == (int_32)*(($0 + [104]))) ){ goto $label$3 }
	$2 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [72]) == (int_32)$5), [96])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$2 = CALL db_find_i64(*($5), *(($0 + [88])), (int_64)7235159550150574080, (int_64)7235159550150574080)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$2 = CALL $41($5, $2)
	CALL eosio_assert(((int_32)*($2 + [72]) == (int_32)$5), [96])
	
.LABEL $label$2
	CALL eosio_assert([1], [1792])
	CALL eosio_assert([1], [1840])
	$4 = CALL db_next_i64(*($2 + [76]), $6)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	CALL $41($5, $4)
	
.LABEL $label$4
	CALL $68($5, $2)
	
.LABEL $label$1
	*(($6 + [32])) = [0]
	*($6 + [16]) = (int_64)-1
	$3 = *($0)
	*($6) = $3
	*($6 + [8]) = $3
	*($6 + [24]) = (int_64)0
	*($6 + [36]) = [0]
	$0 = CALL db_lowerbound_i64($3, $3, (int_64)-7696768201719283712, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	$5 = CALL $35($6, $0)
	
.LOOP $label$6:
	CALL eosio_assert([1], [1792])
	CALL eosio_assert([1], [1840])
	$0 = [0]
	$2 = CALL db_next_i64(*($5 + [60]), ($6 + [40]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$7 }
	$0 = CALL $35($6, $2)
	
.LABEL $label$7
	CALL $69($6, $5)
	$5 = $0
	if ( $0 ){ goto $label$6 }
	
.LABEL $label$5
	$2 = *($6 + [24])
	if ( ($2 == 0) ){ goto $label$8 }
	$4 = ($6 + [28])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $88($5)
	
.LABEL $label$12
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$11 }
	$0 = *(($6 + [24]))
	goto $label$9 
	
.LABEL $label$10
	$0 = $2
	
.LABEL $label$9
	*($4) = $2
	CALL $88($0)
	
.LABEL $label$8
	*([0] + [4]) = ($6 + [48])
}

void .FUNC _ZN5eosio5token9setfactorEyyyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_64 $5)
{
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [2480]
	$10 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$9 > (uint_64)(int_64)4) ){ goto $label$6 }
	$6 = *($7)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$6 = ($6 + [165])
	goto $label$4 
	
.LABEL $label$6
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$2
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($10)
	CALL prints([2496])
	CALL require_auth(*($0))
	*(($0 + [56])) = $3
	*(($0 + [48])) = $2
	*(($0 + [64])) = $4
	*(($0 + [72])) = $5
	CALL $40(($0 + [80]), ($0 + [8]), *($0))
}

int_32 .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($7 + [15]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [272])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$2 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$3 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[1]), [272])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $4, [2])
	*($6) = (*($6) + [2])
	CALL $19($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$6 = *($6)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [272])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [272])
	CALL memcpy(*($4), $7, [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [272])
	CALL memcpy(*($4), ($7 + [8]), [8])
	*($4) = (*($4) + [8])
	CALL $19(CALL $18($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$6 = *($4)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [384])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [384])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [384])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [384])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $62 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [1872])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1920])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1984])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $88($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $88($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
}

void .FUNC $89 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $88 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

int_32 .FUNC $87 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [11132])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [11028])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [10836]
	$1 = (((int_32)$2 * (int_32)[12]) + [10836])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_32 .FUNC $85 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [11126]) == 0) ){ goto $label$2 }
	$7 = *([0] + [11128])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [11126]) = [1]
	$7 = ($7 << [16])
	*([0] + [11128]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [11128])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [11128]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [11126]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [11126]) = [1]
	$3 = ($3 << [16])
	*([0] + [11128]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [11128])
	
.LABEL $label$8
	*([0] + [11128]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

int_32 .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $85($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [11040])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $84([2644], $0)
}

void .FUNC $82 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*((($4 + [32]) + [12])) = *(($1 + [20]))
	*(($3 = (($4 + [32]) + [8]))) = *(($1 + [16]))
	*($4 + [32]) = *($1 + [8])
	*($4 + [36]) = *(($1 + [12]))
	$2 = *($1)
	CALL $92(($4 + [16]), ($1 + [24]))
	*((($4 + [48]) + [8])) = *($3)
	*($4 + [48]) = *($4 + [32])
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*(*($0)) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($3 = (($4 + [80]) + [8]))) = *((($4 + [48]) + [8]))
	*($4 + [80]) = *($4 + [48])
	CALL $92(($4 + [64]), ($4 + [16]))
	*(($4 + [8])) = *($3)
	*($4) = *($4 + [80])
	CALL void $0((int_32 $2), (int_64 $4), (int_32 ($4 + [64])), (int_32 $1))
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $88(*($4 + [72]))
	
.LABEL $label$2
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $88(*($4 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($4 + [96])
}

void .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [384])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [384])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [384])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [384])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
}

int_32 .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [2640])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $15($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [384])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

int_32 .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [96])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$5 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*(($9 + [40])) = (int_64)1398362884
	*($9 + [32]) = (int_64)0
	*($9 + [24]) = (int_64)0
	CALL eosio_assert([1], [288])
	$6 = (int_64)5462355
	
.LOOP $label$5:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($7, [16])
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [384])
	CALL memcpy(($9 + [24]), $5, [8])
	$7 = ($3 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [384])
	$1 = (($9 + [24]) + [8])
	CALL memcpy($1, ($5 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [384])
	CALL memcpy((($9 + [24]) + [16]), ($5 + [16]), [8])
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	*(($7 = (($9 + [48]) + [8]))) = *(($1 + [8]))
	$6 = *($9 + [24])
	*($9 + [48]) = *($1)
	*((($9 + [64]) + [8])) = *($7)
	*($9 + [64]) = *($9 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$8 = *((*($1) + $8))
	
.LABEL $label$9
	$4 = *((($9 + [64]) + [8]))
	*((($9 + [80]) + [8])) = $4
	*((($9 + [8]) + [8])) = $4
	$4 = *($9 + [64])
	*($9 + [80]) = $4
	*($9 + [8]) = $4
	CALL void $1((int_32 $6), (int_64 ($9 + [8])), (int_32 $8))
	*([0] + [4]) = ($9 + [96])
	return [1]
}

int_32 .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [80])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	CALL eosio_assert([1], [288])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [16])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [64]) = $0
	$1 = ($0 + $2)
	*($5 + [72]) = $1
	CALL eosio_assert(((uint_32)$2 > (uint_32)[7]), [384])
	CALL memcpy(($5 + [8]), $0, [8])
	$4 = ($0 + [8])
	CALL eosio_assert(((uint_32)($1 - $4) > (uint_32)[7]), [384])
	CALL memcpy((($5 + [8]) + [8]), $4, [8])
	$4 = ($0 + [16])
	CALL eosio_assert(((uint_32)($1 - $4) > (uint_32)[7]), [384])
	CALL memcpy((($5 + [8]) + [16]), $4, [8])
	*($5 + [68]) = ($0 + [24])
	CALL $79(($5 + [64]), (($5 + [8]) + [24]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $82(($5 + [64]), ($5 + [8]))
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $88(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [80])
	return [1]
}

void .FUNC _ZN5eosio5token22get_default_parametersEv (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	CALL eosio_assert([1], [288])
	$3 = [0]
	$2 = (int_64)4277588
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [16])
	*(($0 + [24])) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [288])
	$2 = (int_64)5462355
	$3 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$4 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$4 = [0]
	
.LABEL $label$6
	CALL eosio_assert($4, [16])
	*(($0 + [16])) = (int_64)0
	*($0) = (int_64)0
	*(($0 + [24])) = (int_64)1095062532
	*($0 + [32]) = (int_64)100
	*($0 + [40]) = (int_64)80
	*($0 + [48]) = (int_64)60
	*($0 + [56]) = (int_64)40
	*($0 + [64]) = (int_64)20
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [352])
	*([0] + [4]) = $11
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [2512]
	$9 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$8 > (uint_64)(int_64)6) ){ goto $label$6 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$9 != (int_64)$2) ){ goto $label$7 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [2528]
	$9 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$8 > (uint_64)(int_64)4) ){ goto $label$13 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$9
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$8 }
	CALL eosio_assert(((int_64)$9 == (int_64)$1), [2544])
	
.LABEL $label$7
	if ( ((int_64)$1 == (int_64)$0) ){ goto $label$15 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [2512]
	$9 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$8 > (uint_64)(int_64)6) ){ goto $label$21 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$3 = ($3 + [165])
	goto $label$19 
	
.LABEL $label$21
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$17
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$16 }
	if ( ((int_64)$9 != (int_64)$2) ){ goto $label$14 }
	
.LABEL $label$15
	*((($11 + [160]) + [24])) = (int_64)0
	*(($11 + [192])) = (int_64)1398362884
	*($11 + [160]) = $0
	CALL eosio_assert([1], [288])
	$5 = ($11 + [168])
	$8 = (int_64)5462355
	$6 = [0]
	
.LOOP $label$24:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$23 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$25 }
	
.LOOP $label$26:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$23 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$26 }
	
.LABEL $label$25
	$3 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$23
	$3 = [0]
	
.LABEL $label$22
	CALL eosio_assert($3, [16])
	*(($11 + [248])) = $0
	*(($11 + [256])) = (int_64)-1
	*(($6 = ($11 + [264]))) = (int_64)0
	*(($11 + [272])) = [0]
	*($11 + [240]) = $0
	$4 = CALL db_find_i64($0, $0, (int_64)7235159550150574080, (int_64)7235159550150574080)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$30 }
	$3 = ($11 + [240])
	CALL eosio_assert(((int_32)*(CALL $41($3, $4) + [72]) == (int_32)$3), [96])
	$4 = *(($11 + [268]))
	if ( ((int_32)$4 == (int_32)*($6)) ){ goto $label$29 }
	$6 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)$3), [96])
	goto $label$28 
	
.LABEL $label$30
	CALL _ZN5eosio5token22get_default_parametersEv(($11 + [280]), $6)
	goto $label$27 
	
.LABEL $label$29
	$6 = [0]
	$4 = CALL db_find_i64(*(($11 + [240])), *(($11 + [248])), (int_64)7235159550150574080, (int_64)7235159550150574080)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$28 }
	$6 = CALL $41($3, $4)
	CALL eosio_assert(((int_32)*($6 + [72]) == (int_32)$3), [96])
	
.LABEL $label$28
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [2608])
	CALL memcpy(($11 + [280]), $6, [72])
	
.LABEL $label$27
	CALL memcpy($5, ($11 + [280]), [72])
	if ( ((int_64)$2 > (int_64)4929617502180212735) ){ goto $label$40 }
	if ( ((int_64)$2 <= (int_64)-4352380133890326529) ){ goto $label$39 }
	if ( ((int_64)$2 == (int_64)-4352380133890326528) ){ goto $label$37 }
	if ( ((int_64)$2 == (int_64)-3617168760277827584) ){ goto $label$36 }
	if ( ((int_64)$2 != (int_64)4516881727834030080) ){ goto $label$31 }
	*($11 + [140]) = [0]
	*($11 + [136]) = [1]
	*($11 + [16 align=4]) = *($11 + [136])
	CALL $73(($11 + [160]), ($11 + [16]))
	goto $label$31 
	
.LABEL $label$40
	if ( ((int_64)$2 <= (int_64)5380477996647841791) ){ goto $label$38 }
	if ( ((int_64)$2 == (int_64)5380477996647841792) ){ goto $label$35 }
	if ( ((int_64)$2 == (int_64)5455799419163115520) ){ goto $label$34 }
	if ( ((int_64)$2 != (int_64)8516769789752901632) ){ goto $label$31 }
	*($11 + [148]) = [0]
	*($11 + [144]) = [2]
	*($11 + [8 align=4]) = *($11 + [144])
	CALL $73(($11 + [160]), ($11 + [8]))
	goto $label$31 
	
.LABEL $label$39
	if ( ((int_64)$2 == (int_64)-5002754507398971392) ){ goto $label$33 }
	if ( ((int_64)$2 != (int_64)-5001342339331915776) ){ goto $label$31 }
	*($11 + [92]) = [0]
	*($11 + [88]) = [3]
	*($11 + [64 align=4]) = *($11 + [88])
	CALL $76(($11 + [160]), ($11 + [64]))
	goto $label$31 
	
.LABEL $label$38
	if ( ((int_64)$2 == (int_64)4929617502180212736) ){ goto $label$32 }
	if ( ((int_64)$2 != (int_64)5031766152489992192) ){ goto $label$31 }
	*($11 + [156]) = [0]
	*($11 + [152]) = [4]
	*($11) = *($11 + [152])
	CALL $72(($11 + [160]), $11)
	goto $label$31 
	
.LABEL $label$37
	*($11 + [132]) = [0]
	*($11 + [128]) = [5]
	*($11 + [24 align=4]) = *($11 + [128])
	CALL $74(($11 + [160]), ($11 + [24]))
	goto $label$31 
	
.LABEL $label$36
	*($11 + [124]) = [0]
	*($11 + [120]) = [6]
	*($11 + [32 align=4]) = *($11 + [120])
	CALL $75(($11 + [160]), ($11 + [32]))
	goto $label$31 
	
.LABEL $label$35
	*($11 + [108]) = [0]
	*($11 + [104]) = [7]
	*($11 + [48 align=4]) = *($11 + [104])
	CALL $72(($11 + [160]), ($11 + [48]))
	goto $label$31 
	
.LABEL $label$34
	*($11 + [84]) = [0]
	*($11 + [80]) = [8]
	*($11 + [72 align=4]) = *($11 + [80])
	CALL $76(($11 + [160]), ($11 + [72]))
	goto $label$31 
	
.LABEL $label$33
	*($11 + [100]) = [0]
	*($11 + [96]) = [9]
	*($11 + [56 align=4]) = *($11 + [96])
	CALL $72(($11 + [160]), ($11 + [56]))
	goto $label$31 
	
.LABEL $label$32
	*($11 + [116]) = [0]
	*($11 + [112]) = [10]
	*($11 + [40 align=4]) = *($11 + [112])
	CALL $72(($11 + [160]), ($11 + [40]))
	
.LABEL $label$31
	$5 = *(($11 + [264]))
	if ( ($5 == 0) ){ goto $label$14 }
	$4 = ($11 + [268])
	$6 = *($4)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$42 }
	
.LOOP $label$43:
	$6 = ($6 + [-24])
	$3 = *($6)
	*($6) = [0]
	if ( ($3 == 0) ){ goto $label$44 }
	CALL $88($3)
	
.LABEL $label$44
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$43 }
	$6 = *(($11 + [264]))
	goto $label$41 
	
.LABEL $label$42
	$6 = $5
	
.LABEL $label$41
	*($4) = $5
	CALL $88($6)
	
.LABEL $label$14
	*([0] + [4]) = ($11 + [352])
}

int_32 .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [384])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

void .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [384])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [384])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [384])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [384])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $79(*($1), ($0 + [32]))
}

int_32 .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$8 = (*([0] + [4]) - [96])
	$10 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$9 = *($1)
	$1 = [0]
	$6 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($8 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $3)
	
.LABEL $label$1
	*(($10 + [32])) = (int_64)1398362884
	*($10 + [24]) = (int_64)0
	*($10 + [16]) = (int_64)0
	CALL eosio_assert([1], [288])
	$7 = (int_64)5462355
	
.LOOP $label$5:
	$8 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$8 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($8, [16])
	*($10 + [40]) = (int_64)0
	*($10 + [84]) = $6
	*($10 + [80]) = $6
	*($10 + [88]) = ($6 + $3)
	*($10 + [48]) = ($10 + [80])
	*($10 + [64]) = ($10 + [16])
	CALL $81(($10 + [64]), ($10 + [48]))
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($6)
	
.LABEL $label$8
	*(($1 = (($10 + [48]) + [8]))) = *(($10 + [32]))
	$7 = *($10 + [16])
	*($10 + [48]) = *($10 + [24])
	$4 = *(($10 + [40]))
	*((($10 + [64]) + [8])) = *($1)
	*($10 + [64]) = *($10 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$9 = *((*($1) + $9))
	
.LABEL $label$9
	$5 = *((($10 + [64]) + [8]))
	*((($10 + [80]) + [8])) = $5
	*(($10 + [8])) = $5
	$5 = *($10 + [64])
	*($10 + [80]) = $5
	*($10) = $5
	CALL void $1((int_32 $7), (int_64 $10), (int_32 $4), (int_64 $9))
	*([0] + [4]) = ($10 + [96])
	return [1]
}

void .FUNC $39 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $87(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $91($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $88($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $88($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $36 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [688])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [736])
	*(($7 = $6) + [24]) = *($1)
	$3 = *($1 + [8])
	if ( ((int_64)*($1 + [16]) != (int_64)0) ){ goto $label$1 }
	*(($4 = (*($2) + [16]))) = ((int_64)*($4) + (int_64)1)
	
.LABEL $label$1
	$4 = *($2 + [4])
	CALL eosio_assert(((int_64)*($4 + [8]) == (int_64)*(($1 + [24]))), [800])
	$5 = ((int_64)*($2) + (int_64)*($4))
	*(($2 = ($1 + [16]))) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [848])
	CALL eosio_assert(((int_64)*($2) < (int_64)4611686018427387904), [880])
	*($1 + [32]) = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [86400])
	*($1 + [36]) = ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [604800])
	CALL eosio_assert(((int_64)$3 == (int_64)*(($1 + [8]))), [912])
	$2 = $6
	$6 = ($2 + [-64])
	*([0] + [4]) = $6
	*($7 + [12]) = $6
	*($7 + [8]) = $6
	*($7 + [16]) = ($2 + [-8])
	CALL $48(($7 + [8]), $1)
	CALL db_update_i64(*($1 + [60]), (int_64)0, $6, [56])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$2 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($7 + [40]) = *($1)
	if ( (CALL memcmp(($7 + [24]), ($7 + [40]), [8]) == 0) ){ goto $label$3 }
	$6 = ($1 + [64])
	$1 = *($6)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$4 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-7696768201719283712, ($7 + [32]), $3)
	*($6) = $1
	
.LABEL $label$4
	CALL db_idx64_update($1, (int_64)0, ($7 + [40]))
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $37 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [16]) = (int_64)0
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [288])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [16])
	*(($2 = ($0 + [48]))) = (int_64)1398362884
	*($0 + [40]) = (int_64)0
	CALL eosio_assert([1], [288])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [16])
	return $0
}

void .FUNC $78 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	*(($5 + [44])) = *(($1 + [28]))
	*(($4 = (($5 + [32]) + [8]))) = *(($1 + [24]))
	*($5 + [32]) = *($1 + [16])
	*($5 + [36]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $92(($5 + [16]), ($1 + [32]))
	*((($5 + [48]) + [8])) = *($4)
	*($5 + [48]) = *($5 + [32])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($5 + [80]) + [8]))) = *((($5 + [48]) + [8]))
	*($5 + [80]) = *($5 + [48])
	CALL $92(($5 + [64]), ($5 + [16]))
	*(($5 + [8])) = *($4)
	*($5) = *($5 + [80])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 $5), (int_32 ($5 + [64])), (int_32 $1))
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $88(*($5 + [72]))
	
.LABEL $label$2
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $88(*($5 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [96])
}

int_32 .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $80($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $90($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $87($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $90($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $88($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $89($7)
	return (unreachable)
}

void .FUNC $32 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [1872])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1920])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1 + [8])
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( (uint_64)(((int_64)*(*($8) + [8]) ^ (int_64)$2) <= (int_64)256) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1984])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $88($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $88($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC _ZN5eosio5token7depositEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [112])
	*([0] + [4]) = $9
	CALL require_auth($1)
	$3 = *($2 + [8])
	$6 = [0]
	*(($9 + [104])) = [0]
	$7 = (uint_64)$3 >> (uint_64)(int_64)8
	*($9 + [80]) = $7)
	*($9 + [88]) = (int_64)-1
	*($9 + [96]) = (int_64)0
	*($9 + [72]) = *($0)
	$4 = CALL $30(($9 + [72]), $7, [1600])
	$5 = *($2)
	if ( ((uint_64)((int_64)$5 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$8 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [2048])
	CALL eosio_assert(((int_64)$3 == (int_64)*($4 + [8])), [608])
	CALL eosio_assert(((int_64)$5 > (int_64)99999999), [2080])
	$6 = ($2 + [8])
	*(($8 = (($9 + [56]) + [8]))) = *($6)
	$7 = *($2)
	*((($9 + [24]) + [12])) = *((($9 + [56]) + [12]))
	*((($9 + [24]) + [8])) = *($8)
	*($9 + [56]) = $7
	*($9 + [28]) = *($9 + [60])
	*($9 + [24]) = *($9 + [56])
	CALL _ZN5eosio5token11sub_balanceEyNS_5assetE($0, $1, ($9 + [24]))
	*(($8 = (($9 + [40]) + [8]))) = *($6)
	$7 = *($2)
	*((($9 + [8]) + [12])) = *((($9 + [40]) + [12]))
	*((($9 + [8]) + [8])) = *($8)
	*($9 + [40]) = $7
	*($9 + [12]) = *($9 + [44])
	*($9 + [8]) = *($9 + [40])
	CALL _ZN5eosio5token4lockEyNS_5assetEy($0, $1, ($9 + [8]), $1)
	$6 = *($9 + [96])
	if ( ($6 == 0) ){ goto $label$6 }
	$0 = ($9 + [100])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$8 = ($8 + [-24])
	$2 = *($8)
	*($8) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	CALL $88($2)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$9 }
	$8 = *(($9 + [96]))
	goto $label$7 
	
.LABEL $label$8
	$8 = $6
	
.LABEL $label$7
	*($0) = $6
	CALL $88($8)
	
.LABEL $label$6
	*([0] + [4]) = ($9 + [112])
}

int_32 .FUNC $30 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)(uint_64)*(*($6) + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$0), [96])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4157508551318700032, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $6($0, $5)
	CALL eosio_assert(((int_32)*($6 + [40]) == (int_32)$0), [96])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC _ZN5eosio5token5closeEyNS_5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	*(($6 + [32])) = [0]
	*($6 + [16]) = (int_64)-1
	*($6 + [24]) = (int_64)0
	$4 = *($0)
	*($6) = $4
	*($6 + [8]) = $1
	$0 = [0]
	$2 = CALL db_find_i64($4, $1, (int_64)3607749779137757184, (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	if ( ((int_32)$2) < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $21($6, $2)
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)$6), [96])
	
.LABEL $label$1
	$2 = ((int_32)$0 != (int_32)[0])
	CALL eosio_assert($2, [1664])
	CALL eosio_assert((int_64)(*($0) == 0), [1744])
	CALL eosio_assert($2, [1792])
	CALL eosio_assert($2, [1840])
	$2 = CALL db_next_i64(*($0 + [20]), ($6 + [40]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	CALL $21($6, $2)
	
.LABEL $label$2
	CALL $32($6, $0)
	$3 = *($6 + [24])
	if ( ($3 == 0) ){ goto $label$3 }
	$5 = ($6 + [28])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $88($2)
	
.LABEL $label$7
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($6 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $3
	
.LABEL $label$4
	*($5) = $3
	CALL $88($0)
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [48])
}